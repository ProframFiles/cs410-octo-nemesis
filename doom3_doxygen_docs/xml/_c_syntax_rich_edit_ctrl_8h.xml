<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_c_syntax_rich_edit_ctrl_8h" kind="file">
    <compoundname>CSyntaxRichEditCtrl.h</compoundname>
    <includes local="yes">riched20.tlh</includes>
    <includedby refid="_c_syntax_rich_edit_ctrl_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.cpp</includedby>
    <includedby refid="_dialog_script_editor_8h" local="yes">E:/sources/3rd_party/DOOM/neo/tools/script/DialogScriptEditor.h</includedby>
    <includedby refid="_dialog_decl_editor_8h" local="yes">E:/sources/3rd_party/DOOM/neo/tools/decl/DialogDeclEditor.h</includedby>
    <includedby refid="_material_edit_view_8h" local="yes">E:/sources/3rd_party/DOOM/neo/tools/materialeditor/MaterialEditView.h</includedby>
    <incdepgraph>
      <node id="2668">
        <label>riched20.tlh</label>
      </node>
      <node id="2667">
        <label>E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h</label>
        <link refid="CSyntaxRichEditCtrl.h"/>
        <childnode refid="2668" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structkey_word__t" prot="public">keyWord_t</innerclass>
    <innerclass refid="class_c_syntax_rich_edit_ctrl" prot="public">CSyntaxRichEditCtrl</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_c_syntax_rich_edit_ctrl_8h_1abeb05785aa0e73e2bfc353497bd47134" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* objectMemberCallback_t)(const char *objectName, CListBox &amp;listBox)</definition>
        <argsstring>)(const char *objectName, CListBox &amp;listBox)</argsstring>
        <name>objectMemberCallback_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" line="90" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_c_syntax_rich_edit_ctrl_8h_1a12dd39bac94cdd097c4d6273e04e95e1" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* toolTipCallback_t)(const char *name, CString &amp;string)</definition>
        <argsstring>)(const char *name, CString &amp;string)</argsstring>
        <name>toolTipCallback_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" line="91" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_c_syntax_rich_edit_ctrl_8h_1a30acfc5e2c03951da0b749b499351650" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* FONT_NAME</definition>
        <argsstring></argsstring>
        <name>FONT_NAME</name>
        <initializer>= &quot;Courier&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" line="60" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_c_syntax_rich_edit_ctrl_8h_1a19ee69250019f12cbc8410f698937dbb" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int FONT_HEIGHT</definition>
        <argsstring></argsstring>
        <name>FONT_HEIGHT</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" line="61" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_c_syntax_rich_edit_ctrl_8h_1a96ac9ed9a60f916a25c5829865eecd1f" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int FONT_WIDTH</definition>
        <argsstring></argsstring>
        <name>FONT_WIDTH</name>
        <initializer>= 8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" line="62" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_c_syntax_rich_edit_ctrl_8h_1ac9dd85dd76a5112dd197ae704e1b903b" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int TAB_SIZE</definition>
        <argsstring></argsstring>
        <name>TAB_SIZE</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" line="63" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_c_syntax_rich_edit_ctrl_8h_1a277b6e75cdc57ccc185d655988372113" prot="public" static="yes" mutable="no">
        <type>const COLORREF</type>
        <definition>const COLORREF SRE_COLOR_BLACK</definition>
        <argsstring></argsstring>
        <name>SRE_COLOR_BLACK</name>
        <initializer>= RGB(   0,   0,   0 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" line="65" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_c_syntax_rich_edit_ctrl_8h_1acecc0c3aab8b89512d74c7641afa7994" prot="public" static="yes" mutable="no">
        <type>const COLORREF</type>
        <definition>const COLORREF SRE_COLOR_WHITE</definition>
        <argsstring></argsstring>
        <name>SRE_COLOR_WHITE</name>
        <initializer>= RGB( 255, 255, 255 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" line="66" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_c_syntax_rich_edit_ctrl_8h_1ab0281d98514a7b6e4a2b10074138f20e" prot="public" static="yes" mutable="no">
        <type>const COLORREF</type>
        <definition>const COLORREF SRE_COLOR_RED</definition>
        <argsstring></argsstring>
        <name>SRE_COLOR_RED</name>
        <initializer>= RGB( 255,   0,   0 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" line="67" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_c_syntax_rich_edit_ctrl_8h_1a7b87daa0c8ed4d6250ce30f5a82023ad" prot="public" static="yes" mutable="no">
        <type>const COLORREF</type>
        <definition>const COLORREF SRE_COLOR_GREEN</definition>
        <argsstring></argsstring>
        <name>SRE_COLOR_GREEN</name>
        <initializer>= RGB(   0, 255,   0 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" line="68" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_c_syntax_rich_edit_ctrl_8h_1adcad8988d46ae3071bca68235e06b72d" prot="public" static="yes" mutable="no">
        <type>const COLORREF</type>
        <definition>const COLORREF SRE_COLOR_BLUE</definition>
        <argsstring></argsstring>
        <name>SRE_COLOR_BLUE</name>
        <initializer>= RGB(   0,   0, 255 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" line="69" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_c_syntax_rich_edit_ctrl_8h_1aac0280abd5b3b584e252f4eb1e731a1c" prot="public" static="yes" mutable="no">
        <type>const COLORREF</type>
        <definition>const COLORREF SRE_COLOR_YELLOW</definition>
        <argsstring></argsstring>
        <name>SRE_COLOR_YELLOW</name>
        <initializer>= RGB( 255, 255,   0 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" line="70" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_c_syntax_rich_edit_ctrl_8h_1a1232e72df89c637ff9ddb80895e107df" prot="public" static="yes" mutable="no">
        <type>const COLORREF</type>
        <definition>const COLORREF SRE_COLOR_MAGENTA</definition>
        <argsstring></argsstring>
        <name>SRE_COLOR_MAGENTA</name>
        <initializer>= RGB( 255,   0, 255 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" line="71" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_c_syntax_rich_edit_ctrl_8h_1a0fed7bfadf0f434e10b374a735a5a992" prot="public" static="yes" mutable="no">
        <type>const COLORREF</type>
        <definition>const COLORREF SRE_COLOR_CYAN</definition>
        <argsstring></argsstring>
        <name>SRE_COLOR_CYAN</name>
        <initializer>= RGB(   0, 255, 255 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" line="72" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_c_syntax_rich_edit_ctrl_8h_1a574ec897e3712d3fd44e42f42ce317ac" prot="public" static="yes" mutable="no">
        <type>const COLORREF</type>
        <definition>const COLORREF SRE_COLOR_ORANGE</definition>
        <argsstring></argsstring>
        <name>SRE_COLOR_ORANGE</name>
        <initializer>= RGB( 255, 128,   0 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" line="73" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_c_syntax_rich_edit_ctrl_8h_1a99669f22734be74b5d8721f0b5dba752" prot="public" static="yes" mutable="no">
        <type>const COLORREF</type>
        <definition>const COLORREF SRE_COLOR_PURPLE</definition>
        <argsstring></argsstring>
        <name>SRE_COLOR_PURPLE</name>
        <initializer>= RGB( 150,   0, 150 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" line="74" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_c_syntax_rich_edit_ctrl_8h_1af6b900137b7e583e27762c2334ff8a37" prot="public" static="yes" mutable="no">
        <type>const COLORREF</type>
        <definition>const COLORREF SRE_COLOR_PINK</definition>
        <argsstring></argsstring>
        <name>SRE_COLOR_PINK</name>
        <initializer>= RGB( 186, 102, 123 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" line="75" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_c_syntax_rich_edit_ctrl_8h_1aa197960aa0d03f72308b4ef026df16b7" prot="public" static="yes" mutable="no">
        <type>const COLORREF</type>
        <definition>const COLORREF SRE_COLOR_GREY</definition>
        <argsstring></argsstring>
        <name>SRE_COLOR_GREY</name>
        <initializer>= RGB(  85,  85,  85 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" line="76" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_c_syntax_rich_edit_ctrl_8h_1a5bda44d04cb329d8193fcb2533c02b43" prot="public" static="yes" mutable="no">
        <type>const COLORREF</type>
        <definition>const COLORREF SRE_COLOR_BROWN</definition>
        <argsstring></argsstring>
        <name>SRE_COLOR_BROWN</name>
        <initializer>= RGB( 100,  90,  20 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" line="77" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_c_syntax_rich_edit_ctrl_8h_1a19907d4c67efebadfa5721a4ae42746a" prot="public" static="yes" mutable="no">
        <type>const COLORREF</type>
        <definition>const COLORREF SRE_COLOR_LIGHT_GREY</definition>
        <argsstring></argsstring>
        <name>SRE_COLOR_LIGHT_GREY</name>
        <initializer>= RGB( 170, 170, 170 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" line="78" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_c_syntax_rich_edit_ctrl_8h_1a9aacfe9a193ac7ab8f8088bf869e63d8" prot="public" static="yes" mutable="no">
        <type>const COLORREF</type>
        <definition>const COLORREF SRE_COLOR_LIGHT_BROWN</definition>
        <argsstring></argsstring>
        <name>SRE_COLOR_LIGHT_BROWN</name>
        <initializer>= RGB( 170, 150,  20 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" line="79" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_c_syntax_rich_edit_ctrl_8h_1ad1e44c4df9c1ee199626e75ccce98fee" prot="public" static="yes" mutable="no">
        <type>const COLORREF</type>
        <definition>const COLORREF SRE_COLOR_DARK_GREEN</definition>
        <argsstring></argsstring>
        <name>SRE_COLOR_DARK_GREEN</name>
        <initializer>= RGB(   0, 128,   0 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" line="80" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_c_syntax_rich_edit_ctrl_8h_1a01362fb9e6c91f9c1048326d93ced579" prot="public" static="yes" mutable="no">
        <type>const COLORREF</type>
        <definition>const COLORREF SRE_COLOR_DARK_CYAN</definition>
        <argsstring></argsstring>
        <name>SRE_COLOR_DARK_CYAN</name>
        <initializer>= RGB(   0, 150, 150 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" line="81" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_c_syntax_rich_edit_ctrl_8h_1a21740f35f93b7ee3bcd0fbe1ab65f208" prot="public" static="yes" mutable="no">
        <type>const COLORREF</type>
        <definition>const COLORREF SRE_COLOR_DARK_YELLOW</definition>
        <argsstring></argsstring>
        <name>SRE_COLOR_DARK_YELLOW</name>
        <initializer>= RGB( 220, 200,  20 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" line="82" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__CSYNTAXRICHEDITCTR_H__</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__CSYNTAXRICHEDITCTR_H__</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="33"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="34"><highlight class="comment"></highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/><sp/><sp/>Rich<sp/>Edit<sp/>Control<sp/>with:</highlight></codeline>
<codeline lineno="36"><highlight class="comment"></highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>syntax<sp/>highlighting</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>braced<sp/>section<sp/>highlighting</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>braced<sp/>section<sp/>auto-indentation</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>multi-line<sp/>tabs</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>keyword<sp/>auto-completion</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>object<sp/>member<sp/>auto-completion</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>keyword<sp/>tool<sp/>tip</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>function<sp/>parameter<sp/>tool<sp/>tip</highlight></codeline>
<codeline lineno="45"><highlight class="comment"></highlight></codeline>
<codeline lineno="46"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="47"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>use<sp/>#import<sp/>on<sp/>Vista<sp/>to<sp/>generate<sp/>.tlh<sp/>header<sp/>to<sp/>copy<sp/>from<sp/>intermediate<sp/>compile<sp/>directory<sp/>to<sp/>local<sp/>directory<sp/>for<sp/>subsequent<sp/>builds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>rename:<sp/>avoids<sp/>warning<sp/>C4278:<sp/>&apos;FindText&apos;:<sp/>identifier<sp/>in<sp/>type<sp/>library<sp/>&apos;riched20.dll&apos;<sp/>is<sp/>already<sp/>a<sp/>macro;<sp/>use<sp/>the<sp/>&apos;rename&apos;<sp/>qualifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>no_auto_exclude:<sp/>avoids<sp/>warnings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>no_namespace:<sp/>no<sp/>longer<sp/>using<sp/>this<sp/>option,<sp/>which<sp/>avoids<sp/>variable<sp/>redifinition<sp/>compile<sp/>errors<sp/>on<sp/>Vista</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>GENERATE_TLH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GENERATE_TLH</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>import<sp/>&quot;riched20.dll&quot;</highlight><highlight class="normal"><sp/>raw_interfaces_only,<sp/>raw_native_types,<sp/>named_guids,<sp/>no_auto_exclude,<sp/>no_implementation,<sp/>rename(<sp/></highlight><highlight class="stringliteral">&quot;FindText&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;FindShit&quot;</highlight><highlight class="normal"><sp/>)<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;riched20.tlh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/>FONT_NAME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Courier&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FONT_HEIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FONT_WIDTH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TAB_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>COLORREF<sp/><sp/><sp/>SRE_COLOR_BLACK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RGB(<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0<sp/>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>COLORREF<sp/><sp/><sp/>SRE_COLOR_WHITE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RGB(<sp/>255,<sp/>255,<sp/>255<sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>COLORREF<sp/><sp/><sp/>SRE_COLOR_RED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RGB(<sp/>255,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0<sp/>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>COLORREF<sp/><sp/><sp/>SRE_COLOR_GREEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RGB(<sp/><sp/><sp/>0,<sp/>255,<sp/><sp/><sp/>0<sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>COLORREF<sp/><sp/><sp/>SRE_COLOR_BLUE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RGB(<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/>255<sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>COLORREF<sp/><sp/><sp/>SRE_COLOR_YELLOW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RGB(<sp/>255,<sp/>255,<sp/><sp/><sp/>0<sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>COLORREF<sp/><sp/><sp/>SRE_COLOR_MAGENTA<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RGB(<sp/>255,<sp/><sp/><sp/>0,<sp/>255<sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>COLORREF<sp/><sp/><sp/>SRE_COLOR_CYAN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RGB(<sp/><sp/><sp/>0,<sp/>255,<sp/>255<sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>COLORREF<sp/><sp/><sp/>SRE_COLOR_ORANGE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RGB(<sp/>255,<sp/>128,<sp/><sp/><sp/>0<sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>COLORREF<sp/><sp/><sp/>SRE_COLOR_PURPLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RGB(<sp/>150,<sp/><sp/><sp/>0,<sp/>150<sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>COLORREF<sp/><sp/><sp/>SRE_COLOR_PINK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RGB(<sp/>186,<sp/>102,<sp/>123<sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>COLORREF<sp/><sp/><sp/>SRE_COLOR_GREY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RGB(<sp/><sp/>85,<sp/><sp/>85,<sp/><sp/>85<sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>COLORREF<sp/><sp/><sp/>SRE_COLOR_BROWN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RGB(<sp/>100,<sp/><sp/>90,<sp/><sp/>20<sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>COLORREF<sp/><sp/><sp/>SRE_COLOR_LIGHT_GREY<sp/><sp/><sp/><sp/>=<sp/>RGB(<sp/>170,<sp/>170,<sp/>170<sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>COLORREF<sp/><sp/><sp/>SRE_COLOR_LIGHT_BROWN<sp/><sp/><sp/>=<sp/>RGB(<sp/>170,<sp/>150,<sp/><sp/>20<sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>COLORREF<sp/><sp/><sp/>SRE_COLOR_DARK_GREEN<sp/><sp/><sp/><sp/>=<sp/>RGB(<sp/><sp/><sp/>0,<sp/>128,<sp/><sp/><sp/>0<sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>COLORREF<sp/><sp/><sp/>SRE_COLOR_DARK_CYAN<sp/><sp/><sp/><sp/><sp/>=<sp/>RGB(<sp/><sp/><sp/>0,<sp/>150,<sp/>150<sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>COLORREF<sp/><sp/><sp/>SRE_COLOR_DARK_YELLOW<sp/><sp/><sp/>=<sp/>RGB(<sp/>220,<sp/>200,<sp/><sp/>20<sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="structkey_word__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyWord;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>COLORREF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}<sp/><ref refid="structkey_word__t" kindref="compound">keyWord_t</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*objectMemberCallback_t)(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*objectName,<sp/>CListBox<sp/>&amp;listBox<sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*toolTipCallback_t)(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/>CString<sp/>&amp;string<sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="class_c_syntax_rich_edit_ctrl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_syntax_rich_edit_ctrl" kindref="compound">CSyntaxRichEditCtrl</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>CRichEditCtrl<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_syntax_rich_edit_ctrl" kindref="compound">CSyntaxRichEditCtrl</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~<ref refid="class_c_syntax_rich_edit_ctrl" kindref="compound">CSyntaxRichEditCtrl</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Init(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetCaseSensitive(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>caseSensitive<sp/>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllowPathNames(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow<sp/>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EnableKeyWordAutoCompletion(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetKeyWords(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structkey_word__t" kindref="compound">keyWord_t</ref><sp/>kws[]<sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LoadKeyWordsFromFile(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fileName<sp/>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetObjectMemberCallback(<sp/>objectMemberCallback_t<sp/>callback<sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetFunctionParmCallback(<sp/>toolTipCallback_t<sp/>callback<sp/>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetToolTipCallback(<sp/>toolTipCallback_t<sp/>callback<sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetDefaultColor(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>COLORREF<sp/>color<sp/>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetCommentColor(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>COLORREF<sp/>color<sp/>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetStringColor(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>COLORREF<sp/>color,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>COLORREF<sp/>altColor<sp/>=<sp/>-1<sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLiteralColor(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>COLORREF<sp/>color<sp/>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>COLORREF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetForeColor(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>charIndex<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>COLORREF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetBackColor(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>charIndex<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetCursorPos(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;line,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;column,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;character<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>CHARRANGE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetVisibleRange(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetText(<sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>&amp;text<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetText(<sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>&amp;text,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startCharIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endCharIndex<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetText(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text<sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GoToLine(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line<sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FindNext(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*find,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>matchCase,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>matchWholeWords,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>searchForward<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReplaceAll(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*find,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*replace,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>matchCase,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>matchWholeWords<sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReplaceText(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startCharIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endCharIndex,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*replace<sp/>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OnToolHitTest(<sp/>CPoint<sp/>point,<sp/>TOOLINFO*<sp/>pTI<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>afx_msg<sp/>BOOL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OnToolTipNotify(<sp/>UINT<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>NMHDR<sp/>*pNMHDR,<sp/>LRESULT<sp/>*pResult<sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>afx_msg<sp/>UINT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OnGetDlgCode();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>afx_msg<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OnChar(<sp/>UINT<sp/>nChar,<sp/>UINT<sp/>nRepCnt,<sp/>UINT<sp/>nFlags<sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>afx_msg<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OnKeyDown(<sp/>UINT<sp/>nKey,<sp/>UINT<sp/>nRepCnt,<sp/>UINT<sp/>nFlags<sp/>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>afx_msg<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OnLButtonDown(<sp/>UINT<sp/>nFlags,<sp/>CPoint<sp/>point<sp/>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>afx_msg<sp/>BOOL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OnMouseWheel(<sp/>UINT<sp/>nFlags,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>zDelta,<sp/>CPoint<sp/>pt<sp/>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>afx_msg<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OnMouseMove(<sp/>UINT<sp/>nFlags,<sp/>CPoint<sp/>point<sp/>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>afx_msg<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OnVScroll(<sp/>UINT<sp/>nSBCode,<sp/>UINT<sp/>nPos,<sp/>CScrollBar*<sp/>pScrollBar<sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>afx_msg<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OnSize(<sp/>UINT<sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cy<sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>afx_msg<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OnProtected(<sp/>NMHDR<sp/>*pNMHDR,<sp/>LRESULT<sp/>*pResult<sp/>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>afx_msg<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OnChange();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>afx_msg<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OnAutoCompleteListBoxChange();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>afx_msg<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OnAutoCompleteListBoxDblClk();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>DECLARE_MESSAGE_MAP()</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>CHARFORMAT2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defaultCharFormat;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>COLORREF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defaultColor;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>COLORREF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>singleLineCommentColor;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>COLORREF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multiLineCommentColor;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>COLORREF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringColor[2];</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>COLORREF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>literalColor;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>COLORREF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>braceHighlightColor;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CT_WHITESPACE,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CT_COMMENT,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CT_STRING,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CT_LITERAL,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CT_NUMBER,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CT_NAME,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CT_PUNCTUATION</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>charType_t;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>charType[256];</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_list" kindref="compound">idList&lt;keyWord_t&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyWordsFromFile;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structkey_word__t" kindref="compound">keyWord_t</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyWords;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyWordLengths;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>COLORREF<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyWordColors;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_hash_index" kindref="compound">idHashIndex</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyWordHash;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caseSensitive;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allowPathNames;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyWordAutoCompletion;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>objectMemberCallback_t<sp/><sp/>GetObjectMembers;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>toolTipCallback_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetFunctionParms;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>toolTipCallback_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetToolTip;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>run-time<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>tom::ITextDocument<sp/>*<sp/><sp/><sp/><sp/>m_TextDoc;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>tom::ITextFont<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_DefaultFont;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>CHARRANGE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateRange;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateSyntaxHighlighting;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringColorIndex;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringColorLine;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>autoCompleteStart;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>CListBox<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>autoCompleteListBox;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>funcParmToolTipStart;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>CEdit<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>funcParmToolTip;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bracedSection[2];</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>CPoint<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mousePoint;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>CToolTipCtrl<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyWordToolTip;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>TCHAR<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pchTip;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>WCHAR<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pwchTip;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InitFont(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InitSyntaxHighlighting(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetCharType(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type<sp/>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetDefaultFont(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startCharIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endCharIndex<sp/>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetColor(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startCharIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endCharIndex,<sp/>COLORREF<sp/>foreColor,<sp/>COLORREF<sp/>backColor,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bold<sp/>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FreeKeyWordsFromFile(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FindKeyWord(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*keyWord,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HighlightSyntax(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startCharIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endCharIndex<sp/>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateVisibleRange(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetNameBeforeCurrentSelection(<sp/>CString<sp/>&amp;name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;charIndex<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetNameForMousePosition(<sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>&amp;name<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AutoCompleteInsertText(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AutoCompleteUpdate(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AutoCompleteShow(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>charIndex<sp/>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AutoCompleteHide(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ToolTipShow(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>charIndex,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ToolTipHide(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BracedSectionStart(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>braceStartChar,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>braceEndChar<sp/>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BracedSectionEnd(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>braceStartChar,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>braceEndChar<sp/>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BracedSectionAdjustEndTabs(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BracedSectionShow(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BracedSectionHide(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal">};</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!__CSYNTAXRICHEDITCTR_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/CSyntaxRichEditCtrl.h"/>
  </compounddef>
</doxygen>
