<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_cinematic_8cpp" kind="file">
    <compoundname>Cinematic.cpp</compoundname>
    <includes refid="precompiled_8h" local="yes">../idlib/precompiled.h</includes>
    <includes refid="jpeglib_8h" local="yes">jpeg-6/jpeglib.h</includes>
    <includes refid="tr__local_8h" local="yes">tr_local.h</includes>
    <innerclass refid="classid_cinematic_local" prot="public">idCinematicLocal</innerclass>
    <innerclass refid="structmy__source__mgr" prot="public">my_source_mgr</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_cinematic_8cpp_1ad5c3cdfae3019b8223973041a2a1304b" prot="public" static="no">
        <name>JPEG_INTERNALS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="32" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_cinematic_8cpp_1aa1bdcefc18a07e64a0f2d1da64770895" prot="public" static="no">
        <name>CIN_system</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="39" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_cinematic_8cpp_1a8e6b908d68b8a5757c7a91127647f1ea" prot="public" static="no">
        <name>CIN_loop</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="40" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_cinematic_8cpp_1a18b3901bcba914125dd6452749c21ee6" prot="public" static="no">
        <name>CIN_hold</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="41" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_cinematic_8cpp_1a9db3fa2b78fafb0bd9eb1b12ab230f33" prot="public" static="no">
        <name>CIN_silent</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="42" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_cinematic_8cpp_1a432987082094aac63ab88b0086b0d42e" prot="public" static="no">
        <name>CIN_shader</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="43" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_cinematic_8cpp_1a978338a61e63ab71954a2640d35c0a1d" prot="public" static="no">
        <name>VQ2TO4</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <param><defname>d</defname></param>
        <initializer>{ \
    	*c++ = a[0];	\
	*d++ = a[0];	\
	*d++ = a[0];	\
	*c++ = a[1];	\
	*d++ = a[1];	\
	*d++ = a[1];	\
	*c++ = b[0];	\
	*d++ = b[0];	\
	*d++ = b[0];	\
	*c++ = b[1];	\
	*d++ = b[1];	\
	*d++ = b[1];	\
	*d++ = a[0];	\
	*d++ = a[0];	\
	*d++ = a[1];	\
	*d++ = a[1];	\
	*d++ = b[0];	\
	*d++ = b[0];	\
	*d++ = b[1];	\
	*d++ = b[1];	\
	a += 2; b += 2; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="893" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="893" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_cinematic_8cpp_1a3e98a2aeb7d5cbabe968f0c07effcef9" prot="public" static="no">
        <name>VQ2TO2</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <param><defname>d</defname></param>
        <initializer>{ \
	*c++ = *a;	\
	*d++ = *a;	\
	*d++ = *a;	\
	*c++ = *b;	\
	*d++ = *b;	\
	*d++ = *b;	\
	*d++ = *a;	\
	*d++ = *a;	\
	*d++ = *b;	\
	*d++ = *b;	\
	a++; b++; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="916" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="916" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_cinematic_8cpp_1a8f53190540130db759820c0d9ab78f60" prot="public" static="no">
        <name>INPUT_BUF_SIZE</name>
        <initializer>32768	/* choose an efficiently fread&apos;able size */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="1298" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="1298" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_cinematic_8cpp_1a49288434c1d7bc0883779c6489426881" prot="public" static="no">
        <type><ref refid="structmy__source__mgr" kindref="compound">my_source_mgr</ref> *</type>
        <definition>typedef my_source_mgr* my_src_ptr</definition>
        <argsstring></argsstring>
        <name>my_src_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="1296" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="1296" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_cinematic_8cpp_1a6a33b4fa12edb2622705888a771fd8b0" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int DEFAULT_CIN_WIDTH</definition>
        <argsstring></argsstring>
        <name>DEFAULT_CIN_WIDTH</name>
        <initializer>= 512</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="117" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_cinematic_8cpp_1aaa55f0faeeee7065b439dea860d325f3" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int DEFAULT_CIN_HEIGHT</definition>
        <argsstring></argsstring>
        <name>DEFAULT_CIN_HEIGHT</name>
        <initializer>= 512</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="118" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_cinematic_8cpp_1ac67bdd8df838907d4ebfd6efe9ad086a" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int MAXSIZE</definition>
        <argsstring></argsstring>
        <name>MAXSIZE</name>
        <initializer>=	8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="119" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_cinematic_8cpp_1a7dd6040e24b3704384f3506ff9786396" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int MINSIZE</definition>
        <argsstring></argsstring>
        <name>MINSIZE</name>
        <initializer>=	4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="120" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_cinematic_8cpp_1a998bb429e2d0394d123eccee3e4f5873" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int ROQ_FILE</definition>
        <argsstring></argsstring>
        <name>ROQ_FILE</name>
        <initializer>= 0x1084</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="122" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_cinematic_8cpp_1a0576ba3124d9f2ffdb2162d0fe250e34" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int ROQ_QUAD</definition>
        <argsstring></argsstring>
        <name>ROQ_QUAD</name>
        <initializer>= 0x1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="123" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_cinematic_8cpp_1afa574a454dd617f400694d9b7f5b0300" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int ROQ_QUAD_INFO</definition>
        <argsstring></argsstring>
        <name>ROQ_QUAD_INFO</name>
        <initializer>= 0x1001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="124" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_cinematic_8cpp_1acc71eafa713a070110784464180c0006" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int ROQ_CODEBOOK</definition>
        <argsstring></argsstring>
        <name>ROQ_CODEBOOK</name>
        <initializer>= 0x1002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="125" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_cinematic_8cpp_1a3cd74ee3fb7cbe699c19efbda8945ce2" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int ROQ_QUAD_VQ</definition>
        <argsstring></argsstring>
        <name>ROQ_QUAD_VQ</name>
        <initializer>= 0x1011</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="126" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_cinematic_8cpp_1a2b3c6fcae0fbcb1875821dda4c4cc9b9" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int ROQ_QUAD_JPEG</definition>
        <argsstring></argsstring>
        <name>ROQ_QUAD_JPEG</name>
        <initializer>= 0x1012</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="127" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_cinematic_8cpp_1af7068fdc350336171d25d28770222308" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int ROQ_QUAD_HANG</definition>
        <argsstring></argsstring>
        <name>ROQ_QUAD_HANG</name>
        <initializer>= 0x1013</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="128" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_cinematic_8cpp_1aac09a4c91c1fce84f992aa4d33ed06b7" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int ROQ_PACKET</definition>
        <argsstring></argsstring>
        <name>ROQ_PACKET</name>
        <initializer>= 0x1030</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="129" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_cinematic_8cpp_1a6966157d03de36322e6b24840999177a" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int ZA_SOUND_MONO</definition>
        <argsstring></argsstring>
        <name>ZA_SOUND_MONO</name>
        <initializer>= 0x1020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="130" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_cinematic_8cpp_1aa39282b3282ace221a7553b8ae454af6" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int ZA_SOUND_STEREO</definition>
        <argsstring></argsstring>
        <name>ZA_SOUND_STEREO</name>
        <initializer>= 0x1021</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="131" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_cinematic_8cpp_1af4b595575f0e68eb76da9f1e37f2030c" prot="public" static="yes" mutable="no">
        <type>long</type>
        <definition>long ROQ_YY_tab[256]</definition>
        <argsstring>[256]</argsstring>
        <name>ROQ_YY_tab</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="134" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_cinematic_8cpp_1a29d9522e1ad9e248361ed88c93ba09b1" prot="public" static="yes" mutable="no">
        <type>long</type>
        <definition>long ROQ_UB_tab[256]</definition>
        <argsstring>[256]</argsstring>
        <name>ROQ_UB_tab</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="135" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_cinematic_8cpp_1a49dadd78b95b0e1c593d2bb6bdf0406e" prot="public" static="yes" mutable="no">
        <type>long</type>
        <definition>long ROQ_UG_tab[256]</definition>
        <argsstring>[256]</argsstring>
        <name>ROQ_UG_tab</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="136" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_cinematic_8cpp_1af89876849ff910d3a7add65381cd844f" prot="public" static="yes" mutable="no">
        <type>long</type>
        <definition>long ROQ_VG_tab[256]</definition>
        <argsstring>[256]</argsstring>
        <name>ROQ_VG_tab</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="137" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_cinematic_8cpp_1adf06b99254a70961e10114ae39c7a017" prot="public" static="yes" mutable="no">
        <type>long</type>
        <definition>long ROQ_VR_tab[256]</definition>
        <argsstring>[256]</argsstring>
        <name>ROQ_VR_tab</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="138" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_cinematic_8cpp_1ab27c36d54156f15290caf54726576b0f" prot="public" static="yes" mutable="no">
        <type>byte *</type>
        <definition>byte* file</definition>
        <argsstring></argsstring>
        <name>file</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="139" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_cinematic_8cpp_1aee0c94fc492e828ca94d4565ac0297a0" prot="public" static="yes" mutable="no">
        <type>unsigned short *</type>
        <definition>unsigned short* vq2</definition>
        <argsstring></argsstring>
        <name>vq2</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="140" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_cinematic_8cpp_1a154d0527338fc0b482c35cd993e99472" prot="public" static="yes" mutable="no">
        <type>unsigned short *</type>
        <definition>unsigned short* vq4</definition>
        <argsstring></argsstring>
        <name>vq4</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="141" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_cinematic_8cpp_1a72862cd5a97951351b5de54090ce7e3d" prot="public" static="yes" mutable="no">
        <type>unsigned short *</type>
        <definition>unsigned short* vq8</definition>
        <argsstring></argsstring>
        <name>vq8</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="142" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_cinematic_8cpp_1a45811748d45af97d5fb6cb2417563e57" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structjpeg__error__mgr" kindref="compound">jpeg_error_mgr</ref></type>
        <definition>struct jpeg_error_mgr jerr</definition>
        <argsstring></argsstring>
        <name>jerr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="1296" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="1301" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_cinematic_8cpp_1ad8837beb9a73638ed25ee680b7022541" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boolean</type>
        <definition>static boolean fill_input_buffer</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>fill_input_buffer</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="1337" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="1337" bodyend="1359"/>
      </memberdef>
      <memberdef kind="function" id="_cinematic_8cpp_1acad16ec325c7f0da2c4f1c275bfb140e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void init_source</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>init_source</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="1366" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="1366" bodyend="1375"/>
      </memberdef>
      <memberdef kind="function" id="_cinematic_8cpp_1abfda68eeaf5dd42f3c3e536d3e7e9ac4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void skip_input_data</definition>
        <argsstring>(j_decompress_ptr cinfo, long num_bytes)</argsstring>
        <name>skip_input_data</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type>long</type>
          <declname>num_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="1390" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="1390" bodyend="1403"/>
      </memberdef>
      <memberdef kind="function" id="_cinematic_8cpp_1a88ff96ce0715859d252807775c34c8b3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void term_source</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>term_source</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="1425" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="1425" bodyend="1429"/>
      </memberdef>
      <memberdef kind="function" id="_cinematic_8cpp_1a1cb5e534f697ed3d7d644a36146707bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jpeg_memory_src</definition>
        <argsstring>(j_decompress_ptr cinfo, byte *infile, int size)</argsstring>
        <name>jpeg_memory_src</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type>byte *</type>
          <declname>infile</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="1432" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="1432" bodyend="1463"/>
      </memberdef>
      <memberdef kind="function" id="_cinematic_8cpp_1af91eee5ee34310b90bfcf5574add276f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int JPEGBlit</definition>
        <argsstring>(byte *wStatus, byte *data, int datasize)</argsstring>
        <name>JPEGBlit</name>
        <param>
          <type>byte *</type>
          <declname>wStatus</declname>
        </param>
        <param>
          <type>byte *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>datasize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" line="1465" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp" bodystart="1465" bodyend="1583"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../idlib/precompiled.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>hdrstop</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>JPEG_INTERNALS</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jpeg-6/jpeglib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tr_local.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CIN_system<sp/><sp/>1</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CIN_loop<sp/><sp/><sp/><sp/>2</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CIN_hold<sp/><sp/><sp/><sp/>4</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CIN_silent<sp/><sp/>8</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CIN_shader<sp/><sp/>16</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classid_cinematic_local" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classid_cinematic_local" kindref="compound">idCinematicLocal</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classid_cinematic" kindref="compound">idCinematic</ref><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_cinematic_local" kindref="compound">idCinematicLocal</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~<ref refid="classid_cinematic_local" kindref="compound">idCinematicLocal</ref>();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InitFromFile(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*qpath,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>looping<sp/>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structcin_data__t" kindref="compound">cinData_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageForTime(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>milliseconds<sp/>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AnimationLength();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Close();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ResetTime(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mcomp[256];</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qStatus[2];</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileName;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CIN_WIDTH,<sp/>CIN_HEIGHT;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_file" kindref="compound">idFile</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iFile;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>cinStatus_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tfps;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoQPlayed;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROQSize;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoQFrameSize;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>onQuad;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numQuads;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samplesPerLine;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roq_id;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>screenDelta;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samplesPerPixel;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>defaults<sp/>to<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xsize,<sp/>ysize,<sp/>maxsize,<sp/>minsize;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalBuffer0;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roq_flags;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roqF0;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roqF1;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[2];</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roqFPS;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawX,<sp/>drawY;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>animationLength;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startTime;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameRate;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>looping;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dirty;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>half;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smootheddouble;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inMemory;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoQ_init(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blitVQQuad32fs(<sp/>byte<sp/>**status,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data<sp/>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoQShutdown(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoQInterrupt(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>move8_32(<sp/>byte<sp/>*src,<sp/>byte<sp/>*dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spl<sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>move4_32(<sp/>byte<sp/>*src,<sp/>byte<sp/>*dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spl<sp/>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blit8_32(<sp/>byte<sp/>*src,<sp/>byte<sp/>*dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spl<sp/>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blit4_32(<sp/>byte<sp/>*src,<sp/>byte<sp/>*dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spl<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blit2_32(<sp/>byte<sp/>*src,<sp/>byte<sp/>*dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spl<sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yuv_to_rgb(<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>u,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>v<sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yuv_to_rgb24(<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>u,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>v<sp/>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decodeCodeBook(<sp/>byte<sp/>*input,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>roq_flags<sp/>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recurseQuad(<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>startX,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>startY,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>quadSize,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>xOff,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>yOff<sp/>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setupQuad(<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>xOff,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>yOff<sp/>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readQuadInfo(<sp/>byte<sp/>*qData<sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoQPrepMcomp(<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>xoff,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>yoff<sp/>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoQReset();</highlight></codeline>
<codeline lineno="115"><highlight class="normal">};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DEFAULT_CIN_WIDTH<sp/><sp/><sp/><sp/><sp/>=<sp/>512;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DEFAULT_CIN_HEIGHT<sp/><sp/><sp/><sp/>=<sp/>512;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MAXSIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>8;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MINSIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>4;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ROQ_FILE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x1084;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ROQ_QUAD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x1000;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ROQ_QUAD_INFO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x1001;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ROQ_CODEBOOK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x1002;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ROQ_QUAD_VQ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x1011;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ROQ_QUAD_JPEG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x1012;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ROQ_QUAD_HANG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x1013;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ROQ_PACKET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x1030;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZA_SOUND_MONO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x1020;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZA_SOUND_STEREO<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x1021;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/>temporary<sp/>buffers<sp/>used<sp/>by<sp/>all<sp/>cinematics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROQ_YY_tab[256];</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROQ_UB_tab[256];</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROQ_UG_tab[256];</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROQ_VG_tab[256];</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROQ_VR_tab[256];</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>byte<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*<sp/>vq2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*<sp/>vq4<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*<sp/>vq8<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//===========================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="149"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="150"><highlight class="comment">idCinematicLocal::InitCinematic</highlight></codeline>
<codeline lineno="151"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="152"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idCinematic::InitCinematic(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t_ub,t_vr,t_ug,t_vg;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>generate<sp/>YUV<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>t_ub<sp/>=<sp/>(1.77200f/2.0f)<sp/>*<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(1&lt;&lt;6)<sp/>+<sp/>0.5f;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>t_vr<sp/>=<sp/>(1.40200f/2.0f)<sp/>*<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(1&lt;&lt;6)<sp/>+<sp/>0.5f;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>t_ug<sp/>=<sp/>(0.34414f/2.0f)<sp/>*<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(1&lt;&lt;6)<sp/>+<sp/>0.5f;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>t_vg<sp/>=<sp/>(0.71414f/2.0f)<sp/>*<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(1&lt;&lt;6)<sp/>+<sp/>0.5f;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>256;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>(float)(2<sp/>*<sp/>i<sp/>-<sp/>255);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROQ_UB_tab[i]<sp/>=<sp/>(long)(<sp/>(<sp/>t_ub<sp/>*<sp/>x)<sp/>+<sp/>(1&lt;&lt;5));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROQ_VR_tab[i]<sp/>=<sp/>(long)(<sp/>(<sp/>t_vr<sp/>*<sp/>x)<sp/>+<sp/>(1&lt;&lt;5));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROQ_UG_tab[i]<sp/>=<sp/>(long)(<sp/>(-t_ug<sp/>*<sp/>x)<sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROQ_VG_tab[i]<sp/>=<sp/>(long)(<sp/>(-t_vg<sp/>*<sp/>x)<sp/>+<sp/>(1&lt;&lt;5));</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROQ_YY_tab[i]<sp/>=<sp/>(long)(<sp/>(i<sp/>&lt;&lt;<sp/>6)<sp/>|<sp/>(i<sp/>&gt;&gt;<sp/>2)<sp/>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>=<sp/>(byte<sp/>*)Mem_Alloc(<sp/>65536<sp/>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>vq2<sp/>=<sp/>(word<sp/>*)Mem_Alloc(<sp/>256*16*4<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>word<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>vq4<sp/>=<sp/>(word<sp/>*)Mem_Alloc(<sp/>256*64*4<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>word<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>vq8<sp/>=<sp/>(word<sp/>*)Mem_Alloc(<sp/>256*256*4<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>word<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="179"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="180"><highlight class="comment">idCinematicLocal::ShutdownCinematic</highlight></codeline>
<codeline lineno="181"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="182"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idCinematic::ShutdownCinematic(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>Mem_Free(<sp/>file<sp/>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>Mem_Free(<sp/>vq2<sp/>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>vq2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>Mem_Free(<sp/>vq4<sp/>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>vq4<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>Mem_Free(<sp/>vq8<sp/>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>vq8<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="195"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="196"><highlight class="comment">idCinematicLocal::Alloc</highlight></codeline>
<codeline lineno="197"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="198"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><ref refid="classid_cinematic" kindref="compound">idCinematic</ref><sp/>*idCinematic::Alloc()<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classid_cinematic_local" kindref="compound">idCinematicLocal</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="204"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="205"><highlight class="comment">idCinematicLocal::~idCinematic</highlight></codeline>
<codeline lineno="206"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="207"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal">idCinematic::~idCinematic(<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>Close();</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="213"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="214"><highlight class="comment">idCinematicLocal::InitFromFile</highlight></codeline>
<codeline lineno="215"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="216"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idCinematic::InitFromFile(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*qpath,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>looping<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="222"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="223"><highlight class="comment">idCinematicLocal::AnimationLength</highlight></codeline>
<codeline lineno="224"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="225"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idCinematic::AnimationLength()<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="231"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="232"><highlight class="comment">idCinematicLocal::ResetTime</highlight></codeline>
<codeline lineno="233"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="234"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idCinematic::ResetTime(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>milliseconds)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="239"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="240"><highlight class="comment">idCinematicLocal::ImageForTime</highlight></codeline>
<codeline lineno="241"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="242"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><ref refid="structcin_data__t" kindref="compound">cinData_t</ref><sp/>idCinematic::ImageForTime(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>milliseconds<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcin_data__t" kindref="compound">cinData_t</ref><sp/>c;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>&amp;c,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>c<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="250"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="251"><highlight class="comment">idCinematicLocal::Close</highlight></codeline>
<codeline lineno="252"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="253"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idCinematic::Close()<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">//===========================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="260"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="261"><highlight class="comment">idCinematicLocal::idCinematicLocal</highlight></codeline>
<codeline lineno="262"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="263"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal">idCinematicLocal::idCinematicLocal()<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>image<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>FMV_EOF;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>iFile<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>qStatus[0]<sp/>=<sp/>(byte<sp/>**)Mem_Alloc(<sp/>32768<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>byte<sp/>*)<sp/>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>qStatus[1]<sp/>=<sp/>(byte<sp/>**)Mem_Alloc(<sp/>32768<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>byte<sp/>*)<sp/>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="275"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="276"><highlight class="comment">idCinematicLocal::~idCinematicLocal</highlight></codeline>
<codeline lineno="277"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="278"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal">idCinematicLocal::~idCinematicLocal()<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>Close();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>Mem_Free(<sp/>qStatus[0]<sp/>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>qStatus[0]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>Mem_Free(<sp/>qStatus[1]<sp/>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>qStatus[1]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="289"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="290"><highlight class="comment">idCinematicLocal::InitFromFile</highlight></codeline>
<codeline lineno="291"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="292"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idCinematicLocal::InitFromFile(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*qpath,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>amilooping<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>RoQID;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>Close();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>inMemory<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>animationLength<sp/>=<sp/>100000;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>strstr(<sp/>qpath,<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>)<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>strstr(<sp/>qpath,<sp/></highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal"><sp/>)<sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(<sp/>fileName,<sp/></highlight><highlight class="stringliteral">&quot;video/%s&quot;</highlight><highlight class="normal">,<sp/>qpath<sp/>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(<sp/>fileName,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>qpath<sp/>);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>iFile<sp/>=<sp/>fileSystem-&gt;OpenFileRead(<sp/>fileName<sp/>);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!iFile<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>ROQSize<sp/>=<sp/>iFile-&gt;Length();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>looping<sp/>=<sp/>amilooping;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>CIN_HEIGHT<sp/>=<sp/>DEFAULT_CIN_HEIGHT;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>CIN_WIDTH<sp/><sp/>=<sp/><sp/>DEFAULT_CIN_WIDTH;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>samplesPerPixel<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>startTime<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">//Sys_Milliseconds();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>iFile-&gt;Read(<sp/>file,<sp/>16<sp/>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>RoQID<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)(file[0])<sp/>+<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)(file[1])*256;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>frameRate<sp/>=<sp/>file[6];</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>frameRate<sp/>==<sp/>32.0f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameRate<sp/>=<sp/>1000.0f<sp/>/<sp/>32.0f;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>RoQID<sp/>==<sp/>ROQ_FILE<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoQ_init();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>FMV_PLAY;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageForTime(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>(<sp/>looping<sp/>)<sp/>?<sp/>FMV_PLAY<sp/>:<sp/>FMV_IDLE;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>RoQShutdown();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="345"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="346"><highlight class="comment">idCinematicLocal::Close</highlight></codeline>
<codeline lineno="347"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="348"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idCinematicLocal::Close()<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>image<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mem_Free(<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)image<sp/>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>FMV_EOF;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>RoQShutdown();</highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="360"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="361"><highlight class="comment">idCinematicLocal::AnimationLength</highlight></codeline>
<codeline lineno="362"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="363"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idCinematicLocal::AnimationLength()<sp/>{<sp/></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>animationLength;<sp/></highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="369"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="370"><highlight class="comment">idCinematicLocal::ResetTime</highlight></codeline>
<codeline lineno="371"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="372"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idCinematicLocal::ResetTime(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>startTime<sp/>=<sp/>(<sp/>backEnd.viewDef<sp/>)<sp/>?<sp/>1000<sp/>*<sp/>backEnd.viewDef-&gt;floatTime<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>FMV_PLAY;</highlight></codeline>
<codeline lineno="376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="379"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="380"><highlight class="comment">idCinematicLocal::ImageForTime</highlight></codeline>
<codeline lineno="381"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="382"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><ref refid="structcin_data__t" kindref="compound">cinData_t</ref><sp/>idCinematicLocal::ImageForTime(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thisTime<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcin_data__t" kindref="compound">cinData_t</ref><sp/><sp/><sp/>cinData;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>thisTime<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thisTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>&amp;cinData,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cinData)<sp/>);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_skipROQ.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cinData;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>status<sp/>==<sp/>FMV_EOF<sp/>||<sp/>status<sp/>==<sp/>FMV_IDLE<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cinData;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>buf<sp/>==<sp/>NULL<sp/>||<sp/>startTime<sp/>==<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>startTime<sp/>==<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoQReset();</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startTime<sp/>=<sp/>thisTime;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>tfps<sp/>=<sp/>(<sp/>(<sp/>thisTime<sp/>-<sp/>startTime<sp/>)<sp/>*<sp/>frameRate<sp/>)<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tfps<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tfps<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tfps<sp/>&lt;<sp/>numQuads<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoQReset();</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>FMV_PLAY;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>buf<sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>buf<sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoQInterrupt();</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>(tfps<sp/>!=<sp/>numQuads<sp/>&amp;&amp;<sp/>status<sp/>==<sp/>FMV_PLAY)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoQInterrupt();</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>status<sp/>==<sp/>FMV_LOOPED<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>FMV_PLAY;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>buf<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>status<sp/>==<sp/>FMV_PLAY<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoQInterrupt();</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startTime<sp/>=<sp/>thisTime;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>status<sp/>==<sp/>FMV_EOF<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>looping<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoQReset();</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>status<sp/>==<sp/>FMV_LOOPED<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>FMV_PLAY;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>buf<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>status<sp/>==<sp/>FMV_PLAY<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoQInterrupt();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startTime<sp/>=<sp/>thisTime;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>FMV_IDLE;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoQShutdown();</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>cinData.imageWidth<sp/>=<sp/>CIN_WIDTH;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>cinData.imageHeight<sp/>=<sp/>CIN_HEIGHT;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>cinData.status<sp/>=<sp/>status;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>cinData.image<sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cinData;</highlight></codeline>
<codeline lineno="460"><highlight class="normal">}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="463"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="464"><highlight class="comment">idCinematicLocal::move8_32</highlight></codeline>
<codeline lineno="465"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="466"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idCinematicLocal::move8_32(<sp/>byte<sp/>*src,<sp/>byte<sp/>*dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spl<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>1</highlight></codeline>
<codeline lineno="469"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*dsrc,<sp/>*ddst;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dspl;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)src;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)dst;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>dspl<sp/>=<sp/>spl&gt;&gt;2;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0*dspl+0]<sp/>=<sp/>dsrc[0*dspl+0];</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0*dspl+1]<sp/>=<sp/>dsrc[0*dspl+1];</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0*dspl+2]<sp/>=<sp/>dsrc[0*dspl+2];</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0*dspl+3]<sp/>=<sp/>dsrc[0*dspl+3];</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0*dspl+4]<sp/>=<sp/>dsrc[0*dspl+4];</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0*dspl+5]<sp/>=<sp/>dsrc[0*dspl+5];</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0*dspl+6]<sp/>=<sp/>dsrc[0*dspl+6];</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0*dspl+7]<sp/>=<sp/>dsrc[0*dspl+7];</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[1*dspl+0]<sp/>=<sp/>dsrc[1*dspl+0];</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[1*dspl+1]<sp/>=<sp/>dsrc[1*dspl+1];</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[1*dspl+2]<sp/>=<sp/>dsrc[1*dspl+2];</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[1*dspl+3]<sp/>=<sp/>dsrc[1*dspl+3];</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[1*dspl+4]<sp/>=<sp/>dsrc[1*dspl+4];</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[1*dspl+5]<sp/>=<sp/>dsrc[1*dspl+5];</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[1*dspl+6]<sp/>=<sp/>dsrc[1*dspl+6];</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[1*dspl+7]<sp/>=<sp/>dsrc[1*dspl+7];</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[2*dspl+0]<sp/>=<sp/>dsrc[2*dspl+0];</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[2*dspl+1]<sp/>=<sp/>dsrc[2*dspl+1];</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[2*dspl+2]<sp/>=<sp/>dsrc[2*dspl+2];</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[2*dspl+3]<sp/>=<sp/>dsrc[2*dspl+3];</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[2*dspl+4]<sp/>=<sp/>dsrc[2*dspl+4];</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[2*dspl+5]<sp/>=<sp/>dsrc[2*dspl+5];</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[2*dspl+6]<sp/>=<sp/>dsrc[2*dspl+6];</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[2*dspl+7]<sp/>=<sp/>dsrc[2*dspl+7];</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[3*dspl+0]<sp/>=<sp/>dsrc[3*dspl+0];</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[3*dspl+1]<sp/>=<sp/>dsrc[3*dspl+1];</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[3*dspl+2]<sp/>=<sp/>dsrc[3*dspl+2];</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[3*dspl+3]<sp/>=<sp/>dsrc[3*dspl+3];</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[3*dspl+4]<sp/>=<sp/>dsrc[3*dspl+4];</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[3*dspl+5]<sp/>=<sp/>dsrc[3*dspl+5];</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[3*dspl+6]<sp/>=<sp/>dsrc[3*dspl+6];</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[3*dspl+7]<sp/>=<sp/>dsrc[3*dspl+7];</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[4*dspl+0]<sp/>=<sp/>dsrc[4*dspl+0];</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[4*dspl+1]<sp/>=<sp/>dsrc[4*dspl+1];</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[4*dspl+2]<sp/>=<sp/>dsrc[4*dspl+2];</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[4*dspl+3]<sp/>=<sp/>dsrc[4*dspl+3];</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[4*dspl+4]<sp/>=<sp/>dsrc[4*dspl+4];</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[4*dspl+5]<sp/>=<sp/>dsrc[4*dspl+5];</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[4*dspl+6]<sp/>=<sp/>dsrc[4*dspl+6];</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[4*dspl+7]<sp/>=<sp/>dsrc[4*dspl+7];</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[5*dspl+0]<sp/>=<sp/>dsrc[5*dspl+0];</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[5*dspl+1]<sp/>=<sp/>dsrc[5*dspl+1];</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[5*dspl+2]<sp/>=<sp/>dsrc[5*dspl+2];</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[5*dspl+3]<sp/>=<sp/>dsrc[5*dspl+3];</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[5*dspl+4]<sp/>=<sp/>dsrc[5*dspl+4];</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[5*dspl+5]<sp/>=<sp/>dsrc[5*dspl+5];</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[5*dspl+6]<sp/>=<sp/>dsrc[5*dspl+6];</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[5*dspl+7]<sp/>=<sp/>dsrc[5*dspl+7];</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[6*dspl+0]<sp/>=<sp/>dsrc[6*dspl+0];</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[6*dspl+1]<sp/>=<sp/>dsrc[6*dspl+1];</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[6*dspl+2]<sp/>=<sp/>dsrc[6*dspl+2];</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[6*dspl+3]<sp/>=<sp/>dsrc[6*dspl+3];</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[6*dspl+4]<sp/>=<sp/>dsrc[6*dspl+4];</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[6*dspl+5]<sp/>=<sp/>dsrc[6*dspl+5];</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[6*dspl+6]<sp/>=<sp/>dsrc[6*dspl+6];</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[6*dspl+7]<sp/>=<sp/>dsrc[6*dspl+7];</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[7*dspl+0]<sp/>=<sp/>dsrc[7*dspl+0];</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[7*dspl+1]<sp/>=<sp/>dsrc[7*dspl+1];</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[7*dspl+2]<sp/>=<sp/>dsrc[7*dspl+2];</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[7*dspl+3]<sp/>=<sp/>dsrc[7*dspl+3];</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[7*dspl+4]<sp/>=<sp/>dsrc[7*dspl+4];</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[7*dspl+5]<sp/>=<sp/>dsrc[7*dspl+5];</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[7*dspl+6]<sp/>=<sp/>dsrc[7*dspl+6];</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[7*dspl+7]<sp/>=<sp/>dsrc[7*dspl+7];</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="548"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dsrc,<sp/>*ddst;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dspl;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)src;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)dst;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>dspl<sp/>=<sp/>spl&gt;&gt;3;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0]<sp/>=<sp/>dsrc[0];<sp/>ddst[1]<sp/>=<sp/>dsrc[1];<sp/>ddst[2]<sp/>=<sp/>dsrc[2];<sp/>ddst[3]<sp/>=<sp/>dsrc[3];</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>+=<sp/>dspl;<sp/>ddst<sp/>+=<sp/>dspl;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0]<sp/>=<sp/>dsrc[0];<sp/>ddst[1]<sp/>=<sp/>dsrc[1];<sp/>ddst[2]<sp/>=<sp/>dsrc[2];<sp/>ddst[3]<sp/>=<sp/>dsrc[3];</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>+=<sp/>dspl;<sp/>ddst<sp/>+=<sp/>dspl;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0]<sp/>=<sp/>dsrc[0];<sp/>ddst[1]<sp/>=<sp/>dsrc[1];<sp/>ddst[2]<sp/>=<sp/>dsrc[2];<sp/>ddst[3]<sp/>=<sp/>dsrc[3];</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>+=<sp/>dspl;<sp/>ddst<sp/>+=<sp/>dspl;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0]<sp/>=<sp/>dsrc[0];<sp/>ddst[1]<sp/>=<sp/>dsrc[1];<sp/>ddst[2]<sp/>=<sp/>dsrc[2];<sp/>ddst[3]<sp/>=<sp/>dsrc[3];</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>+=<sp/>dspl;<sp/>ddst<sp/>+=<sp/>dspl;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0]<sp/>=<sp/>dsrc[0];<sp/>ddst[1]<sp/>=<sp/>dsrc[1];<sp/>ddst[2]<sp/>=<sp/>dsrc[2];<sp/>ddst[3]<sp/>=<sp/>dsrc[3];</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>+=<sp/>dspl;<sp/>ddst<sp/>+=<sp/>dspl;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0]<sp/>=<sp/>dsrc[0];<sp/>ddst[1]<sp/>=<sp/>dsrc[1];<sp/>ddst[2]<sp/>=<sp/>dsrc[2];<sp/>ddst[3]<sp/>=<sp/>dsrc[3];</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>+=<sp/>dspl;<sp/>ddst<sp/>+=<sp/>dspl;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0]<sp/>=<sp/>dsrc[0];<sp/>ddst[1]<sp/>=<sp/>dsrc[1];<sp/>ddst[2]<sp/>=<sp/>dsrc[2];<sp/>ddst[3]<sp/>=<sp/>dsrc[3];</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>+=<sp/>dspl;<sp/>ddst<sp/>+=<sp/>dspl;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0]<sp/>=<sp/>dsrc[0];<sp/>ddst[1]<sp/>=<sp/>dsrc[1];<sp/>ddst[2]<sp/>=<sp/>dsrc[2];<sp/>ddst[3]<sp/>=<sp/>dsrc[3];</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="571"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="574"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="575"><highlight class="comment">idCinematicLocal::move4_32</highlight></codeline>
<codeline lineno="576"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="577"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idCinematicLocal::move4_32(<sp/>byte<sp/>*src,<sp/>byte<sp/>*dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spl<sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>1</highlight></codeline>
<codeline lineno="580"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*dsrc,<sp/>*ddst;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dspl;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)src;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)dst;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>dspl<sp/>=<sp/>spl&gt;&gt;2;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0*dspl+0]<sp/>=<sp/>dsrc[0*dspl+0];</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0*dspl+1]<sp/>=<sp/>dsrc[0*dspl+1];</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0*dspl+2]<sp/>=<sp/>dsrc[0*dspl+2];</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0*dspl+3]<sp/>=<sp/>dsrc[0*dspl+3];</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[1*dspl+0]<sp/>=<sp/>dsrc[1*dspl+0];</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[1*dspl+1]<sp/>=<sp/>dsrc[1*dspl+1];</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[1*dspl+2]<sp/>=<sp/>dsrc[1*dspl+2];</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[1*dspl+3]<sp/>=<sp/>dsrc[1*dspl+3];</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[2*dspl+0]<sp/>=<sp/>dsrc[2*dspl+0];</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[2*dspl+1]<sp/>=<sp/>dsrc[2*dspl+1];</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[2*dspl+2]<sp/>=<sp/>dsrc[2*dspl+2];</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[2*dspl+3]<sp/>=<sp/>dsrc[2*dspl+3];</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[3*dspl+0]<sp/>=<sp/>dsrc[3*dspl+0];</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[3*dspl+1]<sp/>=<sp/>dsrc[3*dspl+1];</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[3*dspl+2]<sp/>=<sp/>dsrc[3*dspl+2];</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[3*dspl+3]<sp/>=<sp/>dsrc[3*dspl+3];</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="607"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dsrc,<sp/>*ddst;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dspl;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)src;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)dst;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>dspl<sp/>=<sp/>spl&gt;&gt;3;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0]<sp/>=<sp/>dsrc[0];<sp/>ddst[1]<sp/>=<sp/>dsrc[1];</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>+=<sp/>dspl;<sp/>ddst<sp/>+=<sp/>dspl;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0]<sp/>=<sp/>dsrc[0];<sp/>ddst[1]<sp/>=<sp/>dsrc[1];</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>+=<sp/>dspl;<sp/>ddst<sp/>+=<sp/>dspl;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0]<sp/>=<sp/>dsrc[0];<sp/>ddst[1]<sp/>=<sp/>dsrc[1];</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>+=<sp/>dspl;<sp/>ddst<sp/>+=<sp/>dspl;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0]<sp/>=<sp/>dsrc[0];<sp/>ddst[1]<sp/>=<sp/>dsrc[1];</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="622"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="625"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="626"><highlight class="comment">idCinematicLocal::blit8_32</highlight></codeline>
<codeline lineno="627"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="628"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idCinematicLocal::blit8_32(<sp/>byte<sp/>*src,<sp/>byte<sp/>*dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spl<sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>1</highlight></codeline>
<codeline lineno="631"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*dsrc,<sp/>*ddst;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dspl;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)src;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)dst;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>dspl<sp/>=<sp/>spl&gt;&gt;2;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0*dspl+0]<sp/>=<sp/>dsrc[<sp/>0];</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0*dspl+1]<sp/>=<sp/>dsrc[<sp/>1];</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0*dspl+2]<sp/>=<sp/>dsrc[<sp/>2];</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0*dspl+3]<sp/>=<sp/>dsrc[<sp/>3];</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0*dspl+4]<sp/>=<sp/>dsrc[<sp/>4];</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0*dspl+5]<sp/>=<sp/>dsrc[<sp/>5];</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0*dspl+6]<sp/>=<sp/>dsrc[<sp/>6];</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0*dspl+7]<sp/>=<sp/>dsrc[<sp/>7];</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[1*dspl+0]<sp/>=<sp/>dsrc[<sp/>8];</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[1*dspl+1]<sp/>=<sp/>dsrc[<sp/>9];</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[1*dspl+2]<sp/>=<sp/>dsrc[10];</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[1*dspl+3]<sp/>=<sp/>dsrc[11];</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[1*dspl+4]<sp/>=<sp/>dsrc[12];</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[1*dspl+5]<sp/>=<sp/>dsrc[13];</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[1*dspl+6]<sp/>=<sp/>dsrc[14];</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[1*dspl+7]<sp/>=<sp/>dsrc[15];</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[2*dspl+0]<sp/>=<sp/>dsrc[16];</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[2*dspl+1]<sp/>=<sp/>dsrc[17];</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[2*dspl+2]<sp/>=<sp/>dsrc[18];</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[2*dspl+3]<sp/>=<sp/>dsrc[19];</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[2*dspl+4]<sp/>=<sp/>dsrc[20];</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[2*dspl+5]<sp/>=<sp/>dsrc[21];</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[2*dspl+6]<sp/>=<sp/>dsrc[22];</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[2*dspl+7]<sp/>=<sp/>dsrc[23];</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[3*dspl+0]<sp/>=<sp/>dsrc[24];</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[3*dspl+1]<sp/>=<sp/>dsrc[25];</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[3*dspl+2]<sp/>=<sp/>dsrc[26];</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[3*dspl+3]<sp/>=<sp/>dsrc[27];</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[3*dspl+4]<sp/>=<sp/>dsrc[28];</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[3*dspl+5]<sp/>=<sp/>dsrc[29];</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[3*dspl+6]<sp/>=<sp/>dsrc[30];</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[3*dspl+7]<sp/>=<sp/>dsrc[31];</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[4*dspl+0]<sp/>=<sp/>dsrc[32];</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[4*dspl+1]<sp/>=<sp/>dsrc[33];</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[4*dspl+2]<sp/>=<sp/>dsrc[34];</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[4*dspl+3]<sp/>=<sp/>dsrc[35];</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[4*dspl+4]<sp/>=<sp/>dsrc[36];</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[4*dspl+5]<sp/>=<sp/>dsrc[37];</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[4*dspl+6]<sp/>=<sp/>dsrc[38];</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[4*dspl+7]<sp/>=<sp/>dsrc[39];</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[5*dspl+0]<sp/>=<sp/>dsrc[40];</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[5*dspl+1]<sp/>=<sp/>dsrc[41];</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[5*dspl+2]<sp/>=<sp/>dsrc[42];</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[5*dspl+3]<sp/>=<sp/>dsrc[43];</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[5*dspl+4]<sp/>=<sp/>dsrc[44];</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[5*dspl+5]<sp/>=<sp/>dsrc[45];</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[5*dspl+6]<sp/>=<sp/>dsrc[46];</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[5*dspl+7]<sp/>=<sp/>dsrc[47];</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[6*dspl+0]<sp/>=<sp/>dsrc[48];</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[6*dspl+1]<sp/>=<sp/>dsrc[49];</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[6*dspl+2]<sp/>=<sp/>dsrc[50];</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[6*dspl+3]<sp/>=<sp/>dsrc[51];</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[6*dspl+4]<sp/>=<sp/>dsrc[52];</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[6*dspl+5]<sp/>=<sp/>dsrc[53];</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[6*dspl+6]<sp/>=<sp/>dsrc[54];</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[6*dspl+7]<sp/>=<sp/>dsrc[55];</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[7*dspl+0]<sp/>=<sp/>dsrc[56];</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[7*dspl+1]<sp/>=<sp/>dsrc[57];</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[7*dspl+2]<sp/>=<sp/>dsrc[58];</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[7*dspl+3]<sp/>=<sp/>dsrc[59];</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[7*dspl+4]<sp/>=<sp/>dsrc[60];</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[7*dspl+5]<sp/>=<sp/>dsrc[61];</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[7*dspl+6]<sp/>=<sp/>dsrc[62];</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[7*dspl+7]<sp/>=<sp/>dsrc[63];</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="710"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dsrc,<sp/>*ddst;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dspl;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)src;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)dst;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>dspl<sp/>=<sp/>spl&gt;&gt;3;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0]<sp/>=<sp/>dsrc[0];<sp/>ddst[1]<sp/>=<sp/>dsrc[1];<sp/>ddst[2]<sp/>=<sp/>dsrc[2];<sp/>ddst[3]<sp/>=<sp/>dsrc[3];</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>+=<sp/>4;<sp/>ddst<sp/>+=<sp/>dspl;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0]<sp/>=<sp/>dsrc[0];<sp/>ddst[1]<sp/>=<sp/>dsrc[1];<sp/>ddst[2]<sp/>=<sp/>dsrc[2];<sp/>ddst[3]<sp/>=<sp/>dsrc[3];</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>+=<sp/>4;<sp/>ddst<sp/>+=<sp/>dspl;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0]<sp/>=<sp/>dsrc[0];<sp/>ddst[1]<sp/>=<sp/>dsrc[1];<sp/>ddst[2]<sp/>=<sp/>dsrc[2];<sp/>ddst[3]<sp/>=<sp/>dsrc[3];</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>+=<sp/>4;<sp/>ddst<sp/>+=<sp/>dspl;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0]<sp/>=<sp/>dsrc[0];<sp/>ddst[1]<sp/>=<sp/>dsrc[1];<sp/>ddst[2]<sp/>=<sp/>dsrc[2];<sp/>ddst[3]<sp/>=<sp/>dsrc[3];</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>+=<sp/>4;<sp/>ddst<sp/>+=<sp/>dspl;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0]<sp/>=<sp/>dsrc[0];<sp/>ddst[1]<sp/>=<sp/>dsrc[1];<sp/>ddst[2]<sp/>=<sp/>dsrc[2];<sp/>ddst[3]<sp/>=<sp/>dsrc[3];</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>+=<sp/>4;<sp/>ddst<sp/>+=<sp/>dspl;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0]<sp/>=<sp/>dsrc[0];<sp/>ddst[1]<sp/>=<sp/>dsrc[1];<sp/>ddst[2]<sp/>=<sp/>dsrc[2];<sp/>ddst[3]<sp/>=<sp/>dsrc[3];</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>+=<sp/>4;<sp/>ddst<sp/>+=<sp/>dspl;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0]<sp/>=<sp/>dsrc[0];<sp/>ddst[1]<sp/>=<sp/>dsrc[1];<sp/>ddst[2]<sp/>=<sp/>dsrc[2];<sp/>ddst[3]<sp/>=<sp/>dsrc[3];</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>+=<sp/>4;<sp/>ddst<sp/>+=<sp/>dspl;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0]<sp/>=<sp/>dsrc[0];<sp/>ddst[1]<sp/>=<sp/>dsrc[1];<sp/>ddst[2]<sp/>=<sp/>dsrc[2];<sp/>ddst[3]<sp/>=<sp/>dsrc[3];</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="733"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="736"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="737"><highlight class="comment">idCinematicLocal::blit4_32</highlight></codeline>
<codeline lineno="738"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="739"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idCinematicLocal::blit4_32(<sp/>byte<sp/>*src,<sp/>byte<sp/>*dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spl<sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>1</highlight></codeline>
<codeline lineno="742"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*dsrc,<sp/>*ddst;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dspl;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)src;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)dst;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>dspl<sp/>=<sp/>spl&gt;&gt;2;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0*dspl+0]<sp/>=<sp/>dsrc[<sp/>0];</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0*dspl+1]<sp/>=<sp/>dsrc[<sp/>1];</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0*dspl+2]<sp/>=<sp/>dsrc[<sp/>2];</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0*dspl+3]<sp/>=<sp/>dsrc[<sp/>3];</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[1*dspl+0]<sp/>=<sp/>dsrc[<sp/>4];</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[1*dspl+1]<sp/>=<sp/>dsrc[<sp/>5];</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[1*dspl+2]<sp/>=<sp/>dsrc[<sp/>6];</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[1*dspl+3]<sp/>=<sp/>dsrc[<sp/>7];</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[2*dspl+0]<sp/>=<sp/>dsrc[<sp/>8];</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[2*dspl+1]<sp/>=<sp/>dsrc[<sp/>9];</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[2*dspl+2]<sp/>=<sp/>dsrc[10];</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[2*dspl+3]<sp/>=<sp/>dsrc[11];</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[3*dspl+0]<sp/>=<sp/>dsrc[12];</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[3*dspl+1]<sp/>=<sp/>dsrc[13];</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[3*dspl+2]<sp/>=<sp/>dsrc[14];</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[3*dspl+3]<sp/>=<sp/>dsrc[15];</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="766"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dsrc,<sp/>*ddst;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dspl;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)src;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)dst;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>dspl<sp/>=<sp/>spl&gt;&gt;3;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0]<sp/>=<sp/>dsrc[0];<sp/>ddst[1]<sp/>=<sp/>dsrc[1];</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>+=<sp/>2;<sp/>ddst<sp/>+=<sp/>dspl;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0]<sp/>=<sp/>dsrc[0];<sp/>ddst[1]<sp/>=<sp/>dsrc[1];</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>+=<sp/>2;<sp/>ddst<sp/>+=<sp/>dspl;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0]<sp/>=<sp/>dsrc[0];<sp/>ddst[1]<sp/>=<sp/>dsrc[1];</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>+=<sp/>2;<sp/>ddst<sp/>+=<sp/>dspl;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0]<sp/>=<sp/>dsrc[0];<sp/>ddst[1]<sp/>=<sp/>dsrc[1];</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="781"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="784"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="785"><highlight class="comment">idCinematicLocal::blit2_32</highlight></codeline>
<codeline lineno="786"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="787"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idCinematicLocal::blit2_32(<sp/>byte<sp/>*src,<sp/>byte<sp/>*dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spl<sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>1</highlight></codeline>
<codeline lineno="790"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*dsrc,<sp/>*ddst;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dspl;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)src;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)dst;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>dspl<sp/>=<sp/>spl&gt;&gt;2;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0*dspl+0]<sp/>=<sp/>dsrc[0];</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0*dspl+1]<sp/>=<sp/>dsrc[1];</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[1*dspl+0]<sp/>=<sp/>dsrc[2];</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[1*dspl+1]<sp/>=<sp/>dsrc[3];</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="802"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dsrc,<sp/>*ddst;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dspl;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>dsrc<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)src;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)dst;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>dspl<sp/>=<sp/>spl&gt;&gt;3;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[0]<sp/>=<sp/>dsrc[0];</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>ddst[dspl]<sp/>=<sp/>dsrc[1];</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="812"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="815"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="816"><highlight class="comment">idCinematicLocal::blitVQQuad32fs</highlight></codeline>
<codeline lineno="817"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="818"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idCinematicLocal::blitVQQuad32fs(<sp/>byte<sp/>**status,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/>newd,<sp/>celdata,<sp/>code;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>index,<sp/>i;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>newd<sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>celdata<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!newd)<sp/>{<sp/></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newd<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>celdata<sp/>=<sp/>data[0]<sp/>+<sp/>data[1]*256;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newd--;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)(celdata&amp;0xc000);<sp/></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>celdata<sp/>&lt;&lt;=<sp/>2;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(code)<sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>0x8000:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vq<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blit8_32(<sp/>(byte<sp/>*)&amp;vq8[(*data)*128],<sp/>status[index],<sp/>samplesPerLine<sp/>);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data++;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>+=<sp/>5;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>0xc000:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>8x8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;4;i++)<sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!newd)<sp/>{<sp/></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newd<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>celdata<sp/>=<sp/>data[0]<sp/>+<sp/>data[1]*256;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newd--;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)(celdata&amp;0xc000);<sp/>celdata<sp/>&lt;&lt;=<sp/>2;<sp/></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(code)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>code<sp/>in<sp/>top<sp/>two<sp/>bits<sp/>of<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>0x8000:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4x4<sp/>vq<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blit4_32(<sp/>(byte<sp/>*)&amp;vq4[(*data)*32],<sp/>status[index],<sp/>samplesPerLine<sp/>);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data++;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>0xc000:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2x2<sp/>vq<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blit2_32(<sp/>(byte<sp/>*)&amp;vq2[(*data)*8],<sp/>status[index],<sp/>samplesPerLine<sp/>);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data++;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blit2_32(<sp/>(byte<sp/>*)&amp;vq2[(*data)*8],<sp/>status[index]+8,<sp/>samplesPerLine<sp/>);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data++;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blit2_32(<sp/>(byte<sp/>*)&amp;vq2[(*data)*8],<sp/>status[index]+samplesPerLine*2,<sp/>samplesPerLine<sp/>);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data++;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blit2_32(<sp/>(byte<sp/>*)&amp;vq2[(*data)*8],<sp/>status[index]+samplesPerLine*2+8,<sp/>samplesPerLine<sp/>);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data++;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>0x4000:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>motion<sp/>compensation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>move4_32(<sp/>status[index]<sp/>+<sp/>mcomp[(*data)],<sp/>status[index],<sp/>samplesPerLine<sp/>);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data++;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index++;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>0x4000:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>motion<sp/>compensation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>move8_32(<sp/>status[index]<sp/>+<sp/>mcomp[(*data)],<sp/>status[index],<sp/>samplesPerLine<sp/>);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data++;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>+=<sp/>5;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>0x0000:</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>+=<sp/>5;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>status[index]<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="891"><highlight class="normal">}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VQ2TO4(a,b,c,d)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="894"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*c++<sp/>=<sp/>a[0];<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="895"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*d++<sp/>=<sp/>a[0];<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="896"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*d++<sp/>=<sp/>a[0];<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="897"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*c++<sp/>=<sp/>a[1];<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="898"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*d++<sp/>=<sp/>a[1];<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="899"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*d++<sp/>=<sp/>a[1];<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="900"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*c++<sp/>=<sp/>b[0];<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="901"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*d++<sp/>=<sp/>b[0];<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="902"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*d++<sp/>=<sp/>b[0];<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="903"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*c++<sp/>=<sp/>b[1];<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="904"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*d++<sp/>=<sp/>b[1];<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="905"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*d++<sp/>=<sp/>b[1];<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="906"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*d++<sp/>=<sp/>a[0];<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="907"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*d++<sp/>=<sp/>a[0];<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="908"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*d++<sp/>=<sp/>a[1];<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="909"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*d++<sp/>=<sp/>a[1];<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="910"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*d++<sp/>=<sp/>b[0];<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="911"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*d++<sp/>=<sp/>b[0];<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="912"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*d++<sp/>=<sp/>b[1];<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="913"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*d++<sp/>=<sp/>b[1];<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="914"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>a<sp/>+=<sp/>2;<sp/>b<sp/>+=<sp/>2;<sp/>}</highlight></codeline>
<codeline lineno="915"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VQ2TO2(a,b,c,d)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="917"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*c++<sp/>=<sp/>*a;<sp/><sp/>\</highlight></codeline>
<codeline lineno="918"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*d++<sp/>=<sp/>*a;<sp/><sp/>\</highlight></codeline>
<codeline lineno="919"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*d++<sp/>=<sp/>*a;<sp/><sp/>\</highlight></codeline>
<codeline lineno="920"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*c++<sp/>=<sp/>*b;<sp/><sp/>\</highlight></codeline>
<codeline lineno="921"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*d++<sp/>=<sp/>*b;<sp/><sp/>\</highlight></codeline>
<codeline lineno="922"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*d++<sp/>=<sp/>*b;<sp/><sp/>\</highlight></codeline>
<codeline lineno="923"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*d++<sp/>=<sp/>*a;<sp/><sp/>\</highlight></codeline>
<codeline lineno="924"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*d++<sp/>=<sp/>*a;<sp/><sp/>\</highlight></codeline>
<codeline lineno="925"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*d++<sp/>=<sp/>*b;<sp/><sp/>\</highlight></codeline>
<codeline lineno="926"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*d++<sp/>=<sp/>*b;<sp/><sp/>\</highlight></codeline>
<codeline lineno="927"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>a++;<sp/>b++;<sp/>}</highlight></codeline>
<codeline lineno="928"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="930"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="931"><highlight class="comment">idCinematicLocal::yuv_to_rgb</highlight></codeline>
<codeline lineno="932"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="933"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>idCinematicLocal::yuv_to_rgb(<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>u,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>v<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>r,g,b,YY<sp/>=<sp/>(long)(ROQ_YY_tab[(y)]);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>(YY<sp/>+<sp/>ROQ_VR_tab[v])<sp/>&gt;&gt;<sp/>9;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>g<sp/>=<sp/>(YY<sp/>+<sp/>ROQ_UG_tab[u]<sp/>+<sp/>ROQ_VG_tab[v])<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>(YY<sp/>+<sp/>ROQ_UB_tab[u])<sp/>&gt;&gt;<sp/>9;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r&lt;0)<sp/>r<sp/>=<sp/>0;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g&lt;0)<sp/>g<sp/>=<sp/>0;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b&lt;0)<sp/>b<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>&gt;<sp/>31)<sp/>r<sp/>=<sp/>31;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g<sp/>&gt;<sp/>63)<sp/>g<sp/>=<sp/>63;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>&gt;<sp/>31)<sp/>b<sp/>=<sp/>31;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)((r&lt;&lt;11)+(g&lt;&lt;5)+(b));</highlight></codeline>
<codeline lineno="945"><highlight class="normal">}</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="948"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="949"><highlight class="comment">idCinematicLocal::yuv_to_rgb24</highlight></codeline>
<codeline lineno="950"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="951"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idCinematicLocal::yuv_to_rgb24(<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>u,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>v<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>r,g,b,YY<sp/>=<sp/>(long)(ROQ_YY_tab[(y)]);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>(YY<sp/>+<sp/>ROQ_VR_tab[v])<sp/>&gt;&gt;<sp/>6;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>g<sp/>=<sp/>(YY<sp/>+<sp/>ROQ_UG_tab[u]<sp/>+<sp/>ROQ_VG_tab[v])<sp/>&gt;&gt;<sp/>6;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>(YY<sp/>+<sp/>ROQ_UB_tab[u])<sp/>&gt;&gt;<sp/>6;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r&lt;0)<sp/>r<sp/>=<sp/>0;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g&lt;0)<sp/>g<sp/>=<sp/>0;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b&lt;0)<sp/>b<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>&gt;<sp/>255)<sp/>r<sp/>=<sp/>255;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g<sp/>&gt;<sp/>255)<sp/>g<sp/>=<sp/>255;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>&gt;<sp/>255)<sp/>b<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LittleLong((r)+(g&lt;&lt;8)+(b&lt;&lt;16));</highlight></codeline>
<codeline lineno="963"><highlight class="normal">}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="966"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="967"><highlight class="comment">idCinematicLocal::decodeCodeBook</highlight></codeline>
<codeline lineno="968"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="969"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idCinematicLocal::decodeCodeBook(<sp/>byte<sp/>*input,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>roq_flags<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>i,<sp/>j,<sp/>two,<sp/>four;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/>*aptr,<sp/>*bptr,<sp/>*cptr,<sp/>*dptr;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>y0,y1,y2,y3,cr,cb;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iaptr,<sp/>*ibptr,<sp/>*icptr,<sp/>*idptr;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!roq_flags)<sp/>{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>two<sp/>=<sp/>four<sp/>=<sp/>256;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>two<sp/><sp/>=<sp/>roq_flags&gt;&gt;8;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!two)<sp/>two<sp/>=<sp/>256;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>four<sp/>=<sp/>roq_flags&amp;0xff;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>four<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>bptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*)vq2;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!half)<sp/>{</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!smootheddouble)<sp/>{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight><highlight class="comment">//<sp/>normal<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(samplesPerPixel==2)<sp/>{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;two;i++)<sp/>{</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>(long)*input++;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>(long)*input++;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y2<sp/>=<sp/>(long)*input++;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y3<sp/>=<sp/>(long)*input++;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr<sp/>=<sp/>(long)*input++;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb<sp/>=<sp/>(long)*input++;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bptr++<sp/>=<sp/>yuv_to_rgb(<sp/>y0,<sp/>cr,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bptr++<sp/>=<sp/>yuv_to_rgb(<sp/>y1,<sp/>cr,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bptr++<sp/>=<sp/>yuv_to_rgb(<sp/>y2,<sp/>cr,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bptr++<sp/>=<sp/>yuv_to_rgb(<sp/>y3,<sp/>cr,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*)vq4;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*)vq8;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;four;i++)<sp/>{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*)vq2<sp/>+<sp/>(*input++)*4;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*)vq2<sp/>+<sp/>(*input++)*4;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;2;j++)</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VQ2TO4(aptr,bptr,cptr,dptr);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(samplesPerPixel==4)<sp/>{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)bptr;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;two;i++)<sp/>{</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>(long)*input++;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>(long)*input++;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y2<sp/>=<sp/>(long)*input++;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y3<sp/>=<sp/>(long)*input++;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr<sp/>=<sp/>(long)*input++;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb<sp/>=<sp/>(long)*input++;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ibptr++<sp/>=<sp/>yuv_to_rgb24(<sp/>y0,<sp/>cr,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ibptr++<sp/>=<sp/>yuv_to_rgb24(<sp/>y1,<sp/>cr,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ibptr++<sp/>=<sp/>yuv_to_rgb24(<sp/>y2,<sp/>cr,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ibptr++<sp/>=<sp/>yuv_to_rgb24(<sp/>y3,<sp/>cr,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)vq4;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)vq8;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;four;i++)<sp/>{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iaptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)vq2<sp/>+<sp/>(*input++)*4;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)vq2<sp/>+<sp/>(*input++)*4;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;2;j++)<sp/></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VQ2TO4(iaptr,<sp/>ibptr,<sp/>icptr,<sp/>idptr);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight><highlight class="comment">//<sp/>double<sp/>height,<sp/>smoothed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(samplesPerPixel==2)<sp/>{</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;two;i++)<sp/>{</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>(long)*input++;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>(long)*input++;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y2<sp/>=<sp/>(long)*input++;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y3<sp/>=<sp/>(long)*input++;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr<sp/>=<sp/>(long)*input++;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb<sp/>=<sp/>(long)*input++;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bptr++<sp/>=<sp/>yuv_to_rgb(<sp/>y0,<sp/>cr,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bptr++<sp/>=<sp/>yuv_to_rgb(<sp/>y1,<sp/>cr,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bptr++<sp/>=<sp/>yuv_to_rgb(<sp/>((y0*3)+y2)/4,<sp/>cr,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bptr++<sp/>=<sp/>yuv_to_rgb(<sp/>((y1*3)+y3)/4,<sp/>cr,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bptr++<sp/>=<sp/>yuv_to_rgb(<sp/>(y0+(y2*3))/4,<sp/>cr,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bptr++<sp/>=<sp/>yuv_to_rgb(<sp/>(y1+(y3*3))/4,<sp/>cr,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bptr++<sp/>=<sp/>yuv_to_rgb(<sp/>y2,<sp/>cr,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bptr++<sp/>=<sp/>yuv_to_rgb(<sp/>y3,<sp/>cr,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*)vq4;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*)vq8;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;four;i++)<sp/>{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*)vq2<sp/>+<sp/>(*input++)*8;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*)vq2<sp/>+<sp/>(*input++)*8;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;2;j++)<sp/>{</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VQ2TO4(aptr,bptr,cptr,dptr);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VQ2TO4(aptr,bptr,cptr,dptr);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(samplesPerPixel==4)<sp/>{</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)bptr;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;two;i++)<sp/>{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>(long)*input++;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>(long)*input++;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y2<sp/>=<sp/>(long)*input++;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y3<sp/>=<sp/>(long)*input++;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr<sp/>=<sp/>(long)*input++;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb<sp/>=<sp/>(long)*input++;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ibptr++<sp/>=<sp/>yuv_to_rgb24(<sp/>y0,<sp/>cr,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ibptr++<sp/>=<sp/>yuv_to_rgb24(<sp/>y1,<sp/>cr,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ibptr++<sp/>=<sp/>yuv_to_rgb24(<sp/>((y0*3)+y2)/4,<sp/>cr,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ibptr++<sp/>=<sp/>yuv_to_rgb24(<sp/>((y1*3)+y3)/4,<sp/>cr,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ibptr++<sp/>=<sp/>yuv_to_rgb24(<sp/>(y0+(y2*3))/4,<sp/>cr,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ibptr++<sp/>=<sp/>yuv_to_rgb24(<sp/>(y1+(y3*3))/4,<sp/>cr,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ibptr++<sp/>=<sp/>yuv_to_rgb24(<sp/>y2,<sp/>cr,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ibptr++<sp/>=<sp/>yuv_to_rgb24(<sp/>y3,<sp/>cr,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)vq4;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)vq8;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;four;i++)<sp/>{</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iaptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)vq2<sp/>+<sp/>(*input++)*8;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)vq2<sp/>+<sp/>(*input++)*8;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;2;j++)<sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VQ2TO4(iaptr,<sp/>ibptr,<sp/>icptr,<sp/>idptr);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VQ2TO4(iaptr,<sp/>ibptr,<sp/>icptr,<sp/>idptr);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>1/4<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(samplesPerPixel==2)<sp/>{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;two;i++)<sp/>{</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>(long)*input;<sp/>input+=2;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y2<sp/>=<sp/>(long)*input;<sp/>input+=2;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr<sp/>=<sp/>(long)*input++;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb<sp/>=<sp/>(long)*input++;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bptr++<sp/>=<sp/>yuv_to_rgb(<sp/>y0,<sp/>cr,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bptr++<sp/>=<sp/>yuv_to_rgb(<sp/>y2,<sp/>cr,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*)vq4;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*)vq8;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;four;i++)<sp/>{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*)vq2<sp/>+<sp/>(*input++)*2;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*)vq2<sp/>+<sp/>(*input++)*2;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;2;j++)<sp/>{<sp/></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VQ2TO2(aptr,bptr,cptr,dptr);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(samplesPerPixel<sp/>==<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)<sp/>bptr;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;two;i++)<sp/>{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>(long)*input;<sp/>input+=2;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y2<sp/>=<sp/>(long)*input;<sp/>input+=2;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr<sp/>=<sp/>(long)*input++;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb<sp/>=<sp/>(long)*input++;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ibptr++<sp/>=<sp/>yuv_to_rgb24(<sp/>y0,<sp/>cr,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ibptr++<sp/>=<sp/>yuv_to_rgb24(<sp/>y2,<sp/>cr,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)vq4;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)vq8;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;four;i++)<sp/>{</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iaptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)vq2<sp/>+<sp/>(*input++)*2;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ibptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)vq2<sp/>+<sp/>(*input++)*2;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;2;j++)<sp/>{<sp/></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VQ2TO2(iaptr,ibptr,icptr,idptr);</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1156"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1157"><highlight class="comment">idCinematicLocal::recurseQuad</highlight></codeline>
<codeline lineno="1158"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1159"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idCinematicLocal::recurseQuad(<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>startX,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>startY,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>quadSize,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>xOff,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>yOff<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/>*scroff;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>bigx,<sp/>bigy,<sp/>lowx,<sp/>lowy,<sp/>useY;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>offset;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>screenDelta;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/>lowx<sp/>=<sp/>lowy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/>bigx<sp/>=<sp/>xsize;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/>bigy<sp/>=<sp/>ysize;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bigx<sp/>&gt;<sp/>CIN_WIDTH)<sp/>bigx<sp/>=<sp/>CIN_WIDTH;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bigy<sp/>&gt;<sp/>CIN_HEIGHT)<sp/>bigy<sp/>=<sp/>CIN_HEIGHT;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(startX<sp/>&gt;=<sp/>lowx)<sp/>&amp;&amp;<sp/>(startX+quadSize)<sp/>&lt;=<sp/>(bigx)<sp/>&amp;&amp;<sp/>(startY+quadSize)<sp/>&lt;=<sp/>(bigy)<sp/>&amp;&amp;<sp/>(startY<sp/>&gt;=<sp/>lowy)<sp/>&amp;&amp;<sp/>quadSize<sp/>&lt;=<sp/>MAXSIZE)<sp/>{</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>useY<sp/>=<sp/>startY;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scroff<sp/>=<sp/>image<sp/>+<sp/>(useY+((CIN_HEIGHT-bigy)&gt;&gt;1)+yOff)*(samplesPerLine)<sp/>+<sp/>(((startX+xOff))*samplesPerPixel);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qStatus[0][onQuad<sp/><sp/>]<sp/>=<sp/>scroff;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qStatus[1][onQuad++]<sp/>=<sp/>scroff+offset;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>quadSize<sp/>!=<sp/>MINSIZE<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quadSize<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recurseQuad(<sp/>startX,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>quadSize,<sp/>xOff,<sp/>yOff<sp/>);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recurseQuad(<sp/>startX+quadSize,<sp/>startY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>quadSize,<sp/>xOff,<sp/>yOff<sp/>);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recurseQuad(<sp/>startX,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startY+quadSize<sp/>,<sp/>quadSize,<sp/>xOff,<sp/>yOff<sp/>);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recurseQuad(<sp/>startX+quadSize,<sp/>startY+quadSize<sp/>,<sp/>quadSize,<sp/>xOff,<sp/>yOff<sp/>);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1192"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1193"><highlight class="comment">idCinematicLocal::setupQuad</highlight></codeline>
<codeline lineno="1194"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1195"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idCinematicLocal::setupQuad(<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>xOff,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>yOff<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>numQuadCels,<sp/>i,x,y;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/>*temp;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>numQuadCels<sp/><sp/>=<sp/>(CIN_WIDTH*CIN_HEIGHT)<sp/>/<sp/>(16);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/>numQuadCels<sp/>+=<sp/>numQuadCels/4<sp/>+<sp/>numQuadCels/16;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/>numQuadCels<sp/>+=<sp/>64;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>overflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>numQuadCels<sp/><sp/>=<sp/>(xsize*ysize)<sp/>/<sp/>(16);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/>numQuadCels<sp/>+=<sp/>numQuadCels/4;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/>numQuadCels<sp/>+=<sp/>64;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>overflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>onQuad<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(y=0;y&lt;(long)ysize;y+=16)<sp/></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(x=0;x&lt;(long)xsize;x+=16)<sp/></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recurseQuad(<sp/>x,<sp/>y,<sp/>16,<sp/>xOff,<sp/>yOff<sp/>);</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=(numQuadCels-64);i&lt;numQuadCels;i++)<sp/>{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qStatus[0][i]<sp/>=<sp/>temp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eoq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qStatus[1][i]<sp/>=<sp/>temp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eoq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1223"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1224"><highlight class="comment">idCinematicLocal::readQuadInfo</highlight></codeline>
<codeline lineno="1225"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1226"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idCinematicLocal::readQuadInfo(<sp/>byte<sp/>*qData<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/>xsize<sp/><sp/><sp/><sp/>=<sp/>qData[0]+qData[1]*256;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/>ysize<sp/><sp/><sp/><sp/>=<sp/>qData[2]+qData[3]*256;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/>maxsize<sp/><sp/>=<sp/>qData[4]+qData[5]*256;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/>minsize<sp/><sp/>=<sp/>qData[6]+qData[7]*256;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/>CIN_HEIGHT<sp/>=<sp/>ysize;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/>CIN_WIDTH<sp/><sp/>=<sp/>xsize;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/>samplesPerLine<sp/>=<sp/>CIN_WIDTH*samplesPerPixel;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/>screenDelta<sp/>=<sp/>CIN_HEIGHT*samplesPerLine;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!image<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image<sp/>=<sp/>(byte<sp/>*)Mem_Alloc(<sp/>CIN_WIDTH*CIN_HEIGHT*samplesPerPixel*2<sp/>);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/>half<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/>smootheddouble<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/>t[0]<sp/>=<sp/>(0<sp/>-<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)image)+(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)image+screenDelta;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>t[1]<sp/>=<sp/>(0<sp/>-<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)image<sp/>+<sp/>screenDelta))+(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)image;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>drawX<sp/>=<sp/>CIN_WIDTH;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/>drawY<sp/>=<sp/>CIN_HEIGHT;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1254"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1255"><highlight class="comment">idCinematicLocal::RoQPrepMcomp</highlight></codeline>
<codeline lineno="1256"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1257"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idCinematicLocal::RoQPrepMcomp(<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>xoff,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>yoff<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>x,<sp/>y,<sp/>temp,<sp/>temp2;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/>i=samplesPerLine;<sp/>j=samplesPerPixel;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>xsize<sp/>==<sp/>(ysize*4)<sp/>&amp;&amp;<sp/>!half<sp/>)<sp/>{<sp/>j<sp/>=<sp/>j+j;<sp/>i<sp/>=<sp/>i+i;<sp/>}</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(y=0;y&lt;16;y++)<sp/>{</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp2<sp/>=<sp/>(y+yoff-8)*i;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(x=0;x&lt;16;x++)<sp/>{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>(x+xoff-8)*j;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mcomp[(x*16)+y]<sp/>=<sp/>normalBuffer0-(temp2+temp);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1274"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1275"><highlight class="comment">idCinematicLocal::RoQReset</highlight></codeline>
<codeline lineno="1276"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1277"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idCinematicLocal::RoQReset()<sp/>{</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/>iFile-&gt;Seek(<sp/>0,<sp/>FS_SEEK_SET<sp/>);</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/>iFile-&gt;Read(<sp/>file,<sp/>16<sp/>);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/>RoQ_init();</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>FMV_LOOPED;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287" refid="structmy__source__mgr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__source__mgr" kindref="compound">jpeg_source_mgr</ref><sp/>pub;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>public<sp/>fields<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/>byte<sp/><sp/><sp/>*infile;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>source<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/>JOCTET<sp/>*<sp/>buffer;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>start<sp/>of<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>start_of_file;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>have<sp/>we<sp/>gotten<sp/>any<sp/>data<sp/>yet?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>memsize;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal">}<sp/><ref refid="structmy__source__mgr" kindref="compound">my_source_mgr</ref>;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structmy__source__mgr" kindref="compound">my_source_mgr</ref><sp/>*<sp/><ref refid="structmy__source__mgr" kindref="compound">my_src_ptr</ref>;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INPUT_BUF_SIZE<sp/><sp/>32768<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>choose<sp/>an<sp/>efficiently<sp/>fread&apos;able<sp/>size<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="1299"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>jpeg<sp/>error<sp/>handling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__error__mgr" kindref="compound">jpeg_error_mgr</ref><sp/>jerr;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1304"><highlight class="comment"><sp/>*<sp/>Fill<sp/>the<sp/>input<sp/>buffer<sp/>---<sp/>called<sp/>whenever<sp/>buffer<sp/>is<sp/>emptied.</highlight></codeline>
<codeline lineno="1305"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1306"><highlight class="comment"><sp/>*<sp/>In<sp/>typical<sp/>applications,<sp/>this<sp/>should<sp/>read<sp/>fresh<sp/>data<sp/>into<sp/>the<sp/>buffer</highlight></codeline>
<codeline lineno="1307"><highlight class="comment"><sp/>*<sp/>(ignoring<sp/>the<sp/>current<sp/>state<sp/>of<sp/>next_input_byte<sp/>&amp;<sp/>bytes_in_buffer),</highlight></codeline>
<codeline lineno="1308"><highlight class="comment"><sp/>*<sp/>reset<sp/>the<sp/>pointer<sp/>&amp;<sp/>count<sp/>to<sp/>the<sp/>start<sp/>of<sp/>the<sp/>buffer,<sp/>and<sp/>return<sp/>TRUE</highlight></codeline>
<codeline lineno="1309"><highlight class="comment"><sp/>*<sp/>indicating<sp/>that<sp/>the<sp/>buffer<sp/>has<sp/>been<sp/>reloaded.<sp/><sp/>It<sp/>is<sp/>not<sp/>necessary<sp/>to</highlight></codeline>
<codeline lineno="1310"><highlight class="comment"><sp/>*<sp/>fill<sp/>the<sp/>buffer<sp/>entirely,<sp/>only<sp/>to<sp/>obtain<sp/>at<sp/>least<sp/>one<sp/>more<sp/>byte.</highlight></codeline>
<codeline lineno="1311"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1312"><highlight class="comment"><sp/>*<sp/>There<sp/>is<sp/>no<sp/>such<sp/>thing<sp/>as<sp/>an<sp/>EOF<sp/>return.<sp/><sp/>If<sp/>the<sp/>end<sp/>of<sp/>the<sp/>file<sp/>has<sp/>been</highlight></codeline>
<codeline lineno="1313"><highlight class="comment"><sp/>*<sp/>reached,<sp/>the<sp/>routine<sp/>has<sp/>a<sp/>choice<sp/>of<sp/>ERREXIT()<sp/>or<sp/>inserting<sp/>fake<sp/>data<sp/>into</highlight></codeline>
<codeline lineno="1314"><highlight class="comment"><sp/>*<sp/>the<sp/>buffer.<sp/><sp/>In<sp/>most<sp/>cases,<sp/>generating<sp/>a<sp/>warning<sp/>message<sp/>and<sp/>inserting<sp/>a</highlight></codeline>
<codeline lineno="1315"><highlight class="comment"><sp/>*<sp/>fake<sp/>EOI<sp/>marker<sp/>is<sp/>the<sp/>best<sp/>course<sp/>of<sp/>action<sp/>---<sp/>this<sp/>will<sp/>allow<sp/>the</highlight></codeline>
<codeline lineno="1316"><highlight class="comment"><sp/>*<sp/>decompressor<sp/>to<sp/>output<sp/>however<sp/>much<sp/>of<sp/>the<sp/>image<sp/>is<sp/>there.<sp/><sp/>However,</highlight></codeline>
<codeline lineno="1317"><highlight class="comment"><sp/>*<sp/>the<sp/>resulting<sp/>error<sp/>message<sp/>is<sp/>misleading<sp/>if<sp/>the<sp/>real<sp/>problem<sp/>is<sp/>an<sp/>empty</highlight></codeline>
<codeline lineno="1318"><highlight class="comment"><sp/>*<sp/>input<sp/>file,<sp/>so<sp/>we<sp/>handle<sp/>that<sp/>case<sp/>specially.</highlight></codeline>
<codeline lineno="1319"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1320"><highlight class="comment"><sp/>*<sp/>In<sp/>applications<sp/>that<sp/>need<sp/>to<sp/>be<sp/>able<sp/>to<sp/>suspend<sp/>compression<sp/>due<sp/>to<sp/>input</highlight></codeline>
<codeline lineno="1321"><highlight class="comment"><sp/>*<sp/>not<sp/>being<sp/>available<sp/>yet,<sp/>a<sp/>FALSE<sp/>return<sp/>indicates<sp/>that<sp/>no<sp/>more<sp/>data<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="1322"><highlight class="comment"><sp/>*<sp/>obtained<sp/>right<sp/>now,<sp/>but<sp/>more<sp/>may<sp/>be<sp/>forthcoming<sp/>later.<sp/><sp/>In<sp/>this<sp/>situation,</highlight></codeline>
<codeline lineno="1323"><highlight class="comment"><sp/>*<sp/>the<sp/>decompressor<sp/>will<sp/>return<sp/>to<sp/>its<sp/>caller<sp/>(with<sp/>an<sp/>indication<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="1324"><highlight class="comment"><sp/>*<sp/>number<sp/>of<sp/>scanlines<sp/>it<sp/>has<sp/>read,<sp/>if<sp/>any).<sp/><sp/>The<sp/>application<sp/>should<sp/>resume</highlight></codeline>
<codeline lineno="1325"><highlight class="comment"><sp/>*<sp/>decompression<sp/>after<sp/>it<sp/>has<sp/>loaded<sp/>more<sp/>data<sp/>into<sp/>the<sp/>input<sp/>buffer.<sp/><sp/>Note</highlight></codeline>
<codeline lineno="1326"><highlight class="comment"><sp/>*<sp/>that<sp/>there<sp/>are<sp/>substantial<sp/>restrictions<sp/>on<sp/>the<sp/>use<sp/>of<sp/>suspension<sp/>---<sp/>see</highlight></codeline>
<codeline lineno="1327"><highlight class="comment"><sp/>*<sp/>the<sp/>documentation.</highlight></codeline>
<codeline lineno="1328"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1329"><highlight class="comment"><sp/>*<sp/>When<sp/>suspending,<sp/>the<sp/>decompressor<sp/>will<sp/>back<sp/>up<sp/>to<sp/>a<sp/>convenient<sp/>restart<sp/>point</highlight></codeline>
<codeline lineno="1330"><highlight class="comment"><sp/>*<sp/>(typically<sp/>the<sp/>start<sp/>of<sp/>the<sp/>current<sp/>MCU).<sp/>next_input_byte<sp/>&amp;<sp/>bytes_in_buffer</highlight></codeline>
<codeline lineno="1331"><highlight class="comment"><sp/>*<sp/>indicate<sp/>where<sp/>the<sp/>restart<sp/>point<sp/>will<sp/>be<sp/>if<sp/>the<sp/>current<sp/>call<sp/>returns<sp/>FALSE.</highlight></codeline>
<codeline lineno="1332"><highlight class="comment"><sp/>*<sp/>Data<sp/>beyond<sp/>this<sp/>point<sp/>must<sp/>be<sp/>rescanned<sp/>after<sp/>resumption,<sp/>so<sp/>move<sp/>it<sp/>to</highlight></codeline>
<codeline lineno="1333"><highlight class="comment"><sp/>*<sp/>the<sp/>front<sp/>of<sp/>the<sp/>buffer<sp/>rather<sp/>than<sp/>discarding<sp/>it.</highlight></codeline>
<codeline lineno="1334"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>fill_input_buffer(<sp/><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo<sp/>)</highlight></codeline>
<codeline lineno="1338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/>my_src_ptr<sp/>src<sp/>=<sp/>(my_src_ptr)<sp/>cinfo-&gt;src;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbytes;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/>nbytes<sp/>=<sp/>INPUT_BUF_SIZE;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/>if<sp/>(nbytes<sp/>&gt;<sp/>src-&gt;memsize)<sp/>nbytes<sp/>=<sp/>src-&gt;memsize;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nbytes<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Insert<sp/>a<sp/>fake<sp/>EOI<sp/>marker<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/>src-&gt;buffer[0]<sp/>=<sp/>(JOCTET)<sp/>0xFF;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>src-&gt;buffer[1]<sp/>=<sp/>(JOCTET)<sp/>JPEG_EOI;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/>nbytes<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<sp/>src-&gt;buffer,<sp/>src-&gt;infile,<sp/>INPUT_BUF_SIZE<sp/>);</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>src-&gt;infile<sp/>=<sp/>src-&gt;infile<sp/>+<sp/>nbytes;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>src-&gt;memsize<sp/>=<sp/>src-&gt;memsize<sp/>-<sp/>INPUT_BUF_SIZE;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/>src-&gt;pub.next_input_byte<sp/>=<sp/>src-&gt;buffer;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/>src-&gt;pub.bytes_in_buffer<sp/>=<sp/>nbytes;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/>src-&gt;start_of_file<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1361"><highlight class="comment"><sp/>*<sp/>Initialize<sp/>source<sp/>---<sp/>called<sp/>by<sp/>jpeg_read_header</highlight></codeline>
<codeline lineno="1362"><highlight class="comment"><sp/>*<sp/>before<sp/>any<sp/>data<sp/>is<sp/>actually<sp/>read.</highlight></codeline>
<codeline lineno="1363"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_source<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="1367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/>my_src_ptr<sp/>src<sp/>=<sp/>(my_src_ptr)<sp/>cinfo-&gt;src;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>reset<sp/>the<sp/>empty-input-file<sp/>flag<sp/>for<sp/>each<sp/>image,</highlight></codeline>
<codeline lineno="1371"><highlight class="comment"><sp/><sp/><sp/>*<sp/>but<sp/>we<sp/>don&apos;t<sp/>clear<sp/>the<sp/>input<sp/>buffer.</highlight></codeline>
<codeline lineno="1372"><highlight class="comment"><sp/><sp/><sp/>*<sp/>This<sp/>is<sp/>correct<sp/>behavior<sp/>for<sp/>reading<sp/>a<sp/>series<sp/>of<sp/>images<sp/>from<sp/>one<sp/>source.</highlight></codeline>
<codeline lineno="1373"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/>src-&gt;start_of_file<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1378"><highlight class="comment"><sp/>*<sp/>Skip<sp/>data<sp/>---<sp/>used<sp/>to<sp/>skip<sp/>over<sp/>a<sp/>potentially<sp/>large<sp/>amount<sp/>of</highlight></codeline>
<codeline lineno="1379"><highlight class="comment"><sp/>*<sp/>uninteresting<sp/>data<sp/>(such<sp/>as<sp/>an<sp/>APPn<sp/>marker).</highlight></codeline>
<codeline lineno="1380"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1381"><highlight class="comment"><sp/>*<sp/>Writers<sp/>of<sp/>suspendable-input<sp/>applications<sp/>must<sp/>note<sp/>that<sp/>skip_input_data</highlight></codeline>
<codeline lineno="1382"><highlight class="comment"><sp/>*<sp/>is<sp/>not<sp/>granted<sp/>the<sp/>right<sp/>to<sp/>give<sp/>a<sp/>suspension<sp/>return.<sp/><sp/>If<sp/>the<sp/>skip<sp/>extends</highlight></codeline>
<codeline lineno="1383"><highlight class="comment"><sp/>*<sp/>beyond<sp/>the<sp/>data<sp/>currently<sp/>in<sp/>the<sp/>buffer,<sp/>the<sp/>buffer<sp/>can<sp/>be<sp/>marked<sp/>empty<sp/>so</highlight></codeline>
<codeline lineno="1384"><highlight class="comment"><sp/>*<sp/>that<sp/>the<sp/>next<sp/>read<sp/>will<sp/>cause<sp/>a<sp/>fill_input_buffer<sp/>call<sp/>that<sp/>can<sp/>suspend.</highlight></codeline>
<codeline lineno="1385"><highlight class="comment"><sp/>*<sp/>Arranging<sp/>for<sp/>additional<sp/>bytes<sp/>to<sp/>be<sp/>discarded<sp/>before<sp/>reloading<sp/>the<sp/>input</highlight></codeline>
<codeline lineno="1386"><highlight class="comment"><sp/>*<sp/>buffer<sp/>is<sp/>the<sp/>application<sp/>writer&apos;s<sp/>problem.</highlight></codeline>
<codeline lineno="1387"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal">skip_input_data<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>num_bytes)</highlight></codeline>
<codeline lineno="1391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/>my_src_ptr<sp/>src<sp/>=<sp/>(my_src_ptr)<sp/>cinfo-&gt;src;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Just<sp/>a<sp/>dumb<sp/>implementation<sp/>for<sp/>now.<sp/><sp/>Could<sp/>use<sp/>fseek()<sp/>except</highlight></codeline>
<codeline lineno="1395"><highlight class="comment"><sp/><sp/><sp/>*<sp/>it<sp/>doesn&apos;t<sp/>work<sp/>on<sp/>pipes.<sp/><sp/>Not<sp/>clear<sp/>that<sp/>being<sp/>smart<sp/>is<sp/>worth</highlight></codeline>
<codeline lineno="1396"><highlight class="comment"><sp/><sp/><sp/>*<sp/>any<sp/>trouble<sp/>anyway<sp/>---<sp/>large<sp/>skips<sp/>are<sp/>infrequent.</highlight></codeline>
<codeline lineno="1397"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/>if<sp/>(num_bytes<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/>src-&gt;infile<sp/>=<sp/>src-&gt;infile<sp/>+<sp/>num_bytes;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/>src-&gt;pub.next_input_byte<sp/>+=<sp/>(size_t)<sp/>num_bytes;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/>src-&gt;pub.bytes_in_buffer<sp/>-=<sp/>(size_t)<sp/>num_bytes;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1407"><highlight class="comment"><sp/>*<sp/>An<sp/>additional<sp/>method<sp/>that<sp/>can<sp/>be<sp/>provided<sp/>by<sp/>data<sp/>source<sp/>modules<sp/>is<sp/>the</highlight></codeline>
<codeline lineno="1408"><highlight class="comment"><sp/>*<sp/>resync_to_restart<sp/>method<sp/>for<sp/>error<sp/>recovery<sp/>in<sp/>the<sp/>presence<sp/>of<sp/>RST<sp/>markers.</highlight></codeline>
<codeline lineno="1409"><highlight class="comment"><sp/>*<sp/>For<sp/>the<sp/>moment,<sp/>this<sp/>source<sp/>module<sp/>just<sp/>uses<sp/>the<sp/>default<sp/>resync<sp/>method</highlight></codeline>
<codeline lineno="1410"><highlight class="comment"><sp/>*<sp/>provided<sp/>by<sp/>the<sp/>JPEG<sp/>library.<sp/><sp/>That<sp/>method<sp/>assumes<sp/>that<sp/>no<sp/>backtracking</highlight></codeline>
<codeline lineno="1411"><highlight class="comment"><sp/>*<sp/>is<sp/>possible.</highlight></codeline>
<codeline lineno="1412"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1416"><highlight class="comment"><sp/>*<sp/>Terminate<sp/>source<sp/>---<sp/>called<sp/>by<sp/>jpeg_finish_decompress</highlight></codeline>
<codeline lineno="1417"><highlight class="comment"><sp/>*<sp/>after<sp/>all<sp/>data<sp/>has<sp/>been<sp/>read.<sp/><sp/>Often<sp/>a<sp/>no-op.</highlight></codeline>
<codeline lineno="1418"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1419"><highlight class="comment"><sp/>*<sp/>NB:<sp/>*not*<sp/>called<sp/>by<sp/>jpeg_abort<sp/>or<sp/>jpeg_destroy;<sp/>surrounding</highlight></codeline>
<codeline lineno="1420"><highlight class="comment"><sp/>*<sp/>application<sp/>must<sp/>deal<sp/>with<sp/>any<sp/>cleanup<sp/>that<sp/>should<sp/>happen<sp/>even</highlight></codeline>
<codeline lineno="1421"><highlight class="comment"><sp/>*<sp/>for<sp/>error<sp/>exit.</highlight></codeline>
<codeline lineno="1422"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal">term_source<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="1426"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo<sp/>=<sp/>cinfo;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>work<sp/>necessary<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal">GLOBAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal">jpeg_memory_src<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/>byte<sp/>*infile,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="1433"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/>my_src_ptr<sp/>src;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>source<sp/>object<sp/>and<sp/>input<sp/>buffer<sp/>are<sp/>made<sp/>permanent<sp/>so<sp/>that<sp/>a<sp/>series</highlight></codeline>
<codeline lineno="1437"><highlight class="comment"><sp/><sp/><sp/>*<sp/>of<sp/>JPEG<sp/>images<sp/>can<sp/>be<sp/>read<sp/>from<sp/>the<sp/>same<sp/>file<sp/>by<sp/>calling<sp/>jpeg_stdio_src</highlight></codeline>
<codeline lineno="1438"><highlight class="comment"><sp/><sp/><sp/>*<sp/>only<sp/>before<sp/>the<sp/>first<sp/>one.<sp/><sp/>(If<sp/>we<sp/>discarded<sp/>the<sp/>buffer<sp/>at<sp/>the<sp/>end<sp/>of</highlight></codeline>
<codeline lineno="1439"><highlight class="comment"><sp/><sp/><sp/>*<sp/>one<sp/>image,<sp/>we&apos;d<sp/>likely<sp/>lose<sp/>the<sp/>start<sp/>of<sp/>the<sp/>next<sp/>one.)</highlight></codeline>
<codeline lineno="1440"><highlight class="comment"><sp/><sp/><sp/>*<sp/>This<sp/>makes<sp/>it<sp/>unsafe<sp/>to<sp/>use<sp/>this<sp/>manager<sp/>and<sp/>a<sp/>different<sp/>source</highlight></codeline>
<codeline lineno="1441"><highlight class="comment"><sp/><sp/><sp/>*<sp/>manager<sp/>serially<sp/>with<sp/>the<sp/>same<sp/>JPEG<sp/>object.<sp/><sp/>Caveat<sp/>programmer.</highlight></codeline>
<codeline lineno="1442"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;src<sp/>==<sp/>NULL)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>first<sp/>time<sp/>for<sp/>this<sp/>JPEG<sp/>object?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;src<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__source__mgr" kindref="compound">jpeg_source_mgr</ref><sp/>*)</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_PERMANENT,</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmy__source__mgr" kindref="compound">my_source_mgr</ref>));</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/>src<sp/>=<sp/>(my_src_ptr)<sp/>cinfo-&gt;src;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/>src-&gt;buffer<sp/>=<sp/>(JOCTET<sp/>*)</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_PERMANENT,</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INPUT_BUF_SIZE<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(JOCTET));</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/>src<sp/>=<sp/>(my_src_ptr)<sp/>cinfo-&gt;src;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/>src-&gt;pub.init_source<sp/>=<sp/>init_source;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/>src-&gt;pub.fill_input_buffer<sp/>=<sp/>fill_input_buffer;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/>src-&gt;pub.skip_input_data<sp/>=<sp/>skip_input_data;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/>src-&gt;pub.resync_to_restart<sp/>=<sp/>jpeg_resync_to_restart;<sp/></highlight><highlight class="comment">/*<sp/>use<sp/>default<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/>src-&gt;pub.term_source<sp/>=<sp/>term_source;</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/>src-&gt;infile<sp/>=<sp/>infile;</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/>src-&gt;memsize<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/>src-&gt;pub.bytes_in_buffer<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>forces<sp/>fill_input_buffer<sp/>on<sp/>first<sp/>read<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/>src-&gt;pub.next_input_byte<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">/*<sp/>until<sp/>buffer<sp/>loaded<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>JPEGBlit(<sp/>byte<sp/>*wStatus,<sp/>byte<sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>datasize<sp/>)</highlight></codeline>
<codeline lineno="1466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>struct<sp/>contains<sp/>the<sp/>JPEG<sp/>decompression<sp/>parameters<sp/>and<sp/>pointers<sp/>to</highlight></codeline>
<codeline lineno="1468"><highlight class="comment"><sp/><sp/><sp/>*<sp/>working<sp/>space<sp/>(which<sp/>is<sp/>allocated<sp/>as<sp/>needed<sp/>by<sp/>the<sp/>JPEG<sp/>library).</highlight></codeline>
<codeline lineno="1469"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__decompress__struct" kindref="compound">jpeg_decompress_struct</ref><sp/>cinfo;</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>use<sp/>our<sp/>private<sp/>extension<sp/>JPEG<sp/>error<sp/>handler.</highlight></codeline>
<codeline lineno="1472"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Note<sp/>that<sp/>this<sp/>struct<sp/>must<sp/>live<sp/>as<sp/>long<sp/>as<sp/>the<sp/>main<sp/>JPEG<sp/>parameter</highlight></codeline>
<codeline lineno="1473"><highlight class="comment"><sp/><sp/><sp/>*<sp/>struct,<sp/>to<sp/>avoid<sp/>dangling-pointer<sp/>problems.</highlight></codeline>
<codeline lineno="1474"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>More<sp/>stuff<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/>JSAMPARRAY<sp/>buffer;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Output<sp/>row<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row_stride;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>physical<sp/>row<sp/>width<sp/>in<sp/>output<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Step<sp/>1:<sp/>allocate<sp/>and<sp/>initialize<sp/>JPEG<sp/>decompression<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>set<sp/>up<sp/>the<sp/>normal<sp/>JPEG<sp/>error<sp/>routines,<sp/>then<sp/>override<sp/>error_exit.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/>cinfo.err<sp/>=<sp/>jpeg_std_error(&amp;jerr);</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>we<sp/>can<sp/>initialize<sp/>the<sp/>JPEG<sp/>decompression<sp/>object.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/>jpeg_create_decompress(&amp;cinfo);</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Step<sp/>2:<sp/>specify<sp/>data<sp/>source<sp/>(eg,<sp/>a<sp/>file)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/>jpeg_memory_src(&amp;cinfo,<sp/>data,<sp/>datasize);</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Step<sp/>3:<sp/>read<sp/>file<sp/>parameters<sp/>with<sp/>jpeg_read_header()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/>(void)<sp/>jpeg_read_header(&amp;cinfo,<sp/>TRUE);</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>can<sp/>ignore<sp/>the<sp/>return<sp/>value<sp/>from<sp/>jpeg_read_header<sp/>since</highlight></codeline>
<codeline lineno="1495"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>(a)<sp/>suspension<sp/>is<sp/>not<sp/>possible<sp/>with<sp/>the<sp/>stdio<sp/>data<sp/>source,<sp/>and</highlight></codeline>
<codeline lineno="1496"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>(b)<sp/>we<sp/>passed<sp/>TRUE<sp/>to<sp/>reject<sp/>a<sp/>tables-only<sp/>JPEG<sp/>file<sp/>as<sp/>an<sp/>error.</highlight></codeline>
<codeline lineno="1497"><highlight class="comment"><sp/><sp/><sp/>*<sp/>See<sp/>libjpeg.doc<sp/>for<sp/>more<sp/>info.</highlight></codeline>
<codeline lineno="1498"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Step<sp/>4:<sp/>set<sp/>parameters<sp/>for<sp/>decompression<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>this<sp/>example,<sp/>we<sp/>don&apos;t<sp/>need<sp/>to<sp/>change<sp/>any<sp/>of<sp/>the<sp/>defaults<sp/>set<sp/>by</highlight></codeline>
<codeline lineno="1503"><highlight class="comment"><sp/><sp/><sp/>*<sp/>jpeg_read_header(),<sp/>so<sp/>we<sp/>do<sp/>nothing<sp/>here.</highlight></codeline>
<codeline lineno="1504"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Step<sp/>5:<sp/>Start<sp/>decompressor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo.dct_method<sp/>=<sp/>JDCT_IFAST;</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo.dct_method<sp/>=<sp/>JDCT_FASTEST;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo.dither_mode<sp/>=<sp/>JDITHER_NONE;</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo.do_fancy_upsampling<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>cinfo.out_color_space<sp/>=<sp/>JCS_GRAYSCALE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/>(void)<sp/>jpeg_start_decompress(&amp;cinfo);</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>can<sp/>ignore<sp/>the<sp/>return<sp/>value<sp/>since<sp/>suspension<sp/>is<sp/>not<sp/>possible</highlight></codeline>
<codeline lineno="1516"><highlight class="comment"><sp/><sp/><sp/>*<sp/>with<sp/>the<sp/>stdio<sp/>data<sp/>source.</highlight></codeline>
<codeline lineno="1517"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>may<sp/>need<sp/>to<sp/>do<sp/>some<sp/>setup<sp/>of<sp/>our<sp/>own<sp/>at<sp/>this<sp/>point<sp/>before<sp/>reading</highlight></codeline>
<codeline lineno="1520"><highlight class="comment"><sp/><sp/><sp/>*<sp/>the<sp/>data.<sp/><sp/>After<sp/>jpeg_start_decompress()<sp/>we<sp/>have<sp/>the<sp/>correct<sp/>scaled</highlight></codeline>
<codeline lineno="1521"><highlight class="comment"><sp/><sp/><sp/>*<sp/>output<sp/>image<sp/>dimensions<sp/>available,<sp/>as<sp/>well<sp/>as<sp/>the<sp/>output<sp/>colormap</highlight></codeline>
<codeline lineno="1522"><highlight class="comment"><sp/><sp/><sp/>*<sp/>if<sp/>we<sp/>asked<sp/>for<sp/>color<sp/>quantization.</highlight></codeline>
<codeline lineno="1523"><highlight class="comment"><sp/><sp/><sp/>*<sp/>In<sp/>this<sp/>example,<sp/>we<sp/>need<sp/>to<sp/>make<sp/>an<sp/>output<sp/>work<sp/>buffer<sp/>of<sp/>the<sp/>right<sp/>size.</highlight></codeline>
<codeline lineno="1524"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>JSAMPLEs<sp/>per<sp/>row<sp/>in<sp/>output<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/>row_stride<sp/>=<sp/>cinfo.output_width<sp/>*<sp/>cinfo.output_components;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>a<sp/>one-row-high<sp/>sample<sp/>array<sp/>that<sp/>will<sp/>go<sp/>away<sp/>when<sp/>done<sp/>with<sp/>image<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/>buffer<sp/>=<sp/>(*cinfo.mem-&gt;alloc_sarray)</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>&amp;cinfo,<sp/>JPOOL_IMAGE,<sp/>row_stride,<sp/>1);</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Step<sp/>6:<sp/>while<sp/>(scan<sp/>lines<sp/>remain<sp/>to<sp/>be<sp/>read)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jpeg_read_scanlines(...);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Here<sp/>we<sp/>use<sp/>the<sp/>library&apos;s<sp/>state<sp/>variable<sp/>cinfo.output_scanline<sp/>as<sp/>the</highlight></codeline>
<codeline lineno="1536"><highlight class="comment"><sp/><sp/><sp/>*<sp/>loop<sp/>counter,<sp/>so<sp/>that<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>keep<sp/>track<sp/>ourselves.</highlight></codeline>
<codeline lineno="1537"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/>wStatus<sp/>+=<sp/>(cinfo.output_height-1)*row_stride;</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cinfo.output_scanline<sp/>&lt;<sp/>cinfo.output_height)<sp/>{</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>jpeg_read_scanlines<sp/>expects<sp/>an<sp/>array<sp/>of<sp/>pointers<sp/>to<sp/>scanlines.</highlight></codeline>
<codeline lineno="1542"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Here<sp/>the<sp/>array<sp/>is<sp/>only<sp/>one<sp/>element<sp/>long,<sp/>but<sp/>you<sp/>could<sp/>ask<sp/>for</highlight></codeline>
<codeline lineno="1543"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>more<sp/>than<sp/>one<sp/>scanline<sp/>at<sp/>a<sp/>time<sp/>if<sp/>that&apos;s<sp/>more<sp/>convenient.</highlight></codeline>
<codeline lineno="1544"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>jpeg_read_scanlines(&amp;cinfo,<sp/>&amp;buffer[0],<sp/>1);</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Assume<sp/>put_scanline_someplace<sp/>wants<sp/>a<sp/>pointer<sp/>and<sp/>sample<sp/>count.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(<sp/>wStatus,<sp/>&amp;buffer[0][0],<sp/>row_stride<sp/>);</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1550"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>x;</highlight></codeline>
<codeline lineno="1551"><highlight class="comment"><sp/><sp/><sp/><sp/>unsigned<sp/>int<sp/>*buf<sp/>=<sp/>(unsigned<sp/>int<sp/>*)&amp;buffer[0][0];</highlight></codeline>
<codeline lineno="1552"><highlight class="comment"><sp/><sp/><sp/><sp/>unsigned<sp/>int<sp/>*out<sp/>=<sp/>(unsigned<sp/>int<sp/>*)wStatus;</highlight></codeline>
<codeline lineno="1553"><highlight class="comment"><sp/><sp/><sp/><sp/>for(x=0;x&lt;cinfo.output_width;x++)<sp/>{</highlight></codeline>
<codeline lineno="1554"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unsigned<sp/>int<sp/>pixel<sp/>=<sp/>buf[x];</highlight></codeline>
<codeline lineno="1555"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte<sp/>*roof<sp/>=<sp/>(byte<sp/>*)&amp;pixel;</highlight></codeline>
<codeline lineno="1556"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte<sp/>temp<sp/>=<sp/>roof[0];</highlight></codeline>
<codeline lineno="1557"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roof[0]<sp/>=<sp/>roof[2];</highlight></codeline>
<codeline lineno="1558"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roof[2]<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="1559"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[x]<sp/>=<sp/>pixel;</highlight></codeline>
<codeline lineno="1560"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1561"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/>wStatus<sp/>-=<sp/>row_stride;</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Step<sp/>7:<sp/>Finish<sp/>decompression<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/>(void)<sp/>jpeg_finish_decompress(&amp;cinfo);</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>can<sp/>ignore<sp/>the<sp/>return<sp/>value<sp/>since<sp/>suspension<sp/>is<sp/>not<sp/>possible</highlight></codeline>
<codeline lineno="1569"><highlight class="comment"><sp/><sp/><sp/>*<sp/>with<sp/>the<sp/>stdio<sp/>data<sp/>source.</highlight></codeline>
<codeline lineno="1570"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Step<sp/>8:<sp/>Release<sp/>JPEG<sp/>decompression<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>an<sp/>important<sp/>step<sp/>since<sp/>it<sp/>will<sp/>release<sp/>a<sp/>good<sp/>deal<sp/>of<sp/>memory.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/>jpeg_destroy_decompress(&amp;cinfo);</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>At<sp/>this<sp/>point<sp/>you<sp/>may<sp/>want<sp/>to<sp/>check<sp/>to<sp/>see<sp/>whether<sp/>any<sp/>corrupt-data</highlight></codeline>
<codeline lineno="1578"><highlight class="comment"><sp/><sp/><sp/>*<sp/>warnings<sp/>occurred<sp/>(test<sp/>whether<sp/>jerr.pub.num_warnings<sp/>is<sp/>nonzero).</highlight></codeline>
<codeline lineno="1579"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>And<sp/>we&apos;re<sp/>done!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1586"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1587"><highlight class="comment">idCinematicLocal::RoQInterrupt</highlight></codeline>
<codeline lineno="1588"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1589"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idCinematicLocal::RoQInterrupt(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*framedata;</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/>iFile-&gt;Read(<sp/>file,<sp/>RoQFrameSize+8<sp/>);</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>RoQPlayed<sp/>&gt;=<sp/>ROQSize<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(looping)<sp/>{</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoQReset();</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>FMV_EOF;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/>framedata<sp/>=<sp/>file;</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight><highlight class="comment">//<sp/>new<sp/>frame<sp/>is<sp/>ready</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal">redump:</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(roq_id)<sp/></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ROQ_QUAD_VQ:</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((numQuads&amp;1))<sp/>{</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalBuffer0<sp/>=<sp/>t[1];</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoQPrepMcomp(<sp/>roqF0,<sp/>roqF1<sp/>);</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blitVQQuad32fs(<sp/>qStatus[1],<sp/>framedata);</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/><sp/><sp/>image<sp/>+<sp/>screenDelta;</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalBuffer0<sp/>=<sp/>t[0];</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoQPrepMcomp(<sp/>roqF0,<sp/>roqF1<sp/>);</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blitVQQuad32fs(<sp/>qStatus[0],<sp/>framedata<sp/>);</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/><sp/><sp/>image;</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numQuads<sp/>==<sp/>0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(image+screenDelta,<sp/>image,<sp/>samplesPerLine*ysize);</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numQuads++;</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dirty<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ROQ_CODEBOOK:</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decodeCodeBook(<sp/>framedata,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)roq_flags<sp/>);</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ZA_SOUND_MONO:</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ZA_SOUND_STEREO:</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ROQ_QUAD_INFO:</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numQuads<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readQuadInfo(<sp/>framedata<sp/>);</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setupQuad(<sp/>0,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numQuads<sp/>!=<sp/>1)<sp/>numQuads<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ROQ_PACKET:</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inMemory<sp/>=<sp/>(<sp/>roq_flags<sp/>!=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoQFrameSize<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ROQ_QUAD_HANG:</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoQFrameSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ROQ_QUAD_JPEG:</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!numQuads)<sp/>{<sp/></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalBuffer0<sp/>=<sp/>t[0];</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JPEGBlit(<sp/>image,<sp/>framedata,<sp/>RoQFrameSize<sp/>);</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(image+screenDelta,<sp/>image,<sp/>samplesPerLine*ysize);</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numQuads++;</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>FMV_EOF;</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight><highlight class="comment">//<sp/>read<sp/>in<sp/>next<sp/>frame<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>RoQPlayed<sp/>&gt;=<sp/>ROQSize<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(looping)<sp/>{</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoQReset();</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>FMV_EOF;</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/>framedata<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+=<sp/>RoQFrameSize;</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/>roq_id<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>framedata[0]<sp/>+<sp/>framedata[1]*256;</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/>RoQFrameSize<sp/>=<sp/>framedata[2]<sp/>+<sp/>framedata[3]*256<sp/>+<sp/>framedata[4]*65536;</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/>roq_flags<sp/><sp/><sp/><sp/>=<sp/>framedata[6]<sp/>+<sp/>framedata[7]*256;</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/>roqF0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(char)framedata[7];</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/>roqF1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(char)framedata[6];</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RoQFrameSize&gt;65536||roq_id==0x1084)<sp/>{</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;DPrintf(</highlight><highlight class="stringliteral">&quot;roq_size&gt;65536||roq_id==0x1084\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>FMV_EOF;</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(looping)<sp/>{</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoQReset();</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inMemory<sp/>&amp;&amp;<sp/>(status<sp/>!=<sp/>FMV_EOF))<sp/>{<sp/></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inMemory<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>framedata<sp/>+=<sp/>8;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>redump;<sp/></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight><highlight class="comment">//<sp/>one<sp/>more<sp/>frame<sp/>hits<sp/>the<sp/>dust</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>assert(RoQFrameSize<sp/>&lt;=<sp/>65536);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>r<sp/>=<sp/>Sys_StreamedRead(<sp/>file,<sp/>RoQFrameSize+8,<sp/>1,<sp/>iFile<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/>RoQPlayed<sp/><sp/><sp/>+=<sp/>RoQFrameSize+8;</highlight></codeline>
<codeline lineno="1697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1700"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1701"><highlight class="comment">idCinematicLocal::RoQ_init</highlight></codeline>
<codeline lineno="1702"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1703"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idCinematicLocal::RoQ_init(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/>RoQPlayed<sp/>=<sp/>24;</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>get<sp/>frame<sp/>rate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/>roqFPS<sp/><sp/><sp/>=<sp/>file[<sp/>6]<sp/>+<sp/>file[<sp/>7]*256;</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!roqFPS)<sp/>roqFPS<sp/>=<sp/>30;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/>numQuads<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/>roq_id<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>file[<sp/>8]<sp/>+<sp/>file[<sp/>9]*256;</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/>RoQFrameSize=<sp/>file[10]<sp/>+<sp/>file[11]*256<sp/>+<sp/>file[12]*65536;</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/>roq_flags<sp/><sp/><sp/>=<sp/>file[14]<sp/>+<sp/>file[15]*256;</highlight></codeline>
<codeline lineno="1718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1721"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1722"><highlight class="comment">idCinematicLocal::RoQShutdown</highlight></codeline>
<codeline lineno="1723"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1724"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idCinematicLocal::RoQShutdown(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>status<sp/>==<sp/>FMV_IDLE<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>FMV_IDLE;</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>iFile<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileSystem-&gt;CloseFile(<sp/>iFile<sp/>);</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iFile<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/>fileName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1737"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"></highlight><highlight class="comment">//===========================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1742"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1743"><highlight class="comment">idSndWindow::InitFromFile</highlight></codeline>
<codeline lineno="1744"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1745"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idSndWindow::InitFromFile(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*qpath,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>looping<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>fname<sp/>=<sp/>qpath;</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/>fname.ToLower();</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!fname.Icmp(<sp/></highlight><highlight class="stringliteral">&quot;waveform&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showWaveform<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showWaveform<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1759"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1760"><highlight class="comment">idSndWindow::ImageForTime</highlight></codeline>
<codeline lineno="1761"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1762"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><ref refid="structcin_data__t" kindref="compound">cinData_t</ref><sp/>idSndWindow::ImageForTime(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>milliseconds<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>soundSystem-&gt;ImageForTime(<sp/>milliseconds,<sp/>showWaveform<sp/>);</highlight></codeline>
<codeline lineno="1765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1768"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1769"><highlight class="comment">idSndWindow::AnimationLength</highlight></codeline>
<codeline lineno="1770"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1771"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idSndWindow::AnimationLength()<sp/>{</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1774"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp"/>
  </compounddef>
</doxygen>
