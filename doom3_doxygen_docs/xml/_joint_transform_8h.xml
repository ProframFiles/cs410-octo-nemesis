<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_joint_transform_8h" kind="file">
    <compoundname>JointTransform.h</compoundname>
    <includedby refid="_lib_8h" local="yes">E:/sources/3rd_party/DOOM/neo/idlib/Lib.h</includedby>
    <innerclass refid="classid_joint_quat" prot="public">idJointQuat</innerclass>
    <innerclass refid="classid_joint_mat" prot="public">idJointMat</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__JOINTTRANSFORM_H__</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__JOINTTRANSFORM_H__</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="33"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="34"><highlight class="comment"></highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/>Joint<sp/>Quaternion</highlight></codeline>
<codeline lineno="36"><highlight class="comment"></highlight></codeline>
<codeline lineno="37"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="38"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classid_joint_quat" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classid_joint_quat" kindref="compound">idJointQuat</ref><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_quat" kindref="compound">idQuat</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="49"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="50"><highlight class="comment"></highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/>Joint<sp/>Matrix</highlight></codeline>
<codeline lineno="52"><highlight class="comment"></highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/>idMat3<sp/>m;</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/>idVec3<sp/>t;</highlight></codeline>
<codeline lineno="55"><highlight class="comment"></highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/>m[0][0],<sp/>m[1][0],<sp/>m[2][0],<sp/>t[0]</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/>m[0][1],<sp/>m[1][1],<sp/>m[2][1],<sp/>t[1]</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/>m[0][2],<sp/>m[1][2],<sp/>m[2][2],<sp/>t[2]</highlight></codeline>
<codeline lineno="59"><highlight class="comment"></highlight></codeline>
<codeline lineno="60"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="61"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="classid_joint_mat" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classid_joint_mat" kindref="compound">idJointMat</ref><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetRotation(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/>&amp;m<sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetTranslation(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;t<sp/>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator*(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;v<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>rotate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator*(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/>&amp;v<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rotate<sp/>and<sp/>translate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_joint_mat" kindref="compound">idJointMat</ref><sp/>&amp;<sp/><sp/><sp/><sp/>operator*=(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_joint_mat" kindref="compound">idJointMat</ref><sp/>&amp;a<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>transform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_joint_mat" kindref="compound">idJointMat</ref><sp/>&amp;<sp/><sp/><sp/><sp/>operator/=(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_joint_mat" kindref="compound">idJointMat</ref><sp/>&amp;a<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>untransform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Compare(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_joint_mat" kindref="compound">idJointMat</ref><sp/>&amp;a<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exact<sp/>compare,<sp/>no<sp/>epsilon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Compare(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_joint_mat" kindref="compound">idJointMat</ref><sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>epsilon<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>compare<sp/>with<sp/>epsilon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator==(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_joint_mat" kindref="compound">idJointMat</ref><sp/>&amp;a<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exact<sp/>compare,<sp/>no<sp/>epsilon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator!=(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_joint_mat" kindref="compound">idJointMat</ref><sp/>&amp;a<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exact<sp/>compare,<sp/>no<sp/>epsilon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ToMat3(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ToVec3(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_joint_quat" kindref="compound">idJointQuat</ref><sp/><sp/><sp/><sp/><sp/>ToJointQuat(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/>ToFloatPtr(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ToFloatPtr(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat[3*4];</highlight></codeline>
<codeline lineno="88"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">ID_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idJointMat::SetRotation(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/>&amp;m<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>idMat3<sp/>is<sp/>transposed<sp/>because<sp/>it<sp/>is<sp/>column-major</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>=<sp/>m[0][0];</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>=<sp/>m[1][0];</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>=<sp/>m[2][0];</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>=<sp/>m[0][1];</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>=<sp/>m[1][1];</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>=<sp/>m[2][1];</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>=<sp/>m[0][2];</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>=<sp/>m[1][2];</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>=<sp/>m[2][2];</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">ID_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idJointMat::SetTranslation(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;t<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>=<sp/>t[0];</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>=<sp/>t[1];</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>=<sp/>t[2];</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">ID_INLINE<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>idJointMat::operator*(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;v<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(<sp/><sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>*<sp/>v[0]<sp/>+<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>*<sp/>v[1]<sp/>+<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>*<sp/>v[2],</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>*<sp/>v[0]<sp/>+<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>*<sp/>v[1]<sp/>+<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>*<sp/>v[2],</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>*<sp/>v[0]<sp/>+<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>*<sp/>v[1]<sp/>+<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>*<sp/>v[2]<sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">ID_INLINE<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>idJointMat::operator*(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/>&amp;v<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(<sp/><sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>*<sp/>v[0]<sp/>+<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>*<sp/>v[1]<sp/>+<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>*<sp/>v[2]<sp/>+<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>*<sp/>v[3],</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>*<sp/>v[0]<sp/>+<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>*<sp/>v[1]<sp/>+<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>*<sp/>v[2]<sp/>+<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>*<sp/>v[3],</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>*<sp/>v[0]<sp/>+<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>*<sp/>v[1]<sp/>+<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>*<sp/>v[2]<sp/>+<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>*<sp/>v[3]<sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">ID_INLINE<sp/><ref refid="classid_joint_mat" kindref="compound">idJointMat</ref><sp/>&amp;idJointMat::operator*=(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_joint_mat" kindref="compound">idJointMat</ref><sp/>&amp;a<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dst[3];</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>dst[0]<sp/>=<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>*<sp/>a.mat[0<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>+<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>*<sp/>a.mat[0<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>+<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>*<sp/>a.mat[0<sp/>*<sp/>4<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>dst[1]<sp/>=<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>*<sp/>a.mat[1<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>+<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>*<sp/>a.mat[1<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>+<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>*<sp/>a.mat[1<sp/>*<sp/>4<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>dst[2]<sp/>=<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>*<sp/>a.mat[2<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>+<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>*<sp/>a.mat[2<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>+<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>*<sp/>a.mat[2<sp/>*<sp/>4<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>=<sp/>dst[0];</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>=<sp/>dst[1];</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>=<sp/>dst[2];</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>dst[0]<sp/>=<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>*<sp/>a.mat[0<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>+<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>*<sp/>a.mat[0<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>+<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>*<sp/>a.mat[0<sp/>*<sp/>4<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>dst[1]<sp/>=<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>*<sp/>a.mat[1<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>+<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>*<sp/>a.mat[1<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>+<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>*<sp/>a.mat[1<sp/>*<sp/>4<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>dst[2]<sp/>=<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>*<sp/>a.mat[2<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>+<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>*<sp/>a.mat[2<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>+<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>*<sp/>a.mat[2<sp/>*<sp/>4<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>=<sp/>dst[0];</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>=<sp/>dst[1];</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>=<sp/>dst[2];</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>dst[0]<sp/>=<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>*<sp/>a.mat[0<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>+<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>*<sp/>a.mat[0<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>+<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>*<sp/>a.mat[0<sp/>*<sp/>4<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>dst[1]<sp/>=<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>*<sp/>a.mat[1<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>+<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>*<sp/>a.mat[1<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>+<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>*<sp/>a.mat[1<sp/>*<sp/>4<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>dst[2]<sp/>=<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>*<sp/>a.mat[2<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>+<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>*<sp/>a.mat[2<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>+<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>*<sp/>a.mat[2<sp/>*<sp/>4<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>=<sp/>dst[0];</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>=<sp/>dst[1];</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>=<sp/>dst[2];</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>dst[0]<sp/>=<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>*<sp/>a.mat[0<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>+<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>*<sp/>a.mat[0<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>+<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>*<sp/>a.mat[0<sp/>*<sp/>4<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>dst[1]<sp/>=<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>*<sp/>a.mat[1<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>+<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>*<sp/>a.mat[1<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>+<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>*<sp/>a.mat[1<sp/>*<sp/>4<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>dst[2]<sp/>=<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>*<sp/>a.mat[2<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>+<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>*<sp/>a.mat[2<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>+<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>*<sp/>a.mat[2<sp/>*<sp/>4<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>=<sp/>dst[0];</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>=<sp/>dst[1];</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>=<sp/>dst[2];</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>+=<sp/>a.mat[0<sp/>*<sp/>4<sp/>+<sp/>3];</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>+=<sp/>a.mat[1<sp/>*<sp/>4<sp/>+<sp/>3];</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>+=<sp/>a.mat[2<sp/>*<sp/>4<sp/>+<sp/>3];</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal">ID_INLINE<sp/><ref refid="classid_joint_mat" kindref="compound">idJointMat</ref><sp/>&amp;idJointMat::operator/=(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_joint_mat" kindref="compound">idJointMat</ref><sp/>&amp;a<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dst[3];</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>-=<sp/>a.mat[0<sp/>*<sp/>4<sp/>+<sp/>3];</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>-=<sp/>a.mat[1<sp/>*<sp/>4<sp/>+<sp/>3];</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>-=<sp/>a.mat[2<sp/>*<sp/>4<sp/>+<sp/>3];</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>dst[0]<sp/>=<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>*<sp/>a.mat[0<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>+<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>*<sp/>a.mat[1<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>+<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>*<sp/>a.mat[2<sp/>*<sp/>4<sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>dst[1]<sp/>=<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>*<sp/>a.mat[0<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>+<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>*<sp/>a.mat[1<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>+<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>*<sp/>a.mat[2<sp/>*<sp/>4<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>dst[2]<sp/>=<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>*<sp/>a.mat[0<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>+<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>*<sp/>a.mat[1<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>+<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>*<sp/>a.mat[2<sp/>*<sp/>4<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>=<sp/>dst[0];</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>=<sp/>dst[1];</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>=<sp/>dst[2];</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>dst[0]<sp/>=<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>*<sp/>a.mat[0<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>+<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>*<sp/>a.mat[1<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>+<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>*<sp/>a.mat[2<sp/>*<sp/>4<sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>dst[1]<sp/>=<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>*<sp/>a.mat[0<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>+<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>*<sp/>a.mat[1<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>+<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>*<sp/>a.mat[2<sp/>*<sp/>4<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>dst[2]<sp/>=<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>*<sp/>a.mat[0<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>+<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>*<sp/>a.mat[1<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>+<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>*<sp/>a.mat[2<sp/>*<sp/>4<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>=<sp/>dst[0];</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>=<sp/>dst[1];</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>=<sp/>dst[2];</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>dst[0]<sp/>=<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>*<sp/>a.mat[0<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>+<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>*<sp/>a.mat[1<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>+<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>*<sp/>a.mat[2<sp/>*<sp/>4<sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>dst[1]<sp/>=<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>*<sp/>a.mat[0<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>+<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>*<sp/>a.mat[1<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>+<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>*<sp/>a.mat[2<sp/>*<sp/>4<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>dst[2]<sp/>=<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>*<sp/>a.mat[0<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>+<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>*<sp/>a.mat[1<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>+<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>*<sp/>a.mat[2<sp/>*<sp/>4<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>=<sp/>dst[0];</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>=<sp/>dst[1];</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>=<sp/>dst[2];</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>dst[0]<sp/>=<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>*<sp/>a.mat[0<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>+<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>*<sp/>a.mat[1<sp/>*<sp/>4<sp/>+<sp/>0]<sp/>+<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>*<sp/>a.mat[2<sp/>*<sp/>4<sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>dst[1]<sp/>=<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>*<sp/>a.mat[0<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>+<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>*<sp/>a.mat[1<sp/>*<sp/>4<sp/>+<sp/>1]<sp/>+<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>*<sp/>a.mat[2<sp/>*<sp/>4<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>dst[2]<sp/>=<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>*<sp/>a.mat[0<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>+<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>*<sp/>a.mat[1<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>+<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>*<sp/>a.mat[2<sp/>*<sp/>4<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>=<sp/>dst[0];</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>=<sp/>dst[1];</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>=<sp/>dst[2];</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal">ID_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idJointMat::Compare(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_joint_mat" kindref="compound">idJointMat</ref><sp/>&amp;a<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>12;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>mat[i]<sp/>!=<sp/>a.mat[i]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal">ID_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idJointMat::Compare(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_joint_mat" kindref="compound">idJointMat</ref><sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>epsilon<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>12;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>idMath::Fabs(<sp/>mat[i]<sp/>-<sp/>a.mat[i]<sp/>)<sp/>&gt;<sp/>epsilon<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal">ID_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idJointMat::operator==(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_joint_mat" kindref="compound">idJointMat</ref><sp/>&amp;a<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Compare(<sp/>a<sp/>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal">ID_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idJointMat::operator!=(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_joint_mat" kindref="compound">idJointMat</ref><sp/>&amp;a<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!Compare(<sp/>a<sp/>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">ID_INLINE<sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/>idJointMat::ToMat3(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref>(<sp/><sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>0],<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>0],<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>0],</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>1],<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>1],<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>1],</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>2],<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>2],<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>2]<sp/>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal">ID_INLINE<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>idJointMat::ToVec3(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(<sp/>mat[0<sp/>*<sp/>4<sp/>+<sp/>3],<sp/>mat[1<sp/>*<sp/>4<sp/>+<sp/>3],<sp/>mat[2<sp/>*<sp/>4<sp/>+<sp/>3]<sp/>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal">ID_INLINE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*idJointMat::ToFloatPtr(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mat;</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal">ID_INLINE<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*idJointMat::ToFloatPtr(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mat;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!__JOINTTRANSFORM_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h"/>
  </compounddef>
</doxygen>
