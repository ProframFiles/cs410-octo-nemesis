<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_lib_8h" kind="file">
    <compoundname>Lib.h</compoundname>
    <includes refid="_heap_8h" local="yes">Heap.h</includes>
    <includes refid="_list_8h" local="yes">containers/List.h</includes>
    <includes refid="_simd_8h" local="yes">math/Simd.h</includes>
    <includes refid="_math_8h" local="yes">math/Math.h</includes>
    <includes refid="_random_8h" local="yes">math/Random.h</includes>
    <includes refid="_complex_8h" local="yes">math/Complex.h</includes>
    <includes refid="_vector_8h" local="yes">math/Vector.h</includes>
    <includes refid="_matrix_8h" local="yes">math/Matrix.h</includes>
    <includes refid="_angles_8h" local="yes">math/Angles.h</includes>
    <includes refid="_quat_8h" local="yes">math/Quat.h</includes>
    <includes refid="_rotation_8h" local="yes">math/Rotation.h</includes>
    <includes refid="_plane_8h" local="yes">math/Plane.h</includes>
    <includes refid="_pluecker_8h" local="yes">math/Pluecker.h</includes>
    <includes refid="_polynomial_8h" local="yes">math/Polynomial.h</includes>
    <includes refid="_extrapolate_8h" local="yes">math/Extrapolate.h</includes>
    <includes refid="_interpolate_8h" local="yes">math/Interpolate.h</includes>
    <includes refid="_curve_8h" local="yes">math/Curve.h</includes>
    <includes refid="_ode_8h" local="yes">math/Ode.h</includes>
    <includes refid="_lcp_8h" local="yes">math/Lcp.h</includes>
    <includes refid="_sphere_8h" local="yes">bv/Sphere.h</includes>
    <includes refid="_bounds_8h" local="yes">bv/Bounds.h</includes>
    <includes refid="_box_8h" local="yes">bv/Box.h</includes>
    <includes refid="_frustum_8h" local="yes">bv/Frustum.h</includes>
    <includes refid="_draw_vert_8h" local="yes">geometry/DrawVert.h</includes>
    <includes refid="_joint_transform_8h" local="yes">geometry/JointTransform.h</includes>
    <includes refid="_winding_8h" local="yes">geometry/Winding.h</includes>
    <includes refid="_winding2_d_8h" local="yes">geometry/Winding2D.h</includes>
    <includes refid="_surface_8h" local="yes">geometry/Surface.h</includes>
    <includes refid="_surface___patch_8h" local="yes">geometry/Surface_Patch.h</includes>
    <includes refid="_surface___polytope_8h" local="yes">geometry/Surface_Polytope.h</includes>
    <includes refid="_surface___swept_spline_8h" local="yes">geometry/Surface_SweptSpline.h</includes>
    <includes refid="_trace_model_8h" local="yes">geometry/TraceModel.h</includes>
    <includes refid="_str_8h" local="yes">Str.h</includes>
    <includes refid="_token_8h" local="yes">Token.h</includes>
    <includes refid="_lexer_8h" local="yes">Lexer.h</includes>
    <includes refid="_parser_8h" local="yes">Parser.h</includes>
    <includes refid="idlib_2base64_8h" local="yes">Base64.h</includes>
    <includes refid="_cmd_args_8h" local="yes">CmdArgs.h</includes>
    <includes refid="_b_tree_8h" local="yes">containers/BTree.h</includes>
    <includes refid="_bin_search_8h" local="yes">containers/BinSearch.h</includes>
    <includes refid="_hash_index_8h" local="yes">containers/HashIndex.h</includes>
    <includes refid="_hash_table_8h" local="yes">containers/HashTable.h</includes>
    <includes refid="_static_list_8h" local="yes">containers/StaticList.h</includes>
    <includes refid="_link_list_8h" local="yes">containers/LinkList.h</includes>
    <includes refid="_hierarchy_8h" local="yes">containers/Hierarchy.h</includes>
    <includes refid="_queue_8h" local="yes">containers/Queue.h</includes>
    <includes refid="_stack_8h" local="yes">containers/Stack.h</includes>
    <includes refid="_str_list_8h" local="yes">containers/StrList.h</includes>
    <includes refid="_str_pool_8h" local="yes">containers/StrPool.h</includes>
    <includes refid="_vector_set_8h" local="yes">containers/VectorSet.h</includes>
    <includes refid="_plane_set_8h" local="yes">containers/PlaneSet.h</includes>
    <includes refid="_c_r_c32_8h" local="yes">hashing/CRC32.h</includes>
    <includes refid="_m_d4_8h" local="yes">hashing/MD4.h</includes>
    <includes refid="idlib_2hashing_2md5_8h" local="yes">hashing/MD5.h</includes>
    <includes refid="idlib_2dict_8h" local="yes">Dict.h</includes>
    <includes refid="_lang_dict_8h" local="yes">LangDict.h</includes>
    <includes refid="_bit_msg_8h" local="yes">BitMsg.h</includes>
    <includes refid="_map_file_8h" local="yes">MapFile.h</includes>
    <includes refid="_timer_8h" local="yes">Timer.h</includes>
    <innerclass refid="classid_lib" prot="public">idLib</innerclass>
    <innerclass refid="classid_exception" prot="public">idException</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_lib_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" prot="public" static="no">
        <name>NULL</name>
        <initializer>((void *)0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="88" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_lib_8h_1a6c4e5273222ae11ea8e76e63bd2b33f5" prot="public" static="no">
        <name>BIT</name>
        <param><defname>num</defname></param>
        <initializer>( 1 &lt;&lt; ( num ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="92" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_lib_8h_1adf9097a01af0067c10d749471dbdbe34" prot="public" static="no">
        <name>MAX_STRING_CHARS</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="95" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_lib_8h_1a8ac7ce489237d74658aff9ea802f5412" prot="public" static="no">
        <name>MAX_WORLD_COORD</name>
        <initializer>( 128 * 1024 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="98" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_lib_8h_1a5e0bb259372fe1c502dd6d51b16f15e9" prot="public" static="no">
        <name>MIN_WORLD_COORD</name>
        <initializer>( -128 * 1024 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="99" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_lib_8h_1a3562307e64eca4db99756c94d45fcb78" prot="public" static="no">
        <name>MAX_WORLD_SIZE</name>
        <initializer>( MAX_WORLD_COORD - MIN_WORLD_COORD )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="100" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_lib_8h_1a0c8186d9b9b7880309c27230bbb5e69d" prot="public" static="no">
        <type>unsigned char</type>
        <definition>typedef unsigned char byte</definition>
        <argsstring></argsstring>
        <name>byte</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="75" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_lib_8h_1a285e72252c100e2508e4e933a0738f2b" prot="public" static="no">
        <type>unsigned short</type>
        <definition>typedef unsigned short word</definition>
        <argsstring></argsstring>
        <name>word</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="76" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_lib_8h_1a855ebb1284efb85f8be57d819efa519a" prot="public" static="no">
        <type>unsigned int</type>
        <definition>typedef unsigned int dword</definition>
        <argsstring></argsstring>
        <name>dword</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="77" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_lib_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" prot="public" static="no">
        <type>unsigned int</type>
        <definition>typedef unsigned int uint</definition>
        <argsstring></argsstring>
        <name>uint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="78" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_lib_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" prot="public" static="no">
        <type>unsigned long</type>
        <definition>typedef unsigned long ulong</definition>
        <argsstring></argsstring>
        <name>ulong</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="79" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_lib_8h_1aa46eefcd4cf4d61e2fa13b5ff45f6847" prot="public" static="no">
        <type>int</type>
        <definition>typedef int qhandle_t</definition>
        <argsstring></argsstring>
        <name>qhandle_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="81" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_lib_8h_1ae309c6fbb874ccc6f25e0db4fb0ee5c8" prot="public" static="no" mutable="no">
        <type><ref refid="classid_vec4" kindref="compound">idVec4</ref></type>
        <definition>idVec4 colorBlack</definition>
        <argsstring></argsstring>
        <name>colorBlack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="103" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lib_8h_1aff5329dda7a30bc514fde7a6725c8762" prot="public" static="no" mutable="no">
        <type><ref refid="classid_vec4" kindref="compound">idVec4</ref></type>
        <definition>idVec4 colorWhite</definition>
        <argsstring></argsstring>
        <name>colorWhite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="104" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lib_8h_1a560ce86a7944d5ac7cfc7a290b39090f" prot="public" static="no" mutable="no">
        <type><ref refid="classid_vec4" kindref="compound">idVec4</ref></type>
        <definition>idVec4 colorRed</definition>
        <argsstring></argsstring>
        <name>colorRed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="105" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lib_8h_1aa8f8089d7c11c315ad14ff9f10301957" prot="public" static="no" mutable="no">
        <type><ref refid="classid_vec4" kindref="compound">idVec4</ref></type>
        <definition>idVec4 colorGreen</definition>
        <argsstring></argsstring>
        <name>colorGreen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="106" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lib_8h_1a37ea1867bf59a5a7caf15bfaba95c95c" prot="public" static="no" mutable="no">
        <type><ref refid="classid_vec4" kindref="compound">idVec4</ref></type>
        <definition>idVec4 colorBlue</definition>
        <argsstring></argsstring>
        <name>colorBlue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="107" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lib_8h_1a5b717d5b1aa7a1cf72a2d8d1f02c92b9" prot="public" static="no" mutable="no">
        <type><ref refid="classid_vec4" kindref="compound">idVec4</ref></type>
        <definition>idVec4 colorYellow</definition>
        <argsstring></argsstring>
        <name>colorYellow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="108" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lib_8h_1a625c1bd5102099a5afdbbc21ba1a8ae9" prot="public" static="no" mutable="no">
        <type><ref refid="classid_vec4" kindref="compound">idVec4</ref></type>
        <definition>idVec4 colorMagenta</definition>
        <argsstring></argsstring>
        <name>colorMagenta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="109" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lib_8h_1a24d2a4590ad9157ed2ed6abd931677cd" prot="public" static="no" mutable="no">
        <type><ref refid="classid_vec4" kindref="compound">idVec4</ref></type>
        <definition>idVec4 colorCyan</definition>
        <argsstring></argsstring>
        <name>colorCyan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="110" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lib_8h_1abe0bd831d1d3354e25f3f4e967ac9198" prot="public" static="no" mutable="no">
        <type><ref refid="classid_vec4" kindref="compound">idVec4</ref></type>
        <definition>idVec4 colorOrange</definition>
        <argsstring></argsstring>
        <name>colorOrange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="111" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lib_8h_1a383e3d3e5abea9740857c78c88f4cf62" prot="public" static="no" mutable="no">
        <type><ref refid="classid_vec4" kindref="compound">idVec4</ref></type>
        <definition>idVec4 colorPurple</definition>
        <argsstring></argsstring>
        <name>colorPurple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="112" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lib_8h_1ad4f11b90769eaeda382f40d78070bc72" prot="public" static="no" mutable="no">
        <type><ref refid="classid_vec4" kindref="compound">idVec4</ref></type>
        <definition>idVec4 colorPink</definition>
        <argsstring></argsstring>
        <name>colorPink</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="113" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lib_8h_1abc25569edd7cb6f7619bdbab50c3757f" prot="public" static="no" mutable="no">
        <type><ref refid="classid_vec4" kindref="compound">idVec4</ref></type>
        <definition>idVec4 colorBrown</definition>
        <argsstring></argsstring>
        <name>colorBrown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="114" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lib_8h_1a76c3dd6779e7360d79ce875a92943a26" prot="public" static="no" mutable="no">
        <type><ref refid="classid_vec4" kindref="compound">idVec4</ref></type>
        <definition>idVec4 colorLtGrey</definition>
        <argsstring></argsstring>
        <name>colorLtGrey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="115" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lib_8h_1a91ba9db57b973c725fc6d222484837bf" prot="public" static="no" mutable="no">
        <type><ref refid="classid_vec4" kindref="compound">idVec4</ref></type>
        <definition>idVec4 colorMdGrey</definition>
        <argsstring></argsstring>
        <name>colorMdGrey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="116" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_lib_8h_1a6697e39886c0d7125de4f824fae86a15" prot="public" static="no" mutable="no">
        <type><ref refid="classid_vec4" kindref="compound">idVec4</ref></type>
        <definition>idVec4 colorDkGrey</definition>
        <argsstring></argsstring>
        <name>colorDkGrey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="117" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_lib_8h_1a81c3aae10619b764aff4e7b78481a26b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>dword</type>
        <definition>dword PackColor</definition>
        <argsstring>(const idVec3 &amp;color)</argsstring>
        <name>PackColor</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="120" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="190" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="_lib_8h_1a57b77d6662c1ffe641a142e436acc9e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnpackColor</definition>
        <argsstring>(const dword color, idVec3 &amp;unpackedColor)</argsstring>
        <name>UnpackColor</name>
        <param>
          <type>const dword</type>
          <declname>color</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>unpackedColor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="121" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="211" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="_lib_8h_1affed0dabc17447979a9fb20775ae88b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>dword</type>
        <definition>dword PackColor</definition>
        <argsstring>(const idVec4 &amp;color)</argsstring>
        <name>PackColor</name>
        <param>
          <type>const <ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="122" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="147" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="_lib_8h_1aa21188017738e1f2f3e98a49c1c65b31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnpackColor</definition>
        <argsstring>(const dword color, idVec4 &amp;unpackedColor)</argsstring>
        <name>UnpackColor</name>
        <param>
          <type>const dword</type>
          <declname>color</declname>
        </param>
        <param>
          <type><ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>unpackedColor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="123" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="169" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="_lib_8h_1a978c48a348221d299cff33735bba024d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>short</type>
        <definition>short BigShort</definition>
        <argsstring>(short l)</argsstring>
        <name>BigShort</name>
        <param>
          <type>short</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="126" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="278" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="_lib_8h_1a828f0707165da852f26a4ba78b5c8b93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>short</type>
        <definition>short LittleShort</definition>
        <argsstring>(short l)</argsstring>
        <name>LittleShort</name>
        <param>
          <type>short</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="127" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="279" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="_lib_8h_1ab71af9df568c77b660e319cd5c55c5f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int BigLong</definition>
        <argsstring>(int l)</argsstring>
        <name>BigLong</name>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="128" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="280" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="_lib_8h_1a6d86ea8391ece88ae93396b5963fd000" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LittleLong</definition>
        <argsstring>(int l)</argsstring>
        <name>LittleLong</name>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="129" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="281" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="_lib_8h_1a9e67da200e74578e74cab026386ad124" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float BigFloat</definition>
        <argsstring>(float l)</argsstring>
        <name>BigFloat</name>
        <param>
          <type>float</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="130" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="282" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="_lib_8h_1aab0c3ba93ad499c902e21c6aafc4abeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float LittleFloat</definition>
        <argsstring>(float l)</argsstring>
        <name>LittleFloat</name>
        <param>
          <type>float</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="131" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="283" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="_lib_8h_1aaccca1d2784ce3dd24ffde6838dfd543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BigRevBytes</definition>
        <argsstring>(void *bp, int elsize, int elcount)</argsstring>
        <name>BigRevBytes</name>
        <param>
          <type>void *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>elsize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>elcount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="132" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="284" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="_lib_8h_1ac77bd281bde42f9aadb687a0b03aafeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LittleRevBytes</definition>
        <argsstring>(void *bp, int elsize, int elcount)</argsstring>
        <name>LittleRevBytes</name>
        <param>
          <type>void *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>elsize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>elcount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="133" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="285" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="_lib_8h_1a51d6efc0ae39f523c0dd0d2e30ffb280" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LittleBitField</definition>
        <argsstring>(void *bp, int elsize)</argsstring>
        <name>LittleBitField</name>
        <param>
          <type>void *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>elsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="134" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="286" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="_lib_8h_1a3f1e51a375175dfec81299186ba5135f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Swap_Init</definition>
        <argsstring>(void)</argsstring>
        <name>Swap_Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="135" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="525" bodyend="556"/>
      </memberdef>
      <memberdef kind="function" id="_lib_8h_1a7306f9eaae0369079adb91bff1f461c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Swap_IsBigEndian</definition>
        <argsstring>(void)</argsstring>
        <name>Swap_IsBigEndian</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="137" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="563" bodyend="566"/>
      </memberdef>
      <memberdef kind="function" id="_lib_8h_1ac90620cddce45767581f25805392686f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SixtetsForInt</definition>
        <argsstring>(byte *out, int src)</argsstring>
        <name>SixtetsForInt</name>
        <param>
          <type>byte *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="140" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="288" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="_lib_8h_1a9c47b85242eb6ebfd7334b97c802b15c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int IntForSixtets</definition>
        <argsstring>(byte *in)</argsstring>
        <name>IntForSixtets</name>
        <param>
          <type>byte *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="141" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.cpp" bodystart="289" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="_lib_8h_1abf764ba77d68b85175cb6f187cd3ae10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>ID_INLINE T</type>
        <definition>ID_INLINE T Max</definition>
        <argsstring>(T x, T y)</argsstring>
        <name>Max</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="158" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" bodystart="158" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="_lib_8h_1a0fa60704952c0f8173a56d51c30ebd57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>ID_INLINE T</type>
        <definition>ID_INLINE T Min</definition>
        <argsstring>(T x, T y)</argsstring>
        <name>Min</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" line="159" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h" bodystart="159" bodyend="159"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__LIB_H__</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__LIB_H__</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="34"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="35"><highlight class="comment"></highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/><sp/>idLib<sp/>contains<sp/>stateless<sp/>support<sp/>classes<sp/>and<sp/>concrete<sp/>types.<sp/>Some<sp/>classes</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/><sp/><sp/>do<sp/>have<sp/>static<sp/>variables,<sp/>but<sp/>such<sp/>variables<sp/>are<sp/>initialized<sp/>once<sp/>and</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/><sp/>read-only<sp/>after<sp/>initialization<sp/>(they<sp/>do<sp/>not<sp/>maintain<sp/>a<sp/>modifiable<sp/>state).</highlight></codeline>
<codeline lineno="39"><highlight class="comment"></highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>interface<sp/>pointers<sp/>idSys,<sp/>idCommon,<sp/>idCVarSystem<sp/>and<sp/>idFileSystem</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/><sp/>should<sp/>be<sp/>set<sp/>before<sp/>using<sp/>idLib.<sp/>The<sp/>pointers<sp/>stored<sp/>here<sp/>should<sp/>not</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/><sp/>be<sp/>used<sp/>by<sp/>any<sp/>part<sp/>of<sp/>the<sp/>engine<sp/>except<sp/>for<sp/>idLib.</highlight></codeline>
<codeline lineno="43"><highlight class="comment"></highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>frameNumber<sp/>should<sp/>be<sp/>continuously<sp/>set<sp/>to<sp/>the<sp/>number<sp/>of<sp/>the<sp/>current</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/><sp/>frame<sp/>if<sp/>frame<sp/>base<sp/>memory<sp/>logging<sp/>is<sp/>required.</highlight></codeline>
<codeline lineno="46"><highlight class="comment"></highlight></codeline>
<codeline lineno="47"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="48"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classid_lib" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classid_lib" kindref="compound">idLib</ref><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classid_sys" kindref="compound">idSys</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classid_common" kindref="compound">idCommon</ref><sp/>*<sp/><sp/><sp/><sp/><sp/>common;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classid_c_var_system" kindref="compound">idCVarSystem</ref><sp/>*<sp/>cvarSystem;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classid_file_system" kindref="compound">idFileSystem</ref><sp/>*<sp/>fileSystem;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameNumber;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Init(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShutDown(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wrapper<sp/>to<sp/>idCommon<sp/>functions<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...<sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Warning(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...<sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal">};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="68"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="69"><highlight class="comment"></highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/>Types<sp/>and<sp/>defines<sp/>used<sp/>throughout<sp/>the<sp/>engine.</highlight></codeline>
<codeline lineno="71"><highlight class="comment"></highlight></codeline>
<codeline lineno="72"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="73"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>8<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>16<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dword;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>32<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ulong;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qhandle_t;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classid_file" kindref="compound">idFile</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classid_vec3" kindref="compound">idVec3</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classid_vec4" kindref="compound">idVec4</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NULL</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>NULL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((void<sp/>*)0)</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BIT</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BIT(<sp/>num<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>1<sp/>&lt;&lt;<sp/>(<sp/>num<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_STRING_CHARS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1024<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>max<sp/>length<sp/>of<sp/>a<sp/>string</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>maximum<sp/>world<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_WORLD_COORD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>128<sp/>*<sp/>1024<sp/>)</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>MIN_WORLD_COORD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>-128<sp/>*<sp/>1024<sp/>)</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>MAX_WORLD_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>MAX_WORLD_COORD<sp/>-<sp/>MIN_WORLD_COORD<sp/>)</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>basic<sp/>colors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/>colorBlack;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/>colorWhite;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/>colorRed;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/>colorGreen;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/>colorBlue;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/>colorYellow;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/>colorMagenta;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/>colorCyan;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/>colorOrange;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/>colorPurple;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/>colorPink;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/>colorBrown;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/>colorLtGrey;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/>colorMdGrey;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/>colorDkGrey;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>packs<sp/>color<sp/>floats<sp/>in<sp/>the<sp/>range<sp/>[0,1]<sp/>into<sp/>an<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">dword<sp/><sp/><sp/>PackColor(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;color<sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>UnpackColor(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dword<sp/>color,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;unpackedColor<sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal">dword<sp/><sp/><sp/>PackColor(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/>&amp;color<sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>UnpackColor(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dword<sp/>color,<sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/>&amp;unpackedColor<sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/>little/big<sp/>endian<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/>BigShort(<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>l<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/>LittleShort(<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>l<sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>BigLong(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>LittleLong(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>BigFloat(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>l<sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>LittleFloat(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>l<sp/>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>BigRevBytes(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*bp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>elsize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>elcount<sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>LittleRevBytes(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*bp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>elsize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>elcount<sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>LittleBitField(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*bp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>elsize<sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>Swap_Init(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>Swap_IsBigEndian(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>base64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>SixtetsForInt(<sp/>byte<sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>IntForSixtets(<sp/>byte<sp/>*in<sp/>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG</highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AssertFailed(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*expression<sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>assert</highlight></codeline>
<codeline lineno="147"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>assert(<sp/>X<sp/>)<sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>X<sp/>)<sp/>{<sp/>}<sp/>else<sp/>AssertFailed(<sp/>__FILE__,<sp/>__LINE__,<sp/>#X<sp/>)</highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="classid_exception" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classid_exception" kindref="compound">idException</ref><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>error[MAX_STRING_CHARS];</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_exception" kindref="compound">idException</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>)<sp/>{<sp/>strcpy(<sp/>error,<sp/>text<sp/>);<sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal">};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/>move<sp/>from<sp/>Math.h<sp/>to<sp/>keep<sp/>gcc<sp/>happy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>ID_INLINE<sp/>T<sp/><sp/><sp/>Max(<sp/>T<sp/>x,<sp/>T<sp/>y<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>x<sp/>&gt;<sp/>y<sp/>)<sp/>?<sp/>x<sp/>:<sp/>y;<sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>ID_INLINE<sp/>T<sp/><sp/><sp/>Min(<sp/>T<sp/>x,<sp/>T<sp/>y<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>x<sp/>&lt;<sp/>y<sp/>)<sp/>?<sp/>x<sp/>:<sp/>y;<sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="162"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="163"><highlight class="comment"></highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/><sp/>idLib<sp/>headers.</highlight></codeline>
<codeline lineno="165"><highlight class="comment"></highlight></codeline>
<codeline lineno="166"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="167"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/>memory<sp/>management<sp/>and<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Heap.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;containers/List.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/>math</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;math/Simd.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;math/Math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;math/Random.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;math/Complex.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;math/Vector.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;math/Matrix.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;math/Angles.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;math/Quat.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;math/Rotation.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;math/Plane.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;math/Pluecker.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;math/Polynomial.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;math/Extrapolate.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;math/Interpolate.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;math/Curve.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;math/Ode.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;math/Lcp.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bounding<sp/>volumes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;bv/Sphere.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;bv/Bounds.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;bv/Box.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;bv/Frustum.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">//<sp/>geometry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;geometry/DrawVert.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;geometry/JointTransform.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;geometry/Winding.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;geometry/Winding2D.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;geometry/Surface.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;geometry/Surface_Patch.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;geometry/Surface_Polytope.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;geometry/Surface_SweptSpline.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;geometry/TraceModel.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">//<sp/>text<sp/>manipulation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Str.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Token.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Lexer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Parser.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Base64.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CmdArgs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">//<sp/>containers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;containers/BTree.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;containers/BinSearch.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;containers/HashIndex.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;containers/HashTable.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;containers/StaticList.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;containers/LinkList.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;containers/Hierarchy.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;containers/Queue.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;containers/Stack.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;containers/StrList.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;containers/StrPool.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;containers/VectorSet.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;containers/PlaneSet.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/>hashing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hashing/CRC32.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hashing/MD4.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hashing/MD5.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//<sp/>misc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Dict.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;LangDict.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;BitMsg.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MapFile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Timer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>!__LIB_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lib.h"/>
  </compounddef>
</doxygen>
