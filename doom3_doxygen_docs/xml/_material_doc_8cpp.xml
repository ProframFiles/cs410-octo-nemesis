<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_material_doc_8cpp" kind="file">
    <compoundname>MaterialDoc.cpp</compoundname>
    <includes refid="precompiled_8h" local="yes">../../idlib/precompiled.h</includes>
    <includes refid="_material_doc_8h" local="yes">MaterialDoc.h</includes>
    <includes refid="_material_view_8h" local="yes">MaterialView.h</includes>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../idlib/precompiled.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>hdrstop</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MaterialDoc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MaterialView.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="34"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*<sp/>Constructor<sp/>for<sp/>MaterialDoc.</highlight></codeline>
<codeline lineno="36"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><ref refid="class_material_doc_1a7b699ddec708f1063da3d40b747a363a" kindref="member">MaterialDoc::MaterialDoc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>modified<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>applyWaiting<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>sourceModify<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="43"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="44"><highlight class="comment">*<sp/>Destructor<sp/>for<sp/>MaterialDoc.</highlight></codeline>
<codeline lineno="45"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><ref refid="class_material_doc_1a1694f99a11112eab12cbe4581d9ae1b0" kindref="member">MaterialDoc::~MaterialDoc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1aa6fdcfcbf19743095618e312238ab46c" kindref="member">ClearEditMaterial</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="50"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="51"><highlight class="comment">*<sp/>Initializes<sp/>the<sp/>MaterialDoc<sp/>instance<sp/>with<sp/>a<sp/>specific<sp/>idMaterial.<sp/>This<sp/>method<sp/>will<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="comment">*<sp/>parse<sp/>the<sp/>material<sp/>into<sp/>the<sp/>internal<sp/>dictionary<sp/>representation<sp/>and<sp/>optionally<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="comment">*<sp/>allow<sp/>the<sp/>idMaterial<sp/>object<sp/>to<sp/>reparse<sp/>the<sp/>source.</highlight></codeline>
<codeline lineno="54"><highlight class="comment">*<sp/>@param<sp/>material<sp/>The<sp/>idMaterial<sp/>instance<sp/>to<sp/>use.</highlight></codeline>
<codeline lineno="55"><highlight class="comment">*<sp/>@param<sp/>parseMaterial<sp/>Flag<sp/>to<sp/>determine<sp/>if<sp/>the<sp/>material<sp/>should<sp/>be<sp/>parsed<sp/>into<sp/>the<sp/>editor<sp/>representation.</highlight></codeline>
<codeline lineno="56"><highlight class="comment">*<sp/>@param<sp/>parseRenderMaterial<sp/>Flag<sp/>to<sp/>determine<sp/>if<sp/>the<sp/>idMaterial<sp/>object<sp/>should<sp/>be<sp/>reparsed.</highlight></codeline>
<codeline lineno="57"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1a8e5b7c88ead192a08181ba520d788569" kindref="member">MaterialDoc::SetRenderMaterial</ref>(<ref refid="classid_material" kindref="compound">idMaterial</ref>*<sp/>material,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>parseMaterial,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>parseRenderMatierial)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>renderMaterial<sp/>=<sp/>material;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parseMaterial<sp/>||<sp/><sp/>!renderMaterial)<sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(parseRenderMatierial)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*declText<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>_alloca(<sp/>material-&gt;GetTextLength()<sp/>+<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>material-&gt;GetText(<sp/>declText<sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderMaterial-&gt;GetText(declText);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1a7d93d3a899e98f369c09fd2a0004b5f4" kindref="member">ParseMaterialText</ref>(declText);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1aa6fdcfcbf19743095618e312238ab46c" kindref="member">ClearEditMaterial</ref>();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/>material-&gt;GetName();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_lexer" kindref="compound">idLexer</ref><sp/><sp/><sp/><sp/><sp/>src;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*declText<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>_alloca(<sp/>material-&gt;GetTextLength()<sp/>+<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>material-&gt;GetText(<sp/>declText<sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>renderMaterial-&gt;GetText(declText);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>src.LoadMemory(declText,<sp/>strlen(declText),<sp/></highlight><highlight class="stringliteral">&quot;Material&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1ad2b907414ed188950231e889b50cd0f6" kindref="member">ParseMaterial</ref>(&amp;src);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="90"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="91"><highlight class="comment">*<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>stages<sp/>in<sp/>this<sp/>material.</highlight></codeline>
<codeline lineno="92"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1a10f4f9444b7ea1f5fc79f9cd265c0941" kindref="member">MaterialDoc::GetStageCount</ref>()<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>editMaterial.stages.Num();</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="97"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="98"><highlight class="comment">*<sp/>Returns<sp/>the<sp/>index<sp/>of<sp/>the<sp/>stage<sp/>with<sp/>the<sp/>specified<sp/>type<sp/>and<sp/>name<sp/>or<sp/>-1</highlight></codeline>
<codeline lineno="99"><highlight class="comment">*<sp/>if<sp/>the<sp/>stage<sp/>does<sp/>not<sp/>exist.</highlight></codeline>
<codeline lineno="100"><highlight class="comment">*<sp/>@param<sp/>stageType<sp/>The<sp/>type<sp/>of<sp/>stage<sp/>to<sp/>find.</highlight></codeline>
<codeline lineno="101"><highlight class="comment">*<sp/>@param<sp/>name<sp/>The<sp/>name<sp/>of<sp/>the<sp/>stage<sp/>to<sp/>find.</highlight></codeline>
<codeline lineno="102"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1af59ba7ee25bdecedfad9ae36969c8787" kindref="member">MaterialDoc::FindStage</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stageType,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>editMaterial.stages.Num();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type<sp/>=<sp/><ref refid="class_material_doc_1aed953aa4aeebabbb909b9734df3b4fb8" kindref="member">GetAttributeInt</ref>(i,<sp/></highlight><highlight class="stringliteral">&quot;stagetype&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>localname<sp/>=<sp/><ref refid="class_material_doc_1a89dc758bb0c2ad19ee8f3945ec1efdb5" kindref="member">GetAttribute</ref>(i,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stageType<sp/>==<sp/>type<sp/>&amp;&amp;<sp/>!localname.Icmp(name))</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="114"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="115"><highlight class="comment">*<sp/>Returns<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>specified<sp/>stage.</highlight></codeline>
<codeline lineno="116"><highlight class="comment">*<sp/>@param<sp/>stage<sp/>The<sp/>stage<sp/>to<sp/>return.</highlight></codeline>
<codeline lineno="117"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><ref refid="struct_m_e_stage__t" kindref="compound">MEStage_t</ref><sp/><ref refid="class_material_doc_1ad3a8131be0ade7533eb4d7089cd618bb" kindref="member">MaterialDoc::GetStage</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stage)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(stage<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>stage<sp/>&lt;<sp/><ref refid="class_material_doc_1a10f4f9444b7ea1f5fc79f9cd265c0941" kindref="member">GetStageCount</ref>());</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*editMaterial.stages[stage];</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="124"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="125"><highlight class="comment">*<sp/>Specifies<sp/>the<sp/>enabled<sp/>state<sp/>of<sp/>a<sp/>single<sp/>stage.</highlight></codeline>
<codeline lineno="126"><highlight class="comment">*<sp/>@param<sp/>stage<sp/>The<sp/>stage<sp/>to<sp/>change.</highlight></codeline>
<codeline lineno="127"><highlight class="comment">*<sp/>@param<sp/>enabled<sp/>The<sp/>enabled<sp/>state.</highlight></codeline>
<codeline lineno="128"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1a955103558fe0b775fa3801a319cefd10" kindref="member">MaterialDoc::EnableStage</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stage,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(stage<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>stage<sp/>&lt;<sp/><ref refid="class_material_doc_1a10f4f9444b7ea1f5fc79f9cd265c0941" kindref="member">GetStageCount</ref>());</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>editMaterial.stages[stage]-&gt;enabled<sp/>=<sp/>enabled;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1af6cd9845aadd1e02967f3e4cb1afaec0" kindref="member">OnMaterialChanged</ref>();</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="137"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="138"><highlight class="comment">*<sp/>Sets<sp/>the<sp/>enabled<sp/>state<sp/>of<sp/>all<sp/>stages.</highlight></codeline>
<codeline lineno="139"><highlight class="comment">*<sp/>@param<sp/>enabled<sp/>The<sp/>enabled<sp/>state.</highlight></codeline>
<codeline lineno="140"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1a47f7a1cbb03f0e8116ff0df6e66023e5" kindref="member">MaterialDoc::EnableAllStages</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_material_doc_1a10f4f9444b7ea1f5fc79f9cd265c0941" kindref="member">GetStageCount</ref>();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>editMaterial.stages[i]-&gt;enabled<sp/>=<sp/>enabled;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="147"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="148"><highlight class="comment">*<sp/>Returns<sp/>the<sp/>enabled<sp/>state<sp/>of<sp/>a<sp/>stage.</highlight></codeline>
<codeline lineno="149"><highlight class="comment">*<sp/>@param<sp/>stage<sp/>The<sp/>stage<sp/>to<sp/>check.</highlight></codeline>
<codeline lineno="150"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1a5dbb87ed58d9d7b3394ad0199ef651b0" kindref="member">MaterialDoc::IsStageEnabled</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stage)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(stage<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>stage<sp/>&lt;<sp/><ref refid="class_material_doc_1a10f4f9444b7ea1f5fc79f9cd265c0941" kindref="member">GetStageCount</ref>());</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>editMaterial.stages[stage]-&gt;enabled;</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="156"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="157"><highlight class="comment">*<sp/>Returns<sp/>an<sp/>attribute<sp/>string<sp/>from<sp/>the<sp/>material<sp/>or<sp/>a<sp/>stage.</highlight></codeline>
<codeline lineno="158"><highlight class="comment">*<sp/>@param<sp/>stage<sp/>The<sp/>stage<sp/>or<sp/>-1<sp/>for<sp/>the<sp/>material.</highlight></codeline>
<codeline lineno="159"><highlight class="comment">*<sp/>@param<sp/>attribName<sp/>The<sp/>name<sp/>of<sp/>the<sp/>attribute.</highlight></codeline>
<codeline lineno="160"><highlight class="comment">*<sp/>@param<sp/>defaultString<sp/>The<sp/>default<sp/>value<sp/>if<sp/>the<sp/>attribute<sp/>is<sp/>not<sp/>specified.</highlight></codeline>
<codeline lineno="161"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_material_doc_1a89dc758bb0c2ad19ee8f3945ec1efdb5" kindref="member">MaterialDoc::GetAttribute</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stage,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>attribName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>defaultString)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stage<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>editMaterial.materialData.GetString(attribName,<sp/>defaultString);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(stage<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>stage<sp/>&lt;<sp/><ref refid="class_material_doc_1a10f4f9444b7ea1f5fc79f9cd265c0941" kindref="member">GetStageCount</ref>());</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_m_e_stage__t" kindref="compound">MEStage_t</ref>*<sp/>pStage<sp/>=<sp/>editMaterial.stages[stage];</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pStage-&gt;stageData.GetString(attribName,<sp/>defaultString);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="173"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="174"><highlight class="comment">*<sp/>Returns<sp/>an<sp/>attribute<sp/>int<sp/>from<sp/>the<sp/>material<sp/>or<sp/>a<sp/>stage.</highlight></codeline>
<codeline lineno="175"><highlight class="comment">*<sp/>@param<sp/>stage<sp/>The<sp/>stage<sp/>or<sp/>-1<sp/>for<sp/>the<sp/>material.</highlight></codeline>
<codeline lineno="176"><highlight class="comment">*<sp/>@param<sp/>attribName<sp/>The<sp/>name<sp/>of<sp/>the<sp/>attribute.</highlight></codeline>
<codeline lineno="177"><highlight class="comment">*<sp/>@param<sp/>defaultString<sp/>The<sp/>default<sp/>value<sp/>if<sp/>the<sp/>attribute<sp/>is<sp/>not<sp/>specified.</highlight></codeline>
<codeline lineno="178"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1aed953aa4aeebabbb909b9734df3b4fb8" kindref="member">MaterialDoc::GetAttributeInt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stage,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>attribName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>defaultString)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stage<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>editMaterial.materialData.GetInt(attribName,<sp/>defaultString);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(stage<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>stage<sp/>&lt;<sp/><ref refid="class_material_doc_1a10f4f9444b7ea1f5fc79f9cd265c0941" kindref="member">GetStageCount</ref>());</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_m_e_stage__t" kindref="compound">MEStage_t</ref>*<sp/>pStage<sp/>=<sp/>editMaterial.stages[stage];</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pStage-&gt;stageData.GetInt(attribName,<sp/>defaultString);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="189"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="190"><highlight class="comment">*<sp/>Returns<sp/>an<sp/>attribute<sp/>float<sp/>from<sp/>the<sp/>material<sp/>or<sp/>a<sp/>stage.</highlight></codeline>
<codeline lineno="191"><highlight class="comment">*<sp/>@param<sp/>stage<sp/>The<sp/>stage<sp/>or<sp/>-1<sp/>for<sp/>the<sp/>material.</highlight></codeline>
<codeline lineno="192"><highlight class="comment">*<sp/>@param<sp/>attribName<sp/>The<sp/>name<sp/>of<sp/>the<sp/>attribute.</highlight></codeline>
<codeline lineno="193"><highlight class="comment">*<sp/>@param<sp/>defaultString<sp/>The<sp/>default<sp/>value<sp/>if<sp/>the<sp/>attribute<sp/>is<sp/>not<sp/>specified.</highlight></codeline>
<codeline lineno="194"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1adcf8ba417861d316e80f076428589ee5" kindref="member">MaterialDoc::GetAttributeFloat</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stage,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>attribName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>defaultString)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stage<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>editMaterial.materialData.GetFloat(attribName,<sp/>defaultString);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(stage<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>stage<sp/>&lt;<sp/><ref refid="class_material_doc_1a10f4f9444b7ea1f5fc79f9cd265c0941" kindref="member">GetStageCount</ref>());</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_m_e_stage__t" kindref="compound">MEStage_t</ref>*<sp/>pStage<sp/>=<sp/>editMaterial.stages[stage];</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pStage-&gt;stageData.GetFloat(attribName,<sp/>defaultString);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="205"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="206"><highlight class="comment">*<sp/>Returns<sp/>an<sp/>attribute<sp/>bool<sp/>from<sp/>the<sp/>material<sp/>or<sp/>a<sp/>stage.</highlight></codeline>
<codeline lineno="207"><highlight class="comment">*<sp/>@param<sp/>stage<sp/>The<sp/>stage<sp/>or<sp/>-1<sp/>for<sp/>the<sp/>material.</highlight></codeline>
<codeline lineno="208"><highlight class="comment">*<sp/>@param<sp/>attribName<sp/>The<sp/>name<sp/>of<sp/>the<sp/>attribute.</highlight></codeline>
<codeline lineno="209"><highlight class="comment">*<sp/>@param<sp/>defaultString<sp/>The<sp/>default<sp/>value<sp/>if<sp/>the<sp/>attribute<sp/>is<sp/>not<sp/>specified.</highlight></codeline>
<codeline lineno="210"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1ae75fe31ccec6978be8c1bdadeacc824f" kindref="member">MaterialDoc::GetAttributeBool</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stage,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>attribName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>defaultString)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stage<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>editMaterial.materialData.GetBool(attribName,<sp/>defaultString);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(stage<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>stage<sp/>&lt;<sp/><ref refid="class_material_doc_1a10f4f9444b7ea1f5fc79f9cd265c0941" kindref="member">GetStageCount</ref>());</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_m_e_stage__t" kindref="compound">MEStage_t</ref>*<sp/>pStage<sp/>=<sp/>editMaterial.stages[stage];</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pStage-&gt;stageData.GetBool(attribName,<sp/>defaultString);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="221"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="222"><highlight class="comment">*<sp/>Sets<sp/>an<sp/>attribute<sp/>string<sp/>in<sp/>the<sp/>material<sp/>or<sp/>a<sp/>stage.</highlight></codeline>
<codeline lineno="223"><highlight class="comment">*<sp/>@param<sp/>stage<sp/>The<sp/>stage<sp/>or<sp/>-1<sp/>for<sp/>the<sp/>material.</highlight></codeline>
<codeline lineno="224"><highlight class="comment">*<sp/>@param<sp/>attribName<sp/>The<sp/>name<sp/>of<sp/>the<sp/>attribute.</highlight></codeline>
<codeline lineno="225"><highlight class="comment">*<sp/>@param<sp/>value<sp/>The<sp/>value<sp/>to<sp/>set.</highlight></codeline>
<codeline lineno="226"><highlight class="comment">*<sp/>@param<sp/>addUndo<sp/>Flag<sp/>that<sp/>specifies<sp/>if<sp/>the<sp/>system<sp/>should<sp/>add<sp/>an<sp/>undo<sp/>operation.</highlight></codeline>
<codeline lineno="227"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1a283b6d9341e5fee3662cc6cc5ddca4ed" kindref="member">MaterialDoc::SetAttribute</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stage,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>attribName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>addUndo)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Make<sp/>sure<sp/>we<sp/>need<sp/>to<sp/>set<sp/>the<sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>orig<sp/><sp/>=<sp/><ref refid="class_material_doc_1a89dc758bb0c2ad19ee8f3945ec1efdb5" kindref="member">GetAttribute</ref>(stage,<sp/>attribName);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(orig.Icmp(value))<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_dict" kindref="compound">idDict</ref>*<sp/>dict;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stage<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict<sp/>=<sp/>&amp;editMaterial.materialData;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(stage<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>stage<sp/>&lt;<sp/><ref refid="class_material_doc_1a10f4f9444b7ea1f5fc79f9cd265c0941" kindref="member">GetStageCount</ref>());</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict<sp/>=<sp/>&amp;editMaterial.stages[stage]-&gt;stageData;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(addUndo)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Create<sp/>a<sp/>new<sp/>Modifier<sp/>for<sp/>this<sp/>change<sp/>so<sp/>we<sp/>can<sp/>undo<sp/>and<sp/>redo<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_attribute_material_modifier_string" kindref="compound">AttributeMaterialModifierString</ref>*<sp/>mod<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_attribute_material_modifier_string" kindref="compound">AttributeMaterialModifierString</ref>(manager,<sp/>name,<sp/>stage,<sp/>attribName,<sp/>value,<sp/>orig);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manager-&gt;<ref refid="class_material_doc_manager_1aaeea1b384090f28bb8c9a48dcb344007" kindref="member">AddMaterialUndoModifier</ref>(mod);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;Set(attribName,<sp/>value);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manager-&gt;<ref refid="class_material_doc_manager_1a6404d17b14449f006ed3488861e1045d" kindref="member">AttributeChanged</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>stage,<sp/>attribName);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1af6cd9845aadd1e02967f3e4cb1afaec0" kindref="member">OnMaterialChanged</ref>();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="255"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="256"><highlight class="comment">*<sp/>Sets<sp/>an<sp/>attribute<sp/>int<sp/>in<sp/>the<sp/>material<sp/>or<sp/>a<sp/>stage.</highlight></codeline>
<codeline lineno="257"><highlight class="comment">*<sp/>@param<sp/>stage<sp/>The<sp/>stage<sp/>or<sp/>-1<sp/>for<sp/>the<sp/>material.</highlight></codeline>
<codeline lineno="258"><highlight class="comment">*<sp/>@param<sp/>attribName<sp/>The<sp/>name<sp/>of<sp/>the<sp/>attribute.</highlight></codeline>
<codeline lineno="259"><highlight class="comment">*<sp/>@param<sp/>value<sp/>The<sp/>value<sp/>to<sp/>set.</highlight></codeline>
<codeline lineno="260"><highlight class="comment">*<sp/>@param<sp/>addUndo<sp/>Flag<sp/>that<sp/>specifies<sp/>if<sp/>the<sp/>system<sp/>should<sp/>add<sp/>an<sp/>undo<sp/>operation.</highlight></codeline>
<codeline lineno="261"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1a8d63b78d1a3861ec770379f1c8d6efec" kindref="member">MaterialDoc::SetAttributeInt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stage,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>attribName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>addUndo)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Make<sp/>sure<sp/>we<sp/>need<sp/>to<sp/>set<sp/>the<sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orig<sp/><sp/>=<sp/><ref refid="class_material_doc_1aed953aa4aeebabbb909b9734df3b4fb8" kindref="member">GetAttributeInt</ref>(stage,<sp/>attribName);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(orig<sp/>!=<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_dict" kindref="compound">idDict</ref>*<sp/>dict;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stage<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict<sp/>=<sp/>&amp;editMaterial.materialData;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(stage<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>stage<sp/>&lt;<sp/><ref refid="class_material_doc_1a10f4f9444b7ea1f5fc79f9cd265c0941" kindref="member">GetStageCount</ref>());</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict<sp/>=<sp/>&amp;editMaterial.stages[stage]-&gt;stageData;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;SetInt(attribName,<sp/>value);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manager-&gt;<ref refid="class_material_doc_manager_1a6404d17b14449f006ed3488861e1045d" kindref="member">AttributeChanged</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>stage,<sp/>attribName);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1af6cd9845aadd1e02967f3e4cb1afaec0" kindref="member">OnMaterialChanged</ref>();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="282"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="283"><highlight class="comment">*<sp/>Sets<sp/>an<sp/>attribute<sp/>float<sp/>in<sp/>the<sp/>material<sp/>or<sp/>a<sp/>stage.</highlight></codeline>
<codeline lineno="284"><highlight class="comment">*<sp/>@param<sp/>stage<sp/>The<sp/>stage<sp/>or<sp/>-1<sp/>for<sp/>the<sp/>material.</highlight></codeline>
<codeline lineno="285"><highlight class="comment">*<sp/>@param<sp/>attribName<sp/>The<sp/>name<sp/>of<sp/>the<sp/>attribute.</highlight></codeline>
<codeline lineno="286"><highlight class="comment">*<sp/>@param<sp/>value<sp/>The<sp/>value<sp/>to<sp/>set.</highlight></codeline>
<codeline lineno="287"><highlight class="comment">*<sp/>@param<sp/>addUndo<sp/>Flag<sp/>that<sp/>specifies<sp/>if<sp/>the<sp/>system<sp/>should<sp/>add<sp/>an<sp/>undo<sp/>operation.</highlight></codeline>
<codeline lineno="288"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1a02d1b94ecfa377320665f90a74c56776" kindref="member">MaterialDoc::SetAttributeFloat</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stage,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>attribName,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>addUndo)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Make<sp/>sure<sp/>we<sp/>need<sp/>to<sp/>set<sp/>the<sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>orig<sp/><sp/>=<sp/><ref refid="class_material_doc_1adcf8ba417861d316e80f076428589ee5" kindref="member">GetAttributeFloat</ref>(stage,<sp/>attribName);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(orig<sp/>!=<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_dict" kindref="compound">idDict</ref>*<sp/>dict;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stage<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict<sp/>=<sp/>&amp;editMaterial.materialData;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(stage<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>stage<sp/>&lt;<sp/><ref refid="class_material_doc_1a10f4f9444b7ea1f5fc79f9cd265c0941" kindref="member">GetStageCount</ref>());</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict<sp/>=<sp/>&amp;editMaterial.stages[stage]-&gt;stageData;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;SetFloat(attribName,<sp/>value);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manager-&gt;<ref refid="class_material_doc_manager_1a6404d17b14449f006ed3488861e1045d" kindref="member">AttributeChanged</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>stage,<sp/>attribName);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1af6cd9845aadd1e02967f3e4cb1afaec0" kindref="member">OnMaterialChanged</ref>();</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="309"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="310"><highlight class="comment">*<sp/>Sets<sp/>an<sp/>attribute<sp/>bool<sp/>in<sp/>the<sp/>material<sp/>or<sp/>a<sp/>stage.</highlight></codeline>
<codeline lineno="311"><highlight class="comment">*<sp/>@param<sp/>stage<sp/>The<sp/>stage<sp/>or<sp/>-1<sp/>for<sp/>the<sp/>material.</highlight></codeline>
<codeline lineno="312"><highlight class="comment">*<sp/>@param<sp/>attribName<sp/>The<sp/>name<sp/>of<sp/>the<sp/>attribute.</highlight></codeline>
<codeline lineno="313"><highlight class="comment">*<sp/>@param<sp/>value<sp/>The<sp/>value<sp/>to<sp/>set.</highlight></codeline>
<codeline lineno="314"><highlight class="comment">*<sp/>@param<sp/>addUndo<sp/>Flag<sp/>that<sp/>specifies<sp/>if<sp/>the<sp/>system<sp/>should<sp/>add<sp/>an<sp/>undo<sp/>operation.</highlight></codeline>
<codeline lineno="315"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1a569f66fe517e426aec5c78cc42a2685b" kindref="member">MaterialDoc::SetAttributeBool</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stage,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>attribName,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>addUndo)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Make<sp/>sure<sp/>we<sp/>need<sp/>to<sp/>set<sp/>the<sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>orig<sp/><sp/>=<sp/><ref refid="class_material_doc_1ae75fe31ccec6978be8c1bdadeacc824f" kindref="member">GetAttributeBool</ref>(stage,<sp/>attribName);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(orig<sp/>!=<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_dict" kindref="compound">idDict</ref>*<sp/>dict;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stage<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict<sp/>=<sp/>&amp;editMaterial.materialData;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(stage<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>stage<sp/>&lt;<sp/><ref refid="class_material_doc_1a10f4f9444b7ea1f5fc79f9cd265c0941" kindref="member">GetStageCount</ref>());</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict<sp/>=<sp/>&amp;editMaterial.stages[stage]-&gt;stageData;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(addUndo)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Create<sp/>a<sp/>new<sp/>Modifier<sp/>for<sp/>this<sp/>change<sp/>so<sp/>we<sp/>can<sp/>undo<sp/>and<sp/>redo<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_attribute_material_modifier_bool" kindref="compound">AttributeMaterialModifierBool</ref>*<sp/>mod<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_attribute_material_modifier_bool" kindref="compound">AttributeMaterialModifierBool</ref>(manager,<sp/>name,<sp/>stage,<sp/>attribName,<sp/>value,<sp/>orig);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manager-&gt;<ref refid="class_material_doc_manager_1aaeea1b384090f28bb8c9a48dcb344007" kindref="member">AddMaterialUndoModifier</ref>(mod);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;SetBool(attribName,<sp/>value);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manager-&gt;<ref refid="class_material_doc_manager_1a6404d17b14449f006ed3488861e1045d" kindref="member">AttributeChanged</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>stage,<sp/>attribName);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1af6cd9845aadd1e02967f3e4cb1afaec0" kindref="member">OnMaterialChanged</ref>();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="342"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="343"><highlight class="comment">*<sp/>Sets<sp/>the<sp/>material<sp/>name.</highlight></codeline>
<codeline lineno="344"><highlight class="comment">*<sp/>@param<sp/>materialName<sp/>The<sp/>new<sp/>name<sp/>of<sp/>the<sp/>material.</highlight></codeline>
<codeline lineno="345"><highlight class="comment">*<sp/>@param<sp/>addUndo<sp/>Flag<sp/>that<sp/>specifies<sp/>if<sp/>the<sp/>system<sp/>should<sp/>add<sp/>an<sp/>undo<sp/>operation.</highlight></codeline>
<codeline lineno="346"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1aa3b3503ecbdf50d85ece13b247333202" kindref="member">MaterialDoc::SetMaterialName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>materialName,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>addUndo)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>oldName<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>declManager-&gt;RenameDecl(DECL_MATERIAL,<sp/>oldName,<sp/>materialName);<sp/></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/>renderMaterial-&gt;GetName();</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(addUndo)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_rename_material_modifier" kindref="compound">RenameMaterialModifier</ref>*<sp/>mod<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_rename_material_modifier" kindref="compound">RenameMaterialModifier</ref>(manager,<sp/>name,<sp/>oldName);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manager-&gt;<ref refid="class_material_doc_manager_1aaeea1b384090f28bb8c9a48dcb344007" kindref="member">AddMaterialUndoModifier</ref>(mod);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>manager-&gt;<ref refid="class_material_doc_manager_1a65d77e91f75ec33d4ea51531a72d8094" kindref="member">MaterialNameChanged</ref>(oldName,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1af6cd9845aadd1e02967f3e4cb1afaec0" kindref="member">OnMaterialChanged</ref>();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Need<sp/>to<sp/>do<sp/>an<sp/>instant<sp/>apply<sp/>for<sp/>material<sp/>name<sp/>changes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1add2c440be343730f9855f97981271f23" kindref="member">ApplyMaterialChanges</ref>();</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="366"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="367"><highlight class="comment">*<sp/>Sets<sp/>the<sp/>entire<sp/>dictionary<sp/>for<sp/>a<sp/>material<sp/>or<sp/>stage</highlight></codeline>
<codeline lineno="368"><highlight class="comment">*<sp/>@param<sp/>stage<sp/>The<sp/>stage<sp/>or<sp/>-1<sp/>for<sp/>the<sp/>material.</highlight></codeline>
<codeline lineno="369"><highlight class="comment">*<sp/>@param<sp/>data<sp/>The<sp/>dictionary<sp/>to<sp/>copy.</highlight></codeline>
<codeline lineno="370"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1a0e34ba6697b6484d753c083fb47a9325" kindref="member">MaterialDoc::SetData</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stage,<sp/><ref refid="classid_dict" kindref="compound">idDict</ref>*<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_dict" kindref="compound">idDict</ref>*<sp/>dict;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stage<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict<sp/>=<sp/>&amp;editMaterial.materialData;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(stage<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>stage<sp/>&lt;<sp/><ref refid="class_material_doc_1a10f4f9444b7ea1f5fc79f9cd265c0941" kindref="member">GetStageCount</ref>());</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict<sp/>=<sp/>&amp;editMaterial.stages[stage]-&gt;stageData;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>dict-&gt;Clear();</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>dict-&gt;Copy(*data);</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="383"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="384"><highlight class="comment">*<sp/>Called<sp/>when<sp/>the<sp/>editor<sp/>modifies<sp/>the<sp/>source<sp/>of<sp/>the<sp/>material.</highlight></codeline>
<codeline lineno="385"><highlight class="comment">*<sp/>@param<sp/>text<sp/>The<sp/>new<sp/>source<sp/>text.</highlight></codeline>
<codeline lineno="386"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1a5b9504aa74002fb858eda1a8d4886d36" kindref="member">MaterialDoc::SourceModify</ref>(<ref refid="class_source_modify_owner" kindref="compound">SourceModifyOwner</ref>*<sp/>owner)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>sourceModifyOwner<sp/>=<sp/>owner;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>sourceModify<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1af6cd9845aadd1e02967f3e4cb1afaec0" kindref="member">OnMaterialChanged</ref>();</highlight></codeline>
<codeline lineno="392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="394"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="395"><highlight class="comment">*<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>source<sp/>text<sp/>of<sp/>this<sp/>material<sp/>has<sp/>been<sp/>edited.</highlight></codeline>
<codeline lineno="396"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1af008272daef87b5bde70b26f2ab4a845" kindref="member">MaterialDoc::IsSourceModified</ref>()<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sourceModify;</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="401"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="402"><highlight class="comment">*<sp/>Applies<sp/>any<sp/>source<sp/>changes<sp/>to<sp/>the<sp/>edit<sp/>representation<sp/>of<sp/>the<sp/>material.</highlight></codeline>
<codeline lineno="403"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1aaeeab35cfb6dc95a2445c7a8554a59f4" kindref="member">MaterialDoc::ApplySourceModify</ref>(<ref refid="classid_str" kindref="compound">idStr</ref>&amp;<sp/>text)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sourceModify)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Changes<sp/>in<sp/>the<sp/>source<sp/>need<sp/>to<sp/>clear<sp/>any<sp/>undo<sp/>redo<sp/>buffer<sp/>because<sp/>we<sp/>have<sp/>no<sp/>idea<sp/>what<sp/>has<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manager-&gt;<ref refid="class_material_doc_manager_1a73613db1fac76911cb9c7e9d0193cb06" kindref="member">ClearUndo</ref>();</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manager-&gt;<ref refid="class_material_doc_manager_1ad158710355e8a3326306ce57072af87b" kindref="member">ClearRedo</ref>();</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1aa6fdcfcbf19743095618e312238ab46c" kindref="member">ClearEditMaterial</ref>();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_lexer" kindref="compound">idLexer</ref><sp/><sp/><sp/><sp/><sp/>src;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src.LoadMemory(text,<sp/>text.Length(),<sp/></highlight><highlight class="stringliteral">&quot;Material&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src.SetFlags(<sp/></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEXFL_NOSTRINGCONCAT<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>multiple<sp/>strings<sp/>seperated<sp/>by<sp/>whitespaces<sp/>are<sp/>not<sp/>concatenated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEXFL_NOSTRINGESCAPECHARS<sp/>|<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>escape<sp/>characters<sp/>inside<sp/>strings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEXFL_ALLOWPATHNAMES<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allow<sp/>path<sp/>seperators<sp/>in<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEXFL_ALLOWMULTICHARLITERALS<sp/>|<sp/><sp/></highlight><highlight class="comment">//<sp/>allow<sp/>multi<sp/>character<sp/>literals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEXFL_ALLOWBACKSLASHSTRINGCONCAT<sp/>|<sp/><sp/></highlight><highlight class="comment">//<sp/>allow<sp/>multiple<sp/>strings<sp/>seperated<sp/>by<sp/>&apos;\&apos;<sp/>to<sp/>be<sp/>concatenated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEXFL_NOFATALERRORS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>set<sp/>a<sp/>flag<sp/>instead<sp/>of<sp/>fatal<sp/>erroring</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_token" kindref="compound">idToken</ref><sp/>token;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!src.ReadToken(&amp;token))<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src.Warning(<sp/></highlight><highlight class="stringliteral">&quot;Missing<sp/>decl<sp/>name&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1ad2b907414ed188950231e889b50cd0f6" kindref="member">ParseMaterial</ref>(&amp;src);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sourceModify<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>to<sp/>see<sp/>if<sp/>the<sp/>name<sp/>has<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(token.Icmp(name))<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1aa3b3503ecbdf50d85ece13b247333202" kindref="member">SetMaterialName</ref>(token,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="442"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="443"><highlight class="comment">*<sp/>Returns<sp/>the<sp/>appropriate<sp/>source<sp/>for<sp/>the<sp/>editing</highlight></codeline>
<codeline lineno="444"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_material_doc_1a4909dd52af1328b7eb184dfb9c55013f" kindref="member">MaterialDoc::GetEditSourceText</ref>()<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1aa4d1829ec554f79f6f710233e62c9b1d" kindref="member">GenerateSourceText</ref>();</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="450"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="451"><highlight class="comment">*<sp/>Adds<sp/>a<sp/>stage<sp/>to<sp/>the<sp/>material.</highlight></codeline>
<codeline lineno="452"><highlight class="comment">*<sp/>@param<sp/>stageType<sp/>The<sp/>type<sp/>of<sp/>the<sp/>stage:<sp/>normal<sp/>or<sp/>special.</highlight></codeline>
<codeline lineno="453"><highlight class="comment">*<sp/>@param<sp/>stageName<sp/>The<sp/>name<sp/>of<sp/>the<sp/>stage.</highlight></codeline>
<codeline lineno="454"><highlight class="comment">*<sp/>@param<sp/>addUndo<sp/>Flag<sp/>that<sp/>specifies<sp/>if<sp/>the<sp/>system<sp/>should<sp/>add<sp/>an<sp/>undo<sp/>operation.</highlight></codeline>
<codeline lineno="455"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1ae4d0eca9b486cf8ad98c55376275e45e" kindref="member">MaterialDoc::AddStage</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stageType,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>stageName,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>addUndo)<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_m_e_stage__t" kindref="compound">MEStage_t</ref>*<sp/>newStage<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_m_e_stage__t" kindref="compound">MEStage_t</ref>();</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>editMaterial.stages.Append(newStage);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>newStage-&gt;stageData.Set(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>stageName);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>newStage-&gt;stageData.SetInt(</highlight><highlight class="stringliteral">&quot;stagetype&quot;</highlight><highlight class="normal">,<sp/>stageType);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>newStage-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(addUndo)<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stage_insert_modifier" kindref="compound">StageInsertModifier</ref>*<sp/>mod<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_stage_insert_modifier" kindref="compound">StageInsertModifier</ref>(manager,<sp/>name,<sp/>index,<sp/>stageType,<sp/>stageName);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manager-&gt;<ref refid="class_material_doc_manager_1aaeea1b384090f28bb8c9a48dcb344007" kindref="member">AddMaterialUndoModifier</ref>(mod);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>manager-&gt;<ref refid="class_material_doc_manager_1a2f28235affc1aeb3ebbd1b0d0cd07fc1" kindref="member">StageAdded</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>index);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1af6cd9845aadd1e02967f3e4cb1afaec0" kindref="member">OnMaterialChanged</ref>();</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="474"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="475"><highlight class="comment">*<sp/>Inserts<sp/>a<sp/>new<sp/>stage<sp/>to<sp/>the<sp/>material<sp/>at<sp/>a<sp/>specified<sp/>location.</highlight></codeline>
<codeline lineno="476"><highlight class="comment">*<sp/>@param<sp/>stage<sp/>The<sp/>location<sp/>to<sp/>insert<sp/>the<sp/>stage.</highlight></codeline>
<codeline lineno="477"><highlight class="comment">*<sp/>@param<sp/>stageType<sp/>The<sp/>type<sp/>of<sp/>the<sp/>stage:<sp/>normal<sp/>or<sp/>special.</highlight></codeline>
<codeline lineno="478"><highlight class="comment">*<sp/>@param<sp/>stageName<sp/>The<sp/>name<sp/>of<sp/>the<sp/>stage.</highlight></codeline>
<codeline lineno="479"><highlight class="comment">*<sp/>@param<sp/>addUndo<sp/>Flag<sp/>that<sp/>specifies<sp/>if<sp/>the<sp/>system<sp/>should<sp/>add<sp/>an<sp/>undo<sp/>operation.</highlight></codeline>
<codeline lineno="480"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1a2984e1721339a65c2588d5b7ef8984d8" kindref="member">MaterialDoc::InsertStage</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stage,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stageType,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>stageName,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>addUndo)<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_m_e_stage__t" kindref="compound">MEStage_t</ref>*<sp/>newStage<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_m_e_stage__t" kindref="compound">MEStage_t</ref>();</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>editMaterial.stages.Insert(newStage,<sp/>stage);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>newStage-&gt;stageData.Set(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>stageName);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>newStage-&gt;stageData.SetInt(</highlight><highlight class="stringliteral">&quot;stagetype&quot;</highlight><highlight class="normal">,<sp/>stageType);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>newStage-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(addUndo)<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stage_insert_modifier" kindref="compound">StageInsertModifier</ref>*<sp/>mod<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_stage_insert_modifier" kindref="compound">StageInsertModifier</ref>(manager,<sp/>name,<sp/>stage,<sp/>stageType,<sp/>stageName);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manager-&gt;<ref refid="class_material_doc_manager_1aaeea1b384090f28bb8c9a48dcb344007" kindref="member">AddMaterialUndoModifier</ref>(mod);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>manager-&gt;<ref refid="class_material_doc_manager_1a2f28235affc1aeb3ebbd1b0d0cd07fc1" kindref="member">StageAdded</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>stage);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1af6cd9845aadd1e02967f3e4cb1afaec0" kindref="member">OnMaterialChanged</ref>();</highlight></codeline>
<codeline lineno="497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="499"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="500"><highlight class="comment">*<sp/>Removes<sp/>a<sp/>stage<sp/>from<sp/>the<sp/>material.</highlight></codeline>
<codeline lineno="501"><highlight class="comment">*<sp/>@param<sp/>stage<sp/>The<sp/>stage<sp/>to<sp/>remove.</highlight></codeline>
<codeline lineno="502"><highlight class="comment">*<sp/>@param<sp/>addUndo<sp/>Flag<sp/>that<sp/>specifies<sp/>if<sp/>the<sp/>system<sp/>should<sp/>add<sp/>an<sp/>undo<sp/>operation.</highlight></codeline>
<codeline lineno="503"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1a2f2bec38f327591ae754560bb51820c7" kindref="member">MaterialDoc::RemoveStage</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stage,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>addUndo)<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(stage<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>stage<sp/>&lt;<sp/><ref refid="class_material_doc_1a10f4f9444b7ea1f5fc79f9cd265c0941" kindref="member">GetStageCount</ref>());</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(addUndo)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Add<sp/>modifier<sp/>to<sp/>undo<sp/>this<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stage_delete_modifier" kindref="compound">StageDeleteModifier</ref>*<sp/>mod<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_stage_delete_modifier" kindref="compound">StageDeleteModifier</ref>(manager,<sp/>name,<sp/>stage,<sp/>editMaterial.stages[stage]-&gt;stageData);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manager-&gt;<ref refid="class_material_doc_manager_1aaeea1b384090f28bb8c9a48dcb344007" kindref="member">AddMaterialUndoModifier</ref>(mod);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//delete<sp/>the<sp/>stage<sp/>and<sp/>remove<sp/>it<sp/>from<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>editMaterial.stages[stage];</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>editMaterial.stages.RemoveIndex(stage);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>manager-&gt;<ref refid="class_material_doc_manager_1ae7b5a5edb73f57f197d50636b1bffe0c" kindref="member">StageDeleted</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>stage);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1af6cd9845aadd1e02967f3e4cb1afaec0" kindref="member">OnMaterialChanged</ref>();</highlight></codeline>
<codeline lineno="520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="522"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="523"><highlight class="comment">*<sp/>Removes<sp/>all<sp/>stages<sp/>from<sp/>the<sp/>material.</highlight></codeline>
<codeline lineno="524"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1a7edf6c6a46977ca47fc4c0e6482f4df8" kindref="member">MaterialDoc::ClearStages</ref>()<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Delete<sp/>each<sp/>stage<sp/>and<sp/>clear<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="class_material_doc_1a10f4f9444b7ea1f5fc79f9cd265c0941" kindref="member">GetStageCount</ref>()<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1a2f2bec38f327591ae754560bb51820c7" kindref="member">RemoveStage</ref>(i);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal">}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="533"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="534"><highlight class="comment">*<sp/>Moves<sp/>a<sp/>stage<sp/>from<sp/>one<sp/>location<sp/>to<sp/>another.</highlight></codeline>
<codeline lineno="535"><highlight class="comment">*<sp/>@param<sp/>from<sp/>The<sp/>original<sp/>location<sp/>of<sp/>the<sp/>stage.</highlight></codeline>
<codeline lineno="536"><highlight class="comment">*<sp/>@param<sp/>to<sp/>The<sp/>new<sp/>location<sp/>of<sp/>the<sp/>stage.</highlight></codeline>
<codeline lineno="537"><highlight class="comment">*<sp/>@param<sp/>addUndo<sp/>Flag<sp/>that<sp/>specifies<sp/>if<sp/>the<sp/>system<sp/>should<sp/>add<sp/>an<sp/>undo<sp/>operation.</highlight></codeline>
<codeline lineno="538"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1a4763bfbc06b2250c2ca167b5ccbf6497" kindref="member">MaterialDoc::MoveStage</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>from,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>to,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>addUndo)<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(from<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>from<sp/>&lt;<sp/><ref refid="class_material_doc_1a10f4f9444b7ea1f5fc79f9cd265c0941" kindref="member">GetStageCount</ref>());</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(to<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>to<sp/>&lt;<sp/><ref refid="class_material_doc_1a10f4f9444b7ea1f5fc79f9cd265c0941" kindref="member">GetStageCount</ref>());</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>origFrom<sp/>=<sp/>from;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>origTo<sp/>=<sp/>to;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(from<sp/>&lt;<sp/>to)</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to++;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_m_e_stage__t" kindref="compound">MEStage_t</ref>*<sp/>pMove<sp/>=<sp/>editMaterial.stages[from];</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>editMaterial.stages.Insert(pMove,<sp/>to);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(from<sp/>&gt;<sp/>to)</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from++;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>editMaterial.stages.RemoveIndex(from);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>manager-&gt;<ref refid="class_material_doc_manager_1a788f34e8c1aaf1594e518aea5832dc0c" kindref="member">StageMoved</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>origFrom,<sp/>origTo);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(addUndo)<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stage_move_modifier" kindref="compound">StageMoveModifier</ref><sp/>*mod<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_stage_move_modifier" kindref="compound">StageMoveModifier</ref>(manager,<sp/>name,<sp/>origFrom,<sp/>origTo);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manager-&gt;<ref refid="class_material_doc_manager_1aaeea1b384090f28bb8c9a48dcb344007" kindref="member">AddMaterialUndoModifier</ref>(mod);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1af6cd9845aadd1e02967f3e4cb1afaec0" kindref="member">OnMaterialChanged</ref>();</highlight></codeline>
<codeline lineno="565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="567"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="568"><highlight class="comment">*<sp/>Applies<sp/>any<sp/>changes<sp/>to<sp/>the<sp/>material</highlight></codeline>
<codeline lineno="569"><highlight class="comment">*<sp/>@param<sp/>force<sp/>If<sp/>true<sp/>then<sp/>the<sp/>material<sp/>will<sp/>be<sp/>applied<sp/>regardless<sp/>of<sp/>the<sp/>number<sp/>of<sp/>changes.</highlight></codeline>
<codeline lineno="570"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1add2c440be343730f9855f97981271f23" kindref="member">MaterialDoc::ApplyMaterialChanges</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force)<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(force<sp/>||<sp/>applyWaiting)<sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sourceModify<sp/>&amp;&amp;<sp/>sourceModifyOwner)<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>text<sp/>=<sp/>sourceModifyOwner-&gt;GetSourceText();</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1aaeeab35cfb6dc95a2445c7a8554a59f4" kindref="member">ApplySourceModify</ref>(text);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1a49f2aa68e647ec1e2f9ba3acff331034" kindref="member">ReplaceSourceText</ref>();</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*declText<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>_alloca(<sp/>renderMaterial-&gt;GetTextLength()<sp/>+<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderMaterial-&gt;GetText(<sp/>declText<sp/>);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderMaterial-&gt;GetText(declText);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1a7d93d3a899e98f369c09fd2a0004b5f4" kindref="member">ParseMaterialText</ref>(declText);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>applyWaiting<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(manager);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manager-&gt;<ref refid="class_material_doc_manager_1af278c32ecda53219920325abf21c3527" kindref="member">MaterialApplied</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal">}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="596"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="597"><highlight class="comment">*<sp/>Saves<sp/>the<sp/>material.</highlight></codeline>
<codeline lineno="598"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1a43c2caa36ffea5f4127356aa3568f0e2" kindref="member">MaterialDoc::Save</ref>()<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1a47f7a1cbb03f0e8116ff0df6e66023e5" kindref="member">EnableAllStages</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Apply<sp/>the<sp/>material<sp/>so<sp/>that<sp/>the<sp/>renderMaterial<sp/>has<sp/>the<sp/>source<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!deleted)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1add2c440be343730f9855f97981271f23" kindref="member">ApplyMaterialChanges</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Replace<sp/>the<sp/>text<sp/>with<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderMaterial-&gt;SetText(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(renderMaterial-&gt;Save())<sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modified<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Notify<sp/>the<sp/>world</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(manager);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manager-&gt;<ref refid="class_material_doc_manager_1a9e008727ae76960e3a15509cc11f57de" kindref="member">MaterialSaved</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MessageBox(GetMaterialEditorWindow(),<sp/>va(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>save<sp/>&apos;%s&apos;.<sp/>It<sp/>may<sp/>be<sp/>read-only&quot;</highlight><highlight class="normal">,<sp/>name.c_str()),<sp/></highlight><highlight class="stringliteral">&quot;Save<sp/>Error&quot;</highlight><highlight class="normal">,<sp/>MB_OK<sp/>|<sp/>MB_ICONERROR);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="623"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="624"><highlight class="comment">*<sp/>Deletes<sp/>the<sp/>material.</highlight></codeline>
<codeline lineno="625"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1ae4a9ccd988a4da986e529be6fb92716c" kindref="member">MaterialDoc::Delete</ref>()<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>deleted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1af6cd9845aadd1e02967f3e4cb1afaec0" kindref="member">OnMaterialChanged</ref>();</highlight></codeline>
<codeline lineno="630"><highlight class="normal">}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="632"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="633"><highlight class="comment">*<sp/>Sets<sp/>the<sp/>proper<sp/>internal<sp/>states<sp/>and<sp/>notifies<sp/>the<sp/>MaterialDocManager<sp/>once<sp/>a<sp/>material<sp/>has<sp/>been<sp/>changed.</highlight></codeline>
<codeline lineno="634"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1af6cd9845aadd1e02967f3e4cb1afaec0" kindref="member">MaterialDoc::OnMaterialChanged</ref>()<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>modified<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>applyWaiting<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(manager);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>manager-&gt;<ref refid="class_material_doc_manager_1af9bd7e05d880fc1da9ef1701ecd0a4d2" kindref="member">MaterialChanged</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="644"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="645"><highlight class="comment">*<sp/>Passes<sp/>text<sp/>to<sp/>a<sp/>render<sp/>material<sp/>for<sp/>parsing.</highlight></codeline>
<codeline lineno="646"><highlight class="comment">*<sp/>@param<sp/>source<sp/>The<sp/>text<sp/>that<sp/>sould<sp/>be<sp/>applied<sp/>to<sp/>the<sp/>idMaterial.</highlight></codeline>
<codeline lineno="647"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1a7d93d3a899e98f369c09fd2a0004b5f4" kindref="member">MaterialDoc::ParseMaterialText</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>source)<sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*idLexer<sp/>src;</highlight></codeline>
<codeline lineno="651"><highlight class="comment"><sp/><sp/><sp/><sp/>src.LoadMemory(source,<sp/>strlen(source),<sp/>&quot;material&quot;);</highlight></codeline>
<codeline lineno="652"><highlight class="comment"><sp/><sp/><sp/><sp/>src.SetFlags(<sp/></highlight></codeline>
<codeline lineno="653"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEXFL_NOSTRINGCONCAT<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>multiple<sp/>strings<sp/>seperated<sp/>by<sp/>whitespaces<sp/>are<sp/>not<sp/>concatenated</highlight></codeline>
<codeline lineno="654"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEXFL_NOSTRINGESCAPECHARS<sp/>|<sp/><sp/><sp/><sp/><sp/>//<sp/>no<sp/>escape<sp/>characters<sp/>inside<sp/>strings</highlight></codeline>
<codeline lineno="655"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEXFL_ALLOWPATHNAMES<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>allow<sp/>path<sp/>seperators<sp/>in<sp/>names</highlight></codeline>
<codeline lineno="656"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEXFL_ALLOWMULTICHARLITERALS<sp/>|<sp/><sp/>//<sp/>allow<sp/>multi<sp/>character<sp/>literals</highlight></codeline>
<codeline lineno="657"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEXFL_ALLOWBACKSLASHSTRINGCONCAT<sp/>|<sp/><sp/>//<sp/>allow<sp/>multiple<sp/>strings<sp/>seperated<sp/>by<sp/>&apos;\&apos;<sp/>to<sp/>be<sp/>concatenated</highlight></codeline>
<codeline lineno="658"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEXFL_NOFATALERRORS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>just<sp/>set<sp/>a<sp/>flag<sp/>instead<sp/>of<sp/>fatal<sp/>erroring</highlight></codeline>
<codeline lineno="659"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="660"><highlight class="comment"></highlight></codeline>
<codeline lineno="661"><highlight class="comment"><sp/><sp/><sp/><sp/>//Skip<sp/>the<sp/>name<sp/>becuase<sp/>the<sp/>material<sp/>parsing<sp/>code<sp/>expects<sp/>it</highlight></codeline>
<codeline lineno="662"><highlight class="comment"><sp/><sp/><sp/><sp/>src.SkipUntilString(&quot;{&quot;);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Now<sp/>let<sp/>the<sp/>material<sp/>parse<sp/>the<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>renderMaterial-&gt;Parse(source,<sp/>strlen(source));</highlight></codeline>
<codeline lineno="666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="668"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="669"><highlight class="comment">*<sp/>Parses<sp/>the<sp/>source<sp/>text<sp/>from<sp/>an<sp/>idMaterial<sp/>and<sp/>initializes<sp/>the<sp/>editor<sp/>dictionary<sp/>representation</highlight></codeline>
<codeline lineno="670"><highlight class="comment">*<sp/>of<sp/>the<sp/>material.</highlight></codeline>
<codeline lineno="671"><highlight class="comment">*<sp/>@param<sp/>src<sp/>The<sp/>idLexer<sp/>object<sp/>that<sp/>contains<sp/>the<sp/>material<sp/>text.</highlight></codeline>
<codeline lineno="672"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1ad2b907414ed188950231e889b50cd0f6" kindref="member">MaterialDoc::ParseMaterial</ref>(<ref refid="classid_lexer" kindref="compound">idLexer</ref>*<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_token" kindref="compound">idToken</ref><sp/><sp/><sp/><sp/><sp/>token;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Parse<sp/>past<sp/>the<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>src-&gt;SkipUntilString(</highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!src-&gt;ExpectAnyToken(<sp/>&amp;token<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Todo:<sp/>Add<sp/>some<sp/>error<sp/>checking<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>token<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_material_doc_1aa9109223761690a0b4af455ba556f74f" kindref="member">ParseMaterialDef</ref>(&amp;token,<sp/>src,<sp/>MaterialDefManager::MATERIAL_DEF_MATERIAL,<sp/>&amp;editMaterial.materialData))<sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!token.Icmp(<sp/></highlight><highlight class="stringliteral">&quot;diffusemap&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Added<sp/>as<sp/>a<sp/>special<sp/>stage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>str;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src-&gt;ReadRestOfLine(<sp/>str<sp/>);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1ac12736f0d5c0b12bf1d3d3d045eca0d8" kindref="member">AddSpecialMapStage</ref>(</highlight><highlight class="stringliteral">&quot;diffusemap&quot;</highlight><highlight class="normal">,<sp/>str);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!token.Icmp(<sp/></highlight><highlight class="stringliteral">&quot;specularmap&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>str;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src-&gt;ReadRestOfLine(<sp/>str<sp/>);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1ac12736f0d5c0b12bf1d3d3d045eca0d8" kindref="member">AddSpecialMapStage</ref>(</highlight><highlight class="stringliteral">&quot;specularmap&quot;</highlight><highlight class="normal">,<sp/>str);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!token.Icmp(<sp/></highlight><highlight class="stringliteral">&quot;bumpmap&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>str;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src-&gt;ReadRestOfLine(<sp/>str<sp/>);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1ac12736f0d5c0b12bf1d3d3d045eca0d8" kindref="member">AddSpecialMapStage</ref>(</highlight><highlight class="stringliteral">&quot;bumpmap&quot;</highlight><highlight class="normal">,<sp/>str);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>token<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1a74c87c699d16edf2527d68e6d4cf87ce" kindref="member">ParseStage</ref>(src);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="716"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="717"><highlight class="comment">*<sp/>Parses<sp/>a<sp/>single<sp/>stage<sp/>from<sp/>the<sp/>source<sp/>text<sp/>from<sp/>an<sp/>idMaterial<sp/>and<sp/>initializes<sp/>the<sp/>editor<sp/>dictionary<sp/></highlight></codeline>
<codeline lineno="718"><highlight class="comment">*<sp/>representation<sp/>of<sp/>the<sp/>material.</highlight></codeline>
<codeline lineno="719"><highlight class="comment">*<sp/>@param<sp/>src<sp/>The<sp/>idLexer<sp/>object<sp/>that<sp/>contains<sp/>the<sp/>material<sp/>text.</highlight></codeline>
<codeline lineno="720"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1a74c87c699d16edf2527d68e6d4cf87ce" kindref="member">MaterialDoc::ParseStage</ref>(<ref refid="classid_lexer" kindref="compound">idLexer</ref>*<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_m_e_stage__t" kindref="compound">MEStage_t</ref>*<sp/>newStage<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_m_e_stage__t" kindref="compound">MEStage_t</ref>();</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>editMaterial.stages.Append(newStage);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>newStage-&gt;stageData.SetInt(</highlight><highlight class="stringliteral">&quot;stagetype&quot;</highlight><highlight class="normal">,<sp/>STAGE_TYPE_NORMAL);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>newStage-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_token" kindref="compound">idToken</ref><sp/><sp/><sp/><sp/><sp/>token;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!src-&gt;ExpectAnyToken(<sp/>&amp;token<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Todo:<sp/>Add<sp/>some<sp/>error<sp/>checking<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>token<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_material_doc_1aa9109223761690a0b4af455ba556f74f" kindref="member">ParseMaterialDef</ref>(&amp;token,<sp/>src,<sp/>MaterialDefManager::MATERIAL_DEF_STAGE,<sp/>&amp;newStage-&gt;stageData))<sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!token.Icmp(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>str;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src-&gt;ReadRestOfLine(<sp/>str<sp/>);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str.StripTrailing(</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str.StripLeading(</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newStage-&gt;stageData.Set(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>str);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>name;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>newStage-&gt;stageData.GetString(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(name.Length()<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newStage-&gt;stageData.Set(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>va(</highlight><highlight class="stringliteral">&quot;Stage<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>index+1));</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal">}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="764"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="765"><highlight class="comment">*<sp/>Adds<sp/>a<sp/>special<sp/>stage<sp/>to<sp/>the<sp/>material.</highlight></codeline>
<codeline lineno="766"><highlight class="comment">*<sp/>@param<sp/>stageName<sp/>The<sp/>name<sp/>of<sp/>the<sp/>special<sp/>stage<sp/>bumpmap,<sp/>diffusemap<sp/>or<sp/>specularmap</highlight></codeline>
<codeline lineno="767"><highlight class="comment">*<sp/>@param<sp/>map<sp/>The<sp/>map<sp/>for<sp/>the<sp/>special<sp/>stage.</highlight></codeline>
<codeline lineno="768"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1ac12736f0d5c0b12bf1d3d3d045eca0d8" kindref="member">MaterialDoc::AddSpecialMapStage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>stageName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>map)<sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_m_e_stage__t" kindref="compound">MEStage_t</ref>*<sp/>newStage<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_m_e_stage__t" kindref="compound">MEStage_t</ref>();</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>editMaterial.stages.Append(newStage);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>newStage-&gt;stageData.Set(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>stageName);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>newStage-&gt;stageData.Set(</highlight><highlight class="stringliteral">&quot;map&quot;</highlight><highlight class="normal">,<sp/>map);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>newStage-&gt;stageData.SetInt(</highlight><highlight class="stringliteral">&quot;stagetype&quot;</highlight><highlight class="normal">,<sp/>STAGE_TYPE_SPECIALMAP);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>newStage-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="778"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="779"><highlight class="comment">*<sp/>Finds<sp/>the<sp/>appropriate<sp/>material<sp/>definition<sp/>for<sp/>the<sp/>supplied<sp/>token<sp/>and<sp/>initializes<sp/>the</highlight></codeline>
<codeline lineno="780"><highlight class="comment">*<sp/>internal<sp/>dictionary<sp/>data.</highlight></codeline>
<codeline lineno="781"><highlight class="comment">*<sp/>@param<sp/>token<sp/>The<sp/>token<sp/>to<sp/>lookup</highlight></codeline>
<codeline lineno="782"><highlight class="comment">*<sp/>@param<sp/>src<sp/>The<sp/>idLexer<sp/>that<sp/>contains<sp/>the<sp/>material<sp/>source<sp/>text.</highlight></codeline>
<codeline lineno="783"><highlight class="comment">*<sp/>@param<sp/>type<sp/>The<sp/>type<sp/>of<sp/>attribute<sp/>grouping<sp/>to<sp/>use<sp/>material,<sp/>stage<sp/>or<sp/>special<sp/>stage.</highlight></codeline>
<codeline lineno="784"><highlight class="comment">*<sp/>@param<sp/>dict<sp/>The<sp/>dictionary<sp/>to<sp/>initialize.</highlight></codeline>
<codeline lineno="785"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1aa9109223761690a0b4af455ba556f74f" kindref="member">MaterialDoc::ParseMaterialDef</ref>(<ref refid="classid_token" kindref="compound">idToken</ref>*<sp/>token,<sp/><ref refid="classid_lexer" kindref="compound">idLexer</ref>*<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/><ref refid="classid_dict" kindref="compound">idDict</ref>*<sp/>dict)<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_list" kindref="compound">MaterialDefList</ref>*<sp/>defs<sp/>=<sp/><ref refid="class_material_def_manager_1a515b972ee6ccf5d9251b2ee00fa2c653" kindref="member">MaterialDefManager::GetMaterialDefs</ref>(type);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>defs-&gt;Num();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!token-&gt;Icmp((*defs)[i]-&gt;dictName))<sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">((*defs)[i]-&gt;type)<sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MaterialDef::MATERIAL_DEF_TYPE_STRING:</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>str;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src-&gt;ReadRestOfLine(<sp/>str<sp/>);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*defs)[i]-&gt;quotes)<sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str.StripTrailing(</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str.StripLeading(</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;Set((*defs)[i]-&gt;dictName,<sp/>str);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MaterialDef::MATERIAL_DEF_TYPE_BOOL:</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src-&gt;SkipRestOfLine();</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;SetBool((*defs)[i]-&gt;dictName,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MaterialDef::MATERIAL_DEF_TYPE_FLOAT:</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>str;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src-&gt;ReadRestOfLine(<sp/>str<sp/>);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;Set((*defs)[i]-&gt;dictName,<sp/>str);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MaterialDef::MATERIAL_DEF_TYPE_INT:</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>str;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src-&gt;ReadRestOfLine(<sp/>str<sp/>);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;Set((*defs)[i]-&gt;dictName,<sp/>str);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="830"><highlight class="normal">}</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="832"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="833"><highlight class="comment">*<sp/>Cleans<sp/>up<sp/>the<sp/>edit<sp/>material<sp/>by<sp/>deleting<sp/>the<sp/>stage<sp/>data<sp/>structures.</highlight></codeline>
<codeline lineno="834"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1aa6fdcfcbf19743095618e312238ab46c" kindref="member">MaterialDoc::ClearEditMaterial</ref>()<sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_material_doc_1a10f4f9444b7ea1f5fc79f9cd265c0941" kindref="member">GetStageCount</ref>();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>editMaterial.stages[i];</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>editMaterial.stages.Clear();</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>editMaterial.materialData.Clear();</highlight></codeline>
<codeline lineno="842"><highlight class="normal">}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="844"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="845"><highlight class="comment">*<sp/>Writes<sp/>the<sp/>internal<sp/>dictionary<sp/>data<sp/>to<sp/>the<sp/>standard<sp/>format.</highlight></codeline>
<codeline lineno="846"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_material_doc_1aa4d1829ec554f79f6f710233e62c9b1d" kindref="member">MaterialDoc::GenerateSourceText</ref>()<sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_file___memory" kindref="compound">idFile_Memory</ref><sp/>f;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>f.WriteFloatString(</highlight><highlight class="stringliteral">&quot;\n\n/*\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\tGenerated<sp/>by<sp/>the<sp/>Material<sp/>Editor.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\tType<sp/>&apos;materialeditor&apos;<sp/>at<sp/>the<sp/>console<sp/>to<sp/>launch<sp/>the<sp/>material<sp/>editor.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;*/\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>f.WriteFloatString(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>name.c_str());</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>f.WriteFloatString(<sp/></highlight><highlight class="stringliteral">&quot;{\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1af61cfbab8fd4bc4df279951d5d4bbddc" kindref="member">WriteMaterialDef</ref>(-1,<sp/>&amp;f,<sp/>MaterialDefManager::MATERIAL_DEF_MATERIAL,<sp/>1);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>editMaterial.stages.Num();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(editMaterial.stages[i]-&gt;enabled)<sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1a9afa82201815e72d65e39e0e570d62a3" kindref="member">WriteStage</ref>(i,<sp/>&amp;f);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>f.WriteFloatString(<sp/></highlight><highlight class="stringliteral">&quot;}\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f.GetDataPtr();</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal">}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="872"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="873"><highlight class="comment">*<sp/>Writes<sp/>the<sp/>internal<sp/>dictionary<sp/>data<sp/>to<sp/>the<sp/>standard<sp/>format<sp/>and<sp/>replaces<sp/>the<sp/></highlight></codeline>
<codeline lineno="874"><highlight class="comment">*<sp/>idMaterial<sp/>source<sp/>text<sp/>with<sp/>the<sp/>newly<sp/>generated<sp/>text.</highlight></codeline>
<codeline lineno="875"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1a49f2aa68e647ec1e2f9ba3acff331034" kindref="member">MaterialDoc::ReplaceSourceText</ref>()<sp/>{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderMaterial-&gt;SetText(<ref refid="class_material_doc_1aa4d1829ec554f79f6f710233e62c9b1d" kindref="member">GenerateSourceText</ref>());</highlight></codeline>
<codeline lineno="878"><highlight class="normal">}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="880"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="881"><highlight class="comment">*<sp/>Writes<sp/>a<sp/>single<sp/>stage.</highlight></codeline>
<codeline lineno="882"><highlight class="comment">*<sp/>@param<sp/>stage<sp/>The<sp/>stage<sp/>to<sp/>write.</highlight></codeline>
<codeline lineno="883"><highlight class="comment">*<sp/>@param<sp/>file<sp/>The<sp/>file<sp/>where<sp/>the<sp/>stage<sp/>should<sp/>be<sp/>wirtten</highlight></codeline>
<codeline lineno="884"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1a9afa82201815e72d65e39e0e570d62a3" kindref="member">MaterialDoc::WriteStage</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stage,<sp/><ref refid="classid_file___memory" kindref="compound">idFile_Memory</ref>*<sp/>file)<sp/>{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//idStr<sp/>stageName<sp/>=<sp/>GetAttribute(stage,<sp/>&quot;name&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type<sp/>=<sp/><ref refid="class_material_doc_1aed953aa4aeebabbb909b9734df3b4fb8" kindref="member">GetAttributeInt</ref>(stage,<sp/></highlight><highlight class="stringliteral">&quot;stagetype&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(!stageName.Icmp(&quot;diffusemap&quot;)<sp/>||<sp/>!stageName.Icmp(&quot;specularmap&quot;)<sp/>||<sp/>!stageName.Icmp(&quot;bumpmap&quot;))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type<sp/>==<sp/>STAGE_TYPE_SPECIALMAP)<sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1ad4fe681d544b2043250f9ae61a48416b" kindref="member">WriteSpecialMapStage</ref>(stage,<sp/>file);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>file-&gt;WriteFloatString(<sp/></highlight><highlight class="stringliteral">&quot;\t{\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>name<sp/>=<sp/><ref refid="class_material_doc_1a89dc758bb0c2ad19ee8f3945ec1efdb5" kindref="member">GetAttribute</ref>(stage,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(name.Length()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file-&gt;WriteFloatString(</highlight><highlight class="stringliteral">&quot;\t\tname\t\&quot;%s\&quot;\n&quot;</highlight><highlight class="normal">,<sp/>name.c_str());</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_material_doc_1af61cfbab8fd4bc4df279951d5d4bbddc" kindref="member">WriteMaterialDef</ref>(stage,<sp/>file,<sp/>MaterialDefManager::MATERIAL_DEF_STAGE,<sp/>2);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>file-&gt;WriteFloatString(<sp/></highlight><highlight class="stringliteral">&quot;\t}\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="903"><highlight class="normal">}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="905"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="906"><highlight class="comment">*<sp/>Writes<sp/>a<sp/>single<sp/>special<sp/>stage.</highlight></codeline>
<codeline lineno="907"><highlight class="comment">*<sp/>@param<sp/>stage<sp/>The<sp/>stage<sp/>to<sp/>write.</highlight></codeline>
<codeline lineno="908"><highlight class="comment">*<sp/>@param<sp/>file<sp/>The<sp/>file<sp/>where<sp/>the<sp/>stage<sp/>should<sp/>be<sp/>wirtten</highlight></codeline>
<codeline lineno="909"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1ad4fe681d544b2043250f9ae61a48416b" kindref="member">MaterialDoc::WriteSpecialMapStage</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stage,<sp/><ref refid="classid_file___memory" kindref="compound">idFile_Memory</ref>*<sp/>file)<sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>stageName<sp/>=<sp/><ref refid="class_material_doc_1a89dc758bb0c2ad19ee8f3945ec1efdb5" kindref="member">GetAttribute</ref>(stage,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>map<sp/>=<sp/><ref refid="class_material_doc_1a89dc758bb0c2ad19ee8f3945ec1efdb5" kindref="member">GetAttribute</ref>(stage,<sp/></highlight><highlight class="stringliteral">&quot;map&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>file-&gt;WriteFloatString(<sp/></highlight><highlight class="stringliteral">&quot;\t%s\t%s\n&quot;</highlight><highlight class="normal">,<sp/>stageName.c_str(),<sp/>map.c_str()<sp/>);</highlight></codeline>
<codeline lineno="915"><highlight class="normal">}</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="917"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="918"><highlight class="comment">*<sp/>Writes<sp/>a<sp/>set<sp/>of<sp/>material<sp/>attributes<sp/>to<sp/>a<sp/>file.</highlight></codeline>
<codeline lineno="919"><highlight class="comment">*<sp/>@param<sp/>stage<sp/>The<sp/>stage<sp/>to<sp/>write<sp/>or<sp/>-1<sp/>for<sp/>the<sp/>material.</highlight></codeline>
<codeline lineno="920"><highlight class="comment">*<sp/>@param<sp/>file<sp/>The<sp/>file<sp/>where<sp/>the<sp/>stage<sp/>should<sp/>be<sp/>wirtten.</highlight></codeline>
<codeline lineno="921"><highlight class="comment">*<sp/>@param<sp/>type<sp/>The<sp/>attribute<sp/>grouping<sp/>to<sp/>use.</highlight></codeline>
<codeline lineno="922"><highlight class="comment">*<sp/>@param<sp/>indent<sp/>The<sp/>number<sp/>of<sp/>tabs<sp/>to<sp/>indent<sp/>the<sp/>text.</highlight></codeline>
<codeline lineno="923"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_material_doc_1af61cfbab8fd4bc4df279951d5d4bbddc" kindref="member">MaterialDoc::WriteMaterialDef</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stage,<sp/><ref refid="classid_file___memory" kindref="compound">idFile_Memory</ref>*<sp/>file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indent)<sp/>{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>prefix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>indent;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_list" kindref="compound">MaterialDefList</ref>*<sp/>defs<sp/>=<sp/><ref refid="class_material_def_manager_1a515b972ee6ccf5d9251b2ee00fa2c653" kindref="member">MaterialDefManager::GetMaterialDefs</ref>(type);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>defs-&gt;Num();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">((*defs)[i]-&gt;type)<sp/>{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MaterialDef::MATERIAL_DEF_TYPE_STRING:</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>attrib<sp/>=<sp/><ref refid="class_material_doc_1a89dc758bb0c2ad19ee8f3945ec1efdb5" kindref="member">GetAttribute</ref>(stage,<sp/>(*defs)[i]-&gt;dictName);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(attrib.Length()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*defs)[i]-&gt;quotes)</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file-&gt;WriteFloatString(</highlight><highlight class="stringliteral">&quot;%s%s\t\&quot;%s\&quot;\n&quot;</highlight><highlight class="normal">,<sp/>prefix.c_str(),<sp/>(*defs)[i]-&gt;dictName.c_str(),<sp/>attrib.c_str());</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file-&gt;WriteFloatString(</highlight><highlight class="stringliteral">&quot;%s%s\t%s\n&quot;</highlight><highlight class="normal">,<sp/>prefix.c_str(),<sp/>(*defs)[i]-&gt;dictName.c_str(),<sp/>attrib.c_str());</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MaterialDef::MATERIAL_DEF_TYPE_BOOL:</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_material_doc_1ae75fe31ccec6978be8c1bdadeacc824f" kindref="member">GetAttributeBool</ref>(stage,<sp/>(*defs)[i]-&gt;dictName))</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file-&gt;WriteFloatString(</highlight><highlight class="stringliteral">&quot;%s%s\t\n&quot;</highlight><highlight class="normal">,prefix.c_str(),<sp/>(*defs)[i]-&gt;dictName.c_str());</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MaterialDef::MATERIAL_DEF_TYPE_FLOAT:</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val<sp/>=<sp/><ref refid="class_material_doc_1adcf8ba417861d316e80f076428589ee5" kindref="member">GetAttributeFloat</ref>(stage,<sp/>(*defs)[i]-&gt;dictName);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file-&gt;WriteFloatString(</highlight><highlight class="stringliteral">&quot;%s%s\t%f\n&quot;</highlight><highlight class="normal">,<sp/>prefix.c_str(),<sp/>(*defs)[i]-&gt;dictName.c_str(),<sp/>val);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MaterialDef::MATERIAL_DEF_TYPE_INT:</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val<sp/>=<sp/><ref refid="class_material_doc_1aed953aa4aeebabbb909b9734df3b4fb8" kindref="member">GetAttributeInt</ref>(stage,<sp/>(*defs)[i]-&gt;dictName);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file-&gt;WriteFloatString(</highlight><highlight class="stringliteral">&quot;%s%s\t%d\n&quot;</highlight><highlight class="normal">,<sp/>prefix.c_str(),<sp/>(*defs)[i]-&gt;dictName.c_str(),<sp/>val);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="965"><highlight class="normal">}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/tools/materialeditor/MaterialDoc.cpp"/>
  </compounddef>
</doxygen>
