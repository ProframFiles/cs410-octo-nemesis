<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_material_editor_8cpp" kind="file">
    <compoundname>MaterialEditor.cpp</compoundname>
    <includes refid="precompiled_8h" local="yes">../../idlib/precompiled.h</includes>
    <includes refid="win__local_8h" local="yes">../../sys/win32/win_local.h</includes>
    <includes refid="_material_editor_8h" local="yes">MaterialEditor.h</includes>
    <includes refid="_m_e_main_frame_8h" local="yes">MEMainFrame.h</includes>
    <innerclass refid="class_c_about_dlg" prot="public">CAboutDlg</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_material_editor_8cpp_1ae08ba7880dca528084c5890594a19a9a" prot="public" static="no" mutable="no">
        <type><ref refid="class_m_e_main_frame" kindref="compound">MEMainFrame</ref> *</type>
        <definition>MEMainFrame* meMainFrame</definition>
        <argsstring></argsstring>
        <name>meMainFrame</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/materialeditor/MaterialEditor.cpp" line="40" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/materialeditor/MaterialEditor.cpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_material_editor_8cpp_1a47c9764e277e94bf5bc2d52187dbb9d0" prot="public" static="no" mutable="no">
        <type>CFont *</type>
        <definition>CFont* materialEditorFont</definition>
        <argsstring></argsstring>
        <name>materialEditorFont</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/materialeditor/MaterialEditor.cpp" line="42" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/materialeditor/MaterialEditor.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_material_editor_8cpp_1af0673fc1fd20e831ec2d5b0372fa66c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MaterialEditorInit</definition>
        <argsstring>(void)</argsstring>
        <name>MaterialEditorInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initializes the material editor tool. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/materialeditor/MaterialEditor.cpp" line="47" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/materialeditor/MaterialEditor.cpp" bodystart="47" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="_material_editor_8cpp_1a68a8b963f3a28117f3f498ede12226c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MaterialEditorRun</definition>
        <argsstring>(void)</argsstring>
        <name>MaterialEditorRun</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called every frame by the doom engine to allow the material editor to process messages. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/materialeditor/MaterialEditor.cpp" line="107" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/materialeditor/MaterialEditor.cpp" bodystart="107" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="_material_editor_8cpp_1a277e50ea2100877de8a5040bac0ea097" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MaterialEditorShutdown</definition>
        <argsstring>(void)</argsstring>
        <name>MaterialEditorShutdown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called by the doom engine when the material editor needs to be destroyed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/materialeditor/MaterialEditor.cpp" line="121" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/materialeditor/MaterialEditor.cpp" bodystart="121" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="_material_editor_8cpp_1aed95e2d73c81faccf5e6de078ecafaeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MaterialEditorPrintConsole</definition>
        <argsstring>(const char *msg)</argsstring>
        <name>MaterialEditorPrintConsole</name>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allows the doom engine to reflect console output to the material editors console. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/materialeditor/MaterialEditor.cpp" line="133" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/materialeditor/MaterialEditor.cpp" bodystart="133" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="_material_editor_8cpp_1a365864f883d5a569843cba32329a49d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HWND</type>
        <definition>HWND GetMaterialEditorWindow</definition>
        <argsstring>()</argsstring>
        <name>GetMaterialEditorWindow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the handle to the main Material Editor Window </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/materialeditor/MaterialEditor.cpp" line="141" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/materialeditor/MaterialEditor.cpp" bodystart="141" bodyend="143"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../idlib/precompiled.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>hdrstop</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../sys/win32/win_local.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MaterialEditor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MEMainFrame.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>new<sp/>DEBUG_NEW</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><ref refid="class_m_e_main_frame" kindref="compound">MEMainFrame</ref>*<sp/>meMainFrame<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">CFont*<sp/>materialEditorFont<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="44"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="45"><highlight class="comment">*<sp/>Initializes<sp/>the<sp/>material<sp/>editor<sp/>tool.</highlight></codeline>
<codeline lineno="46"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MaterialEditorInit(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>InitPropTree(win32.hInstance);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>com_editors<sp/>=<sp/>EDITOR_MATERIAL;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_GrabMouseCursor(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>InitAfx();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>InitCommonControls();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>OLE<sp/>libraries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!AfxOleInit())</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>AfxEnableControlContainer();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>NONCLIENTMETRICS<sp/>info;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>info.cbSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(info);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>::SystemParametersInfo(SPI_GETNONCLIENTMETRICS,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(info),<sp/>&amp;info,<sp/>0);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>LOGFONT<sp/>lf;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;lf,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(LOGFONT));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>CWindowDC<sp/>dc(NULL);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>lf.lfCharSet<sp/>=<sp/>(BYTE)GetTextCharsetInfo(dc.GetSafeHdc(),<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>lf.lfHeight<sp/>=<sp/>info.lfMenuFont.lfHeight;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>lf.lfWeight<sp/>=<sp/>info.lfMenuFont.lfWeight;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>lf.lfItalic<sp/>=<sp/>info.lfMenuFont.lfItalic;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>we<sp/>should<sp/>use<sp/>system<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>_tcscpy(lf.lfFaceName,<sp/>info.lfMenuFont.lfFaceName);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>materialEditorFont<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CFont;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>materialEditorFont-&gt;CreateFontIndirect(&amp;lf);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>create<sp/>the<sp/>main<sp/>window,<sp/>this<sp/>code<sp/>creates<sp/>a<sp/>new<sp/>frame<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>object<sp/>and<sp/>then<sp/>sets<sp/>it<sp/>as<sp/>the<sp/>application&apos;s<sp/>main<sp/>window<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>meMainFrame<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_m_e_main_frame" kindref="compound">MEMainFrame</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>and<sp/>load<sp/>the<sp/>frame<sp/>with<sp/>its<sp/>resources</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>meMainFrame-&gt;LoadFrame(IDR_ME_MAINFRAME,<sp/>WS_OVERLAPPEDWINDOW<sp/>|<sp/>FWS_ADDTOTITLE,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hide<sp/>the<sp/>doom<sp/>window<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>::ShowWindow<sp/>(<sp/>win32.hWnd,<sp/>SW_HIDE<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>one<sp/>and<sp/>only<sp/>window<sp/>has<sp/>been<sp/>initialized,<sp/>so<sp/>show<sp/>and<sp/>update<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>meMainFrame-&gt;ShowWindow(SW_SHOW);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>meMainFrame-&gt;UpdateWindow();</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="104"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="105"><highlight class="comment">*<sp/>Called<sp/>every<sp/>frame<sp/>by<sp/>the<sp/>doom<sp/>engine<sp/>to<sp/>allow<sp/>the<sp/>material<sp/>editor<sp/>to<sp/>process<sp/>messages.</highlight></codeline>
<codeline lineno="106"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MaterialEditorRun(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>MSG<sp/>*msg<sp/>=<sp/>AfxGetCurrentMessage();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>::PeekMessage(msg,<sp/>NULL,<sp/>NULL,<sp/>NULL,<sp/>PM_NOREMOVE)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pump<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!AfxGetApp()-&gt;PumpMessage()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="118"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="119"><highlight class="comment">*<sp/>Called<sp/>by<sp/>the<sp/>doom<sp/>engine<sp/>when<sp/>the<sp/>material<sp/>editor<sp/>needs<sp/>to<sp/>be<sp/>destroyed.</highlight></codeline>
<codeline lineno="120"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MaterialEditorShutdown(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>meMainFrame;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>materialEditorFont;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>meMainFrame<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="130"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="131"><highlight class="comment">*<sp/>Allows<sp/>the<sp/>doom<sp/>engine<sp/>to<sp/>reflect<sp/>console<sp/>output<sp/>to<sp/>the<sp/>material<sp/>editors<sp/>console.</highlight></codeline>
<codeline lineno="132"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MaterialEditorPrintConsole(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(com_editors<sp/>&amp;<sp/>EDITOR_MATERIAL)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meMainFrame-&gt;<ref refid="class_m_e_main_frame_1a27325958278f4d74a607598cdeb5a0d0" kindref="member">PrintConsoleMessage</ref>(msg);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="138"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="139"><highlight class="comment">*<sp/>Returns<sp/>the<sp/>handle<sp/>to<sp/>the<sp/>main<sp/>Material<sp/>Editor<sp/>Window</highlight></codeline>
<codeline lineno="140"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">HWND<sp/>GetMaterialEditorWindow()<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>meMainFrame-&gt;GetSafeHwnd();</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="145"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="146"><highlight class="comment">*<sp/>Simple<sp/>about<sp/>box<sp/>for<sp/>the<sp/>material<sp/>editor.</highlight></codeline>
<codeline lineno="147"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="class_c_about_dlg" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_about_dlg" kindref="compound">CAboutDlg</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>CDialog</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_about_dlg_1a6d1e6a33fef23bee6e75254189d865ce" kindref="member">CAboutDlg</ref>();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>IDD<sp/>=<sp/>IDD_ME_ABOUTBOX<sp/>};</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_about_dlg_1ab83db7484fec957282d7d5a21aed4df4" kindref="member">DoDataExchange</ref>(CDataExchange*<sp/>pDX);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DDX/DDV<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>DECLARE_MESSAGE_MAP()</highlight></codeline>
<codeline lineno="159"><highlight class="normal">};</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="161"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="162"><highlight class="comment">*<sp/>Constructor<sp/>for<sp/>the<sp/>about<sp/>box.</highlight></codeline>
<codeline lineno="163"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><ref refid="class_c_about_dlg_1a6d1e6a33fef23bee6e75254189d865ce" kindref="member">CAboutDlg::CAboutDlg</ref>()<sp/>:<sp/>CDialog(<ref refid="class_c_about_dlg" kindref="compound">CAboutDlg</ref>::IDD)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="167"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="168"><highlight class="comment">*<sp/>Called<sp/>by<sp/>the<sp/>MFC<sp/>framework<sp/>to<sp/>exchange<sp/>data<sp/>with<sp/>the<sp/>window<sp/>controls.</highlight></codeline>
<codeline lineno="169"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_about_dlg_1ab83db7484fec957282d7d5a21aed4df4" kindref="member">CAboutDlg::DoDataExchange</ref>(CDataExchange*<sp/>pDX)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>CDialog::DoDataExchange(pDX);</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal">BEGIN_MESSAGE_MAP(<ref refid="class_c_about_dlg" kindref="compound">CAboutDlg</ref>,<sp/>CDialog)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">END_MESSAGE_MAP()</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/tools/materialeditor/MaterialEditor.cpp"/>
  </compounddef>
</doxygen>
