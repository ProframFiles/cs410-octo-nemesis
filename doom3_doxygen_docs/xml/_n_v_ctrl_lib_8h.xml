<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_n_v_ctrl_lib_8h" kind="file">
    <compoundname>NVCtrlLib.h</compoundname>
    <includes refid="_n_v_ctrl_8h" local="yes">NVCtrl.h</includes>
    <includedby refid="glimp_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/sys/linux/glimp.cpp</includedby>
    <includedby refid="_n_v_ctrl_8c" local="yes">E:/sources/3rd_party/DOOM/neo/sys/linux/libXNVCtrl/NVCtrl.c</includedby>
    <innerclass refid="struct_x_n_v_ctrl_attribute_changed_event" prot="public">XNVCtrlAttributeChangedEvent</innerclass>
    <innerclass refid="union_x_n_v_ctrl_event" prot="public">XNVCtrlEvent</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="_n_v_ctrl_lib_8h_1a9f16964709b2becebbbc05adf79e1535" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Bool</type>
        <definition>Bool XNVCTRLQueryExtension</definition>
        <argsstring>(Display *dpy, int *event_basep, int *error_basep)</argsstring>
        <name>XNVCTRLQueryExtension</name>
        <param>
          <type>Display *</type>
          <declname>dpy</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>event_basep</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>error_basep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/libXNVCtrl/NVCtrlLib.h" line="15" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/libXNVCtrl/NVCtrl.c" bodystart="46" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="_n_v_ctrl_lib_8h_1adf6955f4f53dce1c86cc08b52028043e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Bool</type>
        <definition>Bool XNVCTRLQueryVersion</definition>
        <argsstring>(Display *dpy, int *major, int *minor)</argsstring>
        <name>XNVCTRLQueryVersion</name>
        <param>
          <type>Display *</type>
          <declname>dpy</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>major</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>minor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/libXNVCtrl/NVCtrlLib.h" line="29" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/libXNVCtrl/NVCtrl.c" bodystart="63" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="_n_v_ctrl_lib_8h_1a63dbdc40c3e3fe3060571c2b4bcbe82c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Bool</type>
        <definition>Bool XNVCTRLIsNvScreen</definition>
        <argsstring>(Display *dpy, int screen)</argsstring>
        <name>XNVCTRLIsNvScreen</name>
        <param>
          <type>Display *</type>
          <declname>dpy</declname>
        </param>
        <param>
          <type>int</type>
          <declname>screen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/libXNVCtrl/NVCtrlLib.h" line="43" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/libXNVCtrl/NVCtrl.c" bodystart="94" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="_n_v_ctrl_lib_8h_1af5ef682cc858d4b5a946458e7739364b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XNVCTRLSetAttribute</definition>
        <argsstring>(Display *dpy, int screen, unsigned int display_mask, unsigned int attribute, int value)</argsstring>
        <name>XNVCTRLSetAttribute</name>
        <param>
          <type>Display *</type>
          <declname>dpy</declname>
        </param>
        <param>
          <type>int</type>
          <declname>screen</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>display_mask</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/libXNVCtrl/NVCtrlLib.h" line="62" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/libXNVCtrl/NVCtrl.c" bodystart="125" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="_n_v_ctrl_lib_8h_1ae7c498d4315d725f88eecef920e28f9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Bool</type>
        <definition>Bool XNVCTRLQueryAttribute</definition>
        <argsstring>(Display *dpy, int screen, unsigned int display_mask, unsigned int attribute, int *value)</argsstring>
        <name>XNVCTRLQueryAttribute</name>
        <param>
          <type>Display *</type>
          <declname>dpy</declname>
        </param>
        <param>
          <type>int</type>
          <declname>screen</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>display_mask</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/libXNVCtrl/NVCtrlLib.h" line="86" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/libXNVCtrl/NVCtrl.c" bodystart="150" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="_n_v_ctrl_lib_8h_1a2e7de84fd18e64117a1aa24f0fcfd16f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Bool</type>
        <definition>Bool XNVCTRLQueryStringAttribute</definition>
        <argsstring>(Display *dpy, int screen, unsigned int display_mask, unsigned int attribute, char **ptr)</argsstring>
        <name>XNVCTRLQueryStringAttribute</name>
        <param>
          <type>Display *</type>
          <declname>dpy</declname>
        </param>
        <param>
          <type>int</type>
          <declname>screen</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>display_mask</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/libXNVCtrl/NVCtrlLib.h" line="108" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/libXNVCtrl/NVCtrl.c" bodystart="187" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="_n_v_ctrl_lib_8h_1afba5e36da7f4118f2ad1c411a28456cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Bool</type>
        <definition>Bool XNVCTRLQueryValidAttributeValues</definition>
        <argsstring>(Display *dpy, int screen, unsigned int display_mask, unsigned int attribute, NVCTRLAttributeValidValuesRec *values)</argsstring>
        <name>XNVCTRLQueryValidAttributeValues</name>
        <param>
          <type>Display *</type>
          <declname>dpy</declname>
        </param>
        <param>
          <type>int</type>
          <declname>screen</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>display_mask</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type><ref refid="struct___n_v_c_t_r_l_attribute_valid_values" kindref="compound">NVCTRLAttributeValidValuesRec</ref> *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/libXNVCtrl/NVCtrlLib.h" line="125" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/libXNVCtrl/NVCtrl.c" bodystart="238" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="_n_v_ctrl_lib_8h_1a4447157a0db1ec7c7933419f819baad8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Bool</type>
        <definition>Bool XNVCtrlSelectNotify</definition>
        <argsstring>(Display *dpy, int screen, int type, Bool onoff)</argsstring>
        <name>XNVCtrlSelectNotify</name>
        <param>
          <type>Display *</type>
          <declname>dpy</declname>
        </param>
        <param>
          <type>int</type>
          <declname>screen</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>Bool</type>
          <declname>onoff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/libXNVCtrl/NVCtrlLib.h" line="145" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/libXNVCtrl/NVCtrl.c" bodystart="284" bodyend="309"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__NVCTRLLIB_H</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__NVCTRLLIB_H</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;NVCtrl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>XNVCTRLQueryExtension<sp/>-</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>Returns<sp/>True<sp/>if<sp/>the<sp/>extension<sp/>exists,<sp/>returns<sp/>False<sp/>otherwise.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>event_basep<sp/>and<sp/>error_basep<sp/>are<sp/>the<sp/>extension<sp/>event<sp/>and<sp/>error</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>bases.<sp/><sp/>Currently,<sp/>no<sp/>extension<sp/>specific<sp/>errors<sp/>or<sp/>events<sp/>are</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>defined.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">Bool<sp/>XNVCTRLQueryExtension<sp/>(</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>Display<sp/>*dpy,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*event_basep,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*error_basep</highlight></codeline>
<codeline lineno="19"><highlight class="normal">);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/>XNVCTRLQueryVersion<sp/>-</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/>Returns<sp/>True<sp/>if<sp/>the<sp/>extension<sp/>exists,<sp/>returns<sp/>False<sp/>otherwise.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/>major<sp/>and<sp/>minor<sp/>are<sp/>the<sp/>extension&apos;s<sp/>major<sp/>and<sp/>minor<sp/>version</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/>numbers.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">Bool<sp/>XNVCTRLQueryVersion<sp/>(</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>Display<sp/>*dpy,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*major,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*minor</highlight></codeline>
<codeline lineno="33"><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/>XNVCTRLIsNvScreen</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/>Returns<sp/>True<sp/>is<sp/>the<sp/>specified<sp/>screen<sp/>is<sp/>controlled<sp/>by<sp/>the<sp/>NVIDIA</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/><sp/>driver.<sp/><sp/>Returns<sp/>False<sp/>otherwise.</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">Bool<sp/>XNVCTRLIsNvScreen<sp/>(</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>Display<sp/>*dpy,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>screen</highlight></codeline>
<codeline lineno="46"><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/><sp/>XNVCTRLSetAttribute<sp/>-</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/><sp/>Sets<sp/>the<sp/>attribute<sp/>to<sp/>the<sp/>given<sp/>value.<sp/><sp/>The<sp/>attributes<sp/>and<sp/>their</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/><sp/>possible<sp/>values<sp/>are<sp/>listed<sp/>in<sp/>NVCtrl.h.</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/><sp/>Not<sp/>all<sp/>attributes<sp/>require<sp/>the<sp/>display_mask<sp/>parameter;<sp/>see</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/><sp/>NVCtrl.h<sp/>for<sp/>details.</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/><sp/>Possible<sp/>errors:</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>BadValue<sp/>-<sp/>The<sp/>screen<sp/>or<sp/>attribute<sp/>doesn&apos;t<sp/>exist.</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>BadMatch<sp/>-<sp/>The<sp/>NVIDIA<sp/>driver<sp/>is<sp/>not<sp/>present<sp/>on<sp/>that<sp/>screen.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XNVCTRLSetAttribute<sp/>(</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>Display<sp/>*dpy,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>screen,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>display_mask,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>attribute,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="68"><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/><sp/>XNVCTRLQueryAttribute<sp/>-</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/><sp/>Returns<sp/>True<sp/>if<sp/>the<sp/>attribute<sp/>exists.<sp/><sp/>Returns<sp/>False<sp/>otherwise.</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>XNVCTRLQueryAttribute<sp/>returns<sp/>True,<sp/>value<sp/>will<sp/>contain<sp/>the</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/><sp/>value<sp/>of<sp/>the<sp/>specified<sp/>attribute.</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/><sp/>Not<sp/>all<sp/>attributes<sp/>require<sp/>the<sp/>display_mask<sp/>parameter;<sp/>see</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/><sp/>NVCtrl.h<sp/>for<sp/>details.</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/><sp/>Possible<sp/>errors:</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>BadValue<sp/>-<sp/>The<sp/>screen<sp/>doesn&apos;t<sp/>exist.</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>BadMatch<sp/>-<sp/>The<sp/>NVIDIA<sp/>driver<sp/>is<sp/>not<sp/>present<sp/>on<sp/>that<sp/>screen.</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">Bool<sp/>XNVCTRLQueryAttribute<sp/>(</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>Display<sp/>*dpy,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>screen,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>display_mask,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>attribute,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*value</highlight></codeline>
<codeline lineno="92"><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/><sp/>XNVCTRLQueryStringAttribute<sp/>-</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/><sp/>Returns<sp/>True<sp/>if<sp/>the<sp/>attribute<sp/>exists.<sp/><sp/>Returns<sp/>False<sp/>otherwise.</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>XNVCTRLQueryStringAttribute<sp/>returns<sp/>True,<sp/>*ptr<sp/>will<sp/>point<sp/>to<sp/>an</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/><sp/>allocated<sp/>string<sp/>containing<sp/>the<sp/>string<sp/>attribute<sp/>requested.<sp/><sp/>It<sp/>is</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>caller&apos;s<sp/>responsibility<sp/>to<sp/>free<sp/>the<sp/>string<sp/>when<sp/>done.</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/><sp/>Possible<sp/>errors:</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>BadValue<sp/>-<sp/>The<sp/>screen<sp/>doesn&apos;t<sp/>exist.</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>BadMatch<sp/>-<sp/>The<sp/>NVIDIA<sp/>driver<sp/>is<sp/>not<sp/>present<sp/>on<sp/>that<sp/>screen.</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>BadAlloc<sp/>-<sp/>Insufficient<sp/>resources<sp/>to<sp/>fulfill<sp/>the<sp/>request.</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">Bool<sp/>XNVCTRLQueryStringAttribute<sp/>(</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>Display<sp/>*dpy,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>screen,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>display_mask,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>attribute,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**ptr</highlight></codeline>
<codeline lineno="114"><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/>XNVCTRLQueryValidAttributeValues<sp/>-</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*<sp/>Returns<sp/>True<sp/>if<sp/>the<sp/>attribute<sp/>exists.<sp/><sp/>Returns<sp/>False<sp/>otherwise.<sp/><sp/>If</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*<sp/>XNVCTRLQueryValidAttributeValues<sp/>returns<sp/>True,<sp/>values<sp/>will<sp/>indicate</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*<sp/>the<sp/>valid<sp/>values<sp/>for<sp/>the<sp/>specified<sp/>attribute;<sp/>see<sp/>the<sp/>description</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/>of<sp/>NVCTRLAttributeValidValues<sp/>in<sp/>NVCtrl.h.</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">Bool<sp/>XNVCTRLQueryValidAttributeValues<sp/>(</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>Display<sp/>*dpy,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>screen,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>display_mask,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>attribute,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct___n_v_c_t_r_l_attribute_valid_values" kindref="compound">NVCTRLAttributeValidValuesRec</ref><sp/>*values</highlight></codeline>
<codeline lineno="131"><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/>XNVCtrlSelectNotify<sp/>-</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*<sp/>This<sp/>enables/disables<sp/>receiving<sp/>of<sp/>NV-CONTROL<sp/>events.<sp/><sp/>The<sp/>type</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/>specifies<sp/>the<sp/>type<sp/>of<sp/>event<sp/>to<sp/>enable<sp/>(currently,<sp/>the<sp/>only<sp/>type<sp/>is</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/>ATTRIBUTE_CHANGED_EVENT);<sp/>onoff<sp/>controls<sp/>whether<sp/>receiving<sp/>this</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*<sp/>type<sp/>of<sp/>event<sp/>should<sp/>be<sp/>enabled<sp/>(True)<sp/>or<sp/>disabled<sp/>(False).</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*<sp/>Returns<sp/>True<sp/>if<sp/>successful,<sp/>or<sp/>False<sp/>if<sp/>the<sp/>screen<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*<sp/>controlled<sp/>by<sp/>the<sp/>NVIDIA<sp/>driver.</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">Bool<sp/>XNVCtrlSelectNotify<sp/>(</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>Display<sp/>*dpy,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>screen,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>Bool<sp/>onoff</highlight></codeline>
<codeline lineno="150"><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*<sp/>XNVCtrlEvent<sp/>structure</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="struct_x_n_v_ctrl_attribute_changed_event" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>serial;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>Bool<sp/>send_event;<sp/><sp/></highlight><highlight class="comment">/*<sp/>always<sp/>FALSE,<sp/>we<sp/>don&apos;t<sp/>allow<sp/>send_events<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>Display<sp/>*display;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>Time<sp/>time;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>screen;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>display_mask;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>attribute;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}<sp/><ref refid="struct_x_n_v_ctrl_attribute_changed_event" kindref="compound">XNVCtrlAttributeChangedEvent</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="union_x_n_v_ctrl_event" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_x_n_v_ctrl_attribute_changed_event" kindref="compound">XNVCtrlAttributeChangedEvent</ref><sp/>attribute_changed;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>pad[24];</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}<sp/><ref refid="union_x_n_v_ctrl_event" kindref="compound">XNVCtrlEvent</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__NVCTRLLIB_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/libXNVCtrl/NVCtrlLib.h"/>
  </compounddef>
</doxygen>
