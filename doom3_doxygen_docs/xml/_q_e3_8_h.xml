<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_q_e3_8_h" kind="file">
    <compoundname>QE3.H</compoundname>
    <includes refid="_q_e_r_t_y_p_e_s_8_h" local="yes">qertypes.h</includes>
    <includes refid="cmdlib_8h" local="yes">cmdlib.h</includes>
    <includes refid="_p_a_r_s_e_8_h" local="yes">parse.h</includes>
    <includes local="no">commctrl.h</includes>
    <includes local="yes">afxres.h</includes>
    <includes refid="_radiant__resource_8h" local="yes">../../sys/win32/rc/Radiant_resource.h</includes>
    <includes refid="win__local_8h" local="yes">../../sys/win32/win_local.h</includes>
    <includes refid="_q_e_d_e_f_s_8_h" local="yes">qedefs.h</includes>
    <includes refid="_textures_8h" local="yes">textures.h</includes>
    <includes refid="_editor_brush_8h" local="yes">EditorBrush.h</includes>
    <includes refid="_editor_entity_8h" local="yes">EditorEntity.h</includes>
    <includes refid="_editor_map_8h" local="yes">EditorMap.h</includes>
    <includes refid="_s_e_l_e_c_t_8_h" local="yes">select.h</includes>
    <includes refid="splines_8h" local="yes">splines.h</includes>
    <includes refid="_z_8_h" local="yes">z.h</includes>
    <includes refid="_m_r_u_8_h" local="yes">mru.h</includes>
    <includes refid="_wait_dlg_8h" local="yes">waitdlg.h</includes>
    <includes refid="_main_frm_8h" local="yes">MainFrm.h</includes>
    <includes refid="_prefs_dlg_8h" local="yes">PrefsDlg.h</includes>
    <includes refid="_find_texture_dlg_8h" local="yes">FindTextureDlg.h</includes>
    <includes refid="_dialog_textures_8h" local="yes">dialogtextures.h</includes>
    <includes refid="_inspector_dialog_8h" local="yes">InspectorDialog.h</includes>
    <includes refid="_undo_8h" local="yes">undo.h</includes>
    <includes refid="_p_m_e_s_h_8_h" local="yes">PMESH.H</includes>
    <includedby refid="_material_preview_view_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/materialeditor/MaterialPreviewView.cpp</includedby>
    <includedby refid="_x_y_wnd_8h" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/XYWnd.h</includedby>
    <includedby refid="autocaulk_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/autocaulk.cpp</includedby>
    <includedby refid="_camera_target_dlg_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/CameraTargetDlg.cpp</includedby>
    <includedby refid="_cam_wnd_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/CamWnd.cpp</includedby>
    <includedby refid="_cap_dialog_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/CapDialog.cpp</includedby>
    <includedby refid="cmdlib_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/cmdlib.cpp</includedby>
    <includedby refid="_commands_dlg_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/CommandsDlg.cpp</includedby>
    <includedby refid="_comments_dlg_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/CommentsDlg.cpp</includedby>
    <includedby refid="_console_dlg_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/ConsoleDlg.cpp</includedby>
    <includedby refid="_c_s_g_8_c_p_p" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/CSG.CPP</includedby>
    <includedby refid="_curve_dlg_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/CurveDlg.cpp</includedby>
    <includedby refid="_dialog_info_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/DialogInfo.cpp</includedby>
    <includedby refid="_dialog_textures_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/DialogTextures.cpp</includedby>
    <includedby refid="_dialog_thick_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/DialogThick.cpp</includedby>
    <includedby refid="_dlg_camera_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/DlgCamera.cpp</includedby>
    <includedby refid="_dlg_event_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/DlgEvent.cpp</includedby>
    <includedby refid="_d_r_a_g_8_c_p_p" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/DRAG.CPP</includedby>
    <includedby refid="_e_c_l_a_s_s_8_c_p_p" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/ECLASS.CPP</includedby>
    <includedby refid="_editor_brush_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorBrush.cpp</includedby>
    <includedby refid="_editor_brush_primit_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorBrushPrimit.cpp</includedby>
    <includedby refid="_editor_entity_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorEntity.cpp</includedby>
    <includedby refid="_editor_map_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorMap.cpp</includedby>
    <includedby refid="_edit_view_dlg_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/EditViewDlg.cpp</includedby>
    <includedby refid="_entity_dlg_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/EntityDlg.cpp</includedby>
    <includedby refid="_entity_list_dlg_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/EntityListDlg.cpp</includedby>
    <includedby refid="_ent_key_find_replace_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/EntKeyFindReplace.cpp</includedby>
    <includedby refid="_find_texture_dlg_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/FindTextureDlg.cpp</includedby>
    <includedby refid="_get_string_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/GetString.cpp</includedby>
    <includedby refid="_g_l_widget_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/GLWidget.cpp</includedby>
    <includedby refid="_inspector_dialog_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/InspectorDialog.cpp</includedby>
    <includedby refid="_light_dlg_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/LightDlg.cpp</includedby>
    <includedby refid="_main_frm_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/MainFrm.cpp</includedby>
    <includedby refid="_map_info_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/MapInfo.cpp</includedby>
    <includedby refid="_media_preview_dlg_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/MediaPreviewDlg.cpp</includedby>
    <includedby refid="_new_proj_dlg_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/NewProjDlg.cpp</includedby>
    <includedby refid="_new_tex_wnd_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/NewTexWnd.cpp</includedby>
    <includedby refid="_p_a_r_s_e_8_c_p_p" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/PARSE.CPP</includedby>
    <includedby refid="_patch_density_dlg_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/PatchDensityDlg.cpp</includedby>
    <includedby refid="_patch_dialog_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/PatchDialog.cpp</includedby>
    <includedby refid="_p_m_e_s_h_8_c_p_p" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/PMESH.CPP</includedby>
    <includedby refid="_point_file_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/PointFile.cpp</includedby>
    <includedby refid="_prefs_dlg_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/PrefsDlg.cpp</includedby>
    <includedby refid="_preview_dlg_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/PreviewDlg.cpp</includedby>
    <includedby refid="_property_list_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/PropertyList.cpp</includedby>
    <includedby refid="_q_e3_8_c_p_p" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.CPP</includedby>
    <includedby refid="_radiant_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/Radiant.cpp</includedby>
    <includedby refid="_rotate_dlg_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/RotateDlg.cpp</includedby>
    <includedby refid="_scale_dialog_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/ScaleDialog.cpp</includedby>
    <includedby refid="_s_e_l_e_c_t_8_c_p_p" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP</includedby>
    <includedby refid="_surface_dlg_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp</includedby>
    <includedby refid="_tabs_dlg_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/TabsDlg.cpp</includedby>
    <includedby refid="_texture_bar_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/TextureBar.cpp</includedby>
    <includedby refid="_undo_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.cpp</includedby>
    <includedby refid="_v_e_r_t_s_e_l_8_c_p_p" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/VERTSEL.CPP</includedby>
    <includedby refid="_wait_dlg_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/WaitDlg.cpp</includedby>
    <includedby refid="_wave_open_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/WaveOpen.cpp</includedby>
    <includedby refid="_w_i_n___d_l_g_8_c_p_p" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/WIN_DLG.CPP</includedby>
    <includedby refid="_w_i_n___q_e3_8_c_p_p" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/WIN_QE3.CPP</includedby>
    <includedby refid="_x_y_wnd_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/XYWnd.cpp</includedby>
    <includedby refid="_z_8_c_p_p" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/Z.CPP</includedby>
    <includedby refid="_z_clip_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/ZClip.cpp</includedby>
    <includedby refid="_z_wnd_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/ZWnd.cpp</includedby>
    <incdepgraph>
      <node id="3333">
        <label>afxres.h</label>
      </node>
      <node id="3331">
        <label>E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H</label>
        <link refid="QE3.H"/>
        <childnode refid="3332" relation="include">
        </childnode>
        <childnode refid="3333" relation="include">
        </childnode>
      </node>
      <node id="3332">
        <label>commctrl.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structpedge__t" prot="public">pedge_t</innerclass>
    <innerclass refid="struct_saved_info__t" prot="public">SavedInfo_t</innerclass>
    <innerclass refid="struct_q_e_globals__t" prot="public">QEGlobals_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_q_e3_8_h_1afcf8873204dd6878c84e8196805c2b9a" prot="public" static="no">
        <name>QERTYPES_USE_MFC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="39" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_q_e3_8_h_1aeb7b14cb90cb91e03d6b3cd7f80be48e" prot="public" static="no">
        <name>MAX_MAP_ENTITIES</name>
        <initializer>2048</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="52" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_q_e3_8_h_1a84d189ba61acd00e804d52f34e9d7987" prot="public" static="no">
        <name>myoffsetof</name>
        <param><defname>type</defname></param>
        <param><defname>identifier</defname></param>
        <initializer>((size_t)&amp;((type *)0)-&gt;identifier)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="78" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_q_e3_8_h_1a86e1479a0635c3ca8588112a94186def" prot="public" static="no">
        <name>BPMatCopy</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>{b[0][0] = a[0][0]; b[0][1] = a[0][1]; b[0][2] = a[0][2]; b[1][0] = a[1][0]; b[1][1] = a[1][1]; b[1][2] = a[1][2];}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="371" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_q_e3_8_h_1a1a5f81c469ba098a1ad16cf8eb9bb0bc" prot="public" static="no">
        <name>BPMatScale</name>
        <param><defname>m</defname></param>
        <param><defname>sS</defname></param>
        <param><defname>sT</defname></param>
        <initializer>{m[0][0]*=sS; m[1][0]*=sS; m[0][1]*=sT; m[1][1]*=sT;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="373" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_q_e3_8_h_1aa355f327aadbc61abb458c494156faf7" prot="public" static="no">
        <name>BPMatTranslate</name>
        <param><defname>m</defname></param>
        <param><defname>s</defname></param>
        <param><defname>t</defname></param>
        <initializer>{m[0][2] += m[0][0]*s + m[0][1]*t; m[1][2] += m[1][0]*s+m[1][1]*t;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="375" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_q_e3_8_h_1a33f4fac49f2a5e27e2857eb27f054510" prot="public" static="no">
        <name>FONT_HEIGHT</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="398" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" bodystart="398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_q_e3_8_h_1a208c3d7fdbb5b67d0dd8ba323f94f4a8" prot="public" static="no">
        <name>MAP_VERSION</name>
        <initializer>2.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="402" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_q_e3_8_h_1a13f71b59076332402957df7a02424fef" prot="public" static="no">
        <name>QR_SPLIT</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="411" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_q_e3_8_h_1a9f503d0da0ed724808e06e3780035ce0" prot="public" static="no">
        <name>QR_QE4</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="412" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" bodystart="412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_q_e3_8_h_1a78b315ac1ff6bcf25657ec18b5ecacef" prot="public" static="no">
        <name>QR_4WAY</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="413" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_q_e3_8_h_1abd4b87d0d89cf80004821aebb8a19bef" prot="public" static="no">
        <name>QR_SPLITZ</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="414" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" bodystart="414" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_q_e3_8_h_1a854ad783db7564a81d52863b8aa29fa4" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int MAX_MOVE_POINTS</definition>
        <argsstring></argsstring>
        <name>MAX_MOVE_POINTS</name>
        <initializer>= 4096</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="53" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1a2d04ff65e3dbe4db679fa0d7d173d03c" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int MAX_MOVE_PLANES</definition>
        <argsstring></argsstring>
        <name>MAX_MOVE_PLANES</name>
        <initializer>= 2048</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="54" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1afb82396d76007a8db460ac591aa0374d" prot="public" static="no" mutable="no">
        <type>const float</type>
        <definition>const float HUGE_DISTANCE</definition>
        <argsstring></argsstring>
        <name>HUGE_DISTANCE</name>
        <initializer>= 100000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="57" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1ad1cbcd0e862086a8ec79876923077ded" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool g_moveOnly</definition>
        <argsstring></argsstring>
        <name>g_moveOnly</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="227" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/DRAG.CPP" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1a9ff65e0518cfb52f7d525ca14ab7ff6c" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int update_bits</definition>
        <argsstring></argsstring>
        <name>update_bits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="245" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/WIN_QE3.CPP" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1aa4d434a8b93410ea0ed660e48dac41c6" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int screen_width</definition>
        <argsstring></argsstring>
        <name>screen_width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="247" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/WIN_QE3.CPP" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1a3b4a1bd850991355b91c7bfc15247d49" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int screen_height</definition>
        <argsstring></argsstring>
        <name>screen_height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="248" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/WIN_QE3.CPP" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1a23584057983e755c5c8eaef381d15ab3" prot="public" static="no" mutable="no">
        <type>HANDLE</type>
        <definition>HANDLE bsp_process</definition>
        <argsstring></argsstring>
        <name>bsp_process</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="250" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1ac9efbc1e89b7138facf27f1ce1912cc3" prot="public" static="no" mutable="no">
        <type>HANDLE</type>
        <definition>HANDLE g_hBSPOutput</definition>
        <argsstring></argsstring>
        <name>g_hBSPOutput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="251" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1ae8393524eb1d50869e602571d10ba3de" prot="public" static="no" mutable="no">
        <type>HANDLE</type>
        <definition>HANDLE g_hBSPInput</definition>
        <argsstring></argsstring>
        <name>g_hBSPInput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="252" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1a8a476dea9534f7834c811e3e07ef8f10" prot="public" static="no" mutable="no">
        <type><ref refid="struct_q_e_globals__t" kindref="compound">QEGlobals_t</ref></type>
        <definition>QEGlobals_t g_qeglobals</definition>
        <argsstring></argsstring>
        <name>g_qeglobals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="336" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.CPP" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1a08a6f4fe5142335df7ae459dc6771d83" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int mapModified</definition>
        <argsstring></argsstring>
        <name>mapModified</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="337" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorMap.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1ad7dac605b7e566b3ad72154302427f95" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool g_bAxialMode</definition>
        <argsstring></argsstring>
        <name>g_bAxialMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="343" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/CamWnd.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1ac27b865e42fbfdd7bccb418eb5533fda" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int g_axialAnchor</definition>
        <argsstring></argsstring>
        <name>g_axialAnchor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="344" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/CamWnd.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1a4f59dd9f4f2490b5005262b0c62c800d" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int g_axialDest</definition>
        <argsstring></argsstring>
        <name>g_axialDest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="345" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/CamWnd.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1a32f0c1d2b1195a1f39bd88a7657d5f27" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool parsing_single</definition>
        <argsstring></argsstring>
        <name>parsing_single</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="388" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1ac9614447d7a314e373925337a7cceac5" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool eclass_found</definition>
        <argsstring></argsstring>
        <name>eclass_found</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="389" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1ac6ac0de2f77d078abdfb58d28cac843d" prot="public" static="no" mutable="no">
        <type><ref refid="structeclass__s" kindref="compound">eclass_t</ref> *</type>
        <definition>eclass_t* eclass_e</definition>
        <argsstring></argsstring>
        <name>eclass_e</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="390" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1a7b291121333bb0490828c4b318708838" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool g_bShowLightVolumes</definition>
        <argsstring></argsstring>
        <name>g_bShowLightVolumes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="394" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorBrush.cpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1a1cdcf88b97618953170685f7681f7cf2" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool g_bShowLightTextures</definition>
        <argsstring></argsstring>
        <name>g_bShowLightTextures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="395" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorBrush.cpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1a89a3f04e641819ca1506fb3ff8e3bb26" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_main_frame" kindref="compound">CMainFrame</ref> *</type>
        <definition>CMainFrame* g_pParentWnd</definition>
        <argsstring></argsstring>
        <name>g_pParentWnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="404" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/MainFrm.cpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1a91cdcca0e65a6ab8e51fb28fa7f43085" prot="public" static="no" mutable="no">
        <type>CString</type>
        <definition>CString g_strAppPath</definition>
        <argsstring></argsstring>
        <name>g_strAppPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="405" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/MainFrm.cpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1ac5b7613a922aec1f205dae3345c072f2" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_prefs_dlg" kindref="compound">CPrefsDlg</ref> &amp;</type>
        <definition>CPrefsDlg&amp; g_PrefsDlg</definition>
        <argsstring></argsstring>
        <name>g_PrefsDlg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="406" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/MainFrm.cpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1a41ad58bf1fbb8cef933db6484c5cc97a" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_find_texture_dlg" kindref="compound">CFindTextureDlg</ref> &amp;</type>
        <definition>CFindTextureDlg&amp; g_dlgFind</definition>
        <argsstring></argsstring>
        <name>g_dlgFind</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="407" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/FindTextureDlg.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1ac223be8336f876340e60e65d9ad2e0a6" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar radiant_entityMode</definition>
        <argsstring></argsstring>
        <name>radiant_entityMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="408" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1acea988f59db8e507e0486677c40ea952" prot="public" static="no" mutable="no">
        <type><ref refid="structqtexture__s" kindref="compound">qtexture_t</ref> *</type>
        <definition>qtexture_t* notexture</definition>
        <argsstring></argsstring>
        <name>notexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="423" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1a2d1d139534b8fd6f8b4f765989e17e2d" prot="public" static="no" mutable="no">
        <type><ref refid="structqtexture__s" kindref="compound">qtexture_t</ref> *</type>
        <definition>qtexture_t* current_texture</definition>
        <argsstring></argsstring>
        <name>current_texture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="424" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1a621b30e67c0a015baf20476e148b18f1" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int inspector_mode</definition>
        <argsstring></argsstring>
        <name>inspector_mode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="429" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" bodystart="458" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1a745fd08aeb39ac6f33a9cb832d376a0a" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool g_bRotateMode</definition>
        <argsstring></argsstring>
        <name>g_bRotateMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="430" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/XYWnd.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1aaa6544dfe5bc056c9e8fe0ad468ff09f" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool g_bClipMode</definition>
        <argsstring></argsstring>
        <name>g_bClipMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="431" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/XYWnd.cpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1a213277283967a3b2661e7fd17144edb1" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool g_bScaleMode</definition>
        <argsstring></argsstring>
        <name>g_bScaleMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="432" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/XYWnd.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1a78fe0d6f5e799302e46f6a6e28fabbfc" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int g_nScaleHow</definition>
        <argsstring></argsstring>
        <name>g_nScaleHow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="433" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/XYWnd.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1adb015b7c5221580ed021c960ef097207" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool g_bPathMode</definition>
        <argsstring></argsstring>
        <name>g_bPathMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="434" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/XYWnd.cpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1aef42cc1640098da03964a78b4315649f" prot="public" static="no" mutable="no">
        <type>HINSTANCE</type>
        <definition>HINSTANCE g_hOpenGL32</definition>
        <argsstring></argsstring>
        <name>g_hOpenGL32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="436" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/Radiant.cpp" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1aab0df9eff1a41cdb6312767444a9a7c5" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool region_active</definition>
        <argsstring></argsstring>
        <name>region_active</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="440" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorMap.cpp" bodystart="835" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1ab68ed07d5778bd6a1d1adaafdbabd28e" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool g_bNewFace</definition>
        <argsstring></argsstring>
        <name>g_bNewFace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="444" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1ab05eb65ab90f3caa46a765d04320ea03" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool g_bSwitch</definition>
        <argsstring></argsstring>
        <name>g_bSwitch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="445" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/XYWnd.cpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1ad02e4d34ffd34a93285500e610b4bee5" prot="public" static="no" mutable="no">
        <type><ref refid="structbrush__s" kindref="compound">brush_t</ref></type>
        <definition>brush_t g_brFrontSplits</definition>
        <argsstring></argsstring>
        <name>g_brFrontSplits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="446" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/XYWnd.cpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1a3d6d43e25f279df82e2e41560f2f61b6" prot="public" static="no" mutable="no">
        <type><ref refid="structbrush__s" kindref="compound">brush_t</ref></type>
        <definition>brush_t g_brBackSplits</definition>
        <argsstring></argsstring>
        <name>g_brBackSplits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="447" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/XYWnd.cpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1a31bc12f646589672041c25b6f2b412d5" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_clip_point" kindref="compound">CClipPoint</ref></type>
        <definition>CClipPoint g_Clip1</definition>
        <argsstring></argsstring>
        <name>g_Clip1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="448" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/XYWnd.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1a92c896d0dcca13d00f2f973291521482" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_clip_point" kindref="compound">CClipPoint</ref></type>
        <definition>CClipPoint g_Clip2</definition>
        <argsstring></argsstring>
        <name>g_Clip2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="449" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/XYWnd.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1ab13d7a247a76a83bce11c66d017966eb" prot="public" static="no" mutable="no">
        <type><ref refid="structbrush__s" kindref="compound">brush_t</ref> *</type>
        <definition>brush_t* g_pSplitList</definition>
        <argsstring></argsstring>
        <name>g_pSplitList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="450" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/CamWnd.cpp" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1aeaf2afc56003266f68185ce39e297088" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_clip_point" kindref="compound">CClipPoint</ref></type>
        <definition>CClipPoint g_PathPoints[256]</definition>
        <argsstring>[256]</argsstring>
        <name>g_PathPoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="451" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/XYWnd.cpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1a95036a443d6a205af0ceca41f17a1409" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool g_bScreenUpdates</definition>
        <argsstring></argsstring>
        <name>g_bScreenUpdates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="453" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/MainFrm.cpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1ad37584d2cfcda78e865ba4ecd394311f" prot="public" static="no" mutable="no">
        <type><ref refid="struct_s_command_info" kindref="compound">SCommandInfo</ref></type>
        <definition>SCommandInfo g_Commands[]</definition>
        <argsstring>[]</argsstring>
        <name>g_Commands</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="454" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/MainFrm.cpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1a0d2037cf0be661ec43a65d2d08f50a0c" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int g_nCommandCount</definition>
        <argsstring></argsstring>
        <name>g_nCommandCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="455" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/MainFrm.cpp" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1a791af6ef693fb522bd28d82928bf79e0" prot="public" static="no" mutable="no">
        <type><ref refid="struct_s_key_info" kindref="compound">SKeyInfo</ref></type>
        <definition>SKeyInfo g_Keys[]</definition>
        <argsstring>[]</argsstring>
        <name>g_Keys</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="456" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/MainFrm.cpp" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1a7511e3d96937da7ee217cc7438b8784d" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int g_nKeyCount</definition>
        <argsstring></argsstring>
        <name>g_nKeyCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="457" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/MainFrm.cpp" bodystart="338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1a37ef6560eb57a1a953f755c0ffe97f50" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* bsp_commands[256]</definition>
        <argsstring>[256]</argsstring>
        <name>bsp_commands</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="459" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/WIN_QE3.CPP" bodystart="468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1ac4d5f7f7d55254a6e9805535db1dfcf3" prot="public" static="no" mutable="no">
        <type><ref refid="structz__t" kindref="compound">z_t</ref></type>
        <definition>z_t z</definition>
        <argsstring></argsstring>
        <name>z</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="461" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/Z.CPP" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1aa9a41a2b316b8beace229eeca4c20a5d" prot="public" static="no" mutable="no">
        <type>CString</type>
        <definition>CString g_strProject</definition>
        <argsstring></argsstring>
        <name>g_strProject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="462" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/MainFrm.cpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1ad835afe718c04d8b211b6fb339a2a4ef" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int g_nSmartX</definition>
        <argsstring></argsstring>
        <name>g_nSmartX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="473" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/XYWnd.cpp" bodystart="1804" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_q_e3_8_h_1aab5980613743e128fb1f0b7a6b69f34f" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int g_nSmartY</definition>
        <argsstring></argsstring>
        <name>g_nSmartY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="474" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/XYWnd.cpp" bodystart="1805" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_q_e3_8_h_1af64390a020b9356ee4264bd222985281" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Error</definition>
        <argsstring>(char *error,...)</argsstring>
        <name>Error</name>
        <param>
          <type>char *</type>
          <declname>error</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="81" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/WIN_QE3.CPP" bodystart="246" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a7e1a866d2145d14ce6af135af6b0b6ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Warning</definition>
        <argsstring>(char *error,...)</argsstring>
        <name>Warning</name>
        <param>
          <type>char *</type>
          <declname>error</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="82" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/WIN_QE3.CPP" bodystart="281" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1ae307be4784ebf8198fe4600453d9a8e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Sys_UpdateStatusBar</definition>
        <argsstring>(void)</argsstring>
        <name>Sys_UpdateStatusBar</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="111" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/Radiant.cpp" bodystart="455" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1acd74a2d2d9ccf5252cda4de48322c4b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void WINAPI</type>
        <definition>void WINAPI Sys_UpdateWindows</definition>
        <argsstring>(int bits)</argsstring>
        <name>Sys_UpdateWindows</name>
        <param>
          <type>int</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="112" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/MainFrm.cpp" bodystart="3974" bodyend="3981"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a52f9bf491e30f790184b88ccda6522fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Sys_Beep</definition>
        <argsstring>(void)</argsstring>
        <name>Sys_Beep</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="113" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/WIN_QE3.CPP" bodystart="113" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1af67828ff4c73bd9e2924bd75276e9e12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Sys_DoubleTime</definition>
        <argsstring>(void)</argsstring>
        <name>Sys_DoubleTime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="114" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/WIN_QE3.CPP" bodystart="147" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a6285536f9ba44372a608021dfb30deab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Sys_GetCursorPos</definition>
        <argsstring>(int *x, int *y)</argsstring>
        <name>Sys_GetCursorPos</name>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="115" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/WIN_QE3.CPP" bodystart="93" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a710d30cf5bb9d2e1d47a34de6d5f710e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Sys_SetCursorPos</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>Sys_SetCursorPos</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="116" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/WIN_QE3.CPP" bodystart="105" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a79c1d716ef995153a8d3ecb40428643f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Sys_SetTitle</definition>
        <argsstring>(const char *text)</argsstring>
        <name>Sys_SetTitle</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="117" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/WIN_QE3.CPP" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a72a8823d5e2b62cadeabaefb8fc7cf95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Sys_BeginWait</definition>
        <argsstring>(void)</argsstring>
        <name>Sys_BeginWait</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="118" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/WIN_QE3.CPP" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a8da0b2f7e2cc15d9b447cd36744ce693" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Sys_Waiting</definition>
        <argsstring>()</argsstring>
        <name>Sys_Waiting</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="119" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/WIN_QE3.CPP" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a8166066c39f67d72db1423a7e9916a16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Sys_EndWait</definition>
        <argsstring>(void)</argsstring>
        <name>Sys_EndWait</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="120" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/WIN_QE3.CPP" bodystart="82" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1acc9a932528ce64772784b8ea60e0638e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Sys_Status</definition>
        <argsstring>(const char *psz, int part=-1)</argsstring>
        <name>Sys_Status</name>
        <param>
          <type>const char *</type>
          <declname>psz</declname>
        </param>
        <param>
          <type>int</type>
          <declname>part</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="121" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/Radiant.cpp" bodystart="465" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a7e6d941c798e13030eaadea776b6f3b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Pointfile_Delete</definition>
        <argsstring>(void)</argsstring>
        <name>Pointfile_Delete</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="211" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/PointFile.cpp" bodystart="38" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a599638e69cdb6281765558fe3f639753" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void WINAPI</type>
        <definition>void WINAPI Pointfile_Check</definition>
        <argsstring>(void)</argsstring>
        <name>Pointfile_Check</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="212" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/PointFile.cpp" bodystart="91" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1add909401abe7b071def38fefccf77c42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Pointfile_Next</definition>
        <argsstring>(void)</argsstring>
        <name>Pointfile_Next</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="213" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/PointFile.cpp" bodystart="50" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a82698eeed4ab8152eea9488ae2f1cad6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Pointfile_Prev</definition>
        <argsstring>(void)</argsstring>
        <name>Pointfile_Prev</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="214" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/PointFile.cpp" bodystart="71" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a5fae5106acdddda58a7152cf48973a74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Pointfile_Clear</definition>
        <argsstring>(void)</argsstring>
        <name>Pointfile_Clear</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="215" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/PointFile.cpp" bodystart="154" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1afbebfc624b1f812dfdd80cde5927940b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Pointfile_Draw</definition>
        <argsstring>(void)</argsstring>
        <name>Pointfile_Draw</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="216" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/PointFile.cpp" bodystart="137" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a479bb84cd004f24901c486fdfce3baa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Pointfile_Load</definition>
        <argsstring>(void)</argsstring>
        <name>Pointfile_Load</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="217" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a71b15fcae29d68d6e85790b98f0b41d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Drag_Begin</definition>
        <argsstring>(int x, int y, int buttons, const idVec3 &amp;xaxis, const idVec3 &amp;yaxis, const idVec3 &amp;origin, const idVec3 &amp;dir)</argsstring>
        <name>Drag_Begin</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>buttons</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>xaxis</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>yaxis</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="222" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/DRAG.CPP" bodystart="289" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1ac55166b285133a93c1e420fae28a08e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Drag_MouseMoved</definition>
        <argsstring>(int x, int y, int buttons)</argsstring>
        <name>Drag_MouseMoved</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>buttons</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="225" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/DRAG.CPP" bodystart="687" bodyend="731"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a588a137ca9c66b3d863056f3af3adba0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Drag_MouseUp</definition>
        <argsstring>(int nButtons=0)</argsstring>
        <name>Drag_MouseUp</name>
        <param>
          <type>int</type>
          <declname>nButtons</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="226" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/DRAG.CPP" bodystart="738" bodyend="763"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a3b76cd81615cf2b219d968056904e618" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSG_MakeHollow</definition>
        <argsstring>(void)</argsstring>
        <name>CSG_MakeHollow</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="231" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/CSG.CPP" bodystart="41" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1af8eda8d3c25b1a0eee7aae9f73b9ed35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSG_Subtract</definition>
        <argsstring>(void)</argsstring>
        <name>CSG_Subtract</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="232" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/CSG.CPP" bodystart="471" bodyend="590"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1adf439f68bf7cac46db7c92dbc003211c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSG_Merge</definition>
        <argsstring>(void)</argsstring>
        <name>CSG_Merge</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="233" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/CSG.CPP" bodystart="597" bodyend="687"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a899d26c2bd4c18756cf112501ac7dd40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetupVertexSelection</definition>
        <argsstring>(void)</argsstring>
        <name>SetupVertexSelection</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="239" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/VERTSEL.CPP" bodystart="119" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a8b32cf1564078fa251d6c2f7f349286a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SelectEdgeByRay</definition>
        <argsstring>(idVec3 org, idVec3 dir)</argsstring>
        <name>SelectEdgeByRay</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>org</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="240" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/VERTSEL.CPP" bodystart="263" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1afd652fed53ee96fbe269fd8b43d2adb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SelectVertexByRay</definition>
        <argsstring>(idVec3 org, idVec3 dir)</argsstring>
        <name>SelectVertexByRay</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>org</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="241" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/VERTSEL.CPP" bodystart="318" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a392dbdf94eb0d226c3f947e8e379c8e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ConnectEntities</definition>
        <argsstring>(void)</argsstring>
        <name>ConnectEntities</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="243" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.CPP" bodystart="292" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1ae0c4b4dc1dd8b7f5d567692f686b2961" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* TranslateString</definition>
        <argsstring>(char *buf)</argsstring>
        <name>TranslateString</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="255" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/WIN_QE3.CPP" bodystart="121" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a32320677a50ac0e4bd4f6a84e3dab9fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ProjectDialog</definition>
        <argsstring>(void)</argsstring>
        <name>ProjectDialog</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="257" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/WIN_QE3.CPP" bodystart="379" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a24aff30e08cf9d7cda661b01b932753a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FillTextureMenu</definition>
        <argsstring>(CStringArray *pArray=NULL)</argsstring>
        <name>FillTextureMenu</name>
        <param>
          <type>CStringArray *</type>
          <declname>pArray</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="259" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a13fb6f8ec2556734ca25f3f702380979" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FillBSPMenu</definition>
        <argsstring>(void)</argsstring>
        <name>FillBSPMenu</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="260" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/WIN_QE3.CPP" bodystart="474" bodyend="496"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a1b80aa771f049b8eeb7316505aab431b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL CALLBACK</type>
        <definition>BOOL CALLBACK Win_Dialog</definition>
        <argsstring>(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam)</argsstring>
        <name>Win_Dialog</name>
        <param>
          <type>HWND</type>
          <declname>hwndDlg</declname>
        </param>
        <param>
          <type>UINT</type>
          <declname>uMsg</declname>
        </param>
        <param>
          <type>WPARAM</type>
          <declname>wParam</declname>
        </param>
        <param>
          <type><ref refid="class_c_prop_tree_item" kindref="compound">LPARAM</ref></type>
          <declname>lParam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="262" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1af827474ce6a30c68a07cf794bf2ec3eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WCam_Create</definition>
        <argsstring>(HINSTANCE hInstance)</argsstring>
        <name>WCam_Create</name>
        <param>
          <type>HINSTANCE</type>
          <declname>hInstance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="273" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1ad2a4a76049a515e998ae19c8ba429af4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WXY_Create</definition>
        <argsstring>(HINSTANCE hInstance)</argsstring>
        <name>WXY_Create</name>
        <param>
          <type>HINSTANCE</type>
          <declname>hInstance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="279" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a1091b7ca296c9a086a010e53b31b07c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WZ_Create</definition>
        <argsstring>(HINSTANCE hInstance)</argsstring>
        <name>WZ_Create</name>
        <param>
          <type>HINSTANCE</type>
          <declname>hInstance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="284" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1af62427fb5adda1629f23c1f9fa84e2cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Main_Create</definition>
        <argsstring>(HINSTANCE hInstance)</argsstring>
        <name>Main_Create</name>
        <param>
          <type>HINSTANCE</type>
          <declname>hInstance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="294" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a3febd28a0d771c1b30c8b36a9c44da61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SaveWindowState</definition>
        <argsstring>(HWND hWnd, const char *pszName)</argsstring>
        <name>SaveWindowState</name>
        <param>
          <type>HWND</type>
          <declname>hWnd</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pszName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="295" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/Radiant.cpp" bodystart="410" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a95f7f16530e1233af6607cc9e942cd0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoadWindowState</definition>
        <argsstring>(HWND hWnd, const char *pszName)</argsstring>
        <name>LoadWindowState</name>
        <param>
          <type>HWND</type>
          <declname>hWnd</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pszName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="296" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/Radiant.cpp" bodystart="424" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1aaefcda257a78b7af59f63c0fa14323a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SaveRegistryInfo</definition>
        <argsstring>(const char *pszName, void *pvBuf, long lSize)</argsstring>
        <name>SaveRegistryInfo</name>
        <param>
          <type>const char *</type>
          <declname>pszName</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pvBuf</declname>
        </param>
        <param>
          <type>long</type>
          <declname>lSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="298" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/Radiant.cpp" bodystart="398" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a5e811f895cc4b9aba89204e78aeb4639" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoadRegistryInfo</definition>
        <argsstring>(const char *pszName, void *pvBuf, long *plSize)</argsstring>
        <name>LoadRegistryInfo</name>
        <param>
          <type>const char *</type>
          <declname>pszName</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pvBuf</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>plSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="299" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/Radiant.cpp" bodystart="405" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1ab33afbe8e32567adf43f108748888e44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DoGamma</definition>
        <argsstring>(void)</argsstring>
        <name>DoGamma</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="305" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/WIN_DLG.CPP" bodystart="293" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a43444fa1aa3e50796dea42ea34d08bea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DoFind</definition>
        <argsstring>(void)</argsstring>
        <name>DoFind</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="306" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/WIN_DLG.CPP" bodystart="439" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1ad6ec83df76bad98d5d18e49a5850fc5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DoRotate</definition>
        <argsstring>(void)</argsstring>
        <name>DoRotate</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="307" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/WIN_DLG.CPP" bodystart="505" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a3c100f12d2ee0a87b4057027ca96e467" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DoSides</definition>
        <argsstring>(bool bCone=false, bool bSphere=false, bool bTorus=false)</argsstring>
        <name>DoSides</name>
        <param>
          <type>bool</type>
          <declname>bCone</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>bSphere</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>bTorus</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="308" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/WIN_DLG.CPP" bodystart="562" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1adf4a6c06794d76b1f616f2fd037c8000" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DoAbout</definition>
        <argsstring>(void)</argsstring>
        <name>DoAbout</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="309" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/WIN_DLG.CPP" bodystart="630" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a38906bf3c30045a995a1c2a14f41f599" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DoSurface</definition>
        <argsstring>()</argsstring>
        <name>DoSurface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="310" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" bodystart="282" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a39ad892fa192815190ce1dc75683bb1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QE_CheckAutoSave</definition>
        <argsstring>(void)</argsstring>
        <name>QE_CheckAutoSave</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="315" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.CPP" bodystart="157" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1aaaef401f46362a9e14cf452a7eeb468c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QE_CountBrushesAndUpdateStatusBar</definition>
        <argsstring>(void)</argsstring>
        <name>QE_CountBrushesAndUpdateStatusBar</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="316" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.CPP" bodystart="404" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1af59c54a05a62f31e846006f78e3fbb2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void WINAPI</type>
        <definition>void WINAPI QE_CheckOpenGLForErrors</definition>
        <argsstring>(void)</argsstring>
        <name>QE_CheckOpenGLForErrors</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="317" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.CPP" bodystart="43" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1ae2a071007b477d671379ec1ea17643d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QE_ExpandBspString</definition>
        <argsstring>(char *bspaction, char *out, char *mapname, bool useTemps)</argsstring>
        <name>QE_ExpandBspString</name>
        <param>
          <type>char *</type>
          <declname>bspaction</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>mapname</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>useTemps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="318" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a350f68a25bd32ae25b284b38184ba500" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QE_Init</definition>
        <argsstring>(void)</argsstring>
        <name>QE_Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="319" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.CPP" bodystart="385" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1ab186acfb49ea6e2505bc2aa5830bae4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QE_KeyDown</definition>
        <argsstring>(int key, int nFlags=0)</argsstring>
        <name>QE_KeyDown</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nFlags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="320" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1addf383f4c7076379ab46122913ed3b96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QE_LoadProject</definition>
        <argsstring>(char *projectfile)</argsstring>
        <name>QE_LoadProject</name>
        <param>
          <type>char *</type>
          <declname>projectfile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="321" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.CPP" bodystart="215" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a2536538f93ba89506084113181b6f9a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QE_SingleBrush</definition>
        <argsstring>(bool bQuiet=false, bool entityOK=false)</argsstring>
        <name>QE_SingleBrush</name>
        <param>
          <type>bool</type>
          <declname>bQuiet</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>entityOK</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="322" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.CPP" bodystart="361" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a55637d574d99143fb1e85c6c6862e8e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Sys_MarkMapModified</definition>
        <argsstring>(void)</argsstring>
        <name>Sys_MarkMapModified</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="326" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/WIN_QE3.CPP" bodystart="47" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a3e051d4473a9e8fbd8fbfe8c8cadaf86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int WINAPI</type>
        <definition>int WINAPI QEW_SetupPixelFormat</definition>
        <argsstring>(HDC hDC, bool zbuffer)</argsstring>
        <name>QEW_SetupPixelFormat</name>
        <param>
          <type>HDC</type>
          <declname>hDC</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>zbuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="331" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/WIN_QE3.CPP" bodystart="175" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a897f92c7dd449263041a3a50e54f81ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Face_FlipTexture_BrushPrimit</definition>
        <argsstring>(face_t *face, bool y)</argsstring>
        <name>Face_FlipTexture_BrushPrimit</name>
        <param>
          <type><ref refid="structface__s" kindref="compound">face_t</ref> *</type>
          <declname>face</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="347" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorBrushPrimit.cpp" bodystart="1101" bodyend="1136"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a0965578f71fddcb3667d3259bc17594e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Brush_FlipTexture_BrushPrimit</definition>
        <argsstring>(brush_t *b, bool y)</argsstring>
        <name>Brush_FlipTexture_BrushPrimit</name>
        <param>
          <type><ref refid="structbrush__s" kindref="compound">brush_t</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="348" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorBrushPrimit.cpp" bodystart="1138" bodyend="1142"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a83515b7511629080fdb433b2ee7205b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FaceToBrushPrimitFace</definition>
        <argsstring>(face_t *f)</argsstring>
        <name>FaceToBrushPrimitFace</name>
        <param>
          <type><ref refid="structface__s" kindref="compound">face_t</ref> *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="353" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorBrushPrimit.cpp" bodystart="98" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1ae127e9f3f14ddc8a57c4da28b66082ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EmitBrushPrimitTextureCoordinates</definition>
        <argsstring>(face_t *, idWinding *, patchMesh_t *patch=NULL)</argsstring>
        <name>EmitBrushPrimitTextureCoordinates</name>
        <param>
          <type><ref refid="structface__s" kindref="compound">face_t</ref> *</type>
        </param>
        <param>
          <type><ref refid="classid_winding" kindref="compound">idWinding</ref> *</type>
        </param>
        <param>
          <type><ref refid="structpatch_mesh__t" kindref="compound">patchMesh_t</ref> *</type>
          <declname>patch</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="354" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorBrushPrimit.cpp" bodystart="160" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a15f4bcc74df0275b09934abf877030a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EmitTextureCoordinates</definition>
        <argsstring>(idVec5 &amp;xyzst, const idMaterial *q, face_t *f, bool force=false)</argsstring>
        <name>EmitTextureCoordinates</name>
        <param>
          <type><ref refid="classid_vec5" kindref="compound">idVec5</ref> &amp;</type>
          <declname>xyzst</declname>
        </param>
        <param>
          <type>const <ref refid="classid_material" kindref="compound">idMaterial</ref> *</type>
          <declname>q</declname>
        </param>
        <param>
          <type><ref refid="structface__s" kindref="compound">face_t</ref> *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>force</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="356" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorBrush.cpp" bodystart="556" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a79d7b43e05684863bd7636fcadc49f69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BrushPrimit_Parse</definition>
        <argsstring>(brush_t *, bool newFormat, const idVec3 origin)</argsstring>
        <name>BrushPrimit_Parse</name>
        <param>
          <type><ref refid="structbrush__s" kindref="compound">brush_t</ref> *</type>
        </param>
        <param>
          <type>bool</type>
          <declname>newFormat</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>origin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="357" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorBrushPrimit.cpp" bodystart="212" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a243a1c5158e157d1fea1e09df08d8187" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TexMatToFakeTexCoords</definition>
        <argsstring>(float texMat[2][3], float shift[2], float *rot, float scale[2])</argsstring>
        <name>TexMatToFakeTexCoords</name>
        <param>
          <type>float</type>
          <declname>texMat</declname>
          <array>[2][3]</array>
        </param>
        <param>
          <type>float</type>
          <declname>shift</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>float *</type>
          <declname>rot</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale</declname>
          <array>[2]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="359" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorBrushPrimit.cpp" bodystart="369" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a1beadc2acc488f2e614238d2f8b74ee9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FakeTexCoordsToTexMat</definition>
        <argsstring>(float shift[2], float rot, float scale[2], float texMat[2][3])</argsstring>
        <name>FakeTexCoordsToTexMat</name>
        <param>
          <type>float</type>
          <declname>shift</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>float</type>
          <declname>rot</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>float</type>
          <declname>texMat</declname>
          <array>[2][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="360" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorBrushPrimit.cpp" bodystart="416" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1aab55a502ef69dbbe2b9e3899e5674267" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ConvertTexMatWithQTexture</definition>
        <argsstring>(brushprimit_texdef_t *texMat1, const idMaterial *qtex1, brushprimit_texdef_t *texMat2, const idMaterial *qtex2, float sScale=1.0, float tScale=1.0)</argsstring>
        <name>ConvertTexMatWithQTexture</name>
        <param>
          <type><ref refid="classbrushprimit__texdef__t" kindref="compound">brushprimit_texdef_t</ref> *</type>
          <declname>texMat1</declname>
        </param>
        <param>
          <type>const <ref refid="classid_material" kindref="compound">idMaterial</ref> *</type>
          <declname>qtex1</declname>
        </param>
        <param>
          <type><ref refid="classbrushprimit__texdef__t" kindref="compound">brushprimit_texdef_t</ref> *</type>
          <declname>texMat2</declname>
        </param>
        <param>
          <type>const <ref refid="classid_material" kindref="compound">idMaterial</ref> *</type>
          <declname>qtex2</declname>
        </param>
        <param>
          <type>float</type>
          <declname>sScale</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>float</type>
          <declname>tScale</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="361" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorBrushPrimit.cpp" bodystart="449" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1ac14ab112a3f964621333cebfbcbd3aca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Face_MoveTexture_BrushPrimit</definition>
        <argsstring>(face_t *f, idVec3 delta)</argsstring>
        <name>Face_MoveTexture_BrushPrimit</name>
        <param>
          <type><ref refid="structface__s" kindref="compound">face_t</ref> *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="363" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorBrushPrimit.cpp" bodystart="459" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a39100a5346fdbd5c4704e26d935fbd02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_ShiftTexture_BrushPrimit</definition>
        <argsstring>(face_t *f, float x, float y, bool autoAdjust)</argsstring>
        <name>Select_ShiftTexture_BrushPrimit</name>
        <param>
          <type><ref refid="structface__s" kindref="compound">face_t</ref> *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>autoAdjust</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="364" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorBrushPrimit.cpp" bodystart="505" bodyend="524"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1ad0b752021c8d68c6221d1226c7bf9a23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RotateFaceTexture_BrushPrimit</definition>
        <argsstring>(face_t *f, int nAxis, float fDeg, idVec3 vOrigin)</argsstring>
        <name>RotateFaceTexture_BrushPrimit</name>
        <param>
          <type><ref refid="structface__s" kindref="compound">face_t</ref> *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nAxis</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fDeg</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>vOrigin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="365" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorBrushPrimit.cpp" bodystart="909" bodyend="916"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1af99ae66995b09786f07707b44c2f727d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ComputeBest2DVector</definition>
        <argsstring>(idVec3 v, idVec3 X, idVec3 Y, int &amp;x, int &amp;y)</argsstring>
        <name>ComputeBest2DVector</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>X</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>Y</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="367" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorBrushPrimit.cpp" bodystart="531" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a2a7ab21470e47a11824515c796191d2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ApplyMatrix_BrushPrimit</definition>
        <argsstring>(face_t *f, idMat3 matrix, idVec3 origin)</argsstring>
        <name>ApplyMatrix_BrushPrimit</name>
        <param>
          <type><ref refid="structface__s" kindref="compound">face_t</ref> *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="classid_mat3" kindref="compound">idMat3</ref></type>
          <declname>matrix</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>origin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="369" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorBrushPrimit.cpp" bodystart="926" bodyend="934"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a561b4af2034a54c241e2c3927e2cb052" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BPMatMul</definition>
        <argsstring>(float A[2][3], float B[2][3], float C[2][3])</argsstring>
        <name>BPMatMul</name>
        <param>
          <type>float</type>
          <declname>A</declname>
          <array>[2][3]</array>
        </param>
        <param>
          <type>float</type>
          <declname>B</declname>
          <array>[2][3]</array>
        </param>
        <param>
          <type>float</type>
          <declname>C</declname>
          <array>[2][3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="377" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorBrushPrimit.cpp" bodystart="941" bodyend="948"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a075a4ca4dfa8b39700535cc40e0cbb84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BPMatRotate</definition>
        <argsstring>(float A[2][3], float theta)</argsstring>
        <name>BPMatRotate</name>
        <param>
          <type>float</type>
          <declname>A</declname>
          <array>[2][3]</array>
        </param>
        <param>
          <type>float</type>
          <declname>theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="379" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorBrushPrimit.cpp" bodystart="962" bodyend="972"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1af7dfa94f3548d3badc842d251b670635" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Eclass_ScanFile</definition>
        <argsstring>(char *filename)</argsstring>
        <name>Eclass_ScanFile</name>
        <param>
          <type>char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="391" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a5e96221568698a677e16f3d86cedae0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FillClassList</definition>
        <argsstring>(void)</argsstring>
        <name>FillClassList</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="392" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1aa588a3eb8ea8b77aa62122f382ed9724" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_material" kindref="compound">idMaterial</ref> *</type>
        <definition>const idMaterial* Texture_LoadLight</definition>
        <argsstring>(const char *name)</argsstring>
        <name>Texture_LoadLight</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="396" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/NewTexWnd.cpp" bodystart="668" bodyend="670"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a1f3f4ea69a9089ab39faf8f1bed9a40f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UniqueTargetName</definition>
        <argsstring>(idStr &amp;rStr)</argsstring>
        <name>UniqueTargetName</name>
        <param>
          <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>rStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="400" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorMap.cpp" bodystart="1114" bodyend="1137"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a08623cdc694187ea8c6c25550547eeaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AddSlash</definition>
        <argsstring>(CString &amp;)</argsstring>
        <name>AddSlash</name>
        <param>
          <type>CString &amp;</type>
          <defname>strPath</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="418" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/WIN_QE3.CPP" bodystart="502" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1aa167f140e2f3bbeec1e6c878a36811a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DLLBuildDone</definition>
        <argsstring>()</argsstring>
        <name>DLLBuildDone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="419" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a32a32bb77b30f8e626c704848ba303b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CleanUpEntities</definition>
        <argsstring>()</argsstring>
        <name>CleanUpEntities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="420" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/ECLASS.CPP" bodystart="86" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a18f0d8808c04a37b012c8f3b8a0ab68b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Map_Snapshot</definition>
        <argsstring>()</argsstring>
        <name>Map_Snapshot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="426" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.CPP" bodystart="102" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a0f7b0c1de1b7dce2b8a384813c770ca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WXY_Print</definition>
        <argsstring>()</argsstring>
        <name>WXY_Print</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="427" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/XYWnd.cpp" bodystart="687" bodyend="743"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a05847407b44222c7cc2f13878eef9e71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AddProp</definition>
        <argsstring>(void)</argsstring>
        <name>AddProp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="428" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1ab97545517fbf7f0145bc856db066aff2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RunScript</definition>
        <argsstring>(char *pBuffer)</argsstring>
        <name>RunScript</name>
        <param>
          <type>char *</type>
          <declname>pBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="435" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a345fc9822cedbd260e4e2d32bfc476c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FindReplaceTextures</definition>
        <argsstring>(const char *pFind, const char *pReplace, bool bSelected, bool bForce)</argsstring>
        <name>FindReplaceTextures</name>
        <param>
          <type>const char *</type>
          <declname>pFind</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pReplace</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bSelected</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bForce</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="438" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="1687" bodyend="1711"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a804dddba483de53f4c1478e533758ad4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DoProjectSettings</definition>
        <argsstring>()</argsstring>
        <name>DoProjectSettings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="439" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/WIN_DLG.CPP" bodystart="251" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a60d1f4d7771a0b5f35730ba90e2577c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Texture_ShowDirectory</definition>
        <argsstring>(char *pPath, bool Linked=false)</argsstring>
        <name>Texture_ShowDirectory</name>
        <param>
          <type>char *</type>
          <declname>pPath</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>Linked</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="441" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1afef2c90b336a0e2e9f6bceed272324e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Map_ImportFile</definition>
        <argsstring>(char *filename)</argsstring>
        <name>Map_ImportFile</name>
        <param>
          <type>char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="442" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorMap.cpp" bodystart="1330" bodyend="1345"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a40ceba68b541377947a2758991f6120e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Map_SaveSelected</definition>
        <argsstring>(char *pFilename)</argsstring>
        <name>Map_SaveSelected</name>
        <param>
          <type>char *</type>
          <declname>pFilename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="443" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorMap.cpp" bodystart="1352" bodyend="1385"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a10ed719f6d92e6b1449c651b7fcb238a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AcquirePath</definition>
        <argsstring>(int nCount, PFNPathCallback *pFunc)</argsstring>
        <name>AcquirePath</name>
        <param>
          <type>int</type>
          <declname>nCount</declname>
        </param>
        <param>
          <type>PFNPathCallback *</type>
          <declname>pFunc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="452" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/XYWnd.cpp" bodystart="98" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a1dd7c7bbb8893a66443ee49c96134cfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HandlePopup</definition>
        <argsstring>(CWnd *pWindow, unsigned int uId)</argsstring>
        <name>HandlePopup</name>
        <param>
          <type>CWnd *</type>
          <declname>pWindow</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>uId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="460" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/MainFrm.cpp" bodystart="774" bodyend="793"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a02ad95a72233793cedd2aea2489cfdfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TextureAxisFromPlane</definition>
        <argsstring>(const idPlane &amp;pln, idVec3 &amp;xv, idVec3 &amp;yv)</argsstring>
        <name>TextureAxisFromPlane</name>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>pln</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>xv</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>yv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="463" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorBrush.cpp" bodystart="192" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1ac3950c8cbbddf059294c788d36d642a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QE_SaveProject</definition>
        <argsstring>(const char *pProjectFile)</argsstring>
        <name>QE_SaveProject</name>
        <param>
          <type>const char *</type>
          <declname>pProjectFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="464" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.CPP" bodystart="262" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a2a35701c3b06d075c221849c018f64c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Clamp</definition>
        <argsstring>(float &amp;f, int nClamp)</argsstring>
        <name>Clamp</name>
        <param>
          <type>float &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nClamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="465" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorBrush.cpp" bodystart="335" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1abd4dd76a72b5da62c2bc09d6ce62d9bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool WriteFileString</definition>
        <argsstring>(FILE *fp, char *string,...)</argsstring>
        <name>WriteFileString</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="466" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorMap.cpp" bodystart="1427" bodyend="1519"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1acce6e42cefca59b7b2cbb0c8f8ea4763" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MemFile_fprintf</definition>
        <argsstring>(CMemFile *pMemFile, const char *pText,...)</argsstring>
        <name>MemFile_fprintf</name>
        <param>
          <type>CMemFile *</type>
          <declname>pMemFile</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pText</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="467" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorMap.cpp" bodystart="1526" bodyend="1624"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a484894c534ea6e51a306ff549880da2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SaveWindowPlacement</definition>
        <argsstring>(HWND hwnd, const char *pName)</argsstring>
        <name>SaveWindowPlacement</name>
        <param>
          <type>HWND</type>
          <declname>hwnd</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="468" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/MainFrm.cpp" bodystart="1448" bodyend="1454"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a962cf6e1dde9cb0387fc654f0511b44d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LoadWindowPlacement</definition>
        <argsstring>(HWND hwnd, const char *pName)</argsstring>
        <name>LoadWindowPlacement</name>
        <param>
          <type>HWND</type>
          <declname>hwnd</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="469" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/MainFrm.cpp" bodystart="1431" bodyend="1442"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1ae607db2245aafe9e81be149c84071f02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ConfirmModified</definition>
        <argsstring>(void)</argsstring>
        <name>ConfirmModified</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="470" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/WIN_QE3.CPP" bodystart="302" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1aa2a8ef054191a6364f105a303f10d61d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DoPatchInspector</definition>
        <argsstring>()</argsstring>
        <name>DoPatchInspector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="471" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/PatchDialog.cpp" bodystart="224" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a3f0fbb07f0498f1b04cca1ed82c053fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UpdatePatchInspector</definition>
        <argsstring>()</argsstring>
        <name>UpdatePatchInspector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="472" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/PatchDialog.cpp" bodystart="240" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a627c8831997f0b698319b4e0da1b42af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structbrush__s" kindref="compound">brush_t</ref> *</type>
        <definition>brush_t* CreateEntityBrush</definition>
        <argsstring>(int x, int y, CXYWnd *pWnd)</argsstring>
        <name>CreateEntityBrush</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="class_c_x_y_wnd" kindref="compound">CXYWnd</ref> *</type>
          <declname>pWnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="475" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/XYWnd.cpp" bodystart="1710" bodyend="1750"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1ac8144f76cdb109c387adff8e611560c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PointInMoveList</definition>
        <argsstring>(idVec3 *pf)</argsstring>
        <name>PointInMoveList</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> *</type>
          <declname>pf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="476" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/PMESH.CPP" bodystart="1941" bodyend="1948"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1ac9f507b7359a23f4994b9e593fdf088b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ByeByeSurfaceDialog</definition>
        <argsstring>()</argsstring>
        <name>ByeByeSurfaceDialog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="478" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" bodystart="314" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1aaeba2bb3fc98c1ec8fc88dee9a9bee07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UpdateSurfaceDialog</definition>
        <argsstring>()</argsstring>
        <name>UpdateSurfaceDialog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="479" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" bodystart="273" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1ad1c6caa3bebddee8a34d5727df6ced4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UpdateLightInspector</definition>
        <argsstring>()</argsstring>
        <name>UpdateLightInspector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="480" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/LightDlg.cpp" bodystart="833" bodyend="837"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a460a23c75236f3de9bee7b96d05f6fd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>BOOL UpdateEntitySel</definition>
        <argsstring>(eclass_t *pec)</argsstring>
        <name>UpdateEntitySel</name>
        <param>
          <type><ref refid="structeclass__s" kindref="compound">eclass_t</ref> *</type>
          <declname>pec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="482" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a6108279aef99d132663a564823d64d3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetInspectorMode</definition>
        <argsstring>(int iType)</argsstring>
        <name>SetInspectorMode</name>
        <param>
          <type>int</type>
          <declname>iType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="483" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a69b519bcb0d8d999b0ff87eec0370bf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>BOOL GetSelectAllCriteria</definition>
        <argsstring>(CString &amp;strKey, CString &amp;strVal)</argsstring>
        <name>GetSelectAllCriteria</name>
        <param>
          <type>CString &amp;</type>
          <declname>strKey</declname>
        </param>
        <param>
          <type>CString &amp;</type>
          <declname>strVal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="484" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1ae4ddd7d432bf0916b99954651b489301" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GetCvarInt</definition>
        <argsstring>(const char *name, const int def)</argsstring>
        <name>GetCvarInt</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>def</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="486" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/PrefsDlg.cpp" bodystart="255" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1aaf0b215542683d5661ce220a8af3a131" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* GetCvarString</definition>
        <argsstring>(const char *name, const char *def)</argsstring>
        <name>GetCvarString</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>def</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="487" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/PrefsDlg.cpp" bodystart="264" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1ad71ebdf378ecf00b21a64d303cb3c9b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetCvarInt</definition>
        <argsstring>(const char *name, const int value)</argsstring>
        <name>SetCvarInt</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="488" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/PrefsDlg.cpp" bodystart="275" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a7b843b10d16e6222e0df81a4bd220d61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetCvarString</definition>
        <argsstring>(const char *name, const char *value)</argsstring>
        <name>SetCvarString</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="489" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/PrefsDlg.cpp" bodystart="279" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a0e383354ef47d34bd4f5e5992060aeb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetCvarBinary</definition>
        <argsstring>(const char *name, void *pv, int size)</argsstring>
        <name>SetCvarBinary</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pv</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="490" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/PrefsDlg.cpp" bodystart="283" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a3a09eb9f889a529a9facc110cc1dac09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GetCvarBinary</definition>
        <argsstring>(const char *name, void *pv, int size)</argsstring>
        <name>GetCvarBinary</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pv</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="491" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/PrefsDlg.cpp" bodystart="296" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="_q_e3_8_h_1a09d49646f02f0f7a2706bbabf8cb9273" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UpdateRadiantColor</definition>
        <argsstring>(float r, float g, float b, float a)</argsstring>
        <name>UpdateRadiantColor</name>
        <param>
          <type>float</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>g</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H" line="493" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/MainFrm.cpp" bodystart="2638" bodyend="2642"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__QE3_H__</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__QE3_H__</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ID_DEBUG_MEMORY</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>new</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>DEBUG_NEW</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DEBUG_NEW<sp/>new</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>define<sp/>to<sp/>use<sp/>HTREEITEM<sp/>and<sp/>MFC<sp/>stuff<sp/>in<sp/>the<sp/>headers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QERTYPES_USE_MFC</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;qertypes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cmdlib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;parse.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;commctrl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;afxres.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../sys/win32/rc/Radiant_resource.h&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>main<sp/>symbols</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../sys/win32/win_local.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qedefs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stuff<sp/>from<sp/>old<sp/>qfiles.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_MAP_ENTITIES<sp/><sp/><sp/><sp/>2048</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MAX_MOVE_POINTS<sp/>=<sp/>4096;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MAX_MOVE_PLANES<sp/>=<sp/>2048;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>assume<sp/>that<sp/>all<sp/>maps<sp/>fit<sp/>within<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>HUGE_DISTANCE<sp/>=<sp/>100000;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;textures.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;EditorBrush.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;EditorEntity.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;EditorMap.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;select.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;splines.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;z.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mru.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;waitdlg.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MainFrm.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;PrefsDlg.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;FindTextureDlg.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dialogtextures.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;InspectorDialog.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;undo.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;PMESH.H&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>dec<sp/>offsetof<sp/>macro<sp/>doesn&apos;t<sp/>work<sp/>very<sp/>well...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>myoffsetof(type,identifier)<sp/>((size_t)&amp;((type<sp/>*)0)-&gt;identifier)</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*error,<sp/>...);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>Warning<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*error,<sp/>...);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="structpedge__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>p1,<sp/>p2;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structface__s" kindref="compound">face_t</ref><sp/><sp/>*f1,<sp/>*f2;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}<sp/><ref refid="structpedge__t" kindref="compound">pedge_t</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="struct_saved_info__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>iSize;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>iTexMenu;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nearest,<sp/>linear,<sp/>etc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>fGamma;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gamma<sp/>for<sp/>textures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>szProject[256];<sp/></highlight><highlight class="comment">//<sp/>last<sp/>project<sp/>loaded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/>colors[COLOR_LAST];</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>show_names;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>show_coordinates;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>exclude;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>m_nTextureTweak;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>editorExpanded;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>RECT<sp/><sp/><sp/><sp/>oldEditRect;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>showSoundAlways;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>showSoundWhenSelected;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}<sp/><ref refid="struct_saved_info__t" kindref="compound">SavedInfo_t</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>system<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TTimo<sp/>NOTE:<sp/>WINAPI<sp/>funcs<sp/>can<sp/>be<sp/>accessed<sp/>by<sp/>plugins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_UpdateStatusBar(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>WINAPI<sp/>Sys_UpdateWindows<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_Beep<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>Sys_DoubleTime<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_GetCursorPos<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_SetCursorPos<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_SetTitle<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_BeginWait<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_Waiting();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_EndWait<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_Status(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*psz,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>part<sp/>=<sp/>-1);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="124"><highlight class="comment">**<sp/>most<sp/>of<sp/>the<sp/>QE<sp/>globals<sp/>are<sp/>stored<sp/>in<sp/>this<sp/>structure</highlight></codeline>
<codeline lineno="125"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="struct_q_e_globals__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>d_showgrid;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d_gridsize;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rotateAxis;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0,<sp/>1<sp/>or<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flatRotation;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0,<sp/>1<sp/>or<sp/>2,<sp/>0<sp/>==<sp/>off,<sp/>1<sp/>==<sp/>rotate<sp/>about<sp/>the<sp/>rotation<sp/>origin,<sp/>1<sp/>==<sp/>rotate<sp/>about<sp/>the<sp/>selection<sp/>mid<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_num_entities;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>*d_project_entity;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/>d_new_brush_bottom,<sp/>d_new_brush_top;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>HINSTANCE<sp/>d_hInstance;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/><sp/><sp/>d_points[MAX_POINTS];</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_numpoints;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpedge__t" kindref="compound">pedge_t</ref><sp/><sp/><sp/>d_edges[MAX_EDGES];</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_numedges;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_num_move_points;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/><sp/><sp/>*d_move_points[MAX_MOVE_POINTS];</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_num_move_planes;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_plane" kindref="compound">idPlane</ref><sp/><sp/><sp/><sp/><sp/>*d_move_planes[MAX_MOVE_PLANES];</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structqtexture__s" kindref="compound">qtexture_t</ref><sp/><sp/>*d_qtextures;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtexturewin__t" kindref="compound">texturewin_t</ref><sp/>d_texturewin;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_pointfile_display_list;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>LPMRUMENU<sp/><sp/><sp/><sp/>d_lpMruMenu;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_saved_info__t" kindref="compound">SavedInfo_t</ref><sp/><sp/>d_savedinfo;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_workcount;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>connect<sp/>entities<sp/>uses<sp/>the<sp/>last<sp/>two<sp/>brushes<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_select_count;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbrush__s" kindref="compound">brush_t</ref><sp/><sp/><sp/><sp/><sp/>*d_select_order[MAX_MAP_ENTITIES];</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_select_translate;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>dragging<sp/>w/o<sp/>making<sp/>new<sp/>display<sp/>lists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>select_t<sp/><sp/><sp/><sp/><sp/>d_select_mode;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_point_list_interface" kindref="compound">idPointListInterface</ref><sp/>*selectObject;<sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_font_list;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_parsed_brushes;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>show_blocks;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Timo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tells<sp/>if<sp/>we<sp/>are<sp/>internally<sp/>using<sp/>brush<sp/>primitive<sp/>(texture<sp/>coordinates<sp/>and<sp/>map<sp/>format)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>a<sp/>shortcut<sp/>for<sp/>IntForKey(<sp/>g_qeglobals.d_project_entity,<sp/>&quot;brush_primit&quot;<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>must<sp/>keep<sp/>the<sp/>two<sp/>ones<sp/>in<sp/>sync</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>m_bBrushPrimitMode;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>while<sp/>importing<sp/>brush<sp/>data<sp/>from<sp/>file<sp/>or<sp/>memory<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tells<sp/>if<sp/>conversion<sp/>between<sp/>map<sp/>format<sp/>and<sp/>internal<sp/>preferences<sp/>(<sp/>m_bBrushPrimitMode<sp/>)<sp/>is<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>bNeedConvert;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>bOldBrushes;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>bPrimitBrushes;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>mapVersion;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/>d_vAreaTL;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/>d_vAreaBR;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tells<sp/>if<sp/>we<sp/>are<sp/>using<sp/>.INI<sp/>files<sp/>for<sp/>prefs<sp/>instead<sp/>of<sp/>registry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>use_ini;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>even<sp/>in<sp/>.INI<sp/>mode<sp/>we<sp/>use<sp/>the<sp/>registry<sp/>for<sp/>all<sp/>void*<sp/>prefs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_ini_registry[64];</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Timo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tells<sp/>we<sp/>have<sp/>surface<sp/>properties<sp/>plugin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>bSurfacePropertiesPlugin;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tells<sp/>we<sp/>are<sp/>using<sp/>a<sp/>BSP<sp/>frontend<sp/>plugin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>bBSPFrontendPlugin;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>editor<sp/>has<sp/>its<sp/>own<sp/>soundWorld<sp/>and<sp/>renderWorld,<sp/>completely<sp/>distinct<sp/>from<sp/>the<sp/>game</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_render_world" kindref="compound">idRenderWorld</ref><sp/><sp/><sp/>*rw;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_sound_world" kindref="compound">idSoundWorld</ref><sp/><sp/><sp/><sp/>*sw;</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}<sp/><ref refid="struct_q_e_globals__t" kindref="compound">QEGlobals_t</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Pointfile_Delete<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WINAPI<sp/>Pointfile_Check<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Pointfile_Next<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Pointfile_Prev<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Pointfile_Clear<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Pointfile_Draw(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Pointfile_Load(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">//<sp/>drag.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Drag_Begin<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buttons,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;xaxis,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;yaxis,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;origin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;dir);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Drag_MouseMoved<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buttons);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Drag_MouseUp<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nButtons<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>g_moveOnly;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//<sp/>csg.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSG_MakeHollow<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSG_Subtract<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSG_Merge<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vertsel.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetupVertexSelection<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SelectEdgeByRay<sp/>(<ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>org,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>dir);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SelectVertexByRay<sp/>(<ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>org,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>dir);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConnectEntities<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>update_bits;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>screen_width;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>screen_height;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>HANDLE<sp/><sp/>bsp_process;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>HANDLE<sp/>g_hBSPOutput;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>HANDLE<sp/>g_hBSPInput;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*TranslateString<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ProjectDialog<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FillTextureMenu<sp/>(CStringArray*<sp/>pArray<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FillBSPMenu<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal">BOOL<sp/>CALLBACK<sp/>Win_Dialog<sp/>(</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>HWND<sp/>hwndDlg,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handle<sp/>to<sp/>dialog<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>UINT<sp/>uMsg,<sp/><sp/></highlight><highlight class="comment">//<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>WPARAM<sp/>wParam,<sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>message<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_prop_tree_item" kindref="compound">LPARAM</ref><sp/>lParam<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>second<sp/>message<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal">);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//<sp/>win_cam.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WCam_Create<sp/>(HINSTANCE<sp/>hInstance);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">//<sp/>win_xy.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WXY_Create<sp/>(HINSTANCE<sp/>hInstance);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">//<sp/>win_z.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WZ_Create<sp/>(HINSTANCE<sp/>hInstance);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">//<sp/>win_ent.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">//<sp/>win_main.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Main_Create<sp/>(HINSTANCE<sp/>hInstance);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SaveWindowState(HWND<sp/>hWnd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pszName);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>LoadWindowState(HWND<sp/>hWnd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pszName);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SaveRegistryInfo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pszName,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvBuf,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>lSize);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>LoadRegistryInfo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pszName,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvBuf,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*plSize);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment">//<sp/>win_dlg.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DoGamma(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DoFind(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DoRotate(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DoSides(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bCone<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSphere<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bTorus<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DoAbout(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DoSurface();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="313"><highlight class="comment">**<sp/>QE<sp/>function<sp/>declarations</highlight></codeline>
<codeline lineno="314"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>QE_CheckAutoSave(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>QE_CountBrushesAndUpdateStatusBar(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>WINAPI<sp/>QE_CheckOpenGLForErrors(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>QE_ExpandBspString<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bspaction,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mapname,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useTemps);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>QE_Init<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>QE_KeyDown<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nFlags<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>QE_LoadProject<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*projectfile);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>QE_SingleBrush<sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bQuiet<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>entityOK<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sys<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Sys_MarkMapModified<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="329"><highlight class="comment">**<sp/>QE<sp/>Win32<sp/>function<sp/>declarations</highlight></codeline>
<codeline lineno="330"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>WINAPI<sp/>QEW_SetupPixelFormat(HDC<sp/>hDC,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>zbuffer<sp/>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="334"><highlight class="comment">**<sp/>extern<sp/>declarations</highlight></codeline>
<codeline lineno="335"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_q_e_globals__t" kindref="compound">QEGlobals_t</ref><sp/><sp/><sp/>g_qeglobals;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mapModified;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>quit<sp/>confirmation<sp/>(0<sp/>=<sp/>clean,<sp/>1<sp/>=<sp/>unsaved,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="comment">//++timo<sp/>clean<sp/>(moved<sp/>into<sp/>qertypes.h)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">//enum<sp/>VIEWTYPE<sp/>{YZ,<sp/>XZ,<sp/>XY};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>g_bAxialMode;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g_axialAnchor;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g_axialDest;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Face_FlipTexture_BrushPrimit(<ref refid="structface__s" kindref="compound">face_t</ref><sp/>*face,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>y);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Brush_FlipTexture_BrushPrimit(<ref refid="structbrush__s" kindref="compound">brush_t</ref><sp/>*b,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>y);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Timo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment">//<sp/>new<sp/>brush<sp/>primitive<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>ComputeAxisBase(<sp/>idVec3<sp/>&amp;normal,idVec3<sp/>&amp;texS,idVec3<sp/>&amp;texT<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FaceToBrushPrimitFace(<ref refid="structface__s" kindref="compound">face_t</ref><sp/>*f);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EmitBrushPrimitTextureCoordinates(<ref refid="structface__s" kindref="compound">face_t</ref><sp/>*,<sp/><ref refid="classid_winding" kindref="compound">idWinding</ref><sp/>*,<sp/><ref refid="structpatch_mesh__t" kindref="compound">patchMesh_t</ref><sp/>*patch<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EmitTextureCoordinates,<sp/>is<sp/>old<sp/>code<sp/>used<sp/>for<sp/>brush<sp/>to<sp/>brush<sp/>primitive<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EmitTextureCoordinates<sp/>(<sp/><ref refid="classid_vec5" kindref="compound">idVec5</ref><sp/>&amp;xyzst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_material" kindref="compound">idMaterial</ref><sp/>*q,<sp/><ref refid="structface__s" kindref="compound">face_t</ref><sp/>*f,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BrushPrimit_Parse(<ref refid="structbrush__s" kindref="compound">brush_t</ref><sp/>*,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>newFormat,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>origin);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compute<sp/>a<sp/>fake<sp/>shift<sp/>scale<sp/>rot<sp/>representation<sp/>from<sp/>the<sp/>texture<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TexMatToFakeTexCoords(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>texMat[2][3],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift[2],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*rot,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale[2]<sp/>);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FakeTexCoordsToTexMat(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shift[2],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rot,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale[2],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>texMat[2][3]<sp/>);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConvertTexMatWithQTexture(<sp/><ref refid="classbrushprimit__texdef__t" kindref="compound">brushprimit_texdef_t</ref><sp/>*texMat1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_material" kindref="compound">idMaterial</ref><sp/>*qtex1,<sp/><ref refid="classbrushprimit__texdef__t" kindref="compound">brushprimit_texdef_t</ref><sp/>*texMat2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_material" kindref="compound">idMaterial</ref><sp/>*qtex2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sScale<sp/>=<sp/>1.0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tScale<sp/>=<sp/>1.0<sp/>);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="comment">//<sp/>texture<sp/>locking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Face_MoveTexture_BrushPrimit(<ref refid="structface__s" kindref="compound">face_t</ref><sp/>*f,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>delta);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_ShiftTexture_BrushPrimit(<sp/><ref refid="structface__s" kindref="compound">face_t</ref><sp/>*f,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>autoAdjust<sp/>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RotateFaceTexture_BrushPrimit(<ref refid="structface__s" kindref="compound">face_t</ref><sp/>*f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nAxis,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fDeg,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>vOrigin<sp/>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="comment">//<sp/>used<sp/>in<sp/>CCamWnd::ShiftTexture_BrushPrimit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ComputeBest2DVector(<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>v,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>X,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>Y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;y<sp/>);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ApplyMatrix_BrushPrimit(<ref refid="structface__s" kindref="compound">face_t</ref><sp/>*f,<sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/>matrix,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>origin);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="comment">//<sp/>low<sp/>level<sp/>functions<sp/>..<sp/>put<sp/>in<sp/>mathlib?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BPMatCopy(a,b)<sp/>{b[0][0]<sp/>=<sp/>a[0][0];<sp/>b[0][1]<sp/>=<sp/>a[0][1];<sp/>b[0][2]<sp/>=<sp/>a[0][2];<sp/>b[1][0]<sp/>=<sp/>a[1][0];<sp/>b[1][1]<sp/>=<sp/>a[1][1];<sp/>b[1][2]<sp/>=<sp/>a[1][2];}</highlight></codeline>
<codeline lineno="372"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>apply<sp/>a<sp/>scale<sp/>transformation<sp/>to<sp/>the<sp/>BP<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BPMatScale(m,sS,sT)<sp/>{m[0][0]*=sS;<sp/>m[1][0]*=sS;<sp/>m[0][1]*=sT;<sp/>m[1][1]*=sT;}</highlight></codeline>
<codeline lineno="374"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>apply<sp/>a<sp/>translation<sp/>transformation<sp/>to<sp/>a<sp/>BP<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BPMatTranslate(m,s,t)<sp/>{m[0][2]<sp/>+=<sp/>m[0][0]*s<sp/>+<sp/>m[0][1]*t;<sp/>m[1][2]<sp/>+=<sp/>m[1][0]*s+m[1][1]*t;}</highlight></codeline>
<codeline lineno="376"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>2D<sp/>homogeneous<sp/>matrix<sp/>product<sp/>C<sp/>=<sp/>A*B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BPMatMul(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>A[2][3],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>B[2][3],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>C[2][3]);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="comment">//<sp/>apply<sp/>a<sp/>rotation<sp/>(degrees)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BPMatRotate(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>A[2][3],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>theta);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG</highlight></codeline>
<codeline lineno="381"><highlight class="preprocessor"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BPMatDump(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>A[2][3]);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="383"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">//<sp/>eclass.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>parsing_single;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>eclass_found;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structeclass__s" kindref="compound">eclass_t</ref><sp/>*eclass_e;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Eclass_ScanFile(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename<sp/>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FillClassList<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>g_bShowLightVolumes;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>g_bShowLightTextures;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_material" kindref="compound">idMaterial</ref><sp/>*Texture_LoadLight(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FONT_HEIGHT<sp/>10</highlight></codeline>
<codeline lineno="399"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UniqueTargetName(<ref refid="classid_str" kindref="compound">idStr</ref>&amp;<sp/>rStr);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAP_VERSION<sp/>2.0</highlight></codeline>
<codeline lineno="403"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_c_main_frame" kindref="compound">CMainFrame</ref>*<sp/>g_pParentWnd;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>CString<sp/>g_strAppPath;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_c_prefs_dlg" kindref="compound">CPrefsDlg</ref>&amp;<sp/>g_PrefsDlg;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_c_find_texture_dlg" kindref="compound">CFindTextureDlg</ref>&amp;<sp/>g_dlgFind;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>radiant_entityMode;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="comment">//<sp/>layout<sp/>styles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QR_SPLIT<sp/>0</highlight></codeline>
<codeline lineno="412"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>QR_QE4<sp/>1</highlight></codeline>
<codeline lineno="413"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>QR_4WAY<sp/>2</highlight></codeline>
<codeline lineno="414"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>QR_SPLITZ<sp/>3</highlight></codeline>
<codeline lineno="415"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment">//<sp/>externs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddSlash(CString&amp;);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DLLBuildDone();</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CleanUpEntities();</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QE_CountBrushesAndUpdateStatusBar();</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QE_CheckAutoSave();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structqtexture__s" kindref="compound">qtexture_t</ref><sp/><sp/><sp/>*notexture;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structqtexture__s" kindref="compound">qtexture_t</ref><sp/><sp/><sp/>*current_texture;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SaveWindowState(HWND<sp/>hWnd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pszName);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Map_Snapshot();</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WXY_Print();</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddProp(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inspector_mode;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>g_bRotateMode;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>g_bClipMode;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>g_bScaleMode;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g_nScaleHow;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>g_bPathMode;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RunScript(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pBuffer);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>HINSTANCE<sp/>g_hOpenGL32;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FindReplaceTextures(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pFind,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pReplace,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSelected,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bForce);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DoProjectSettings();</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>region_active;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Texture_ShowDirectory<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pPath,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Linked<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Map_ImportFile<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Map_SaveSelected(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pFilename);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>g_bNewFace;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>g_bSwitch;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structbrush__s" kindref="compound">brush_t</ref><sp/>g_brFrontSplits;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structbrush__s" kindref="compound">brush_t</ref><sp/>g_brBackSplits;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_c_clip_point" kindref="compound">CClipPoint</ref><sp/>g_Clip1;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_c_clip_point" kindref="compound">CClipPoint</ref><sp/>g_Clip2;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structbrush__s" kindref="compound">brush_t</ref>*<sp/>g_pSplitList;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_c_clip_point" kindref="compound">CClipPoint</ref><sp/>g_PathPoints[256];</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AcquirePath(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCount,<sp/>PFNPathCallback*<sp/>pFunc);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>g_bScreenUpdates;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_s_command_info" kindref="compound">SCommandInfo</ref><sp/>g_Commands[];</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g_nCommandCount;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_s_key_info" kindref="compound">SKeyInfo</ref><sp/>g_Keys[];</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g_nKeyCount;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inspector_mode;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/>*bsp_commands[256];</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HandlePopup(CWnd*<sp/>pWindow,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uId);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structz__t" kindref="compound">z_t</ref><sp/>z;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>CString<sp/>g_strProject;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TextureAxisFromPlane(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_plane" kindref="compound">idPlane</ref><sp/>&amp;pln,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;xv,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;yv);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>QE_SaveProject<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pProjectFile);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Clamp(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nClamp);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WriteFileString(<sp/>FILE<sp/>*fp,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/>...<sp/>);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MemFile_fprintf(CMemFile*<sp/>pMemFile,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pText,<sp/>...);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SaveWindowPlacement(HWND<sp/>hwnd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pName);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>LoadWindowPlacement(HWND<sp/>hwnd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pName);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ConfirmModified<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DoPatchInspector();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UpdatePatchInspector();</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g_nSmartX;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g_nSmartY;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structbrush__s" kindref="compound">brush_t</ref>*<sp/>CreateEntityBrush(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/><ref refid="class_c_x_y_wnd" kindref="compound">CXYWnd</ref>*<sp/>pWnd);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PointInMoveList(<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>*pf<sp/>);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ByeByeSurfaceDialog();</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UpdateSurfaceDialog();</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UpdateLightInspector();</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal">BOOL<sp/>UpdateEntitySel(<ref refid="structeclass__s" kindref="compound">eclass_t</ref><sp/>*pec);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetInspectorMode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iType);</highlight></codeline>
<codeline lineno="484"><highlight class="normal">BOOL<sp/>GetSelectAllCriteria(CString<sp/>&amp;strKey,<sp/>CString<sp/>&amp;strVal);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetCvarInt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>def);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*GetCvarString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*def);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetCvarInt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetCvarString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetCvarBinary(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pv,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GetCvarBinary(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pv,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UpdateRadiantColor(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>g,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a<sp/>);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!__QE3_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H"/>
  </compounddef>
</doxygen>
