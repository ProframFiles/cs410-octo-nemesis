<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_render_system__init_8cpp" kind="file">
    <compoundname>RenderSystem_init.cpp</compoundname>
    <includes refid="precompiled_8h" local="yes">../idlib/precompiled.h</includes>
    <includes refid="tr__local_8h" local="yes">tr_local.h</includes>
    <innerclass refid="structvidmode__s" prot="public">vidmode_s</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_render_system__init_8cpp_1ae153a8b7bc6640dc182e572c4c2f7dcd" prot="public" static="no">
        <name>Q_ALLOCATE_MEMORY_NV</name>
        <initializer>&quot;wglAllocateMemoryNV&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="251" column="10" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_render_system__init_8cpp_1a5829c182208aacba88cd527ef2bd8546" prot="public" static="no">
        <name>Q_FREE_MEMORY_NV</name>
        <initializer>&quot;wglFreeMemoryNV&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="252" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_render_system__init_8cpp_1a3e63e827c8ecacc6f422b98bf358591b" prot="public" static="no">
        <name>MAX_BLENDS</name>
        <initializer>256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="1349" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="1349" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_render_system__init_8cpp_1a7d536e0582a405114d3e2ef7182d356a" prot="public" static="no">
        <type>struct <ref refid="structvidmode__s" kindref="compound">vidmode_s</ref></type>
        <definition>typedef struct vidmode_s  vidmode_t</definition>
        <argsstring></argsstring>
        <name>vidmode_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="554" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_render_system__init_8cpp_1ae5a86f4b2e7724fd33b09be699cacc97" prot="public" static="no" mutable="no">
        <type><ref refid="structglconfig__s" kindref="compound">glconfig_t</ref></type>
        <definition>glconfig_t glConfig</definition>
        <argsstring></argsstring>
        <name>glConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="41" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1af0e3923f2c326009b42adf4f23e27ca3" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* r_rendererArgs[]</definition>
        <argsstring>[]</argsstring>
        <name>r_rendererArgs</name>
        <initializer>= { &quot;best&quot;, &quot;arb&quot;, &quot;arb2&quot;, &quot;Cg&quot;, &quot;exp&quot;, &quot;nv10&quot;, &quot;nv20&quot;, &quot;r200&quot;, NULL }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="45" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a134c4a70e485276eff0d708677324a35" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_inhibitFragmentProgram(&quot;r_inhibitFragmentProgram&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;ignore the fragment program extension&quot;)</definition>
        <argsstring>(&quot;r_inhibitFragmentProgram&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;ignore the fragment program extension&quot;)</argsstring>
        <name>r_inhibitFragmentProgram</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="47" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a13ff5fabc16705cfbf4c89966a2159a2" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_glDriver(&quot;r_glDriver&quot;,&quot;&quot;, CVAR_RENDERER,&quot;\&quot;opengl32\&quot;, etc.&quot;)</definition>
        <argsstring>(&quot;r_glDriver&quot;,&quot;&quot;, CVAR_RENDERER,&quot;\&quot;opengl32\&quot;, etc.&quot;)</argsstring>
        <name>r_glDriver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="48" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a532c61f831131d4f76400d64a8c6798e" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useLightPortalFlow(&quot;r_useLightPortalFlow&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;use a more precise area reference determination&quot;)</definition>
        <argsstring>(&quot;r_useLightPortalFlow&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;use a more precise area reference determination&quot;)</argsstring>
        <name>r_useLightPortalFlow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="49" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1abc968cd60ec10c0c2957fc1a3c3322cf" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_multiSamples(&quot;r_multiSamples&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_ARCHIVE|CVAR_INTEGER,&quot;number of antialiasing samples&quot;)</definition>
        <argsstring>(&quot;r_multiSamples&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_ARCHIVE|CVAR_INTEGER,&quot;number of antialiasing samples&quot;)</argsstring>
        <name>r_multiSamples</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="50" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a83af39e81267721cb6c84062c6af81a0" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_mode(&quot;r_mode&quot;,&quot;3&quot;, CVAR_ARCHIVE|CVAR_RENDERER|CVAR_INTEGER,&quot;video mode number&quot;)</definition>
        <argsstring>(&quot;r_mode&quot;,&quot;3&quot;, CVAR_ARCHIVE|CVAR_RENDERER|CVAR_INTEGER,&quot;video mode number&quot;)</argsstring>
        <name>r_mode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="51" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ac8166d7eb0562ff6bffe10f1d6c9d1a9" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_displayRefresh(&quot;r_displayRefresh&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER|CVAR_NOCHEAT,&quot;optional display refresh rate option for vid mode&quot;, 0.0f, 200.0f)</definition>
        <argsstring>(&quot;r_displayRefresh&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER|CVAR_NOCHEAT,&quot;optional display refresh rate option for vid mode&quot;, 0.0f, 200.0f)</argsstring>
        <name>r_displayRefresh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="52" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1acc8fa4e0b9227641e5551451de9f9bbb" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_fullscreen(&quot;r_fullscreen&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_ARCHIVE|CVAR_BOOL,&quot;0 = windowed, 1 = full screen&quot;)</definition>
        <argsstring>(&quot;r_fullscreen&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_ARCHIVE|CVAR_BOOL,&quot;0 = windowed, 1 = full screen&quot;)</argsstring>
        <name>r_fullscreen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="53" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ab2cc5dd601bc56e2f7f5d5d08e86588b" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_customWidth(&quot;r_customWidth&quot;,&quot;720&quot;, CVAR_RENDERER|CVAR_ARCHIVE|CVAR_INTEGER,&quot;custom screen width. set r_mode to -1 to activate&quot;)</definition>
        <argsstring>(&quot;r_customWidth&quot;,&quot;720&quot;, CVAR_RENDERER|CVAR_ARCHIVE|CVAR_INTEGER,&quot;custom screen width. set r_mode to -1 to activate&quot;)</argsstring>
        <name>r_customWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="54" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ad4c14e760a36c0e72a32e57ea3ec7399" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_customHeight(&quot;r_customHeight&quot;,&quot;486&quot;, CVAR_RENDERER|CVAR_ARCHIVE|CVAR_INTEGER,&quot;custom screen height. set r_mode to -1 to activate&quot;)</definition>
        <argsstring>(&quot;r_customHeight&quot;,&quot;486&quot;, CVAR_RENDERER|CVAR_ARCHIVE|CVAR_INTEGER,&quot;custom screen height. set r_mode to -1 to activate&quot;)</argsstring>
        <name>r_customHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="55" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a1214b9770c3dc8c53c395c88586f8783" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_singleTriangle(&quot;r_singleTriangle&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;only draw a single triangle per primitive&quot;)</definition>
        <argsstring>(&quot;r_singleTriangle&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;only draw a single triangle per primitive&quot;)</argsstring>
        <name>r_singleTriangle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="56" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a5f2f039d7fc63a67ffa8e007880d9c44" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_checkBounds(&quot;r_checkBounds&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;compare all surface bounds with precalculated ones&quot;)</definition>
        <argsstring>(&quot;r_checkBounds&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;compare all surface bounds with precalculated ones&quot;)</argsstring>
        <name>r_checkBounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="57" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a74dbe84ef04058d45cdfd87bf6f53a1f" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useNV20MonoLights(&quot;r_useNV20MonoLights&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;use pass optimization for mono lights&quot;)</definition>
        <argsstring>(&quot;r_useNV20MonoLights&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;use pass optimization for mono lights&quot;)</argsstring>
        <name>r_useNV20MonoLights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="59" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a57ed3f707e9515d14a0b94372d1d6783" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useConstantMaterials(&quot;r_useConstantMaterials&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;use pre-calculated material registers if possible&quot;)</definition>
        <argsstring>(&quot;r_useConstantMaterials&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;use pre-calculated material registers if possible&quot;)</argsstring>
        <name>r_useConstantMaterials</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="60" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1aa60613459e932ac40d4d72eb78533c12" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useTripleTextureARB(&quot;r_useTripleTextureARB&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;cards with 3+ texture units do a two pass instead of three pass&quot;)</definition>
        <argsstring>(&quot;r_useTripleTextureARB&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;cards with 3+ texture units do a two pass instead of three pass&quot;)</argsstring>
        <name>r_useTripleTextureARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="61" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1aa7603db4892202c2ff53e122ef210a4d" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useSilRemap(&quot;r_useSilRemap&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;consider verts with the same XYZ, but different ST the same for shadows&quot;)</definition>
        <argsstring>(&quot;r_useSilRemap&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;consider verts with the same XYZ, but different ST the same for shadows&quot;)</argsstring>
        <name>r_useSilRemap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="62" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a61c4efade86f99dfee166dc40d1e1668" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useNodeCommonChildren(&quot;r_useNodeCommonChildren&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;stop pushing reference bounds early when possible&quot;)</definition>
        <argsstring>(&quot;r_useNodeCommonChildren&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;stop pushing reference bounds early when possible&quot;)</argsstring>
        <name>r_useNodeCommonChildren</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="63" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ae4327e8eef5578d5b848328be4211493" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useShadowProjectedCull(&quot;r_useShadowProjectedCull&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;discard triangles outside light volume before shadowing&quot;)</definition>
        <argsstring>(&quot;r_useShadowProjectedCull&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;discard triangles outside light volume before shadowing&quot;)</argsstring>
        <name>r_useShadowProjectedCull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="64" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1af130b43dfee1c8b370f1e191e7b6607d" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useShadowVertexProgram(&quot;r_useShadowVertexProgram&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;do the shadow projection in the vertex program on capable cards&quot;)</definition>
        <argsstring>(&quot;r_useShadowVertexProgram&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;do the shadow projection in the vertex program on capable cards&quot;)</argsstring>
        <name>r_useShadowVertexProgram</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="65" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a13b3a14d5902413f3cda4a9efe979dbf" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useShadowSurfaceScissor(&quot;r_useShadowSurfaceScissor&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;scissor shadows by the scissor rect of the interaction surfaces&quot;)</definition>
        <argsstring>(&quot;r_useShadowSurfaceScissor&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;scissor shadows by the scissor rect of the interaction surfaces&quot;)</argsstring>
        <name>r_useShadowSurfaceScissor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="66" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a09d1b732a1e24906d723f1287da91447" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useInteractionTable(&quot;r_useInteractionTable&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;create a full entityDefs * lightDefs table to make finding interactions faster&quot;)</definition>
        <argsstring>(&quot;r_useInteractionTable&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;create a full entityDefs * lightDefs table to make finding interactions faster&quot;)</argsstring>
        <name>r_useInteractionTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="67" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a8dc01fae11142a72087a6c0e56e74a27" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useTurboShadow(&quot;r_useTurboShadow&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;use the infinite projection with W technique for dynamic shadows&quot;)</definition>
        <argsstring>(&quot;r_useTurboShadow&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;use the infinite projection with W technique for dynamic shadows&quot;)</argsstring>
        <name>r_useTurboShadow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="68" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1aa61c133551514bbd5271005ce3259119" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useTwoSidedStencil(&quot;r_useTwoSidedStencil&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;do stencil shadows in one pass with different ops on each side&quot;)</definition>
        <argsstring>(&quot;r_useTwoSidedStencil&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;do stencil shadows in one pass with different ops on each side&quot;)</argsstring>
        <name>r_useTwoSidedStencil</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="69" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1abf213cf50d7f84a4011a50dfdd6e7de4" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useDeferredTangents(&quot;r_useDeferredTangents&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;defer tangents calculations after deform&quot;)</definition>
        <argsstring>(&quot;r_useDeferredTangents&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;defer tangents calculations after deform&quot;)</argsstring>
        <name>r_useDeferredTangents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="70" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a1b57a98e481c004b926aef59694ecd4b" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useCachedDynamicModels(&quot;r_useCachedDynamicModels&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;cache snapshots of dynamic models&quot;)</definition>
        <argsstring>(&quot;r_useCachedDynamicModels&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;cache snapshots of dynamic models&quot;)</argsstring>
        <name>r_useCachedDynamicModels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="71" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a85425562ae9f670286cd886491fcb9f4" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useVertexBuffers(&quot;r_useVertexBuffers&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;use ARB_vertex_buffer_object for vertexes&quot;, 0, 1, idCmdSystem::ArgCompletion_Integer&lt; 0, 1 &gt;)</definition>
        <argsstring>(&quot;r_useVertexBuffers&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;use ARB_vertex_buffer_object for vertexes&quot;, 0, 1, idCmdSystem::ArgCompletion_Integer&lt; 0, 1 &gt;)</argsstring>
        <name>r_useVertexBuffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="73" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a96c7436f6ac63ed5a1f9ab06b571e3d8" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useIndexBuffers(&quot;r_useIndexBuffers&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_ARCHIVE|CVAR_INTEGER,&quot;use ARB_vertex_buffer_object for indexes&quot;, 0, 1, idCmdSystem::ArgCompletion_Integer&lt; 0, 1 &gt;)</definition>
        <argsstring>(&quot;r_useIndexBuffers&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_ARCHIVE|CVAR_INTEGER,&quot;use ARB_vertex_buffer_object for indexes&quot;, 0, 1, idCmdSystem::ArgCompletion_Integer&lt; 0, 1 &gt;)</argsstring>
        <name>r_useIndexBuffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="74" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a965edade4cd401815680c193653d0302" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useStateCaching(&quot;r_useStateCaching&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;avoid redundant state changes in GL_*() calls&quot;)</definition>
        <argsstring>(&quot;r_useStateCaching&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;avoid redundant state changes in GL_*() calls&quot;)</argsstring>
        <name>r_useStateCaching</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="76" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a023d0f600eb7addff64fc2f435c34b5f" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useInfiniteFarZ(&quot;r_useInfiniteFarZ&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;use the no-far-clip-plane trick&quot;)</definition>
        <argsstring>(&quot;r_useInfiniteFarZ&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;use the no-far-clip-plane trick&quot;)</argsstring>
        <name>r_useInfiniteFarZ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="77" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a29b18db0efe8d4e8d8d62662ca02b2b9" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_znear(&quot;r_znear&quot;,&quot;3&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;near Z clip plane distance&quot;, 0.001f, 200.0f)</definition>
        <argsstring>(&quot;r_znear&quot;,&quot;3&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;near Z clip plane distance&quot;, 0.001f, 200.0f)</argsstring>
        <name>r_znear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="79" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a2ef438aab7118cc21eec254990a70c81" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_ignoreGLErrors(&quot;r_ignoreGLErrors&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;ignore GL errors&quot;)</definition>
        <argsstring>(&quot;r_ignoreGLErrors&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;ignore GL errors&quot;)</argsstring>
        <name>r_ignoreGLErrors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="81" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a2745e7bed24cded951e13f0ab66b56ea" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_finish(&quot;r_finish&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;force a call to glFinish() every frame&quot;)</definition>
        <argsstring>(&quot;r_finish&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;force a call to glFinish() every frame&quot;)</argsstring>
        <name>r_finish</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="82" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a47ecf7cb81ced5563d77b70c06c1bf24" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_swapInterval(&quot;r_swapInterval&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_ARCHIVE|CVAR_INTEGER,&quot;changes wglSwapIntarval&quot;)</definition>
        <argsstring>(&quot;r_swapInterval&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_ARCHIVE|CVAR_INTEGER,&quot;changes wglSwapIntarval&quot;)</argsstring>
        <name>r_swapInterval</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="83" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ad3089d767bc3d8524dd0fe69a8dd89a0" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_gamma(&quot;r_gamma&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_ARCHIVE|CVAR_FLOAT,&quot;changes gamma tables&quot;, 0.5f, 3.0f)</definition>
        <argsstring>(&quot;r_gamma&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_ARCHIVE|CVAR_FLOAT,&quot;changes gamma tables&quot;, 0.5f, 3.0f)</argsstring>
        <name>r_gamma</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="85" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a09d676f2f0d22f73023149a5ec95395d" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_brightness(&quot;r_brightness&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_ARCHIVE|CVAR_FLOAT,&quot;changes gamma tables&quot;, 0.5f, 2.0f)</definition>
        <argsstring>(&quot;r_brightness&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_ARCHIVE|CVAR_FLOAT,&quot;changes gamma tables&quot;, 0.5f, 2.0f)</argsstring>
        <name>r_brightness</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="86" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a5c10f71c32e826448bc917b0b5e0364a" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_renderer(&quot;r_renderer&quot;,&quot;best&quot;, CVAR_RENDERER|CVAR_ARCHIVE,&quot;hardware specific renderer path to use&quot;, r_rendererArgs, idCmdSystem::ArgCompletion_String&lt; r_rendererArgs &gt;)</definition>
        <argsstring>(&quot;r_renderer&quot;,&quot;best&quot;, CVAR_RENDERER|CVAR_ARCHIVE,&quot;hardware specific renderer path to use&quot;, r_rendererArgs, idCmdSystem::ArgCompletion_String&lt; r_rendererArgs &gt;)</argsstring>
        <name>r_renderer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="88" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a2123219441c54045490a6b91bff157dc" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_jitter(&quot;r_jitter&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;randomly subpixel jitter the projection matrix&quot;)</definition>
        <argsstring>(&quot;r_jitter&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;randomly subpixel jitter the projection matrix&quot;)</argsstring>
        <name>r_jitter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="90" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a62531f6f8854750566f10d280bb216d9" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipSuppress(&quot;r_skipSuppress&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;ignore the per-view suppressions&quot;)</definition>
        <argsstring>(&quot;r_skipSuppress&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;ignore the per-view suppressions&quot;)</argsstring>
        <name>r_skipSuppress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="92" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a64d5659c73f40547df5c5c95961ee777" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipPostProcess(&quot;r_skipPostProcess&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;skip all post-process renderings&quot;)</definition>
        <argsstring>(&quot;r_skipPostProcess&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;skip all post-process renderings&quot;)</argsstring>
        <name>r_skipPostProcess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="93" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a67e6eefc4debcbd96db89e2508657ba9" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipLightScale(&quot;r_skipLightScale&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;don&apos;t do any post-interaction light scaling, makes things dim on low-dynamic range cards&quot;)</definition>
        <argsstring>(&quot;r_skipLightScale&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;don&apos;t do any post-interaction light scaling, makes things dim on low-dynamic range cards&quot;)</argsstring>
        <name>r_skipLightScale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="94" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a51d1bfc48de90fd4c158f11d28f9e8bf" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipInteractions(&quot;r_skipInteractions&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;skip all light/surface interaction drawing&quot;)</definition>
        <argsstring>(&quot;r_skipInteractions&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;skip all light/surface interaction drawing&quot;)</argsstring>
        <name>r_skipInteractions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="95" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ab7f6a72500a32541a8bb846a055bbf33" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipDynamicTextures(&quot;r_skipDynamicTextures&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;don&apos;t dynamically create textures&quot;)</definition>
        <argsstring>(&quot;r_skipDynamicTextures&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;don&apos;t dynamically create textures&quot;)</argsstring>
        <name>r_skipDynamicTextures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="96" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ae2052783f79d657be2720e9992665fb0" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipCopyTexture(&quot;r_skipCopyTexture&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;do all rendering, but don&apos;t actually copyTexSubImage2D&quot;)</definition>
        <argsstring>(&quot;r_skipCopyTexture&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;do all rendering, but don&apos;t actually copyTexSubImage2D&quot;)</argsstring>
        <name>r_skipCopyTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="97" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a8e46cef41cd171091fff762c39408203" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipBackEnd(&quot;r_skipBackEnd&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;don&apos;t draw anything&quot;)</definition>
        <argsstring>(&quot;r_skipBackEnd&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;don&apos;t draw anything&quot;)</argsstring>
        <name>r_skipBackEnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="98" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a11008d34923c1c02e8ecfd5eab4adc98" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipRender(&quot;r_skipRender&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;skip 3D rendering, but pass 2D&quot;)</definition>
        <argsstring>(&quot;r_skipRender&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;skip 3D rendering, but pass 2D&quot;)</argsstring>
        <name>r_skipRender</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="99" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a7b3f376af2d43f1b6175936594d1e465" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipRenderContext(&quot;r_skipRenderContext&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;NULL the rendering context during backend 3D rendering&quot;)</definition>
        <argsstring>(&quot;r_skipRenderContext&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;NULL the rendering context during backend 3D rendering&quot;)</argsstring>
        <name>r_skipRenderContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="100" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ae6180a8d2068b8bdb63d29a427b0075b" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipTranslucent(&quot;r_skipTranslucent&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;skip the translucent interaction rendering&quot;)</definition>
        <argsstring>(&quot;r_skipTranslucent&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;skip the translucent interaction rendering&quot;)</argsstring>
        <name>r_skipTranslucent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="101" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a210d811faf51616c73aacb5ac5ebda57" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipAmbient(&quot;r_skipAmbient&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;bypasses all non-interaction drawing&quot;)</definition>
        <argsstring>(&quot;r_skipAmbient&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;bypasses all non-interaction drawing&quot;)</argsstring>
        <name>r_skipAmbient</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="102" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a49d4e08d922661f6c02de4c8676debe5" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipNewAmbient(&quot;r_skipNewAmbient&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL|CVAR_ARCHIVE,&quot;bypasses all vertex/fragment program ambient drawing&quot;)</definition>
        <argsstring>(&quot;r_skipNewAmbient&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL|CVAR_ARCHIVE,&quot;bypasses all vertex/fragment program ambient drawing&quot;)</argsstring>
        <name>r_skipNewAmbient</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="103" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1aec0b0f26d3f76fd87ca52b52ef00439c" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipBlendLights(&quot;r_skipBlendLights&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;skip all blend lights&quot;)</definition>
        <argsstring>(&quot;r_skipBlendLights&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;skip all blend lights&quot;)</argsstring>
        <name>r_skipBlendLights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="104" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a0370ce22280c698b72a965aa7ea8ef13" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipFogLights(&quot;r_skipFogLights&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;skip all fog lights&quot;)</definition>
        <argsstring>(&quot;r_skipFogLights&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;skip all fog lights&quot;)</argsstring>
        <name>r_skipFogLights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="105" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1aec325ea09d6d935c1d0a552732eec061" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipDeforms(&quot;r_skipDeforms&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;leave all deform materials in their original state&quot;)</definition>
        <argsstring>(&quot;r_skipDeforms&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;leave all deform materials in their original state&quot;)</argsstring>
        <name>r_skipDeforms</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="106" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1abfcfd64c380e5fa16377e7b2798fb657" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipFrontEnd(&quot;r_skipFrontEnd&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;bypasses all front end work, but 2D gui rendering still draws&quot;)</definition>
        <argsstring>(&quot;r_skipFrontEnd&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;bypasses all front end work, but 2D gui rendering still draws&quot;)</argsstring>
        <name>r_skipFrontEnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="107" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1af7c2690818b1d65a3aaa9e59eef593ef" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipUpdates(&quot;r_skipUpdates&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;1 = don&apos;t accept any entity or light updates, making everything static&quot;)</definition>
        <argsstring>(&quot;r_skipUpdates&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;1 = don&apos;t accept any entity or light updates, making everything static&quot;)</argsstring>
        <name>r_skipUpdates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="108" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1aaabfa81829b1da74a74df233d2b061fc" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipOverlays(&quot;r_skipOverlays&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;skip overlay surfaces&quot;)</definition>
        <argsstring>(&quot;r_skipOverlays&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;skip overlay surfaces&quot;)</argsstring>
        <name>r_skipOverlays</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="109" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a714643de785e281c75ebb170e1b0c879" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipSpecular(&quot;r_skipSpecular&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL|CVAR_CHEAT|CVAR_ARCHIVE,&quot;use black for specular1&quot;)</definition>
        <argsstring>(&quot;r_skipSpecular&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL|CVAR_CHEAT|CVAR_ARCHIVE,&quot;use black for specular1&quot;)</argsstring>
        <name>r_skipSpecular</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="110" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a00768f05617ffd5332a4493fe2612e19" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipBump(&quot;r_skipBump&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL|CVAR_ARCHIVE,&quot;uses a flat surface instead of the bump map&quot;)</definition>
        <argsstring>(&quot;r_skipBump&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL|CVAR_ARCHIVE,&quot;uses a flat surface instead of the bump map&quot;)</argsstring>
        <name>r_skipBump</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="111" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1afd008c9e5d87438a486e6f0978f4ab79" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipDiffuse(&quot;r_skipDiffuse&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;use black for diffuse&quot;)</definition>
        <argsstring>(&quot;r_skipDiffuse&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;use black for diffuse&quot;)</argsstring>
        <name>r_skipDiffuse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="112" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a9e508891a6ad3353fd1d65428e7c23e5" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipROQ(&quot;r_skipROQ&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;skip ROQ decoding&quot;)</definition>
        <argsstring>(&quot;r_skipROQ&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;skip ROQ decoding&quot;)</argsstring>
        <name>r_skipROQ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="113" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a3c35839bfd23ec2775c9d664ebca24e2" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_ignore(&quot;r_ignore&quot;,&quot;0&quot;, CVAR_RENDERER,&quot;used for random debugging without defining new vars&quot;)</definition>
        <argsstring>(&quot;r_ignore&quot;,&quot;0&quot;, CVAR_RENDERER,&quot;used for random debugging without defining new vars&quot;)</argsstring>
        <name>r_ignore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="115" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a3d5cdbf30a27804be00640bfb590f208" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_ignore2(&quot;r_ignore2&quot;,&quot;0&quot;, CVAR_RENDERER,&quot;used for random debugging without defining new vars&quot;)</definition>
        <argsstring>(&quot;r_ignore2&quot;,&quot;0&quot;, CVAR_RENDERER,&quot;used for random debugging without defining new vars&quot;)</argsstring>
        <name>r_ignore2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="116" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a8fc5a0ab14f8b4ebeb7bf4739edae882" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_usePreciseTriangleInteractions(&quot;r_usePreciseTriangleInteractions&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;1 = do winding clipping to determine if each ambiguous tri should be lit&quot;)</definition>
        <argsstring>(&quot;r_usePreciseTriangleInteractions&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;1 = do winding clipping to determine if each ambiguous tri should be lit&quot;)</argsstring>
        <name>r_usePreciseTriangleInteractions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="117" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a9bd56391c7b385c02ae10fdeb4d09cf4" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useCulling(&quot;r_useCulling&quot;,&quot;2&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;0 = none, 1 = sphere, 2 = sphere + box&quot;, 0, 2, idCmdSystem::ArgCompletion_Integer&lt; 0, 2 &gt;)</definition>
        <argsstring>(&quot;r_useCulling&quot;,&quot;2&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;0 = none, 1 = sphere, 2 = sphere + box&quot;, 0, 2, idCmdSystem::ArgCompletion_Integer&lt; 0, 2 &gt;)</argsstring>
        <name>r_useCulling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="118" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ab00891788c2200aff1650d62ff8bbe1e" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useLightCulling(&quot;r_useLightCulling&quot;,&quot;3&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;0 = none, 1 = box, 2 = exact clip of polyhedron faces, 3 = also areas&quot;, 0, 3, idCmdSystem::ArgCompletion_Integer&lt; 0, 3 &gt;)</definition>
        <argsstring>(&quot;r_useLightCulling&quot;,&quot;3&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;0 = none, 1 = box, 2 = exact clip of polyhedron faces, 3 = also areas&quot;, 0, 3, idCmdSystem::ArgCompletion_Integer&lt; 0, 3 &gt;)</argsstring>
        <name>r_useLightCulling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="119" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a8686d32cf31037250eae27a50a2ee2fa" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useLightScissors(&quot;r_useLightScissors&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;1 = use custom scissor rectangle for each light&quot;)</definition>
        <argsstring>(&quot;r_useLightScissors&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;1 = use custom scissor rectangle for each light&quot;)</argsstring>
        <name>r_useLightScissors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="120" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a5e75b1b5bc00299212c4062d89620f39" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useClippedLightScissors(&quot;r_useClippedLightScissors&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;0 = full screen when near clipped, 1 = exact when near clipped, 2 = exact always&quot;, 0, 2, idCmdSystem::ArgCompletion_Integer&lt; 0, 2 &gt;)</definition>
        <argsstring>(&quot;r_useClippedLightScissors&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;0 = full screen when near clipped, 1 = exact when near clipped, 2 = exact always&quot;, 0, 2, idCmdSystem::ArgCompletion_Integer&lt; 0, 2 &gt;)</argsstring>
        <name>r_useClippedLightScissors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="121" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a46f1b4f5137a88bb0edb4a4d8e2bafd3" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useEntityCulling(&quot;r_useEntityCulling&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;0 = none, 1 = box&quot;)</definition>
        <argsstring>(&quot;r_useEntityCulling&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;0 = none, 1 = box&quot;)</argsstring>
        <name>r_useEntityCulling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="122" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1aa84c448fb9abba1222f2a9d9d13caa14" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useEntityScissors(&quot;r_useEntityScissors&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;1 = use custom scissor rectangle for each entity&quot;)</definition>
        <argsstring>(&quot;r_useEntityScissors&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;1 = use custom scissor rectangle for each entity&quot;)</argsstring>
        <name>r_useEntityScissors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="123" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1aaaf0ee42a87bbef091f0d4731f4de1c3" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useInteractionCulling(&quot;r_useInteractionCulling&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;1 = cull interactions&quot;)</definition>
        <argsstring>(&quot;r_useInteractionCulling&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;1 = cull interactions&quot;)</argsstring>
        <name>r_useInteractionCulling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="124" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a90008e539a001ee6c5e58599aeed6e2c" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useInteractionScissors(&quot;r_useInteractionScissors&quot;,&quot;2&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;1 = use a custom scissor rectangle for each shadow interaction, 2 = also crop using portal scissors&quot;,-2, 2, idCmdSystem::ArgCompletion_Integer&lt;-2, 2 &gt;)</definition>
        <argsstring>(&quot;r_useInteractionScissors&quot;,&quot;2&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;1 = use a custom scissor rectangle for each shadow interaction, 2 = also crop using portal scissors&quot;,-2, 2, idCmdSystem::ArgCompletion_Integer&lt;-2, 2 &gt;)</argsstring>
        <name>r_useInteractionScissors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="125" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a7ed7ca543afd9fad45c631d777bba49b" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useShadowCulling(&quot;r_useShadowCulling&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;try to cull shadows from partially visible lights&quot;)</definition>
        <argsstring>(&quot;r_useShadowCulling&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;try to cull shadows from partially visible lights&quot;)</argsstring>
        <name>r_useShadowCulling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="126" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ae3961ef082accbe1c80e7c5085d4bf5a" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useFrustumFarDistance(&quot;r_useFrustumFarDistance&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;if != 0 force the view frustum far distance to this distance&quot;)</definition>
        <argsstring>(&quot;r_useFrustumFarDistance&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;if != 0 force the view frustum far distance to this distance&quot;)</argsstring>
        <name>r_useFrustumFarDistance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="127" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1abf3ae53d2274244694b0ec0ea33b5f35" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_logFile(&quot;r_logFile&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;number of frames to emit GL logs&quot;)</definition>
        <argsstring>(&quot;r_logFile&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;number of frames to emit GL logs&quot;)</argsstring>
        <name>r_logFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="128" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a72498c49728ef92183333f1ff2208c84" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_clear(&quot;r_clear&quot;,&quot;2&quot;, CVAR_RENDERER,&quot;force screen clear every frame, 1 = purple, 2 = black, &apos;r g b&apos; = custom&quot;)</definition>
        <argsstring>(&quot;r_clear&quot;,&quot;2&quot;, CVAR_RENDERER,&quot;force screen clear every frame, 1 = purple, 2 = black, &apos;r g b&apos; = custom&quot;)</argsstring>
        <name>r_clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="129" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ae88fe51e6f0fc6d5a6a3f2f9d5a2d922" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_offsetFactor(&quot;r_offsetfactor&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;polygon offset parameter&quot;)</definition>
        <argsstring>(&quot;r_offsetfactor&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;polygon offset parameter&quot;)</argsstring>
        <name>r_offsetFactor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="130" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1aae8c834b3a539d2ebe595d519a893d3b" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_offsetUnits(&quot;r_offsetunits&quot;,&quot;-600&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;polygon offset parameter&quot;)</definition>
        <argsstring>(&quot;r_offsetunits&quot;,&quot;-600&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;polygon offset parameter&quot;)</argsstring>
        <name>r_offsetUnits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="131" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a09293472e6bca7614aec2b31fda51b0a" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_shadowPolygonOffset(&quot;r_shadowPolygonOffset&quot;,&quot;-1&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;bias value added to depth test for stencil shadow drawing&quot;)</definition>
        <argsstring>(&quot;r_shadowPolygonOffset&quot;,&quot;-1&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;bias value added to depth test for stencil shadow drawing&quot;)</argsstring>
        <name>r_shadowPolygonOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="132" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1aef6f812dc14538cd42c0af77fbc1666f" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_shadowPolygonFactor(&quot;r_shadowPolygonFactor&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;scale value for stencil shadow drawing&quot;)</definition>
        <argsstring>(&quot;r_shadowPolygonFactor&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;scale value for stencil shadow drawing&quot;)</argsstring>
        <name>r_shadowPolygonFactor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="133" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a00bd56eb741b8d4530dcbe8636c06896" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_frontBuffer(&quot;r_frontBuffer&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;draw to front buffer for debugging&quot;)</definition>
        <argsstring>(&quot;r_frontBuffer&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;draw to front buffer for debugging&quot;)</argsstring>
        <name>r_frontBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="134" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a294d98fe8bf9318fb6f8888b29d1748f" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipSubviews(&quot;r_skipSubviews&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;1 = don&apos;t render any gui elements on surfaces&quot;)</definition>
        <argsstring>(&quot;r_skipSubviews&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;1 = don&apos;t render any gui elements on surfaces&quot;)</argsstring>
        <name>r_skipSubviews</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="135" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ae8e6fdc5c158873cec75e62e398265ef" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipGuiShaders(&quot;r_skipGuiShaders&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;1 = skip all gui elements on surfaces, 2 = skip drawing but still handle events, 3 = draw but skip events&quot;, 0, 3, idCmdSystem::ArgCompletion_Integer&lt; 0, 3 &gt;)</definition>
        <argsstring>(&quot;r_skipGuiShaders&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;1 = skip all gui elements on surfaces, 2 = skip drawing but still handle events, 3 = draw but skip events&quot;, 0, 3, idCmdSystem::ArgCompletion_Integer&lt; 0, 3 &gt;)</argsstring>
        <name>r_skipGuiShaders</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="136" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ace13e13263ab822c9824603a5c3f487a" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipParticles(&quot;r_skipParticles&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;1 = skip all particle systems&quot;, 0, 1, idCmdSystem::ArgCompletion_Integer&lt; 0, 1 &gt;)</definition>
        <argsstring>(&quot;r_skipParticles&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;1 = skip all particle systems&quot;, 0, 1, idCmdSystem::ArgCompletion_Integer&lt; 0, 1 &gt;)</argsstring>
        <name>r_skipParticles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="137" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1aab2c723699d309095ab38379e89cb530" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_subviewOnly(&quot;r_subviewOnly&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;1 = don&apos;t render main view, allowing subviews to be debugged&quot;)</definition>
        <argsstring>(&quot;r_subviewOnly&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;1 = don&apos;t render main view, allowing subviews to be debugged&quot;)</argsstring>
        <name>r_subviewOnly</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="138" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a9e79a846de6f3d85db35686efb841d7a" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_shadows(&quot;r_shadows&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL|CVAR_ARCHIVE,&quot;enable shadows&quot;)</definition>
        <argsstring>(&quot;r_shadows&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL|CVAR_ARCHIVE,&quot;enable shadows&quot;)</argsstring>
        <name>r_shadows</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="139" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1abe5e263eeea565cd48135dc6c93284a2" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_testARBProgram(&quot;r_testARBProgram&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;experiment with vertex/fragment programs&quot;)</definition>
        <argsstring>(&quot;r_testARBProgram&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;experiment with vertex/fragment programs&quot;)</argsstring>
        <name>r_testARBProgram</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="140" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a24b9fa86c60f2525720484849973d696" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_testGamma(&quot;r_testGamma&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;if &gt; 0 draw a grid pattern to test gamma levels&quot;, 0, 195)</definition>
        <argsstring>(&quot;r_testGamma&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;if &gt; 0 draw a grid pattern to test gamma levels&quot;, 0, 195)</argsstring>
        <name>r_testGamma</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="141" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a33d4217477f6bb35bf0e842b9773fc3d" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_testGammaBias(&quot;r_testGammaBias&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;if &gt; 0 draw a grid pattern to test gamma levels&quot;)</definition>
        <argsstring>(&quot;r_testGammaBias&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;if &gt; 0 draw a grid pattern to test gamma levels&quot;)</argsstring>
        <name>r_testGammaBias</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="142" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1adb67887bc22790fd6e183eb5afaaedf9" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_testStepGamma(&quot;r_testStepGamma&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;if &gt; 0 draw a grid pattern to test gamma levels&quot;)</definition>
        <argsstring>(&quot;r_testStepGamma&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;if &gt; 0 draw a grid pattern to test gamma levels&quot;)</argsstring>
        <name>r_testStepGamma</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="143" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a5de283f886bc3babc613b15f4c800889" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_lightScale(&quot;r_lightScale&quot;,&quot;2&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;all light intensities are multiplied by this&quot;)</definition>
        <argsstring>(&quot;r_lightScale&quot;,&quot;2&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;all light intensities are multiplied by this&quot;)</argsstring>
        <name>r_lightScale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="144" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a8b0797e52616877dcef9907b0da72fa5" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_lightSourceRadius(&quot;r_lightSourceRadius&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;for soft-shadow sampling&quot;)</definition>
        <argsstring>(&quot;r_lightSourceRadius&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;for soft-shadow sampling&quot;)</argsstring>
        <name>r_lightSourceRadius</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="145" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1aa5a4ea9e3056436cebe779ea812aa2ef" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_flareSize(&quot;r_flareSize&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;scale the flare deforms from the material def&quot;)</definition>
        <argsstring>(&quot;r_flareSize&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;scale the flare deforms from the material def&quot;)</argsstring>
        <name>r_flareSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="146" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a7fbdfd2ef563165e91a71367f298cd90" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useExternalShadows(&quot;r_useExternalShadows&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;1 = skip drawing caps when outside the light volume, 2 = force to no caps for testing&quot;, 0, 2, idCmdSystem::ArgCompletion_Integer&lt; 0, 2 &gt;)</definition>
        <argsstring>(&quot;r_useExternalShadows&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;1 = skip drawing caps when outside the light volume, 2 = force to no caps for testing&quot;, 0, 2, idCmdSystem::ArgCompletion_Integer&lt; 0, 2 &gt;)</argsstring>
        <name>r_useExternalShadows</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="148" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ae773bea639411bfabef68fc899c3f281" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useOptimizedShadows(&quot;r_useOptimizedShadows&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;use the dmap generated static shadow volumes&quot;)</definition>
        <argsstring>(&quot;r_useOptimizedShadows&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;use the dmap generated static shadow volumes&quot;)</argsstring>
        <name>r_useOptimizedShadows</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="149" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a1ae2e2f9cd8fad621fccf462aaae0efe" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useScissor(&quot;r_useScissor&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;scissor clip as portals and lights are processed&quot;)</definition>
        <argsstring>(&quot;r_useScissor&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;scissor clip as portals and lights are processed&quot;)</argsstring>
        <name>r_useScissor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="150" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a022254aa474219b601f58f2b5a62e39f" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useCombinerDisplayLists(&quot;r_useCombinerDisplayLists&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL|CVAR_NOCHEAT,&quot;put all nvidia register combiner programming in display lists&quot;)</definition>
        <argsstring>(&quot;r_useCombinerDisplayLists&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL|CVAR_NOCHEAT,&quot;put all nvidia register combiner programming in display lists&quot;)</argsstring>
        <name>r_useCombinerDisplayLists</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="151" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a41701743e4f4d0f480763aa02254bcb2" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useDepthBoundsTest(&quot;r_useDepthBoundsTest&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;use depth bounds test to reduce shadow fill&quot;)</definition>
        <argsstring>(&quot;r_useDepthBoundsTest&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;use depth bounds test to reduce shadow fill&quot;)</argsstring>
        <name>r_useDepthBoundsTest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="152" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a8a6db2602e2a04aa8ffbd30187b7a49f" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_screenFraction(&quot;r_screenFraction&quot;,&quot;100&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;for testing fill rate, the resolution of the entire screen can be changed&quot;)</definition>
        <argsstring>(&quot;r_screenFraction&quot;,&quot;100&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;for testing fill rate, the resolution of the entire screen can be changed&quot;)</argsstring>
        <name>r_screenFraction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="154" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a15167b4f01b9a2f25ae0b626aaaeba24" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_demonstrateBug(&quot;r_demonstrateBug&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;used during development to show IHV&apos;s their problems&quot;)</definition>
        <argsstring>(&quot;r_demonstrateBug&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;used during development to show IHV&apos;s their problems&quot;)</argsstring>
        <name>r_demonstrateBug</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="155" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a38bd042039290e049cef844452053da6" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_usePortals(&quot;r_usePortals&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot; 1 = use portals to perform area culling, otherwise draw everything&quot;)</definition>
        <argsstring>(&quot;r_usePortals&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot; 1 = use portals to perform area culling, otherwise draw everything&quot;)</argsstring>
        <name>r_usePortals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="156" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1afa071382ec70209d2113f2025b8f8b0f" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_singleLight(&quot;r_singleLight&quot;,&quot;-1&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;suppress all but one light&quot;)</definition>
        <argsstring>(&quot;r_singleLight&quot;,&quot;-1&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;suppress all but one light&quot;)</argsstring>
        <name>r_singleLight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="157" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a9462dbc2f855c1c5073deda3e4ddc9f2" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_singleEntity(&quot;r_singleEntity&quot;,&quot;-1&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;suppress all but one entity&quot;)</definition>
        <argsstring>(&quot;r_singleEntity&quot;,&quot;-1&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;suppress all but one entity&quot;)</argsstring>
        <name>r_singleEntity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="158" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a3e9624e7200a9edd51d8f1152fbaf1b7" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_singleSurface(&quot;r_singleSurface&quot;,&quot;-1&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;suppress all but one surface on each entity&quot;)</definition>
        <argsstring>(&quot;r_singleSurface&quot;,&quot;-1&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;suppress all but one surface on each entity&quot;)</argsstring>
        <name>r_singleSurface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="159" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ad5158de1ed837b75a28d0d0ad1f26b8f" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_singleArea(&quot;r_singleArea&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;only draw the portal area the view is actually in&quot;)</definition>
        <argsstring>(&quot;r_singleArea&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;only draw the portal area the view is actually in&quot;)</argsstring>
        <name>r_singleArea</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="160" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a78411bc1167f2843aaedb5b0e0a0f409" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_forceLoadImages(&quot;r_forceLoadImages&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_ARCHIVE|CVAR_BOOL,&quot;draw all images to screen after registration&quot;)</definition>
        <argsstring>(&quot;r_forceLoadImages&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_ARCHIVE|CVAR_BOOL,&quot;draw all images to screen after registration&quot;)</argsstring>
        <name>r_forceLoadImages</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="161" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1aa28d3087ddd3a25bafc8e274707413d9" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_orderIndexes(&quot;r_orderIndexes&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;perform index reorganization to optimize vertex use&quot;)</definition>
        <argsstring>(&quot;r_orderIndexes&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;perform index reorganization to optimize vertex use&quot;)</argsstring>
        <name>r_orderIndexes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="162" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1aec63b1ee222f0899c3c9b5ddad13b0d6" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_lightAllBackFaces(&quot;r_lightAllBackFaces&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;light all the back faces, even when they would be shadowed&quot;)</definition>
        <argsstring>(&quot;r_lightAllBackFaces&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;light all the back faces, even when they would be shadowed&quot;)</argsstring>
        <name>r_lightAllBackFaces</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="163" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a4655a412beeba38ac5c05ad479f5a805" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showPortals(&quot;r_showPortals&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;draw portal outlines in color based on passed / not passed&quot;)</definition>
        <argsstring>(&quot;r_showPortals&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;draw portal outlines in color based on passed / not passed&quot;)</argsstring>
        <name>r_showPortals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="166" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1aea3e2b06e1efda6322725fa48ceb2cd0" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showUnsmoothedTangents(&quot;r_showUnsmoothedTangents&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;if 1, put all nvidia register combiner programming in display lists&quot;)</definition>
        <argsstring>(&quot;r_showUnsmoothedTangents&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;if 1, put all nvidia register combiner programming in display lists&quot;)</argsstring>
        <name>r_showUnsmoothedTangents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="167" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a9a0cc9e3798497e065b236a74da44f4e" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showSilhouette(&quot;r_showSilhouette&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;highlight edges that are casting shadow planes&quot;)</definition>
        <argsstring>(&quot;r_showSilhouette&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;highlight edges that are casting shadow planes&quot;)</argsstring>
        <name>r_showSilhouette</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="168" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a0ee83e65041bb83afddd79f16c2a1d6f" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showVertexColor(&quot;r_showVertexColor&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;draws all triangles with the solid vertex color&quot;)</definition>
        <argsstring>(&quot;r_showVertexColor&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;draws all triangles with the solid vertex color&quot;)</argsstring>
        <name>r_showVertexColor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="169" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1aa8eea6078dbf50a9c2d3fa1599924704" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showUpdates(&quot;r_showUpdates&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;report entity and light updates and ref counts&quot;)</definition>
        <argsstring>(&quot;r_showUpdates&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;report entity and light updates and ref counts&quot;)</argsstring>
        <name>r_showUpdates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="170" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a59579299921c40b6985fa62ca26efcf2" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showDemo(&quot;r_showDemo&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;report reads and writes to the demo file&quot;)</definition>
        <argsstring>(&quot;r_showDemo&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;report reads and writes to the demo file&quot;)</argsstring>
        <name>r_showDemo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="171" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a7a0305c3d7ddf802949930e24f6726a9" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showDynamic(&quot;r_showDynamic&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;report stats on dynamic surface generation&quot;)</definition>
        <argsstring>(&quot;r_showDynamic&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;report stats on dynamic surface generation&quot;)</argsstring>
        <name>r_showDynamic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="172" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ae61ed2e0d6ee89bb896873ee6b452604" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showLightScale(&quot;r_showLightScale&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;report the scale factor applied to drawing for overbrights&quot;)</definition>
        <argsstring>(&quot;r_showLightScale&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;report the scale factor applied to drawing for overbrights&quot;)</argsstring>
        <name>r_showLightScale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="173" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a0fa3eadcfcf6799568c4c551cb42f311" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showDefs(&quot;r_showDefs&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;report the number of modeDefs and lightDefs in view&quot;)</definition>
        <argsstring>(&quot;r_showDefs&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;report the number of modeDefs and lightDefs in view&quot;)</argsstring>
        <name>r_showDefs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="174" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ae44d0d04509f855ffccfaf7011e7260c" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showTrace(&quot;r_showTrace&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;show the intersection of an eye trace with the world&quot;, idCmdSystem::ArgCompletion_Integer&lt; 0, 2 &gt;)</definition>
        <argsstring>(&quot;r_showTrace&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;show the intersection of an eye trace with the world&quot;, idCmdSystem::ArgCompletion_Integer&lt; 0, 2 &gt;)</argsstring>
        <name>r_showTrace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="175" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a3d5f2f10eb919a67a295a5ee77e088fa" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showIntensity(&quot;r_showIntensity&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;draw the screen colors based on intensity, red = 0, green = 128, blue = 255&quot;)</definition>
        <argsstring>(&quot;r_showIntensity&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;draw the screen colors based on intensity, red = 0, green = 128, blue = 255&quot;)</argsstring>
        <name>r_showIntensity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="176" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1af6514dfdcbcd732c7a83cdd14cd38fd9" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showImages(&quot;r_showImages&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;1 = show all images instead of rendering, 2 = show in proportional size&quot;, 0, 2, idCmdSystem::ArgCompletion_Integer&lt; 0, 2 &gt;)</definition>
        <argsstring>(&quot;r_showImages&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;1 = show all images instead of rendering, 2 = show in proportional size&quot;, 0, 2, idCmdSystem::ArgCompletion_Integer&lt; 0, 2 &gt;)</argsstring>
        <name>r_showImages</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="177" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a8ec2b58d154336e9819497232346587f" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showSmp(&quot;r_showSmp&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;show which end (front or back) is blocking&quot;)</definition>
        <argsstring>(&quot;r_showSmp&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;show which end (front or back) is blocking&quot;)</argsstring>
        <name>r_showSmp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="178" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ab31781aa9f4b9391f9ceb9c34a073c9a" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showLights(&quot;r_showLights&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;1 = just print volumes numbers, highlighting ones covering the view, 2 = also draw planes of each volume, 3 = also draw edges of each volume&quot;, 0, 3, idCmdSystem::ArgCompletion_Integer&lt; 0, 3 &gt;)</definition>
        <argsstring>(&quot;r_showLights&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;1 = just print volumes numbers, highlighting ones covering the view, 2 = also draw planes of each volume, 3 = also draw edges of each volume&quot;, 0, 3, idCmdSystem::ArgCompletion_Integer&lt; 0, 3 &gt;)</argsstring>
        <name>r_showLights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="179" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a21178228f2b8db87caa3d0a6bc3eb4ff" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showShadows(&quot;r_showShadows&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;1 = visualize the stencil shadow volumes, 2 = draw filled in&quot;, 0, 3, idCmdSystem::ArgCompletion_Integer&lt; 0, 3 &gt;)</definition>
        <argsstring>(&quot;r_showShadows&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;1 = visualize the stencil shadow volumes, 2 = draw filled in&quot;, 0, 3, idCmdSystem::ArgCompletion_Integer&lt; 0, 3 &gt;)</argsstring>
        <name>r_showShadows</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="180" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a873f59146bcf8379c859b1df29a84f1b" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showShadowCount(&quot;r_showShadowCount&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;colors screen based on shadow volume depth complexity, &gt;= 2 = print overdraw count based on stencil index values, 3 = only show turboshadows, 4 = only show static shadows&quot;, 0, 4, idCmdSystem::ArgCompletion_Integer&lt; 0, 4 &gt;)</definition>
        <argsstring>(&quot;r_showShadowCount&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;colors screen based on shadow volume depth complexity, &gt;= 2 = print overdraw count based on stencil index values, 3 = only show turboshadows, 4 = only show static shadows&quot;, 0, 4, idCmdSystem::ArgCompletion_Integer&lt; 0, 4 &gt;)</argsstring>
        <name>r_showShadowCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="181" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a2a2eb4eee8bde0d5a49430c26cbff013" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showLightScissors(&quot;r_showLightScissors&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;show light scissor rectangles&quot;)</definition>
        <argsstring>(&quot;r_showLightScissors&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;show light scissor rectangles&quot;)</argsstring>
        <name>r_showLightScissors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="182" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1abaf67c4e82147d3ba0045ad56c1edefd" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showEntityScissors(&quot;r_showEntityScissors&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;show entity scissor rectangles&quot;)</definition>
        <argsstring>(&quot;r_showEntityScissors&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;show entity scissor rectangles&quot;)</argsstring>
        <name>r_showEntityScissors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="183" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a5b9f172721db0e3d41afc49fce6241f8" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showInteractionFrustums(&quot;r_showInteractionFrustums&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;1 = show a frustum for each interaction, 2 = also draw lines to light origin, 3 = also draw entity bbox&quot;, 0, 3, idCmdSystem::ArgCompletion_Integer&lt; 0, 3 &gt;)</definition>
        <argsstring>(&quot;r_showInteractionFrustums&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;1 = show a frustum for each interaction, 2 = also draw lines to light origin, 3 = also draw entity bbox&quot;, 0, 3, idCmdSystem::ArgCompletion_Integer&lt; 0, 3 &gt;)</argsstring>
        <name>r_showInteractionFrustums</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="184" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a6226762792db40b3a71d150ca1e8349f" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showInteractionScissors(&quot;r_showInteractionScissors&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;1 = show screen rectangle which contains the interaction frustum, 2 = also draw construction lines&quot;, 0, 2, idCmdSystem::ArgCompletion_Integer&lt; 0, 2 &gt;)</definition>
        <argsstring>(&quot;r_showInteractionScissors&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;1 = show screen rectangle which contains the interaction frustum, 2 = also draw construction lines&quot;, 0, 2, idCmdSystem::ArgCompletion_Integer&lt; 0, 2 &gt;)</argsstring>
        <name>r_showInteractionScissors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="185" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a5723c90d13a2ec635aa8b1023cce13b9" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showLightCount(&quot;r_showLightCount&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;1 = colors surfaces based on light count, 2 = also count everything through walls, 3 = also print overdraw&quot;, 0, 3, idCmdSystem::ArgCompletion_Integer&lt; 0, 3 &gt;)</definition>
        <argsstring>(&quot;r_showLightCount&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;1 = colors surfaces based on light count, 2 = also count everything through walls, 3 = also print overdraw&quot;, 0, 3, idCmdSystem::ArgCompletion_Integer&lt; 0, 3 &gt;)</argsstring>
        <name>r_showLightCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="186" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a82b745b2531f4675862e6e1d61f0a0e7" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showViewEntitys(&quot;r_showViewEntitys&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;1 = displays the bounding boxes of all view models, 2 = print index numbers&quot;)</definition>
        <argsstring>(&quot;r_showViewEntitys&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;1 = displays the bounding boxes of all view models, 2 = print index numbers&quot;)</argsstring>
        <name>r_showViewEntitys</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="187" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a33f787e8b40d6ea6c16ea869435950e7" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showTris(&quot;r_showTris&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;enables wireframe rendering of the world, 1 = only draw visible ones, 2 = draw all front facing, 3 = draw all&quot;, 0, 3, idCmdSystem::ArgCompletion_Integer&lt; 0, 3 &gt;)</definition>
        <argsstring>(&quot;r_showTris&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;enables wireframe rendering of the world, 1 = only draw visible ones, 2 = draw all front facing, 3 = draw all&quot;, 0, 3, idCmdSystem::ArgCompletion_Integer&lt; 0, 3 &gt;)</argsstring>
        <name>r_showTris</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="188" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1aa45c691718dd72c9b4601a640abd8df0" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showSurfaceInfo(&quot;r_showSurfaceInfo&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;show surface material name under crosshair&quot;)</definition>
        <argsstring>(&quot;r_showSurfaceInfo&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;show surface material name under crosshair&quot;)</argsstring>
        <name>r_showSurfaceInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="189" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1aa2e28fe827d350f376b5d2aa2650933a" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showNormals(&quot;r_showNormals&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;draws wireframe normals&quot;)</definition>
        <argsstring>(&quot;r_showNormals&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;draws wireframe normals&quot;)</argsstring>
        <name>r_showNormals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="190" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1aae1e71f1ec7c8ea9c391e16b6978833e" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showMemory(&quot;r_showMemory&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;print frame memory utilization&quot;)</definition>
        <argsstring>(&quot;r_showMemory&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;print frame memory utilization&quot;)</argsstring>
        <name>r_showMemory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="191" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1aaa0d0ae3f6faabe77a409b9ac81836b3" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showCull(&quot;r_showCull&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;report sphere and box culling stats&quot;)</definition>
        <argsstring>(&quot;r_showCull&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;report sphere and box culling stats&quot;)</argsstring>
        <name>r_showCull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="192" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a87b57cf12493452951fd1934b4433e01" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showInteractions(&quot;r_showInteractions&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;report interaction generation activity&quot;)</definition>
        <argsstring>(&quot;r_showInteractions&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;report interaction generation activity&quot;)</argsstring>
        <name>r_showInteractions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="193" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a8a72a1b992035ac8a34c39bfe3fae713" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showDepth(&quot;r_showDepth&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;display the contents of the depth buffer and the depth range&quot;)</definition>
        <argsstring>(&quot;r_showDepth&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;display the contents of the depth buffer and the depth range&quot;)</argsstring>
        <name>r_showDepth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="194" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ac0015a65c0b21b3cff00e6820e0e0106" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showSurfaces(&quot;r_showSurfaces&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;report surface/light/shadow counts&quot;)</definition>
        <argsstring>(&quot;r_showSurfaces&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;report surface/light/shadow counts&quot;)</argsstring>
        <name>r_showSurfaces</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="195" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a37c10af780c040f5d51efb24b00296fc" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showPrimitives(&quot;r_showPrimitives&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;report drawsurf/index/vertex counts&quot;)</definition>
        <argsstring>(&quot;r_showPrimitives&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;report drawsurf/index/vertex counts&quot;)</argsstring>
        <name>r_showPrimitives</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="196" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a3c500ada1674711b8f77f246f08bb910" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showEdges(&quot;r_showEdges&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;draw the sil edges&quot;)</definition>
        <argsstring>(&quot;r_showEdges&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;draw the sil edges&quot;)</argsstring>
        <name>r_showEdges</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="197" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1abedd58f606c9c676cc08ee3abd7d2b81" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showTexturePolarity(&quot;r_showTexturePolarity&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;shade triangles by texture area polarity&quot;)</definition>
        <argsstring>(&quot;r_showTexturePolarity&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;shade triangles by texture area polarity&quot;)</argsstring>
        <name>r_showTexturePolarity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="198" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a163ccbacbec115beb7200bf021faf1a2" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showTangentSpace(&quot;r_showTangentSpace&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;shade triangles by tangent space, 1 = use 1st tangent vector, 2 = use 2nd tangent vector, 3 = use normal vector&quot;, 0, 3, idCmdSystem::ArgCompletion_Integer&lt; 0, 3 &gt;)</definition>
        <argsstring>(&quot;r_showTangentSpace&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;shade triangles by tangent space, 1 = use 1st tangent vector, 2 = use 2nd tangent vector, 3 = use normal vector&quot;, 0, 3, idCmdSystem::ArgCompletion_Integer&lt; 0, 3 &gt;)</argsstring>
        <name>r_showTangentSpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="199" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1aa5d837af7295fd2899ad798618956612" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showDominantTri(&quot;r_showDominantTri&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;draw lines from vertexes to center of dominant triangles&quot;)</definition>
        <argsstring>(&quot;r_showDominantTri&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;draw lines from vertexes to center of dominant triangles&quot;)</argsstring>
        <name>r_showDominantTri</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="200" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ad6d1a4af7f02be44edf0944d2250fe6d" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showAlloc(&quot;r_showAlloc&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;report alloc/free counts&quot;)</definition>
        <argsstring>(&quot;r_showAlloc&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;report alloc/free counts&quot;)</argsstring>
        <name>r_showAlloc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="201" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a304830f6571ba1ad6024c945c1472a63" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showTextureVectors(&quot;r_showTextureVectors&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot; if &gt; 0 draw each triangles texture (tangent) vectors&quot;)</definition>
        <argsstring>(&quot;r_showTextureVectors&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot; if &gt; 0 draw each triangles texture (tangent) vectors&quot;)</argsstring>
        <name>r_showTextureVectors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="202" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a8c85a448eadf3e0520e77179ea6839bc" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showOverDraw(&quot;r_showOverDraw&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;1 = geometry overdraw, 2 = light interaction overdraw, 3 = geometry and light interaction overdraw&quot;, 0, 3, idCmdSystem::ArgCompletion_Integer&lt; 0, 3 &gt;)</definition>
        <argsstring>(&quot;r_showOverDraw&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;1 = geometry overdraw, 2 = light interaction overdraw, 3 = geometry and light interaction overdraw&quot;, 0, 3, idCmdSystem::ArgCompletion_Integer&lt; 0, 3 &gt;)</argsstring>
        <name>r_showOverDraw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="203" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1acd621d5b338e97a2bba0dfc6575e7d7d" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_lockSurfaces(&quot;r_lockSurfaces&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;allow moving the view point without changing the composition of the scene, including culling&quot;)</definition>
        <argsstring>(&quot;r_lockSurfaces&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;allow moving the view point without changing the composition of the scene, including culling&quot;)</argsstring>
        <name>r_lockSurfaces</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="205" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a2d2110231e195302c62b21bcc5fe309c" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useEntityCallbacks(&quot;r_useEntityCallbacks&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;if 0, issue the callback immediately at update time, rather than defering&quot;)</definition>
        <argsstring>(&quot;r_useEntityCallbacks&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;if 0, issue the callback immediately at update time, rather than defering&quot;)</argsstring>
        <name>r_useEntityCallbacks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="206" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a4bac7a6b11e91d971b119aa86c858448" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showSkel(&quot;r_showSkel&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;draw the skeleton when model animates, 1 = draw model with skeleton, 2 = draw skeleton only&quot;, 0, 2, idCmdSystem::ArgCompletion_Integer&lt; 0, 2 &gt;)</definition>
        <argsstring>(&quot;r_showSkel&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;draw the skeleton when model animates, 1 = draw model with skeleton, 2 = draw skeleton only&quot;, 0, 2, idCmdSystem::ArgCompletion_Integer&lt; 0, 2 &gt;)</argsstring>
        <name>r_showSkel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="208" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a1deaf3a1426f0c7b29160c07dd14bc49" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_jointNameScale(&quot;r_jointNameScale&quot;,&quot;0.02&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;size of joint names when r_showskel is set to 1&quot;)</definition>
        <argsstring>(&quot;r_jointNameScale&quot;,&quot;0.02&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;size of joint names when r_showskel is set to 1&quot;)</argsstring>
        <name>r_jointNameScale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="209" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1af08c5df99e5b5ee6031cc695c982bc48" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_jointNameOffset(&quot;r_jointNameOffset&quot;,&quot;0.5&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;offset of joint names when r_showskel is set to 1&quot;)</definition>
        <argsstring>(&quot;r_jointNameOffset&quot;,&quot;0.5&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;offset of joint names when r_showskel is set to 1&quot;)</argsstring>
        <name>r_jointNameOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="210" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1af1bc83e7f625a94bf121abb6244de099" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_cgVertexProfile(&quot;r_cgVertexProfile&quot;,&quot;best&quot;, CVAR_RENDERER|CVAR_ARCHIVE,&quot;arbvp1, vp20, vp30&quot;)</definition>
        <argsstring>(&quot;r_cgVertexProfile&quot;,&quot;best&quot;, CVAR_RENDERER|CVAR_ARCHIVE,&quot;arbvp1, vp20, vp30&quot;)</argsstring>
        <name>r_cgVertexProfile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="212" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a9b76c72a4e2fe98b73f110279c367fbb" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_cgFragmentProfile(&quot;r_cgFragmentProfile&quot;,&quot;best&quot;, CVAR_RENDERER|CVAR_ARCHIVE,&quot;arbfp1, fp30&quot;)</definition>
        <argsstring>(&quot;r_cgFragmentProfile&quot;,&quot;best&quot;, CVAR_RENDERER|CVAR_ARCHIVE,&quot;arbfp1, fp30&quot;)</argsstring>
        <name>r_cgFragmentProfile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="213" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a05005915a96f689dd4f9cc750dd0cf4b" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_debugLineDepthTest(&quot;r_debugLineDepthTest&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_ARCHIVE|CVAR_BOOL,&quot;perform depth test on debug lines&quot;)</definition>
        <argsstring>(&quot;r_debugLineDepthTest&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_ARCHIVE|CVAR_BOOL,&quot;perform depth test on debug lines&quot;)</argsstring>
        <name>r_debugLineDepthTest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="215" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a700e5c737c1be55d3445ba5b5edac211" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_debugLineWidth(&quot;r_debugLineWidth&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_ARCHIVE|CVAR_BOOL,&quot;width of debug lines&quot;)</definition>
        <argsstring>(&quot;r_debugLineWidth&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_ARCHIVE|CVAR_BOOL,&quot;width of debug lines&quot;)</argsstring>
        <name>r_debugLineWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="216" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a7013ee2a1cea6515fcd7a1d918993d3a" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_debugArrowStep(&quot;r_debugArrowStep&quot;,&quot;120&quot;, CVAR_RENDERER|CVAR_ARCHIVE|CVAR_INTEGER,&quot;step size of arrow cone line rotation in degrees&quot;, 0, 120)</definition>
        <argsstring>(&quot;r_debugArrowStep&quot;,&quot;120&quot;, CVAR_RENDERER|CVAR_ARCHIVE|CVAR_INTEGER,&quot;step size of arrow cone line rotation in degrees&quot;, 0, 120)</argsstring>
        <name>r_debugArrowStep</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="217" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ab0ed10c20d0e0287101d4cecd71004cd" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_debugPolygonFilled(&quot;r_debugPolygonFilled&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;draw a filled polygon&quot;)</definition>
        <argsstring>(&quot;r_debugPolygonFilled&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;draw a filled polygon&quot;)</argsstring>
        <name>r_debugPolygonFilled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="218" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a8f3b0c45c913079e4a0df2917d2b1341" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_materialOverride(&quot;r_materialOverride&quot;,&quot;&quot;, CVAR_RENDERER,&quot;overrides all materials&quot;, idCmdSystem::ArgCompletion_Decl&lt; DECL_MATERIAL &gt;)</definition>
        <argsstring>(&quot;r_materialOverride&quot;,&quot;&quot;, CVAR_RENDERER,&quot;overrides all materials&quot;, idCmdSystem::ArgCompletion_Decl&lt; DECL_MATERIAL &gt;)</argsstring>
        <name>r_materialOverride</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="220" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a9dcf1eb9a245ad4e82bb84759dc314e9" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_debugRenderToTexture(&quot;r_debugRenderToTexture&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;&quot;)</definition>
        <argsstring>(&quot;r_debugRenderToTexture&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;&quot;)</argsstring>
        <name>r_debugRenderToTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="222" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1aa5448648ec759eaffc4fa7a5ac276ed7" prot="public" static="no" mutable="no">
        <type>GLfloat</type>
        <definition>GLfloat s</definition>
        <argsstring></argsstring>
        <name>s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="224" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1afff6c155a6e15db425cd414080dc8262" prot="public" static="no" mutable="no">
        <type>GLfloat GLfloat</type>
        <definition>GLfloat GLfloat t</definition>
        <argsstring></argsstring>
        <name>t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="224" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1aa351c033b88f5d33ff3618ee05284c94" prot="public" static="no" mutable="no">
        <type>GLfloat *</type>
        <definition>GLfloat* st</definition>
        <argsstring></argsstring>
        <name>st</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="225" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a85575561179e8eb12fa8105d4a25dc15" prot="public" static="no" mutable="no">
        <type>const GLfloat *</type>
        <definition>const GLint * params</definition>
        <argsstring></argsstring>
        <name>params</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="229" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1aac9c40810aa193c26b6b09ed888850b2" prot="public" static="no" mutable="no">
        <type>const GLfloat</type>
        <definition>const GLint param</definition>
        <argsstring></argsstring>
        <name>param</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="231" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a4638d4af52093dce122e8290e82c4639" prot="public" static="no" mutable="no">
        <type>GLenum</type>
        <definition>GLenum portion</definition>
        <argsstring></argsstring>
        <name>portion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="233" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a20cd90f4297cef3a5fed109ca85c7b7e" prot="public" static="no" mutable="no">
        <type>GLenum GLenum</type>
        <definition>GLenum GLenum variable</definition>
        <argsstring></argsstring>
        <name>variable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="233" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ac57f1440d1b8b3fdabcf5b828b1badee" prot="public" static="no" mutable="no">
        <type>GLenum GLenum GLenum</type>
        <definition>GLenum input</definition>
        <argsstring></argsstring>
        <name>input</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="233" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ababd061011d59cb3d089560f154dde47" prot="public" static="no" mutable="no">
        <type>GLenum GLenum GLenum GLenum</type>
        <definition>GLenum GLenum mapping</definition>
        <argsstring></argsstring>
        <name>mapping</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="234" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a93c28fefc6f0c6a15f36354319852948" prot="public" static="no" mutable="no">
        <type>GLenum GLenum GLenum GLenum GLenum</type>
        <definition>GLenum GLenum GLenum componentUsage</definition>
        <argsstring></argsstring>
        <name>componentUsage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="234" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1aada5d382ee750822e588f6d2d8be6546" prot="public" static="no" mutable="no">
        <type>GLenum GLenum</type>
        <definition>GLenum GLenum abOutput</definition>
        <argsstring></argsstring>
        <name>abOutput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="235" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a2f04b96479131e3013f34ef88a889850" prot="public" static="no" mutable="no">
        <type>GLenum GLenum GLenum</type>
        <definition>GLenum GLenum GLenum cdOutput</definition>
        <argsstring></argsstring>
        <name>cdOutput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="235" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ae624fa9686f1dd7afd0aecb9d102c969" prot="public" static="no" mutable="no">
        <type>GLenum GLenum GLenum GLenum</type>
        <definition>GLenum GLenum GLenum GLenum sumOutput</definition>
        <argsstring></argsstring>
        <name>sumOutput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="236" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a43b2e884687bad4d9fd87c11f7f77aef" prot="public" static="no" mutable="no">
        <type>GLenum GLenum GLenum GLenum GLenum</type>
        <definition>GLenum GLenum GLenum GLenum GLenum scale</definition>
        <argsstring></argsstring>
        <name>scale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="236" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1af3258773152d51aa3d62de29b46649fd" prot="public" static="no" mutable="no">
        <type>GLenum GLenum GLenum GLenum GLenum GLenum</type>
        <definition>GLenum GLenum GLenum GLenum GLenum GLenum bias</definition>
        <argsstring></argsstring>
        <name>bias</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="236" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a9682c58c8e93f2ce10d9f6dff0e2da6b" prot="public" static="no" mutable="no">
        <type>GLenum GLenum GLenum GLenum GLenum GLenum GLboolean</type>
        <definition>GLenum GLenum GLenum GLenum GLenum GLenum GLboolean abDotProduct</definition>
        <argsstring></argsstring>
        <name>abDotProduct</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="236" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1afaa7f5dc900ce6cc6b4c5a90a85e8b1d" prot="public" static="no" mutable="no">
        <type>GLenum GLenum GLenum GLenum GLenum GLenum GLboolean GLboolean</type>
        <definition>GLenum GLenum GLenum GLenum GLenum GLenum GLboolean GLboolean cdDotProduct</definition>
        <argsstring></argsstring>
        <name>cdDotProduct</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="237" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a50491e565912f8ca66b8a28a9b03f3ad" prot="public" static="no" mutable="no">
        <type>GLenum GLenum GLenum GLenum GLenum GLenum GLboolean GLboolean GLboolean</type>
        <definition>GLenum GLenum GLenum GLenum GLenum GLenum GLboolean GLboolean GLboolean muxSum</definition>
        <argsstring></argsstring>
        <name>muxSum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="237" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1abc7cbbec1f024bd23164936bd765b06d" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="241" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a1df7fac5bc539d8661f0690e59a3c1b8" prot="public" static="no" mutable="no">
        <type></type>
        <definition>GLint</definition>
        <argsstring></argsstring>
        <name>GLint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="255" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a01e6ccc882bb4f089742a57bdf4f8dc0" prot="public" static="no" mutable="no">
        <type></type>
        <definition>GLsizei</definition>
        <argsstring></argsstring>
        <name>GLsizei</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="255" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a927f9e229ec7a64384ed1fdf889d0e9c" prot="public" static="no" mutable="no">
        <type></type>
        <definition>GLenum</definition>
        <argsstring></argsstring>
        <name>GLenum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="255" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a0e27ee689e8748c54c10f06210a07ba9" prot="public" static="no" mutable="no">
        <type>const GLvoid</type>
        <definition>const GLvoid int</definition>
        <argsstring></argsstring>
        <name>int</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="257" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ae992df2651ccb663e82185cf942941a1" prot="public" static="no" mutable="no">
        <type>const GLvoid const void *PFNGLGENFRAGMENTSHADERSATIPROC</type>
        <definition>const GLvoid const void* PFNGLGENFRAGMENTSHADERSATIPROC qglGenFragmentShadersATI</definition>
        <argsstring></argsstring>
        <name>qglGenFragmentShadersATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="261" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ab16a20488e8712e0f1b64a50c6a564b8" prot="public" static="no" mutable="no">
        <type>PFNGLBINDFRAGMENTSHADERATIPROC</type>
        <definition>PFNGLBINDFRAGMENTSHADERATIPROC qglBindFragmentShaderATI</definition>
        <argsstring></argsstring>
        <name>qglBindFragmentShaderATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="262" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1abb2bf142de39fdc07f732cec9ebccb9d" prot="public" static="no" mutable="no">
        <type>PFNGLDELETEFRAGMENTSHADERATIPROC</type>
        <definition>PFNGLDELETEFRAGMENTSHADERATIPROC qglDeleteFragmentShaderATI</definition>
        <argsstring></argsstring>
        <name>qglDeleteFragmentShaderATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="263" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ac748f0df53a32659102465276491dfa9" prot="public" static="no" mutable="no">
        <type>PFNGLBEGINFRAGMENTSHADERATIPROC</type>
        <definition>PFNGLBEGINFRAGMENTSHADERATIPROC qglBeginFragmentShaderATI</definition>
        <argsstring></argsstring>
        <name>qglBeginFragmentShaderATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="264" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a1da898f56295cc15c1d47590c23b8996" prot="public" static="no" mutable="no">
        <type>PFNGLENDFRAGMENTSHADERATIPROC</type>
        <definition>PFNGLENDFRAGMENTSHADERATIPROC qglEndFragmentShaderATI</definition>
        <argsstring></argsstring>
        <name>qglEndFragmentShaderATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="265" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a636c8e1194cb470da9c4fa6b57f93d8b" prot="public" static="no" mutable="no">
        <type>PFNGLPASSTEXCOORDATIPROC</type>
        <definition>PFNGLPASSTEXCOORDATIPROC qglPassTexCoordATI</definition>
        <argsstring></argsstring>
        <name>qglPassTexCoordATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="266" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a5a835901ecaf04f0ae6ee0c5170ad75e" prot="public" static="no" mutable="no">
        <type>PFNGLSAMPLEMAPATIPROC</type>
        <definition>PFNGLSAMPLEMAPATIPROC qglSampleMapATI</definition>
        <argsstring></argsstring>
        <name>qglSampleMapATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="267" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a2dfb14f91924a167d977abdb2d7b1613" prot="public" static="no" mutable="no">
        <type>PFNGLCOLORFRAGMENTOP1ATIPROC</type>
        <definition>PFNGLCOLORFRAGMENTOP1ATIPROC qglColorFragmentOp1ATI</definition>
        <argsstring></argsstring>
        <name>qglColorFragmentOp1ATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="268" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ad743f7dc75273ed0789f03484692b1f8" prot="public" static="no" mutable="no">
        <type>PFNGLCOLORFRAGMENTOP2ATIPROC</type>
        <definition>PFNGLCOLORFRAGMENTOP2ATIPROC qglColorFragmentOp2ATI</definition>
        <argsstring></argsstring>
        <name>qglColorFragmentOp2ATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="269" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a3690ecda10a9e1eaf7182596899fe67f" prot="public" static="no" mutable="no">
        <type>PFNGLCOLORFRAGMENTOP3ATIPROC</type>
        <definition>PFNGLCOLORFRAGMENTOP3ATIPROC qglColorFragmentOp3ATI</definition>
        <argsstring></argsstring>
        <name>qglColorFragmentOp3ATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="270" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ad17696b2400c914ce3e53e77ef9c6c6d" prot="public" static="no" mutable="no">
        <type>PFNGLALPHAFRAGMENTOP1ATIPROC</type>
        <definition>PFNGLALPHAFRAGMENTOP1ATIPROC qglAlphaFragmentOp1ATI</definition>
        <argsstring></argsstring>
        <name>qglAlphaFragmentOp1ATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="271" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1abd572cf04efccb606974211f764bc147" prot="public" static="no" mutable="no">
        <type>PFNGLALPHAFRAGMENTOP2ATIPROC</type>
        <definition>PFNGLALPHAFRAGMENTOP2ATIPROC qglAlphaFragmentOp2ATI</definition>
        <argsstring></argsstring>
        <name>qglAlphaFragmentOp2ATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="272" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1aa286ea31dab011dfc1324c0483159873" prot="public" static="no" mutable="no">
        <type>PFNGLALPHAFRAGMENTOP3ATIPROC</type>
        <definition>PFNGLALPHAFRAGMENTOP3ATIPROC qglAlphaFragmentOp3ATI</definition>
        <argsstring></argsstring>
        <name>qglAlphaFragmentOp3ATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="273" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a58ec3918fb2debdc2901661a3f8df263" prot="public" static="no" mutable="no">
        <type>PFNGLSETFRAGMENTSHADERCONSTANTATIPROC</type>
        <definition>PFNGLSETFRAGMENTSHADERCONSTANTATIPROC qglSetFragmentShaderConstantATI</definition>
        <argsstring></argsstring>
        <name>qglSetFragmentShaderConstantATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="274" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a9ae13d3a8e72ef242ddc119029a2a7f1" prot="public" static="no" mutable="no">
        <type>PFNGLACTIVESTENCILFACEEXTPROC</type>
        <definition>PFNGLACTIVESTENCILFACEEXTPROC qglActiveStencilFaceEXT</definition>
        <argsstring></argsstring>
        <name>qglActiveStencilFaceEXT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="277" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1aa179c406dc50741bdfec41ef761d97c6" prot="public" static="no" mutable="no">
        <type>PFNGLSTENCILOPSEPARATEATIPROC</type>
        <definition>PFNGLSTENCILOPSEPARATEATIPROC qglStencilOpSeparateATI</definition>
        <argsstring></argsstring>
        <name>qglStencilOpSeparateATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="280" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a56e4abdccdffb10804b528269e32f6de" prot="public" static="no" mutable="no">
        <type>PFNGLSTENCILFUNCSEPARATEATIPROC</type>
        <definition>PFNGLSTENCILFUNCSEPARATEATIPROC qglStencilFuncSeparateATI</definition>
        <argsstring></argsstring>
        <name>qglStencilFuncSeparateATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="281" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a0728f96ded26c1cca371c2aa49f50ddf" prot="public" static="no" mutable="no">
        <type>PFNGLCOMPRESSEDTEXIMAGE2DARBPROC</type>
        <definition>PFNGLCOMPRESSEDTEXIMAGE2DARBPROC qglCompressedTexImage2DARB</definition>
        <argsstring></argsstring>
        <name>qglCompressedTexImage2DARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="284" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a731fcee5b8a6bb379d6e9c7b1e7645f0" prot="public" static="no" mutable="no">
        <type>PFNGLGETCOMPRESSEDTEXIMAGEARBPROC</type>
        <definition>PFNGLGETCOMPRESSEDTEXIMAGEARBPROC qglGetCompressedTexImageARB</definition>
        <argsstring></argsstring>
        <name>qglGetCompressedTexImageARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="285" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1afd11f53af6bb555234be5f0a5ae9c018" prot="public" static="no" mutable="no">
        <type>PFNGLBINDBUFFERARBPROC</type>
        <definition>PFNGLBINDBUFFERARBPROC qglBindBufferARB</definition>
        <argsstring></argsstring>
        <name>qglBindBufferARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="288" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1adc3b1396464e085167a878f32e511b9e" prot="public" static="no" mutable="no">
        <type>PFNGLDELETEBUFFERSARBPROC</type>
        <definition>PFNGLDELETEBUFFERSARBPROC qglDeleteBuffersARB</definition>
        <argsstring></argsstring>
        <name>qglDeleteBuffersARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="289" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ad170b81964b4e6df2b18689d3d416c51" prot="public" static="no" mutable="no">
        <type>PFNGLGENBUFFERSARBPROC</type>
        <definition>PFNGLGENBUFFERSARBPROC qglGenBuffersARB</definition>
        <argsstring></argsstring>
        <name>qglGenBuffersARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="290" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a56d559a11073536443f91cf9bde65e2c" prot="public" static="no" mutable="no">
        <type>PFNGLISBUFFERARBPROC</type>
        <definition>PFNGLISBUFFERARBPROC qglIsBufferARB</definition>
        <argsstring></argsstring>
        <name>qglIsBufferARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="291" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a10d8e0b94fcd8fc3414766431aafe5fc" prot="public" static="no" mutable="no">
        <type>PFNGLBUFFERDATAARBPROC</type>
        <definition>PFNGLBUFFERDATAARBPROC qglBufferDataARB</definition>
        <argsstring></argsstring>
        <name>qglBufferDataARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="292" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ac1f18735888fca0bfb9790cbdf2b9276" prot="public" static="no" mutable="no">
        <type>PFNGLBUFFERSUBDATAARBPROC</type>
        <definition>PFNGLBUFFERSUBDATAARBPROC qglBufferSubDataARB</definition>
        <argsstring></argsstring>
        <name>qglBufferSubDataARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="293" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a3356e9cf65746a6bf85d79d45dee071a" prot="public" static="no" mutable="no">
        <type>PFNGLGETBUFFERSUBDATAARBPROC</type>
        <definition>PFNGLGETBUFFERSUBDATAARBPROC qglGetBufferSubDataARB</definition>
        <argsstring></argsstring>
        <name>qglGetBufferSubDataARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="294" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1afbbe60fe34fb0e2d94305b304c9bb4b3" prot="public" static="no" mutable="no">
        <type>PFNGLMAPBUFFERARBPROC</type>
        <definition>PFNGLMAPBUFFERARBPROC qglMapBufferARB</definition>
        <argsstring></argsstring>
        <name>qglMapBufferARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="295" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ac8ee1a3222e84344b81c98f2c97117fb" prot="public" static="no" mutable="no">
        <type>PFNGLUNMAPBUFFERARBPROC</type>
        <definition>PFNGLUNMAPBUFFERARBPROC qglUnmapBufferARB</definition>
        <argsstring></argsstring>
        <name>qglUnmapBufferARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="296" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a97cafc578902ff805aad9af93c5473e2" prot="public" static="no" mutable="no">
        <type>PFNGLGETBUFFERPARAMETERIVARBPROC</type>
        <definition>PFNGLGETBUFFERPARAMETERIVARBPROC qglGetBufferParameterivARB</definition>
        <argsstring></argsstring>
        <name>qglGetBufferParameterivARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="297" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a6c2c4eb997726006a55f2166bba1f1be" prot="public" static="no" mutable="no">
        <type>PFNGLGETBUFFERPOINTERVARBPROC</type>
        <definition>PFNGLGETBUFFERPOINTERVARBPROC qglGetBufferPointervARB</definition>
        <argsstring></argsstring>
        <name>qglGetBufferPointervARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="298" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1afe8dc4527a6fc5d6180486f306398077" prot="public" static="no" mutable="no">
        <type>PFNGLVERTEXATTRIBPOINTERARBPROC</type>
        <definition>PFNGLVERTEXATTRIBPOINTERARBPROC qglVertexAttribPointerARB</definition>
        <argsstring></argsstring>
        <name>qglVertexAttribPointerARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="301" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a83fef877505b70fb7fc6b1dd785e86ee" prot="public" static="no" mutable="no">
        <type>PFNGLENABLEVERTEXATTRIBARRAYARBPROC</type>
        <definition>PFNGLENABLEVERTEXATTRIBARRAYARBPROC qglEnableVertexAttribArrayARB</definition>
        <argsstring></argsstring>
        <name>qglEnableVertexAttribArrayARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="302" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a87913c4ff1ad8b6911511cf32568f350" prot="public" static="no" mutable="no">
        <type>PFNGLDISABLEVERTEXATTRIBARRAYARBPROC</type>
        <definition>PFNGLDISABLEVERTEXATTRIBARRAYARBPROC qglDisableVertexAttribArrayARB</definition>
        <argsstring></argsstring>
        <name>qglDisableVertexAttribArrayARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="303" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ac1501c5f6a83d23a56d607945af4527f" prot="public" static="no" mutable="no">
        <type>PFNGLPROGRAMSTRINGARBPROC</type>
        <definition>PFNGLPROGRAMSTRINGARBPROC qglProgramStringARB</definition>
        <argsstring></argsstring>
        <name>qglProgramStringARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="304" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1ac3e18dabd1ca60b9156ab793e2ed9869" prot="public" static="no" mutable="no">
        <type>PFNGLBINDPROGRAMARBPROC</type>
        <definition>PFNGLBINDPROGRAMARBPROC qglBindProgramARB</definition>
        <argsstring></argsstring>
        <name>qglBindProgramARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="305" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a6f4e5ead8d2bdd99a583c947b713b0fa" prot="public" static="no" mutable="no">
        <type>PFNGLGENPROGRAMSARBPROC</type>
        <definition>PFNGLGENPROGRAMSARBPROC qglGenProgramsARB</definition>
        <argsstring></argsstring>
        <name>qglGenProgramsARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="306" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1afb39e1de7fb1aa4edee9cdbad57ddd7c" prot="public" static="no" mutable="no">
        <type>PFNGLPROGRAMENVPARAMETER4FVARBPROC</type>
        <definition>PFNGLPROGRAMENVPARAMETER4FVARBPROC qglProgramEnvParameter4fvARB</definition>
        <argsstring></argsstring>
        <name>qglProgramEnvParameter4fvARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="307" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a52ab7d7abd13567a24276650643059c7" prot="public" static="no" mutable="no">
        <type>PFNGLPROGRAMLOCALPARAMETER4FVARBPROC</type>
        <definition>PFNGLPROGRAMLOCALPARAMETER4FVARBPROC qglProgramLocalParameter4fvARB</definition>
        <argsstring></argsstring>
        <name>qglProgramLocalParameter4fvARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="308" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1afbae01f0d4829d3c4f2606b6de71043d" prot="public" static="no" mutable="no">
        <type>PFNGLDEPTHBOUNDSEXTPROC</type>
        <definition>PFNGLDEPTHBOUNDSEXTPROC qglDepthBoundsEXT</definition>
        <argsstring></argsstring>
        <name>qglDepthBoundsEXT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="311" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a250614dc2b34f249f82ca39fe4be79b0" prot="public" static="no" mutable="no">
        <type><ref refid="structvidmode__s" kindref="compound">vidmode_t</ref></type>
        <definition>vidmode_t r_vidModes[]</definition>
        <argsstring>[]</argsstring>
        <name>r_vidModes</name>
        <initializer>= {
    { &quot;Mode  0: 320x240&quot;,		320,	240 },
    { &quot;Mode  1: 400x300&quot;,		400,	300 },
    { &quot;Mode  2: 512x384&quot;,		512,	384 },
    { &quot;Mode  3: 640x480&quot;,		640,	480 },
    { &quot;Mode  4: 800x600&quot;,		800,	600 },
    { &quot;Mode  5: 1024x768&quot;,		1024,	768 },
    { &quot;Mode  6: 1152x864&quot;,		1152,	864 },
    { &quot;Mode  7: 1280x1024&quot;,		1280,	1024 },
    { &quot;Mode  8: 1600x1200&quot;,		1600,	1200 },
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="556" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="556" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a2944b945246baf2a1917b49b11a6d78e" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int s_numVidModes</definition>
        <argsstring></argsstring>
        <name>s_numVidModes</name>
        <initializer>= ( sizeof( r_vidModes ) / sizeof( r_vidModes[0] ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="567" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="567" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_render_system__init_8cpp_1a9a7656544b4fc8a272e230b372fecc81" prot="public" static="yes" mutable="no">
        <type><ref refid="classid_mat3" kindref="compound">idMat3</ref></type>
        <definition>idMat3 cubeAxis[6]</definition>
        <argsstring>[6]</argsstring>
        <name>cubeAxis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="1535" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="1535" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_render_system__init_8cpp_1a6a07dad8b12eec1c2bbc376c03c833c6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void GfxInfo_f</definition>
        <argsstring>(void)</argsstring>
        <name>GfxInfo_f</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1a11fa6c441ab7315868454c553d9cceed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>const GLvoid * void</definition>
        <argsstring>(APIENTRY *qglMultiTexCoord2fARB)(GLenum texture</argsstring>
        <name>void</name>
        <param>
          <type>APIENTRY *</type>
          <declname>qglMultiTexCoord2fARB</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1a19fa405225ed12a8358684613de9b37f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *APIENTRY *</type>
        <definition>void* APIENTRY* qAllocateMemoryNV</definition>
        <argsstring>(GLsizei size, float readFrequency, float writeFrequency, float priority)</argsstring>
        <name>qAllocateMemoryNV</name>
        <param>
          <type>GLsizei</type>
          <declname>size</declname>
        </param>
        <param>
          <type>float</type>
          <declname>readFrequency</declname>
        </param>
        <param>
          <type>float</type>
          <declname>writeFrequency</declname>
        </param>
        <param>
          <type>float</type>
          <declname>priority</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="245" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1ae55eeb71f73ef6ea19591b5614211712" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool R_CheckExtension</definition>
        <argsstring>(char *name)</argsstring>
        <name>R_CheckExtension</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="318" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="318" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1ac1e123a6b69afea673448acea9600bd8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void R_CheckPortableExtensions</definition>
        <argsstring>(void)</argsstring>
        <name>R_CheckPortableExtensions</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="334" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="334" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1a3f6c9a026abcefa1b2f2fc3e6548e1ae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool R_GetModeInfo</definition>
        <argsstring>(int *width, int *height, int mode)</argsstring>
        <name>R_GetModeInfo</name>
        <param>
          <type>int *</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="572" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="572" bodyend="599"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1aafecfe7a9c5163f7b4558ee23f44124c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_InitOpenGL</definition>
        <argsstring>(void)</argsstring>
        <name>R_InitOpenGL</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="618" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="618" bodyend="732"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1ac62e3d2a048a4f3a6225c842dc62ee17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GL_CheckErrors</definition>
        <argsstring>(void)</argsstring>
        <name>GL_CheckErrors</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="739" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="739" bodyend="778"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1a085c3d0817beac4c6c81beb209f0f382" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void R_ReloadSurface_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>R_ReloadSurface_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="787" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="787" bodyend="805"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1a9d594687e8c26d3a2c6264f2e9603416" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void R_ListModes_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>R_ListModes_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="814" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="814" bodyend="822"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1a0c89954fd856e6f70c30b6b6a3e4cf3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_TestImage_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>R_TestImage_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="835" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="835" bodyend="856"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1a4b3429d3e2b2beece37963bc948eaae1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_TestVideo_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>R_TestVideo_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="865" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="865" bodyend="901"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1aad224bc77abd4c2d6139b4441738467f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int R_QsortSurfaceAreas</definition>
        <argsstring>(const void *a, const void *b)</argsstring>
        <name>R_QsortSurfaceAreas</name>
        <param>
          <type>const void *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="903" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="903" bodyend="928"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1ac43af650a1fdcf0c46f7ff843ef5eb7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_ReportSurfaceAreas_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>R_ReportSurfaceAreas_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="938" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="938" bodyend="963"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1a61542a41491bd6fd8536f7be921dd78f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_ReportImageDuplication_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>R_ReportImageDuplication_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="972" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="972" bodyend="1055"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1ac6bb7acdf7dd52297451b4dad282649e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float R_RenderingFPS</definition>
        <argsstring>(const renderView_t *renderView)</argsstring>
        <name>R_RenderingFPS</name>
        <param>
          <type>const <ref refid="structrender_view__s" kindref="compound">renderView_t</ref> *</type>
          <declname>renderView</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="1070" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="1070" bodyend="1094"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1ab44b32dd9dff2d436075de1a0cc99a3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_Benchmark_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>R_Benchmark_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="1101" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="1101" bodyend="1133"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1aec6c707f8829556447d22aed5ee4469e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_ReadTiledPixels</definition>
        <argsstring>(int width, int height, byte *buffer, renderView_t *ref=NULL)</argsstring>
        <name>R_ReadTiledPixels</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>byte *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="structrender_view__s" kindref="compound">renderView_t</ref> *</type>
          <declname>ref</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="1154" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="1154" bodyend="1212"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1a480be67b03e5c8a95c5d6cb5860211da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_ScreenshotFilename</definition>
        <argsstring>(int &amp;lastNumber, const char *base, idStr &amp;fileName)</argsstring>
        <name>R_ScreenshotFilename</name>
        <param>
          <type>int &amp;</type>
          <declname>lastNumber</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="1303" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="1303" bodyend="1337"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1a7ac6eea53959988d4b52340147f9a1c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_ScreenShot_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>R_ScreenShot_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="1350" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="1350" bodyend="1402"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1aa67c25f8d8c7eed2f8cce8895f7b17bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_StencilShot</definition>
        <argsstring>(void)</argsstring>
        <name>R_StencilShot</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="1410" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="1410" bodyend="1446"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1a623ae0adade123c35823b204d9a7310b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_EnvShot_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>R_EnvShot_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="1457" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="1457" bodyend="1531"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1a32b8ba9bbab6d2a18a4d513f97d50821" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_SampleCubeMap</definition>
        <argsstring>(const idVec3 &amp;dir, int size, byte *buffers[6], byte result[4])</argsstring>
        <name>R_SampleCubeMap</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>byte *</type>
          <declname>buffers</declname>
          <array>[6]</array>
        </param>
        <param>
          <type>byte</type>
          <declname>result</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="1543" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="1543" bodyend="1587"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1a7126e3aff39d42c6a04b74a75c0eda5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_MakeAmbientMap_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>R_MakeAmbientMap_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="1598" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="1598" bodyend="1728"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1a1d0bc13fc8cd002b3f0c880b0247c38c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_SetColorMappings</definition>
        <argsstring>(void)</argsstring>
        <name>R_SetColorMappings</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="1738" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="1738" bodyend="1768"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1add15d0502ad3b2cc7aa2450063e0d176" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GfxInfo_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>GfxInfo_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="1776" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="1776" bodyend="1868"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1a5b468043242d19ee8e692463b8f71ce8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_VidRestart_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>R_VidRestart_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="1875" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="1875" bodyend="1961"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1a2c33dc329fc93e64c4b7fb204239b448" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_InitMaterials</definition>
        <argsstring>(void)</argsstring>
        <name>R_InitMaterials</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="1969" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="1969" bodyend="1979"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1a7678b972d1072ab35d6c8260e9fd5951" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void R_SizeUp_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>R_SizeUp_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="1989" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="1989" bodyend="1995"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1a4d348e3859d608e0e77146609c58c013" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void R_SizeDown_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>R_SizeDown_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="2005" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="2005" bodyend="2011"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1acc9d68aff937bed426e0be3f43bb61ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_TouchGui_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>R_TouchGui_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="2021" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="2021" bodyend="2032"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1ae821820b8a3583022e153b08d8a2c5fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_InitCvars</definition>
        <argsstring>(void)</argsstring>
        <name>R_InitCvars</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="2039" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="2039" bodyend="2041"/>
      </memberdef>
      <memberdef kind="function" id="_render_system__init_8cpp_1a9b805250b2be08eccba2f3a23844bd4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_InitCommands</definition>
        <argsstring>(void)</argsstring>
        <name>R_InitCommands</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" line="2048" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="2048" bodyend="2073"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../idlib/precompiled.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>hdrstop</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tr_local.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Vista<sp/>OpenGL<sp/>wrapper<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;../sys/win32/win_local.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>functions<sp/>that<sp/>are<sp/>not<sp/>called<sp/>every<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><ref refid="structglconfig__s" kindref="compound">glconfig_t</ref><sp/><sp/>glConfig;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GfxInfo_f(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*r_rendererArgs[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;best&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;arb&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;arb2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Cg&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;exp&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nv10&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nv20&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;r200&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_inhibitFragmentProgram(<sp/></highlight><highlight class="stringliteral">&quot;r_inhibitFragmentProgram&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;ignore<sp/>the<sp/>fragment<sp/>program<sp/>extension&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_glDriver(<sp/></highlight><highlight class="stringliteral">&quot;r_glDriver&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER,<sp/></highlight><highlight class="stringliteral">&quot;\&quot;opengl32\&quot;,<sp/>etc.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useLightPortalFlow(<sp/></highlight><highlight class="stringliteral">&quot;r_useLightPortalFlow&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;use<sp/>a<sp/>more<sp/>precise<sp/>area<sp/>reference<sp/>determination&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_multiSamples(<sp/></highlight><highlight class="stringliteral">&quot;r_multiSamples&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_ARCHIVE<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;number<sp/>of<sp/>antialiasing<sp/>samples&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_mode(<sp/></highlight><highlight class="stringliteral">&quot;r_mode&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;3&quot;</highlight><highlight class="normal">,<sp/>CVAR_ARCHIVE<sp/>|<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;video<sp/>mode<sp/>number&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_displayRefresh(<sp/></highlight><highlight class="stringliteral">&quot;r_displayRefresh&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER<sp/>|<sp/>CVAR_NOCHEAT,<sp/></highlight><highlight class="stringliteral">&quot;optional<sp/>display<sp/>refresh<sp/>rate<sp/>option<sp/>for<sp/>vid<sp/>mode&quot;</highlight><highlight class="normal">,<sp/>0.0f,<sp/>200.0f<sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_fullscreen(<sp/></highlight><highlight class="stringliteral">&quot;r_fullscreen&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_ARCHIVE<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>=<sp/>windowed,<sp/>1<sp/>=<sp/>full<sp/>screen&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_customWidth(<sp/></highlight><highlight class="stringliteral">&quot;r_customWidth&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;720&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_ARCHIVE<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;custom<sp/>screen<sp/>width.<sp/>set<sp/>r_mode<sp/>to<sp/>-1<sp/>to<sp/>activate&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_customHeight(<sp/></highlight><highlight class="stringliteral">&quot;r_customHeight&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;486&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_ARCHIVE<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;custom<sp/>screen<sp/>height.<sp/>set<sp/>r_mode<sp/>to<sp/>-1<sp/>to<sp/>activate&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_singleTriangle(<sp/></highlight><highlight class="stringliteral">&quot;r_singleTriangle&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;only<sp/>draw<sp/>a<sp/>single<sp/>triangle<sp/>per<sp/>primitive&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_checkBounds(<sp/></highlight><highlight class="stringliteral">&quot;r_checkBounds&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;compare<sp/>all<sp/>surface<sp/>bounds<sp/>with<sp/>precalculated<sp/>ones&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useNV20MonoLights(<sp/></highlight><highlight class="stringliteral">&quot;r_useNV20MonoLights&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;use<sp/>pass<sp/>optimization<sp/>for<sp/>mono<sp/>lights&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useConstantMaterials(<sp/></highlight><highlight class="stringliteral">&quot;r_useConstantMaterials&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;use<sp/>pre-calculated<sp/>material<sp/>registers<sp/>if<sp/>possible&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useTripleTextureARB(<sp/></highlight><highlight class="stringliteral">&quot;r_useTripleTextureARB&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;cards<sp/>with<sp/>3+<sp/>texture<sp/>units<sp/>do<sp/>a<sp/>two<sp/>pass<sp/>instead<sp/>of<sp/>three<sp/>pass&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useSilRemap(<sp/></highlight><highlight class="stringliteral">&quot;r_useSilRemap&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;consider<sp/>verts<sp/>with<sp/>the<sp/>same<sp/>XYZ,<sp/>but<sp/>different<sp/>ST<sp/>the<sp/>same<sp/>for<sp/>shadows&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useNodeCommonChildren(<sp/></highlight><highlight class="stringliteral">&quot;r_useNodeCommonChildren&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;stop<sp/>pushing<sp/>reference<sp/>bounds<sp/>early<sp/>when<sp/>possible&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useShadowProjectedCull(<sp/></highlight><highlight class="stringliteral">&quot;r_useShadowProjectedCull&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;discard<sp/>triangles<sp/>outside<sp/>light<sp/>volume<sp/>before<sp/>shadowing&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useShadowVertexProgram(<sp/></highlight><highlight class="stringliteral">&quot;r_useShadowVertexProgram&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;do<sp/>the<sp/>shadow<sp/>projection<sp/>in<sp/>the<sp/>vertex<sp/>program<sp/>on<sp/>capable<sp/>cards&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useShadowSurfaceScissor(<sp/></highlight><highlight class="stringliteral">&quot;r_useShadowSurfaceScissor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;scissor<sp/>shadows<sp/>by<sp/>the<sp/>scissor<sp/>rect<sp/>of<sp/>the<sp/>interaction<sp/>surfaces&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useInteractionTable(<sp/></highlight><highlight class="stringliteral">&quot;r_useInteractionTable&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;create<sp/>a<sp/>full<sp/>entityDefs<sp/>*<sp/>lightDefs<sp/>table<sp/>to<sp/>make<sp/>finding<sp/>interactions<sp/>faster&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useTurboShadow(<sp/></highlight><highlight class="stringliteral">&quot;r_useTurboShadow&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;use<sp/>the<sp/>infinite<sp/>projection<sp/>with<sp/>W<sp/>technique<sp/>for<sp/>dynamic<sp/>shadows&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useTwoSidedStencil(<sp/></highlight><highlight class="stringliteral">&quot;r_useTwoSidedStencil&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;do<sp/>stencil<sp/>shadows<sp/>in<sp/>one<sp/>pass<sp/>with<sp/>different<sp/>ops<sp/>on<sp/>each<sp/>side&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useDeferredTangents(<sp/></highlight><highlight class="stringliteral">&quot;r_useDeferredTangents&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;defer<sp/>tangents<sp/>calculations<sp/>after<sp/>deform&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useCachedDynamicModels(<sp/></highlight><highlight class="stringliteral">&quot;r_useCachedDynamicModels&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;cache<sp/>snapshots<sp/>of<sp/>dynamic<sp/>models&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useVertexBuffers(<sp/></highlight><highlight class="stringliteral">&quot;r_useVertexBuffers&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;use<sp/>ARB_vertex_buffer_object<sp/>for<sp/>vertexes&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>1,<sp/>idCmdSystem::ArgCompletion_Integer&lt;0,1&gt;<sp/><sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useIndexBuffers(<sp/></highlight><highlight class="stringliteral">&quot;r_useIndexBuffers&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_ARCHIVE<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;use<sp/>ARB_vertex_buffer_object<sp/>for<sp/>indexes&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>1,<sp/>idCmdSystem::ArgCompletion_Integer&lt;0,1&gt;<sp/><sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useStateCaching(<sp/></highlight><highlight class="stringliteral">&quot;r_useStateCaching&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;avoid<sp/>redundant<sp/>state<sp/>changes<sp/>in<sp/>GL_*()<sp/>calls&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useInfiniteFarZ(<sp/></highlight><highlight class="stringliteral">&quot;r_useInfiniteFarZ&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;use<sp/>the<sp/>no-far-clip-plane<sp/>trick&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_znear(<sp/></highlight><highlight class="stringliteral">&quot;r_znear&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;3&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_FLOAT,<sp/></highlight><highlight class="stringliteral">&quot;near<sp/>Z<sp/>clip<sp/>plane<sp/>distance&quot;</highlight><highlight class="normal">,<sp/>0.001f,<sp/>200.0f<sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_ignoreGLErrors(<sp/></highlight><highlight class="stringliteral">&quot;r_ignoreGLErrors&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;ignore<sp/>GL<sp/>errors&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_finish(<sp/></highlight><highlight class="stringliteral">&quot;r_finish&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;force<sp/>a<sp/>call<sp/>to<sp/>glFinish()<sp/>every<sp/>frame&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_swapInterval(<sp/></highlight><highlight class="stringliteral">&quot;r_swapInterval&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_ARCHIVE<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;changes<sp/>wglSwapIntarval&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_gamma(<sp/></highlight><highlight class="stringliteral">&quot;r_gamma&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_ARCHIVE<sp/>|<sp/>CVAR_FLOAT,<sp/></highlight><highlight class="stringliteral">&quot;changes<sp/>gamma<sp/>tables&quot;</highlight><highlight class="normal">,<sp/>0.5f,<sp/>3.0f<sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_brightness(<sp/></highlight><highlight class="stringliteral">&quot;r_brightness&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_ARCHIVE<sp/>|<sp/>CVAR_FLOAT,<sp/></highlight><highlight class="stringliteral">&quot;changes<sp/>gamma<sp/>tables&quot;</highlight><highlight class="normal">,<sp/>0.5f,<sp/>2.0f<sp/>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_renderer(<sp/></highlight><highlight class="stringliteral">&quot;r_renderer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;best&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_ARCHIVE,<sp/></highlight><highlight class="stringliteral">&quot;hardware<sp/>specific<sp/>renderer<sp/>path<sp/>to<sp/>use&quot;</highlight><highlight class="normal">,<sp/>r_rendererArgs,<sp/>idCmdSystem::ArgCompletion_String&lt;r_rendererArgs&gt;<sp/>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_jitter(<sp/></highlight><highlight class="stringliteral">&quot;r_jitter&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;randomly<sp/>subpixel<sp/>jitter<sp/>the<sp/>projection<sp/>matrix&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipSuppress(<sp/></highlight><highlight class="stringliteral">&quot;r_skipSuppress&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;ignore<sp/>the<sp/>per-view<sp/>suppressions&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipPostProcess(<sp/></highlight><highlight class="stringliteral">&quot;r_skipPostProcess&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;skip<sp/>all<sp/>post-process<sp/>renderings&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipLightScale(<sp/></highlight><highlight class="stringliteral">&quot;r_skipLightScale&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;don&apos;t<sp/>do<sp/>any<sp/>post-interaction<sp/>light<sp/>scaling,<sp/>makes<sp/>things<sp/>dim<sp/>on<sp/>low-dynamic<sp/>range<sp/>cards&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipInteractions(<sp/></highlight><highlight class="stringliteral">&quot;r_skipInteractions&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;skip<sp/>all<sp/>light/surface<sp/>interaction<sp/>drawing&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipDynamicTextures(<sp/></highlight><highlight class="stringliteral">&quot;r_skipDynamicTextures&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;don&apos;t<sp/>dynamically<sp/>create<sp/>textures&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipCopyTexture(<sp/></highlight><highlight class="stringliteral">&quot;r_skipCopyTexture&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;do<sp/>all<sp/>rendering,<sp/>but<sp/>don&apos;t<sp/>actually<sp/>copyTexSubImage2D&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipBackEnd(<sp/></highlight><highlight class="stringliteral">&quot;r_skipBackEnd&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;don&apos;t<sp/>draw<sp/>anything&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipRender(<sp/></highlight><highlight class="stringliteral">&quot;r_skipRender&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;skip<sp/>3D<sp/>rendering,<sp/>but<sp/>pass<sp/>2D&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipRenderContext(<sp/></highlight><highlight class="stringliteral">&quot;r_skipRenderContext&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;NULL<sp/>the<sp/>rendering<sp/>context<sp/>during<sp/>backend<sp/>3D<sp/>rendering&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipTranslucent(<sp/></highlight><highlight class="stringliteral">&quot;r_skipTranslucent&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;skip<sp/>the<sp/>translucent<sp/>interaction<sp/>rendering&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipAmbient(<sp/></highlight><highlight class="stringliteral">&quot;r_skipAmbient&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;bypasses<sp/>all<sp/>non-interaction<sp/>drawing&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipNewAmbient(<sp/></highlight><highlight class="stringliteral">&quot;r_skipNewAmbient&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL<sp/>|<sp/>CVAR_ARCHIVE,<sp/></highlight><highlight class="stringliteral">&quot;bypasses<sp/>all<sp/>vertex/fragment<sp/>program<sp/>ambient<sp/>drawing&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipBlendLights(<sp/></highlight><highlight class="stringliteral">&quot;r_skipBlendLights&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;skip<sp/>all<sp/>blend<sp/>lights&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipFogLights(<sp/></highlight><highlight class="stringliteral">&quot;r_skipFogLights&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;skip<sp/>all<sp/>fog<sp/>lights&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipDeforms(<sp/></highlight><highlight class="stringliteral">&quot;r_skipDeforms&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;leave<sp/>all<sp/>deform<sp/>materials<sp/>in<sp/>their<sp/>original<sp/>state&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipFrontEnd(<sp/></highlight><highlight class="stringliteral">&quot;r_skipFrontEnd&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;bypasses<sp/>all<sp/>front<sp/>end<sp/>work,<sp/>but<sp/>2D<sp/>gui<sp/>rendering<sp/>still<sp/>draws&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipUpdates(<sp/></highlight><highlight class="stringliteral">&quot;r_skipUpdates&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>=<sp/>don&apos;t<sp/>accept<sp/>any<sp/>entity<sp/>or<sp/>light<sp/>updates,<sp/>making<sp/>everything<sp/>static&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipOverlays(<sp/></highlight><highlight class="stringliteral">&quot;r_skipOverlays&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;skip<sp/>overlay<sp/>surfaces&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipSpecular(<sp/></highlight><highlight class="stringliteral">&quot;r_skipSpecular&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL<sp/>|<sp/>CVAR_CHEAT<sp/>|<sp/>CVAR_ARCHIVE,<sp/></highlight><highlight class="stringliteral">&quot;use<sp/>black<sp/>for<sp/>specular1&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipBump(<sp/></highlight><highlight class="stringliteral">&quot;r_skipBump&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL<sp/>|<sp/>CVAR_ARCHIVE,<sp/></highlight><highlight class="stringliteral">&quot;uses<sp/>a<sp/>flat<sp/>surface<sp/>instead<sp/>of<sp/>the<sp/>bump<sp/>map&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipDiffuse(<sp/></highlight><highlight class="stringliteral">&quot;r_skipDiffuse&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;use<sp/>black<sp/>for<sp/>diffuse&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipROQ(<sp/></highlight><highlight class="stringliteral">&quot;r_skipROQ&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;skip<sp/>ROQ<sp/>decoding&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_ignore(<sp/></highlight><highlight class="stringliteral">&quot;r_ignore&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER,<sp/></highlight><highlight class="stringliteral">&quot;used<sp/>for<sp/>random<sp/>debugging<sp/>without<sp/>defining<sp/>new<sp/>vars&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_ignore2(<sp/></highlight><highlight class="stringliteral">&quot;r_ignore2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER,<sp/></highlight><highlight class="stringliteral">&quot;used<sp/>for<sp/>random<sp/>debugging<sp/>without<sp/>defining<sp/>new<sp/>vars&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_usePreciseTriangleInteractions(<sp/></highlight><highlight class="stringliteral">&quot;r_usePreciseTriangleInteractions&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>=<sp/>do<sp/>winding<sp/>clipping<sp/>to<sp/>determine<sp/>if<sp/>each<sp/>ambiguous<sp/>tri<sp/>should<sp/>be<sp/>lit&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useCulling(<sp/></highlight><highlight class="stringliteral">&quot;r_useCulling&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>=<sp/>none,<sp/>1<sp/>=<sp/>sphere,<sp/>2<sp/>=<sp/>sphere<sp/>+<sp/>box&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>2,<sp/>idCmdSystem::ArgCompletion_Integer&lt;0,2&gt;<sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useLightCulling(<sp/></highlight><highlight class="stringliteral">&quot;r_useLightCulling&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;3&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>=<sp/>none,<sp/>1<sp/>=<sp/>box,<sp/>2<sp/>=<sp/>exact<sp/>clip<sp/>of<sp/>polyhedron<sp/>faces,<sp/>3<sp/>=<sp/>also<sp/>areas&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>3,<sp/>idCmdSystem::ArgCompletion_Integer&lt;0,3&gt;<sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useLightScissors(<sp/></highlight><highlight class="stringliteral">&quot;r_useLightScissors&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>=<sp/>use<sp/>custom<sp/>scissor<sp/>rectangle<sp/>for<sp/>each<sp/>light&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useClippedLightScissors(<sp/></highlight><highlight class="stringliteral">&quot;r_useClippedLightScissors&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>=<sp/>full<sp/>screen<sp/>when<sp/>near<sp/>clipped,<sp/>1<sp/>=<sp/>exact<sp/>when<sp/>near<sp/>clipped,<sp/>2<sp/>=<sp/>exact<sp/>always&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>2,<sp/>idCmdSystem::ArgCompletion_Integer&lt;0,2&gt;<sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useEntityCulling(<sp/></highlight><highlight class="stringliteral">&quot;r_useEntityCulling&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>=<sp/>none,<sp/>1<sp/>=<sp/>box&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useEntityScissors(<sp/></highlight><highlight class="stringliteral">&quot;r_useEntityScissors&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>=<sp/>use<sp/>custom<sp/>scissor<sp/>rectangle<sp/>for<sp/>each<sp/>entity&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useInteractionCulling(<sp/></highlight><highlight class="stringliteral">&quot;r_useInteractionCulling&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>=<sp/>cull<sp/>interactions&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useInteractionScissors(<sp/></highlight><highlight class="stringliteral">&quot;r_useInteractionScissors&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>=<sp/>use<sp/>a<sp/>custom<sp/>scissor<sp/>rectangle<sp/>for<sp/>each<sp/>shadow<sp/>interaction,<sp/>2<sp/>=<sp/>also<sp/>crop<sp/>using<sp/>portal<sp/>scissors&quot;</highlight><highlight class="normal">,<sp/>-2,<sp/>2,<sp/>idCmdSystem::ArgCompletion_Integer&lt;-2,2&gt;<sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useShadowCulling(<sp/></highlight><highlight class="stringliteral">&quot;r_useShadowCulling&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;try<sp/>to<sp/>cull<sp/>shadows<sp/>from<sp/>partially<sp/>visible<sp/>lights&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useFrustumFarDistance(<sp/></highlight><highlight class="stringliteral">&quot;r_useFrustumFarDistance&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_FLOAT,<sp/></highlight><highlight class="stringliteral">&quot;if<sp/>!=<sp/>0<sp/>force<sp/>the<sp/>view<sp/>frustum<sp/>far<sp/>distance<sp/>to<sp/>this<sp/>distance&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_logFile(<sp/></highlight><highlight class="stringliteral">&quot;r_logFile&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;number<sp/>of<sp/>frames<sp/>to<sp/>emit<sp/>GL<sp/>logs&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_clear(<sp/></highlight><highlight class="stringliteral">&quot;r_clear&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER,<sp/></highlight><highlight class="stringliteral">&quot;force<sp/>screen<sp/>clear<sp/>every<sp/>frame,<sp/>1<sp/>=<sp/>purple,<sp/>2<sp/>=<sp/>black,<sp/>&apos;r<sp/>g<sp/>b&apos;<sp/>=<sp/>custom&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_offsetFactor(<sp/></highlight><highlight class="stringliteral">&quot;r_offsetfactor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_FLOAT,<sp/></highlight><highlight class="stringliteral">&quot;polygon<sp/>offset<sp/>parameter&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_offsetUnits(<sp/></highlight><highlight class="stringliteral">&quot;r_offsetunits&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-600&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_FLOAT,<sp/></highlight><highlight class="stringliteral">&quot;polygon<sp/>offset<sp/>parameter&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_shadowPolygonOffset(<sp/></highlight><highlight class="stringliteral">&quot;r_shadowPolygonOffset&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_FLOAT,<sp/></highlight><highlight class="stringliteral">&quot;bias<sp/>value<sp/>added<sp/>to<sp/>depth<sp/>test<sp/>for<sp/>stencil<sp/>shadow<sp/>drawing&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_shadowPolygonFactor(<sp/></highlight><highlight class="stringliteral">&quot;r_shadowPolygonFactor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_FLOAT,<sp/></highlight><highlight class="stringliteral">&quot;scale<sp/>value<sp/>for<sp/>stencil<sp/>shadow<sp/>drawing&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_frontBuffer(<sp/></highlight><highlight class="stringliteral">&quot;r_frontBuffer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;draw<sp/>to<sp/>front<sp/>buffer<sp/>for<sp/>debugging&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipSubviews(<sp/></highlight><highlight class="stringliteral">&quot;r_skipSubviews&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>=<sp/>don&apos;t<sp/>render<sp/>any<sp/>gui<sp/>elements<sp/>on<sp/>surfaces&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipGuiShaders(<sp/></highlight><highlight class="stringliteral">&quot;r_skipGuiShaders&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>=<sp/>skip<sp/>all<sp/>gui<sp/>elements<sp/>on<sp/>surfaces,<sp/>2<sp/>=<sp/>skip<sp/>drawing<sp/>but<sp/>still<sp/>handle<sp/>events,<sp/>3<sp/>=<sp/>draw<sp/>but<sp/>skip<sp/>events&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>3,<sp/>idCmdSystem::ArgCompletion_Integer&lt;0,3&gt;<sp/>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipParticles(<sp/></highlight><highlight class="stringliteral">&quot;r_skipParticles&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>=<sp/>skip<sp/>all<sp/>particle<sp/>systems&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>1,<sp/>idCmdSystem::ArgCompletion_Integer&lt;0,1&gt;<sp/>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_subviewOnly(<sp/></highlight><highlight class="stringliteral">&quot;r_subviewOnly&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>=<sp/>don&apos;t<sp/>render<sp/>main<sp/>view,<sp/>allowing<sp/>subviews<sp/>to<sp/>be<sp/>debugged&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_shadows(<sp/></highlight><highlight class="stringliteral">&quot;r_shadows&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL<sp/><sp/>|<sp/>CVAR_ARCHIVE,<sp/></highlight><highlight class="stringliteral">&quot;enable<sp/>shadows&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_testARBProgram(<sp/></highlight><highlight class="stringliteral">&quot;r_testARBProgram&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;experiment<sp/>with<sp/>vertex/fragment<sp/>programs&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_testGamma(<sp/></highlight><highlight class="stringliteral">&quot;r_testGamma&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_FLOAT,<sp/></highlight><highlight class="stringliteral">&quot;if<sp/>&gt;<sp/>0<sp/>draw<sp/>a<sp/>grid<sp/>pattern<sp/>to<sp/>test<sp/>gamma<sp/>levels&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>195<sp/>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_testGammaBias(<sp/></highlight><highlight class="stringliteral">&quot;r_testGammaBias&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_FLOAT,<sp/></highlight><highlight class="stringliteral">&quot;if<sp/>&gt;<sp/>0<sp/>draw<sp/>a<sp/>grid<sp/>pattern<sp/>to<sp/>test<sp/>gamma<sp/>levels&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_testStepGamma(<sp/></highlight><highlight class="stringliteral">&quot;r_testStepGamma&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_FLOAT,<sp/></highlight><highlight class="stringliteral">&quot;if<sp/>&gt;<sp/>0<sp/>draw<sp/>a<sp/>grid<sp/>pattern<sp/>to<sp/>test<sp/>gamma<sp/>levels&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_lightScale(<sp/></highlight><highlight class="stringliteral">&quot;r_lightScale&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_FLOAT,<sp/></highlight><highlight class="stringliteral">&quot;all<sp/>light<sp/>intensities<sp/>are<sp/>multiplied<sp/>by<sp/>this&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_lightSourceRadius(<sp/></highlight><highlight class="stringliteral">&quot;r_lightSourceRadius&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_FLOAT,<sp/></highlight><highlight class="stringliteral">&quot;for<sp/>soft-shadow<sp/>sampling&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_flareSize(<sp/></highlight><highlight class="stringliteral">&quot;r_flareSize&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_FLOAT,<sp/></highlight><highlight class="stringliteral">&quot;scale<sp/>the<sp/>flare<sp/>deforms<sp/>from<sp/>the<sp/>material<sp/>def&quot;</highlight><highlight class="normal"><sp/>);<sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useExternalShadows(<sp/></highlight><highlight class="stringliteral">&quot;r_useExternalShadows&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>=<sp/>skip<sp/>drawing<sp/>caps<sp/>when<sp/>outside<sp/>the<sp/>light<sp/>volume,<sp/>2<sp/>=<sp/>force<sp/>to<sp/>no<sp/>caps<sp/>for<sp/>testing&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>2,<sp/>idCmdSystem::ArgCompletion_Integer&lt;0,2&gt;<sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useOptimizedShadows(<sp/></highlight><highlight class="stringliteral">&quot;r_useOptimizedShadows&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;use<sp/>the<sp/>dmap<sp/>generated<sp/>static<sp/>shadow<sp/>volumes&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useScissor(<sp/></highlight><highlight class="stringliteral">&quot;r_useScissor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;scissor<sp/>clip<sp/>as<sp/>portals<sp/>and<sp/>lights<sp/>are<sp/>processed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useCombinerDisplayLists(<sp/></highlight><highlight class="stringliteral">&quot;r_useCombinerDisplayLists&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL<sp/>|<sp/>CVAR_NOCHEAT,<sp/></highlight><highlight class="stringliteral">&quot;put<sp/>all<sp/>nvidia<sp/>register<sp/>combiner<sp/>programming<sp/>in<sp/>display<sp/>lists&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useDepthBoundsTest(<sp/></highlight><highlight class="stringliteral">&quot;r_useDepthBoundsTest&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;use<sp/>depth<sp/>bounds<sp/>test<sp/>to<sp/>reduce<sp/>shadow<sp/>fill&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_screenFraction(<sp/></highlight><highlight class="stringliteral">&quot;r_screenFraction&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;100&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;for<sp/>testing<sp/>fill<sp/>rate,<sp/>the<sp/>resolution<sp/>of<sp/>the<sp/>entire<sp/>screen<sp/>can<sp/>be<sp/>changed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_demonstrateBug(<sp/></highlight><highlight class="stringliteral">&quot;r_demonstrateBug&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;used<sp/>during<sp/>development<sp/>to<sp/>show<sp/>IHV&apos;s<sp/>their<sp/>problems&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_usePortals(<sp/></highlight><highlight class="stringliteral">&quot;r_usePortals&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>1<sp/>=<sp/>use<sp/>portals<sp/>to<sp/>perform<sp/>area<sp/>culling,<sp/>otherwise<sp/>draw<sp/>everything&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_singleLight(<sp/></highlight><highlight class="stringliteral">&quot;r_singleLight&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;suppress<sp/>all<sp/>but<sp/>one<sp/>light&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_singleEntity(<sp/></highlight><highlight class="stringliteral">&quot;r_singleEntity&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;suppress<sp/>all<sp/>but<sp/>one<sp/>entity&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_singleSurface(<sp/></highlight><highlight class="stringliteral">&quot;r_singleSurface&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;suppress<sp/>all<sp/>but<sp/>one<sp/>surface<sp/>on<sp/>each<sp/>entity&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_singleArea(<sp/></highlight><highlight class="stringliteral">&quot;r_singleArea&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;only<sp/>draw<sp/>the<sp/>portal<sp/>area<sp/>the<sp/>view<sp/>is<sp/>actually<sp/>in&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_forceLoadImages(<sp/></highlight><highlight class="stringliteral">&quot;r_forceLoadImages&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_ARCHIVE<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;draw<sp/>all<sp/>images<sp/>to<sp/>screen<sp/>after<sp/>registration&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_orderIndexes(<sp/></highlight><highlight class="stringliteral">&quot;r_orderIndexes&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;perform<sp/>index<sp/>reorganization<sp/>to<sp/>optimize<sp/>vertex<sp/>use&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_lightAllBackFaces(<sp/></highlight><highlight class="stringliteral">&quot;r_lightAllBackFaces&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;light<sp/>all<sp/>the<sp/>back<sp/>faces,<sp/>even<sp/>when<sp/>they<sp/>would<sp/>be<sp/>shadowed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/>visual<sp/>debugging<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showPortals(<sp/></highlight><highlight class="stringliteral">&quot;r_showPortals&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;draw<sp/>portal<sp/>outlines<sp/>in<sp/>color<sp/>based<sp/>on<sp/>passed<sp/>/<sp/>not<sp/>passed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showUnsmoothedTangents(<sp/></highlight><highlight class="stringliteral">&quot;r_showUnsmoothedTangents&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;if<sp/>1,<sp/>put<sp/>all<sp/>nvidia<sp/>register<sp/>combiner<sp/>programming<sp/>in<sp/>display<sp/>lists&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showSilhouette(<sp/></highlight><highlight class="stringliteral">&quot;r_showSilhouette&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;highlight<sp/>edges<sp/>that<sp/>are<sp/>casting<sp/>shadow<sp/>planes&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showVertexColor(<sp/></highlight><highlight class="stringliteral">&quot;r_showVertexColor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;draws<sp/>all<sp/>triangles<sp/>with<sp/>the<sp/>solid<sp/>vertex<sp/>color&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showUpdates(<sp/></highlight><highlight class="stringliteral">&quot;r_showUpdates&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;report<sp/>entity<sp/>and<sp/>light<sp/>updates<sp/>and<sp/>ref<sp/>counts&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showDemo(<sp/></highlight><highlight class="stringliteral">&quot;r_showDemo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;report<sp/>reads<sp/>and<sp/>writes<sp/>to<sp/>the<sp/>demo<sp/>file&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showDynamic(<sp/></highlight><highlight class="stringliteral">&quot;r_showDynamic&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;report<sp/>stats<sp/>on<sp/>dynamic<sp/>surface<sp/>generation&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showLightScale(<sp/></highlight><highlight class="stringliteral">&quot;r_showLightScale&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;report<sp/>the<sp/>scale<sp/>factor<sp/>applied<sp/>to<sp/>drawing<sp/>for<sp/>overbrights&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showDefs(<sp/></highlight><highlight class="stringliteral">&quot;r_showDefs&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;report<sp/>the<sp/>number<sp/>of<sp/>modeDefs<sp/>and<sp/>lightDefs<sp/>in<sp/>view&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showTrace(<sp/></highlight><highlight class="stringliteral">&quot;r_showTrace&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;show<sp/>the<sp/>intersection<sp/>of<sp/>an<sp/>eye<sp/>trace<sp/>with<sp/>the<sp/>world&quot;</highlight><highlight class="normal">,<sp/>idCmdSystem::ArgCompletion_Integer&lt;0,2&gt;<sp/>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showIntensity(<sp/></highlight><highlight class="stringliteral">&quot;r_showIntensity&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;draw<sp/>the<sp/>screen<sp/>colors<sp/>based<sp/>on<sp/>intensity,<sp/>red<sp/>=<sp/>0,<sp/>green<sp/>=<sp/>128,<sp/>blue<sp/>=<sp/>255&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showImages(<sp/></highlight><highlight class="stringliteral">&quot;r_showImages&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>=<sp/>show<sp/>all<sp/>images<sp/>instead<sp/>of<sp/>rendering,<sp/>2<sp/>=<sp/>show<sp/>in<sp/>proportional<sp/>size&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>2,<sp/>idCmdSystem::ArgCompletion_Integer&lt;0,2&gt;<sp/>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showSmp(<sp/></highlight><highlight class="stringliteral">&quot;r_showSmp&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;show<sp/>which<sp/>end<sp/>(front<sp/>or<sp/>back)<sp/>is<sp/>blocking&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showLights(<sp/></highlight><highlight class="stringliteral">&quot;r_showLights&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>=<sp/>just<sp/>print<sp/>volumes<sp/>numbers,<sp/>highlighting<sp/>ones<sp/>covering<sp/>the<sp/>view,<sp/>2<sp/>=<sp/>also<sp/>draw<sp/>planes<sp/>of<sp/>each<sp/>volume,<sp/>3<sp/>=<sp/>also<sp/>draw<sp/>edges<sp/>of<sp/>each<sp/>volume&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>3,<sp/>idCmdSystem::ArgCompletion_Integer&lt;0,3&gt;<sp/>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showShadows(<sp/></highlight><highlight class="stringliteral">&quot;r_showShadows&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>=<sp/>visualize<sp/>the<sp/>stencil<sp/>shadow<sp/>volumes,<sp/>2<sp/>=<sp/>draw<sp/>filled<sp/>in&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>3,<sp/>idCmdSystem::ArgCompletion_Integer&lt;0,3&gt;<sp/>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showShadowCount(<sp/></highlight><highlight class="stringliteral">&quot;r_showShadowCount&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;colors<sp/>screen<sp/>based<sp/>on<sp/>shadow<sp/>volume<sp/>depth<sp/>complexity,<sp/>&gt;=<sp/>2<sp/>=<sp/>print<sp/>overdraw<sp/>count<sp/>based<sp/>on<sp/>stencil<sp/>index<sp/>values,<sp/>3<sp/>=<sp/>only<sp/>show<sp/>turboshadows,<sp/>4<sp/>=<sp/>only<sp/>show<sp/>static<sp/>shadows&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>4,<sp/>idCmdSystem::ArgCompletion_Integer&lt;0,4&gt;<sp/>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showLightScissors(<sp/></highlight><highlight class="stringliteral">&quot;r_showLightScissors&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;show<sp/>light<sp/>scissor<sp/>rectangles&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showEntityScissors(<sp/></highlight><highlight class="stringliteral">&quot;r_showEntityScissors&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;show<sp/>entity<sp/>scissor<sp/>rectangles&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showInteractionFrustums(<sp/></highlight><highlight class="stringliteral">&quot;r_showInteractionFrustums&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>=<sp/>show<sp/>a<sp/>frustum<sp/>for<sp/>each<sp/>interaction,<sp/>2<sp/>=<sp/>also<sp/>draw<sp/>lines<sp/>to<sp/>light<sp/>origin,<sp/>3<sp/>=<sp/>also<sp/>draw<sp/>entity<sp/>bbox&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>3,<sp/>idCmdSystem::ArgCompletion_Integer&lt;0,3&gt;<sp/>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showInteractionScissors(<sp/></highlight><highlight class="stringliteral">&quot;r_showInteractionScissors&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>=<sp/>show<sp/>screen<sp/>rectangle<sp/>which<sp/>contains<sp/>the<sp/>interaction<sp/>frustum,<sp/>2<sp/>=<sp/>also<sp/>draw<sp/>construction<sp/>lines&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>2,<sp/>idCmdSystem::ArgCompletion_Integer&lt;0,2&gt;<sp/>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showLightCount(<sp/></highlight><highlight class="stringliteral">&quot;r_showLightCount&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>=<sp/>colors<sp/>surfaces<sp/>based<sp/>on<sp/>light<sp/>count,<sp/>2<sp/>=<sp/>also<sp/>count<sp/>everything<sp/>through<sp/>walls,<sp/>3<sp/>=<sp/>also<sp/>print<sp/>overdraw&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>3,<sp/>idCmdSystem::ArgCompletion_Integer&lt;0,3&gt;<sp/>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showViewEntitys(<sp/></highlight><highlight class="stringliteral">&quot;r_showViewEntitys&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>=<sp/>displays<sp/>the<sp/>bounding<sp/>boxes<sp/>of<sp/>all<sp/>view<sp/>models,<sp/>2<sp/>=<sp/>print<sp/>index<sp/>numbers&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showTris(<sp/></highlight><highlight class="stringliteral">&quot;r_showTris&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;enables<sp/>wireframe<sp/>rendering<sp/>of<sp/>the<sp/>world,<sp/>1<sp/>=<sp/>only<sp/>draw<sp/>visible<sp/>ones,<sp/>2<sp/>=<sp/>draw<sp/>all<sp/>front<sp/>facing,<sp/>3<sp/>=<sp/>draw<sp/>all&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>3,<sp/>idCmdSystem::ArgCompletion_Integer&lt;0,3&gt;<sp/>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showSurfaceInfo(<sp/></highlight><highlight class="stringliteral">&quot;r_showSurfaceInfo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;show<sp/>surface<sp/>material<sp/>name<sp/>under<sp/>crosshair&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showNormals(<sp/></highlight><highlight class="stringliteral">&quot;r_showNormals&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_FLOAT,<sp/></highlight><highlight class="stringliteral">&quot;draws<sp/>wireframe<sp/>normals&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showMemory(<sp/></highlight><highlight class="stringliteral">&quot;r_showMemory&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;print<sp/>frame<sp/>memory<sp/>utilization&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showCull(<sp/></highlight><highlight class="stringliteral">&quot;r_showCull&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;report<sp/>sphere<sp/>and<sp/>box<sp/>culling<sp/>stats&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showInteractions(<sp/></highlight><highlight class="stringliteral">&quot;r_showInteractions&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;report<sp/>interaction<sp/>generation<sp/>activity&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showDepth(<sp/></highlight><highlight class="stringliteral">&quot;r_showDepth&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;display<sp/>the<sp/>contents<sp/>of<sp/>the<sp/>depth<sp/>buffer<sp/>and<sp/>the<sp/>depth<sp/>range&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showSurfaces(<sp/></highlight><highlight class="stringliteral">&quot;r_showSurfaces&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;report<sp/>surface/light/shadow<sp/>counts&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showPrimitives(<sp/></highlight><highlight class="stringliteral">&quot;r_showPrimitives&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;report<sp/>drawsurf/index/vertex<sp/>counts&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showEdges(<sp/></highlight><highlight class="stringliteral">&quot;r_showEdges&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;draw<sp/>the<sp/>sil<sp/>edges&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showTexturePolarity(<sp/></highlight><highlight class="stringliteral">&quot;r_showTexturePolarity&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;shade<sp/>triangles<sp/>by<sp/>texture<sp/>area<sp/>polarity&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showTangentSpace(<sp/></highlight><highlight class="stringliteral">&quot;r_showTangentSpace&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;shade<sp/>triangles<sp/>by<sp/>tangent<sp/>space,<sp/>1<sp/>=<sp/>use<sp/>1st<sp/>tangent<sp/>vector,<sp/>2<sp/>=<sp/>use<sp/>2nd<sp/>tangent<sp/>vector,<sp/>3<sp/>=<sp/>use<sp/>normal<sp/>vector&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>3,<sp/>idCmdSystem::ArgCompletion_Integer&lt;0,3&gt;<sp/>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showDominantTri(<sp/></highlight><highlight class="stringliteral">&quot;r_showDominantTri&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;draw<sp/>lines<sp/>from<sp/>vertexes<sp/>to<sp/>center<sp/>of<sp/>dominant<sp/>triangles&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showAlloc(<sp/></highlight><highlight class="stringliteral">&quot;r_showAlloc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;report<sp/>alloc/free<sp/>counts&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showTextureVectors(<sp/></highlight><highlight class="stringliteral">&quot;r_showTextureVectors&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_FLOAT,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>if<sp/>&gt;<sp/>0<sp/>draw<sp/>each<sp/>triangles<sp/>texture<sp/>(tangent)<sp/>vectors&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showOverDraw(<sp/></highlight><highlight class="stringliteral">&quot;r_showOverDraw&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>=<sp/>geometry<sp/>overdraw,<sp/>2<sp/>=<sp/>light<sp/>interaction<sp/>overdraw,<sp/>3<sp/>=<sp/>geometry<sp/>and<sp/>light<sp/>interaction<sp/>overdraw&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>3,<sp/>idCmdSystem::ArgCompletion_Integer&lt;0,3&gt;<sp/>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_lockSurfaces(<sp/></highlight><highlight class="stringliteral">&quot;r_lockSurfaces&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;allow<sp/>moving<sp/>the<sp/>view<sp/>point<sp/>without<sp/>changing<sp/>the<sp/>composition<sp/>of<sp/>the<sp/>scene,<sp/>including<sp/>culling&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useEntityCallbacks(<sp/></highlight><highlight class="stringliteral">&quot;r_useEntityCallbacks&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;if<sp/>0,<sp/>issue<sp/>the<sp/>callback<sp/>immediately<sp/>at<sp/>update<sp/>time,<sp/>rather<sp/>than<sp/>defering&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showSkel(<sp/></highlight><highlight class="stringliteral">&quot;r_showSkel&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;draw<sp/>the<sp/>skeleton<sp/>when<sp/>model<sp/>animates,<sp/>1<sp/>=<sp/>draw<sp/>model<sp/>with<sp/>skeleton,<sp/>2<sp/>=<sp/>draw<sp/>skeleton<sp/>only&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>2,<sp/>idCmdSystem::ArgCompletion_Integer&lt;0,2&gt;<sp/>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_jointNameScale(<sp/></highlight><highlight class="stringliteral">&quot;r_jointNameScale&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0.02&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_FLOAT,<sp/></highlight><highlight class="stringliteral">&quot;size<sp/>of<sp/>joint<sp/>names<sp/>when<sp/>r_showskel<sp/>is<sp/>set<sp/>to<sp/>1&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_jointNameOffset(<sp/></highlight><highlight class="stringliteral">&quot;r_jointNameOffset&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0.5&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_FLOAT,<sp/></highlight><highlight class="stringliteral">&quot;offset<sp/>of<sp/>joint<sp/>names<sp/>when<sp/>r_showskel<sp/>is<sp/>set<sp/>to<sp/>1&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_cgVertexProfile(<sp/></highlight><highlight class="stringliteral">&quot;r_cgVertexProfile&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;best&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_ARCHIVE,<sp/></highlight><highlight class="stringliteral">&quot;arbvp1,<sp/>vp20,<sp/>vp30&quot;</highlight><highlight class="normal"><sp/>);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_cgFragmentProfile(<sp/></highlight><highlight class="stringliteral">&quot;r_cgFragmentProfile&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;best&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_ARCHIVE,<sp/></highlight><highlight class="stringliteral">&quot;arbfp1,<sp/>fp30&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_debugLineDepthTest(<sp/></highlight><highlight class="stringliteral">&quot;r_debugLineDepthTest&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_ARCHIVE<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;perform<sp/>depth<sp/>test<sp/>on<sp/>debug<sp/>lines&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_debugLineWidth(<sp/></highlight><highlight class="stringliteral">&quot;r_debugLineWidth&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_ARCHIVE<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;width<sp/>of<sp/>debug<sp/>lines&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_debugArrowStep(<sp/></highlight><highlight class="stringliteral">&quot;r_debugArrowStep&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;120&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_ARCHIVE<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;step<sp/>size<sp/>of<sp/>arrow<sp/>cone<sp/>line<sp/>rotation<sp/>in<sp/>degrees&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>120<sp/>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_debugPolygonFilled(<sp/></highlight><highlight class="stringliteral">&quot;r_debugPolygonFilled&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;draw<sp/>a<sp/>filled<sp/>polygon&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_materialOverride(<sp/></highlight><highlight class="stringliteral">&quot;r_materialOverride&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER,<sp/></highlight><highlight class="stringliteral">&quot;overrides<sp/>all<sp/>materials&quot;</highlight><highlight class="normal">,<sp/>idCmdSystem::ArgCompletion_Decl&lt;DECL_MATERIAL&gt;<sp/>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_debugRenderToTexture(<sp/></highlight><highlight class="stringliteral">&quot;r_debugRenderToTexture&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal">void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglMultiTexCoord2fARB<sp/>)(<sp/>GLenum<sp/>texture,<sp/>GLfloat<sp/>s,<sp/>GLfloat<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal">void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglMultiTexCoord2fvARB<sp/>)(<sp/>GLenum<sp/>texture,<sp/>GLfloat<sp/>*st<sp/>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal">void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglActiveTextureARB<sp/>)(<sp/>GLenum<sp/>texture<sp/>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal">void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglClientActiveTextureARB<sp/>)(<sp/>GLenum<sp/>texture<sp/>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal">void<sp/>(<sp/>APIENTRY<sp/>*qglCombinerParameterfvNV<sp/>)(<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*params<sp/>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal">void<sp/>(<sp/>APIENTRY<sp/>*qglCombinerParameterivNV<sp/>)(<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*params<sp/>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal">void<sp/>(<sp/>APIENTRY<sp/>*qglCombinerParameterfNV<sp/>)(<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal">void<sp/>(<sp/>APIENTRY<sp/>*qglCombinerParameteriNV<sp/>)(<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal">void<sp/>(<sp/>APIENTRY<sp/>*qglCombinerInputNV<sp/>)(<sp/>GLenum<sp/>stage,<sp/>GLenum<sp/>portion,<sp/>GLenum<sp/><ref refid="structvariable" kindref="compound">variable</ref>,<sp/>GLenum<sp/>input,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLenum<sp/>mapping,<sp/>GLenum<sp/>componentUsage<sp/>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal">void<sp/>(<sp/>APIENTRY<sp/>*qglCombinerOutputNV<sp/>)(<sp/>GLenum<sp/>stage,<sp/>GLenum<sp/>portion,<sp/>GLenum<sp/>abOutput,<sp/>GLenum<sp/>cdOutput,<sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLenum<sp/>sumOutput,<sp/>GLenum<sp/>scale,<sp/>GLenum<sp/>bias,<sp/>GLboolean<sp/>abDotProduct,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLboolean<sp/>cdDotProduct,<sp/>GLboolean<sp/>muxSum<sp/>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal">void<sp/>(<sp/>APIENTRY<sp/>*qglFinalCombinerInputNV<sp/>)(<sp/>GLenum<sp/><ref refid="structvariable" kindref="compound">variable</ref>,<sp/>GLenum<sp/>input,<sp/>GLenum<sp/>mapping,<sp/>GLenum<sp/>componentUsage<sp/>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal">void<sp/>(APIENTRY<sp/>*qglVertexArrayRangeNV)(<sp/>GLsizei<sp/>length,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pointer<sp/>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TTimo:<sp/>wgl<sp/>vs<sp/>glX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://oss.sgi.com/projects/ogl-sample/registry/NV/vertex_array_range.txt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">//<sp/>since<sp/>APIs<sp/>are<sp/>the<sp/>same<sp/>anyway,<sp/>let&apos;s<sp/>be<sp/>wgl/glX<sp/>agnostic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(APIENTRY<sp/>*qAllocateMemoryNV)(<sp/>GLsizei<sp/>size,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>readFrequency,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>writeFrequency,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>priority);</highlight></codeline>
<codeline lineno="246"><highlight class="normal">void<sp/>(APIENTRY<sp/>*qFreeMemoryNV)(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pointer<sp/>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GLX_VERSION_1_1</highlight></codeline>
<codeline lineno="248"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>Q_ALLOCATE_MEMORY_NV<sp/>&quot;glXAllocateMemoryNV&quot;</highlight></codeline>
<codeline lineno="249"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>Q_FREE_MEMORY_NV<sp/>&quot;glXFreeMemoryNV&quot;</highlight></codeline>
<codeline lineno="250"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="251"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>Q_ALLOCATE_MEMORY_NV<sp/>&quot;wglAllocateMemoryNV&quot;</highlight></codeline>
<codeline lineno="252"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>Q_FREE_MEMORY_NV<sp/>&quot;wglFreeMemoryNV&quot;</highlight></codeline>
<codeline lineno="253"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="254"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal">void<sp/>(APIENTRY<sp/>*qglTexImage3D)(GLenum,<sp/>GLint,<sp/>GLint,<sp/>GLsizei,<sp/>GLsizei,<sp/>GLsizei,<sp/>GLint,<sp/>GLenum,<sp/>GLenum,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal">void<sp/>(APIENTRY<sp/>*<sp/>qglColorTableEXT)(<sp/>int,<sp/>int,<sp/>int,<sp/>int,<sp/>int,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ATI_fragment_shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal">PFNGLGENFRAGMENTSHADERSATIPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglGenFragmentShadersATI;</highlight></codeline>
<codeline lineno="262"><highlight class="normal">PFNGLBINDFRAGMENTSHADERATIPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBindFragmentShaderATI;</highlight></codeline>
<codeline lineno="263"><highlight class="normal">PFNGLDELETEFRAGMENTSHADERATIPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglDeleteFragmentShaderATI;</highlight></codeline>
<codeline lineno="264"><highlight class="normal">PFNGLBEGINFRAGMENTSHADERATIPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBeginFragmentShaderATI;</highlight></codeline>
<codeline lineno="265"><highlight class="normal">PFNGLENDFRAGMENTSHADERATIPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglEndFragmentShaderATI;</highlight></codeline>
<codeline lineno="266"><highlight class="normal">PFNGLPASSTEXCOORDATIPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglPassTexCoordATI;</highlight></codeline>
<codeline lineno="267"><highlight class="normal">PFNGLSAMPLEMAPATIPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglSampleMapATI;</highlight></codeline>
<codeline lineno="268"><highlight class="normal">PFNGLCOLORFRAGMENTOP1ATIPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglColorFragmentOp1ATI;</highlight></codeline>
<codeline lineno="269"><highlight class="normal">PFNGLCOLORFRAGMENTOP2ATIPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglColorFragmentOp2ATI;</highlight></codeline>
<codeline lineno="270"><highlight class="normal">PFNGLCOLORFRAGMENTOP3ATIPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglColorFragmentOp3ATI;</highlight></codeline>
<codeline lineno="271"><highlight class="normal">PFNGLALPHAFRAGMENTOP1ATIPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglAlphaFragmentOp1ATI;</highlight></codeline>
<codeline lineno="272"><highlight class="normal">PFNGLALPHAFRAGMENTOP2ATIPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglAlphaFragmentOp2ATI;</highlight></codeline>
<codeline lineno="273"><highlight class="normal">PFNGLALPHAFRAGMENTOP3ATIPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglAlphaFragmentOp3ATI;</highlight></codeline>
<codeline lineno="274"><highlight class="normal">PFNGLSETFRAGMENTSHADERCONSTANTATIPROC<sp/><sp/><sp/>qglSetFragmentShaderConstantATI;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EXT_stencil_two_side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal">PFNGLACTIVESTENCILFACEEXTPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglActiveStencilFaceEXT;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ATI_separate_stencil</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal">PFNGLSTENCILOPSEPARATEATIPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglStencilOpSeparateATI;</highlight></codeline>
<codeline lineno="281"><highlight class="normal">PFNGLSTENCILFUNCSEPARATEATIPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglStencilFuncSeparateATI;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARB_texture_compression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal">PFNGLCOMPRESSEDTEXIMAGE2DARBPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglCompressedTexImage2DARB;</highlight></codeline>
<codeline lineno="285"><highlight class="normal">PFNGLGETCOMPRESSEDTEXIMAGEARBPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglGetCompressedTexImageARB;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARB_vertex_buffer_object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal">PFNGLBINDBUFFERARBPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBindBufferARB;</highlight></codeline>
<codeline lineno="289"><highlight class="normal">PFNGLDELETEBUFFERSARBPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglDeleteBuffersARB;</highlight></codeline>
<codeline lineno="290"><highlight class="normal">PFNGLGENBUFFERSARBPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglGenBuffersARB;</highlight></codeline>
<codeline lineno="291"><highlight class="normal">PFNGLISBUFFERARBPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglIsBufferARB;</highlight></codeline>
<codeline lineno="292"><highlight class="normal">PFNGLBUFFERDATAARBPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBufferDataARB;</highlight></codeline>
<codeline lineno="293"><highlight class="normal">PFNGLBUFFERSUBDATAARBPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBufferSubDataARB;</highlight></codeline>
<codeline lineno="294"><highlight class="normal">PFNGLGETBUFFERSUBDATAARBPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglGetBufferSubDataARB;</highlight></codeline>
<codeline lineno="295"><highlight class="normal">PFNGLMAPBUFFERARBPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglMapBufferARB;</highlight></codeline>
<codeline lineno="296"><highlight class="normal">PFNGLUNMAPBUFFERARBPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglUnmapBufferARB;</highlight></codeline>
<codeline lineno="297"><highlight class="normal">PFNGLGETBUFFERPARAMETERIVARBPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglGetBufferParameterivARB;</highlight></codeline>
<codeline lineno="298"><highlight class="normal">PFNGLGETBUFFERPOINTERVARBPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglGetBufferPointervARB;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARB_vertex_program<sp/>/<sp/>ARB_fragment_program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal">PFNGLVERTEXATTRIBPOINTERARBPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglVertexAttribPointerARB;</highlight></codeline>
<codeline lineno="302"><highlight class="normal">PFNGLENABLEVERTEXATTRIBARRAYARBPROC<sp/><sp/><sp/><sp/><sp/>qglEnableVertexAttribArrayARB;</highlight></codeline>
<codeline lineno="303"><highlight class="normal">PFNGLDISABLEVERTEXATTRIBARRAYARBPROC<sp/><sp/><sp/><sp/>qglDisableVertexAttribArrayARB;</highlight></codeline>
<codeline lineno="304"><highlight class="normal">PFNGLPROGRAMSTRINGARBPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglProgramStringARB;</highlight></codeline>
<codeline lineno="305"><highlight class="normal">PFNGLBINDPROGRAMARBPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBindProgramARB;</highlight></codeline>
<codeline lineno="306"><highlight class="normal">PFNGLGENPROGRAMSARBPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglGenProgramsARB;</highlight></codeline>
<codeline lineno="307"><highlight class="normal">PFNGLPROGRAMENVPARAMETER4FVARBPROC<sp/><sp/><sp/><sp/><sp/><sp/>qglProgramEnvParameter4fvARB;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">PFNGLPROGRAMLOCALPARAMETER4FVARBPROC<sp/><sp/><sp/><sp/>qglProgramLocalParameter4fvARB;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GL_EXT_depth_bounds_test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal">PFNGLDEPTHBOUNDSEXTPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglDepthBoundsEXT;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="314"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="315"><highlight class="comment">R_CheckExtension</highlight></codeline>
<codeline lineno="316"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="317"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>R_CheckExtension(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!strstr(<sp/>glConfig.extensions_string,<sp/>name<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;X..%s<sp/>not<sp/>found\n&quot;</highlight><highlight class="normal">,<sp/>name<sp/>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;...using<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>name<sp/>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="329"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="330"><highlight class="comment">R_CheckPortableExtensions</highlight></codeline>
<codeline lineno="331"><highlight class="comment"></highlight></codeline>
<codeline lineno="332"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="333"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_CheckPortableExtensions(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.glVersion<sp/>=<sp/>atof(<sp/>glConfig.version_string<sp/>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GL_ARB_multitexture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.multitextureAvailable<sp/>=<sp/>R_CheckExtension(<sp/></highlight><highlight class="stringliteral">&quot;GL_ARB_multitexture&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>glConfig.multitextureAvailable<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglMultiTexCoord2fARB<sp/>=<sp/>(void(APIENTRY<sp/>*)(GLenum,<sp/>GLfloat,<sp/>GLfloat))GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glMultiTexCoord2fARB&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglMultiTexCoord2fvARB<sp/>=<sp/>(void(APIENTRY<sp/>*)(GLenum,<sp/>GLfloat<sp/>*))GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glMultiTexCoord2fvARB&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglActiveTextureARB<sp/>=<sp/>(void(APIENTRY<sp/>*)(GLenum))GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glActiveTextureARB&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglClientActiveTextureARB<sp/>=<sp/>(void(APIENTRY<sp/>*)(GLenum))GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glClientActiveTextureARB&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglGetIntegerv(<sp/>GL_MAX_TEXTURE_UNITS_ARB,<sp/>(GLint<sp/>*)&amp;glConfig.maxTextureUnits<sp/>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>glConfig.maxTextureUnits<sp/>&gt;<sp/>MAX_MULTITEXTURE_UNITS<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glConfig.maxTextureUnits<sp/>=<sp/>MAX_MULTITEXTURE_UNITS;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>glConfig.maxTextureUnits<sp/>&lt;<sp/>2<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glConfig.multitextureAvailable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>shouldn&apos;t<sp/>ever<sp/>happen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglGetIntegerv(<sp/>GL_MAX_TEXTURE_COORDS_ARB,<sp/>(GLint<sp/>*)&amp;glConfig.maxTextureCoords<sp/>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglGetIntegerv(<sp/>GL_MAX_TEXTURE_IMAGE_UNITS_ARB,<sp/>(GLint<sp/>*)&amp;glConfig.maxTextureImageUnits<sp/>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GL_ARB_texture_env_combine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.textureEnvCombineAvailable<sp/>=<sp/>R_CheckExtension(<sp/></highlight><highlight class="stringliteral">&quot;GL_ARB_texture_env_combine&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GL_ARB_texture_cube_map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.cubeMapAvailable<sp/>=<sp/>R_CheckExtension(<sp/></highlight><highlight class="stringliteral">&quot;GL_ARB_texture_cube_map&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GL_ARB_texture_env_dot3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.envDot3Available<sp/>=<sp/>R_CheckExtension(<sp/></highlight><highlight class="stringliteral">&quot;GL_ARB_texture_env_dot3&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GL_ARB_texture_env_add</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.textureEnvAddAvailable<sp/>=<sp/>R_CheckExtension(<sp/></highlight><highlight class="stringliteral">&quot;GL_ARB_texture_env_add&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GL_ARB_texture_non_power_of_two</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.textureNonPowerOfTwoAvailable<sp/>=<sp/>R_CheckExtension(<sp/></highlight><highlight class="stringliteral">&quot;GL_ARB_texture_non_power_of_two&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GL_ARB_texture_compression<sp/>+<sp/>GL_S3_s3tc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DRI<sp/>drivers<sp/>may<sp/>have<sp/>GL_ARB_texture_compression<sp/>but<sp/>no<sp/>GL_EXT_texture_compression_s3tc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>R_CheckExtension(<sp/></highlight><highlight class="stringliteral">&quot;GL_ARB_texture_compression&quot;</highlight><highlight class="normal"><sp/>)<sp/>&amp;&amp;<sp/>R_CheckExtension(<sp/></highlight><highlight class="stringliteral">&quot;GL_EXT_texture_compression_s3tc&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glConfig.textureCompressionAvailable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglCompressedTexImage2DARB<sp/>=<sp/>(PFNGLCOMPRESSEDTEXIMAGE2DARBPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glCompressedTexImage2DARB&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglGetCompressedTexImageARB<sp/>=<sp/>(PFNGLGETCOMPRESSEDTEXIMAGEARBPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glGetCompressedTexImageARB&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glConfig.textureCompressionAvailable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GL_EXT_texture_filter_anisotropic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.anisotropicAvailable<sp/>=<sp/>R_CheckExtension(<sp/></highlight><highlight class="stringliteral">&quot;GL_EXT_texture_filter_anisotropic&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>glConfig.anisotropicAvailable<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglGetFloatv(<sp/>GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT,<sp/>&amp;glConfig.maxTextureAnisotropy<sp/>);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>maxTextureAnisotropy:<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>glConfig.maxTextureAnisotropy<sp/>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glConfig.maxTextureAnisotropy<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GL_EXT_texture_lod_bias</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>actual<sp/>extension<sp/>is<sp/>broken<sp/>as<sp/>specificed,<sp/>storing<sp/>the<sp/>state<sp/>in<sp/>the<sp/>texture<sp/>unit<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>texture<sp/>object.<sp/><sp/>The<sp/>behavior<sp/>in<sp/>GL<sp/>1.4<sp/>is<sp/>the<sp/>behavior<sp/>we<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>glConfig.glVersion<sp/>&gt;=<sp/>1.4<sp/>||<sp/>R_CheckExtension(<sp/></highlight><highlight class="stringliteral">&quot;GL_EXT_texture_lod&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;...using<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;GL_1.4_texture_lod_bias&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glConfig.textureLODBiasAvailable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;X..%s<sp/>not<sp/>found\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;GL_1.4_texture_lod_bias&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glConfig.textureLODBiasAvailable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GL_EXT_shared_texture_palette</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.sharedTexturePaletteAvailable<sp/>=<sp/>R_CheckExtension(<sp/></highlight><highlight class="stringliteral">&quot;GL_EXT_shared_texture_palette&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>glConfig.sharedTexturePaletteAvailable<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglColorTableEXT<sp/>=<sp/>(<sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>)<sp/>(<sp/>int,<sp/>int,<sp/>int,<sp/>int,<sp/>int,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>)<sp/>)<sp/>GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glColorTableEXT&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GL_EXT_texture3D<sp/>(not<sp/>currently<sp/>used<sp/>for<sp/>anything)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.texture3DAvailable<sp/>=<sp/>R_CheckExtension(<sp/></highlight><highlight class="stringliteral">&quot;GL_EXT_texture3D&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>glConfig.texture3DAvailable<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglTexImage3D<sp/>=<sp/></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void<sp/>(APIENTRY<sp/>*)(GLenum,<sp/>GLint,<sp/>GLint,<sp/>GLsizei,<sp/>GLsizei,<sp/>GLsizei,<sp/>GLint,<sp/>GLenum,<sp/>GLenum,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*)<sp/>)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glTexImage3D&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>EXT_stencil_wrap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>isn&apos;t<sp/>very<sp/>important,<sp/>but<sp/>some<sp/>pathological<sp/>case<sp/>might<sp/>cause<sp/>a<sp/>clamp<sp/>error<sp/>and<sp/>give<sp/>a<sp/>shadow<sp/>bug.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nvidia<sp/>also<sp/>believes<sp/>that<sp/>future<sp/>hardware<sp/>may<sp/>be<sp/>able<sp/>to<sp/>run<sp/>faster<sp/>with<sp/>this<sp/>enabled<sp/>to<sp/>avoid<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>serialization<sp/>of<sp/>clamping.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>R_CheckExtension(<sp/></highlight><highlight class="stringliteral">&quot;GL_EXT_stencil_wrap&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr.stencilIncr<sp/>=<sp/>GL_INCR_WRAP_EXT;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr.stencilDecr<sp/>=<sp/>GL_DECR_WRAP_EXT;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr.stencilIncr<sp/>=<sp/>GL_INCR;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr.stencilDecr<sp/>=<sp/>GL_DECR;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GL_NV_register_combiners</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.registerCombinersAvailable<sp/>=<sp/>R_CheckExtension(<sp/></highlight><highlight class="stringliteral">&quot;GL_NV_register_combiners&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>glConfig.registerCombinersAvailable<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglCombinerParameterfvNV<sp/>=<sp/>(void<sp/>(APIENTRY<sp/>*)(<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*params<sp/>))</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glCombinerParameterfvNV&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglCombinerParameterivNV<sp/>=<sp/>(void<sp/>(APIENTRY<sp/>*)(<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*params<sp/>))</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glCombinerParameterivNV&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglCombinerParameterfNV<sp/>=<sp/>(void<sp/>(APIENTRY<sp/>*)(<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>param<sp/>))</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glCombinerParameterfNV&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglCombinerParameteriNV<sp/>=<sp/>(void<sp/>(APIENTRY<sp/>*)(<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>param<sp/>))</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glCombinerParameteriNV&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglCombinerInputNV<sp/>=<sp/>(void<sp/>(APIENTRY<sp/>*)(<sp/>GLenum<sp/>stage,<sp/>GLenum<sp/>portion,<sp/>GLenum<sp/><ref refid="structvariable" kindref="compound">variable</ref>,<sp/>GLenum<sp/>input,</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLenum<sp/>mapping,<sp/>GLenum<sp/>componentUsage<sp/>))</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glCombinerInputNV&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglCombinerOutputNV<sp/>=<sp/>(void<sp/>(APIENTRY<sp/>*)(<sp/>GLenum<sp/>stage,<sp/>GLenum<sp/>portion,<sp/>GLenum<sp/>abOutput,<sp/>GLenum<sp/>cdOutput,<sp/></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLenum<sp/>sumOutput,<sp/>GLenum<sp/>scale,<sp/>GLenum<sp/>bias,<sp/>GLboolean<sp/>abDotProduct,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLboolean<sp/>cdDotProduct,<sp/>GLboolean<sp/>muxSum<sp/>))</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glCombinerOutputNV&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglFinalCombinerInputNV<sp/>=<sp/>(void<sp/>(APIENTRY<sp/>*)(<sp/>GLenum<sp/>variable,<sp/>GLenum<sp/>input,<sp/>GLenum<sp/>mapping,<sp/>GLenum<sp/>componentUsage<sp/>))</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glFinalCombinerInputNV&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GL_EXT_stencil_two_side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.twoSidedStencilAvailable<sp/>=<sp/>R_CheckExtension(<sp/></highlight><highlight class="stringliteral">&quot;GL_EXT_stencil_two_side&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>glConfig.twoSidedStencilAvailable<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglActiveStencilFaceEXT<sp/>=<sp/>(PFNGLACTIVESTENCILFACEEXTPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glActiveStencilFaceEXT&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glConfig.atiTwoSidedStencilAvailable<sp/>=<sp/>R_CheckExtension(<sp/></highlight><highlight class="stringliteral">&quot;GL_ATI_separate_stencil&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>glConfig.atiTwoSidedStencilAvailable<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglStencilFuncSeparateATI<sp/><sp/>=<sp/>(PFNGLSTENCILFUNCSEPARATEATIPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glStencilFuncSeparateATI&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglStencilOpSeparateATI<sp/>=<sp/>(PFNGLSTENCILOPSEPARATEATIPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glStencilOpSeparateATI&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GL_ATI_fragment_shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.atiFragmentShaderAvailable<sp/>=<sp/>R_CheckExtension(<sp/></highlight><highlight class="stringliteral">&quot;GL_ATI_fragment_shader&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>glConfig.atiFragmentShaderAvailable<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>on<sp/>OSX:<sp/>ATI_fragment_shader<sp/>is<sp/>faked<sp/>through<sp/>ATI_text_fragment_shader<sp/>(macosx_glimp.cpp)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glConfig.atiFragmentShaderAvailable<sp/>=<sp/>R_CheckExtension(<sp/></highlight><highlight class="stringliteral">&quot;GL_ATI_text_fragment_shader&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>glConfig.atiFragmentShaderAvailable<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglGenFragmentShadersATI<sp/>=<sp/>(PFNGLGENFRAGMENTSHADERSATIPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glGenFragmentShadersATI&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBindFragmentShaderATI<sp/>=<sp/>(PFNGLBINDFRAGMENTSHADERATIPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glBindFragmentShaderATI&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglDeleteFragmentShaderATI<sp/>=<sp/>(PFNGLDELETEFRAGMENTSHADERATIPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glDeleteFragmentShaderATI&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBeginFragmentShaderATI<sp/>=<sp/>(PFNGLBEGINFRAGMENTSHADERATIPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glBeginFragmentShaderATI&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglEndFragmentShaderATI<sp/>=<sp/>(PFNGLENDFRAGMENTSHADERATIPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glEndFragmentShaderATI&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglPassTexCoordATI<sp/>=<sp/>(PFNGLPASSTEXCOORDATIPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glPassTexCoordATI&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglSampleMapATI<sp/>=<sp/>(PFNGLSAMPLEMAPATIPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glSampleMapATI&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglColorFragmentOp1ATI<sp/>=<sp/>(PFNGLCOLORFRAGMENTOP1ATIPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glColorFragmentOp1ATI&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglColorFragmentOp2ATI<sp/>=<sp/>(PFNGLCOLORFRAGMENTOP2ATIPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glColorFragmentOp2ATI&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglColorFragmentOp3ATI<sp/>=<sp/>(PFNGLCOLORFRAGMENTOP3ATIPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glColorFragmentOp3ATI&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglAlphaFragmentOp1ATI<sp/>=<sp/>(PFNGLALPHAFRAGMENTOP1ATIPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glAlphaFragmentOp1ATI&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglAlphaFragmentOp2ATI<sp/>=<sp/>(PFNGLALPHAFRAGMENTOP2ATIPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glAlphaFragmentOp2ATI&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglAlphaFragmentOp3ATI<sp/>=<sp/>(PFNGLALPHAFRAGMENTOP3ATIPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glAlphaFragmentOp3ATI&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglSetFragmentShaderConstantATI<sp/>=<sp/>(PFNGLSETFRAGMENTSHADERCONSTANTATIPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glSetFragmentShaderConstantATI&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ARB_vertex_buffer_object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.ARBVertexBufferObjectAvailable<sp/>=<sp/>R_CheckExtension(<sp/></highlight><highlight class="stringliteral">&quot;GL_ARB_vertex_buffer_object&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(glConfig.ARBVertexBufferObjectAvailable)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBindBufferARB<sp/>=<sp/>(PFNGLBINDBUFFERARBPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glBindBufferARB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglDeleteBuffersARB<sp/>=<sp/>(PFNGLDELETEBUFFERSARBPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glDeleteBuffersARB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglGenBuffersARB<sp/>=<sp/>(PFNGLGENBUFFERSARBPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glGenBuffersARB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglIsBufferARB<sp/>=<sp/>(PFNGLISBUFFERARBPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glIsBufferARB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBufferDataARB<sp/>=<sp/>(PFNGLBUFFERDATAARBPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glBufferDataARB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBufferSubDataARB<sp/>=<sp/>(PFNGLBUFFERSUBDATAARBPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glBufferSubDataARB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglGetBufferSubDataARB<sp/>=<sp/>(PFNGLGETBUFFERSUBDATAARBPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glGetBufferSubDataARB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglMapBufferARB<sp/>=<sp/>(PFNGLMAPBUFFERARBPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glMapBufferARB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglUnmapBufferARB<sp/>=<sp/>(PFNGLUNMAPBUFFERARBPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glUnmapBufferARB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglGetBufferParameterivARB<sp/>=<sp/>(PFNGLGETBUFFERPARAMETERIVARBPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glGetBufferParameterivARB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglGetBufferPointervARB<sp/>=<sp/>(PFNGLGETBUFFERPOINTERVARBPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glGetBufferPointervARB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ARB_vertex_program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.ARBVertexProgramAvailable<sp/>=<sp/>R_CheckExtension(<sp/></highlight><highlight class="stringliteral">&quot;GL_ARB_vertex_program&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glConfig.ARBVertexProgramAvailable)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglVertexAttribPointerARB<sp/>=<sp/>(PFNGLVERTEXATTRIBPOINTERARBPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glVertexAttribPointerARB&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglEnableVertexAttribArrayARB<sp/>=<sp/>(PFNGLENABLEVERTEXATTRIBARRAYARBPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glEnableVertexAttribArrayARB&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglDisableVertexAttribArrayARB<sp/>=<sp/>(PFNGLDISABLEVERTEXATTRIBARRAYARBPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glDisableVertexAttribArrayARB&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglProgramStringARB<sp/>=<sp/>(PFNGLPROGRAMSTRINGARBPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glProgramStringARB&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBindProgramARB<sp/>=<sp/>(PFNGLBINDPROGRAMARBPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glBindProgramARB&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglGenProgramsARB<sp/>=<sp/>(PFNGLGENPROGRAMSARBPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glGenProgramsARB&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglProgramEnvParameter4fvARB<sp/>=<sp/>(PFNGLPROGRAMENVPARAMETER4FVARBPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glProgramEnvParameter4fvARB&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglProgramLocalParameter4fvARB<sp/>=<sp/>(PFNGLPROGRAMLOCALPARAMETER4FVARBPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glProgramLocalParameter4fvARB&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ARB_fragment_program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_inhibitFragmentProgram.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glConfig.ARBFragmentProgramAvailable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glConfig.ARBFragmentProgramAvailable<sp/>=<sp/>R_CheckExtension(<sp/></highlight><highlight class="stringliteral">&quot;GL_ARB_fragment_program&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glConfig.ARBFragmentProgramAvailable)<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>are<sp/>the<sp/>same<sp/>as<sp/>ARB_vertex_program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglProgramStringARB<sp/>=<sp/>(PFNGLPROGRAMSTRINGARBPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glProgramStringARB&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBindProgramARB<sp/>=<sp/>(PFNGLBINDPROGRAMARBPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glBindProgramARB&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglProgramEnvParameter4fvARB<sp/>=<sp/>(PFNGLPROGRAMENVPARAMETER4FVARBPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glProgramEnvParameter4fvARB&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglProgramLocalParameter4fvARB<sp/>=<sp/>(PFNGLPROGRAMLOCALPARAMETER4FVARBPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glProgramLocalParameter4fvARB&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>minimum<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!glConfig.multitextureAvailable<sp/>||<sp/>!glConfig.textureEnvCombineAvailable<sp/>||<sp/>!glConfig.cubeMapAvailable</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!glConfig.envDot3Available<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Error(<sp/>common-&gt;GetLanguageDict()-&gt;GetString(<sp/></highlight><highlight class="stringliteral">&quot;#str_06780&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GL_EXT_depth_bounds_test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.depthBoundsTestAvailable<sp/>=<sp/>R_CheckExtension(<sp/></highlight><highlight class="stringliteral">&quot;EXT_depth_bounds_test&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>glConfig.depthBoundsTestAvailable<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglDepthBoundsEXT<sp/>=<sp/>(PFNGLDEPTHBOUNDSEXTPROC)GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glDepthBoundsEXT&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="542"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="543"><highlight class="comment">R_GetModeInfo</highlight></codeline>
<codeline lineno="544"><highlight class="comment"></highlight></codeline>
<codeline lineno="545"><highlight class="comment">r_mode<sp/>is<sp/>normally<sp/>a<sp/>small<sp/>non-negative<sp/>integer<sp/>that</highlight></codeline>
<codeline lineno="546"><highlight class="comment">looks<sp/>resolutions<sp/>up<sp/>in<sp/>a<sp/>table,<sp/>but<sp/>if<sp/>it<sp/>is<sp/>set<sp/>to<sp/>-1,</highlight></codeline>
<codeline lineno="547"><highlight class="comment">the<sp/>values<sp/>from<sp/>r_customWidth,<sp/>amd<sp/>r_customHeight</highlight></codeline>
<codeline lineno="548"><highlight class="comment">will<sp/>be<sp/>used<sp/>instead.</highlight></codeline>
<codeline lineno="549"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="550"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551" refid="structvidmode__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvidmode__s" kindref="compound">vidmode_s</ref><sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*description;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width,<sp/>height;</highlight></codeline>
<codeline lineno="554"><highlight class="normal">}<sp/><ref refid="structvidmode__s" kindref="compound">vidmode_t</ref>;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><ref refid="structvidmode__s" kindref="compound">vidmode_t</ref><sp/>r_vidModes[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;Mode<sp/><sp/>0:<sp/>320x240&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>320,<sp/><sp/><sp/><sp/>240<sp/>},</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;Mode<sp/><sp/>1:<sp/>400x300&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>400,<sp/><sp/><sp/><sp/>300<sp/>},</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;Mode<sp/><sp/>2:<sp/>512x384&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>512,<sp/><sp/><sp/><sp/>384<sp/>},</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;Mode<sp/><sp/>3:<sp/>640x480&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>640,<sp/><sp/><sp/><sp/>480<sp/>},</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;Mode<sp/><sp/>4:<sp/>800x600&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>800,<sp/><sp/><sp/><sp/>600<sp/>},</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;Mode<sp/><sp/>5:<sp/>1024x768&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>1024,<sp/><sp/><sp/>768<sp/>},</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;Mode<sp/><sp/>6:<sp/>1152x864&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>1152,<sp/><sp/><sp/>864<sp/>},</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;Mode<sp/><sp/>7:<sp/>1280x1024&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>1280,<sp/><sp/><sp/>1024<sp/>},</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;Mode<sp/><sp/>8:<sp/>1600x1200&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>1600,<sp/><sp/><sp/>1200<sp/>},</highlight></codeline>
<codeline lineno="566"><highlight class="normal">};</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>s_numVidModes<sp/>=<sp/>(<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>r_vidModes<sp/>)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>r_vidModes[0]<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>MACOS_X</highlight></codeline>
<codeline lineno="570"><highlight class="preprocessor"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>R_GetModeInfo(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="572"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>R_GetModeInfo(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="574"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvidmode__s" kindref="compound">vidmode_t</ref><sp/><sp/><sp/>*vm;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>mode<sp/>&lt;<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>mode<sp/>&gt;=<sp/>s_numVidModes<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>mode<sp/>==<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*width<sp/>=<sp/>r_customWidth.GetInteger();</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*height<sp/>=<sp/>r_customHeight.GetInteger();</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>vm<sp/>=<sp/>&amp;r_vidModes[mode];</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>width<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*width<sp/><sp/>=<sp/>vm-&gt;width;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>height<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*height<sp/>=<sp/>vm-&gt;height;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="599"><highlight class="normal">}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="603"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="604"><highlight class="comment">R_InitOpenGL</highlight></codeline>
<codeline lineno="605"><highlight class="comment"></highlight></codeline>
<codeline lineno="606"><highlight class="comment">This<sp/>function<sp/>is<sp/>responsible<sp/>for<sp/>initializing<sp/>a<sp/>valid<sp/>OpenGL<sp/>subsystem</highlight></codeline>
<codeline lineno="607"><highlight class="comment">for<sp/>rendering.<sp/><sp/>This<sp/>is<sp/>done<sp/>by<sp/>calling<sp/>the<sp/>system<sp/>specific<sp/>GLimp_Init,</highlight></codeline>
<codeline lineno="608"><highlight class="comment">which<sp/>gives<sp/>us<sp/>a<sp/>working<sp/>OGL<sp/>subsystem,<sp/>then<sp/>setting<sp/>all<sp/>necessary<sp/>openGL</highlight></codeline>
<codeline lineno="609"><highlight class="comment">state,<sp/>including<sp/>images,<sp/>vertex<sp/>programs,<sp/>and<sp/>display<sp/>lists.</highlight></codeline>
<codeline lineno="610"><highlight class="comment"></highlight></codeline>
<codeline lineno="611"><highlight class="comment">Changes<sp/>to<sp/>the<sp/>vertex<sp/>cache<sp/>size<sp/>or<sp/>smp<sp/>state<sp/>require<sp/>a<sp/>vid_restart.</highlight></codeline>
<codeline lineno="612"><highlight class="comment"></highlight></codeline>
<codeline lineno="613"><highlight class="comment">If<sp/>glConfig.isInitialized<sp/>is<sp/>false,<sp/>no<sp/>rendering<sp/>can<sp/>take<sp/>place,<sp/>but</highlight></codeline>
<codeline lineno="614"><highlight class="comment">all<sp/>renderSystem<sp/>functions<sp/>will<sp/>still<sp/>operate<sp/>properly,<sp/>notably<sp/>the<sp/>material</highlight></codeline>
<codeline lineno="615"><highlight class="comment">and<sp/>model<sp/>information<sp/>functions.</highlight></codeline>
<codeline lineno="616"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="617"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_InitOpenGL(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structglimp_parms__t" kindref="compound">glimpParms_t</ref><sp/><sp/><sp/><sp/>parms;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;-----<sp/>R_InitOpenGL<sp/>-----\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>glConfig.isInitialized<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;FatalError(<sp/></highlight><highlight class="stringliteral">&quot;R_InitOpenGL<sp/>called<sp/>while<sp/>active&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>case<sp/>we<sp/>had<sp/>an<sp/>error<sp/>while<sp/>doing<sp/>a<sp/>tiled<sp/>rendering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>tr.viewportOffset[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>tr.viewportOffset[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>OS<sp/>specific<sp/>portions<sp/>of<sp/>the<sp/>renderSystem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>2<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>parameters<sp/>we<sp/>are<sp/>trying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_GetModeInfo(<sp/>&amp;glConfig.vidWidth,<sp/>&amp;glConfig.vidHeight,<sp/>r_mode.GetInteger()<sp/>);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parms.width<sp/>=<sp/>glConfig.vidWidth;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parms.height<sp/>=<sp/>glConfig.vidHeight;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parms.fullScreen<sp/>=<sp/>r_fullscreen.GetBool();</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parms.displayHz<sp/>=<sp/>r_displayRefresh.GetInteger();</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parms.multiSamples<sp/>=<sp/>r_multiSamples.GetInteger();</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parms.stereo<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>GLimp_Init(<sp/>parms<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>worked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>==<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;FatalError(<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>initialize<sp/>OpenGL&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>failed,<sp/>set<sp/>everything<sp/>back<sp/>to<sp/>&quot;safe<sp/>mode&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>try<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_mode.SetInteger(<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_fullscreen.SetInteger(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_displayRefresh.SetInteger(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_multiSamples.SetInteger(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>input<sp/>and<sp/>sound<sp/>systems<sp/>need<sp/>to<sp/>be<sp/>tied<sp/>to<sp/>the<sp/>new<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_InitInput();</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>soundSystem-&gt;InitHW();</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>our<sp/>config<sp/>strings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.vendor_string<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)qglGetString(GL_VENDOR);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.renderer_string<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)qglGetString(GL_RENDERER);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.version_string<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)qglGetString(GL_VERSION);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.extensions_string<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)qglGetString(GL_EXTENSIONS);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OpenGL<sp/>driver<sp/>constants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>qglGetIntegerv(<sp/>GL_MAX_TEXTURE_SIZE,<sp/>&amp;temp<sp/>);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.maxTextureSize<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stubbed<sp/>or<sp/>broken<sp/>drivers<sp/>may<sp/>have<sp/>reported<sp/>0...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>glConfig.maxTextureSize<sp/>&lt;=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glConfig.maxTextureSize<sp/>=<sp/>256;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.isInitialized<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>recheck<sp/>all<sp/>the<sp/>extensions<sp/>(FIXME:<sp/>this<sp/>might<sp/>be<sp/>dangerous)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>R_CheckPortableExtensions();</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parse<sp/>our<sp/>vertex<sp/>and<sp/>fragment<sp/>programs,<sp/>possibly<sp/>disably<sp/>support<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>of<sp/>the<sp/>paths<sp/>if<sp/>there<sp/>was<sp/>an<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>R_NV10_Init();</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>R_NV20_Init();</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>R_R200_Init();</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>R_ARB2_Init();</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>cmdSystem-&gt;AddCommand(<sp/></highlight><highlight class="stringliteral">&quot;reloadARBprograms&quot;</highlight><highlight class="normal">,<sp/>R_ReloadARBPrograms_f,<sp/>CMD_FL_RENDERER,<sp/></highlight><highlight class="stringliteral">&quot;reloads<sp/>ARB<sp/>programs&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>R_ReloadARBPrograms_f(<sp/><ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref>()<sp/>);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>the<sp/>vertex<sp/>array<sp/>range<sp/>or<sp/>vertex<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>vertexCache.Init();</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>select<sp/>which<sp/>renderSystem<sp/>we<sp/>are<sp/>going<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>r_renderer.SetModified();</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>tr.SetBackEndRenderer();</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>the<sp/>frame<sp/>data,<sp/>which<sp/>may<sp/>be<sp/>more<sp/>if<sp/>smp<sp/>is<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>R_InitFrameData();</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>our<sp/>gamma</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>R_SetColorMappings();</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight></codeline>
<codeline lineno="712"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>glCheck<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!glCheck<sp/>&amp;&amp;<sp/>win32.osversion.dwMajorVersion<sp/>==<sp/>6<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glCheck<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!idStr::Icmp(<sp/>glConfig.vendor_string,<sp/></highlight><highlight class="stringliteral">&quot;Microsoft&quot;</highlight><highlight class="normal"><sp/>)<sp/>&amp;&amp;<sp/>idStr::FindText(<sp/>glConfig.renderer_string,<sp/></highlight><highlight class="stringliteral">&quot;OpenGL-D3D&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>cvarSystem-&gt;GetCVarBool(<sp/></highlight><highlight class="stringliteral">&quot;r_fullscreen&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmdSystem-&gt;BufferCommandText(<sp/>CMD_EXEC_NOW,<sp/></highlight><highlight class="stringliteral">&quot;vid_restart<sp/>partial<sp/>windowed\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sys_GrabMouseCursor(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>MessageBox(<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>install<sp/>OpenGL<sp/>drivers<sp/>from<sp/>your<sp/>graphics<sp/>hardware<sp/>vendor<sp/>to<sp/>run<sp/>&quot;</highlight><highlight class="normal"><sp/>GAME_NAME<sp/></highlight><highlight class="stringliteral">&quot;.\nYour<sp/>OpenGL<sp/>functionality<sp/>is<sp/>limited.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Insufficient<sp/>OpenGL<sp/>capabilities&quot;</highlight><highlight class="normal">,<sp/>MB_OKCANCEL<sp/>|<sp/>MB_ICONWARNING<sp/>|<sp/>MB_TASKMODAL<sp/>);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>==<sp/>IDCANCEL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmdSystem-&gt;BufferCommandText(<sp/>CMD_EXEC_APPEND,<sp/></highlight><highlight class="stringliteral">&quot;quit\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmdSystem-&gt;ExecuteCommandBuffer();</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>cvarSystem-&gt;GetCVarBool(<sp/></highlight><highlight class="stringliteral">&quot;r_fullscreen&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmdSystem-&gt;BufferCommandText(<sp/>CMD_EXEC_APPEND,<sp/></highlight><highlight class="stringliteral">&quot;vid_restart\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="732"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="735"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="736"><highlight class="comment">GL_CheckErrors</highlight></codeline>
<codeline lineno="737"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="738"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GL_CheckErrors(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>err;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>s[64];</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>up<sp/>to<sp/>10<sp/>errors<sp/>pending</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>10<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>qglGetError();</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>err<sp/>==<sp/>GL_NO_ERROR<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>err<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_INVALID_ENUM:</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(<sp/>s,<sp/></highlight><highlight class="stringliteral">&quot;GL_INVALID_ENUM&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_INVALID_VALUE:</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(<sp/>s,<sp/></highlight><highlight class="stringliteral">&quot;GL_INVALID_VALUE&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_INVALID_OPERATION:</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(<sp/>s,<sp/></highlight><highlight class="stringliteral">&quot;GL_INVALID_OPERATION&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_STACK_OVERFLOW:</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(<sp/>s,<sp/></highlight><highlight class="stringliteral">&quot;GL_STACK_OVERFLOW&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_STACK_UNDERFLOW:</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(<sp/>s,<sp/></highlight><highlight class="stringliteral">&quot;GL_STACK_UNDERFLOW&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_OUT_OF_MEMORY:</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(<sp/>s,<sp/></highlight><highlight class="stringliteral">&quot;GL_OUT_OF_MEMORY&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idStr::snPrintf(<sp/>s,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(s),<sp/></highlight><highlight class="stringliteral">&quot;%i&quot;</highlight><highlight class="normal">,<sp/>err);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!r_ignoreGLErrors.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;GL_CheckErrors:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal">}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="781"><highlight class="comment">=====================</highlight></codeline>
<codeline lineno="782"><highlight class="comment">R_ReloadSurface_f</highlight></codeline>
<codeline lineno="783"><highlight class="comment"></highlight></codeline>
<codeline lineno="784"><highlight class="comment">Reload<sp/>the<sp/>material<sp/>displayed<sp/>by<sp/>r_showSurfaceInfo</highlight></codeline>
<codeline lineno="785"><highlight class="comment">=====================</highlight></codeline>
<codeline lineno="786"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_ReloadSurface_f(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref><sp/>&amp;args<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmodel_trace__s" kindref="compound">modelTrace_t</ref><sp/>mt;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>start,<sp/>end;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>far<sp/>enough<sp/>away<sp/>that<sp/>we<sp/>don&apos;t<sp/>hit<sp/>the<sp/>player<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>tr.primaryView-&gt;renderView.vieworg<sp/>+<sp/>tr.primaryView-&gt;renderView.viewaxis[0]<sp/>*<sp/>16;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>end<sp/>=<sp/>start<sp/>+<sp/>tr.primaryView-&gt;renderView.viewaxis[0]<sp/>*<sp/>1000.0f;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!tr.primaryWorld-&gt;Trace(<sp/>mt,<sp/>start,<sp/>end,<sp/>0.0f,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;Reloading<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>mt.material-&gt;GetName()<sp/>);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reload<sp/>the<sp/>decl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>mt.material-&gt;base-&gt;Reload();</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reload<sp/>any<sp/>images<sp/>used<sp/>by<sp/>the<sp/>decl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>mt.material-&gt;ReloadImages(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="805"><highlight class="normal">}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="810"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="811"><highlight class="comment">R_ListModes_f</highlight></codeline>
<codeline lineno="812"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="813"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_ListModes_f(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref><sp/>&amp;args<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>s_numVidModes;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>r_vidModes[i].description<sp/>);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="822"><highlight class="normal">}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="827"><highlight class="comment">=============</highlight></codeline>
<codeline lineno="828"><highlight class="comment">R_TestImage_f</highlight></codeline>
<codeline lineno="829"><highlight class="comment"></highlight></codeline>
<codeline lineno="830"><highlight class="comment">Display<sp/>the<sp/>given<sp/>image<sp/>centered<sp/>on<sp/>the<sp/>screen.</highlight></codeline>
<codeline lineno="831"><highlight class="comment">testimage<sp/>&lt;number&gt;</highlight></codeline>
<codeline lineno="832"><highlight class="comment">testimage<sp/>&lt;filename&gt;</highlight></codeline>
<codeline lineno="833"><highlight class="comment">=============</highlight></codeline>
<codeline lineno="834"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_TestImage_f(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref><sp/>&amp;args<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imageNum;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tr.testVideo<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tr.testVideo;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr.testVideo<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>tr.testImage<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>args.Argc()<sp/>!=<sp/>2<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>idStr::IsNumeric(<sp/>args.Argv(1)<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imageNum<sp/>=<sp/>atoi(<sp/>args.Argv(1)<sp/>);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>imageNum<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>imageNum<sp/>&lt;<sp/>globalImages-&gt;images.Num()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr.testImage<sp/>=<sp/>globalImages-&gt;images[imageNum];</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr.testImage<sp/>=<sp/>globalImages-&gt;ImageFromFile(<sp/>args.Argv(<sp/>1<sp/>),<sp/>TF_DEFAULT,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>TR_REPEAT,<sp/>TD_DEFAULT<sp/>);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="856"><highlight class="normal">}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="859"><highlight class="comment">=============</highlight></codeline>
<codeline lineno="860"><highlight class="comment">R_TestVideo_f</highlight></codeline>
<codeline lineno="861"><highlight class="comment"></highlight></codeline>
<codeline lineno="862"><highlight class="comment">Plays<sp/>the<sp/>cinematic<sp/>file<sp/>in<sp/>a<sp/>testImage</highlight></codeline>
<codeline lineno="863"><highlight class="comment">=============</highlight></codeline>
<codeline lineno="864"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_TestVideo_f(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref><sp/>&amp;args<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tr.testVideo<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tr.testVideo;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr.testVideo<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>tr.testImage<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>args.Argc()<sp/>&lt;<sp/>2<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>tr.testImage<sp/>=<sp/>globalImages-&gt;ImageFromFile(<sp/></highlight><highlight class="stringliteral">&quot;_scratch&quot;</highlight><highlight class="normal">,<sp/>TF_DEFAULT,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>TR_REPEAT,<sp/>TD_DEFAULT<sp/>);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>tr.testVideo<sp/>=<sp/>idCinematic::Alloc();</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>tr.testVideo-&gt;InitFromFile(<sp/>args.Argv(<sp/>1<sp/>),<sp/>true<sp/>);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcin_data__t" kindref="compound">cinData_t</ref><sp/><sp/><sp/>cin;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>cin<sp/>=<sp/>tr.testVideo-&gt;ImageForTime(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!cin.image<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tr.testVideo;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr.testVideo<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr.testImage<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;%i<sp/>x<sp/>%i<sp/>images\n&quot;</highlight><highlight class="normal">,<sp/>cin.imageWidth,<sp/>cin.imageHeight<sp/>);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>tr.testVideo-&gt;AnimationLength();</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;%5.1f<sp/>seconds<sp/>of<sp/>video\n&quot;</highlight><highlight class="normal">,<sp/>len<sp/>*<sp/>0.001<sp/>);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>tr.testVideoStartTime<sp/>=<sp/>tr.primaryRenderView.time<sp/>*<sp/>0.001;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>play<sp/>the<sp/>matching<sp/>wav<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/><sp/><sp/>wavString<sp/>=<sp/>args.Argv(<sp/>(<sp/>args.Argc()<sp/>==<sp/>2<sp/>)<sp/>?<sp/>1<sp/>:<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>wavString.StripFileExtension();</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>wavString<sp/>=<sp/>wavString<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.wav&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>session-&gt;sw-&gt;PlayShaderDirectly(<sp/>wavString.c_str()<sp/>);</highlight></codeline>
<codeline lineno="901"><highlight class="normal">}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>R_QsortSurfaceAreas(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*b<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_material" kindref="compound">idMaterial</ref><sp/><sp/><sp/><sp/>*ea,<sp/>*eb;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ac,<sp/>bc;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>ea<sp/>=<sp/>*(<ref refid="classid_material" kindref="compound">idMaterial</ref><sp/>**)a;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!ea-&gt;EverReferenced()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ac<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ac<sp/>=<sp/>ea-&gt;GetSurfaceArea();</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>eb<sp/>=<sp/>*(<ref refid="classid_material" kindref="compound">idMaterial</ref><sp/>**)b;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!eb-&gt;EverReferenced()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bc<sp/>=<sp/>eb-&gt;GetSurfaceArea();</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ac<sp/>&lt;<sp/>bc<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ac<sp/>&gt;<sp/>bc<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>idStr::Icmp(<sp/>ea-&gt;GetName(),<sp/>eb-&gt;GetName()<sp/>);</highlight></codeline>
<codeline lineno="928"><highlight class="normal">}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="932"><highlight class="comment">===================</highlight></codeline>
<codeline lineno="933"><highlight class="comment">R_ReportSurfaceAreas_f</highlight></codeline>
<codeline lineno="934"><highlight class="comment"></highlight></codeline>
<codeline lineno="935"><highlight class="comment">Prints<sp/>a<sp/>list<sp/>of<sp/>the<sp/>materials<sp/>sorted<sp/>by<sp/>surface<sp/>area</highlight></codeline>
<codeline lineno="936"><highlight class="comment">===================</highlight></codeline>
<codeline lineno="937"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_ReportSurfaceAreas_f(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref><sp/>&amp;args<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>i,<sp/>count;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_material" kindref="compound">idMaterial</ref><sp/><sp/>**list;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/>declManager-&gt;GetNumDecls(<sp/>DECL_MATERIAL<sp/>);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>list<sp/>=<sp/>(<ref refid="classid_material" kindref="compound">idMaterial</ref><sp/>**)_alloca(<sp/>count<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>*list<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>count<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list[i]<sp/>=<sp/>(<ref refid="classid_material" kindref="compound">idMaterial</ref><sp/>*)declManager-&gt;DeclByIndex(<sp/>DECL_MATERIAL,<sp/>i,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/>qsort(<sp/>list,<sp/>count,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>list[0]<sp/>),<sp/>R_QsortSurfaceAreas<sp/>);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>over<sp/>ones<sp/>with<sp/>0<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>count<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>list[i]-&gt;GetSurfaceArea()<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>i<sp/>&lt;<sp/>count<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>report<sp/>size<sp/>in<sp/>&quot;editor<sp/>blocks&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blocks<sp/>=<sp/>list[i]-&gt;GetSurfaceArea()<sp/>/<sp/>4096.0;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;%7i<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>blocks,<sp/>list[i]-&gt;GetName()<sp/>);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="963"><highlight class="normal">}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="966"><highlight class="comment">===================</highlight></codeline>
<codeline lineno="967"><highlight class="comment">R_ReportImageDuplication_f</highlight></codeline>
<codeline lineno="968"><highlight class="comment"></highlight></codeline>
<codeline lineno="969"><highlight class="comment">Checks<sp/>for<sp/>images<sp/>with<sp/>the<sp/>same<sp/>hash<sp/>value<sp/>and<sp/>does<sp/>a<sp/>better<sp/>comparison</highlight></codeline>
<codeline lineno="970"><highlight class="comment">===================</highlight></codeline>
<codeline lineno="971"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_ReportImageDuplication_f(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref><sp/>&amp;args<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;Images<sp/>with<sp/>duplicated<sp/>contents:\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>globalImages-&gt;images.Num()<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/>*image1<sp/>=<sp/>globalImages-&gt;images[i];</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>image1-&gt;isPartialImage<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ignore<sp/>background<sp/>loading<sp/>stubs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>image1-&gt;generatorFunction<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ignore<sp/>procedural<sp/>images</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>image1-&gt;cubeFiles<sp/>!=<sp/>CF_2D<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ignore<sp/>cube<sp/>maps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>image1-&gt;defaulted<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/><sp/>*data1;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>w1,<sp/>h1;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_LoadImageProgram(<sp/>image1-&gt;imgName,<sp/>&amp;data1,<sp/>&amp;w1,<sp/>&amp;h1,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>j<sp/>=<sp/>0<sp/>;<sp/>j<sp/>&lt;<sp/>i<sp/>;<sp/>j++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/>*image2<sp/>=<sp/>globalImages-&gt;images[j];</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>image2-&gt;isPartialImage<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>image2-&gt;generatorFunction<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>image2-&gt;cubeFiles<sp/>!=<sp/>CF_2D<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>image2-&gt;defaulted<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>image1-&gt;imageHash<sp/>!=<sp/>image2-&gt;imageHash<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>image2-&gt;uploadWidth<sp/>!=<sp/>image1-&gt;uploadWidth</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>image2-&gt;uploadHeight<sp/>!=<sp/>image1-&gt;uploadHeight<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!idStr::Icmp(<sp/>image1-&gt;imgName,<sp/>image2-&gt;imgName<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ignore<sp/>same<sp/>image-with-different-parms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/><sp/>*data2;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>w2,<sp/>h2;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_LoadImageProgram(<sp/>image2-&gt;imgName,<sp/>&amp;data2,<sp/>&amp;w2,<sp/>&amp;h2,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>w2<sp/>!=<sp/>w1<sp/>||<sp/>h2<sp/>!=<sp/>h1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_StaticFree(<sp/>data2<sp/>);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>memcmp(<sp/>data1,<sp/>data2,<sp/>w1*h1*4<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_StaticFree(<sp/>data2<sp/>);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_StaticFree(<sp/>data2<sp/>);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>==<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>image1-&gt;imgName.c_str(),<sp/>image2-&gt;imgName.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>session-&gt;UpdateScreen(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_StaticFree(<sp/>data1<sp/>);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;%i<sp/>/<sp/>%i<sp/>collisions\n&quot;</highlight><highlight class="normal">,<sp/>count,<sp/>globalImages-&gt;images.Num()<sp/>);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="1058"><highlight class="comment">==============================================================================<sp/></highlight></codeline>
<codeline lineno="1059"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="1060"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>THROUGHPUT<sp/>BENCHMARKING</highlight></codeline>
<codeline lineno="1061"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="1062"><highlight class="comment">==============================================================================<sp/></highlight></codeline>
<codeline lineno="1063"><highlight class="comment">*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1066"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1067"><highlight class="comment">R_RenderingFPS</highlight></codeline>
<codeline lineno="1068"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1069"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>R_RenderingFPS(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structrender_view__s" kindref="compound">renderView_t</ref><sp/>*renderView<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>qglFinish();</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>Sys_Milliseconds();</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SAMPLE_MSEC<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>end;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>render</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderSystem-&gt;BeginFrame(<sp/>glConfig.vidWidth,<sp/>glConfig.vidHeight<sp/>);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr.primaryWorld-&gt;RenderScene(<sp/>renderView<sp/>);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderSystem-&gt;EndFrame(<sp/>NULL,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglFinish();</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>Sys_Milliseconds();</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>end<sp/>-<sp/>start<sp/>&gt;<sp/>SAMPLE_MSEC<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fps<sp/>=<sp/>count<sp/>*<sp/>1000.0<sp/>/<sp/>(<sp/>end<sp/>-<sp/>start<sp/>);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fps;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1097"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1098"><highlight class="comment">R_Benchmark_f</highlight></codeline>
<codeline lineno="1099"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1100"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_Benchmark_f(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref><sp/>&amp;args<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>fps,<sp/>msec;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrender_view__s" kindref="compound">renderView_t</ref><sp/><sp/><sp/><sp/>view;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!tr.primaryView<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>primaryView<sp/>for<sp/>benchmarking\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/>view<sp/>=<sp/>tr.primaryRenderView;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>100<sp/>;<sp/>size<sp/>&gt;=<sp/>10<sp/>;<sp/>size<sp/>-=<sp/>10<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_screenFraction.SetInteger(<sp/>size<sp/>);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fps<sp/>=<sp/>R_RenderingFPS(<sp/>&amp;view<sp/>);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kpix<sp/>=<sp/>glConfig.vidWidth<sp/>*<sp/>glConfig.vidHeight<sp/>*<sp/>(<sp/>size<sp/>*<sp/>0.01<sp/>)<sp/>*<sp/>(<sp/>size<sp/>*<sp/>0.01<sp/>)<sp/>*<sp/>0.001;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msec<sp/>=<sp/>1000.0<sp/>/<sp/>fps;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;kpix:<sp/>%4i<sp/><sp/>msec:%5.1f<sp/>fps:%5.1f\n&quot;</highlight><highlight class="normal">,<sp/>kpix,<sp/>msec,<sp/>fps<sp/>);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enable<sp/>r_singleTriangle<sp/>1<sp/>while<sp/>r_screenFraction<sp/>is<sp/>still<sp/>at<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>r_singleTriangle.SetBool(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/>fps<sp/>=<sp/>R_RenderingFPS(<sp/>&amp;view<sp/>);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/>msec<sp/>=<sp/>1000.0<sp/>/<sp/>fps;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;single<sp/>tri<sp/><sp/>msec:%5.1f<sp/>fps:%5.1f\n&quot;</highlight><highlight class="normal">,<sp/>msec,<sp/>fps<sp/>);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/>r_singleTriangle.SetBool(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>r_screenFraction.SetInteger(<sp/>100<sp/>);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enable<sp/>r_skipRenderContext<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>r_skipRenderContext.SetBool(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/>fps<sp/>=<sp/>R_RenderingFPS(<sp/>&amp;view<sp/>);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>msec<sp/>=<sp/>1000.0<sp/>/<sp/>fps;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>context<sp/><sp/>msec:%5.1f<sp/>fps:%5.1f\n&quot;</highlight><highlight class="normal">,<sp/>msec,<sp/>fps<sp/>);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>r_skipRenderContext.SetBool(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="1137"><highlight class="comment">==============================================================================<sp/></highlight></codeline>
<codeline lineno="1138"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="1139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SCREEN<sp/>SHOTS<sp/></highlight></codeline>
<codeline lineno="1140"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="1141"><highlight class="comment">==============================================================================<sp/></highlight></codeline>
<codeline lineno="1142"><highlight class="comment">*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1145"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="1146"><highlight class="comment">R_ReadTiledPixels</highlight></codeline>
<codeline lineno="1147"><highlight class="comment"></highlight></codeline>
<codeline lineno="1148"><highlight class="comment">Allows<sp/>the<sp/>rendering<sp/>of<sp/>an<sp/>image<sp/>larger<sp/>than<sp/>the<sp/>actual<sp/>window<sp/>by</highlight></codeline>
<codeline lineno="1149"><highlight class="comment">tiling<sp/>it<sp/>into<sp/>window-sized<sp/>chunks<sp/>and<sp/>rendering<sp/>each<sp/>chunk<sp/>separately</highlight></codeline>
<codeline lineno="1150"><highlight class="comment"></highlight></codeline>
<codeline lineno="1151"><highlight class="comment">If<sp/>ref<sp/>isn&apos;t<sp/>specified,<sp/>the<sp/>full<sp/>session<sp/>UpdateScreen<sp/>will<sp/>be<sp/>done.</highlight></codeline>
<codeline lineno="1152"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="1153"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_ReadTiledPixels(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/>byte<sp/>*buffer,<sp/><ref refid="structrender_view__s" kindref="compound">renderView_t</ref><sp/>*ref<sp/>=<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>include<sp/>extra<sp/>space<sp/>for<sp/>OpenGL<sp/>padding<sp/>to<sp/>word<sp/>boundaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/><sp/>*temp<sp/>=<sp/>(byte<sp/>*)R_StaticAlloc(<sp/>(glConfig.vidWidth+3)<sp/>*<sp/>glConfig.vidHeight<sp/>*<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oldWidth<sp/>=<sp/>glConfig.vidWidth;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oldHeight<sp/>=<sp/>glConfig.vidHeight;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/>tr.tiledViewport[0]<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/>tr.tiledViewport[1]<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disable<sp/>scissor,<sp/>so<sp/>we<sp/>don&apos;t<sp/>need<sp/>to<sp/>adjust<sp/>all<sp/>those<sp/>rects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/>r_useScissor.SetBool(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xo<sp/>=<sp/>0<sp/>;<sp/>xo<sp/>&lt;<sp/>width<sp/>;<sp/>xo<sp/>+=<sp/>oldWidth<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yo<sp/>=<sp/>0<sp/>;<sp/>yo<sp/>&lt;<sp/>height<sp/>;<sp/>yo<sp/>+=<sp/>oldHeight<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr.viewportOffset[0]<sp/>=<sp/>-xo;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr.viewportOffset[1]<sp/>=<sp/>-yo;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ref<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr.BeginFrame(<sp/>oldWidth,<sp/>oldHeight<sp/>);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr.primaryWorld-&gt;RenderScene(<sp/>ref<sp/>);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr.EndFrame(<sp/>NULL,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>session-&gt;UpdateScreen();</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>oldWidth;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>xo<sp/>+<sp/>w<sp/>&gt;<sp/>width<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>width<sp/>-<sp/>xo;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>oldHeight;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>yo<sp/>+<sp/>h<sp/>&gt;<sp/>height<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>height<sp/>-<sp/>yo;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglReadBuffer(<sp/>GL_FRONT<sp/>);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglReadPixels(<sp/>0,<sp/>0,<sp/>w,<sp/>h,<sp/>GL_RGB,<sp/>GL_UNSIGNED_BYTE,<sp/>temp<sp/>);<sp/></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>(<sp/>w<sp/>*<sp/>3<sp/>+<sp/>3<sp/>)<sp/>&amp;<sp/>~3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OpenGL<sp/>pads<sp/>to<sp/>dword<sp/>boundaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0<sp/>;<sp/>y<sp/>&lt;<sp/>h<sp/>;<sp/>y++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<sp/>buffer<sp/>+<sp/>(<sp/>(<sp/>yo<sp/>+<sp/>y<sp/>)*<sp/>width<sp/>+<sp/>xo<sp/>)<sp/>*<sp/>3,</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>+<sp/>y<sp/>*<sp/>row,<sp/>w<sp/>*<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/>r_useScissor.SetBool(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>tr.viewportOffset[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>tr.viewportOffset[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/>tr.tiledViewport[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/>tr.tiledViewport[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>R_StaticFree(<sp/>temp<sp/>);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.vidWidth<sp/>=<sp/>oldWidth;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.vidHeight<sp/>=<sp/>oldHeight;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1216"><highlight class="comment">==================<sp/></highlight></codeline>
<codeline lineno="1217"><highlight class="comment">TakeScreenshot</highlight></codeline>
<codeline lineno="1218"><highlight class="comment"></highlight></codeline>
<codeline lineno="1219"><highlight class="comment">Move<sp/>to<sp/>tr_imagefiles.c...</highlight></codeline>
<codeline lineno="1220"><highlight class="comment"></highlight></codeline>
<codeline lineno="1221"><highlight class="comment">Will<sp/>automatically<sp/>tile<sp/>render<sp/>large<sp/>screen<sp/>shots<sp/>if<sp/>necessary</highlight></codeline>
<codeline lineno="1222"><highlight class="comment">Downsample<sp/>is<sp/>the<sp/>number<sp/>of<sp/>steps<sp/>to<sp/>mipmap<sp/>the<sp/>image<sp/>before<sp/>saving<sp/>it</highlight></codeline>
<codeline lineno="1223"><highlight class="comment">If<sp/>ref<sp/>==<sp/>NULL,<sp/>session-&gt;updateScreen<sp/>will<sp/>be<sp/>used</highlight></codeline>
<codeline lineno="1224"><highlight class="comment">==================<sp/></highlight></codeline>
<codeline lineno="1225"><highlight class="comment">*/</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idRenderSystemLocal::TakeScreenshot(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fileName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blends,<sp/><ref refid="structrender_view__s" kindref="compound">renderView_t</ref><sp/>*ref<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buffer;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>j,<sp/>c,<sp/>temp;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/>takingScreenshot<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pix<sp/>=<sp/>width<sp/>*<sp/>height;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/>(byte<sp/>*)R_StaticAlloc(pix*3<sp/>+<sp/>18);</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/>memset<sp/>(buffer,<sp/>0,<sp/>18);</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>blends<sp/>&lt;=<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_ReadTiledPixels(<sp/>width,<sp/>height,<sp/>buffer<sp/>+<sp/>18,<sp/>ref<sp/>);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*shortBuffer<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*)R_StaticAlloc(pix*2*3);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset<sp/>(shortBuffer,<sp/>0,<sp/>pix*2*3);</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enable<sp/>anti-aliasing<sp/>jitter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_jitter.SetBool(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>blends<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_ReadTiledPixels(<sp/>width,<sp/>height,<sp/>buffer<sp/>+<sp/>18,<sp/>ref<sp/>);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>j<sp/>=<sp/>0<sp/>;<sp/>j<sp/>&lt;<sp/>pix*3<sp/>;<sp/>j++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shortBuffer[j]<sp/>+=<sp/>buffer[18+j];</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>divide<sp/>back<sp/>to<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>pix*3<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[18+i]<sp/>=<sp/>shortBuffer[i]<sp/>/<sp/>blends;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_StaticFree(<sp/>shortBuffer<sp/>);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_jitter.SetBool(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>in<sp/>the<sp/>header<sp/>(this<sp/>is<sp/>vertically<sp/>flipped,<sp/>which<sp/>qglReadPixels<sp/>emits)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[2]<sp/>=<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uncompressed<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[12]<sp/>=<sp/>width<sp/>&amp;<sp/>255;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[13]<sp/>=<sp/>width<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[14]<sp/>=<sp/>height<sp/>&amp;<sp/>255;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[15]<sp/>=<sp/>height<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[16]<sp/>=<sp/>24;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pixel<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>swap<sp/>rgb<sp/>to<sp/>bgr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>18<sp/>+<sp/>width<sp/>*<sp/>height<sp/>*<sp/>3;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=18<sp/>;<sp/>i&lt;c<sp/>;<sp/>i+=3)<sp/>{</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>buffer[i];</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[i]<sp/>=<sp/>buffer[i+2];</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[i+2]<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>_D3XP<sp/>adds<sp/>viewnote<sp/>screenie<sp/>save<sp/>to<sp/>cdpath</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>strstr(<sp/>fileName,<sp/></highlight><highlight class="stringliteral">&quot;viewnote&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileSystem-&gt;WriteFile(<sp/>fileName,<sp/>buffer,<sp/>c,<sp/></highlight><highlight class="stringliteral">&quot;fs_cdpath&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileSystem-&gt;WriteFile(<sp/>fileName,<sp/>buffer,<sp/>c<sp/>);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>R_StaticFree(<sp/>buffer<sp/>);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>takingScreenshot<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="1294"><highlight class="comment">==================<sp/></highlight></codeline>
<codeline lineno="1295"><highlight class="comment">R_ScreenshotFilename</highlight></codeline>
<codeline lineno="1296"><highlight class="comment"></highlight></codeline>
<codeline lineno="1297"><highlight class="comment">Returns<sp/>a<sp/>filename<sp/>with<sp/>digits<sp/>appended</highlight></codeline>
<codeline lineno="1298"><highlight class="comment">if<sp/>we<sp/>have<sp/>saved<sp/>a<sp/>previous<sp/>screenshot,<sp/>don&apos;t<sp/>scan</highlight></codeline>
<codeline lineno="1299"><highlight class="comment">from<sp/>the<sp/>beginning,<sp/>because<sp/>recording<sp/>demo<sp/>avis<sp/>can<sp/>involve</highlight></codeline>
<codeline lineno="1300"><highlight class="comment">thousands<sp/>of<sp/>shots</highlight></codeline>
<codeline lineno="1301"><highlight class="comment">==================<sp/></highlight></codeline>
<codeline lineno="1302"><highlight class="comment">*/</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_ScreenshotFilename(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;lastNumber,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*base,<sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>&amp;fileName<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,b,c,d,<sp/>e;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>restrict<sp/>=<sp/>cvarSystem-&gt;GetCVarBool(<sp/></highlight><highlight class="stringliteral">&quot;fs_restrict&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/>cvarSystem-&gt;SetCVarBool(<sp/></highlight><highlight class="stringliteral">&quot;fs_restrict&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/>lastNumber++;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>lastNumber<sp/>&gt;<sp/>99999<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastNumber<sp/>=<sp/>99999;</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>lastNumber<sp/>&lt;<sp/>99999<sp/>;<sp/>lastNumber++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frac<sp/>=<sp/>lastNumber;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>frac<sp/>/<sp/>10000;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frac<sp/>-=<sp/>a*10000;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>frac<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frac<sp/>-=<sp/>b*1000;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>frac<sp/>/<sp/>100;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frac<sp/>-=<sp/>c*100;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>frac<sp/>/<sp/>10;</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frac<sp/>-=<sp/>d*10;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>=<sp/>frac;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(<sp/>fileName,<sp/></highlight><highlight class="stringliteral">&quot;%s%i%i%i%i%i.tga&quot;</highlight><highlight class="normal">,<sp/>base,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>e<sp/>);</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>lastNumber<sp/>==<sp/>99999<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>fileSystem-&gt;ReadFile(<sp/>fileName,<sp/>NULL,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>len<sp/>&lt;=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>again...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/>cvarSystem-&gt;SetCVarBool(<sp/></highlight><highlight class="stringliteral">&quot;fs_restrict&quot;</highlight><highlight class="normal">,<sp/>restrict<sp/>);</highlight></codeline>
<codeline lineno="1337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1340"><highlight class="comment">==================<sp/></highlight></codeline>
<codeline lineno="1341"><highlight class="comment">R_BlendedScreenShot</highlight></codeline>
<codeline lineno="1342"><highlight class="comment"></highlight></codeline>
<codeline lineno="1343"><highlight class="comment">screenshot</highlight></codeline>
<codeline lineno="1344"><highlight class="comment">screenshot<sp/>[filename]</highlight></codeline>
<codeline lineno="1345"><highlight class="comment">screenshot<sp/>[width]<sp/>[height]</highlight></codeline>
<codeline lineno="1346"><highlight class="comment">screenshot<sp/>[width]<sp/>[height]<sp/>[samples]</highlight></codeline>
<codeline lineno="1347"><highlight class="comment">==================<sp/></highlight></codeline>
<codeline lineno="1348"><highlight class="comment">*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_BLENDS<sp/><sp/>256<sp/>//<sp/>to<sp/>keep<sp/>the<sp/>accumulation<sp/>in<sp/>shorts</highlight></codeline>
<codeline lineno="1350"><highlight class="preprocessor"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_ScreenShot_f(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref><sp/>&amp;args<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastNumber<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>checkname;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>glConfig.vidWidth;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>glConfig.vidHeight;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blends<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>args.Argc()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>glConfig.vidWidth;</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>glConfig.vidHeight;</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blends<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_ScreenshotFilename(<sp/>lastNumber,<sp/></highlight><highlight class="stringliteral">&quot;screenshots/shot&quot;</highlight><highlight class="normal">,<sp/>checkname<sp/>);</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>glConfig.vidWidth;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>glConfig.vidHeight;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blends<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checkname<sp/>=<sp/>args.Argv(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>atoi(<sp/>args.Argv(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>atoi(<sp/>args.Argv(<sp/>2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blends<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_ScreenshotFilename(<sp/>lastNumber,<sp/></highlight><highlight class="stringliteral">&quot;screenshots/shot&quot;</highlight><highlight class="normal">,<sp/>checkname<sp/>);</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>atoi(<sp/>args.Argv(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>atoi(<sp/>args.Argv(<sp/>2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blends<sp/>=<sp/>atoi(<sp/>args.Argv(<sp/>3<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>blends<sp/>&lt;<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blends<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>blends<sp/>&gt;<sp/>MAX_BLENDS<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blends<sp/>=<sp/>MAX_BLENDS;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_ScreenshotFilename(<sp/>lastNumber,<sp/></highlight><highlight class="stringliteral">&quot;screenshots/shot&quot;</highlight><highlight class="normal">,<sp/>checkname<sp/>);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;usage:<sp/>screenshot\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/>screenshot<sp/>&lt;filename&gt;\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/>screenshot<sp/>&lt;width&gt;<sp/>&lt;height&gt;\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/>screenshot<sp/>&lt;width&gt;<sp/>&lt;height&gt;<sp/>&lt;blends&gt;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>put<sp/>the<sp/>console<sp/>away</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/>console-&gt;Close();</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/>tr.TakeScreenshot(<sp/>width,<sp/>height,<sp/>checkname,<sp/>blends,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;Wrote<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>checkname.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1405"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="1406"><highlight class="comment">R_StencilShot</highlight></codeline>
<codeline lineno="1407"><highlight class="comment">Save<sp/>out<sp/>a<sp/>screenshot<sp/>showing<sp/>the<sp/>stencil<sp/>buffer<sp/>expanded<sp/>by<sp/>16x<sp/>range</highlight></codeline>
<codeline lineno="1408"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="1409"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_StencilShot(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buffer;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>c;</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>tr.GetScreenWidth();</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>tr.GetScreenHeight();</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pix<sp/>=<sp/>width<sp/>*<sp/>height;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>pix<sp/>*<sp/>3<sp/>+<sp/>18;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/>(byte<sp/>*)Mem_Alloc(c);</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/>memset<sp/>(buffer,<sp/>0,<sp/>18);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/>*byteBuffer<sp/>=<sp/>(byte<sp/>*)Mem_Alloc(pix);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/>qglReadPixels(<sp/>0,<sp/>0,<sp/>width,<sp/>height,<sp/>GL_STENCIL_INDEX<sp/>,<sp/>GL_UNSIGNED_BYTE,<sp/>byteBuffer<sp/>);<sp/></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>pix<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[18+i*3]<sp/>=</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[18+i*3+1]<sp/>=</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>buffer[18+i*3+2]<sp/>=<sp/>(<sp/>byteBuffer[i]<sp/>&amp;<sp/>15<sp/>)<sp/>*<sp/>16;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[18+i*3+2]<sp/>=<sp/>byteBuffer[i];</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>in<sp/>the<sp/>header<sp/>(this<sp/>is<sp/>vertically<sp/>flipped,<sp/>which<sp/>qglReadPixels<sp/>emits)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[2]<sp/>=<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uncompressed<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[12]<sp/>=<sp/>width<sp/>&amp;<sp/>255;</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[13]<sp/>=<sp/>width<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[14]<sp/>=<sp/>height<sp/>&amp;<sp/>255;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[15]<sp/>=<sp/>height<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[16]<sp/>=<sp/>24;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pixel<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/>fileSystem-&gt;WriteFile(<sp/></highlight><highlight class="stringliteral">&quot;screenshots/stencilShot.tga&quot;</highlight><highlight class="normal">,<sp/>buffer,<sp/>c,<sp/></highlight><highlight class="stringliteral">&quot;fs_savepath&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/>Mem_Free(<sp/>buffer<sp/>);</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/>Mem_Free(<sp/>byteBuffer<sp/>);<sp/></highlight></codeline>
<codeline lineno="1446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="1449"><highlight class="comment">==================<sp/></highlight></codeline>
<codeline lineno="1450"><highlight class="comment">R_EnvShot_f</highlight></codeline>
<codeline lineno="1451"><highlight class="comment"></highlight></codeline>
<codeline lineno="1452"><highlight class="comment">envshot<sp/>&lt;basename&gt;</highlight></codeline>
<codeline lineno="1453"><highlight class="comment"></highlight></codeline>
<codeline lineno="1454"><highlight class="comment">Saves<sp/>out<sp/>env/&lt;basename&gt;_ft.tga,<sp/>etc</highlight></codeline>
<codeline lineno="1455"><highlight class="comment">==================<sp/></highlight></codeline>
<codeline lineno="1456"><highlight class="comment">*/</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_EnvShot_f(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref><sp/>&amp;args<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fullname;</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*baseName;</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/><sp/><sp/><sp/><sp/><sp/>axis[6];</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrender_view__s" kindref="compound">renderView_t</ref><sp/><sp/><sp/><sp/>ref;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structview_def__s" kindref="compound">viewDef_t</ref><sp/><sp/><sp/>primary;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blends;</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*extensions[6]<sp/>=<sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;_px.tga&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;_nx.tga&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;_py.tga&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;_ny.tga&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;_pz.tga&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;_nz.tga&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size;</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>args.Argc()<sp/>!=<sp/>2<sp/>&amp;&amp;<sp/>args.Argc()<sp/>!=<sp/>3<sp/>&amp;&amp;<sp/>args.Argc()<sp/>!=<sp/>4<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;USAGE:<sp/>envshot<sp/>&lt;basename&gt;<sp/>[size]<sp/>[blends]\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/>baseName<sp/>=<sp/>args.Argv(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/>blends<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>args.Argc()<sp/>==<sp/>4<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>atoi(<sp/>args.Argv(<sp/>2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blends<sp/>=<sp/>atoi(<sp/>args.Argv(<sp/>3<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>args.Argc()<sp/>==<sp/>3<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>atoi(<sp/>args.Argv(<sp/>2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blends<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>256;</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blends<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!tr.primaryView<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>primary<sp/>view.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/>primary<sp/>=<sp/>*tr.primaryView;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>&amp;axis,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>axis<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/>axis[0][0][0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/>axis[0][1][2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/>axis[0][2][1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/>axis[1][0][0]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/>axis[1][1][2]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/>axis[1][2][1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/>axis[2][0][1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/>axis[2][1][0]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/>axis[2][2][2]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/>axis[3][0][1]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/>axis[3][1][0]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/>axis[3][2][2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/>axis[4][0][2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/>axis[4][1][0]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/>axis[4][2][1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/>axis[5][0][2]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/>axis[5][1][0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/>axis[5][2][1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>6<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref<sp/>=<sp/>primary.renderView;</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref.x<sp/>=<sp/>ref.y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref.fov_x<sp/>=<sp/>ref.fov_y<sp/>=<sp/>90;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref.width<sp/>=<sp/>glConfig.vidWidth;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref.height<sp/>=<sp/>glConfig.vidHeight;</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref.viewaxis<sp/>=<sp/>axis[i];</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(<sp/>fullname,<sp/></highlight><highlight class="stringliteral">&quot;env/%s%s&quot;</highlight><highlight class="normal">,<sp/>baseName,<sp/>extensions[i]<sp/>);</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr.TakeScreenshot(<sp/>size,<sp/>size,<sp/>fullname,<sp/>blends,<sp/>&amp;ref<sp/>);</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;Wrote<sp/>%s,<sp/>etc\n&quot;</highlight><highlight class="normal">,<sp/>fullname.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1531"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight><highlight class="comment">//============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cubeAxis[6];</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1539"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="1540"><highlight class="comment">R_SampleCubeMap</highlight></codeline>
<codeline lineno="1541"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="1542"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_SampleCubeMap(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;dir,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/>byte<sp/>*buffers[6],<sp/>byte<sp/>result[4]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>adir[3];</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>axis,<sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/>adir[0]<sp/>=<sp/>fabs(dir[0]);</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/>adir[1]<sp/>=<sp/>fabs(dir[1]);</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/>adir[2]<sp/>=<sp/>fabs(dir[2]);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dir[0]<sp/>&gt;=<sp/>adir[1]<sp/>&amp;&amp;<sp/>dir[0]<sp/>&gt;=<sp/>adir[2]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axis<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>-dir[0]<sp/>&gt;=<sp/>adir[1]<sp/>&amp;&amp;<sp/>-dir[0]<sp/>&gt;=<sp/>adir[2]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axis<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dir[1]<sp/>&gt;=<sp/>adir[0]<sp/>&amp;&amp;<sp/>dir[1]<sp/>&gt;=<sp/>adir[2]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axis<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>-dir[1]<sp/>&gt;=<sp/>adir[0]<sp/>&amp;&amp;<sp/>-dir[1]<sp/>&gt;=<sp/>adir[2]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axis<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dir[2]<sp/>&gt;=<sp/>adir[1]<sp/>&amp;&amp;<sp/>dir[2]<sp/>&gt;=<sp/>adir[2]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axis<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axis<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>fx<sp/>=<sp/>(dir<sp/>*<sp/>cubeAxis[axis][1])<sp/>/<sp/>(dir<sp/>*<sp/>cubeAxis[axis][0]);</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>fy<sp/>=<sp/>(dir<sp/>*<sp/>cubeAxis[axis][2])<sp/>/<sp/>(dir<sp/>*<sp/>cubeAxis[axis][0]);</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/>fx<sp/>=<sp/>-fx;</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/>fy<sp/>=<sp/>-fy;</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>size<sp/>*<sp/>0.5<sp/>*<sp/>(fx<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>size<sp/>*<sp/>0.5<sp/>*<sp/>(fy<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x<sp/>&gt;=<sp/>size<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>size-1;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>y<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>y<sp/>&gt;=<sp/>size<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>size-1;</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>buffers[axis][(y*size+x)*4+0];</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>buffers[axis][(y*size+x)*4+1];</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>buffers[axis][(y*size+x)*4+2];</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/>result[3]<sp/>=<sp/>buffers[axis][(y*size+x)*4+3];</highlight></codeline>
<codeline lineno="1587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="1590"><highlight class="comment">==================<sp/></highlight></codeline>
<codeline lineno="1591"><highlight class="comment">R_MakeAmbientMap_f</highlight></codeline>
<codeline lineno="1592"><highlight class="comment"></highlight></codeline>
<codeline lineno="1593"><highlight class="comment">R_MakeAmbientMap_f<sp/>&lt;basename&gt;<sp/>[size]</highlight></codeline>
<codeline lineno="1594"><highlight class="comment"></highlight></codeline>
<codeline lineno="1595"><highlight class="comment">Saves<sp/>out<sp/>env/&lt;basename&gt;_amb_ft.tga,<sp/>etc</highlight></codeline>
<codeline lineno="1596"><highlight class="comment">==================<sp/></highlight></codeline>
<codeline lineno="1597"><highlight class="comment">*/</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_MakeAmbientMap_f(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref><sp/>&amp;args<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>fullname;</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*baseName;</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrender_view__s" kindref="compound">renderView_t</ref><sp/><sp/><sp/><sp/>ref;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structview_def__s" kindref="compound">viewDef_t</ref><sp/><sp/><sp/>primary;</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>downSample;</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*extensions[6]<sp/>=<sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;_px.tga&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;_nx.tga&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;_py.tga&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;_ny.tga&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;_pz.tga&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;_nz.tga&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outSize;</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buffers[6];</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width,<sp/>height;</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>args.Argc()<sp/>!=<sp/>2<sp/>&amp;&amp;<sp/>args.Argc()<sp/>!=<sp/>3<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;USAGE:<sp/>ambientshot<sp/>&lt;basename&gt;<sp/>[size]\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/>baseName<sp/>=<sp/>args.Argv(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/>downSample<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>args.Argc()<sp/>==<sp/>3<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outSize<sp/>=<sp/>atoi(<sp/>args.Argv(<sp/>2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outSize<sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>&amp;cubeAxis,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>cubeAxis<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/>cubeAxis[0][0][0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/>cubeAxis[0][1][2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/>cubeAxis[0][2][1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/>cubeAxis[1][0][0]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/>cubeAxis[1][1][2]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/>cubeAxis[1][2][1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/>cubeAxis[2][0][1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/>cubeAxis[2][1][0]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/>cubeAxis[2][2][2]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/>cubeAxis[3][0][1]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/>cubeAxis[3][1][0]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/>cubeAxis[3][2][2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/>cubeAxis[4][0][2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/>cubeAxis[4][1][0]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/>cubeAxis[4][2][1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/>cubeAxis[5][0][2]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/>cubeAxis[5][1][0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/>cubeAxis[5][2][1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>all<sp/>of<sp/>the<sp/>images</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>6<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(<sp/>fullname,<sp/></highlight><highlight class="stringliteral">&quot;env/%s%s&quot;</highlight><highlight class="normal">,<sp/>baseName,<sp/>extensions[i]<sp/>);</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;loading<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>fullname.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>session-&gt;UpdateScreen();</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_LoadImage(<sp/>fullname,<sp/>&amp;buffers[i],<sp/>&amp;width,<sp/>&amp;height,<sp/>NULL,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!buffers[i]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;failed.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i--<sp/>;<sp/>i<sp/>&gt;=<sp/>0<sp/>;<sp/>i--<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mem_Free(<sp/>buffers[i]<sp/>);</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>resample<sp/>with<sp/>hemispherical<sp/>blending</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>samples<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/><sp/>*outBuffer<sp/>=<sp/>(byte<sp/>*)_alloca(<sp/>outSize<sp/>*<sp/>outSize<sp/>*<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>map<sp/>=<sp/>0<sp/>;<sp/>map<sp/>&lt;<sp/>2<sp/>;<sp/>map++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>6<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0<sp/>;<sp/>x<sp/>&lt;<sp/>outSize<sp/>;<sp/>x++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0<sp/>;<sp/>y<sp/>&lt;<sp/>outSize<sp/>;<sp/>y++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/>dir;</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>total[3];</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>cubeAxis[i][0]<sp/>+<sp/>-(<sp/>-1<sp/>+<sp/>2.0*x/(outSize-1)<sp/>)<sp/>*<sp/>cubeAxis[i][1]<sp/>+<sp/>-(<sp/>-1<sp/>+<sp/>2.0*y/(outSize-1)<sp/>)<sp/>*<sp/>cubeAxis[i][2];</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir.Normalize();</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total[0]<sp/>=<sp/>total[1]<sp/>=<sp/>total[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//samples<sp/>=<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>limit<sp/>=<sp/>map<sp/>?<sp/>0.95<sp/>:<sp/>0.25;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>small<sp/>for<sp/>specular,<sp/>almost<sp/>hemisphere<sp/>for<sp/>ambient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>0<sp/>;<sp/>s<sp/>&lt;<sp/>samples<sp/>;<sp/>s++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pick<sp/>a<sp/>random<sp/>direction<sp/>vector<sp/>that<sp/>is<sp/>inside<sp/>the<sp/>unit<sp/>sphere<sp/>but<sp/>not<sp/>behind<sp/>dir,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>is<sp/>a<sp/>robust<sp/>way<sp/>to<sp/>evenly<sp/>sample<sp/>a<sp/>hemisphere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/>test;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0<sp/>;<sp/>j<sp/>&lt;<sp/>3<sp/>;<sp/>j++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test[j]<sp/>=<sp/>-1<sp/>+<sp/>2<sp/>*<sp/>(rand()&amp;0x7fff)/(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)0x7fff;</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>test.Length()<sp/>&gt;<sp/>1.0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test.Normalize();</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>test<sp/>*<sp/>dir<sp/>&gt;<sp/>limit<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>do<sp/>a<sp/>complete<sp/>hemisphere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/><sp/>result[4];</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//test<sp/>=<sp/>dir;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_SampleCubeMap(<sp/>test,<sp/>width,<sp/>buffers,<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total[0]<sp/>+=<sp/>result[0];</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total[1]<sp/>+=<sp/>result[1];</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total[2]<sp/>+=<sp/>result[2];</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outBuffer[(y*outSize+x)*4+0]<sp/>=<sp/>total[0]<sp/>/<sp/>samples;</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outBuffer[(y*outSize+x)*4+1]<sp/>=<sp/>total[1]<sp/>/<sp/>samples;</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outBuffer[(y*outSize+x)*4+2]<sp/>=<sp/>total[2]<sp/>/<sp/>samples;</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outBuffer[(y*outSize+x)*4+3]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>map<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(<sp/>fullname,<sp/></highlight><highlight class="stringliteral">&quot;env/%s_amb%s&quot;</highlight><highlight class="normal">,<sp/>baseName,<sp/>extensions[i]<sp/>);</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(<sp/>fullname,<sp/></highlight><highlight class="stringliteral">&quot;env/%s_spec%s&quot;</highlight><highlight class="normal">,<sp/>baseName,<sp/>extensions[i]<sp/>);</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;writing<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>fullname.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>session-&gt;UpdateScreen();</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_WriteTGA(<sp/>fullname,<sp/>outBuffer,<sp/>outSize,<sp/>outSize<sp/>);</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>6<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>buffers[i]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mem_Free(<sp/>buffers[i]<sp/>);</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1728"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="1729"><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight><highlight class="comment">//============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1734"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="1735"><highlight class="comment">R_SetColorMappings</highlight></codeline>
<codeline lineno="1736"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="1737"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_SetColorMappings(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>g,<sp/>b;</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>inf;</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>r_brightness.GetFloat();</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/>g<sp/>=<sp/>r_gamma.GetFloat();</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>256;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>i<sp/>*<sp/>b;</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&gt;<sp/>255)<sp/>{</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>g<sp/>==<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inf<sp/>=<sp/>(j&lt;&lt;8)<sp/>|<sp/>j;</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inf<sp/>=<sp/>0xffff<sp/>*<sp/>pow<sp/>(<sp/>j/255.0f,<sp/>1.0f<sp/>/<sp/>g<sp/>)<sp/>+<sp/>0.5f;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inf<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inf<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inf<sp/>&gt;<sp/>0xffff)<sp/>{</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inf<sp/>=<sp/>0xffff;</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr.gammaTable[i]<sp/>=<sp/>inf;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/>GLimp_SetGamma(<sp/>tr.gammaTable,<sp/>tr.gammaTable,<sp/>tr.gammaTable<sp/>);</highlight></codeline>
<codeline lineno="1768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1772"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1773"><highlight class="comment">GfxInfo_f</highlight></codeline>
<codeline lineno="1774"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1775"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GfxInfo_f(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref><sp/>&amp;args<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fsstrings[]<sp/>=</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;windowed&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;fullscreen&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;\nGL_VENDOR:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>glConfig.vendor_string<sp/>);</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;GL_RENDERER:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>glConfig.renderer_string<sp/>);</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;GL_VERSION:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>glConfig.version_string<sp/>);</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;GL_EXTENSIONS:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>glConfig.extensions_string<sp/>);</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>glConfig.wgl_extensions_string<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;WGL_EXTENSIONS:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>glConfig.wgl_extensions_string<sp/>);</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;GL_MAX_TEXTURE_SIZE:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>glConfig.maxTextureSize<sp/>);</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;GL_MAX_TEXTURE_UNITS_ARB:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>glConfig.maxTextureUnits<sp/>);</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;GL_MAX_TEXTURE_COORDS_ARB:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>glConfig.maxTextureCoords<sp/>);</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;GL_MAX_TEXTURE_IMAGE_UNITS_ARB:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>glConfig.maxTextureImageUnits<sp/>);</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;\nPIXELFORMAT:<sp/>color(%d-bits)<sp/>Z(%d-bit)<sp/>stencil(%d-bits)\n&quot;</highlight><highlight class="normal">,<sp/>glConfig.colorBits,<sp/>glConfig.depthBits,<sp/>glConfig.stencilBits<sp/>);</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;MODE:<sp/>%d,<sp/>%d<sp/>x<sp/>%d<sp/>%s<sp/>hz:&quot;</highlight><highlight class="normal">,<sp/>r_mode.GetInteger(),<sp/>glConfig.vidWidth,<sp/>glConfig.vidHeight,<sp/>fsstrings[r_fullscreen.GetBool()]<sp/>);</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"></highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>glConfig.displayFrequency<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;%d\n&quot;</highlight><highlight class="normal">,<sp/>glConfig.displayFrequency<sp/>);</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;N/A\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;CPU:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>Sys_GetProcessorString()<sp/>);</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*active[2]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(ACTIVE)&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;ARB<sp/>path<sp/>ENABLED%s\n&quot;</highlight><highlight class="normal">,<sp/>active[tr.backEndRenderer<sp/>==<sp/>BE_ARB]<sp/>);</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>glConfig.allowNV10Path<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;NV10<sp/>path<sp/>ENABLED%s\n&quot;</highlight><highlight class="normal">,<sp/>active[tr.backEndRenderer<sp/>==<sp/>BE_NV10]<sp/>);</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;NV10<sp/>path<sp/>disabled\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>glConfig.allowNV20Path<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;NV20<sp/>path<sp/>ENABLED%s\n&quot;</highlight><highlight class="normal">,<sp/>active[tr.backEndRenderer<sp/>==<sp/>BE_NV20]<sp/>);</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;NV20<sp/>path<sp/>disabled\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>glConfig.allowR200Path<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;R200<sp/>path<sp/>ENABLED%s\n&quot;</highlight><highlight class="normal">,<sp/>active[tr.backEndRenderer<sp/>==<sp/>BE_R200]<sp/>);</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;R200<sp/>path<sp/>disabled\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>glConfig.allowARB2Path<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;ARB2<sp/>path<sp/>ENABLED%s\n&quot;</highlight><highlight class="normal">,<sp/>active[tr.backEndRenderer<sp/>==<sp/>BE_ARB2]<sp/>);</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;ARB2<sp/>path<sp/>disabled\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//=============================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;-------\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_finish.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;Forcing<sp/>glFinish\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;glFinish<sp/>not<sp/>forced\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1842"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>WGL_EXT_swap_interval</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>BOOL<sp/>(WINAPI<sp/>*<sp/>PFNWGLSWAPINTERVALEXTPROC)<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interval);</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>PFNWGLSWAPINTERVALEXTPROC<sp/>wglSwapIntervalEXT;</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_swapInterval.GetInteger()<sp/>&amp;&amp;<sp/>wglSwapIntervalEXT<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;Forcing<sp/>swapInterval<sp/>%i\n&quot;</highlight><highlight class="normal">,<sp/>r_swapInterval.GetInteger()<sp/>);</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;swapInterval<sp/>not<sp/>forced\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1852"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tss<sp/>=<sp/>glConfig.twoSidedStencilAvailable<sp/>||<sp/>glConfig.atiTwoSidedStencilAvailable;</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!r_useTwoSidedStencil.GetBool()<sp/>&amp;&amp;<sp/>tss<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;Two<sp/>sided<sp/>stencil<sp/>available<sp/>but<sp/>disabled\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!tss<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;Two<sp/>sided<sp/>stencil<sp/>not<sp/>available\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tss<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;Using<sp/>two<sp/>sided<sp/>stencil\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>vertexCache.IsFast()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;Vertex<sp/>cache<sp/>is<sp/>fast\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;Vertex<sp/>cache<sp/>is<sp/>SLOW\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1868"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight></codeline>
<codeline lineno="1870"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1871"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="1872"><highlight class="comment">R_VidRestart_f</highlight></codeline>
<codeline lineno="1873"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="1874"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_VidRestart_f(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref><sp/>&amp;args<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>OpenGL<sp/>isn&apos;t<sp/>started,<sp/>do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!glConfig.isInitialized<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>full<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>forceWindow<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1<sp/>;<sp/>i<sp/>&lt;<sp/>args.Argc()<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>idStr::Icmp(<sp/>args.Argv(<sp/>i<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;partial&quot;</highlight><highlight class="normal"><sp/>)<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>full<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>idStr::Icmp(<sp/>args.Argv(<sp/>i<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;windowed&quot;</highlight><highlight class="normal"><sp/>)<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forceWindow<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>could<sp/>take<sp/>a<sp/>while,<sp/>so<sp/>give<sp/>them<sp/>the<sp/>cursor<sp/>back<sp/>ASAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_GrabMouseCursor(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dump<sp/>ambient<sp/>caches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/>renderModelManager-&gt;FreeModelVertexCaches();</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>any<sp/>current<sp/>world<sp/>interaction<sp/>surfaces<sp/>and<sp/>vertex<sp/>caches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/>R_FreeDerivedData();</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"></highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>the<sp/>defered<sp/>frees<sp/>are<sp/>actually<sp/>freed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/>R_ToggleSmpFrame();</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/>R_ToggleSmpFrame();</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"></highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>the<sp/>vertex<sp/>caches<sp/>so<sp/>they<sp/>will<sp/>be<sp/>regenerated<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/>vertexCache.PurgeAll();</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sound<sp/>and<sp/>input<sp/>are<sp/>tied<sp/>to<sp/>the<sp/>window<sp/>we<sp/>are<sp/>about<sp/>to<sp/>destroy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>full<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>all<sp/>of<sp/>our<sp/>texture<sp/>numbers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>soundSystem-&gt;ShutdownHW();</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sys_ShutdownInput();</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalImages-&gt;PurgeAllImages();</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>the<sp/>context<sp/>and<sp/>close<sp/>the<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLimp_Shutdown();</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glConfig.isInitialized<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"></highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>new<sp/>context<sp/>and<sp/>vertex<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>latch<sp/>=<sp/>cvarSystem-&gt;GetCVarBool(<sp/></highlight><highlight class="stringliteral">&quot;r_fullscreen&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>forceWindow<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cvarSystem-&gt;SetCVarBool(<sp/></highlight><highlight class="stringliteral">&quot;r_fullscreen&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_InitOpenGL();</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cvarSystem-&gt;SetCVarBool(<sp/></highlight><highlight class="stringliteral">&quot;r_fullscreen&quot;</highlight><highlight class="normal">,<sp/>latch<sp/>);</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>regenerate<sp/>all<sp/>images</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalImages-&gt;ReloadAllImages();</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structglimp_parms__t" kindref="compound">glimpParms_t</ref><sp/><sp/><sp/><sp/>parms;</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parms.width<sp/>=<sp/>glConfig.vidWidth;</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parms.height<sp/>=<sp/>glConfig.vidHeight;</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parms.fullScreen<sp/>=<sp/>(<sp/>forceWindow<sp/>)<sp/>?<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>:<sp/>r_fullscreen.GetBool();</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parms.displayHz<sp/>=<sp/>r_displayRefresh.GetInteger();</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parms.multiSamples<sp/>=<sp/>r_multiSamples.GetInteger();</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parms.stereo<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLimp_SetScreenParms(<sp/>parms<sp/>);</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"></highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>the<sp/>regeneration<sp/>doesn&apos;t<sp/>use<sp/>anything<sp/>no<sp/>longer<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/>tr.viewCount++;</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/>tr.viewDef<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"></highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>regenerate<sp/>all<sp/>necessary<sp/>interactions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/>R_RegenerateWorld_f(<sp/><ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"></highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>problems</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>qglGetError();</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>err<sp/>!=<sp/>GL_NO_ERROR<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;glGetError()<sp/>=<sp/>0x%x\n&quot;</highlight><highlight class="normal">,<sp/>err<sp/>);</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>sound<sp/>playing<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/>soundSystem-&gt;SetMute(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1961"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"></highlight></codeline>
<codeline lineno="1963"><highlight class="normal"></highlight></codeline>
<codeline lineno="1964"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1965"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="1966"><highlight class="comment">R_InitMaterials</highlight></codeline>
<codeline lineno="1967"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="1968"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_InitMaterials(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/>tr.defaultMaterial<sp/>=<sp/>declManager-&gt;FindMaterial(<sp/></highlight><highlight class="stringliteral">&quot;_default&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!tr.defaultMaterial<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;FatalError(<sp/></highlight><highlight class="stringliteral">&quot;_default<sp/>material<sp/>not<sp/>found&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/>declManager-&gt;FindMaterial(<sp/></highlight><highlight class="stringliteral">&quot;_default&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>needed<sp/>by<sp/>R_DeriveLightData</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/>declManager-&gt;FindMaterial(<sp/></highlight><highlight class="stringliteral">&quot;lights/defaultPointLight&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/>declManager-&gt;FindMaterial(<sp/></highlight><highlight class="stringliteral">&quot;lights/defaultProjectedLight&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1979"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal"></highlight></codeline>
<codeline lineno="1982"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1983"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="1984"><highlight class="comment">R_SizeUp_f</highlight></codeline>
<codeline lineno="1985"><highlight class="comment"></highlight></codeline>
<codeline lineno="1986"><highlight class="comment">Keybinding<sp/>command</highlight></codeline>
<codeline lineno="1987"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="1988"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1989"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_SizeUp_f(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref><sp/>&amp;args<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_screenFraction.GetInteger()<sp/>+<sp/>10<sp/>&gt;<sp/>100<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_screenFraction.SetInteger(<sp/>100<sp/>);</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_screenFraction.SetInteger(<sp/>r_screenFraction.GetInteger()<sp/>+<sp/>10<sp/>);</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1995"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"></highlight></codeline>
<codeline lineno="1997"><highlight class="normal"></highlight></codeline>
<codeline lineno="1998"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1999"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="2000"><highlight class="comment">R_SizeDown_f</highlight></codeline>
<codeline lineno="2001"><highlight class="comment"></highlight></codeline>
<codeline lineno="2002"><highlight class="comment">Keybinding<sp/>command</highlight></codeline>
<codeline lineno="2003"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="2004"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_SizeDown_f(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref><sp/>&amp;args<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_screenFraction.GetInteger()<sp/>-<sp/>10<sp/>&lt;<sp/>10<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_screenFraction.SetInteger(<sp/>10<sp/>);</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_screenFraction.SetInteger(<sp/>r_screenFraction.GetInteger()<sp/>-<sp/>10<sp/>);</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2011"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"></highlight></codeline>
<codeline lineno="2014"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2015"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2016"><highlight class="comment">TouchGui_f</highlight></codeline>
<codeline lineno="2017"><highlight class="comment"></highlight></codeline>
<codeline lineno="2018"><highlight class="comment"><sp/><sp/>this<sp/>is<sp/>called<sp/>from<sp/>the<sp/>main<sp/>thread</highlight></codeline>
<codeline lineno="2019"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2020"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_TouchGui_f(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref><sp/>&amp;args<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*gui<sp/>=<sp/>args.Argv(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gui[0]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;USAGE:<sp/>touchGui<sp/>&lt;guiName&gt;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;touchGui<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>gui<sp/>);</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/>session-&gt;UpdateScreen();</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/>uiManager-&gt;Touch(<sp/>gui<sp/>);</highlight></codeline>
<codeline lineno="2032"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"></highlight></codeline>
<codeline lineno="2034"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2035"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="2036"><highlight class="comment">R_InitCvars</highlight></codeline>
<codeline lineno="2037"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="2038"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2039"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_InitCvars(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>latched<sp/>cvars<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2041"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"></highlight></codeline>
<codeline lineno="2043"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2044"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="2045"><highlight class="comment">R_InitCommands</highlight></codeline>
<codeline lineno="2046"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="2047"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2048"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_InitCommands(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/>cmdSystem-&gt;AddCommand(<sp/></highlight><highlight class="stringliteral">&quot;MakeMegaTexture&quot;</highlight><highlight class="normal">,<sp/>idMegaTexture::MakeMegaTexture_f,<sp/>CMD_FL_RENDERER|CMD_FL_CHEAT,<sp/></highlight><highlight class="stringliteral">&quot;processes<sp/>giant<sp/>images&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/>cmdSystem-&gt;AddCommand(<sp/></highlight><highlight class="stringliteral">&quot;sizeUp&quot;</highlight><highlight class="normal">,<sp/>R_SizeUp_f,<sp/>CMD_FL_RENDERER,<sp/></highlight><highlight class="stringliteral">&quot;makes<sp/>the<sp/>rendered<sp/>view<sp/>larger&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/>cmdSystem-&gt;AddCommand(<sp/></highlight><highlight class="stringliteral">&quot;sizeDown&quot;</highlight><highlight class="normal">,<sp/>R_SizeDown_f,<sp/>CMD_FL_RENDERER,<sp/></highlight><highlight class="stringliteral">&quot;makes<sp/>the<sp/>rendered<sp/>view<sp/>smaller&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/>cmdSystem-&gt;AddCommand(<sp/></highlight><highlight class="stringliteral">&quot;reloadGuis&quot;</highlight><highlight class="normal">,<sp/>R_ReloadGuis_f,<sp/>CMD_FL_RENDERER,<sp/></highlight><highlight class="stringliteral">&quot;reloads<sp/>guis&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/>cmdSystem-&gt;AddCommand(<sp/></highlight><highlight class="stringliteral">&quot;listGuis&quot;</highlight><highlight class="normal">,<sp/>R_ListGuis_f,<sp/>CMD_FL_RENDERER,<sp/></highlight><highlight class="stringliteral">&quot;lists<sp/>guis&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/>cmdSystem-&gt;AddCommand(<sp/></highlight><highlight class="stringliteral">&quot;touchGui&quot;</highlight><highlight class="normal">,<sp/>R_TouchGui_f,<sp/>CMD_FL_RENDERER,<sp/></highlight><highlight class="stringliteral">&quot;touches<sp/>a<sp/>gui&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/>cmdSystem-&gt;AddCommand(<sp/></highlight><highlight class="stringliteral">&quot;screenshot&quot;</highlight><highlight class="normal">,<sp/>R_ScreenShot_f,<sp/>CMD_FL_RENDERER,<sp/></highlight><highlight class="stringliteral">&quot;takes<sp/>a<sp/>screenshot&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/>cmdSystem-&gt;AddCommand(<sp/></highlight><highlight class="stringliteral">&quot;envshot&quot;</highlight><highlight class="normal">,<sp/>R_EnvShot_f,<sp/>CMD_FL_RENDERER,<sp/></highlight><highlight class="stringliteral">&quot;takes<sp/>an<sp/>environment<sp/>shot&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/>cmdSystem-&gt;AddCommand(<sp/></highlight><highlight class="stringliteral">&quot;makeAmbientMap&quot;</highlight><highlight class="normal">,<sp/>R_MakeAmbientMap_f,<sp/>CMD_FL_RENDERER|CMD_FL_CHEAT,<sp/></highlight><highlight class="stringliteral">&quot;makes<sp/>an<sp/>ambient<sp/>map&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/>cmdSystem-&gt;AddCommand(<sp/></highlight><highlight class="stringliteral">&quot;benchmark&quot;</highlight><highlight class="normal">,<sp/>R_Benchmark_f,<sp/>CMD_FL_RENDERER,<sp/></highlight><highlight class="stringliteral">&quot;benchmark&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/>cmdSystem-&gt;AddCommand(<sp/></highlight><highlight class="stringliteral">&quot;gfxInfo&quot;</highlight><highlight class="normal">,<sp/>GfxInfo_f,<sp/>CMD_FL_RENDERER,<sp/></highlight><highlight class="stringliteral">&quot;show<sp/>graphics<sp/>info&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/>cmdSystem-&gt;AddCommand(<sp/></highlight><highlight class="stringliteral">&quot;modulateLights&quot;</highlight><highlight class="normal">,<sp/>R_ModulateLights_f,<sp/>CMD_FL_RENDERER<sp/>|<sp/>CMD_FL_CHEAT,<sp/></highlight><highlight class="stringliteral">&quot;modifies<sp/>shader<sp/>parms<sp/>on<sp/>all<sp/>lights&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/>cmdSystem-&gt;AddCommand(<sp/></highlight><highlight class="stringliteral">&quot;testImage&quot;</highlight><highlight class="normal">,<sp/>R_TestImage_f,<sp/>CMD_FL_RENDERER<sp/>|<sp/>CMD_FL_CHEAT,<sp/></highlight><highlight class="stringliteral">&quot;displays<sp/>the<sp/>given<sp/>image<sp/>centered<sp/>on<sp/>screen&quot;</highlight><highlight class="normal">,<sp/>idCmdSystem::ArgCompletion_ImageName<sp/>);</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/>cmdSystem-&gt;AddCommand(<sp/></highlight><highlight class="stringliteral">&quot;testVideo&quot;</highlight><highlight class="normal">,<sp/>R_TestVideo_f,<sp/>CMD_FL_RENDERER<sp/>|<sp/>CMD_FL_CHEAT,<sp/></highlight><highlight class="stringliteral">&quot;displays<sp/>the<sp/>given<sp/>cinematic&quot;</highlight><highlight class="normal">,<sp/>idCmdSystem::ArgCompletion_VideoName<sp/>);</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/>cmdSystem-&gt;AddCommand(<sp/></highlight><highlight class="stringliteral">&quot;reportSurfaceAreas&quot;</highlight><highlight class="normal">,<sp/>R_ReportSurfaceAreas_f,<sp/>CMD_FL_RENDERER,<sp/></highlight><highlight class="stringliteral">&quot;lists<sp/>all<sp/>used<sp/>materials<sp/>sorted<sp/>by<sp/>surface<sp/>area&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/>cmdSystem-&gt;AddCommand(<sp/></highlight><highlight class="stringliteral">&quot;reportImageDuplication&quot;</highlight><highlight class="normal">,<sp/>R_ReportImageDuplication_f,<sp/>CMD_FL_RENDERER,<sp/></highlight><highlight class="stringliteral">&quot;checks<sp/>all<sp/>referenced<sp/>images<sp/>for<sp/>duplications&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/>cmdSystem-&gt;AddCommand(<sp/></highlight><highlight class="stringliteral">&quot;regenerateWorld&quot;</highlight><highlight class="normal">,<sp/>R_RegenerateWorld_f,<sp/>CMD_FL_RENDERER,<sp/></highlight><highlight class="stringliteral">&quot;regenerates<sp/>all<sp/>interactions&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/>cmdSystem-&gt;AddCommand(<sp/></highlight><highlight class="stringliteral">&quot;showInteractionMemory&quot;</highlight><highlight class="normal">,<sp/>R_ShowInteractionMemory_f,<sp/>CMD_FL_RENDERER,<sp/></highlight><highlight class="stringliteral">&quot;shows<sp/>memory<sp/>used<sp/>by<sp/>interactions&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/>cmdSystem-&gt;AddCommand(<sp/></highlight><highlight class="stringliteral">&quot;showTriSurfMemory&quot;</highlight><highlight class="normal">,<sp/>R_ShowTriSurfMemory_f,<sp/>CMD_FL_RENDERER,<sp/></highlight><highlight class="stringliteral">&quot;shows<sp/>memory<sp/>used<sp/>by<sp/>triangle<sp/>surfaces&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/>cmdSystem-&gt;AddCommand(<sp/></highlight><highlight class="stringliteral">&quot;vid_restart&quot;</highlight><highlight class="normal">,<sp/>R_VidRestart_f,<sp/>CMD_FL_RENDERER,<sp/></highlight><highlight class="stringliteral">&quot;restarts<sp/>renderSystem&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/>cmdSystem-&gt;AddCommand(<sp/></highlight><highlight class="stringliteral">&quot;listRenderEntityDefs&quot;</highlight><highlight class="normal">,<sp/>R_ListRenderEntityDefs_f,<sp/>CMD_FL_RENDERER,<sp/></highlight><highlight class="stringliteral">&quot;lists<sp/>the<sp/>entity<sp/>defs&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/>cmdSystem-&gt;AddCommand(<sp/></highlight><highlight class="stringliteral">&quot;listRenderLightDefs&quot;</highlight><highlight class="normal">,<sp/>R_ListRenderLightDefs_f,<sp/>CMD_FL_RENDERER,<sp/></highlight><highlight class="stringliteral">&quot;lists<sp/>the<sp/>light<sp/>defs&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/>cmdSystem-&gt;AddCommand(<sp/></highlight><highlight class="stringliteral">&quot;listModes&quot;</highlight><highlight class="normal">,<sp/>R_ListModes_f,<sp/>CMD_FL_RENDERER,<sp/></highlight><highlight class="stringliteral">&quot;lists<sp/>all<sp/>video<sp/>modes&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/>cmdSystem-&gt;AddCommand(<sp/></highlight><highlight class="stringliteral">&quot;reloadSurface&quot;</highlight><highlight class="normal">,<sp/>R_ReloadSurface_f,<sp/>CMD_FL_RENDERER,<sp/></highlight><highlight class="stringliteral">&quot;reloads<sp/>the<sp/>decl<sp/>and<sp/>images<sp/>for<sp/>selected<sp/>surface&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2073"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"></highlight></codeline>
<codeline lineno="2075"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2076"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2077"><highlight class="comment">idRenderSystemLocal::Clear</highlight></codeline>
<codeline lineno="2078"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2079"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idRenderSystemLocal::Clear(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/>registered<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/>frameCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/>viewCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/>staticAllocCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/>frameShaderTime<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/>viewportOffset[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/>viewportOffset[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledViewport[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/>tiledViewport[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/>backEndRenderer<sp/>=<sp/>BE_BAD;</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/>backEndRendererHasVertexPrograms<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/>backEndRendererMaxLight<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/>ambientLightVector.Zero();</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/>sortOffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/>worlds.Clear();</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/>primaryWorld<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>&amp;primaryRenderView,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>primaryRenderView<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/>primaryView<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/>defaultMaterial<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/>testImage<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/>ambientCubeImage<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/>viewDef<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>&amp;pc,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>pc<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>&amp;lockSurfacesCmd,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>lockSurfacesCmd<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>&amp;identitySpace,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>identitySpace<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/>logFile<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/>stencilIncr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/>stencilDecr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>renderCrops,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>renderCrops<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/>currentRenderCrop<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/>guiRecursionLevel<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/>guiModel<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/>demoGuiModel<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>gammaTable,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>gammaTable<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/>takingScreenshot<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2119"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2120"><highlight class="comment">idRenderSystemLocal::Init</highlight></codeline>
<codeline lineno="2121"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2122"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2123"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idRenderSystemLocal::Init(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2124"><highlight class="normal"></highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;-------<sp/>Initializing<sp/>renderSystem<sp/>--------\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"></highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>all<sp/>our<sp/>internal<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/>viewCount<sp/>=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>cleared<sp/>structures<sp/>never<sp/>match<sp/>viewCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>used<sp/>to<sp/>memset<sp/>tr,<sp/>but<sp/>now<sp/>that<sp/>it<sp/>is<sp/>a<sp/>class,<sp/>we<sp/>can&apos;t,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>there<sp/>may<sp/>be<sp/>other<sp/>state<sp/>we<sp/>need<sp/>to<sp/>reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/>ambientLightVector[0]<sp/>=<sp/>0.5f;</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/>ambientLightVector[1]<sp/>=<sp/>0.5f<sp/>-<sp/>0.385f;</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/>ambientLightVector[2]<sp/>=<sp/>0.8925f;</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/>ambientLightVector[3]<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"></highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>&amp;backEnd,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>backEnd<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"></highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/>R_InitCvars();</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"></highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/>R_InitCommands();</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"></highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/>guiModel<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classid_gui_model" kindref="compound">idGuiModel</ref>;</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/>guiModel-&gt;Clear();</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"></highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/>demoGuiModel<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classid_gui_model" kindref="compound">idGuiModel</ref>;</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/>demoGuiModel-&gt;Clear();</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"></highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/>R_InitTriSurfData();</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/>globalImages-&gt;Init();</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/>idCinematic::InitCinematic(<sp/>);</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"></highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>brightness<sp/>translation<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/>R_SetColorMappings();</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"></highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/>R_InitMaterials();</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"></highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/>renderModelManager-&gt;Init();</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"></highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>identity<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/>identitySpace.modelMatrix[0*4+0]<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/>identitySpace.modelMatrix[1*4+1]<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/>identitySpace.modelMatrix[2*4+2]<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"></highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>which<sp/>back<sp/>end<sp/>we<sp/>will<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>???<sp/>this<sp/>is<sp/>invalid<sp/>here<sp/>as<sp/>there<sp/>is<sp/>not<sp/>enough<sp/>information<sp/>to<sp/>set<sp/>it<sp/>up<sp/>correctly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/>SetBackEndRenderer();</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"></highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;renderSystem<sp/>initialized.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;--------------------------------------\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"></highlight></codeline>
<codeline lineno="2175"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2176"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2177"><highlight class="comment">idRenderSystemLocal::Shutdown</highlight></codeline>
<codeline lineno="2178"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2179"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idRenderSystemLocal::Shutdown(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;idRenderSystem::Shutdown()\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/>R_DoneFreeType(<sp/>);</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"></highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>glConfig.isInitialized<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalImages-&gt;PurgeAllImages();</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"></highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/>renderModelManager-&gt;Shutdown();</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"></highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/>idCinematic::ShutdownCinematic(<sp/>);</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"></highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/>globalImages-&gt;Shutdown();</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"></highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>close<sp/>the<sp/>r_logFile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>logFile<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<sp/>logFile,<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>CLOSING<sp/>LOG<sp/>***\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(<sp/>logFile<sp/>);</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logFile<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"></highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>frame<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/>R_ShutdownFrameData();</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"></highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>the<sp/>vertex<sp/>cache,<sp/>which<sp/>should<sp/>have<sp/>nothing<sp/>allocated<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/>vertexCache.Shutdown();</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"></highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/>R_ShutdownTriSurfData();</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/>RB_ShutdownDebugTools();</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"></highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>guiModel;</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>demoGuiModel;</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"></highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/>Clear();</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"></highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/>ShutdownOpenGL();</highlight></codeline>
<codeline lineno="2218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"></highlight></codeline>
<codeline lineno="2220"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2221"><highlight class="comment">========================</highlight></codeline>
<codeline lineno="2222"><highlight class="comment">idRenderSystemLocal::BeginLevelLoad</highlight></codeline>
<codeline lineno="2223"><highlight class="comment">========================</highlight></codeline>
<codeline lineno="2224"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2225"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idRenderSystemLocal::BeginLevelLoad(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/>renderModelManager-&gt;BeginLevelLoad();</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/>globalImages-&gt;BeginLevelLoad();</highlight></codeline>
<codeline lineno="2228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"></highlight></codeline>
<codeline lineno="2230"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2231"><highlight class="comment">========================</highlight></codeline>
<codeline lineno="2232"><highlight class="comment">idRenderSystemLocal::EndLevelLoad</highlight></codeline>
<codeline lineno="2233"><highlight class="comment">========================</highlight></codeline>
<codeline lineno="2234"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2235"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idRenderSystemLocal::EndLevelLoad(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/>renderModelManager-&gt;EndLevelLoad();</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/>globalImages-&gt;EndLevelLoad();</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_forceLoadImages.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_ShowImages();</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"></highlight></codeline>
<codeline lineno="2243"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2244"><highlight class="comment">========================</highlight></codeline>
<codeline lineno="2245"><highlight class="comment">idRenderSystemLocal::InitOpenGL</highlight></codeline>
<codeline lineno="2246"><highlight class="comment">========================</highlight></codeline>
<codeline lineno="2247"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2248"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idRenderSystemLocal::InitOpenGL(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>OpenGL<sp/>isn&apos;t<sp/>started,<sp/>start<sp/>it<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!glConfig.isInitialized<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"></highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_InitOpenGL();</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"></highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalImages-&gt;ReloadAllImages();</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"></highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>qglGetError();</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>err<sp/>!=<sp/>GL_NO_ERROR<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;glGetError()<sp/>=<sp/>0x%x\n&quot;</highlight><highlight class="normal">,<sp/>err<sp/>);</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"></highlight></codeline>
<codeline lineno="2264"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2265"><highlight class="comment">========================</highlight></codeline>
<codeline lineno="2266"><highlight class="comment">idRenderSystemLocal::ShutdownOpenGL</highlight></codeline>
<codeline lineno="2267"><highlight class="comment">========================</highlight></codeline>
<codeline lineno="2268"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2269"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idRenderSystemLocal::ShutdownOpenGL(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>the<sp/>context<sp/>and<sp/>close<sp/>the<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/>R_ShutdownFrameData();</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/>GLimp_Shutdown();</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.isInitialized<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2277"><highlight class="comment">========================</highlight></codeline>
<codeline lineno="2278"><highlight class="comment">idRenderSystemLocal::IsOpenGLRunning</highlight></codeline>
<codeline lineno="2279"><highlight class="comment">========================</highlight></codeline>
<codeline lineno="2280"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2281"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idRenderSystemLocal::IsOpenGLRunning(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!glConfig.isInitialized<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"></highlight></codeline>
<codeline lineno="2288"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2289"><highlight class="comment">========================</highlight></codeline>
<codeline lineno="2290"><highlight class="comment">idRenderSystemLocal::IsFullScreen</highlight></codeline>
<codeline lineno="2291"><highlight class="comment">========================</highlight></codeline>
<codeline lineno="2292"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2293"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idRenderSystemLocal::IsFullScreen(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>glConfig.isFullscreen;</highlight></codeline>
<codeline lineno="2295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"></highlight></codeline>
<codeline lineno="2297"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2298"><highlight class="comment">========================</highlight></codeline>
<codeline lineno="2299"><highlight class="comment">idRenderSystemLocal::GetScreenWidth</highlight></codeline>
<codeline lineno="2300"><highlight class="comment">========================</highlight></codeline>
<codeline lineno="2301"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2302"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idRenderSystemLocal::GetScreenWidth(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>glConfig.vidWidth;</highlight></codeline>
<codeline lineno="2304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"></highlight></codeline>
<codeline lineno="2306"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2307"><highlight class="comment">========================</highlight></codeline>
<codeline lineno="2308"><highlight class="comment">idRenderSystemLocal::GetScreenHeight</highlight></codeline>
<codeline lineno="2309"><highlight class="comment">========================</highlight></codeline>
<codeline lineno="2310"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2311"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idRenderSystemLocal::GetScreenHeight(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>glConfig.vidHeight;</highlight></codeline>
<codeline lineno="2313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"></highlight></codeline>
<codeline lineno="2315"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2316"><highlight class="comment">========================</highlight></codeline>
<codeline lineno="2317"><highlight class="comment">idRenderSystemLocal::GetCardCaps</highlight></codeline>
<codeline lineno="2318"><highlight class="comment">========================</highlight></codeline>
<codeline lineno="2319"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2320"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idRenderSystemLocal::GetCardCaps(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;oldCard,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;nv10or20<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/>nv10or20<sp/>=<sp/>(<sp/>tr.backEndRenderer<sp/>==<sp/>BE_NV10<sp/>||<sp/>tr.backEndRenderer<sp/>==<sp/>BE_NV20<sp/>);</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/>oldCard<sp/>=<sp/>(<sp/>tr.backEndRenderer<sp/>==<sp/>BE_ARB<sp/>||<sp/>tr.backEndRenderer<sp/>==<sp/>BE_R200<sp/>||<sp/>tr.backEndRenderer<sp/>==<sp/>BE_NV10<sp/>||<sp/>tr.backEndRenderer<sp/>==<sp/>BE_NV20<sp/>);</highlight></codeline>
<codeline lineno="2323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp"/>
  </compounddef>
</doxygen>
