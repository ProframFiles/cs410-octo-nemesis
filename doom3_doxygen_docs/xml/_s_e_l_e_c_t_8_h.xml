<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_s_e_l_e_c_t_8_h" kind="file">
    <compoundname>SELECT.H</compoundname>
    <includedby refid="_q_e3_8_h" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H</includedby>
    <innerclass refid="class_c_drag_point" prot="public">CDragPoint</innerclass>
    <innerclass refid="structqertrace__t" prot="public">qertrace_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_s_e_l_e_c_t_8_h_1a93f29b653694a9a157d6bedc69f910d0" prot="public" static="no">
        <name>SF_SELECTED_ONLY</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="80" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_e_l_e_c_t_8_h_1aa38d7f9fffbe199a674c9634b42490f5" prot="public" static="no">
        <name>SF_ENTITIES_FIRST</name>
        <initializer>0x02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="81" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_e_l_e_c_t_8_h_1a666182d4fda4771f3e55ee63064fe124" prot="public" static="no">
        <name>SF_SINGLEFACE</name>
        <initializer>0x04</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="82" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_e_l_e_c_t_8_h_1a0d1617c2ce63fda2f58803713f5be9ef" prot="public" static="no">
        <name>SF_IGNORECURVES</name>
        <initializer>0x08</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="83" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_e_l_e_c_t_8_h_1a7600d127c8669a82b740d77a53c07906" prot="public" static="no">
        <name>SF_IGNOREGROUPS</name>
        <initializer>0x10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="84" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_e_l_e_c_t_8_h_1a3a043a747b2e0fab53315e336868e4a6" prot="public" static="no">
        <name>SF_CYCLE</name>
        <initializer>0x20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="85" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_s_e_l_e_c_t_8_h_1ad3db8f803a26798b427062b8e49890b6" prot="public" static="no">
        <name>select_t</name>
        <enumvalue id="_s_e_l_e_c_t_8_h_1ad3db8f803a26798b427062b8e49890b6ad573778d7407db8f9afdb0192adc4352" prot="public">
          <name>sel_brush</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_e_l_e_c_t_8_h_1ad3db8f803a26798b427062b8e49890b6a86e63d65c66d10aaa8b3dddee1836874" prot="public">
          <name>sel_vertex</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_e_l_e_c_t_8_h_1ad3db8f803a26798b427062b8e49890b6ad8121443e4bfa82bb5a77a6bda0cf7e7" prot="public">
          <name>sel_edge</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_e_l_e_c_t_8_h_1ad3db8f803a26798b427062b8e49890b6a70fc893e58672743e7adbd5ef5a196a5" prot="public">
          <name>sel_singlevertex</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_e_l_e_c_t_8_h_1ad3db8f803a26798b427062b8e49890b6a635369206295045b6df4544031fce66b" prot="public">
          <name>sel_curvepoint</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_e_l_e_c_t_8_h_1ad3db8f803a26798b427062b8e49890b6a594d1b474c50d8ce4eb2262d03f8fce9" prot="public">
          <name>sel_area</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_e_l_e_c_t_8_h_1ad3db8f803a26798b427062b8e49890b6af7e36e545ffd7a9a9c27ebe1b0ac20de" prot="public">
          <name>sel_addpoint</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_e_l_e_c_t_8_h_1ad3db8f803a26798b427062b8e49890b6aa90cd865eace8a8ed49fd875b9f78ee1" prot="public">
          <name>sel_editpoint</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="33" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" bodystart="32" bodyend="44"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a19181ad87f393714dd6330f65c3b8086" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structqertrace__t" kindref="compound">qertrace_t</ref></type>
        <definition>qertrace_t Test_Ray</definition>
        <argsstring>(const idVec3 &amp;origin, const idVec3 &amp;dir, int flags)</argsstring>
        <name>Test_Ray</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="88" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="47" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1ae16051ef2e3e4a168cdd2a89689f722f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_c_drag_point" kindref="compound">CDragPoint</ref> *</type>
        <definition>CDragPoint* PointRay</definition>
        <argsstring>(const idVec3 &amp;org, const idVec3 &amp;dir, float *dist)</argsstring>
        <name>PointRay</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>org</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>dist</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="89" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/XYWnd.cpp" bodystart="157" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a22cd06e545ecf647bda6b1fc0d002b2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SelectCurvePointByRay</definition>
        <argsstring>(const idVec3 &amp;org, const idVec3 &amp;dir, int buttons)</argsstring>
        <name>SelectCurvePointByRay</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>org</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>int</type>
          <declname>buttons</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="90" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/VERTSEL.CPP" bodystart="357" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a1bae88415a04b972ea9a79d9cad1f05d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SelectSplinePointByRay</definition>
        <argsstring>(const idVec3 &amp;org, const idVec3 &amp;dir, int buttons)</argsstring>
        <name>SelectSplinePointByRay</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>org</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>int</type>
          <declname>buttons</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="91" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/VERTSEL.CPP" bodystart="398" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1adb8a3108574d77f658f2782e13b66fd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_GetBounds</definition>
        <argsstring>(idVec3 &amp;mins, idVec3 &amp;maxs)</argsstring>
        <name>Select_GetBounds</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>mins</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>maxs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="93" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="590" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a91a06ed4c5305376db03318f0cd953da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_Brush</definition>
        <argsstring>(brush_t *b, bool bComplete=true, bool bStatus=true)</argsstring>
        <name>Select_Brush</name>
        <param>
          <type><ref refid="structbrush__s" kindref="compound">brush_t</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bComplete</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>bStatus</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="94" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="209" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1af6b85d861faaf449e4ebd00321245263" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_Ray</definition>
        <argsstring>(idVec3 origin, idVec3 dir, int flags)</argsstring>
        <name>Select_Ray</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>origin</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>dir</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="95" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="301" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1abdc71d26af1051d2d5d0f6f8aa51dee3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_Delete</definition>
        <argsstring>(void)</argsstring>
        <name>Select_Delete</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="96" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="398" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1ac20f2dcbec88e26bf433b905d3bbf9f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_Deselect</definition>
        <argsstring>(bool bDeselectFaces=true)</argsstring>
        <name>Select_Deselect</name>
        <param>
          <type>bool</type>
          <declname>bDeselectFaces</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="97" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="427" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a3e8b2693479756ddd71b8422cb9ab653" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_Invert</definition>
        <argsstring>(void)</argsstring>
        <name>Select_Invert</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="98" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="1921" bodyend="1953"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a6e85097f72722d5b7e29dbed83552de7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_Clone</definition>
        <argsstring>(void)</argsstring>
        <name>Select_Clone</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="99" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="519" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a1fb1ce48e00cf466f2211e61b51bf1fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_Move</definition>
        <argsstring>(idVec3 delta, bool bSnap=true)</argsstring>
        <name>Select_Move</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>delta</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bSnap</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="100" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="483" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a44f8e60f2b0149a4aa13d6e26aac80b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void WINAPI</type>
        <definition>void WINAPI Select_SetTexture</definition>
        <argsstring>(texdef_t *texdef, brushprimit_texdef_t *brushprimit_texdef, bool bFitScale=false, void *pPlugTexdef=NULL, bool update=true)</argsstring>
        <name>Select_SetTexture</name>
        <param>
          <type><ref refid="classtexdef__t" kindref="compound">texdef_t</ref> *</type>
          <declname>texdef</declname>
        </param>
        <param>
          <type><ref refid="classbrushprimit__texdef__t" kindref="compound">brushprimit_texdef_t</ref> *</type>
          <declname>brushprimit_texdef</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bFitScale</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>void *</type>
          <declname>pPlugTexdef</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>update</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="101" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="539" bodyend="583"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a8c347c0490180a442e72e1100968104d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_FlipAxis</definition>
        <argsstring>(int axis)</argsstring>
        <name>Select_FlipAxis</name>
        <param>
          <type>int</type>
          <declname>axis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="102" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="1185" bodyend="1224"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1ac21e6059f36239b581097b2a464cf42d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_RotateAxis</definition>
        <argsstring>(int axis, float deg, bool bPaint=true, bool bMouse=false)</argsstring>
        <name>Select_RotateAxis</name>
        <param>
          <type>int</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>float</type>
          <declname>deg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bPaint</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>bMouse</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="103" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="958" bodyend="1003"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a1831cb4cd03ba3955c9feec5e729986e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_CompleteTall</definition>
        <argsstring>(void)</argsstring>
        <name>Select_CompleteTall</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="104" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="1280" bodyend="1320"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a72cda229ec2b80abf4003516e73b611c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_PartialTall</definition>
        <argsstring>(void)</argsstring>
        <name>Select_PartialTall</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="105" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="1326" bodyend="1379"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a8b5c18a9ea9eadbc35559bd3cefaa4f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_Touching</definition>
        <argsstring>(void)</argsstring>
        <name>Select_Touching</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="106" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="1385" bodyend="1419"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a96941834d63896ae58e2e6079d3c6b43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_Inside</definition>
        <argsstring>(void)</argsstring>
        <name>Select_Inside</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="107" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="1425" bodyend="1460"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a6dd974011f6086cd5e8565e07495c8bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_CenterOrigin</definition>
        <argsstring>()</argsstring>
        <name>Select_CenterOrigin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="108" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="1972" bodyend="1990"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1acbf1f54e872fb5a50aff9d18107857b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_AllOfType</definition>
        <argsstring>()</argsstring>
        <name>Select_AllOfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="109" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="1717" bodyend="1802"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1ae686590c67d4eacefa977235b0d73cb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_Reselect</definition>
        <argsstring>()</argsstring>
        <name>Select_Reselect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="110" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="1808" bodyend="1822"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a7c0197f9b19025382d92f406773c0422" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_FitTexture</definition>
        <argsstring>(float height=1.0, float width=1.0)</argsstring>
        <name>Select_FitTexture</name>
        <param>
          <type>float</type>
          <declname>height</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>float</type>
          <declname>width</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="111" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="1828" bodyend="1858"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a7fb12e2f6d0372aebd03c296b4c7b5f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_InitializeRotation</definition>
        <argsstring>()</argsstring>
        <name>Select_InitializeRotation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="112" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="658" bodyend="667"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1ac363ed24aa5c132547c04da64d8852af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_FinalizeRotation</definition>
        <argsstring>()</argsstring>
        <name>Select_FinalizeRotation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="113" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="669" bodyend="671"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1abecc75c7485004458b10e1541f7428d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ComputeAbsolute</definition>
        <argsstring>(face_t *f, idVec3 &amp;p1, idVec3 &amp;p2, idVec3 &amp;p3)</argsstring>
        <name>ComputeAbsolute</name>
        <param>
          <type><ref refid="structface__s" kindref="compound">face_t</ref> *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="117" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="1061" bodyend="1105"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1aba94a5eb13174c2d79083622cfec69bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AbsoluteToLocal</definition>
        <argsstring>(const idPlane &amp;normal2, face_t *f, idVec3 &amp;p1, idVec3 &amp;p2, idVec3 &amp;p3)</argsstring>
        <name>AbsoluteToLocal</name>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>normal2</declname>
        </param>
        <param>
          <type><ref refid="structface__s" kindref="compound">face_t</ref> *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="118" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="1111" bodyend="1179"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a6dae63af4e1aa89673ccd05924e97656" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_Hide</definition>
        <argsstring>(bool invert=false)</argsstring>
        <name>Select_Hide</name>
        <param>
          <type>bool</type>
          <declname>invert</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="119" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="1871" bodyend="1883"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a117ef1249cec27fa69dca1ccd9e0604f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_ShowAllHidden</definition>
        <argsstring>()</argsstring>
        <name>Select_ShowAllHidden</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="120" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="1903" bodyend="1914"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1ae8f16a709a0ffb728dea87890259dcb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_WireFrame</definition>
        <argsstring>(bool wireFrame)</argsstring>
        <name>Select_WireFrame</name>
        <param>
          <type>bool</type>
          <declname>wireFrame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="121" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="1885" bodyend="1890"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1ab9410a52215a711adbdaa763199d9c57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_ForceVisible</definition>
        <argsstring>(bool visible)</argsstring>
        <name>Select_ForceVisible</name>
        <param>
          <type>bool</type>
          <declname>visible</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="122" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="1892" bodyend="1897"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a78716cb6ee7ce469eead6df52babb558" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_Name</definition>
        <argsstring>(const char *pName)</argsstring>
        <name>Select_Name</name>
        <param>
          <type>const char *</type>
          <declname>pName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="123" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="1960" bodyend="1966"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1ae8224f1b4d78e59a2dcb29b3eb9f5a89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_AddProjectedLight</definition>
        <argsstring>()</argsstring>
        <name>Select_AddProjectedLight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="124" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorBrush.cpp" bodystart="4938" bodyend="4962"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a6b2187007a62f16b5b46632287df1de0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_GetMid</definition>
        <argsstring>(idVec3 &amp;mid)</argsstring>
        <name>Select_GetMid</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>mid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="125" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="629" bodyend="648"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a298a434817bc7d769e311ab3090acfae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_SetDefaultTexture</definition>
        <argsstring>(const idMaterial *mat, bool fitScale, bool setTexture)</argsstring>
        <name>Select_SetDefaultTexture</name>
        <param>
          <type>const <ref refid="classid_material" kindref="compound">idMaterial</ref> *</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fitScale</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>setTexture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="126" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="2022" bodyend="2050"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a3484e73066c7857a4ff9f6317d58bbb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_UpdateTextureName</definition>
        <argsstring>(const char *name)</argsstring>
        <name>Select_UpdateTextureName</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="127" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="2053" bodyend="2091"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1af1b8ff8f87d5d4e50e122be9fd4a2c49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_FlipTexture</definition>
        <argsstring>(bool y)</argsstring>
        <name>Select_FlipTexture</name>
        <param>
          <type>bool</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="129" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="2098" bodyend="2121"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a878adce96e0dde48a9c910778936b810" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_SetPatchFit</definition>
        <argsstring>(float dim1, float dim2, float srcWidth, float srcHeight, float rot)</argsstring>
        <name>Select_SetPatchFit</name>
        <param>
          <type>float</type>
          <declname>dim1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>dim2</declname>
        </param>
        <param>
          <type>float</type>
          <declname>srcWidth</declname>
        </param>
        <param>
          <type>float</type>
          <declname>srcHeight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="130" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="2181" bodyend="2191"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a1f16313d78ec814e358b4044722f922a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_SetPatchST</definition>
        <argsstring>(float s1, float t1, float s2, float t2)</argsstring>
        <name>Select_SetPatchST</name>
        <param>
          <type>float</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="131" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="2193" bodyend="2194"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a0f75f81490b4700359872fc94d7bde5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_ProjectFaceOntoPatch</definition>
        <argsstring>(face_t *face)</argsstring>
        <name>Select_ProjectFaceOntoPatch</name>
        <param>
          <type><ref refid="structface__s" kindref="compound">face_t</ref> *</type>
          <declname>face</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="132" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="2165" bodyend="2172"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1aec84a8a1e5fc59d8924ab90615074ccf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_CopyPatchTextureCoords</definition>
        <argsstring>(patchMesh_t *p)</argsstring>
        <name>Select_CopyPatchTextureCoords</name>
        <param>
          <type><ref refid="structpatch_mesh__t" kindref="compound">patchMesh_t</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="133" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="2145" bodyend="2157"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a56694f2078af4be0df63ecf5e1ea7390" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_AllTargets</definition>
        <argsstring>()</argsstring>
        <name>Select_AllTargets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="134" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="2197" bodyend="2210"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1addb098c8928c2249b76d3bcaa2970f64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_Scale</definition>
        <argsstring>(float x, float y, float z)</argsstring>
        <name>Select_Scale</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="135" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="1230" bodyend="1273"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a11b8dca15ae8dea4c69e65c488a643e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_RotateTexture</definition>
        <argsstring>(float amt, bool absolute=false)</argsstring>
        <name>Select_RotateTexture</name>
        <param>
          <type>float</type>
          <declname>amt</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>absolute</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="136" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="1631" bodyend="1681"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a0d6d19dc2ba6be2f029b8651ac76affa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_ScaleTexture</definition>
        <argsstring>(float x, float y, bool update=true, bool absolute=true)</argsstring>
        <name>Select_ScaleTexture</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>update</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>absolute</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="137" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="1567" bodyend="1623"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a2768f5ed5926894c50c76762b9719a26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_DefaultTextureScale</definition>
        <argsstring>(bool horz, bool vert, bool update=true)</argsstring>
        <name>Select_DefaultTextureScale</name>
        <param>
          <type>bool</type>
          <declname>horz</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>vert</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>update</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1a2bb05b1fb8f518ffe1594d163fa272ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_ShiftTexture</definition>
        <argsstring>(float x, float y, bool autoAdjust=false)</argsstring>
        <name>Select_ShiftTexture</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>autoAdjust</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="139" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="1504" bodyend="1558"/>
      </memberdef>
      <memberdef kind="function" id="_s_e_l_e_c_t_8_h_1addcf8ef098af52dcf5c1a35c7b8c723b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Select_GetTrueMid</definition>
        <argsstring>(idVec3 &amp;mid)</argsstring>
        <name>Select_GetTrueMid</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>mid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H" line="140" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.CPP" bodystart="616" bodyend="623"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__SELECT_H_</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__SELECT_H_</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>sel_brush,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sel_sticky_brush,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sel_face,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>sel_vertex,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>sel_edge,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>sel_singlevertex,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>sel_curvepoint,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>sel_area,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>sel_addpoint,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>dropping<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>sel_editpoint<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>editing<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">}<sp/>select_t;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="class_c_drag_point" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_drag_point" kindref="compound">CDragPoint</ref><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>vec;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbrush__s" kindref="compound">brush_t</ref><sp/>*pBrush;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nType;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>priority;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_drag_point" kindref="compound">CDragPoint</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_drag_point" kindref="compound">CDragPoint</ref>(<ref refid="structbrush__s" kindref="compound">brush_t</ref><sp/>*b,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBrush<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VectorCopy(v,<sp/>vec);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nType<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>priority<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Set(<ref refid="structbrush__s" kindref="compound">brush_t</ref><sp/>*b,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBrush<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VectorCopy(v,<sp/>vec);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nType<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>PointWithin(<ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nView<sp/>=<sp/>-1);</highlight></codeline>
<codeline lineno="67"><highlight class="normal">};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="structqertrace__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbrush__s" kindref="compound">brush_t</ref><sp/><sp/><sp/><sp/><sp/>*brush;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structface__s" kindref="compound">face_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>*face;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_drag_point" kindref="compound">CDragPoint</ref><sp/>*point;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>selected;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}<sp/><ref refid="structqertrace__t" kindref="compound">qertrace_t</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SF_SELECTED_ONLY<sp/><sp/><sp/><sp/><sp/>0x01</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SF_ENTITIES_FIRST<sp/><sp/><sp/><sp/>0x02</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SF_SINGLEFACE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x04</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SF_IGNORECURVES<sp/><sp/><sp/><sp/>0x08</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SF_IGNOREGROUPS<sp/><sp/><sp/><sp/>0x10</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SF_CYCLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x20</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><ref refid="structqertrace__t" kindref="compound">qertrace_t</ref><sp/>Test_Ray<sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;origin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;dir,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags<sp/>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><ref refid="class_c_drag_point" kindref="compound">CDragPoint</ref><sp/>*PointRay(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;org,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;dir,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*dist);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SelectCurvePointByRay(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;org,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;dir,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buttons);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SelectSplinePointByRay(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;org,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;dir,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buttons);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_GetBounds<sp/>(<ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;mins,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;maxs);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_Brush<sp/>(<ref refid="structbrush__s" kindref="compound">brush_t</ref><sp/>*b,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bComplete<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bStatus<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_Ray<sp/>(<ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>origin,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>dir,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_Delete<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_Deselect<sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bDeselectFaces<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_Invert(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_Clone<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_Move<sp/>(<ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>delta,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSnap<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WINAPI<sp/>Select_SetTexture<sp/>(<ref refid="classtexdef__t" kindref="compound">texdef_t</ref><sp/>*texdef,<sp/><ref refid="classbrushprimit__texdef__t" kindref="compound">brushprimit_texdef_t</ref><sp/>*brushprimit_texdef,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bFitScale<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pPlugTexdef<sp/>=<sp/>NULL,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>update<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_FlipAxis<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>axis);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_RotateAxis<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>axis,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>deg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bPaint<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bMouse<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_CompleteTall<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_PartialTall<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_Touching<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_Inside<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_CenterOrigin();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_AllOfType();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_Reselect();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_FitTexture(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>1.0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>1.0);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_InitializeRotation();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_FinalizeRotation();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>absolute<sp/>texture<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TTimo<sp/>NOTE:<sp/>this<sp/>is<sp/>stuff<sp/>for<sp/>old<sp/>brushes<sp/>format<sp/>and<sp/>rotation<sp/>texture<sp/>lock<sp/>..<sp/>sort<sp/>of<sp/>in-between<sp/>with<sp/>bush<sp/>primitives</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ComputeAbsolute(<ref refid="structface__s" kindref="compound">face_t</ref>*<sp/>f,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>&amp;<sp/>p1,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>&amp;<sp/>p2,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>&amp;<sp/>p3);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AbsoluteToLocal(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_plane" kindref="compound">idPlane</ref><sp/>&amp;normal2,<sp/><ref refid="structface__s" kindref="compound">face_t</ref>*<sp/>f,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>&amp;<sp/>p1,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>&amp;<sp/>p2,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>&amp;<sp/>p3);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_Hide(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>invert<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_ShowAllHidden();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_WireFrame(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wireFrame<sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_ForceVisible(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>visible<sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_Name(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pName);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_AddProjectedLight();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_GetMid<sp/>(<ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;mid);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_SetDefaultTexture(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_material" kindref="compound">idMaterial</ref><sp/>*mat,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fitScale,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setTexture);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_UpdateTextureName(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_FlipTexture(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>y);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_SetPatchFit(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dim1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dim2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>srcWidth,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>srcHeight,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rot);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_SetPatchST(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t2);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_ProjectFaceOntoPatch(<sp/><ref refid="structface__s" kindref="compound">face_t</ref><sp/>*face<sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_CopyPatchTextureCoords(<sp/><ref refid="structpatch_mesh__t" kindref="compound">patchMesh_t</ref><sp/>*p<sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_AllTargets();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_Scale(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_RotateTexture(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>amt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>absolute<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_ScaleTexture(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>update<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>absolute<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_DefaultTextureScale(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>horz,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>vert,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>update<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_ShiftTexture(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>autoAdjust<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_GetTrueMid<sp/>(<ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;mid);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select_Scale(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SELECT.H"/>
  </compounddef>
</doxygen>
