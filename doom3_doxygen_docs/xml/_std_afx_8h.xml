<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_std_afx_8h" kind="file">
    <compoundname>StdAfx.h</compoundname>
    <includes local="no">afxwin.h</includes>
    <includes local="no">afxext.h</includes>
    <includes local="no">afxdisp.h</includes>
    <includes local="no">afxcmn.h</includes>
    <incdepgraph>
      <node id="2688">
        <label>afxcmn.h</label>
      </node>
      <node id="2686">
        <label>afxext.h</label>
      </node>
      <node id="2684">
        <label>E:/sources/3rd_party/DOOM/neo/tools/comafx/StdAfx.h</label>
        <link refid="StdAfx.h"/>
        <childnode refid="2685" relation="include">
        </childnode>
        <childnode refid="2686" relation="include">
        </childnode>
        <childnode refid="2687" relation="include">
        </childnode>
        <childnode refid="2688" relation="include">
        </childnode>
      </node>
      <node id="2687">
        <label>afxdisp.h</label>
      </node>
      <node id="2685">
        <label>afxwin.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structtool_tip__s" prot="public">toolTip_s</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_std_afx_8h_1a991b3fce78c764710c0fd02d063e2d1b" prot="public" static="no">
        <type>struct <ref refid="structtool_tip__s" kindref="compound">toolTip_s</ref></type>
        <definition>typedef struct toolTip_s  toolTip_t</definition>
        <argsstring></argsstring>
        <name>toolTip_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/StdAfx.h" line="51" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_std_afx_8h_1ac3a4512346f43acf57fabc971c40b0bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InitAfx</definition>
        <argsstring>(void)</argsstring>
        <name>InitAfx</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/StdAfx.h" line="45" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/StdAfx.cpp" bodystart="53" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="_std_afx_8h_1a740b14228230b46d67d36389e424beb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DefaultOnToolHitTest</definition>
        <argsstring>(const toolTip_t *toolTips, const CDialog *dialog, CPoint point, TOOLINFO *pTI)</argsstring>
        <name>DefaultOnToolHitTest</name>
        <param>
          <type>const <ref refid="structtool_tip__s" kindref="compound">toolTip_t</ref> *</type>
          <declname>toolTips</declname>
        </param>
        <param>
          <type>const CDialog *</type>
          <declname>dialog</declname>
        </param>
        <param>
          <type>CPoint</type>
          <declname>point</declname>
        </param>
        <param>
          <type>TOOLINFO *</type>
          <declname>pTI</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/StdAfx.h" line="53" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/StdAfx.cpp" bodystart="75" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="_std_afx_8h_1afb42b37b44463302ca6cd21e84cd019d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>BOOL DefaultOnToolTipNotify</definition>
        <argsstring>(const toolTip_t *toolTips, UINT id, NMHDR *pNMHDR, LRESULT *pResult)</argsstring>
        <name>DefaultOnToolTipNotify</name>
        <param>
          <type>const <ref refid="structtool_tip__s" kindref="compound">toolTip_t</ref> *</type>
          <declname>toolTips</declname>
        </param>
        <param>
          <type>UINT</type>
          <declname>id</declname>
        </param>
        <param>
          <type>NMHDR *</type>
          <declname>pNMHDR</declname>
        </param>
        <param>
          <type>LRESULT *</type>
          <declname>pResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/StdAfx.h" line="54" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/StdAfx.cpp" bodystart="104" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="_std_afx_8h_1a21b3b238f9c65d604e39390ceaf9f26a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool EditControlEnterHit</definition>
        <argsstring>(CEdit *edit)</argsstring>
        <name>EditControlEnterHit</name>
        <param>
          <type>CEdit *</type>
          <declname>edit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/StdAfx.h" line="57" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/StdAfx.cpp" bodystart="154" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="_std_afx_8h_1a4eddf10af421ef2f15f6c9a0f7963969" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float EditVerifyFloat</definition>
        <argsstring>(CEdit *edit, bool allowNegative=true)</argsstring>
        <name>EditVerifyFloat</name>
        <param>
          <type>CEdit *</type>
          <declname>edit</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>allowNegative</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/StdAfx.h" line="58" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/StdAfx.cpp" bodystart="175" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="_std_afx_8h_1aff58af400aad077d92ac5553e597d34f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float EditSpinFloat</definition>
        <argsstring>(CEdit *edit, bool up)</argsstring>
        <name>EditSpinFloat</name>
        <param>
          <type>CEdit *</type>
          <declname>edit</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/StdAfx.h" line="59" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/StdAfx.cpp" bodystart="305" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="_std_afx_8h_1a8be651eb1d4e4078c1aeeed80e8cdf3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SetSafeComboBoxSelection</definition>
        <argsstring>(CComboBox *combo, const char *string, int skip)</argsstring>
        <name>SetSafeComboBoxSelection</name>
        <param>
          <type>CComboBox *</type>
          <declname>combo</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>int</type>
          <declname>skip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/StdAfx.h" line="62" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/StdAfx.cpp" bodystart="319" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="_std_afx_8h_1a72d4ef4cc0761445380cc73a344bbf68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GetSafeComboBoxSelection</definition>
        <argsstring>(CComboBox *combo, CString &amp;string, int skip)</argsstring>
        <name>GetSafeComboBoxSelection</name>
        <param>
          <type>CComboBox *</type>
          <declname>combo</declname>
        </param>
        <param>
          <type>CString &amp;</type>
          <declname>string</declname>
        </param>
        <param>
          <type>int</type>
          <declname>skip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/StdAfx.h" line="63" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/StdAfx.cpp" bodystart="341" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="_std_afx_8h_1aec283fbcd7ae9222eba47b4935806e58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UnsetSafeComboBoxSelection</definition>
        <argsstring>(CComboBox *combo, CString &amp;string)</argsstring>
        <name>UnsetSafeComboBoxSelection</name>
        <param>
          <type>CComboBox *</type>
          <declname>combo</declname>
        </param>
        <param>
          <type>CString &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/StdAfx.h" line="64" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/comafx/StdAfx.cpp" bodystart="366" bodyend="382"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__AFX_STDAFX_H__</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__AFX_STDAFX_H__</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>include<sp/>file<sp/>for<sp/>standard<sp/>system<sp/>include<sp/>files,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>or<sp/>project<sp/>specific<sp/>include<sp/>files<sp/>that<sp/>are<sp/>used<sp/>frequently,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>are<sp/>changed<sp/>infrequently</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>VC_EXTRALEAN<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Exclude<sp/>rarely-used<sp/>stuff<sp/>from<sp/>Windows<sp/>headers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;afxwin.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MFC<sp/>core<sp/>and<sp/>standard<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;afxext.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MFC<sp/>extensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;afxdisp.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MFC<sp/>OLE<sp/>automation<sp/>classes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_AFX_NO_AFXCMN_SUPPORT</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;afxcmn.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MFC<sp/>support<sp/>for<sp/>Windows<sp/>Common<sp/>Controls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>_AFX_NO_AFXCMN_SUPPORT</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InitAfx(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tool<sp/>tips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="structtool_tip__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtool_tip__s" kindref="compound">toolTip_s</ref><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>id;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tip;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}<sp/><ref refid="structtool_tip__s" kindref="compound">toolTip_t</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DefaultOnToolHitTest(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtool_tip__s" kindref="compound">toolTip_t</ref><sp/>*toolTips,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CDialog<sp/>*dialog,<sp/>CPoint<sp/>point,<sp/>TOOLINFO*<sp/>pTI<sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">BOOL<sp/>DefaultOnToolTipNotify(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtool_tip__s" kindref="compound">toolTip_t</ref><sp/>*toolTips,<sp/>UINT<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>NMHDR<sp/>*pNMHDR,<sp/>LRESULT<sp/>*pResult<sp/>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>edit<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EditControlEnterHit(<sp/>CEdit<sp/>*edit<sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>EditVerifyFloat(<sp/>CEdit<sp/>*edit,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allowNegative<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>EditSpinFloat(<sp/>CEdit<sp/>*edit,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>up<sp/>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>combo<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SetSafeComboBoxSelection(<sp/>CComboBox<sp/>*combo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>skip<sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetSafeComboBoxSelection(<sp/>CComboBox<sp/>*combo,<sp/>CString<sp/>&amp;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>skip<sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UnsetSafeComboBoxSelection(<sp/>CComboBox<sp/>*combo,<sp/>CString<sp/>&amp;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!__AFX_STDAFX_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/tools/comafx/StdAfx.h"/>
  </compounddef>
</doxygen>
