<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_surface___swept_spline_8cpp" kind="file">
    <compoundname>Surface_SweptSpline.cpp</compoundname>
    <includes refid="precompiled_8h" local="yes">../precompiled.h</includes>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../precompiled.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>hdrstop</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="34"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="35"><highlight class="comment">idSurface_SweptSpline::SetSpline</highlight></codeline>
<codeline lineno="36"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="37"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idSurface_SweptSpline::SetSpline(<sp/><ref refid="classid_curve___spline" kindref="compound">idCurve_Spline&lt;idVec4&gt;</ref><sp/>*spline<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>this-&gt;spline<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>this-&gt;spline;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;spline<sp/>=<sp/>spline;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="46"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="47"><highlight class="comment">idSurface_SweptSpline::SetSweptSpline</highlight></codeline>
<codeline lineno="48"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="49"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idSurface_SweptSpline::SetSweptSpline(<sp/><ref refid="classid_curve___spline" kindref="compound">idCurve_Spline&lt;idVec4&gt;</ref><sp/>*sweptSpline<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>this-&gt;sweptSpline<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>this-&gt;sweptSpline;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;sweptSpline<sp/>=<sp/>sweptSpline;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="58"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="59"><highlight class="comment">idSurface_SweptSpline::SetSweptCircle</highlight></codeline>
<codeline lineno="60"><highlight class="comment"></highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/>Sets<sp/>the<sp/>swept<sp/>spline<sp/>to<sp/>a<sp/>NURBS<sp/>circle.</highlight></codeline>
<codeline lineno="62"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="63"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idSurface_SweptSpline::SetSweptCircle(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_curve___n_u_r_b_s" kindref="compound">idCurve_NURBS&lt;idVec4&gt;</ref><sp/>*nurbs<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classid_curve___n_u_r_b_s" kindref="compound">idCurve_NURBS&lt;idVec4&gt;</ref>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>nurbs-&gt;Clear();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>nurbs-&gt;AddValue(<sp/><sp/><sp/>0.0f,<sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref>(<sp/><sp/>radius,<sp/><sp/>radius,<sp/>0.0f,<sp/>0.00f<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>nurbs-&gt;AddValue(<sp/>100.0f,<sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref>(<sp/>-radius,<sp/><sp/>radius,<sp/>0.0f,<sp/>0.25f<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>nurbs-&gt;AddValue(<sp/>200.0f,<sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref>(<sp/>-radius,<sp/>-radius,<sp/>0.0f,<sp/>0.50f<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>nurbs-&gt;AddValue(<sp/>300.0f,<sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref>(<sp/><sp/>radius,<sp/>-radius,<sp/>0.0f,<sp/>0.75f<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>nurbs-&gt;SetBoundaryType(<sp/><ref refid="classid_curve___n_u_r_b_s" kindref="compound">idCurve_NURBS&lt;idVec4&gt;::BT_CLOSED</ref><sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>nurbs-&gt;SetCloseTime(<sp/>100.0f<sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>sweptSpline<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>sweptSpline;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>sweptSpline<sp/>=<sp/>nurbs;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="80"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="81"><highlight class="comment">idSurface_SweptSpline::GetFrame</highlight></codeline>
<codeline lineno="82"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="83"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idSurface_SweptSpline::GetFrame(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/>&amp;previousFrame,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>dir,<sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/>&amp;newFrame<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>wx,<sp/>wy,<sp/>wz;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>xx,<sp/>yy,<sp/>yz;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>xy,<sp/>xz,<sp/>zz;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x2,<sp/>y2,<sp/>z2;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/>c,<sp/>s,<sp/>x,<sp/>y,<sp/>z;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>d,<sp/>v;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/>axis;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>dir;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>d.Normalize();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/>d.Cross(<sp/>previousFrame[2]<sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>v.Normalize();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>idMath::ACos(<sp/>previousFrame[2]<sp/>*<sp/>d<sp/>)<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>idMath::Cos(<sp/>a<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>idMath::Sqrt(<sp/>1.0f<sp/>-<sp/>c<sp/>*<sp/>c<sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>v[0]<sp/>*<sp/>s;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>v[1]<sp/>*<sp/>s;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>z<sp/>=<sp/>v[2]<sp/>*<sp/>s;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>x<sp/>+<sp/>x;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>y2<sp/>=<sp/>y<sp/>+<sp/>y;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>z2<sp/>=<sp/>z<sp/>+<sp/>z;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>xx<sp/>=<sp/>x<sp/>*<sp/>x2;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>xy<sp/>=<sp/>x<sp/>*<sp/>y2;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>xz<sp/>=<sp/>x<sp/>*<sp/>z2;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>yy<sp/>=<sp/>y<sp/>*<sp/>y2;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>yz<sp/>=<sp/>y<sp/>*<sp/>z2;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>zz<sp/>=<sp/>z<sp/>*<sp/>z2;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>wx<sp/>=<sp/>c<sp/>*<sp/>x2;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>wy<sp/>=<sp/>c<sp/>*<sp/>y2;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>wz<sp/>=<sp/>c<sp/>*<sp/>z2;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>axis[0][0]<sp/>=<sp/>1.0f<sp/>-<sp/>(<sp/>yy<sp/>+<sp/>zz<sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>axis[0][1]<sp/>=<sp/>xy<sp/>-<sp/>wz;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>axis[0][2]<sp/>=<sp/>xz<sp/>+<sp/>wy;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>axis[1][0]<sp/>=<sp/>xy<sp/>+<sp/>wz;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>axis[1][1]<sp/>=<sp/>1.0f<sp/>-<sp/>(<sp/>xx<sp/>+<sp/>zz<sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>axis[1][2]<sp/>=<sp/>yz<sp/>-<sp/>wx;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>axis[2][0]<sp/>=<sp/>xz<sp/>-<sp/>wy;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>axis[2][1]<sp/>=<sp/>yz<sp/>+<sp/>wx;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>axis[2][2]<sp/>=<sp/>1.0f<sp/>-<sp/>(<sp/>xx<sp/>+<sp/>yy<sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>newFrame<sp/>=<sp/>previousFrame<sp/>*<sp/>axis;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>newFrame[2]<sp/>=<sp/>dir;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>newFrame[2].Normalize();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>newFrame[1].Cross(<sp/>newFrame[<sp/>2<sp/>],<sp/>newFrame[<sp/>0<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>newFrame[1].Normalize();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>newFrame[0].Cross(<sp/>newFrame[<sp/>1<sp/>],<sp/>newFrame[<sp/>2<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>newFrame[0].Normalize();</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="140"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="141"><highlight class="comment">idSurface_SweptSpline::Tessellate</highlight></codeline>
<codeline lineno="142"><highlight class="comment"></highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/>tesselate<sp/>the<sp/>surface</highlight></codeline>
<codeline lineno="144"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="145"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idSurface_SweptSpline::Tessellate(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>splineSubdivisions,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sweptSplineSubdivisions<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>offset,<sp/>baseOffset,<sp/>splineDiv,<sp/>sweptSplineDiv;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i0,<sp/>i1,<sp/>j0,<sp/>j1;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>totalTime,<sp/>t;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/>splinePos,<sp/>splineD1;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/>splineMat;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!spline<sp/>||<sp/>!sweptSpline<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idSurface::Clear();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>verts.SetNum(<sp/>splineSubdivisions<sp/>*<sp/>sweptSplineSubdivisions,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>the<sp/>points<sp/>and<sp/>first<sp/>derivatives<sp/>for<sp/>the<sp/>swept<sp/>spline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>totalTime<sp/>=<sp/>sweptSpline-&gt;GetTime(<sp/>sweptSpline-&gt;GetNumValues()<sp/>-<sp/>1<sp/>)<sp/>-<sp/>sweptSpline-&gt;GetTime(<sp/>0<sp/>)<sp/>+<sp/>sweptSpline-&gt;GetCloseTime();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>sweptSplineDiv<sp/>=<sp/>sweptSpline-&gt;GetBoundaryType()<sp/>==<sp/><ref refid="classid_curve___spline" kindref="compound">idCurve_Spline&lt;idVec3&gt;::BT_CLOSED</ref><sp/>?<sp/>sweptSplineSubdivisions<sp/>:<sp/>sweptSplineSubdivisions<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>baseOffset<sp/>=<sp/>(splineSubdivisions-1)<sp/>*<sp/>sweptSplineSubdivisions;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sweptSplineSubdivisions;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>totalTime<sp/>*<sp/>i<sp/>/<sp/>sweptSplineDiv;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splinePos<sp/>=<sp/>sweptSpline-&gt;GetCurrentValue(<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splineD1<sp/>=<sp/>sweptSpline-&gt;GetCurrentFirstDerivative(<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[baseOffset+i].xyz<sp/>=<sp/>splinePos.ToVec3();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[baseOffset+i].st[0]<sp/>=<sp/>splinePos.w;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[baseOffset+i].tangents[0]<sp/>=<sp/>splineD1.ToVec3();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sweep<sp/>the<sp/>spline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>totalTime<sp/>=<sp/>spline-&gt;GetTime(<sp/>spline-&gt;GetNumValues()<sp/>-<sp/>1<sp/>)<sp/>-<sp/>spline-&gt;GetTime(<sp/>0<sp/>)<sp/>+<sp/>spline-&gt;GetCloseTime();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>splineDiv<sp/>=<sp/>spline-&gt;GetBoundaryType()<sp/>==<sp/><ref refid="classid_curve___spline" kindref="compound">idCurve_Spline&lt;idVec3&gt;::BT_CLOSED</ref><sp/>?<sp/>splineSubdivisions<sp/>:<sp/>splineSubdivisions<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>splineMat.Identity();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>splineSubdivisions;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>totalTime<sp/>*<sp/>i<sp/>/<sp/>splineDiv;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splinePos<sp/>=<sp/>spline-&gt;GetCurrentValue(<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splineD1<sp/>=<sp/>spline-&gt;GetCurrentFirstDerivative(<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetFrame(<sp/>splineMat,<sp/>splineD1.ToVec3(),<sp/>splineMat<sp/>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>i<sp/>*<sp/>sweptSplineSubdivisions;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>sweptSplineSubdivisions;<sp/>j++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref><sp/>*v<sp/>=<sp/>&amp;verts[offset+j];</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;xyz<sp/>=<sp/>splinePos.ToVec3()<sp/>+<sp/>verts[baseOffset+j].xyz<sp/>*<sp/>splineMat;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;st[0]<sp/>=<sp/>verts[baseOffset+j].st[0];</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;st[1]<sp/>=<sp/>splinePos.w;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;tangents[0]<sp/>=<sp/>verts[baseOffset+j].tangents[0]<sp/>*<sp/>splineMat;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;tangents[1]<sp/>=<sp/>splineD1.ToVec3();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;normal<sp/>=<sp/>v-&gt;tangents[1].Cross(<sp/>v-&gt;tangents[0]<sp/>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;normal.Normalize();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;color[0]<sp/>=<sp/>v-&gt;color[1]<sp/>=<sp/>v-&gt;color[2]<sp/>=<sp/>v-&gt;color[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>indexes.SetNum(<sp/>splineDiv<sp/>*<sp/>sweptSplineDiv<sp/>*<sp/>2<sp/>*<sp/>3,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>indexes<sp/>for<sp/>the<sp/>triangles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>offset<sp/>=<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>splineDiv;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i0<sp/>=<sp/>(i+0)<sp/>*<sp/>sweptSplineSubdivisions;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i1<sp/>=<sp/>(i+1)<sp/>%<sp/>splineSubdivisions<sp/>*<sp/>sweptSplineSubdivisions;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>sweptSplineDiv;<sp/>j++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j0<sp/>=<sp/>(j+0);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j1<sp/>=<sp/>(j+1)<sp/>%<sp/>sweptSplineSubdivisions;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indexes[offset++]<sp/>=<sp/>i0<sp/>+<sp/>j0;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indexes[offset++]<sp/>=<sp/>i0<sp/>+<sp/>j1;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indexes[offset++]<sp/>=<sp/>i1<sp/>+<sp/>j1;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indexes[offset++]<sp/>=<sp/>i1<sp/>+<sp/>j1;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indexes[offset++]<sp/>=<sp/>i1<sp/>+<sp/>j0;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indexes[offset++]<sp/>=<sp/>i0<sp/>+<sp/>j0;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>GenerateEdgeIndexes();</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface_SweptSpline.cpp"/>
  </compounddef>
</doxygen>
