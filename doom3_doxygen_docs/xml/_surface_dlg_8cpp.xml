<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_surface_dlg_8cpp" kind="file">
    <compoundname>SurfaceDlg.cpp</compoundname>
    <includes refid="precompiled_8h" local="yes">../../idlib/precompiled.h</includes>
    <includes refid="_q_e3_8_h" local="yes">qe3.h</includes>
    <includes refid="_radiant_8h" local="yes">Radiant.h</includes>
    <includes refid="_surface_dlg_8h" local="yes">SurfaceDlg.h</includes>
    <includes refid="_main_frm_8h" local="yes">mainfrm.h</includes>
      <sectiondef kind="define">
      <memberdef kind="define" id="_surface_dlg_8cpp_1a72d237690eeb77d2bb82c53ec7b916bf" prot="public" static="no">
        <name>IDC_ROTATEA</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="252" column="9"/>
      </memberdef>
      <memberdef kind="define" id="_surface_dlg_8cpp_1a9ef1e83f6bd1f5771d78e27487b9d922" prot="public" static="no">
        <name>IDC_HSCALEA</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="253" column="9"/>
      </memberdef>
      <memberdef kind="define" id="_surface_dlg_8cpp_1a90b07f9876a3b6638a7064dd8ebd9b20" prot="public" static="no">
        <name>IDC_VSCALEA</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="254" column="9"/>
      </memberdef>
      <memberdef kind="define" id="_surface_dlg_8cpp_1a267473ea93f71232944e3b14a2e58dc9" prot="public" static="no">
        <name>IDC_HSHIFTA</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="255" column="9"/>
      </memberdef>
      <memberdef kind="define" id="_surface_dlg_8cpp_1a81c1a6141359ae14c8a30d3715570669" prot="public" static="no">
        <name>IDC_VSHIFTA</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="256" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_surface_dlg_8cpp_1a1ac601b5c425b89b4c6560d1af0fec47" prot="public" static="no" mutable="no">
        <type><ref refid="class_c_surface_dlg" kindref="compound">CSurfaceDlg</ref></type>
        <definition>CSurfaceDlg g_dlgSurface</definition>
        <argsstring></argsstring>
        <name>g_dlgSurface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="46" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_surface_dlg_8cpp_1acbb9467dd9cef1951c39542b140ed729" prot="public" static="no" mutable="no">
        <type><ref refid="classtexdef__t" kindref="compound">texdef_t</ref></type>
        <definition>texdef_t g_patch_texdef</definition>
        <argsstring></argsstring>
        <name>g_patch_texdef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="150" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_surface_dlg_8cpp_1a124d1bf252780a1fd6c5168788a14b04" prot="public" static="no" mutable="no">
        <type>HWND</type>
        <definition>HWND g_surfwin</definition>
        <argsstring></argsstring>
        <name>g_surfwin</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="151" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_surface_dlg_8cpp_1a9b84dcb4e28b608478cb0c5c465fcc29" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool g_changed_surface</definition>
        <argsstring></argsstring>
        <name>g_changed_surface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="152" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_surface_dlg_8cpp_1ab68ed07d5778bd6a1d1adaafdbabd28e" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool g_bNewFace</definition>
        <argsstring></argsstring>
        <name>g_bNewFace</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="200" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_surface_dlg_8cpp_1a55235cbeb20338b7ff0cda1539e4467c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool g_bNewApplyHandling</definition>
        <argsstring></argsstring>
        <name>g_bNewApplyHandling</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="201" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_surface_dlg_8cpp_1a963d4ff3f4408b26a9006c68f33e8787" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool g_bGatewayhack</definition>
        <argsstring></argsstring>
        <name>g_bGatewayhack</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="202" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" bodystart="202" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_surface_dlg_8cpp_1a1a812f21225b389576363c0bfd6814e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BEGIN_MESSAGE_MAP</definition>
        <argsstring>(CSurfaceDlg, CDialog) ON_WM_HSCROLL() ON_WM_KEYDOWN() ON_WM_VSCROLL() ON_WM_CLOSE() ON_WM_DESTROY() ON_BN_CLICKED(IDCANCEL</argsstring>
        <name>BEGIN_MESSAGE_MAP</name>
        <param>
          <type><ref refid="class_c_surface_dlg" kindref="compound">CSurfaceDlg</ref></type>
        </param>
        <param>
          <type>CDialog</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_surface_dlg_8cpp_1a535f42cfe2d4a196c2c36181773b0ae3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OnBtnCancel</type>
        <definition>OnBtnCancel ON_BN_CLICKED</definition>
        <argsstring>(10347, OnBtnColor) ON_WM_CTLCOLOR() ON_WM_CREATE() ON_NOTIFY(UDN_DELTAPOS</argsstring>
        <name>ON_BN_CLICKED</name>
        <param>
          <type>10347</type>
        </param>
        <param>
          <type>OnBtnColor</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_surface_dlg_8cpp_1aad15888ee85f3cb172bf02c50157352d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OnBtnCancel OnDeltaPosSpin</type>
        <definition>OnBtnCancel OnDeltaPosSpin ON_BN_CLICKED</definition>
        <argsstring>(10391, OnBtnPatchdetails) ON_BN_CLICKED(10393</argsstring>
        <name>ON_BN_CLICKED</name>
        <param>
          <type>10391</type>
        </param>
        <param>
          <type>OnBtnPatchdetails</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_surface_dlg_8cpp_1a6641a4bcf2c38aa9269f86bf8ebceaf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OnBtnCancel OnDeltaPosSpin OnBtnPatchnatural</type>
        <definition>OnBtnCancel OnDeltaPosSpin OnBtnPatchnatural ON_BN_CLICKED</definition>
        <argsstring>(10392, OnBtnPatchreset) ON_BN_CLICKED(10404</argsstring>
        <name>ON_BN_CLICKED</name>
        <param>
          <type>10392</type>
        </param>
        <param>
          <type>OnBtnPatchreset</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_surface_dlg_8cpp_1afcdc08fc2b350131b68c0bc46e91d090" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OnBtnCancel OnDeltaPosSpin OnBtnPatchnatural OnBtnAxial</type>
        <definition>OnBtnCancel OnDeltaPosSpin OnBtnPatchnatural OnBtnAxial ON_BN_CLICKED</definition>
        <argsstring>(10409, OnBtnBrushfit) ON_BN_CLICKED(10406</argsstring>
        <name>ON_BN_CLICKED</name>
        <param>
          <type>10409</type>
        </param>
        <param>
          <type>OnBtnBrushfit</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_surface_dlg_8cpp_1affbcb4e8058254a00fff64bca207cb37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OnBtnCancel OnDeltaPosSpin OnBtnPatchnatural OnBtnAxial OnBtnFacefit</type>
        <definition>OnBtnCancel OnDeltaPosSpin OnBtnPatchnatural OnBtnAxial OnBtnFacefit ON_BN_CLICKED</definition>
        <argsstring>(10490, OnCheckSubdivide) ON_EN_CHANGE(10494</argsstring>
        <name>ON_BN_CLICKED</name>
        <param>
          <type>10490</type>
        </param>
        <param>
          <type>OnCheckSubdivide</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_surface_dlg_8cpp_1a1978825bbe2537c59a30ebccf26e03e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OnBtnCancel OnDeltaPosSpin OnBtnPatchnatural OnBtnAxial OnBtnFacefit OnChangeEditHorz</type>
        <definition>OnBtnCancel OnDeltaPosSpin OnBtnPatchnatural OnBtnAxial OnBtnFacefit OnChangeEditHorz ON_EN_CHANGE</definition>
        <argsstring>(10495, OnChangeEditVert) ON_EN_SETFOCUS(10324</argsstring>
        <name>ON_EN_CHANGE</name>
        <param>
          <type>10495</type>
        </param>
        <param>
          <type>OnChangeEditVert</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_surface_dlg_8cpp_1a73649963bb2cecd370757a30d49795bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OnBtnCancel OnDeltaPosSpin OnBtnPatchnatural OnBtnAxial OnBtnFacefit OnChangeEditHorz OnSetfocusHscale</type>
        <definition>OnBtnCancel OnDeltaPosSpin OnBtnPatchnatural OnBtnAxial OnBtnFacefit OnChangeEditHorz OnSetfocusHscale ON_EN_KILLFOCUS</definition>
        <argsstring>(10324, OnKillfocusHscale) ON_EN_KILLFOCUS(10325</argsstring>
        <name>ON_EN_KILLFOCUS</name>
        <param>
          <type>10324</type>
        </param>
        <param>
          <type>OnKillfocusHscale</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_surface_dlg_8cpp_1adc5ea9796e2a4d9f613dd7616b118521" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OnBtnCancel OnDeltaPosSpin OnBtnPatchnatural OnBtnAxial OnBtnFacefit OnChangeEditHorz OnSetfocusHscale OnKillfocusVscale</type>
        <definition>OnBtnCancel OnDeltaPosSpin OnBtnPatchnatural OnBtnAxial OnBtnFacefit OnChangeEditHorz OnSetfocusHscale OnKillfocusVscale ON_EN_SETFOCUS</definition>
        <argsstring>(10325, OnSetfocusVscale) ON_EN_KILLFOCUS(10419</argsstring>
        <name>ON_EN_SETFOCUS</name>
        <param>
          <type>10325</type>
        </param>
        <param>
          <type>OnSetfocusVscale</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_surface_dlg_8cpp_1a43b8f7d1611d2d66214f3a149ccc91ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OnBtnCancel OnDeltaPosSpin OnBtnPatchnatural OnBtnAxial OnBtnFacefit OnChangeEditHorz OnSetfocusHscale OnKillfocusVscale OnKillfocusEditWidth</type>
        <definition>OnBtnCancel OnDeltaPosSpin OnBtnPatchnatural OnBtnAxial OnBtnFacefit OnChangeEditHorz OnSetfocusHscale OnKillfocusVscale OnKillfocusEditWidth ON_EN_SETFOCUS</definition>
        <argsstring>(10419, OnSetfocusEditWidth) ON_EN_KILLFOCUS(10421</argsstring>
        <name>ON_EN_SETFOCUS</name>
        <param>
          <type>10419</type>
        </param>
        <param>
          <type>OnSetfocusEditWidth</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_surface_dlg_8cpp_1ada34d4e3ec286298114b68ca178da593" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OnBtnCancel OnDeltaPosSpin OnBtnPatchnatural OnBtnAxial OnBtnFacefit OnChangeEditHorz OnSetfocusHscale OnKillfocusVscale OnKillfocusEditWidth OnKillfocusEditHeight</type>
        <definition>OnBtnCancel OnDeltaPosSpin OnBtnPatchnatural OnBtnAxial OnBtnFacefit OnChangeEditHorz OnSetfocusHscale OnKillfocusVscale OnKillfocusEditWidth OnKillfocusEditHeight ON_EN_SETFOCUS</definition>
        <argsstring>(10421, OnSetfocusEditHeight) ON_BN_CLICKED(10398</argsstring>
        <name>ON_EN_SETFOCUS</name>
        <param>
          <type>10421</type>
        </param>
        <param>
          <type>OnSetfocusEditHeight</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_surface_dlg_8cpp_1a8a67f2b24596222ceb9191e9ca0ca89a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OnBtnCancel OnDeltaPosSpin OnBtnPatchnatural OnBtnAxial OnBtnFacefit OnChangeEditHorz OnSetfocusHscale OnKillfocusVscale OnKillfocusEditWidth OnKillfocusEditHeight OnBtnFlipx</type>
        <definition>OnBtnCancel OnDeltaPosSpin OnBtnPatchnatural OnBtnAxial OnBtnFacefit OnChangeEditHorz OnSetfocusHscale OnKillfocusVscale OnKillfocusEditWidth OnKillfocusEditHeight OnBtnFlipx ON_BN_CLICKED</definition>
        <argsstring>(10401, OnBtnFlipy) ON_NOTIFY(UDN_DELTAPOS</argsstring>
        <name>ON_BN_CLICKED</name>
        <param>
          <type>10401</type>
        </param>
        <param>
          <type>OnBtnFlipy</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_surface_dlg_8cpp_1a34134dc6a9b10b4db7ced3023714ffc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OnBtnCancel OnDeltaPosSpin OnBtnPatchnatural OnBtnAxial OnBtnFacefit OnChangeEditHorz OnSetfocusHscale OnKillfocusVscale OnKillfocusEditWidth OnKillfocusEditHeight OnBtnFlipx OnDeltaPosSpin</type>
        <definition>OnBtnCancel OnDeltaPosSpin OnBtnPatchnatural OnBtnAxial OnBtnFacefit OnChangeEditHorz OnSetfocusHscale OnKillfocusVscale OnKillfocusEditWidth OnKillfocusEditHeight OnBtnFlipx OnDeltaPosSpin ON_NOTIFY</definition>
        <argsstring>(UDN_DELTAPOS, 10361, OnDeltaPosSpin) ON_EN_KILLFOCUS(10328</argsstring>
        <name>ON_NOTIFY</name>
        <param>
          <type>UDN_DELTAPOS</type>
        </param>
        <param>
          <type>10361</type>
        </param>
        <param>
          <type>OnDeltaPosSpin</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_surface_dlg_8cpp_1ab677eb90cd5c5df8dfc4c5c85c5b7e56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OnBtnCancel OnDeltaPosSpin OnBtnPatchnatural OnBtnAxial OnBtnFacefit OnChangeEditHorz OnSetfocusHscale OnKillfocusVscale OnKillfocusEditWidth OnKillfocusEditHeight OnBtnFlipx OnDeltaPosSpin OnKillfocusRotate</type>
        <definition>OnBtnCancel OnDeltaPosSpin OnBtnPatchnatural OnBtnAxial OnBtnFacefit OnChangeEditHorz OnSetfocusHscale OnKillfocusVscale OnKillfocusEditWidth OnKillfocusEditHeight OnBtnFlipx OnDeltaPosSpin OnKillfocusRotate ON_EN_SETFOCUS</definition>
        <argsstring>(10328, OnSetfocusRotate) END_MESSAGE_MAP() texdef_t g_old_texdef</argsstring>
        <name>ON_EN_SETFOCUS</name>
        <param>
          <type>10328</type>
        </param>
        <param>
          <type>OnSetfocusRotate</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_surface_dlg_8cpp_1af85e7388ad765c1c87d82d2640b7bcad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Face_GetScale_BrushPrimit</definition>
        <argsstring>(face_t *face, float *s, float *t, float *rot)</argsstring>
        <name>Face_GetScale_BrushPrimit</name>
        <param>
          <type><ref refid="structface__s" kindref="compound">face_t</ref> *</type>
          <declname>face</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>t</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>rot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="163" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorBrushPrimit.cpp" bodystart="974" bodyend="1029"/>
      </memberdef>
      <memberdef kind="function" id="_surface_dlg_8cpp_1aaeba2bb3fc98c1ec8fc88dee9a9bee07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UpdateSurfaceDialog</definition>
        <argsstring>()</argsstring>
        <name>UpdateSurfaceDialog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="273" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" bodystart="273" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="_surface_dlg_8cpp_1ac9f507b7359a23f4994b9e593fdf088b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ByeByeSurfaceDialog</definition>
        <argsstring>()</argsstring>
        <name>ByeByeSurfaceDialog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="280" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" bodystart="314" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="_surface_dlg_8cpp_1adde475cc8c437a82bc99da440bced595" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DoSurface</definition>
        <argsstring>(void)</argsstring>
        <name>DoSurface</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" line="282" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp" bodystart="282" bodyend="312"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../idlib/precompiled.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>hdrstop</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qe3.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Radiant.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SurfaceDlg.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mainfrm.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>new<sp/>DEBUG_NEW</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>THIS_FILE</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>THIS_FILE[]<sp/>=<sp/>__FILE__;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="43"><highlight class="comment">/////////////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="44"><highlight class="comment"></highlight><highlight class="comment">//<sp/>CSurfaceDlg<sp/>dialog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><ref refid="class_c_surface_dlg" kindref="compound">CSurfaceDlg</ref><sp/>g_dlgSurface;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">CSurfaceDlg::CSurfaceDlg(CWnd*<sp/>pParent<sp/></highlight><highlight class="comment">/*=NULL*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>CDialog(<ref refid="class_c_surface_dlg" kindref="compound">CSurfaceDlg</ref>::IDD,<sp/>pParent)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{{AFX_DATA_INIT(CSurfaceDlg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nHorz<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nVert<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>m_horzScale<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>m_horzShift<sp/>=<sp/>0.5f;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>m_rotate<sp/>=<sp/>15.0f;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vertScale<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vertShift<sp/>=<sp/>0.5f;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>m_strMaterial<sp/>=<sp/>_T(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>m_subdivide<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fHeight<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fWidth<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>m_absolute<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}}AFX_DATA_INIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::DoDataExchange(CDataExchange*<sp/>pDX)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>CDialog::DoDataExchange(pDX);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{{AFX_DATA_MAP(CSurfaceDlg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>DDX_Control(pDX,<sp/>IDC_ROTATE,<sp/>m_wndRotateEdit);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>DDX_Control(pDX,<sp/>IDC_EDIT_VERT,<sp/>m_wndVert);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>DDX_Control(pDX,<sp/>IDC_EDIT_HORZ,<sp/>m_wndHorz);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>DDX_Control(pDX,<sp/>IDC_SLIDER_VERT,<sp/>m_wndVerticalSubdivisions);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>DDX_Control(pDX,<sp/>IDC_SLIDER_HORZ,<sp/>m_wndHorzSubdivisions);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>DDX_Control(pDX,<sp/>IDC_SPIN_WIDTH,<sp/>m_wndWidth);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>DDX_Control(pDX,<sp/>IDC_SPIN_HEIGHT,<sp/>m_wndHeight);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>DDX_Control(pDX,<sp/>IDC_SPIN_VSHIFT,<sp/>m_wndVShift);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>DDX_Control(pDX,<sp/>IDC_SPIN_ROTATE,<sp/>m_wndRotate);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>DDX_Control(pDX,<sp/>IDC_SPIN_HSHIFT,<sp/>m_wndHShift);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>DDX_Text(pDX,<sp/>IDC_EDIT_HORZ,<sp/>m_nHorz);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>DDV_MinMaxInt(pDX,<sp/>m_nHorz,<sp/>1,<sp/>64);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>DDX_Text(pDX,<sp/>IDC_EDIT_VERT,<sp/>m_nVert);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>DDV_MinMaxInt(pDX,<sp/>m_nVert,<sp/>1,<sp/>64);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>DDX_Text(pDX,<sp/>IDC_HSCALE,<sp/>m_horzScale);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>DDX_Text(pDX,<sp/>IDC_HSHIFT,<sp/>m_horzShift);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>DDX_Text(pDX,<sp/>IDC_ROTATE,<sp/>m_rotate);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>DDX_Text(pDX,<sp/>IDC_VSCALE,<sp/>m_vertScale);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>DDX_Text(pDX,<sp/>IDC_VSHIFT,<sp/>m_vertShift);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>DDX_Text(pDX,<sp/>IDC_TEXTURE,<sp/>m_strMaterial);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>DDX_Check(pDX,<sp/>IDC_CHECK_SUBDIVIDE,<sp/>m_subdivide);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>DDX_Text(pDX,<sp/>IDC_EDIT_HEIGHT,<sp/>m_fHeight);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>DDX_Text(pDX,<sp/>IDC_EDIT_WIDTH,<sp/>m_fWidth);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>DDX_Check(pDX,<sp/>IDC_CHECK_ABSOLUTE,<sp/>m_absolute);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}}AFX_DATA_MAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">BEGIN_MESSAGE_MAP(<ref refid="class_c_surface_dlg" kindref="compound">CSurfaceDlg</ref>,<sp/>CDialog)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{{AFX_MSG_MAP(CSurfaceDlg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_WM_HSCROLL()</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_WM_KEYDOWN()</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_WM_VSCROLL()</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_WM_CLOSE()</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_WM_DESTROY()</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_BN_CLICKED(IDCANCEL,<sp/>OnBtnCancel)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_BN_CLICKED(IDC_BTN_COLOR,<sp/>OnBtnColor)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_WM_CTLCOLOR()</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_WM_CREATE()</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_NOTIFY(UDN_DELTAPOS,<sp/>IDC_SPIN_HSHIFT,<sp/>OnDeltaPosSpin)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_BN_CLICKED(IDC_BTN_PATCHDETAILS,<sp/>OnBtnPatchdetails)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_BN_CLICKED(IDC_BTN_PATCHNATURAL,<sp/>OnBtnPatchnatural)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_BN_CLICKED(IDC_BTN_PATCHRESET,<sp/>OnBtnPatchreset)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_BN_CLICKED(IDC_BTN_AXIAL,<sp/>OnBtnAxial)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_BN_CLICKED(IDC_BTN_BRUSHFIT,<sp/>OnBtnBrushfit)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_BN_CLICKED(IDC_BTN_FACEFIT,<sp/>OnBtnFacefit)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_BN_CLICKED(IDC_CHECK_SUBDIVIDE,<sp/>OnCheckSubdivide)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_EN_CHANGE(IDC_EDIT_HORZ,<sp/>OnChangeEditHorz)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_EN_CHANGE(IDC_EDIT_VERT,<sp/>OnChangeEditVert)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_EN_SETFOCUS(IDC_HSCALE,<sp/>OnSetfocusHscale)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_EN_KILLFOCUS(IDC_HSCALE,<sp/>OnKillfocusHscale)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_EN_KILLFOCUS(IDC_VSCALE,<sp/>OnKillfocusVscale)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_EN_SETFOCUS(IDC_VSCALE,<sp/>OnSetfocusVscale)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_EN_KILLFOCUS(IDC_EDIT_WIDTH,<sp/>OnKillfocusEditWidth)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_EN_SETFOCUS(IDC_EDIT_WIDTH,<sp/>OnSetfocusEditWidth)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_EN_KILLFOCUS(IDC_EDIT_HEIGHT,<sp/>OnKillfocusEditHeight)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_EN_SETFOCUS(IDC_EDIT_HEIGHT,<sp/>OnSetfocusEditHeight)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_BN_CLICKED(IDC_BTN_FLIPX,<sp/>OnBtnFlipx)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_BN_CLICKED(IDC_BTN_FLIPY,<sp/>OnBtnFlipy)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_NOTIFY(UDN_DELTAPOS,<sp/>IDC_SPIN_ROTATE,<sp/>OnDeltaPosSpin)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_NOTIFY(UDN_DELTAPOS,<sp/>IDC_SPIN_VSHIFT,<sp/>OnDeltaPosSpin)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_EN_KILLFOCUS(IDC_ROTATE,<sp/>OnKillfocusRotate)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_EN_SETFOCUS(IDC_ROTATE,<sp/>OnSetfocusRotate)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}}AFX_MSG_MAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">END_MESSAGE_MAP()</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="137"><highlight class="comment">/////////////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="138"><highlight class="comment"></highlight><highlight class="comment">//<sp/>CSurfaceDlg<sp/>message<sp/>handlers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="142"><highlight class="comment">===================================================</highlight></codeline>
<codeline lineno="143"><highlight class="comment"></highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/>SURFACE<sp/>INSPECTOR</highlight></codeline>
<codeline lineno="145"><highlight class="comment"></highlight></codeline>
<codeline lineno="146"><highlight class="comment">===================================================</highlight></codeline>
<codeline lineno="147"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><ref refid="classtexdef__t" kindref="compound">texdef_t</ref><sp/><sp/><sp/><sp/>g_old_texdef;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><ref refid="classtexdef__t" kindref="compound">texdef_t</ref><sp/><sp/><sp/><sp/>g_patch_texdef;</highlight></codeline>
<codeline lineno="151"><highlight class="normal">HWND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_surfwin<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>g_changed_surface;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="155"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="156"><highlight class="comment">SetTexMods</highlight></codeline>
<codeline lineno="157"><highlight class="comment"></highlight></codeline>
<codeline lineno="158"><highlight class="comment">Set<sp/>the<sp/>fields<sp/>to<sp/>the<sp/>current<sp/>texdef</highlight></codeline>
<codeline lineno="159"><highlight class="comment">if<sp/>one<sp/>face<sp/>selected<sp/>-&gt;<sp/>will<sp/>read<sp/>this<sp/>face<sp/>texdef,<sp/>else<sp/>current<sp/>texdef</highlight></codeline>
<codeline lineno="160"><highlight class="comment">if<sp/>only<sp/>patches<sp/>selected,<sp/>will<sp/>read<sp/>the<sp/>patch<sp/>texdef</highlight></codeline>
<codeline lineno="161"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="162"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">extern<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Face_GetScale_BrushPrimit(<ref refid="structface__s" kindref="compound">face_t</ref><sp/>*face,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*s,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*t,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*rot);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_surface_dlg" kindref="compound">CSurfaceDlg</ref>::SetTexMods()<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateData(TRUE);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>m_strMaterial<sp/>=<sp/>g_qeglobals.d_texturewin.texdef.name;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpatch_mesh__t" kindref="compound">patchMesh_t</ref><sp/>*p<sp/>=<sp/>SinglePatchSelected();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_subdivide<sp/>=<sp/>p-&gt;explicitSubdivisions;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_strMaterial<sp/>=<sp/>p-&gt;d_texture-&gt;GetName();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_subdivide<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>faceCount<sp/>=<sp/>g_ptrSelectedFaces.GetSize();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structface__s" kindref="compound">face_t</ref><sp/>*selFace<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(faceCount)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selFace<sp/>=<sp/>reinterpret_cast<sp/>&lt;<sp/><ref refid="structface__s" kindref="compound">face_t</ref><sp/>*<sp/>&gt;<sp/>(g_ptrSelectedFaces.GetAt(0));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selected_brushes.next<sp/>!=<sp/>&amp;selected_brushes)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbrush__s" kindref="compound">brush_t</ref><sp/>*b<sp/>=<sp/>selected_brushes.next;<sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!b-&gt;pPatch)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selFace<sp/>=<sp/>b-&gt;brush_faces;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selFace)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rot;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Face_GetScale_BrushPrimit(selFace,<sp/>&amp;m_horzScale,<sp/>&amp;m_vertScale,<sp/>&amp;rot);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_horzScale<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_vertScale<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateData(FALSE);</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>g_bNewFace<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>g_bNewApplyHandling<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>g_bGatewayhack<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="206"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="207"><highlight class="comment">UpdateSpinners</highlight></codeline>
<codeline lineno="208"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="209"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::UpdateSpinners(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>up,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nID)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateData(TRUE);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>hdiv<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>vdiv<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(nID)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IDC_SPIN_ROTATE<sp/>:<sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Select_RotateTexture((up)<sp/>?<sp/>m_rotate<sp/>:<sp/>-m_rotate);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IDC_SPIN_HSCALE<sp/>:<sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_horzScale<sp/>+=<sp/>(up)<sp/>?<sp/>0.1f<sp/>:<sp/>-0.1f;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdiv<sp/>=<sp/>(m_horzScale<sp/>==<sp/>0.0f)<sp/>?<sp/>1.0f<sp/>:<sp/>m_horzScale;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Select_ScaleTexture(<sp/>1.0f<sp/>/<sp/>hdiv,<sp/>0.0f,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>(<sp/>m_absolute<sp/>!=<sp/>FALSE<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateData(FALSE);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IDC_SPIN_VSCALE<sp/>:<sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_vertScale<sp/>+=<sp/>(up)<sp/>?<sp/>0.1f<sp/>:<sp/>-0.1f;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vdiv<sp/>=<sp/>(m_vertScale<sp/>==<sp/>0.0f)<sp/>?<sp/>1.0f<sp/>:<sp/>m_vertScale;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Select_ScaleTexture(<sp/>0.0f,<sp/>1.0f<sp/>/<sp/>vdiv,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>(<sp/>m_absolute<sp/>!=<sp/>FALSE<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateData(FALSE);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IDC_SPIN_HSHIFT<sp/>:</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Select_ShiftTexture((up)<sp/>?<sp/>m_horzShift<sp/>:<sp/>-m_horzShift,<sp/>0);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IDC_SPIN_VSHIFT<sp/>:</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Select_ShiftTexture(0,<sp/>(up)<sp/>?<sp/>m_vertShift<sp/>:<sp/>-m_vertShift);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>g_changed_surface<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::UpdateSpinners(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nScrollCode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPos,<sp/>CScrollBar*<sp/>pBar)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateData(TRUE);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((nScrollCode<sp/>!=<sp/>SB_LINEUP)<sp/>&amp;&amp;<sp/>(nScrollCode<sp/>!=<sp/>SB_LINEDOWN))<sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>up<sp/>=<sp/>(nScrollCode<sp/>==<sp/>SB_LINEUP);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>bad<sp/>resource<sp/>define</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IDC_ROTATEA<sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="253"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>IDC_HSCALEA<sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="254"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>IDC_VSCALEA<sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="255"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>IDC_HSHIFTA<sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="256"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>IDC_VSHIFTA<sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="257"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pBar-&gt;GetSafeHwnd()<sp/>==<sp/>::GetDlgItem(GetSafeHwnd(),<sp/>IDC_ROTATEA))<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Select_RotateTexture((up)<sp/>?<sp/>m_rotate<sp/>:<sp/>-m_rotate);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pBar-&gt;GetSafeHwnd()<sp/>==<sp/>::GetDlgItem(GetSafeHwnd(),<sp/>IDC_HSCALEA))<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Select_ScaleTexture((up)<sp/>?<sp/>-m_horzScale<sp/>:<sp/>m_horzScale,<sp/>0,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>(<sp/>m_absolute<sp/>!=<sp/>FALSE<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pBar-&gt;GetSafeHwnd()<sp/>==<sp/>::GetDlgItem(GetSafeHwnd(),<sp/>IDC_VSCALEA))<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Select_ScaleTexture(0,<sp/>(up)<sp/>?<sp/>-m_vertScale<sp/>:<sp/>m_vertScale,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>(<sp/>m_absolute<sp/>!=<sp/>FALSE<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pBar-&gt;GetSafeHwnd()<sp/>==<sp/>::GetDlgItem(GetSafeHwnd(),<sp/>IDC_HSHIFTA))<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Select_ShiftTexture((up)<sp/>?<sp/>-m_horzShift<sp/>:<sp/>m_horzShift,<sp/>0);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pBar-&gt;GetSafeHwnd()<sp/>==<sp/>::GetDlgItem(GetSafeHwnd(),<sp/>IDC_VSHIFTA))<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Select_ShiftTexture((up)<sp/>?<sp/>-m_vertShift<sp/>:<sp/>m_vertShift,<sp/>0);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>g_changed_surface<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UpdateSurfaceDialog()<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g_surfwin)<sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_dlgSurface.SetTexMods();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>g_pParentWnd-&gt;UpdateTextureBar();</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ByeByeSurfaceDialog();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DoSurface<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>g_bNewFace<sp/>=<sp/>(<sp/>g_PrefsDlg.m_bFace<sp/>!=<sp/>FALSE<sp/>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>g_bNewApplyHandling<sp/>=<sp/>(<sp/>g_PrefsDlg.m_bNewApplyHandling<sp/>!=<sp/>FALSE<sp/>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>g_bGatewayhack<sp/>=<sp/>(<sp/>g_PrefsDlg.m_bGatewayHack<sp/>!=<sp/>FALSE<sp/>);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>current<sp/>state<sp/>for<sp/>cancel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>g_old_texdef<sp/>=<sp/>g_qeglobals.d_texturewin.texdef;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>g_changed_surface<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g_surfwin<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>g_dlgSurface.GetSafeHwnd()<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_patch_texdef.scale[0]<sp/>=<sp/>0.05f;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_patch_texdef.scale[1]<sp/>=<sp/>0.05f;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_patch_texdef.shift[0]<sp/>=<sp/>0.05f;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_patch_texdef.shift[1]<sp/>=<sp/>0.05f;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>rotation<sp/>increment<sp/>from<sp/>preferences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_patch_texdef.rotate<sp/>=<sp/>g_PrefsDlg.m_nRotation;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_dlgSurface.Create(IDD_SURFACE);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRect<sp/>rct;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LONG<sp/>lSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(rct);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LoadRegistryInfo(</highlight><highlight class="stringliteral">&quot;radiant_SurfaceWindow&quot;</highlight><highlight class="normal">,<sp/>&amp;rct,<sp/>&amp;lSize))<sp/><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_dlgSurface.SetWindowPos(<sp/>NULL,<sp/>rct.left,<sp/>rct.top,<sp/>0,<sp/>0,<sp/>SWP_NOSIZE<sp/>|<sp/>SWP_SHOWWINDOW<sp/>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_dlgSurface.ShowWindow(SW_SHOW);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sys_UpdateWindows(W_ALL);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_surfwin<sp/>=<sp/>g_dlgSurface.GetSafeHwnd();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_dlgSurface.SetTexMods<sp/>();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_dlgSurface.ShowWindow(SW_SHOW);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ByeByeSurfaceDialog()<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g_surfwin)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g_bGatewayhack)<sp/><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostMessage(g_surfwin,<sp/>WM_COMMAND,<sp/>IDC_APPLY,<sp/>0);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostMessage(g_surfwin,<sp/>WM_COMMAND,<sp/>IDCANCEL,<sp/>0);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal">BOOL<sp/>CSurfaceDlg::OnInitDialog()<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>CDialog::OnInitDialog();</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>g_surfwin<sp/>=<sp/>GetSafeHwnd();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>SetTexMods<sp/>();</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//m_wndHScale.SetRange(0,<sp/>100);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//m_wndVScale.SetRange(0,<sp/>100);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>m_wndHShift.SetRange(0,<sp/>100);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>m_wndVShift.SetRange(0,<sp/>100);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>m_wndRotate.SetRange(0,<sp/>100);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>m_wndWidth.SetRange(1,<sp/>32);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>m_wndHeight.SetRange(1,<sp/>32);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>m_wndVerticalSubdivisions.SetRange(1,<sp/>32);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>m_wndVerticalSubdivisions.SetBuddy(&amp;m_wndVert,<sp/>FALSE);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>m_wndHorzSubdivisions.SetRange(1,<sp/>32);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>m_wndHorzSubdivisions.SetBuddy(&amp;m_wndHorz,<sp/>FALSE);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>m_wndVerticalSubdivisions.SetPos(m_nVert);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>m_wndHorzSubdivisions.SetPos(m_nHorz);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;<sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>TRUE<sp/>unless<sp/>you<sp/>set<sp/>the<sp/>focus<sp/>to<sp/>a<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>EXCEPTION:<sp/>OCX<sp/>Property<sp/>Pages<sp/>should<sp/>return<sp/>FALSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnHScroll(UINT<sp/>nSBCode,<sp/>UINT<sp/>nPos,<sp/>CScrollBar*<sp/>pScrollBar)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateData(TRUE);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pScrollBar-&gt;IsKindOf(RUNTIME_CLASS(CSliderCtrl)))<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CSliderCtrl<sp/>*ctrl<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">CSliderCtrl*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pScrollBar);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(ctrl);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl<sp/>==<sp/>&amp;m_wndVerticalSubdivisions)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_nVert<sp/>=<sp/>ctrl-&gt;GetPos();</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_nHorz<sp/>=<sp/>ctrl-&gt;GetPos();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateData(FALSE);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_subdivide)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Patch_SubdivideSelected(<sp/>(<sp/>m_subdivide<sp/>!=<sp/>FALSE<sp/>),<sp/>m_nHorz,<sp/>m_nVert<sp/>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_UpdateWindows(W_CAMERA<sp/>|<sp/>W_XY);</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnKeyDown(UINT<sp/>nChar,<sp/>UINT<sp/>nRepCnt,<sp/>UINT<sp/>nFlags)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>CDialog::OnKeyDown(nChar,<sp/>nRepCnt,<sp/>nFlags);</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnVScroll(UINT<sp/>nSBCode,<sp/>UINT<sp/>nPos,<sp/>CScrollBar*<sp/>pScrollBar)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//UpdateSpinners(nSBCode,<sp/>nPos,<sp/>pScrollBar);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Sys_UpdateWindows(W_CAMERA);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnOK()<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GetTexMods();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateData(TRUE);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_strMaterial.Find(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">)<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_material" kindref="compound">idMaterial</ref><sp/>*mat<sp/>=<sp/>declManager-&gt;FindMaterial(m_strMaterial);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Select_UpdateTextureName(m_strMaterial);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>g_surfwin<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>CDialog::OnOK();</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_UpdateWindows(W_ALL);</highlight></codeline>
<codeline lineno="392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnClose()<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>g_surfwin<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>CDialog::OnClose();</highlight></codeline>
<codeline lineno="397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnCancel()<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g_bGatewayhack)<sp/><sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OnOK();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OnBtnCancel();</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnDestroy()<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetSafeHwnd())<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRect<sp/>rct;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetWindowRect(rct);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SaveRegistryInfo(</highlight><highlight class="stringliteral">&quot;radiant_SurfaceWindow&quot;</highlight><highlight class="normal">,<sp/>&amp;rct,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(rct));</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>CDialog::OnDestroy();</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>g_surfwin<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_UpdateWindows(W_ALL);</highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnBtnCancel()<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>g_qeglobals.d_texturewin.texdef<sp/>=<sp/>g_old_texdef;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g_changed_surface)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//++timo<sp/>if<sp/>!g_qeglobals.m_bBrushPrimitMode<sp/>send<sp/>a<sp/>NULL<sp/>brushprimit_texdef</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!g_qeglobals.m_bBrushPrimitMode)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(</highlight><highlight class="stringliteral">&quot;Warning<sp/>:<sp/>non<sp/>brush<sp/>primitive<sp/>mode<sp/>call<sp/>to<sp/>CSurfaceDlg::GetTexMods<sp/>broken\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>Select_SetTexture<sp/>not<sp/>called<sp/>)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Select_SetTexture(&amp;g_qeglobals.d_texturewin.texdef);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>g_surfwin<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>DestroyWindow();</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnBtnColor()<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal">HBRUSH<sp/>CSurfaceDlg::OnCtlColor(CDC*<sp/>pDC,<sp/>CWnd*<sp/>pWnd,<sp/>UINT<sp/>nCtlColor)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>HBRUSH<sp/>hbr<sp/>=<sp/>CDialog::OnCtlColor(pDC,<sp/>pWnd,<sp/>nCtlColor);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hbr;</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnCreate(LPCREATESTRUCT<sp/>lpCreateStruct)<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CDialog::OnCreate(lpCreateStruct)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal">BOOL<sp/>CSurfaceDlg::PreCreateWindow(CREATESTRUCT&amp;<sp/>cs)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Add<sp/>your<sp/>specialized<sp/>code<sp/>here<sp/>and/or<sp/>call<sp/>the<sp/>base<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CDialog::PreCreateWindow(cs);</highlight></codeline>
<codeline lineno="451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnDeltaPosSpin(NMHDR*<sp/>pNMHDR,<sp/>LRESULT*<sp/>pResult)<sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>NM_UPDOWN*<sp/>pNMUpDown<sp/>=<sp/>(NM_UPDOWN*)pNMHDR;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateSpinners((pNMUpDown-&gt;iDelta<sp/>&gt;<sp/>0),<sp/>pNMUpDown-&gt;hdr.idFrom);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>*pResult<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnBtnPatchdetails()<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>Patch_NaturalizeSelected(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>g_pParentWnd-&gt;GetCamera()-&gt;MarkWorldDirty<sp/>();</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_UpdateWindows(W_ALL);</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnBtnPatchnatural()<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>Select_SetTexture<sp/>(&amp;g_qeglobals.d_texturewin.texdef,<sp/>&amp;g_qeglobals.d_texturewin.brushprimit_texdef,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>Patch_NaturalizeSelected();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>g_pParentWnd-&gt;GetCamera()-&gt;MarkWorldDirty<sp/>();</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>g_changed_surface<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_UpdateWindows(W_ALL);</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnBtnPatchreset()<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//CTextureLayout<sp/>dlg;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(dlg.DoModal()<sp/>==<sp/>IDOK)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Patch_ResetTexturing(dlg.m_fX,<sp/>dlg.m_fY);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Sys_UpdateWindows(W_ALL);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnBtnAxial()<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnBtnBrushfit()<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Add<sp/>your<sp/>control<sp/>notification<sp/>handler<sp/>code<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnBtnFacefit()<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateData(TRUE);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/><sp/><sp/><sp/>brush_t<sp/>*b;</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(b=selected_brushes.next<sp/>;<sp/>b<sp/>!=<sp/>&amp;selected_brushes<sp/>;<sp/>b=b-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!b-&gt;patchBrush)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(face_t*<sp/>pFace<sp/>=<sp/>b-&gt;brush_faces;<sp/>pFace;<sp/>pFace<sp/>=<sp/>pFace-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_ptrSelectedFaces.Add(pFace);</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_ptrSelectedFaceBrushes.Add(b);</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>Select_FitTexture(m_fHeight,<sp/>m_fWidth);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>g_pParentWnd-&gt;GetCamera()-&gt;MarkWorldDirty<sp/>();</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//SetTexMods();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>g_changed_surface<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_UpdateWindows(W_ALL);</highlight></codeline>
<codeline lineno="508"><highlight class="normal">}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnCheckSubdivide()<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateData(<sp/>TRUE<sp/>);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>turn<sp/>any<sp/>patches<sp/>in<sp/>explicit<sp/>subdivides</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>Patch_SubdivideSelected(<sp/>(<sp/>m_subdivide<sp/>!=<sp/>FALSE<sp/>),<sp/>m_nHorz,<sp/>m_nVert<sp/>);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>g_pParentWnd-&gt;GetCamera()-&gt;MarkWorldDirty<sp/>();</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_UpdateWindows(<sp/>W_CAMERA<sp/>|<sp/>W_XY<sp/>);</highlight></codeline>
<codeline lineno="517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnChangeEditHorz()<sp/></highlight></codeline>
<codeline lineno="520"><highlight class="normal">{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>If<sp/>this<sp/>is<sp/>a<sp/>RICHEDIT<sp/>control,<sp/>the<sp/>control<sp/>will<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>this<sp/>notification<sp/>unless<sp/>you<sp/>override<sp/>the<sp/>CDialog::OnInitDialog()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>function<sp/>and<sp/>call<sp/>CRichEditCtrl().SetEventMask()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>ENM_CHANGE<sp/>flag<sp/>ORed<sp/>into<sp/>the<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Add<sp/>your<sp/>control<sp/>notification<sp/>handler<sp/>code<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateData(TRUE);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>turn<sp/>any<sp/>patches<sp/>in<sp/>explicit<sp/>subdivides</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>Patch_SubdivideSelected(<sp/>(<sp/>m_subdivide<sp/>!=<sp/>FALSE<sp/>),<sp/>m_nHorz,<sp/>m_nVert<sp/>);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_UpdateWindows(W_CAMERA<sp/>|<sp/>W_XY);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnChangeEditVert()<sp/></highlight></codeline>
<codeline lineno="535"><highlight class="normal">{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>If<sp/>this<sp/>is<sp/>a<sp/>RICHEDIT<sp/>control,<sp/>the<sp/>control<sp/>will<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>this<sp/>notification<sp/>unless<sp/>you<sp/>override<sp/>the<sp/>CDialog::OnInitDialog()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>function<sp/>and<sp/>call<sp/>CRichEditCtrl().SetEventMask()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>ENM_CHANGE<sp/>flag<sp/>ORed<sp/>into<sp/>the<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Add<sp/>your<sp/>control<sp/>notification<sp/>handler<sp/>code<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateData(TRUE);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>turn<sp/>any<sp/>patches<sp/>in<sp/>explicit<sp/>subdivides</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>Patch_SubdivideSelected(<sp/>(<sp/>m_subdivide<sp/>!=<sp/>FALSE<sp/>),<sp/>m_nHorz,<sp/>m_nVert<sp/>);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_UpdateWindows(W_CAMERA<sp/>|<sp/>W_XY);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal">BOOL<sp/>CSurfaceDlg::PreTranslateMessage(MSG*<sp/>pMsg)<sp/></highlight></codeline>
<codeline lineno="550"><highlight class="normal">{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMsg-&gt;message<sp/>==<sp/>WM_KEYDOWN)<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMsg-&gt;wParam<sp/>==<sp/>VK_RETURN)<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(focusControl)<sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateData(TRUE);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(focusControl<sp/>==<sp/>&amp;m_wndHScale)<sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Select_ScaleTexture(<sp/>m_horzScale,<sp/>1.0f,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>(<sp/>m_absolute<sp/>!=<sp/>FALSE<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(focusControl<sp/>==<sp/>&amp;m_wndVScale)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Select_ScaleTexture(<sp/>1.0f,<sp/>m_vertScale,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>(<sp/>m_absolute<sp/>!=<sp/>FALSE<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(focusControl<sp/>==<sp/>&amp;m_wndRotateEdit)<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Select_RotateTexture(<sp/>m_rotate,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(focusControl<sp/>==<sp/>&amp;m_wndHeight<sp/>||<sp/>focusControl<sp/>==<sp/>&amp;m_wndWidth)<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Select_FitTexture(<sp/>m_fHeight,<sp/>m_fWidth<sp/>);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CDialog::PreTranslateMessage(pMsg);</highlight></codeline>
<codeline lineno="569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnSetfocusHscale()<sp/></highlight></codeline>
<codeline lineno="572"><highlight class="normal">{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>focusControl<sp/>=<sp/>&amp;m_wndHScale;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnKillfocusHscale()<sp/></highlight></codeline>
<codeline lineno="577"><highlight class="normal">{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>focusControl<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnKillfocusVscale()<sp/></highlight></codeline>
<codeline lineno="582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>focusControl<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnSetfocusVscale()<sp/></highlight></codeline>
<codeline lineno="587"><highlight class="normal">{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>focusControl<sp/>=<sp/>&amp;m_wndVScale;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="589"><highlight class="normal">}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnKillfocusEditWidth()<sp/></highlight></codeline>
<codeline lineno="592"><highlight class="normal">{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>focusControl<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="594"><highlight class="normal">}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnSetfocusEditWidth()<sp/></highlight></codeline>
<codeline lineno="597"><highlight class="normal">{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>focusControl<sp/>=<sp/>&amp;m_wndWidth;<sp/></highlight></codeline>
<codeline lineno="599"><highlight class="normal">}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnKillfocusEditHeight()<sp/></highlight></codeline>
<codeline lineno="602"><highlight class="normal">{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>focusControl<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnSetfocusEditHeight()<sp/></highlight></codeline>
<codeline lineno="607"><highlight class="normal">{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>focusControl<sp/>=<sp/>&amp;m_wndHeight;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnBtnFlipx()<sp/></highlight></codeline>
<codeline lineno="612"><highlight class="normal">{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>Select_FlipTexture(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnBtnFlipy()<sp/></highlight></codeline>
<codeline lineno="617"><highlight class="normal">{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>Select_FlipTexture(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnKillfocusRotate()<sp/></highlight></codeline>
<codeline lineno="622"><highlight class="normal">{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>focusControl<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CSurfaceDlg::OnSetfocusRotate()<sp/></highlight></codeline>
<codeline lineno="627"><highlight class="normal">{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>focusControl<sp/>=<sp/>&amp;m_wndRotateEdit;</highlight></codeline>
<codeline lineno="629"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/SurfaceDlg.cpp"/>
  </compounddef>
</doxygen>
