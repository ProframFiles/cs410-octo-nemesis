<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_toggle_list_view_8cpp" kind="file">
    <compoundname>ToggleListView.cpp</compoundname>
    <includes refid="precompiled_8h" local="yes">../../idlib/precompiled.h</includes>
    <includes refid="_toggle_list_view_8h" local="yes">ToggleListView.h</includes>
      <sectiondef kind="define">
      <memberdef kind="define" id="_toggle_list_view_8cpp_1a9c6e0e0080b53437aa636c479aa83a14" prot="public" static="no">
        <name>TOGGLELIST_ITEMHEIGHT</name>
        <initializer>22</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/materialeditor/ToggleListView.cpp" line="33" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/materialeditor/ToggleListView.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_toggle_list_view_8cpp_1a9bddfd538479a91539cbdbb462cec398" prot="public" static="no">
        <name>TEXT_OFFSET</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/materialeditor/ToggleListView.cpp" line="34" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/materialeditor/ToggleListView.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_toggle_list_view_8cpp_1a2d4e862941c4fdf156d5b459a99180ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>IMPLEMENT_DYNCREATE</definition>
        <argsstring>(ToggleListView, CListView) BEGIN_MESSAGE_MAP(ToggleListView</argsstring>
        <name>IMPLEMENT_DYNCREATE</name>
        <param>
          <type><ref refid="class_toggle_list_view" kindref="compound">ToggleListView</ref></type>
        </param>
        <param>
          <type>CListView</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/materialeditor/ToggleListView.cpp" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_toggle_list_view_8cpp_1a8dcaeaa006e5b7e153ee2b9385d40c99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CListView</type>
        <definition>CListView ON_WM_CREATE</definition>
        <argsstring>() ON_WM_SIZE() ON_WM_MEASUREITEM_REFLECT() ON_NOTIFY_REFLECT(NM_CLICK</argsstring>
        <name>ON_WM_CREATE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/materialeditor/ToggleListView.cpp" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_toggle_list_view_8cpp_1a8a6feedb7a7ce2906b82aa96c4ecb86b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CListView OnNMClick</type>
        <definition>CListView OnNMClick END_MESSAGE_MAP</definition>
        <argsstring>() ToggleListView</argsstring>
        <name>END_MESSAGE_MAP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Protected constructor used by dynamic creation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/materialeditor/ToggleListView.cpp" line="44" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/materialeditor/ToggleListView.cpp" bodystart="44" bodyend="54"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../idlib/precompiled.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>hdrstop</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ToggleListView.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOGGLELIST_ITEMHEIGHT<sp/>22</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TEXT_OFFSET<sp/>6</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">IMPLEMENT_DYNCREATE(<ref refid="class_toggle_list_view" kindref="compound">ToggleListView</ref>,<sp/>CListView)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">BEGIN_MESSAGE_MAP(<ref refid="class_toggle_list_view" kindref="compound">ToggleListView</ref>,<sp/>CListView)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_WM_CREATE()</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_WM_SIZE()</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_WM_MEASUREITEM_REFLECT()</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>ON_NOTIFY_REFLECT(NM_CLICK,<sp/>OnNMClick)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">END_MESSAGE_MAP()</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="47"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="48"><highlight class="comment">*<sp/>Protected<sp/>constructor<sp/>used<sp/>by<sp/>dynamic<sp/>creation.</highlight></codeline>
<codeline lineno="49"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">ToggleListView::ToggleListView()<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>onIcon<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>offIcon<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>disabledIcon<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="56"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="57"><highlight class="comment">*<sp/>Destructor.</highlight></codeline>
<codeline lineno="58"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><ref refid="class_toggle_list_view_1a48eac4fae7c5a66a3505fc25ba68634a" kindref="member">ToggleListView::~ToggleListView</ref>()<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="63"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="64"><highlight class="comment">*<sp/>Sets<sp/>the<sp/>tree<sp/>icons<sp/>to<sp/>dispay<sp/>for<sp/>each<sp/>of<sp/>the<sp/>three<sp/>states.<sp/>Sets<sp/>the<sp/></highlight></codeline>
<codeline lineno="65"><highlight class="comment">*<sp/>icons<sp/>to<sp/>display<sp/>for<sp/>each<sp/>of<sp/>the<sp/>three<sp/>states.<sp/>The<sp/>values<sp/>passed<sp/>in<sp/></highlight></codeline>
<codeline lineno="66"><highlight class="comment">*<sp/>are<sp/>the<sp/>resource<sp/>name<sp/>that<sp/>can<sp/>be<sp/>generated<sp/>using<sp/>MAKEINTRESOUCE.<sp/>If<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="comment">*<sp/>the<sp/>value<sp/>passed<sp/>in<sp/>is<sp/>NULL<sp/>then<sp/>an<sp/>icon<sp/>will<sp/>not<sp/>be<sp/>drawn<sp/>for<sp/>that</highlight></codeline>
<codeline lineno="68"><highlight class="comment">*<sp/>state.</highlight></codeline>
<codeline lineno="69"><highlight class="comment">*<sp/>@param<sp/>disabled<sp/>The<sp/>icon<sp/>to<sp/>draw<sp/>when<sp/>the<sp/>state<sp/>is<sp/>TOGGLE_STATE_DISABLED.</highlight></codeline>
<codeline lineno="70"><highlight class="comment">*<sp/>@param<sp/>on<sp/>The<sp/>icon<sp/>to<sp/>draw<sp/>when<sp/>the<sp/>state<sp/>is<sp/>TOGGLE_STATE_ON.</highlight></codeline>
<codeline lineno="71"><highlight class="comment">*<sp/>@param<sp/>off<sp/>The<sp/>icon<sp/>to<sp/>draw<sp/>when<sp/>the<sp/>state<sp/>is<sp/>TOGGLE_STATE_OFF.</highlight></codeline>
<codeline lineno="72"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_toggle_list_view_1a2e72baad66690c73e60821b58b55d282" kindref="member">ToggleListView::SetToggleIcons</ref>(LPCSTR<sp/>disabled,<sp/>LPCSTR<sp/>on,<sp/>LPCSTR<sp/>off)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(on)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>onIcon<sp/>=<sp/>(HICON)LoadImage<sp/>(<sp/>AfxGetInstanceHandle(),<sp/>on,<sp/>IMAGE_ICON,<sp/>16,<sp/>16,<sp/>LR_DEFAULTCOLOR|LR_LOADMAP3DCOLORS<sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>onIcon<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(off)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offIcon<sp/>=<sp/>(HICON)LoadImage<sp/>(<sp/>AfxGetInstanceHandle(),<sp/>off,<sp/>IMAGE_ICON,<sp/>16,<sp/>16,<sp/>LR_DEFAULTCOLOR|LR_LOADMAP3DCOLORS<sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offIcon<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(disabled)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disabledIcon<sp/>=<sp/>(HICON)LoadImage<sp/>(<sp/>AfxGetInstanceHandle(),<sp/>disabled,<sp/>IMAGE_ICON,<sp/>16,<sp/>16,<sp/>LR_DEFAULTCOLOR|LR_LOADMAP3DCOLORS<sp/>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disabledIcon<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="93"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="94"><highlight class="comment">*<sp/>Sets<sp/>the<sp/>state<sp/>of<sp/>an<sp/>item<sp/>in<sp/>the<sp/>list.</highlight></codeline>
<codeline lineno="95"><highlight class="comment">*<sp/>@param<sp/>index<sp/>Index<sp/>of<sp/>the<sp/>item<sp/>whose<sp/>state<sp/>should<sp/>be<sp/>changed.</highlight></codeline>
<codeline lineno="96"><highlight class="comment">*<sp/>@param<sp/>toggleState<sp/>The<sp/>state<sp/>to<sp/>set</highlight></codeline>
<codeline lineno="97"><highlight class="comment">*<sp/>@param<sp/>notify<sp/>Determines<sp/>if<sp/>the<sp/>notification<sp/>method<sp/>OnStateChanged<sp/>should</highlight></codeline>
<codeline lineno="98"><highlight class="comment">*<sp/>be<sp/>called.<sp/>OnStateChanged<sp/>will<sp/>also<sp/>not<sp/>be<sp/>called<sp/>if<sp/>the<sp/>state<sp/>has<sp/>not<sp/>changed.</highlight></codeline>
<codeline lineno="99"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_toggle_list_view_1ae90cc8f124e4754e5e9e8692e16ac070" kindref="member">ToggleListView::SetToggleState</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>toggleState,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>notify)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>CListCtrl&amp;<sp/>list<sp/>=<sp/>GetListCtrl();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/>list.GetItemCount());</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oldState<sp/>=<sp/><ref refid="class_toggle_list_view_1acba095066f97e60c18942cf2b131d5e8" kindref="member">GetToggleState</ref>(index);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>list.SetItemData(index,<sp/>toggleState);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(notify<sp/>&amp;&amp;<sp/>oldState<sp/>!=<sp/>toggleState)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OnStateChanged(index,<sp/>toggleState);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="111"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="112"><highlight class="comment">*<sp/>Gets<sp/>the<sp/>state<sp/>of<sp/>an<sp/>item<sp/>in<sp/>the<sp/>list</highlight></codeline>
<codeline lineno="113"><highlight class="comment">*<sp/>@param<sp/>index<sp/>Index<sp/>of<sp/>the<sp/>item<sp/>of<sp/>which<sp/>to<sp/>retreive<sp/>the<sp/>state.</highlight></codeline>
<codeline lineno="114"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_toggle_list_view_1acba095066f97e60c18942cf2b131d5e8" kindref="member">ToggleListView::GetToggleState</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>CListCtrl&amp;<sp/>list<sp/>=<sp/>GetListCtrl();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/>list.GetItemCount());</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>data<sp/>=<sp/>list.GetItemData(index);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="123"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="124"><highlight class="comment">*<sp/>Called<sp/>as<sp/>the<sp/>window<sp/>is<sp/>being<sp/>created<sp/>and<sp/>initializes<sp/>icons<sp/>and<sp/>window<sp/>styles</highlight></codeline>
<codeline lineno="125"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_toggle_list_view_1a55fe98eeffa10bbe3d26f8e13f3479c4" kindref="member">ToggleListView::OnCreate</ref>(LPCREATESTRUCT<sp/>lpCreateStruct)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CListView::OnCreate(lpCreateStruct)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>CListCtrl&amp;<sp/>list<sp/>=<sp/>GetListCtrl();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>list.SetExtendedStyle(LVS_EX_FULLROWSELECT);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Turn<sp/>off<sp/>the<sp/>horizontal<sp/>scroll<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Todo:<sp/>Figure<sp/>out<sp/>why<sp/>the<sp/>damn<sp/>scroll<sp/>bar<sp/>pops<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>list.ModifyStyle(WS_HSCROLL,<sp/>0L);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Insert<sp/>the<sp/>one<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>LVCOLUMN<sp/>col;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>col.mask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>list.InsertColumn(0,<sp/>&amp;col);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_toggle_list_view_1a2e72baad66690c73e60821b58b55d282" kindref="member">SetToggleIcons</ref>();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="149"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="150"><highlight class="comment">*<sp/>Called<sp/>when<sp/>the<sp/>window<sp/>is<sp/>being<sp/>resized.</highlight></codeline>
<codeline lineno="151"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_toggle_list_view_1a3da236de05952fdee4bd998b83d2d7ef" kindref="member">ToggleListView::OnSize</ref>(UINT<sp/>nType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cy)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>CListView::OnSize(nType,<sp/>cx,<sp/>cy);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>CListCtrl&amp;<sp/>list<sp/>=<sp/>GetListCtrl();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>list.SetColumnWidth(0,<sp/>cx-1);</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="159"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="160"><highlight class="comment">*<sp/>Returns<sp/>the<sp/>size<sp/>of<sp/>each<sp/>item<sp/>in<sp/>the<sp/>toggle<sp/>list.</highlight></codeline>
<codeline lineno="161"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_toggle_list_view_1adaca18f1ec0dc632f78412a60d6be8b0" kindref="member">ToggleListView::MeasureItem</ref>(LPMEASUREITEMSTRUCT<sp/>lpMeasureItemStruct)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>lpMeasureItemStruct-&gt;itemHeight<sp/>=<sp/>TOGGLELIST_ITEMHEIGHT;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="166"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="167"><highlight class="comment">*<sp/>Toggles<sp/>the<sp/>state<sp/>of<sp/>an<sp/>item<sp/>when<sp/>the<sp/>user<sp/>clicks<sp/>in<sp/>the<sp/>window.</highlight></codeline>
<codeline lineno="168"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_toggle_list_view_1aa1648f366dc1314642c28944777e7622" kindref="member">ToggleListView::OnNMClick</ref>(NMHDR<sp/>*pNMHDR,<sp/>LRESULT<sp/>*pResult)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>CListCtrl&amp;<sp/>list<sp/>=<sp/>GetListCtrl();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>dwpos<sp/>=<sp/>GetMessagePos();<sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>LVHITTESTINFO<sp/>info;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>info.pt.x<sp/>=<sp/>LOWORD(dwpos);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>info.pt.y<sp/>=<sp/>HIWORD(dwpos);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>::MapWindowPoints(HWND_DESKTOP,<sp/>pNMHDR-&gt;hwndFrom,<sp/>&amp;info.pt,<sp/>1);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>list.HitTest(&amp;info);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>index<sp/>!=<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>toggleState<sp/>=<sp/><ref refid="class_toggle_list_view_1acba095066f97e60c18942cf2b131d5e8" kindref="member">GetToggleState</ref>(index);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(toggleState<sp/>!=<sp/>TOGGLE_STATE_DISABLED)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RECT<sp/><sp/><sp/><sp/>rItem;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list.GetItemRect(index,<sp/>&amp;rItem,<sp/>LVIR_BOUNDS);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>info.pt.x<sp/>&lt;<sp/>TOGGLELIST_ITEMHEIGHT<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(toggleState<sp/>==<sp/>TOGGLE_STATE_ON)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_toggle_list_view_1ae90cc8f124e4754e5e9e8692e16ac070" kindref="member">SetToggleState</ref>(index,<sp/>TOGGLE_STATE_OFF,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_toggle_list_view_1ae90cc8f124e4754e5e9e8692e16ac070" kindref="member">SetToggleState</ref>(index,<sp/>TOGGLE_STATE_ON,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>*pResult<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="200"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="201"><highlight class="comment">*<sp/>Sets<sp/>some<sp/>window<sp/>styles<sp/>before<sp/>the<sp/>window<sp/>is<sp/>created.</highlight></codeline>
<codeline lineno="202"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal">BOOL<sp/>ToggleListView::PreCreateWindow(CREATESTRUCT&amp;<sp/>cs)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>required<sp/>style<sp/>for<sp/>the<sp/>toggle<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>cs.style<sp/>&amp;=<sp/>~LVS_TYPEMASK;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>cs.style<sp/>|=<sp/>LVS_REPORT<sp/>|<sp/>LVS_OWNERDRAWFIXED<sp/>|<sp/>LVS_NOCOLUMNHEADER<sp/>|<sp/>LVS_SHOWSELALWAYS;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CListView::PreCreateWindow(cs);</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="211"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="212"><highlight class="comment">*<sp/>Responsible<sp/>for<sp/>drawing<sp/>each<sp/>list<sp/>item.</highlight></codeline>
<codeline lineno="213"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_toggle_list_view_1a83314f92a6c54181fc315ebaa9f4dd22" kindref="member">ToggleListView::DrawItem</ref>(LPDRAWITEMSTRUCT<sp/>lpDrawItemStruct)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>CListCtrl&amp;<sp/>ListCtrl=GetListCtrl();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nItem<sp/>=<sp/>lpDrawItemStruct-&gt;itemID;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>item<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>LV_ITEM<sp/>lvi;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>_TCHAR<sp/>szBuff[MAX_PATH];</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;lvi,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(LV_ITEM));</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>lvi.mask<sp/>=<sp/>LVIF_TEXT;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>lvi.iItem<sp/>=<sp/>nItem;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>lvi.pszText<sp/>=<sp/>szBuff;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>lvi.cchTextMax<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(szBuff);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>ListCtrl.GetItem(&amp;lvi);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>RECT<sp/>rDraw;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>CopyRect<sp/>(<sp/>&amp;rDraw,<sp/>&amp;lpDrawItemStruct-&gt;rcItem<sp/>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>rDraw.right<sp/>=<sp/>rDraw.left<sp/>+<sp/>TOGGLELIST_ITEMHEIGHT;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>rDraw.top<sp/>++;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>rDraw.right<sp/>++;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>FrameRect<sp/>(<sp/>lpDrawItemStruct-&gt;hDC,<sp/>&amp;rDraw,<sp/>(HBRUSH)GetStockObject<sp/>(<sp/>BLACK_BRUSH<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>rDraw.right<sp/>--;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>FillRect<sp/>(<sp/>lpDrawItemStruct-&gt;hDC,<sp/>&amp;rDraw,<sp/>GetSysColorBrush<sp/>(<sp/>COLOR_3DFACE<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_toggle_list_view_1ab336f637a56a02546c7ff90c06a4f54c" kindref="member">Draw3dRect</ref><sp/>(<sp/>lpDrawItemStruct-&gt;hDC,<sp/>&amp;rDraw,<sp/>GetSysColorBrush<sp/>(<sp/>COLOR_3DHILIGHT<sp/>),<sp/>GetSysColorBrush<sp/>(<sp/>COLOR_3DSHADOW<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>InflateRect<sp/>(<sp/>&amp;rDraw,<sp/>-3,<sp/>-3<sp/>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_toggle_list_view_1ab336f637a56a02546c7ff90c06a4f54c" kindref="member">Draw3dRect</ref><sp/>(<sp/>lpDrawItemStruct-&gt;hDC,<sp/>&amp;rDraw,<sp/>GetSysColorBrush<sp/>(<sp/>COLOR_3DSHADOW<sp/>),<sp/>GetSysColorBrush<sp/>(<sp/>COLOR_3DHILIGHT<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="class_toggle_list_view_1acba095066f97e60c18942cf2b131d5e8" kindref="member">GetToggleState</ref>(lvi.iItem))<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TOGGLE_STATE_DISABLED:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(disabledIcon)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawIconEx<sp/>(<sp/>lpDrawItemStruct-&gt;hDC,<sp/>rDraw.left,<sp/>rDraw.top,<sp/>disabledIcon,<sp/>16,<sp/>16,0,<sp/>NULL,<sp/>DI_NORMAL<sp/>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TOGGLE_STATE_ON:</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(onIcon)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawIconEx<sp/>(<sp/>lpDrawItemStruct-&gt;hDC,<sp/>rDraw.left,<sp/>rDraw.top,<sp/>onIcon,<sp/>16,<sp/>16,0,<sp/>NULL,<sp/>DI_NORMAL<sp/>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TOGGLE_STATE_OFF:</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(offIcon)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawIconEx<sp/>(<sp/>lpDrawItemStruct-&gt;hDC,<sp/>rDraw.left,<sp/>rDraw.top,<sp/>offIcon,<sp/>16,<sp/>16,0,<sp/>NULL,<sp/>DI_NORMAL<sp/>);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>CopyRect<sp/>(<sp/>&amp;rDraw,<sp/>&amp;lpDrawItemStruct-&gt;rcItem<sp/>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>rDraw.left<sp/>+=<sp/>TOGGLELIST_ITEMHEIGHT;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>rDraw.left<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>lpDrawItemStruct-&gt;itemState<sp/>&amp;<sp/>ODS_SELECTED<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FillRect<sp/>(<sp/>lpDrawItemStruct-&gt;hDC,<sp/>&amp;rDraw,<sp/>GetSysColorBrush<sp/>(<sp/>COLOR_HIGHLIGHT<sp/>)<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FillRect<sp/>(<sp/>lpDrawItemStruct-&gt;hDC,<sp/>&amp;rDraw,<sp/>GetSysColorBrush<sp/>(<sp/>COLOR_WINDOW<sp/>)<sp/>);<sp/></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>rDraw.left<sp/>+=<sp/>TEXT_OFFSET;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colorIndex<sp/>=<sp/>(<sp/>(lpDrawItemStruct-&gt;itemState<sp/>&amp;<sp/>ODS_SELECTED<sp/>)<sp/>?<sp/>COLOR_HIGHLIGHTTEXT<sp/>:<sp/>COLOR_WINDOWTEXT<sp/>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>SetTextColor<sp/>(<sp/>lpDrawItemStruct-&gt;hDC,<sp/>GetSysColor<sp/>(<sp/>colorIndex<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>DrawText<sp/>(<sp/>lpDrawItemStruct-&gt;hDC,<sp/>szBuff,<sp/>strlen(szBuff),<sp/>&amp;rDraw,<sp/>DT_LEFT|DT_VCENTER|DT_SINGLELINE<sp/>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="285"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="286"><highlight class="comment">*<sp/>Draws<sp/>a<sp/>3d<sp/>rectangle<sp/>using<sp/>the<sp/>given<sp/>brushes<sp/>this<sp/>code<sp/>was<sp/>taken<sp/>from<sp/>the<sp/>gui<sp/>editor</highlight></codeline>
<codeline lineno="287"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_toggle_list_view_1ab336f637a56a02546c7ff90c06a4f54c" kindref="member">ToggleListView::Draw3dRect</ref><sp/>(HDC<sp/>hDC,<sp/>RECT*<sp/>rect,<sp/>HBRUSH<sp/>topLeft,<sp/>HBRUSH<sp/>bottomRight)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>RECT<sp/>rOut;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>SetRect<sp/>(<sp/>&amp;rOut,<sp/>rect-&gt;left,<sp/>rect-&gt;top,<sp/>rect-&gt;right<sp/>-<sp/>1,<sp/>rect-&gt;top<sp/>+<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>FillRect<sp/>(<sp/>hDC,&amp;rOut,<sp/>topLeft<sp/>);<sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>SetRect<sp/>(<sp/>&amp;rOut,<sp/>rect-&gt;left,<sp/>rect-&gt;top,<sp/>rect-&gt;left<sp/>+<sp/>1,<sp/>rect-&gt;bottom<sp/>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>FillRect(<sp/>hDC,&amp;rOut,<sp/>topLeft<sp/>);<sp/></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>SetRect<sp/>(<sp/>&amp;rOut,<sp/>rect-&gt;right,<sp/>rect-&gt;top,<sp/>rect-&gt;right<sp/>-1,<sp/>rect-&gt;bottom<sp/><sp/>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>FillRect(<sp/>hDC,&amp;rOut,<sp/>bottomRight<sp/>);<sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>SetRect<sp/>(<sp/>&amp;rOut,<sp/>rect-&gt;left,<sp/>rect-&gt;bottom,<sp/>rect-&gt;right,<sp/>rect-&gt;bottom<sp/>-<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>FillRect(<sp/>hDC,&amp;rOut,<sp/>bottomRight<sp/>);<sp/></highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/tools/materialeditor/ToggleListView.cpp"/>
  </compounddef>
</doxygen>
