<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_undo_8h" kind="file">
    <compoundname>Undo.h</compoundname>
    <includedby refid="_q_e3_8_h" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/QE3.H</includedby>
    <includedby refid="_main_frm_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/MainFrm.cpp</includedby>
      <sectiondef kind="func">
      <memberdef kind="function" id="_undo_8h_1a6eb8c5da257d8318a8036cbf3ba79e22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Undo_Start</definition>
        <argsstring>(char *operation)</argsstring>
        <name>Undo_Start</name>
        <param>
          <type>char *</type>
          <declname>operation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.h" line="30" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.cpp" bodystart="362" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="_undo_8h_1a5f87cb7716dcc710c65b6b77ad64f5f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Undo_End</definition>
        <argsstring>(void)</argsstring>
        <name>Undo_End</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.h" line="32" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.cpp" bodystart="552" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="_undo_8h_1a53ed091b66f6282ff06d275c5b589940" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Undo_AddBrush</definition>
        <argsstring>(brush_t *pBrush)</argsstring>
        <name>Undo_AddBrush</name>
        <param>
          <type><ref refid="structbrush__s" kindref="compound">brush_t</ref> *</type>
          <declname>pBrush</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.h" line="34" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.cpp" bodystart="373" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="_undo_8h_1a891eb74843735de0848d05b2b44d5175" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Undo_AddBrushList</definition>
        <argsstring>(brush_t *brushlist)</argsstring>
        <name>Undo_AddBrushList</name>
        <param>
          <type><ref refid="structbrush__s" kindref="compound">brush_t</ref> *</type>
          <declname>brushlist</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.h" line="36" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.cpp" bodystart="408" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="_undo_8h_1abdb9938ab9218e471242a620183d29f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Undo_EndBrush</definition>
        <argsstring>(brush_t *pBrush)</argsstring>
        <name>Undo_EndBrush</name>
        <param>
          <type><ref refid="structbrush__s" kindref="compound">brush_t</ref> *</type>
          <declname>pBrush</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.h" line="38" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.cpp" bodystart="450" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="_undo_8h_1a1f59cdd4be7fe8b6f1c7919bd947ccc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Undo_EndBrushList</definition>
        <argsstring>(brush_t *brushlist)</argsstring>
        <name>Undo_EndBrushList</name>
        <param>
          <type><ref refid="structbrush__s" kindref="compound">brush_t</ref> *</type>
          <declname>brushlist</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.h" line="40" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.cpp" bodystart="470" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="_undo_8h_1a202790d737df9d6e2d20ca3b8cfc2c80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Undo_AddEntity</definition>
        <argsstring>(entity_t *entity)</argsstring>
        <name>Undo_AddEntity</name>
        <param>
          <type><ref refid="structentity__s" kindref="compound">entity_t</ref> *</type>
          <declname>entity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.h" line="42" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.cpp" bodystart="493" bodyend="518"/>
      </memberdef>
      <memberdef kind="function" id="_undo_8h_1aeb169ee57354d74d3d11841cafda4364" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Undo_EndEntity</definition>
        <argsstring>(entity_t *entity)</argsstring>
        <name>Undo_EndEntity</name>
        <param>
          <type><ref refid="structentity__s" kindref="compound">entity_t</ref> *</type>
          <declname>entity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.h" line="44" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.cpp" bodystart="525" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="_undo_8h_1aba96d0aaa1370e274c41c8a522df08f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Undo_Undo</definition>
        <argsstring>(void)</argsstring>
        <name>Undo_Undo</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.h" line="46" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.cpp" bodystart="582" bodyend="757"/>
      </memberdef>
      <memberdef kind="function" id="_undo_8h_1a54d884f4dd3984d4870be15507728aae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Undo_Redo</definition>
        <argsstring>(void)</argsstring>
        <name>Undo_Redo</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.h" line="48" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.cpp" bodystart="764" bodyend="883"/>
      </memberdef>
      <memberdef kind="function" id="_undo_8h_1a51ee3d8fa611531ef88ea42be43050a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Undo_UndoAvailable</definition>
        <argsstring>(void)</argsstring>
        <name>Undo_UndoAvailable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.h" line="50" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.cpp" bodystart="901" bodyend="909"/>
      </memberdef>
      <memberdef kind="function" id="_undo_8h_1a4b92dda3216dd2fd1aa856df0c20fdaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Undo_RedoAvailable</definition>
        <argsstring>(void)</argsstring>
        <name>Undo_RedoAvailable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.h" line="52" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.cpp" bodystart="890" bodyend="894"/>
      </memberdef>
      <memberdef kind="function" id="_undo_8h_1a94e95d4d474e46fe7f1b69a7329613e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Undo_Clear</definition>
        <argsstring>(void)</argsstring>
        <name>Undo_Clear</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.h" line="54" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.cpp" bodystart="144" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="_undo_8h_1ab4791023107d6381912a56f492c41bc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Undo_SetMaxSize</definition>
        <argsstring>(int size)</argsstring>
        <name>Undo_SetMaxSize</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.h" line="56" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.cpp" bodystart="181" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="_undo_8h_1add7a26d39e6a119518bc90d64f2d4972" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Undo_GetMaxSize</definition>
        <argsstring>(void)</argsstring>
        <name>Undo_GetMaxSize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.h" line="58" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.cpp" bodystart="193" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="_undo_8h_1a09c6b4e6a9356ccd36fb72e0a2c2c045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Undo_SetMaxMemorySize</definition>
        <argsstring>(int size)</argsstring>
        <name>Undo_SetMaxMemorySize</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.h" line="60" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.cpp" bodystart="203" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="_undo_8h_1aa870cabbc35ae92c61b1f0a5a1b3497a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Undo_GetMaxMemorySize</definition>
        <argsstring>(void)</argsstring>
        <name>Undo_GetMaxMemorySize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.h" line="62" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.cpp" bodystart="215" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="_undo_8h_1a14b0a86645f1caa14dba1e62a5261931" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Undo_MemorySize</definition>
        <argsstring>(void)</argsstring>
        <name>Undo_MemorySize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.h" line="64" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.cpp" bodystart="80" bodyend="104"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//start<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Undo_Start(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*operation);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//end<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Undo_End(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//add<sp/>brush<sp/>to<sp/>the<sp/>undo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Undo_AddBrush(<ref refid="structbrush__s" kindref="compound">brush_t</ref><sp/>*pBrush);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//add<sp/>a<sp/>list<sp/>with<sp/>brushes<sp/>to<sp/>the<sp/>undo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Undo_AddBrushList(<ref refid="structbrush__s" kindref="compound">brush_t</ref><sp/>*brushlist);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//end<sp/>a<sp/>brush<sp/>after<sp/>the<sp/>operation<sp/>is<sp/>performed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Undo_EndBrush(<ref refid="structbrush__s" kindref="compound">brush_t</ref><sp/>*pBrush);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//end<sp/>a<sp/>list<sp/>with<sp/>brushes<sp/>after<sp/>the<sp/>operation<sp/>is<sp/>performed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Undo_EndBrushList(<ref refid="structbrush__s" kindref="compound">brush_t</ref><sp/>*brushlist);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//add<sp/>entity<sp/>to<sp/>undo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Undo_AddEntity(<ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>*entity);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//end<sp/>an<sp/>entity<sp/>after<sp/>the<sp/>operation<sp/>is<sp/>performed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Undo_EndEntity(<ref refid="structentity__s" kindref="compound">entity_t</ref><sp/>*entity);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//undo<sp/>last<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Undo_Undo(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//redo<sp/>last<sp/>undone<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Undo_Redo(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//returns<sp/>true<sp/>if<sp/>there<sp/>is<sp/>something<sp/>to<sp/>be<sp/>undone<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>Undo_UndoAvailable(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//returns<sp/>true<sp/>if<sp/>there<sp/>is<sp/>something<sp/>to<sp/>redo<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>Undo_RedoAvailable(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//clear<sp/>the<sp/>undo<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Undo_Clear(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//set<sp/>maximum<sp/>undo<sp/>size<sp/>(default<sp/>64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Undo_SetMaxSize(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//get<sp/>maximum<sp/>undo<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>Undo_GetMaxSize(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//set<sp/>maximum<sp/>undo<sp/>memory<sp/>in<sp/>bytes<sp/>(default<sp/>2<sp/>MB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Undo_SetMaxMemorySize(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//get<sp/>maximum<sp/>undo<sp/>memory<sp/>in<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>Undo_GetMaxMemorySize(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//returns<sp/>the<sp/>amount<sp/>of<sp/>memory<sp/>used<sp/>by<sp/>undo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>Undo_MemorySize(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/Undo.h"/>
  </compounddef>
</doxygen>
