<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="alu_8h" kind="file">
    <compoundname>alu.h</compoundname>
    <includes refid="include_2altypes_8h" local="yes">altypes.h</includes>
      <sectiondef kind="define">
      <memberdef kind="define" id="alu_8h_1a64270c1350e0e25627d76ccbdec81f9d" prot="public" static="no">
        <name>ALUAPI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/alu.h" line="4" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/openal/include/alu.h" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="alu_8h_1a7df9b0e4ea6e1fe78de81094719ed575" prot="public" static="no">
        <name>ALUAPIENTRY</name>
        <initializer>__cdecl</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/alu.h" line="5" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/openal/include/alu.h" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="alu_8h_1ac3146f1e9227301bb4aa518f4d336cee" prot="public" static="no">
        <name>BUFFERSIZE</name>
        <initializer>48000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/alu.h" line="7" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/openal/include/alu.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="alu_8h_1a749c3dafec7df269201fb61c8e291db7" prot="public" static="no">
        <name>FRACTIONBITS</name>
        <initializer>14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/alu.h" line="8" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/openal/include/alu.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="alu_8h_1abfb7d1453e8f4cb7f987120cda108dbc" prot="public" static="no">
        <name>FRACTIONMASK</name>
        <initializer>((1L&lt;&lt;FRACTIONBITS)-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/alu.h" line="9" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/openal/include/alu.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="alu_8h_1a6e54ae16328f40b6d282cb766095cafa" prot="public" static="no">
        <name>OUTPUTCHANNELS</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/alu.h" line="10" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/openal/include/alu.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="alu_8h_1abbd2d20faed133e501720af2f078b5c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALint __cdecl</type>
        <definition>ALint __cdecl aluF2L</definition>
        <argsstring>(ALfloat value)</argsstring>
        <name>aluF2L</name>
        <param>
          <type>ALfloat</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/alu.h" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="alu_8h_1a64a6c0e55a006200ac4d4d6a8c9a6590" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALshort __cdecl</type>
        <definition>ALshort __cdecl aluF2S</definition>
        <argsstring>(ALfloat value)</argsstring>
        <name>aluF2S</name>
        <param>
          <type>ALfloat</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/alu.h" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="alu_8h_1a755c36bca1700885c75c5079f3fa68d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl aluCrossproduct</definition>
        <argsstring>(ALfloat *inVector1, ALfloat *inVector2, ALfloat *outVector)</argsstring>
        <name>aluCrossproduct</name>
        <param>
          <type>ALfloat *</type>
          <declname>inVector1</declname>
        </param>
        <param>
          <type>ALfloat *</type>
          <declname>inVector2</declname>
        </param>
        <param>
          <type>ALfloat *</type>
          <declname>outVector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/alu.h" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="alu_8h_1accfec8340b26c378fdfafdac6a46a008" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALfloat __cdecl</type>
        <definition>ALfloat __cdecl aluDotproduct</definition>
        <argsstring>(ALfloat *inVector1, ALfloat *inVector2)</argsstring>
        <name>aluDotproduct</name>
        <param>
          <type>ALfloat *</type>
          <declname>inVector1</declname>
        </param>
        <param>
          <type>ALfloat *</type>
          <declname>inVector2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/alu.h" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="alu_8h_1a5effea57fba796303b395144473bc972" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl aluNormalize</definition>
        <argsstring>(ALfloat *inVector)</argsstring>
        <name>aluNormalize</name>
        <param>
          <type>ALfloat *</type>
          <declname>inVector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/alu.h" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="alu_8h_1ab48f9c71a46576e0afefb8f7b628424e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl aluMatrixVector</definition>
        <argsstring>(ALfloat matrix[3][3], ALfloat *vector)</argsstring>
        <name>aluMatrixVector</name>
        <param>
          <type>ALfloat</type>
          <declname>matrix</declname>
          <array>[3][3]</array>
        </param>
        <param>
          <type>ALfloat *</type>
          <declname>vector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/alu.h" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="alu_8h_1a4335af1e782409da33d08b323a3ece0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl aluCalculateSourceParameters</definition>
        <argsstring>(ALuint source, ALuint channels, ALfloat *drysend, ALfloat *wetsend, ALfloat *pitch)</argsstring>
        <name>aluCalculateSourceParameters</name>
        <param>
          <type>ALuint</type>
          <declname>source</declname>
        </param>
        <param>
          <type>ALuint</type>
          <declname>channels</declname>
        </param>
        <param>
          <type>ALfloat *</type>
          <declname>drysend</declname>
        </param>
        <param>
          <type>ALfloat *</type>
          <declname>wetsend</declname>
        </param>
        <param>
          <type>ALfloat *</type>
          <declname>pitch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/alu.h" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="alu_8h_1a27e56f00089d5284e914674dafa3b978" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl aluMixData</definition>
        <argsstring>(ALvoid *context, ALvoid *buffer, ALsizei size, ALenum format)</argsstring>
        <name>aluMixData</name>
        <param>
          <type>ALvoid *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>ALvoid *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>ALsizei</type>
          <declname>size</declname>
        </param>
        <param>
          <type>ALenum</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/alu.h" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="alu_8h_1aac0991dcbbb38116d106f537950b3d19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl aluSetReverb</definition>
        <argsstring>(ALvoid *Reverb, ALuint Environment)</argsstring>
        <name>aluSetReverb</name>
        <param>
          <type>ALvoid *</type>
          <declname>Reverb</declname>
        </param>
        <param>
          <type>ALuint</type>
          <declname>Environment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/alu.h" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="alu_8h_1a85ffcf7e41d7a9800fbb8bde88f1e8f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl aluReverb</definition>
        <argsstring>(ALvoid *Reverb, ALfloat Buffer[][2], ALsizei BufferSize)</argsstring>
        <name>aluReverb</name>
        <param>
          <type>ALvoid *</type>
          <declname>Reverb</declname>
        </param>
        <param>
          <type>ALfloat</type>
          <declname>Buffer</declname>
          <array>[][2]</array>
        </param>
        <param>
          <type>ALsizei</type>
          <declname>BufferSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/alu.h" line="27" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_ALU_H_</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_ALU_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ALUAPI</highlight></codeline>
<codeline lineno="5"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ALUAPIENTRY<sp/>__cdecl</highlight></codeline>
<codeline lineno="6"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BUFFERSIZE<sp/>48000</highlight></codeline>
<codeline lineno="8"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>FRACTIONBITS<sp/>14</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>FRACTIONMASK<sp/>((1L&lt;&lt;FRACTIONBITS)-1)</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>OUTPUTCHANNELS<sp/>2</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;altypes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">ALUAPI<sp/>ALint<sp/><sp/><sp/><sp/>ALUAPIENTRY<sp/>aluF2L(ALfloat<sp/>value);</highlight></codeline>
<codeline lineno="19"><highlight class="normal">ALUAPI<sp/>ALshort<sp/><sp/>ALUAPIENTRY<sp/>aluF2S(ALfloat<sp/>value);</highlight></codeline>
<codeline lineno="20"><highlight class="normal">ALUAPI<sp/>ALvoid<sp/><sp/><sp/>ALUAPIENTRY<sp/>aluCrossproduct(ALfloat<sp/>*inVector1,ALfloat<sp/>*inVector2,ALfloat<sp/>*outVector);</highlight></codeline>
<codeline lineno="21"><highlight class="normal">ALUAPI<sp/>ALfloat<sp/><sp/>ALUAPIENTRY<sp/>aluDotproduct(ALfloat<sp/>*inVector1,ALfloat<sp/>*inVector2);</highlight></codeline>
<codeline lineno="22"><highlight class="normal">ALUAPI<sp/>ALvoid<sp/><sp/><sp/>ALUAPIENTRY<sp/>aluNormalize(ALfloat<sp/>*inVector);</highlight></codeline>
<codeline lineno="23"><highlight class="normal">ALUAPI<sp/>ALvoid<sp/><sp/><sp/>ALUAPIENTRY<sp/>aluMatrixVector(ALfloat<sp/>matrix[3][3],ALfloat<sp/>*vector);</highlight></codeline>
<codeline lineno="24"><highlight class="normal">ALUAPI<sp/>ALvoid<sp/><sp/><sp/>ALUAPIENTRY<sp/>aluCalculateSourceParameters(ALuint<sp/>source,ALuint<sp/>channels,ALfloat<sp/>*drysend,ALfloat<sp/>*wetsend,ALfloat<sp/>*pitch);</highlight></codeline>
<codeline lineno="25"><highlight class="normal">ALUAPI<sp/>ALvoid<sp/><sp/><sp/>ALUAPIENTRY<sp/>aluMixData(ALvoid<sp/>*context,ALvoid<sp/>*buffer,ALsizei<sp/>size,ALenum<sp/>format);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">ALUAPI<sp/>ALvoid<sp/><sp/><sp/>ALUAPIENTRY<sp/>aluSetReverb(ALvoid<sp/>*Reverb,ALuint<sp/>Environment);</highlight></codeline>
<codeline lineno="27"><highlight class="normal">ALUAPI<sp/>ALvoid<sp/><sp/><sp/>ALUAPIENTRY<sp/>aluReverb(ALvoid<sp/>*Reverb,ALfloat<sp/>Buffer[][2],ALsizei<sp/>BufferSize);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/openal/include/alu.h"/>
  </compounddef>
</doxygen>
