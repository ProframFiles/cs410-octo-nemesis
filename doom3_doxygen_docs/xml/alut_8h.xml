<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="alut_8h" kind="file">
    <compoundname>alut.h</compoundname>
    <includes refid="osx_2_open_a_l_8framework_2_versions_2_a_2_headers_2al_8h" local="yes">al.h</includes>
      <sectiondef kind="define">
      <memberdef kind="define" id="alut_8h_1a3b78e1c619416e79b48c06e3edb0c472" prot="public" static="no">
        <name>ALUTAPI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OpenAL cross platform audio library Copyright (C) 1999-2000 by authors. This library is free software; you can redistribute it and/or modify it under the terms of the GNU Library General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.</para><para>This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public License for more details.</para><para>You should have received a copy of the GNU Library General Public License along with this library; if not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. Or go to <ulink url="http://www.gnu.org/copyleft/lgpl.html">http://www.gnu.org/copyleft/lgpl.html</ulink> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/osx/OpenAL.framework/Versions/A/Headers/alut.h" line="24" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/openal/osx/OpenAL.framework/Versions/A/Headers/alut.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="alut_8h_1a8b5d4aa0932375e1b2eeb20e3b321ac4" prot="public" static="no">
        <name>ALUTAPIENTRY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/osx/OpenAL.framework/Versions/A/Headers/alut.h" line="25" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/openal/osx/OpenAL.framework/Versions/A/Headers/alut.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="alut_8h_1abd14afcd8a08ccd83ce64549741b831d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid</type>
        <definition>ALvoid alutInit</definition>
        <argsstring>(ALint *argc, ALbyte **argv)</argsstring>
        <name>alutInit</name>
        <param>
          <type>ALint *</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>ALbyte **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/osx/OpenAL.framework/Versions/A/Headers/alut.h" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="alut_8h_1ad9487783758a3adcbcc32e94d725cce5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid</type>
        <definition>ALvoid alutExit</definition>
        <argsstring>(ALvoid)</argsstring>
        <name>alutExit</name>
        <param>
          <type>ALvoid</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/osx/OpenAL.framework/Versions/A/Headers/alut.h" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="alut_8h_1ad555e0327579f371f66efc1c8f26e46f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid</type>
        <definition>ALvoid alutLoadWAVFile</definition>
        <argsstring>(ALbyte *file, ALenum *format, ALvoid **data, ALsizei *size, ALsizei *freq)</argsstring>
        <name>alutLoadWAVFile</name>
        <param>
          <type>ALbyte *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>ALenum *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>ALvoid **</type>
          <declname>data</declname>
        </param>
        <param>
          <type>ALsizei *</type>
          <declname>size</declname>
        </param>
        <param>
          <type>ALsizei *</type>
          <declname>freq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/osx/OpenAL.framework/Versions/A/Headers/alut.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="alut_8h_1afc3180875ef1f78e04d6f87fcc49b09c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid</type>
        <definition>ALvoid alutLoadWAVMemory</definition>
        <argsstring>(ALbyte *memory, ALenum *format, ALvoid **data, ALsizei *size, ALsizei *freq)</argsstring>
        <name>alutLoadWAVMemory</name>
        <param>
          <type>ALbyte *</type>
          <declname>memory</declname>
        </param>
        <param>
          <type>ALenum *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>ALvoid **</type>
          <declname>data</declname>
        </param>
        <param>
          <type>ALsizei *</type>
          <declname>size</declname>
        </param>
        <param>
          <type>ALsizei *</type>
          <declname>freq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/osx/OpenAL.framework/Versions/A/Headers/alut.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="alut_8h_1a5288f4e4722a55a9a56351eaf34ca0f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid</type>
        <definition>ALvoid alutUnloadWAV</definition>
        <argsstring>(ALenum format, ALvoid *data, ALsizei size, ALsizei freq)</argsstring>
        <name>alutUnloadWAV</name>
        <param>
          <type>ALenum</type>
          <declname>format</declname>
        </param>
        <param>
          <type>ALvoid *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>ALsizei</type>
          <declname>size</declname>
        </param>
        <param>
          <type>ALsizei</type>
          <declname>freq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/osx/OpenAL.framework/Versions/A/Headers/alut.h" line="43" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>OpenAL<sp/>cross<sp/>platform<sp/>audio<sp/>library</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1999-2000<sp/>by<sp/>authors.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>Library<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>Boston,<sp/>MA<sp/><sp/>02111-1307,<sp/>USA.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>Or<sp/>go<sp/>to<sp/>http://www.gnu.org/copyleft/lgpl.html</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_ALUT_H_</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_ALUT_H_</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ALUTAPI</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ALUTAPIENTRY</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;al.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TARGET_OS_MAC</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>TARGET_OS_MAC</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>export<sp/>on</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">ALUTAPI<sp/>ALvoid<sp/><sp/>ALUTAPIENTRY<sp/>alutInit(ALint<sp/>*argc,ALbyte<sp/>**argv);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">ALUTAPI<sp/>ALvoid<sp/><sp/>ALUTAPIENTRY<sp/>alutExit(ALvoid);</highlight></codeline>
<codeline lineno="41"><highlight class="normal">ALUTAPI<sp/>ALvoid<sp/><sp/>ALUTAPIENTRY<sp/>alutLoadWAVFile(ALbyte<sp/>*file,ALenum<sp/>*format,ALvoid<sp/>**data,ALsizei<sp/>*size,ALsizei<sp/>*freq);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">ALUTAPI<sp/>ALvoid<sp/><sp/>ALUTAPIENTRY<sp/>alutLoadWAVMemory(ALbyte<sp/>*memory,ALenum<sp/>*format,ALvoid<sp/>**data,ALsizei<sp/>*size,ALsizei<sp/>*freq);</highlight></codeline>
<codeline lineno="43"><highlight class="normal">ALUTAPI<sp/>ALvoid<sp/><sp/>ALUTAPIENTRY<sp/>alutUnloadWAV(ALenum<sp/>format,ALvoid<sp/>*data,ALsizei<sp/>size,ALsizei<sp/>freq);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TARGET_OS_MAC</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>TARGET_OS_MAC</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>export<sp/>off</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/openal/osx/OpenAL.framework/Versions/A/Headers/alut.h"/>
  </compounddef>
</doxygen>
