<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="block_8c" kind="file">
    <compoundname>block.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="ogg_8h" local="yes">../ogg/ogg.h</includes>
    <includes refid="sound_2_ogg_vorbis_2vorbis_2codec_8h" local="yes">../vorbis/codec.h</includes>
    <includes refid="codec__internal_8h" local="yes">codec_internal.h</includes>
    <includes refid="sound_2_ogg_vorbis_2vorbissrc_2window_8h" local="yes">window.h</includes>
    <includes refid="mdct_8h" local="yes">mdct.h</includes>
    <includes refid="lpc_8h" local="yes">lpc.h</includes>
    <includes refid="registry_8h" local="yes">registry.h</includes>
    <includes refid="sound_2_ogg_vorbis_2vorbissrc_2_misc_8h" local="yes">misc.h</includes>
    <incdepgraph>
      <node id="2013">
        <label>stdlib.h</label>
      </node>
      <node id="2014">
        <label>string.h</label>
      </node>
      <node id="2011">
        <label>E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c</label>
        <link refid="block.c"/>
        <childnode refid="2012" relation="include">
        </childnode>
        <childnode refid="2013" relation="include">
        </childnode>
        <childnode refid="2014" relation="include">
        </childnode>
      </node>
      <node id="2012">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="block_8c_1a30463aa9e07abedb8216acbd4548fbdc" prot="public" static="no">
        <name>WORD_ALIGN</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" line="85" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="block_8c_1a2905056776588600725679ad1791e700" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ilog2</definition>
        <argsstring>(unsigned int v)</argsstring>
        <name>ilog2</name>
        <param>
          <type>unsigned int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" line="34" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" bodystart="34" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="block_8c_1ab6d85544ab746e98fc63308f6bed27a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vorbis_block_init</definition>
        <argsstring>(vorbis_dsp_state *v, vorbis_block *vb)</argsstring>
        <name>vorbis_block_init</name>
        <param>
          <type><ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="structvorbis__block" kindref="compound">vorbis_block</ref> *</type>
          <declname>vb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" line="88" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" bodystart="88" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="block_8c_1a76a1e9def91a196cbbf17058bb6d5e97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* _vorbis_block_alloc</definition>
        <argsstring>(vorbis_block *vb, long bytes)</argsstring>
        <name>_vorbis_block_alloc</name>
        <param>
          <type><ref refid="structvorbis__block" kindref="compound">vorbis_block</ref> *</type>
          <declname>vb</declname>
        </param>
        <param>
          <type>long</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" line="103" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" bodystart="103" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="block_8c_1ad1b739df454f82dc2eda9985bde218de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _vorbis_block_ripcord</definition>
        <argsstring>(vorbis_block *vb)</argsstring>
        <name>_vorbis_block_ripcord</name>
        <param>
          <type><ref refid="structvorbis__block" kindref="compound">vorbis_block</ref> *</type>
          <declname>vb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" line="127" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" bodystart="127" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="block_8c_1a6a89cd06e8119b22a2d6a565e2d92c4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vorbis_block_clear</definition>
        <argsstring>(vorbis_block *vb)</argsstring>
        <name>vorbis_block_clear</name>
        <param>
          <type><ref refid="structvorbis__block" kindref="compound">vorbis_block</ref> *</type>
          <declname>vb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" line="149" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" bodystart="149" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="block_8c_1accfed12b8736f515f57f5adc8ac1ad91" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int _vds_shared_init</definition>
        <argsstring>(vorbis_dsp_state *v, vorbis_info *vi, int encp)</argsstring>
        <name>_vds_shared_init</name>
        <param>
          <type><ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>encp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" line="167" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" bodystart="167" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="block_8c_1abdcd5ee6f4e60c13505170a0f0ec752c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vorbis_analysis_init</definition>
        <argsstring>(vorbis_dsp_state *v, vorbis_info *vi)</argsstring>
        <name>vorbis_analysis_init</name>
        <param>
          <type><ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" line="269" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" bodystart="269" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="block_8c_1a3af19007415290a3f237e9a821bfe616" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vorbis_dsp_clear</definition>
        <argsstring>(vorbis_dsp_state *v)</argsstring>
        <name>vorbis_dsp_clear</name>
        <param>
          <type><ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" line="285" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" bodystart="285" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="block_8c_1ab57487095e7cb8ab66f57e6c9b6400cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float **</type>
        <definition>float** vorbis_analysis_buffer</definition>
        <argsstring>(vorbis_dsp_state *v, int vals)</argsstring>
        <name>vorbis_analysis_buffer</name>
        <param>
          <type><ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" line="355" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" bodystart="355" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="block_8c_1a6fc74a1987f89bb3a5f29e8eefd396a6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _preextrapolate_helper</definition>
        <argsstring>(vorbis_dsp_state *v)</argsstring>
        <name>_preextrapolate_helper</name>
        <param>
          <type><ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" line="382" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" bodystart="382" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="block_8c_1ae527e6764c45e6e8a23c60d777496adf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vorbis_analysis_wrote</definition>
        <argsstring>(vorbis_dsp_state *v, int vals)</argsstring>
        <name>vorbis_analysis_wrote</name>
        <param>
          <type><ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" line="415" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" bodystart="415" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="block_8c_1a0c75b86b435cd45905ff62e2b9c93ab1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vorbis_analysis_blockout</definition>
        <argsstring>(vorbis_dsp_state *v, vorbis_block *vb)</argsstring>
        <name>vorbis_analysis_blockout</name>
        <param>
          <type><ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="structvorbis__block" kindref="compound">vorbis_block</ref> *</type>
          <declname>vb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" line="479" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" bodystart="479" bodyend="638"/>
      </memberdef>
      <memberdef kind="function" id="block_8c_1ad650e1f6753a2644d735f605164c40f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vorbis_synthesis_restart</definition>
        <argsstring>(vorbis_dsp_state *v)</argsstring>
        <name>vorbis_synthesis_restart</name>
        <param>
          <type><ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" line="640" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" bodystart="640" bodyend="661"/>
      </memberdef>
      <memberdef kind="function" id="block_8c_1a44bb00553295f2a9088e169cf4a3eb07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vorbis_synthesis_init</definition>
        <argsstring>(vorbis_dsp_state *v, vorbis_info *vi)</argsstring>
        <name>vorbis_synthesis_init</name>
        <param>
          <type><ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" line="663" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" bodystart="663" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="block_8c_1acbcda429474c093c54fd9e2ffaee2547" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vorbis_synthesis_blockin</definition>
        <argsstring>(vorbis_dsp_state *v, vorbis_block *vb)</argsstring>
        <name>vorbis_synthesis_blockin</name>
        <param>
          <type><ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="structvorbis__block" kindref="compound">vorbis_block</ref> *</type>
          <declname>vb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" line="674" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" bodystart="674" bodyend="858"/>
      </memberdef>
      <memberdef kind="function" id="block_8c_1ac8d21b854dbcb022dab0b46521e9de31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vorbis_synthesis_pcmout</definition>
        <argsstring>(vorbis_dsp_state *v, float ***pcm)</argsstring>
        <name>vorbis_synthesis_pcmout</name>
        <param>
          <type><ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>float ***</type>
          <declname>pcm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" line="861" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" bodystart="861" bodyend="874"/>
      </memberdef>
      <memberdef kind="function" id="block_8c_1a722490a5814435380d29139adbca25ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vorbis_synthesis_read</definition>
        <argsstring>(vorbis_dsp_state *v, int n)</argsstring>
        <name>vorbis_synthesis_read</name>
        <param>
          <type><ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" line="876" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" bodystart="876" bodyend="880"/>
      </memberdef>
      <memberdef kind="function" id="block_8c_1a4e65e4bba683ae5bd185e2fcc24b3d94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vorbis_synthesis_lapout</definition>
        <argsstring>(vorbis_dsp_state *v, float ***pcm)</argsstring>
        <name>vorbis_synthesis_lapout</name>
        <param>
          <type><ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>float ***</type>
          <declname>pcm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" line="887" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" bodystart="887" bodyend="960"/>
      </memberdef>
      <memberdef kind="function" id="block_8c_1a3982773142635b2266cad2475ea2b837" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float *</type>
        <definition>float* vorbis_window</definition>
        <argsstring>(vorbis_dsp_state *v, int W)</argsstring>
        <name>vorbis_window</name>
        <param>
          <type><ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>W</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" line="962" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" bodystart="962" bodyend="970"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>THIS<sp/>FILE<sp/>IS<sp/>PART<sp/>OF<sp/>THE<sp/>OggVorbis<sp/>SOFTWARE<sp/>CODEC<sp/>SOURCE<sp/>CODE.<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>USE,<sp/>DISTRIBUTION<sp/>AND<sp/>REPRODUCTION<sp/>OF<sp/>THIS<sp/>LIBRARY<sp/>SOURCE<sp/>IS<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>GOVERNED<sp/>BY<sp/>A<sp/>BSD-STYLE<sp/>SOURCE<sp/>LICENSE<sp/>INCLUDED<sp/>WITH<sp/>THIS<sp/>SOURCE<sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>IN<sp/>&apos;COPYING&apos;.<sp/>PLEASE<sp/>READ<sp/>THESE<sp/>TERMS<sp/>BEFORE<sp/>DISTRIBUTING.<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>THE<sp/>OggVorbis<sp/>SOURCE<sp/>CODE<sp/>IS<sp/>(C)<sp/>COPYRIGHT<sp/>1994-2003<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>by<sp/>the<sp/>XIPHOPHORUS<sp/>Company<sp/>http://www.xiph.org/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>********************************************************************</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>function:<sp/>PCM<sp/>data<sp/>vector<sp/>blocking,<sp/>windowing<sp/>and<sp/>dis/reassembly</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>last<sp/>mod:<sp/>$Id:<sp/>block.c,v<sp/>1.75<sp/>2003/09/02<sp/>04:39:26<sp/>xiphmont<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>Handle<sp/>windowing,<sp/>overlap-add,<sp/>etc<sp/>of<sp/>the<sp/>PCM<sp/>vectors.<sp/><sp/>This<sp/>is<sp/>made</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>more<sp/>amusing<sp/>by<sp/>Vorbis&apos;<sp/>current<sp/>two<sp/>allowed<sp/>block<sp/>sizes.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../ogg/ogg.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../vorbis/codec.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;codec_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;window.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mdct.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lpc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;registry.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;misc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ilog2(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v){</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=0;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v)--v;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(v){</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>ret++;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>v&gt;&gt;=1;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>pcm<sp/>accumulator<sp/>examples<sp/>(not<sp/>exhaustive):</highlight></codeline>
<codeline lineno="45"><highlight class="comment"></highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>&lt;--------------<sp/>lW<sp/>----------------&gt;</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;---------------<sp/>W<sp/>----------------&gt;</highlight></codeline>
<codeline lineno="48"><highlight class="comment">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.....|.....<sp/><sp/><sp/><sp/><sp/><sp/><sp/>_______________<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="49"><highlight class="comment">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.&apos;&apos;&apos;<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;_---<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|\<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="50"><highlight class="comment">:.....&apos;&apos;&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|_____---<sp/>&apos;&apos;&apos;......|<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>\_______|</highlight></codeline>
<codeline lineno="51"><highlight class="comment">:.................|__________________|_______|__|______|</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|&lt;------<sp/>Sl<sp/>------&gt;|<sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>Sr<sp/>&lt;<sp/><sp/><sp/><sp/><sp/>|endW</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|beginSl<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|endSl<sp/><sp/>|<sp/><sp/>|endSr<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|beginW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|endlW<sp/><sp/>|beginSr</highlight></codeline>
<codeline lineno="55"><highlight class="comment"></highlight></codeline>
<codeline lineno="56"><highlight class="comment"></highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|&lt;<sp/>lW<sp/>&gt;|<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;---------------<sp/>W<sp/>----------------&gt;</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/>..<sp/><sp/>______________<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/>&apos;<sp/><sp/>`/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>---_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|___.&apos;___/`.<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>---_____|<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|_______|__|_______|_________________|</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>&gt;|Sl|&lt;<sp/><sp/><sp/><sp/><sp/><sp/>|&lt;------<sp/>Sr<sp/>-----&gt;|endW</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>|endSl<sp/><sp/>|beginSr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|endSr</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|beginW<sp/>|<sp/><sp/>|endlW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mult[0]<sp/>|beginSl<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mult[n]</highlight></codeline>
<codeline lineno="67"><highlight class="comment"></highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>&lt;--------------<sp/>lW<sp/>-----------------&gt;</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|&lt;--W--&gt;|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="comment">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>..............<sp/><sp/>___<sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="comment">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.&apos;&apos;&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|`/<sp/><sp/><sp/>\<sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="comment">:.....&apos;&apos;&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|/`....\|...|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="comment">:.........................|___|___|___|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|Sl<sp/>|Sr<sp/>|endW<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/>|endSr</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>|beginSr</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>|endSl</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|beginSl</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|beginW</highlight></codeline>
<codeline lineno="80"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>block<sp/>abstraction<sp/>setup<sp/>*********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WORD_ALIGN</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WORD_ALIGN<sp/>8</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vorbis_block_init(<ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref><sp/>*v,<sp/><ref refid="structvorbis__block" kindref="compound">vorbis_block</ref><sp/>*vb){</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>memset(vb,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*vb));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>vb-&gt;vd=v;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>vb-&gt;localalloc=0;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>vb-&gt;localstore=NULL;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;analysisp){</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvorbis__block__internal" kindref="compound">vorbis_block_internal</ref><sp/>*vbi=</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vb-&gt;internal=_ogg_calloc(1,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structvorbis__block__internal" kindref="compound">vorbis_block_internal</ref>));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>oggpack_writeinit(&amp;vb-&gt;opb);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>vbi-&gt;ampmax=-9999;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*_vorbis_block_alloc(<ref refid="structvorbis__block" kindref="compound">vorbis_block</ref><sp/>*vb,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>bytes){</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>bytes=(bytes+(WORD_ALIGN-1))<sp/>&amp;<sp/>~(WORD_ALIGN-1);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bytes+vb-&gt;localtop&gt;vb-&gt;localalloc){</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>can&apos;t<sp/>just<sp/>_ogg_realloc...<sp/>there<sp/>are<sp/>outstanding<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vb-&gt;localstore){</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structalloc__chain" kindref="compound">alloc_chain</ref><sp/>*link=_ogg_malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*link));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vb-&gt;totaluse+=vb-&gt;localtop;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>link-&gt;next=vb-&gt;reap;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>link-&gt;ptr=vb-&gt;localstore;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vb-&gt;reap=link;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>highly<sp/>conservative<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>vb-&gt;localalloc=bytes;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>vb-&gt;localstore=_ogg_malloc(vb-&gt;localalloc);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>vb-&gt;localtop=0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ret=(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)vb-&gt;localstore)+vb-&gt;localtop);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>vb-&gt;localtop+=bytes;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>reap<sp/>the<sp/>chain,<sp/>pull<sp/>the<sp/>ripcord<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_vorbis_block_ripcord(<ref refid="structvorbis__block" kindref="compound">vorbis_block</ref><sp/>*vb){</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>reap<sp/>the<sp/>chain<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structalloc__chain" kindref="compound">alloc_chain</ref><sp/>*reap=vb-&gt;reap;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(reap){</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structalloc__chain" kindref="compound">alloc_chain</ref><sp/>*next=reap-&gt;next;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>_ogg_free(reap-&gt;ptr);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(reap,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*reap));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>_ogg_free(reap);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>reap=next;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>consolidate<sp/>storage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vb-&gt;totaluse){</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>vb-&gt;localstore=_ogg_realloc(vb-&gt;localstore,vb-&gt;totaluse+vb-&gt;localalloc);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>vb-&gt;localalloc+=vb-&gt;totaluse;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>vb-&gt;totaluse=0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>pull<sp/>the<sp/>ripcord<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>vb-&gt;localtop=0;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>vb-&gt;reap=NULL;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vorbis_block_clear(<ref refid="structvorbis__block" kindref="compound">vorbis_block</ref><sp/>*vb){</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vb-&gt;vd)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vb-&gt;vd-&gt;analysisp)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>oggpack_writeclear(&amp;vb-&gt;opb);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>_vorbis_block_ripcord(vb);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vb-&gt;localstore)_ogg_free(vb-&gt;localstore);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vb-&gt;internal)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>_ogg_free(vb-&gt;internal);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>memset(vb,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*vb));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Analysis<sp/>side<sp/>code,<sp/>but<sp/>directly<sp/>related<sp/>to<sp/>blocking.<sp/><sp/>Thus<sp/>it&apos;s</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/>here<sp/>and<sp/>not<sp/>in<sp/>analysis.c<sp/>(which<sp/>is<sp/>for<sp/>analysis<sp/>transforms<sp/>only).</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/>The<sp/>init<sp/>is<sp/>here<sp/>because<sp/>some<sp/>of<sp/>it<sp/>is<sp/>shared<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_vds_shared_init(<ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref><sp/>*v,<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>encp){</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><ref refid="structprivate__state" kindref="compound">private_state</ref><sp/>*b=NULL;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hs;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ci==NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>hs=ci-&gt;halfrate_flag;<sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>memset(v,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*v));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>b=v-&gt;backend_state=_ogg_calloc(1,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*b));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>v-&gt;vi=vi;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>b-&gt;modebits=ilog2(ci-&gt;modes);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>b-&gt;transform[0]=_ogg_calloc(VI_TRANSFORMB,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*b-&gt;transform[0]));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>b-&gt;transform[1]=_ogg_calloc(VI_TRANSFORMB,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*b-&gt;transform[1]));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>MDCT<sp/>is<sp/>tranform<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>b-&gt;transform[0][0]=_ogg_calloc(1,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmdct__lookup" kindref="compound">mdct_lookup</ref>));</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>b-&gt;transform[1][0]=_ogg_calloc(1,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmdct__lookup" kindref="compound">mdct_lookup</ref>));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>mdct_init(b-&gt;transform[0][0],ci-&gt;blocksizes[0]&gt;&gt;hs);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>mdct_init(b-&gt;transform[1][0],ci-&gt;blocksizes[1]&gt;&gt;hs);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Vorbis<sp/>I<sp/>uses<sp/>only<sp/>window<sp/>type<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>b-&gt;window[0]=ilog2(ci-&gt;blocksizes[0])-6;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>b-&gt;window[1]=ilog2(ci-&gt;blocksizes[1])-6;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(encp){<sp/></highlight><highlight class="comment">/*<sp/>encode/decode<sp/>differ<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>analysis<sp/>always<sp/>needs<sp/>an<sp/>fft<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>drft_init(&amp;b-&gt;fft_look[0],ci-&gt;blocksizes[0]);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>drft_init(&amp;b-&gt;fft_look[1],ci-&gt;blocksizes[1]);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>finish<sp/>the<sp/>codebooks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ci-&gt;fullbooks){</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ci-&gt;fullbooks=_ogg_calloc(ci-&gt;books,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ci-&gt;fullbooks));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ci-&gt;books;i++)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_book_init_encode(ci-&gt;fullbooks+i,ci-&gt;book_param[i]);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;psy=_ogg_calloc(ci-&gt;psys,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*b-&gt;psy));</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ci-&gt;psys;i++){</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_vp_psy_init(b-&gt;psy+i,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci-&gt;psy_param[i],</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;ci-&gt;psy_g_param,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci-&gt;blocksizes[ci-&gt;psy_param[i]-&gt;blockflag]/2,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vi-&gt;rate);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;analysisp=1;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>finish<sp/>the<sp/>codebooks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ci-&gt;fullbooks){</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ci-&gt;fullbooks=_ogg_calloc(ci-&gt;books,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ci-&gt;fullbooks));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ci-&gt;books;i++){</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_book_init_decode(ci-&gt;fullbooks+i,ci-&gt;book_param[i]);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>decode<sp/>codebooks<sp/>are<sp/>now<sp/>standalone<sp/>after<sp/>init<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_staticbook_destroy(ci-&gt;book_param[i]);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>ci-&gt;book_param[i]=NULL;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>the<sp/>storage<sp/>vectors.<sp/>blocksize[1]<sp/>is<sp/>small<sp/>for<sp/>encode,</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>but<sp/>the<sp/>correct<sp/>size<sp/>for<sp/>decode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>v-&gt;pcm_storage=ci-&gt;blocksizes[1];</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>v-&gt;pcm=_ogg_malloc(vi-&gt;channels*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*v-&gt;pcm));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>v-&gt;pcmret=_ogg_malloc(vi-&gt;channels*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*v-&gt;pcmret));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vi-&gt;channels;i++)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;pcm[i]=_ogg_calloc(v-&gt;pcm_storage,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*v-&gt;pcm[i]));</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>all<sp/>1<sp/>(large<sp/>block)<sp/>or<sp/>0<sp/>(small<sp/>block)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>explicitly<sp/>set<sp/>for<sp/>the<sp/>sake<sp/>of<sp/>clarity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>v-&gt;lW=0;<sp/></highlight><highlight class="comment">/*<sp/>previous<sp/>window<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>v-&gt;W=0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>current<sp/>window<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>all<sp/>vector<sp/>indexes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>v-&gt;centerW=ci-&gt;blocksizes[1]/2;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>v-&gt;pcm_current=v-&gt;centerW;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>all<sp/>the<sp/>backend<sp/>lookups<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>b-&gt;flr=_ogg_calloc(ci-&gt;floors,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*b-&gt;flr));</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>b-&gt;residue=_ogg_calloc(ci-&gt;residues,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*b-&gt;residue));</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ci-&gt;floors;i++)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;flr[i]=_floor_P[ci-&gt;floor_type[i]]-&gt;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>look(v,ci-&gt;floor_param[i]);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ci-&gt;residues;i++)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;residue[i]=_residue_P[ci-&gt;residue_type[i]]-&gt;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>look(v,ci-&gt;residue_param[i]);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>arbitrary<sp/>settings<sp/>and<sp/>spec-mandated<sp/>numbers<sp/>get<sp/>filled<sp/>in<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vorbis_analysis_init(<ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref><sp/>*v,<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi){</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><ref refid="structprivate__state" kindref="compound">private_state</ref><sp/>*b=NULL;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_vds_shared_init(v,vi,1))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>b=v-&gt;backend_state;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>b-&gt;psy_g_look=_vp_global_look(vi);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>the<sp/>envelope<sp/>state<sp/>storage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>b-&gt;ve=_ogg_calloc(1,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*b-&gt;ve));</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>_ve_envelope_init(b-&gt;ve,vi);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>vorbis_bitrate_init(vi,&amp;b-&gt;bms);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vorbis_dsp_clear(<ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref><sp/>*v){</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v){</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi=v-&gt;vi;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci=(vi?vi-&gt;codec_setup:NULL);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structprivate__state" kindref="compound">private_state</ref><sp/>*b=v-&gt;backend_state;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b){</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;ve){</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>_ve_envelope_clear(b-&gt;ve);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>_ogg_free(b-&gt;ve);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;transform[0]){</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>mdct_clear(b-&gt;transform[0][0]);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>_ogg_free(b-&gt;transform[0][0]);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>_ogg_free(b-&gt;transform[0]);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;transform[1]){</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>mdct_clear(b-&gt;transform[1][0]);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>_ogg_free(b-&gt;transform[1][0]);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>_ogg_free(b-&gt;transform[1]);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;flr){</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ci-&gt;floors;i++)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_floor_P[ci-&gt;floor_type[i]]-&gt;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_look(b-&gt;flr[i]);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>_ogg_free(b-&gt;flr);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;residue){</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ci-&gt;residues;i++)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_residue_P[ci-&gt;residue_type[i]]-&gt;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_look(b-&gt;residue[i]);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>_ogg_free(b-&gt;residue);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;psy){</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ci-&gt;psys;i++)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_vp_psy_clear(b-&gt;psy+i);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>_ogg_free(b-&gt;psy);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;psy_g_look)_vp_global_free(b-&gt;psy_g_look);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vorbis_bitrate_clear(&amp;b-&gt;bms);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drft_clear(&amp;b-&gt;fft_look[0]);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drft_clear(&amp;b-&gt;fft_look[1]);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;pcm){</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vi-&gt;channels;i++)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;pcm[i])_ogg_free(v-&gt;pcm[i]);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_ogg_free(v-&gt;pcm);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;pcmret)_ogg_free(v-&gt;pcmret);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b){</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>header,<sp/>header1,<sp/>header2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;header)_ogg_free(b-&gt;header);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;header1)_ogg_free(b-&gt;header1);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;header2)_ogg_free(b-&gt;header2);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_ogg_free(b);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(v,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*v));</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>**vorbis_analysis_buffer(<ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref><sp/>*v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vals){</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi=v-&gt;vi;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><ref refid="structprivate__state" kindref="compound">private_state</ref><sp/>*b=v-&gt;backend_state;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>header,<sp/>header1,<sp/>header2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;header)_ogg_free(b-&gt;header);b-&gt;header=NULL;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;header1)_ogg_free(b-&gt;header1);b-&gt;header1=NULL;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;header2)_ogg_free(b-&gt;header2);b-&gt;header2=NULL;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>we<sp/>have<sp/>enough<sp/>storage<sp/>space<sp/>for<sp/>the<sp/>requested<sp/>buffer?<sp/>If<sp/>not,</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>expand<sp/>the<sp/>PCM<sp/>(and<sp/>envelope)<sp/>storage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;pcm_current+vals&gt;=v-&gt;pcm_storage){</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;pcm_storage=v-&gt;pcm_current+vals*2;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vi-&gt;channels;i++){</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;pcm[i]=_ogg_realloc(v-&gt;pcm[i],v-&gt;pcm_storage*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*v-&gt;pcm[i]));</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vi-&gt;channels;i++)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;pcmret[i]=v-&gt;pcm[i]+v-&gt;pcm_current;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(v-&gt;pcmret);</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_preextrapolate_helper(<ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref><sp/>*v){</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>order=32;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*lpc=alloca(order*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*lpc));</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*work=alloca(v-&gt;pcm_current*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*work));</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>v-&gt;preextrapolate=1;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;pcm_current-v-&gt;centerW&gt;order*2){<sp/></highlight><highlight class="comment">/*<sp/>safety<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;v-&gt;vi-&gt;channels;i++){</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>need<sp/>to<sp/>run<sp/>the<sp/>extrapolation<sp/>in<sp/>reverse!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;v-&gt;pcm_current;j++)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>work[j]=v-&gt;pcm[i][v-&gt;pcm_current-j-1];</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>prime<sp/>as<sp/>above<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vorbis_lpc_from_data(work,lpc,v-&gt;pcm_current-v-&gt;centerW,order);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>run<sp/>the<sp/>predictor<sp/>filter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vorbis_lpc_predict(lpc,work+v-&gt;pcm_current-v-&gt;centerW-order,</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>order,</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>work+v-&gt;pcm_current-v-&gt;centerW,</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;centerW);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;v-&gt;pcm_current;j++)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;pcm[i][v-&gt;pcm_current-j-1]=work[j];</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>call<sp/>with<sp/>val&lt;=0<sp/>to<sp/>set<sp/>eof<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vorbis_analysis_wrote(<ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref><sp/>*v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vals){</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi=v-&gt;vi;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vals&lt;=0){</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>order=32;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*lpc=alloca(order*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*lpc));</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>it<sp/>wasn&apos;t<sp/>done<sp/>earlier<sp/>(very<sp/>short<sp/>sample)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!v-&gt;preextrapolate)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_preextrapolate_helper(v);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We&apos;re<sp/>encoding<sp/>the<sp/>end<sp/>of<sp/>the<sp/>stream.<sp/><sp/>Just<sp/>make<sp/>sure<sp/>we<sp/>have</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[at<sp/>least]<sp/>a<sp/>few<sp/>full<sp/>blocks<sp/>of<sp/>zeroes<sp/>at<sp/>the<sp/>end.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>actually,<sp/>we<sp/>don&apos;t<sp/>want<sp/>zeroes;<sp/>that<sp/>could<sp/>drop<sp/>a<sp/>large</highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amplitude<sp/>off<sp/>a<sp/>cliff,<sp/>creating<sp/>spread<sp/>spectrum<sp/>noise<sp/>that<sp/>will</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suck<sp/>to<sp/>encode.<sp/><sp/>Extrapolate<sp/>for<sp/>the<sp/>sake<sp/>of<sp/>cleanliness.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_analysis_buffer(v,ci-&gt;blocksizes[1]*3);<sp/></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;eofflag=v-&gt;pcm_current;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;pcm_current+=ci-&gt;blocksizes[1]*3;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vi-&gt;channels;i++){</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;eofflag&gt;order*2){</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>extrapolate<sp/>with<sp/>LPC<sp/>to<sp/>fill<sp/>in<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>a<sp/>predictor<sp/>filter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>n=v-&gt;eofflag;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n&gt;ci-&gt;blocksizes[1])n=ci-&gt;blocksizes[1];</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_lpc_from_data(v-&gt;pcm[i]+v-&gt;eofflag-n,lpc,n,order);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>run<sp/>the<sp/>predictor<sp/>filter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_lpc_predict(lpc,v-&gt;pcm[i]+v-&gt;eofflag-order,order,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;pcm[i]+v-&gt;eofflag,v-&gt;pcm_current-v-&gt;eofflag);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>enough<sp/>data<sp/>to<sp/>extrapolate<sp/>(unlikely<sp/>to<sp/>happen<sp/>due<sp/>to</highlight></codeline>
<codeline lineno="453"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>guarding<sp/>the<sp/>overlap,<sp/>but<sp/>bulletproof<sp/>in<sp/>case<sp/>that</highlight></codeline>
<codeline lineno="454"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assumtion<sp/>goes<sp/>away).<sp/>zeroes<sp/>will<sp/>do.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(v-&gt;pcm[i]+v-&gt;eofflag,0,</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(v-&gt;pcm_current-v-&gt;eofflag)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*v-&gt;pcm[i]));</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;pcm_current+vals&gt;v-&gt;pcm_storage)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;pcm_current+=vals;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>may<sp/>want<sp/>to<sp/>reverse<sp/>extrapolate<sp/>the<sp/>beginning<sp/>of<sp/>a<sp/>stream</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>too...<sp/>in<sp/>case<sp/>we&apos;re<sp/>beginning<sp/>on<sp/>a<sp/>cliff!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clumsy,<sp/>but<sp/>simple.<sp/><sp/>It<sp/>only<sp/>runs<sp/>once,<sp/>so<sp/>simple<sp/>is<sp/>good.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!v-&gt;preextrapolate<sp/>&amp;&amp;<sp/>v-&gt;pcm_current-v-&gt;centerW&gt;ci-&gt;blocksizes[1])</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_preextrapolate_helper(v);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>do<sp/>the<sp/>deltas,<sp/>envelope<sp/>shaping,<sp/>pre-echo<sp/>and<sp/>determine<sp/>the<sp/>size<sp/>of</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/><sp/><sp/>the<sp/>next<sp/>block<sp/>on<sp/>which<sp/>to<sp/>continue<sp/>analysis<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vorbis_analysis_blockout(<ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref><sp/>*v,<ref refid="structvorbis__block" kindref="compound">vorbis_block</ref><sp/>*vb){</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi=v-&gt;vi;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><ref refid="structprivate__state" kindref="compound">private_state</ref><sp/>*b=v-&gt;backend_state;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__look__psy__global" kindref="compound">vorbis_look_psy_global</ref><sp/>*g=b-&gt;psy_g_look;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>beginW=v-&gt;centerW-ci-&gt;blocksizes[v-&gt;W]/2,centerNext;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__block__internal" kindref="compound">vorbis_block_internal</ref><sp/>*vbi=(<ref refid="structvorbis__block__internal" kindref="compound">vorbis_block_internal</ref><sp/>*)vb-&gt;internal;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>to<sp/>see<sp/>if<sp/>we&apos;re<sp/>started...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!v-&gt;preextrapolate)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>to<sp/>see<sp/>if<sp/>we&apos;re<sp/>done...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;eofflag==-1)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>By<sp/>our<sp/>invariant,<sp/>we<sp/>have<sp/>lW,<sp/>W<sp/>and<sp/>centerW<sp/>set.<sp/><sp/>Search<sp/>for</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>the<sp/>next<sp/>boundary<sp/>so<sp/>we<sp/>can<sp/>determine<sp/>nW<sp/>(the<sp/>next<sp/>window<sp/>size)</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>which<sp/>lets<sp/>us<sp/>compute<sp/>the<sp/>shape<sp/>of<sp/>the<sp/>current<sp/>block&apos;s<sp/>window<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>do<sp/>an<sp/>envelope<sp/>search<sp/>even<sp/>on<sp/>a<sp/>single<sp/>blocksize;<sp/>we<sp/>may<sp/>still</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>be<sp/>throwing<sp/>more<sp/>bits<sp/>at<sp/>impulses,<sp/>and<sp/>envelope<sp/>search<sp/>handles</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>marking<sp/>impulses<sp/>too.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>bp=_ve_envelope_search(v);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bp==-1){</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;eofflag==0)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>enough<sp/>data<sp/>currently<sp/>to<sp/>search<sp/>for<sp/>a</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>full<sp/>long<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;nW=0;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ci-&gt;blocksizes[0]==ci-&gt;blocksizes[1])</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;nW=0;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;nW=bp;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>centerNext=v-&gt;centerW+ci-&gt;blocksizes[v-&gt;W]/4+ci-&gt;blocksizes[v-&gt;nW]/4;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>center<sp/>of<sp/>next<sp/>block<sp/>+<sp/>next<sp/>block<sp/>maximum<sp/>right<sp/>side.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>blockbound=centerNext+ci-&gt;blocksizes[v-&gt;nW]/2;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;pcm_current&lt;blockbound)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>enough<sp/>data<sp/>yet;</highlight></codeline>
<codeline lineno="524"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>although<sp/>this<sp/>check<sp/>is</highlight></codeline>
<codeline lineno="525"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>less<sp/>strict<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="526"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ve_envelope_search,</highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>search<sp/>is<sp/>not<sp/>run</highlight></codeline>
<codeline lineno="528"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>we<sp/>only<sp/>use<sp/>one</highlight></codeline>
<codeline lineno="529"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>fill<sp/>in<sp/>the<sp/>block.<sp/><sp/>Note<sp/>that<sp/>for<sp/>a<sp/>short<sp/>window,<sp/>lW<sp/>and<sp/>nW<sp/>are<sp/>*short*</highlight></codeline>
<codeline lineno="535"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>regardless<sp/>of<sp/>actual<sp/>settings<sp/>in<sp/>the<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>_vorbis_block_ripcord(vb);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>vb-&gt;lW=v-&gt;lW;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>vb-&gt;W=v-&gt;W;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>vb-&gt;nW=v-&gt;nW;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;W){</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!v-&gt;lW<sp/>||<sp/>!v-&gt;nW){</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vbi-&gt;blocktype=BLOCKTYPE_TRANSITION;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*fprintf(stderr,&quot;-&quot;);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vbi-&gt;blocktype=BLOCKTYPE_LONG;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*fprintf(stderr,&quot;_&quot;);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_ve_envelope_mark(v)){</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vbi-&gt;blocktype=BLOCKTYPE_IMPULSE;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*fprintf(stderr,&quot;|&quot;);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vbi-&gt;blocktype=BLOCKTYPE_PADDING;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*fprintf(stderr,&quot;.&quot;);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>vb-&gt;vd=v;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>vb-&gt;sequence=v-&gt;sequence++;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>vb-&gt;granulepos=v-&gt;granulepos;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>vb-&gt;pcmend=ci-&gt;blocksizes[v-&gt;W];</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>the<sp/>vectors;<sp/>this<sp/>uses<sp/>the<sp/>local<sp/>storage<sp/>in<sp/>vb<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>tracks<sp/>&apos;strongest<sp/>peak&apos;<sp/>for<sp/>later<sp/>psychoacoustics<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>moved<sp/>to<sp/>the<sp/>global<sp/>psy<sp/>state;<sp/>clean<sp/>this<sp/>mess<sp/>up<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vbi-&gt;ampmax&gt;g-&gt;ampmax)g-&gt;ampmax=vbi-&gt;ampmax;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>g-&gt;ampmax=_vp_ampmax_decay(g-&gt;ampmax,v);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>vbi-&gt;ampmax=g-&gt;ampmax;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>vb-&gt;pcm=_vorbis_block_alloc(vb,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*vb-&gt;pcm)*vi-&gt;channels);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>vbi-&gt;pcmdelay=_vorbis_block_alloc(vb,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*vbi-&gt;pcmdelay)*vi-&gt;channels);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vi-&gt;channels;i++){</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>vbi-&gt;pcmdelay[i]=</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_vorbis_block_alloc(vb,(vb-&gt;pcmend+beginW)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*vbi-&gt;pcmdelay[i]));</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(vbi-&gt;pcmdelay[i],v-&gt;pcm[i],(vb-&gt;pcmend+beginW)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*vbi-&gt;pcmdelay[i]));</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>vb-&gt;pcm[i]=vbi-&gt;pcmdelay[i]+beginW;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>before<sp/>we<sp/>added<sp/>the<sp/>delay<sp/></highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vb-&gt;pcm[i]=_vorbis_block_alloc(vb,vb-&gt;pcmend*sizeof(*vb-&gt;pcm[i]));</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(vb-&gt;pcm[i],v-&gt;pcm[i]+beginW,ci-&gt;blocksizes[v-&gt;W]*sizeof(*vb-&gt;pcm[i]));</highlight></codeline>
<codeline lineno="586"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>handle<sp/>eof<sp/>detection:<sp/>eof==0<sp/>means<sp/>that<sp/>we&apos;ve<sp/>not<sp/>yet<sp/>received<sp/>EOF</highlight></codeline>
<codeline lineno="591"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eof&gt;0<sp/><sp/>marks<sp/>the<sp/>last<sp/>&apos;real&apos;<sp/>sample<sp/>in<sp/>pcm[]</highlight></codeline>
<codeline lineno="592"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eof&lt;0<sp/><sp/>&apos;no<sp/>more<sp/>to<sp/>do&apos;;<sp/>doesn&apos;t<sp/>get<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;eofflag){</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;centerW&gt;=v-&gt;eofflag){</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;eofflag=-1;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vb-&gt;eofflag=1;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(1);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>storage<sp/>vectors<sp/>and<sp/>clean<sp/>up<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_centerNext=ci-&gt;blocksizes[1]/2;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>movementW=centerNext-new_centerNext;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(movementW&gt;0){</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_ve_envelope_shift(b-&gt;ve,movementW);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;pcm_current-=movementW;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vi-&gt;channels;i++)</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>memmove(v-&gt;pcm[i],v-&gt;pcm[i]+movementW,</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;pcm_current*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*v-&gt;pcm[i]));</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;lW=v-&gt;W;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;W=v-&gt;nW;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;centerW=new_centerNext;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;eofflag){</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;eofflag-=movementW;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;eofflag&lt;=0)v-&gt;eofflag=-1;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>do<sp/>not<sp/>add<sp/>padding<sp/>to<sp/>end<sp/>of<sp/>stream!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;centerW&gt;=v-&gt;eofflag){</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;granulepos+=movementW-(v-&gt;centerW-v-&gt;eofflag);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;granulepos+=movementW;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;granulepos+=movementW;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>done<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(1);</highlight></codeline>
<codeline lineno="638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vorbis_synthesis_restart(<ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref><sp/>*v){</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi=v-&gt;vi;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hs;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!v-&gt;backend_state)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!vi)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ci)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>hs=ci-&gt;halfrate_flag;<sp/></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/>v-&gt;centerW=ci-&gt;blocksizes[1]&gt;&gt;(hs+1);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/>v-&gt;pcm_current=v-&gt;centerW&gt;&gt;hs;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/>v-&gt;pcm_returned=-1;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>v-&gt;granulepos=-1;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>v-&gt;sequence=-1;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>v-&gt;eofflag=0;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/>((<ref refid="structprivate__state" kindref="compound">private_state</ref><sp/>*)(v-&gt;backend_state))-&gt;sample_count=-1;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vorbis_synthesis_init(<ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref><sp/>*v,<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi){</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_vds_shared_init(v,vi,0))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/>vorbis_synthesis_restart(v);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Unlike<sp/>in<sp/>analysis,<sp/>the<sp/>window<sp/>is<sp/>only<sp/>partially<sp/>applied<sp/>for<sp/>each</highlight></codeline>
<codeline lineno="671"><highlight class="comment"><sp/><sp/><sp/>block.<sp/><sp/>The<sp/>time<sp/>domain<sp/>envelope<sp/>is<sp/>not<sp/>yet<sp/>handled<sp/>at<sp/>the<sp/>point<sp/>of</highlight></codeline>
<codeline lineno="672"><highlight class="comment"><sp/><sp/><sp/>calling<sp/>(as<sp/>it<sp/>relies<sp/>on<sp/>the<sp/>previous<sp/>block).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vorbis_synthesis_blockin(<ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref><sp/>*v,<ref refid="structvorbis__block" kindref="compound">vorbis_block</ref><sp/>*vb){</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi=v-&gt;vi;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><ref refid="structprivate__state" kindref="compound">private_state</ref><sp/>*b=v-&gt;backend_state;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hs=ci-&gt;halfrate_flag;<sp/></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!vb)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;pcm_current&gt;v-&gt;pcm_returned<sp/><sp/>&amp;&amp;<sp/>v-&gt;pcm_returned!=-1)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/>v-&gt;lW=v-&gt;W;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/>v-&gt;W=vb-&gt;W;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/>v-&gt;nW=-1;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((v-&gt;sequence==-1)||</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(v-&gt;sequence+1<sp/>!=<sp/>vb-&gt;sequence)){</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;granulepos=-1;<sp/></highlight><highlight class="comment">/*<sp/>out<sp/>of<sp/>sequence;<sp/>lose<sp/>count<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;sample_count=-1;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/>v-&gt;sequence=vb-&gt;sequence;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vb-&gt;pcm){<sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>pcm<sp/>to<sp/>process<sp/>if<sp/>vorbis_synthesis_trackonly<sp/></highlight></codeline>
<codeline lineno="697"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>was<sp/>called<sp/>on<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n=ci-&gt;blocksizes[v-&gt;W]&gt;&gt;(hs+1);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n0=ci-&gt;blocksizes[0]&gt;&gt;(hs+1);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n1=ci-&gt;blocksizes[1]&gt;&gt;(hs+1);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thisCenter;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prevCenter;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;glue_bits+=vb-&gt;glue_bits;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;time_bits+=vb-&gt;time_bits;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;floor_bits+=vb-&gt;floor_bits;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;res_bits+=vb-&gt;res_bits;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;centerW){</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thisCenter=n1;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prevCenter=0;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thisCenter=0;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prevCenter=n1;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>v-&gt;pcm<sp/>is<sp/>now<sp/>used<sp/>like<sp/>a<sp/>two-stage<sp/>double<sp/>buffer.<sp/><sp/>We<sp/>don&apos;t<sp/>want</highlight></codeline>
<codeline lineno="719"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>have<sp/>to<sp/>constantly<sp/>shift<sp/>*or*<sp/>adjust<sp/>memory<sp/>usage.<sp/><sp/>Don&apos;t</highlight></codeline>
<codeline lineno="720"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accept<sp/>a<sp/>new<sp/>block<sp/>until<sp/>the<sp/>old<sp/>is<sp/>shifted<sp/>out<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;vi-&gt;channels;j++){</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>overlap/add<sp/>section<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;lW){</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;W){</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>large/large<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*w=_vorbis_window_get(b-&gt;window[1]-hs);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pcm=v-&gt;pcm[j]+prevCenter;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*p=vb-&gt;pcm[j];</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n1;i++)</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcm[i]=pcm[i]*w[n1-i-1]<sp/>+<sp/>p[i]*w[i];</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>large/small<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*w=_vorbis_window_get(b-&gt;window[0]-hs);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pcm=v-&gt;pcm[j]+prevCenter+n1/2-n0/2;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*p=vb-&gt;pcm[j];</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n0;i++)</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcm[i]=pcm[i]*w[n0-i-1]<sp/>+p[i]*w[i];</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;W){</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>small/large<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*w=_vorbis_window_get(b-&gt;window[0]-hs);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pcm=v-&gt;pcm[j]+prevCenter;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*p=vb-&gt;pcm[j]+n1/2-n0/2;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n0;i++)</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcm[i]=pcm[i]*w[n0-i-1]<sp/>+p[i]*w[i];</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;i&lt;n1/2+n0/2;i++)</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcm[i]=p[i];</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>small/small<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*w=_vorbis_window_get(b-&gt;window[0]-hs);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pcm=v-&gt;pcm[j]+prevCenter;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*p=vb-&gt;pcm[j];</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n0;i++)</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcm[i]=pcm[i]*w[n0-i-1]<sp/>+p[i]*w[i];</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>copy<sp/>section<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pcm=v-&gt;pcm[j]+thisCenter;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*p=vb-&gt;pcm[j]+n;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n;i++)</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pcm[i]=p[i];</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;centerW)</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;centerW=0;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;centerW=n1;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>deal<sp/>with<sp/>initial<sp/>packet<sp/>state;<sp/>we<sp/>do<sp/>this<sp/>using<sp/>the<sp/>explicit</highlight></codeline>
<codeline lineno="775"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcm_returned==-1<sp/>flag<sp/>otherwise<sp/>we&apos;re<sp/>sensitive<sp/>to<sp/>first<sp/>block</highlight></codeline>
<codeline lineno="776"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>being<sp/>short<sp/>or<sp/>long<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;pcm_returned==-1){</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;pcm_returned=thisCenter;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;pcm_current=thisCenter;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;pcm_returned=prevCenter;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;pcm_current=prevCenter+</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>((ci-&gt;blocksizes[v-&gt;lW]/4+</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>ci-&gt;blocksizes[v-&gt;W]/4)&gt;&gt;hs);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>track<sp/>the<sp/>frame<sp/>number...<sp/>This<sp/>is<sp/>for<sp/>convenience,<sp/>but<sp/>also</highlight></codeline>
<codeline lineno="791"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>making<sp/>sure<sp/>our<sp/>last<sp/>packet<sp/>doesn&apos;t<sp/>end<sp/>with<sp/>added<sp/>padding.<sp/><sp/>If</highlight></codeline>
<codeline lineno="792"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>the<sp/>last<sp/>packet<sp/>is<sp/>partial,<sp/>the<sp/>number<sp/>of<sp/>samples<sp/>we&apos;ll<sp/>have<sp/>to</highlight></codeline>
<codeline lineno="793"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>return<sp/>will<sp/>be<sp/>past<sp/>the<sp/>vb-&gt;granulepos.</highlight></codeline>
<codeline lineno="794"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="795"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>not<sp/>foolproof!<sp/><sp/>It<sp/>will<sp/>be<sp/>confused<sp/>if<sp/>we<sp/>begin</highlight></codeline>
<codeline lineno="796"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>decoding<sp/>at<sp/>the<sp/>last<sp/>page<sp/>after<sp/>a<sp/>seek<sp/>or<sp/>hole.<sp/><sp/>In<sp/>that<sp/>case,</highlight></codeline>
<codeline lineno="797"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>we<sp/>don&apos;t<sp/>have<sp/>a<sp/>starting<sp/>point<sp/>to<sp/>judge<sp/>where<sp/>the<sp/>last<sp/>frame</highlight></codeline>
<codeline lineno="798"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>is.<sp/><sp/>For<sp/>this<sp/>reason,<sp/>vorbisfile<sp/>will<sp/>always<sp/>try<sp/>to<sp/>make<sp/>sure</highlight></codeline>
<codeline lineno="799"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>it<sp/>reads<sp/>the<sp/>last<sp/>two<sp/>marked<sp/>pages<sp/>in<sp/>proper<sp/>sequence<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;sample_count==-1){</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;sample_count=0;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;sample_count+=ci-&gt;blocksizes[v-&gt;lW]/4+ci-&gt;blocksizes[v-&gt;W]/4;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;granulepos==-1){</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vb-&gt;granulepos!=-1){<sp/></highlight><highlight class="comment">/*<sp/>only<sp/>set<sp/>if<sp/>we<sp/>have<sp/>a<sp/>position<sp/>to<sp/>set<sp/>to<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;granulepos=vb-&gt;granulepos;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>is<sp/>this<sp/>a<sp/>short<sp/>page?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;sample_count&gt;v-&gt;granulepos){</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>corner<sp/>case;<sp/>if<sp/>this<sp/>is<sp/>both<sp/>the<sp/>first<sp/>and<sp/>last<sp/>audio<sp/>page,</highlight></codeline>
<codeline lineno="815"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>then<sp/>spec<sp/>says<sp/>the<sp/>end<sp/>is<sp/>cut,<sp/>not<sp/>beginning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vb-&gt;eofflag){</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>trim<sp/>the<sp/>end<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>preceeding<sp/>granulepos;<sp/>assume<sp/>we<sp/>started<sp/>at<sp/>zero<sp/>(we&apos;d</highlight></codeline>
<codeline lineno="819"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>have<sp/>to<sp/>in<sp/>a<sp/>short<sp/>single-page<sp/>stream)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>granulepos<sp/>could<sp/>be<sp/>-1<sp/>due<sp/>to<sp/>a<sp/>seek,<sp/>but<sp/>that<sp/>would<sp/>result</highlight></codeline>
<codeline lineno="821"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>a<sp/>long<sp/>count,<sp/>not<sp/>short<sp/>count<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;pcm_current-=(b-&gt;sample_count-v-&gt;granulepos)&gt;&gt;hs;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>trim<sp/>the<sp/>beginning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;pcm_returned+=(b-&gt;sample_count-v-&gt;granulepos)&gt;&gt;hs;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;pcm_returned&gt;v-&gt;pcm_current)</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;pcm_returned=v-&gt;pcm_current;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;granulepos+=ci-&gt;blocksizes[v-&gt;lW]/4+ci-&gt;blocksizes[v-&gt;W]/4;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vb-&gt;granulepos!=-1<sp/>&amp;&amp;<sp/>v-&gt;granulepos!=vb-&gt;granulepos){</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;granulepos&gt;vb-&gt;granulepos){</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>extra=v-&gt;granulepos-vb-&gt;granulepos;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(extra)</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vb-&gt;eofflag){</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>partial<sp/>last<sp/>frame.<sp/><sp/>Strip<sp/>the<sp/>extra<sp/>samples<sp/>off<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;pcm_current-=extra&gt;&gt;hs;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>else<sp/>{Shouldn&apos;t<sp/>happen<sp/>*unless*<sp/>the<sp/>bitstream<sp/>is<sp/>out<sp/>of</highlight></codeline>
<codeline lineno="846"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec.<sp/><sp/>Either<sp/>way,<sp/>believe<sp/>the<sp/>bitstream<sp/>}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>else<sp/>{Shouldn&apos;t<sp/>happen<sp/>*unless*<sp/>the<sp/>bitstream<sp/>is<sp/>out<sp/>of</highlight></codeline>
<codeline lineno="848"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec.<sp/><sp/>Either<sp/>way,<sp/>believe<sp/>the<sp/>bitstream<sp/>}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;granulepos=vb-&gt;granulepos;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update,<sp/>cleanup<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vb-&gt;eofflag)v-&gt;eofflag=1;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="858"><highlight class="normal">}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>pcm==NULL<sp/>indicates<sp/>we<sp/>just<sp/>want<sp/>the<sp/>pending<sp/>samples,<sp/>no<sp/>more<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vorbis_synthesis_pcmout(<ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref><sp/>*v,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>***pcm){</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi=v-&gt;vi;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;pcm_returned&gt;-1<sp/>&amp;&amp;<sp/>v-&gt;pcm_returned&lt;v-&gt;pcm_current){</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pcm){</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vi-&gt;channels;i++)</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;pcmret[i]=v-&gt;pcm[i]+v-&gt;pcm_returned;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pcm=v-&gt;pcmret;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(v-&gt;pcm_current-v-&gt;pcm_returned);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="874"><highlight class="normal">}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vorbis_synthesis_read(<ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref><sp/>*v,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n){</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n<sp/>&amp;&amp;<sp/>v-&gt;pcm_returned+n&gt;v-&gt;pcm_current)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/>v-&gt;pcm_returned+=n;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="880"><highlight class="normal">}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>intended<sp/>for<sp/>use<sp/>with<sp/>a<sp/>specific<sp/>vorbisfile<sp/>feature;<sp/>we<sp/>want<sp/>access</highlight></codeline>
<codeline lineno="883"><highlight class="comment"><sp/><sp/><sp/>to<sp/>the<sp/>[usually<sp/>synthetic/postextrapolated]<sp/>buffer<sp/>and<sp/>lapping<sp/>at</highlight></codeline>
<codeline lineno="884"><highlight class="comment"><sp/><sp/><sp/>the<sp/>end<sp/>of<sp/>a<sp/>decode<sp/>cycle,<sp/>specifically,<sp/>a<sp/>half-short-block<sp/>worth.</highlight></codeline>
<codeline lineno="885"><highlight class="comment"><sp/><sp/><sp/>This<sp/>funtion<sp/>works<sp/>like<sp/>pcmout<sp/>above,<sp/>except<sp/>it<sp/>will<sp/>also<sp/>expose</highlight></codeline>
<codeline lineno="886"><highlight class="comment"><sp/><sp/><sp/>this<sp/>implicit<sp/>buffer<sp/>data<sp/>not<sp/>normally<sp/>decoded.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vorbis_synthesis_lapout(<ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref><sp/>*v,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>***pcm){</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi=v-&gt;vi;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hs=ci-&gt;halfrate_flag;<sp/></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n=ci-&gt;blocksizes[v-&gt;W]&gt;&gt;(hs+1);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n0=ci-&gt;blocksizes[0]&gt;&gt;(hs+1);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n1=ci-&gt;blocksizes[1]&gt;&gt;(hs+1);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;pcm_returned&lt;0)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>our<sp/>returned<sp/>data<sp/>ends<sp/>at<sp/>pcm_returned;<sp/>because<sp/>the<sp/>synthesis<sp/>pcm</highlight></codeline>
<codeline lineno="900"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>buffer<sp/>is<sp/>a<sp/>two-fragment<sp/>ring,<sp/>that<sp/>means<sp/>our<sp/>data<sp/>block<sp/>may<sp/>be</highlight></codeline>
<codeline lineno="901"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>fragmented<sp/>by<sp/>buffering,<sp/>wrapping<sp/>or<sp/>a<sp/>short<sp/>block<sp/>not<sp/>filling</highlight></codeline>
<codeline lineno="902"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>out<sp/>a<sp/>buffer.<sp/><sp/>To<sp/>simplify<sp/>things,<sp/>we<sp/>unfragment<sp/>if<sp/>it&apos;s<sp/>at<sp/>all</highlight></codeline>
<codeline lineno="903"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>possibly<sp/>needed.<sp/>Otherwise,<sp/>we&apos;d<sp/>need<sp/>to<sp/>call<sp/>lapout<sp/>more<sp/>than</highlight></codeline>
<codeline lineno="904"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>once<sp/>as<sp/>well<sp/>as<sp/>hold<sp/>additional<sp/>dsp<sp/>state.<sp/><sp/>Opt<sp/>for</highlight></codeline>
<codeline lineno="905"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>simplicity.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>centerW<sp/>was<sp/>advanced<sp/>by<sp/>blockin;<sp/>it<sp/>would<sp/>be<sp/>the<sp/>center<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="908"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*next*<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;centerW==n1){</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>data<sp/>buffer<sp/>wraps;<sp/>swap<sp/>the<sp/>halves<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>slow,<sp/>sure,<sp/>small<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;vi-&gt;channels;j++){</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*p=v-&gt;pcm[j];</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n1;i++){</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>temp=p[i];</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>p[i]=p[i+n1];</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>p[i+n1]=temp;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;pcm_current-=n1;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;pcm_returned-=n1;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;centerW=0;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>solidify<sp/>buffer<sp/>into<sp/>contiguous<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((v-&gt;lW^v-&gt;W)==1){</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>long/short<sp/>or<sp/>short/long<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;vi-&gt;channels;j++){</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*s=v-&gt;pcm[j];</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*d=v-&gt;pcm[j]+(n1-n0)/2;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=(n1+n0)/2-1;i&gt;=0;--i)</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>d[i]=s[i];</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;pcm_returned+=(n1-n0)/2;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;pcm_current+=(n1-n0)/2;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;lW==0){</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>short/short<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;vi-&gt;channels;j++){</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*s=v-&gt;pcm[j];</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*d=v-&gt;pcm[j]+n1-n0;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=n0-1;i&gt;=0;--i)</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d[i]=s[i];</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;pcm_returned+=n1-n0;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;pcm_current+=n1-n0;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pcm){</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vi-&gt;channels;i++)</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;pcmret[i]=v-&gt;pcm[i]+v-&gt;pcm_returned;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>*pcm=v-&gt;pcmret;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(n1+n-v-&gt;pcm_returned);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal">}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*vorbis_window(<ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref><sp/>*v,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>W){</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi=v-&gt;vi;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hs=ci-&gt;halfrate_flag;<sp/></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><ref refid="structprivate__state" kindref="compound">private_state</ref><sp/>*b=v-&gt;backend_state;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;window[W]-1&lt;0)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_vorbis_window_get(b-&gt;window[W]-hs);</highlight></codeline>
<codeline lineno="970"><highlight class="normal">}</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c"/>
  </compounddef>
</doxygen>
