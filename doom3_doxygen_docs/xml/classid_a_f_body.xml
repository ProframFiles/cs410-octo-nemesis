<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_a_f_body" kind="class" prot="public">
    <compoundname>idAFBody</compoundname>
    <innerclass refid="structid_a_f_body_1_1body_flags__s" prot="private">idAFBody::bodyFlags_s</innerclass>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classid_a_f_body_1a9aa2e7a2238b41cdc679879b16a9f869" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>idPhysics_AF</definition>
        <argsstring></argsstring>
        <name>idPhysics_AF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="659" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="659" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classid_a_f_body_1a34f62b0a4b2b0422df7c0a763842512f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>idAFTree</definition>
        <argsstring></argsstring>
        <name>idAFTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="660" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="660" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classid_a_f_body_1a67b9e5a1c828a6097097be2723c6a2b6" prot="private" static="no" mutable="no">
        <type><ref refid="classid_str" kindref="compound">idStr</ref></type>
        <definition>idStr idAFBody::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="711" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="711" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1a5fe1bc5265f6180a0d4efb9df6ab9084" prot="private" static="no" mutable="no">
        <type><ref refid="classid_a_f_body" kindref="compound">idAFBody</ref> *</type>
        <definition>idAFBody * idAFBody::parent</definition>
        <argsstring></argsstring>
        <name>parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="712" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="712" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1a2c23655d37de2eea2f398fe8c96f127f" prot="private" static="no" mutable="no">
        <type><ref refid="classid_list" kindref="compound">idList</ref>&lt; <ref refid="classid_a_f_body" kindref="compound">idAFBody</ref> * &gt;</type>
        <definition>idList&lt; idAFBody * &gt; idAFBody::children</definition>
        <argsstring></argsstring>
        <name>children</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="713" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="713" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1afcf8544a54daeee5aca1584cb3e0c3e4" prot="private" static="no" mutable="no">
        <type><ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
        <definition>idClipModel * idAFBody::clipModel</definition>
        <argsstring></argsstring>
        <name>clipModel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="714" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="714" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1ae25e4c972b1c34008ba2c1c6dc765a74" prot="private" static="no" mutable="no">
        <type><ref refid="classid_a_f_constraint" kindref="compound">idAFConstraint</ref> *</type>
        <definition>idAFConstraint * idAFBody::primaryConstraint</definition>
        <argsstring></argsstring>
        <name>primaryConstraint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="715" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="715" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1a5a11c65db26caf9b4f2225bcbb36f84b" prot="private" static="no" mutable="no">
        <type><ref refid="classid_list" kindref="compound">idList</ref>&lt; <ref refid="classid_a_f_constraint" kindref="compound">idAFConstraint</ref> * &gt;</type>
        <definition>idList&lt; idAFConstraint * &gt; idAFBody::constraints</definition>
        <argsstring></argsstring>
        <name>constraints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="716" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="716" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1a07f7d68c57ff2897ff2c67d1139242c1" prot="private" static="no" mutable="no">
        <type><ref refid="classid_a_f_tree" kindref="compound">idAFTree</ref> *</type>
        <definition>idAFTree * idAFBody::tree</definition>
        <argsstring></argsstring>
        <name>tree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="717" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="717" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1a80b53542122e35bd036358842dda1e6a" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idAFBody::linearFriction</definition>
        <argsstring></argsstring>
        <name>linearFriction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="718" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="718" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1ab9dfdd6e9e743d145bfc35c7b47f8413" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idAFBody::angularFriction</definition>
        <argsstring></argsstring>
        <name>angularFriction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="719" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="719" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1a351a10920d2df0596f0f0e483589a475" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idAFBody::contactFriction</definition>
        <argsstring></argsstring>
        <name>contactFriction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="720" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="720" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1a5a83b09ecbfa0222ac0c13a311fb5198" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idAFBody::bouncyness</definition>
        <argsstring></argsstring>
        <name>bouncyness</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="721" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="721" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1a63f5c9cb6805ed3c00df79a6ab6fd4a6" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idAFBody::clipMask</definition>
        <argsstring></argsstring>
        <name>clipMask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="722" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="722" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1abbeefd143ab36876cd97398caf2f8e8e" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>idVec3 idAFBody::frictionDir</definition>
        <argsstring></argsstring>
        <name>frictionDir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="723" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="723" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1aedd7d08a756882bd1381a3ac5f524fef" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>idVec3 idAFBody::contactMotorDir</definition>
        <argsstring></argsstring>
        <name>contactMotorDir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="724" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="724" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1a05d0a7bc3d2e81fff4eb8c0646e6b5cc" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idAFBody::contactMotorVelocity</definition>
        <argsstring></argsstring>
        <name>contactMotorVelocity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="725" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="725" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1af1466460433fc2c7e1cddcb046b034d1" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idAFBody::contactMotorForce</definition>
        <argsstring></argsstring>
        <name>contactMotorForce</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="726" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="726" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1ad06e7c8ecb6797e9848c354c45ba9a02" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idAFBody::mass</definition>
        <argsstring></argsstring>
        <name>mass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="729" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="729" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1afca627f5b2c82774900e4de409104475" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idAFBody::invMass</definition>
        <argsstring></argsstring>
        <name>invMass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="730" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="730" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1a2a9290938c5a0e2067dc1f9f771d5b3b" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>idVec3 idAFBody::centerOfMass</definition>
        <argsstring></argsstring>
        <name>centerOfMass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="731" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="731" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1ab1ea6390284b1bbfeb97fbaed3cc39fc" prot="private" static="no" mutable="no">
        <type><ref refid="classid_mat3" kindref="compound">idMat3</ref></type>
        <definition>idMat3 idAFBody::inertiaTensor</definition>
        <argsstring></argsstring>
        <name>inertiaTensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="732" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="732" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1afc3573359f528b0f027fe305a3430adc" prot="private" static="no" mutable="no">
        <type><ref refid="classid_mat3" kindref="compound">idMat3</ref></type>
        <definition>idMat3 idAFBody::inverseInertiaTensor</definition>
        <argsstring></argsstring>
        <name>inverseInertiaTensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="733" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="733" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1ad4cec18fe46c1b25a50cc9be3b2b12de" prot="private" static="no" mutable="no">
        <type><ref refid="struct_a_f_body_p_state__s" kindref="compound">AFBodyPState_t</ref></type>
        <definition>AFBodyPState_t idAFBody::state</definition>
        <argsstring>[2]</argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="736" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="736" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1ab2cc4160a75fe1e0de3090841aa03a25" prot="private" static="no" mutable="no">
        <type><ref refid="struct_a_f_body_p_state__s" kindref="compound">AFBodyPState_t</ref> *</type>
        <definition>AFBodyPState_t * idAFBody::current</definition>
        <argsstring></argsstring>
        <name>current</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="737" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="737" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1a281bd18efd67977b381906c4360082db" prot="private" static="no" mutable="no">
        <type><ref refid="struct_a_f_body_p_state__s" kindref="compound">AFBodyPState_t</ref> *</type>
        <definition>AFBodyPState_t * idAFBody::next</definition>
        <argsstring></argsstring>
        <name>next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="738" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="738" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1af343c1fb2b2e428f531d26af459f936b" prot="private" static="no" mutable="no">
        <type><ref refid="struct_a_f_body_p_state__s" kindref="compound">AFBodyPState_t</ref></type>
        <definition>AFBodyPState_t idAFBody::saved</definition>
        <argsstring></argsstring>
        <name>saved</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="739" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="739" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1aad0aa2024bf3b8d9a5314c4bd9a79333" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>idVec3 idAFBody::atRestOrigin</definition>
        <argsstring></argsstring>
        <name>atRestOrigin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="740" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="740" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1ab74c9607c951d086e4ad4fad5ca4b7c3" prot="private" static="no" mutable="no">
        <type><ref refid="classid_mat3" kindref="compound">idMat3</ref></type>
        <definition>idMat3 idAFBody::atRestAxis</definition>
        <argsstring></argsstring>
        <name>atRestAxis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="741" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="741" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1acb4c917e1186f26aa7f48087d969ba5d" prot="private" static="no" mutable="no">
        <type><ref refid="classid_mat_x" kindref="compound">idMatX</ref></type>
        <definition>idMatX idAFBody::inverseWorldSpatialInertia</definition>
        <argsstring></argsstring>
        <name>inverseWorldSpatialInertia</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="744" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="744" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1ae6f35e8e3a5ddc127dddb47a409c7dc4" prot="private" static="no" mutable="no">
        <type><ref refid="classid_mat_x" kindref="compound">idMatX</ref></type>
        <definition>idMatX idAFBody::I</definition>
        <argsstring></argsstring>
        <name>I</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="745" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="745" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1a3f5a550412a00ebd8ae7c13c748a8d55" prot="private" static="no" mutable="no">
        <type><ref refid="classid_mat_x" kindref="compound">idMatX</ref></type>
        <definition>idMatX idAFBody::invI</definition>
        <argsstring></argsstring>
        <name>invI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="745" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="745" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1a37f5dc5a30451c7c5f62127a0936ae2d" prot="private" static="no" mutable="no">
        <type><ref refid="classid_mat_x" kindref="compound">idMatX</ref></type>
        <definition>idMatX idAFBody::J</definition>
        <argsstring></argsstring>
        <name>J</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="746" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="746" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1a4ee08d7933c9a4b81a0f20c3d58b36e3" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
        <definition>idVecX idAFBody::s</definition>
        <argsstring></argsstring>
        <name>s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="747" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="747" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1a92b90b21f148e225ed219620a027b5af" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
        <definition>idVecX idAFBody::totalForce</definition>
        <argsstring></argsstring>
        <name>totalForce</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="748" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="748" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1aebf2130e2ef0d7db829b279faeeb4797" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
        <definition>idVecX idAFBody::auxForce</definition>
        <argsstring></argsstring>
        <name>auxForce</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="749" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="749" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1a9c795ad834f1c956cf4c6e79898f1d74" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
        <definition>idVecX idAFBody::acceleration</definition>
        <argsstring></argsstring>
        <name>acceleration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="750" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="750" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1a831b8579124ff4a540cfb6fab9772512" prot="private" static="no" mutable="no">
        <type>float *</type>
        <definition>float * idAFBody::response</definition>
        <argsstring></argsstring>
        <name>response</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="751" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="751" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1a587992e1c94fa7eb4c9ceae1ba86a980" prot="private" static="no" mutable="no">
        <type>int *</type>
        <definition>int * idAFBody::responseIndex</definition>
        <argsstring></argsstring>
        <name>responseIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="752" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="752" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1a6cff21886a406600dd526f841dd288c3" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idAFBody::numResponses</definition>
        <argsstring></argsstring>
        <name>numResponses</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="753" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="753" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1a9c1f2f0c10986e38667d0ea288b6fe47" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idAFBody::maxAuxiliaryIndex</definition>
        <argsstring></argsstring>
        <name>maxAuxiliaryIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="754" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="754" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1a2ccc17fc639cebf47691b5b8bf35bbbb" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idAFBody::maxSubTreeAuxiliaryIndex</definition>
        <argsstring></argsstring>
        <name>maxSubTreeAuxiliaryIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="755" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="755" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_a_f_body_1a0978621be923066f43d168cd5c1bda90" prot="private" static="no" mutable="no">
        <type>struct idAFBody::bodyFlags_s</type>
        <definition>struct idAFBody::bodyFlags_s idAFBody::fl</definition>
        <argsstring></argsstring>
        <name>fl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="764" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_a_f_body_1ac8c0bdf812d2e2eb3bab92e09ce5736c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idAFBody::idAFBody</definition>
        <argsstring>(void)</argsstring>
        <name>idAFBody</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="663" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.cpp" bodystart="4137" bodyend="4139"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a20ac9a5fa879a8f723f2401f03c9f85b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idAFBody::idAFBody</definition>
        <argsstring>(const idStr &amp;name, idClipModel *clipModel, float density)</argsstring>
        <name>idAFBody</name>
        <param>
          <type>const <ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>clipModel</declname>
        </param>
        <param>
          <type>float</type>
          <declname>density</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="664" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.cpp" bodystart="4146" bodyend="4163"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1aeafcbd2964c9a7ee8e14fdd09c7adb4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idAFBody::~idAFBody</definition>
        <argsstring>(void)</argsstring>
        <name>~idAFBody</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="665" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.cpp" bodystart="4170" bodyend="4172"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1af9c74e426d1574cfc2b28af8eb0165c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::Init</definition>
        <argsstring>(void)</argsstring>
        <name>Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="667" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.cpp" bodystart="4179" bodyend="4229"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a0a027b453a825dd2603cb54a0d24959b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
        <definition>const idStr&amp; idAFBody::GetName</definition>
        <argsstring>(void) const </argsstring>
        <name>GetName</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="668" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="668" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a9bd7e64a36c3fe6963ce4b214eb055d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3&amp; idAFBody::GetWorldOrigin</definition>
        <argsstring>(void) const </argsstring>
        <name>GetWorldOrigin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="669" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="669" bodyend="669"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1ad86153225be8c1c46b425ff425c6be87" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
        <definition>const idMat3&amp; idAFBody::GetWorldAxis</definition>
        <argsstring>(void) const </argsstring>
        <name>GetWorldAxis</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="670" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="670" bodyend="670"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1aee2517919591ad800b56bb85f1ce2f65" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3&amp; idAFBody::GetLinearVelocity</definition>
        <argsstring>(void) const </argsstring>
        <name>GetLinearVelocity</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="671" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="671" bodyend="671"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a5a1608b45b7106815472ea3212fcfd9c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3&amp; idAFBody::GetAngularVelocity</definition>
        <argsstring>(void) const </argsstring>
        <name>GetAngularVelocity</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="672" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="672" bodyend="672"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1af94acd30931c98fcb840b5cbb6f51c27" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>idVec3 idAFBody::GetPointVelocity</definition>
        <argsstring>(const idVec3 &amp;point) const </argsstring>
        <name>GetPointVelocity</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="673" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.cpp" bodystart="4367" bodyend="4370"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a9d3fab7ab1b91aa52d638095b542a9dd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3&amp; idAFBody::GetCenterOfMass</definition>
        <argsstring>(void) const </argsstring>
        <name>GetCenterOfMass</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="674" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="674" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a34a3d5e8fffe39f0f88eb6ba48fc7e51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::SetClipModel</definition>
        <argsstring>(idClipModel *clipModel)</argsstring>
        <name>SetClipModel</name>
        <param>
          <type><ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>clipModel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="675" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.cpp" bodystart="4236" bodyend="4241"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a282714251ad18ef838cece981338f515" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
        <definition>idClipModel* idAFBody::GetClipModel</definition>
        <argsstring>(void) const </argsstring>
        <name>GetClipModel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="676" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="676" bodyend="676"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1af4e95addb7b21f92dda8faa5982926dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::SetClipMask</definition>
        <argsstring>(const int mask)</argsstring>
        <name>SetClipMask</name>
        <param>
          <type>const int</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="677" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="677" bodyend="677"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1aa8a8507c426e93baa79fb02a23ce5a50" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int idAFBody::GetClipMask</definition>
        <argsstring>(void) const </argsstring>
        <name>GetClipMask</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="678" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="678" bodyend="678"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a4f16df508a2433e3a278900336e3284f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::SetSelfCollision</definition>
        <argsstring>(const bool enable)</argsstring>
        <name>SetSelfCollision</name>
        <param>
          <type>const bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="679" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="679" bodyend="679"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a9eddb9b9faa78c60ddd8452ebcb8e1f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::SetWorldOrigin</definition>
        <argsstring>(const idVec3 &amp;origin)</argsstring>
        <name>SetWorldOrigin</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>origin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="680" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="680" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1ae1aab61fbc425ea413ac8b9a3fa02be6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::SetWorldAxis</definition>
        <argsstring>(const idMat3 &amp;axis)</argsstring>
        <name>SetWorldAxis</name>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>axis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="681" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="681" bodyend="681"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a98d87c30f2a233346688452bc2930c54" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::SetLinearVelocity</definition>
        <argsstring>(const idVec3 &amp;linear) const </argsstring>
        <name>SetLinearVelocity</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>linear</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="682" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="682" bodyend="682"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a6496e3614b49b7e44cf255eaf36321da" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::SetAngularVelocity</definition>
        <argsstring>(const idVec3 &amp;angular) const </argsstring>
        <name>SetAngularVelocity</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>angular</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="683" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="683" bodyend="683"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a6a32d1fb1ee0eb1b6db11519cef94e41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::SetFriction</definition>
        <argsstring>(float linear, float angular, float contact)</argsstring>
        <name>SetFriction</name>
        <param>
          <type>float</type>
          <declname>linear</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angular</declname>
        </param>
        <param>
          <type>float</type>
          <declname>contact</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="684" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.cpp" bodystart="4248" bodyend="4258"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1aa903ab67f398d1b0b135e6e0afbd11f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float idAFBody::GetContactFriction</definition>
        <argsstring>(void) const </argsstring>
        <name>GetContactFriction</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="685" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="685" bodyend="685"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a09e24675dbf8a3de1657b93fee395c29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::SetBouncyness</definition>
        <argsstring>(float bounce)</argsstring>
        <name>SetBouncyness</name>
        <param>
          <type>float</type>
          <declname>bounce</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="686" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.cpp" bodystart="4265" bodyend="4271"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a2aa78184e46eca83e44b83e8f40ebdd9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float idAFBody::GetBouncyness</definition>
        <argsstring>(void) const </argsstring>
        <name>GetBouncyness</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="687" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="687" bodyend="687"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a846396ab954f89e4769e431583bd2bb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::SetDensity</definition>
        <argsstring>(float density, const idMat3 &amp;inertiaScale=mat3_identity)</argsstring>
        <name>SetDensity</name>
        <param>
          <type>float</type>
          <declname>density</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>inertiaScale</declname>
          <defval>mat3_identity</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="688" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.cpp" bodystart="4278" bodyend="4314"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a5efe0732e2b997bb554ba82a6e6607c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float idAFBody::GetInverseMass</definition>
        <argsstring>(void) const </argsstring>
        <name>GetInverseMass</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="689" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="689" bodyend="689"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a3bb868fd320b1d5492c3b8ab8ba966b2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classid_mat3" kindref="compound">idMat3</ref></type>
        <definition>idMat3 idAFBody::GetInverseWorldInertia</definition>
        <argsstring>(void) const </argsstring>
        <name>GetInverseWorldInertia</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="690" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="690" bodyend="690"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a8287e1143c6e0ce67bd719bbb4078e60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::SetFrictionDirection</definition>
        <argsstring>(const idVec3 &amp;dir)</argsstring>
        <name>SetFrictionDirection</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="692" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.cpp" bodystart="4321" bodyend="4324"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a71fb5cd00d02bee7f2279b89470c667e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idAFBody::GetFrictionDirection</definition>
        <argsstring>(idVec3 &amp;dir) const </argsstring>
        <name>GetFrictionDirection</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="693" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.cpp" bodystart="4331" bodyend="4337"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1ad8a04fd58c8a4aa6fe28579e64b05488" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::SetContactMotorDirection</definition>
        <argsstring>(const idVec3 &amp;dir)</argsstring>
        <name>SetContactMotorDirection</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="695" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.cpp" bodystart="4344" bodyend="4347"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a9f173e3a410aa859a5cc05017ae650eb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idAFBody::GetContactMotorDirection</definition>
        <argsstring>(idVec3 &amp;dir) const </argsstring>
        <name>GetContactMotorDirection</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="696" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.cpp" bodystart="4354" bodyend="4360"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a8efe183fc8a6be8112350b6b23448f74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::SetContactMotorVelocity</definition>
        <argsstring>(float vel)</argsstring>
        <name>SetContactMotorVelocity</name>
        <param>
          <type>float</type>
          <declname>vel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="697" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="697" bodyend="697"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a1f3e76d04f242969870aeac89ea1918b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float idAFBody::GetContactMotorVelocity</definition>
        <argsstring>(void) const </argsstring>
        <name>GetContactMotorVelocity</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="698" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="698" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a085201ce1929c4378aa33dccf637ad6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::SetContactMotorForce</definition>
        <argsstring>(float force)</argsstring>
        <name>SetContactMotorForce</name>
        <param>
          <type>float</type>
          <declname>force</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="699" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="699" bodyend="699"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a6d5b6e01dd50f5f21151adda7e8c1bdf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float idAFBody::GetContactMotorForce</definition>
        <argsstring>(void) const </argsstring>
        <name>GetContactMotorForce</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="700" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="700" bodyend="700"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a18a095de825e0ffaf9e0795a29196612" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::AddForce</definition>
        <argsstring>(const idVec3 &amp;point, const idVec3 &amp;force)</argsstring>
        <name>AddForce</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>force</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="702" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.cpp" bodystart="4377" bodyend="4380"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a5836c4125b7ed4aa211e54f9bd28ff17" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idAFBody::InverseWorldSpatialInertiaMultiply</definition>
        <argsstring>(idVecX &amp;dst, const float *v) const </argsstring>
        <name>InverseWorldSpatialInertiaMultiply</name>
        <param>
          <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="703" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.cpp" bodystart="4389" bodyend="4404"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1abf26d708adf69d55796443ed327c68f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classid_vec6" kindref="compound">idVec6</ref> &amp;</type>
        <definition>idVec6&amp; idAFBody::GetResponseForce</definition>
        <argsstring>(int index)</argsstring>
        <name>GetResponseForce</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="704" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="704" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a016084b6b2bf5b59baf4d4dd1f313301" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::Save</definition>
        <argsstring>(idSaveGame *saveFile)</argsstring>
        <name>Save</name>
        <param>
          <type><ref refid="classid_save_game" kindref="compound">idSaveGame</ref> *</type>
          <declname>saveFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="706" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.cpp" bodystart="4411" bodyend="4434"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a3128c076681bfa40ad107bd061f32aa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::Restore</definition>
        <argsstring>(idRestoreGame *saveFile)</argsstring>
        <name>Restore</name>
        <param>
          <type><ref refid="classid_restore_game" kindref="compound">idRestoreGame</ref> *</type>
          <declname>saveFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="707" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.cpp" bodystart="4441" bodyend="4464"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1ac8c0bdf812d2e2eb3bab92e09ce5736c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idAFBody::idAFBody</definition>
        <argsstring>(void)</argsstring>
        <name>idAFBody</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="663" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a20ac9a5fa879a8f723f2401f03c9f85b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idAFBody::idAFBody</definition>
        <argsstring>(const idStr &amp;name, idClipModel *clipModel, float density)</argsstring>
        <name>idAFBody</name>
        <param>
          <type>const <ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>clipModel</declname>
        </param>
        <param>
          <type>float</type>
          <declname>density</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="664" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1aeafcbd2964c9a7ee8e14fdd09c7adb4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idAFBody::~idAFBody</definition>
        <argsstring>(void)</argsstring>
        <name>~idAFBody</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="665" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1af9c74e426d1574cfc2b28af8eb0165c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::Init</definition>
        <argsstring>(void)</argsstring>
        <name>Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="667" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a0a027b453a825dd2603cb54a0d24959b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
        <definition>const idStr&amp; idAFBody::GetName</definition>
        <argsstring>(void) const </argsstring>
        <name>GetName</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="668" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" bodystart="668" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a9bd7e64a36c3fe6963ce4b214eb055d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3&amp; idAFBody::GetWorldOrigin</definition>
        <argsstring>(void) const </argsstring>
        <name>GetWorldOrigin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="669" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" bodystart="669" bodyend="669"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1ad86153225be8c1c46b425ff425c6be87" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
        <definition>const idMat3&amp; idAFBody::GetWorldAxis</definition>
        <argsstring>(void) const </argsstring>
        <name>GetWorldAxis</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="670" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" bodystart="670" bodyend="670"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1aee2517919591ad800b56bb85f1ce2f65" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3&amp; idAFBody::GetLinearVelocity</definition>
        <argsstring>(void) const </argsstring>
        <name>GetLinearVelocity</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="671" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" bodystart="671" bodyend="671"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a5a1608b45b7106815472ea3212fcfd9c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3&amp; idAFBody::GetAngularVelocity</definition>
        <argsstring>(void) const </argsstring>
        <name>GetAngularVelocity</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="672" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" bodystart="672" bodyend="672"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1af94acd30931c98fcb840b5cbb6f51c27" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>idVec3 idAFBody::GetPointVelocity</definition>
        <argsstring>(const idVec3 &amp;point) const </argsstring>
        <name>GetPointVelocity</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="673" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a9d3fab7ab1b91aa52d638095b542a9dd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3&amp; idAFBody::GetCenterOfMass</definition>
        <argsstring>(void) const </argsstring>
        <name>GetCenterOfMass</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="674" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" bodystart="674" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a34a3d5e8fffe39f0f88eb6ba48fc7e51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::SetClipModel</definition>
        <argsstring>(idClipModel *clipModel)</argsstring>
        <name>SetClipModel</name>
        <param>
          <type><ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>clipModel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="675" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a282714251ad18ef838cece981338f515" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
        <definition>idClipModel* idAFBody::GetClipModel</definition>
        <argsstring>(void) const </argsstring>
        <name>GetClipModel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="676" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" bodystart="676" bodyend="676"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1af4e95addb7b21f92dda8faa5982926dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::SetClipMask</definition>
        <argsstring>(const int mask)</argsstring>
        <name>SetClipMask</name>
        <param>
          <type>const int</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="677" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" bodystart="677" bodyend="677"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1aa8a8507c426e93baa79fb02a23ce5a50" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int idAFBody::GetClipMask</definition>
        <argsstring>(void) const </argsstring>
        <name>GetClipMask</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="678" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" bodystart="678" bodyend="678"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a4f16df508a2433e3a278900336e3284f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::SetSelfCollision</definition>
        <argsstring>(const bool enable)</argsstring>
        <name>SetSelfCollision</name>
        <param>
          <type>const bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="679" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" bodystart="679" bodyend="679"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a9eddb9b9faa78c60ddd8452ebcb8e1f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::SetWorldOrigin</definition>
        <argsstring>(const idVec3 &amp;origin)</argsstring>
        <name>SetWorldOrigin</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>origin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="680" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" bodystart="680" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1ae1aab61fbc425ea413ac8b9a3fa02be6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::SetWorldAxis</definition>
        <argsstring>(const idMat3 &amp;axis)</argsstring>
        <name>SetWorldAxis</name>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>axis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="681" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" bodystart="681" bodyend="681"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a98d87c30f2a233346688452bc2930c54" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::SetLinearVelocity</definition>
        <argsstring>(const idVec3 &amp;linear) const </argsstring>
        <name>SetLinearVelocity</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>linear</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="682" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" bodystart="682" bodyend="682"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a6496e3614b49b7e44cf255eaf36321da" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::SetAngularVelocity</definition>
        <argsstring>(const idVec3 &amp;angular) const </argsstring>
        <name>SetAngularVelocity</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>angular</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="683" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" bodystart="683" bodyend="683"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a6a32d1fb1ee0eb1b6db11519cef94e41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::SetFriction</definition>
        <argsstring>(float linear, float angular, float contact)</argsstring>
        <name>SetFriction</name>
        <param>
          <type>float</type>
          <declname>linear</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angular</declname>
        </param>
        <param>
          <type>float</type>
          <declname>contact</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="684" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1aa903ab67f398d1b0b135e6e0afbd11f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float idAFBody::GetContactFriction</definition>
        <argsstring>(void) const </argsstring>
        <name>GetContactFriction</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="685" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" bodystart="685" bodyend="685"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a09e24675dbf8a3de1657b93fee395c29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::SetBouncyness</definition>
        <argsstring>(float bounce)</argsstring>
        <name>SetBouncyness</name>
        <param>
          <type>float</type>
          <declname>bounce</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="686" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a2aa78184e46eca83e44b83e8f40ebdd9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float idAFBody::GetBouncyness</definition>
        <argsstring>(void) const </argsstring>
        <name>GetBouncyness</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="687" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" bodystart="687" bodyend="687"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a846396ab954f89e4769e431583bd2bb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::SetDensity</definition>
        <argsstring>(float density, const idMat3 &amp;inertiaScale=mat3_identity)</argsstring>
        <name>SetDensity</name>
        <param>
          <type>float</type>
          <declname>density</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>inertiaScale</declname>
          <defval>mat3_identity</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="688" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a5efe0732e2b997bb554ba82a6e6607c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float idAFBody::GetInverseMass</definition>
        <argsstring>(void) const </argsstring>
        <name>GetInverseMass</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="689" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" bodystart="689" bodyend="689"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a3bb868fd320b1d5492c3b8ab8ba966b2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classid_mat3" kindref="compound">idMat3</ref></type>
        <definition>idMat3 idAFBody::GetInverseWorldInertia</definition>
        <argsstring>(void) const </argsstring>
        <name>GetInverseWorldInertia</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="690" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" bodystart="690" bodyend="690"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a8287e1143c6e0ce67bd719bbb4078e60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::SetFrictionDirection</definition>
        <argsstring>(const idVec3 &amp;dir)</argsstring>
        <name>SetFrictionDirection</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="692" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a71fb5cd00d02bee7f2279b89470c667e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idAFBody::GetFrictionDirection</definition>
        <argsstring>(idVec3 &amp;dir) const </argsstring>
        <name>GetFrictionDirection</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="693" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1ad8a04fd58c8a4aa6fe28579e64b05488" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::SetContactMotorDirection</definition>
        <argsstring>(const idVec3 &amp;dir)</argsstring>
        <name>SetContactMotorDirection</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="695" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a9f173e3a410aa859a5cc05017ae650eb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idAFBody::GetContactMotorDirection</definition>
        <argsstring>(idVec3 &amp;dir) const </argsstring>
        <name>GetContactMotorDirection</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="696" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a8efe183fc8a6be8112350b6b23448f74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::SetContactMotorVelocity</definition>
        <argsstring>(float vel)</argsstring>
        <name>SetContactMotorVelocity</name>
        <param>
          <type>float</type>
          <declname>vel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="697" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" bodystart="697" bodyend="697"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a1f3e76d04f242969870aeac89ea1918b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float idAFBody::GetContactMotorVelocity</definition>
        <argsstring>(void) const </argsstring>
        <name>GetContactMotorVelocity</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="698" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" bodystart="698" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a085201ce1929c4378aa33dccf637ad6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::SetContactMotorForce</definition>
        <argsstring>(float force)</argsstring>
        <name>SetContactMotorForce</name>
        <param>
          <type>float</type>
          <declname>force</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="699" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" bodystart="699" bodyend="699"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a6d5b6e01dd50f5f21151adda7e8c1bdf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float idAFBody::GetContactMotorForce</definition>
        <argsstring>(void) const </argsstring>
        <name>GetContactMotorForce</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="700" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" bodystart="700" bodyend="700"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a18a095de825e0ffaf9e0795a29196612" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::AddForce</definition>
        <argsstring>(const idVec3 &amp;point, const idVec3 &amp;force)</argsstring>
        <name>AddForce</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>force</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="702" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a7a30c87f97202a9e7144175572930155" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::InverseWorldSpatialInertiaMultiply</definition>
        <argsstring>(idVecX &amp;dst, const float *v) const </argsstring>
        <name>InverseWorldSpatialInertiaMultiply</name>
        <param>
          <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="703" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1abf26d708adf69d55796443ed327c68f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classid_vec6" kindref="compound">idVec6</ref> &amp;</type>
        <definition>idVec6&amp; idAFBody::GetResponseForce</definition>
        <argsstring>(int index)</argsstring>
        <name>GetResponseForce</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="704" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" bodystart="704" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a016084b6b2bf5b59baf4d4dd1f313301" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::Save</definition>
        <argsstring>(idSaveGame *saveFile)</argsstring>
        <name>Save</name>
        <param>
          <type><ref refid="classid_save_game" kindref="compound">idSaveGame</ref> *</type>
          <declname>saveFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="706" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_a_f_body_1a3128c076681bfa40ad107bd061f32aa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idAFBody::Restore</definition>
        <argsstring>(idRestoreGame *saveFile)</argsstring>
        <name>Restore</name>
        <param>
          <type><ref refid="classid_restore_game" kindref="compound">idRestoreGame</ref> *</type>
          <declname>saveFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_AF.h" line="707" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" line="657" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_AF.h" bodystart="657" bodyend="765"/>
    <listofallmembers>
      <member refid="classid_a_f_body_1a9c795ad834f1c956cf4c6e79898f1d74" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>acceleration</name></member>
      <member refid="classid_a_f_body_1a18a095de825e0ffaf9e0795a29196612" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>AddForce</name></member>
      <member refid="classid_a_f_body_1a18a095de825e0ffaf9e0795a29196612" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>AddForce</name></member>
      <member refid="classid_a_f_body_1ab9dfdd6e9e743d145bfc35c7b47f8413" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>angularFriction</name></member>
      <member refid="classid_a_f_body_1ab74c9607c951d086e4ad4fad5ca4b7c3" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>atRestAxis</name></member>
      <member refid="classid_a_f_body_1aad0aa2024bf3b8d9a5314c4bd9a79333" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>atRestOrigin</name></member>
      <member refid="classid_a_f_body_1aebf2130e2ef0d7db829b279faeeb4797" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>auxForce</name></member>
      <member refid="classid_a_f_body_1a5a83b09ecbfa0222ac0c13a311fb5198" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>bouncyness</name></member>
      <member refid="classid_a_f_body_1a2a9290938c5a0e2067dc1f9f771d5b3b" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>centerOfMass</name></member>
      <member refid="classid_a_f_body_1a2c23655d37de2eea2f398fe8c96f127f" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>children</name></member>
      <member refid="classid_a_f_body_1a63f5c9cb6805ed3c00df79a6ab6fd4a6" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>clipMask</name></member>
      <member refid="classid_a_f_body_1afcf8544a54daeee5aca1584cb3e0c3e4" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>clipModel</name></member>
      <member refid="classid_a_f_body_1a5a11c65db26caf9b4f2225bcbb36f84b" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>constraints</name></member>
      <member refid="classid_a_f_body_1a351a10920d2df0596f0f0e483589a475" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>contactFriction</name></member>
      <member refid="classid_a_f_body_1aedd7d08a756882bd1381a3ac5f524fef" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>contactMotorDir</name></member>
      <member refid="classid_a_f_body_1af1466460433fc2c7e1cddcb046b034d1" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>contactMotorForce</name></member>
      <member refid="classid_a_f_body_1a05d0a7bc3d2e81fff4eb8c0646e6b5cc" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>contactMotorVelocity</name></member>
      <member refid="classid_a_f_body_1ab2cc4160a75fe1e0de3090841aa03a25" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>current</name></member>
      <member refid="classid_a_f_body_1a0978621be923066f43d168cd5c1bda90" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>fl</name></member>
      <member refid="classid_a_f_body_1abbeefd143ab36876cd97398caf2f8e8e" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>frictionDir</name></member>
      <member refid="classid_a_f_body_1a5a1608b45b7106815472ea3212fcfd9c" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetAngularVelocity</name></member>
      <member refid="classid_a_f_body_1a5a1608b45b7106815472ea3212fcfd9c" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetAngularVelocity</name></member>
      <member refid="classid_a_f_body_1a2aa78184e46eca83e44b83e8f40ebdd9" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetBouncyness</name></member>
      <member refid="classid_a_f_body_1a2aa78184e46eca83e44b83e8f40ebdd9" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetBouncyness</name></member>
      <member refid="classid_a_f_body_1a9d3fab7ab1b91aa52d638095b542a9dd" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetCenterOfMass</name></member>
      <member refid="classid_a_f_body_1a9d3fab7ab1b91aa52d638095b542a9dd" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetCenterOfMass</name></member>
      <member refid="classid_a_f_body_1aa8a8507c426e93baa79fb02a23ce5a50" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetClipMask</name></member>
      <member refid="classid_a_f_body_1aa8a8507c426e93baa79fb02a23ce5a50" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetClipMask</name></member>
      <member refid="classid_a_f_body_1a282714251ad18ef838cece981338f515" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetClipModel</name></member>
      <member refid="classid_a_f_body_1a282714251ad18ef838cece981338f515" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetClipModel</name></member>
      <member refid="classid_a_f_body_1aa903ab67f398d1b0b135e6e0afbd11f2" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetContactFriction</name></member>
      <member refid="classid_a_f_body_1aa903ab67f398d1b0b135e6e0afbd11f2" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetContactFriction</name></member>
      <member refid="classid_a_f_body_1a9f173e3a410aa859a5cc05017ae650eb" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetContactMotorDirection</name></member>
      <member refid="classid_a_f_body_1a9f173e3a410aa859a5cc05017ae650eb" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetContactMotorDirection</name></member>
      <member refid="classid_a_f_body_1a6d5b6e01dd50f5f21151adda7e8c1bdf" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetContactMotorForce</name></member>
      <member refid="classid_a_f_body_1a6d5b6e01dd50f5f21151adda7e8c1bdf" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetContactMotorForce</name></member>
      <member refid="classid_a_f_body_1a1f3e76d04f242969870aeac89ea1918b" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetContactMotorVelocity</name></member>
      <member refid="classid_a_f_body_1a1f3e76d04f242969870aeac89ea1918b" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetContactMotorVelocity</name></member>
      <member refid="classid_a_f_body_1a71fb5cd00d02bee7f2279b89470c667e" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetFrictionDirection</name></member>
      <member refid="classid_a_f_body_1a71fb5cd00d02bee7f2279b89470c667e" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetFrictionDirection</name></member>
      <member refid="classid_a_f_body_1a5efe0732e2b997bb554ba82a6e6607c2" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetInverseMass</name></member>
      <member refid="classid_a_f_body_1a5efe0732e2b997bb554ba82a6e6607c2" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetInverseMass</name></member>
      <member refid="classid_a_f_body_1a3bb868fd320b1d5492c3b8ab8ba966b2" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetInverseWorldInertia</name></member>
      <member refid="classid_a_f_body_1a3bb868fd320b1d5492c3b8ab8ba966b2" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetInverseWorldInertia</name></member>
      <member refid="classid_a_f_body_1aee2517919591ad800b56bb85f1ce2f65" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetLinearVelocity</name></member>
      <member refid="classid_a_f_body_1aee2517919591ad800b56bb85f1ce2f65" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetLinearVelocity</name></member>
      <member refid="classid_a_f_body_1a0a027b453a825dd2603cb54a0d24959b" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetName</name></member>
      <member refid="classid_a_f_body_1a0a027b453a825dd2603cb54a0d24959b" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetName</name></member>
      <member refid="classid_a_f_body_1af94acd30931c98fcb840b5cbb6f51c27" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetPointVelocity</name></member>
      <member refid="classid_a_f_body_1af94acd30931c98fcb840b5cbb6f51c27" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetPointVelocity</name></member>
      <member refid="classid_a_f_body_1abf26d708adf69d55796443ed327c68f5" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetResponseForce</name></member>
      <member refid="classid_a_f_body_1abf26d708adf69d55796443ed327c68f5" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetResponseForce</name></member>
      <member refid="classid_a_f_body_1ad86153225be8c1c46b425ff425c6be87" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetWorldAxis</name></member>
      <member refid="classid_a_f_body_1ad86153225be8c1c46b425ff425c6be87" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetWorldAxis</name></member>
      <member refid="classid_a_f_body_1a9bd7e64a36c3fe6963ce4b214eb055d2" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetWorldOrigin</name></member>
      <member refid="classid_a_f_body_1a9bd7e64a36c3fe6963ce4b214eb055d2" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>GetWorldOrigin</name></member>
      <member refid="classid_a_f_body_1ae6f35e8e3a5ddc127dddb47a409c7dc4" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>I</name></member>
      <member refid="classid_a_f_body_1ac8c0bdf812d2e2eb3bab92e09ce5736c" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>idAFBody</name></member>
      <member refid="classid_a_f_body_1a20ac9a5fa879a8f723f2401f03c9f85b" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>idAFBody</name></member>
      <member refid="classid_a_f_body_1ac8c0bdf812d2e2eb3bab92e09ce5736c" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>idAFBody</name></member>
      <member refid="classid_a_f_body_1a20ac9a5fa879a8f723f2401f03c9f85b" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>idAFBody</name></member>
      <member refid="classid_a_f_body_1a34f62b0a4b2b0422df7c0a763842512f" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>idAFTree</name></member>
      <member refid="classid_a_f_body_1a9aa2e7a2238b41cdc679879b16a9f869" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>idPhysics_AF</name></member>
      <member refid="classid_a_f_body_1ab1ea6390284b1bbfeb97fbaed3cc39fc" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>inertiaTensor</name></member>
      <member refid="classid_a_f_body_1af9c74e426d1574cfc2b28af8eb0165c2" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>Init</name></member>
      <member refid="classid_a_f_body_1af9c74e426d1574cfc2b28af8eb0165c2" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>Init</name></member>
      <member refid="classid_a_f_body_1afc3573359f528b0f027fe305a3430adc" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>inverseInertiaTensor</name></member>
      <member refid="classid_a_f_body_1acb4c917e1186f26aa7f48087d969ba5d" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>inverseWorldSpatialInertia</name></member>
      <member refid="classid_a_f_body_1a5836c4125b7ed4aa211e54f9bd28ff17" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>InverseWorldSpatialInertiaMultiply</name></member>
      <member refid="classid_a_f_body_1a7a30c87f97202a9e7144175572930155" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>InverseWorldSpatialInertiaMultiply</name></member>
      <member refid="classid_a_f_body_1a3f5a550412a00ebd8ae7c13c748a8d55" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>invI</name></member>
      <member refid="classid_a_f_body_1afca627f5b2c82774900e4de409104475" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>invMass</name></member>
      <member refid="classid_a_f_body_1a37f5dc5a30451c7c5f62127a0936ae2d" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>J</name></member>
      <member refid="classid_a_f_body_1a80b53542122e35bd036358842dda1e6a" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>linearFriction</name></member>
      <member refid="classid_a_f_body_1ad06e7c8ecb6797e9848c354c45ba9a02" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>mass</name></member>
      <member refid="classid_a_f_body_1a9c1f2f0c10986e38667d0ea288b6fe47" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>maxAuxiliaryIndex</name></member>
      <member refid="classid_a_f_body_1a2ccc17fc639cebf47691b5b8bf35bbbb" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>maxSubTreeAuxiliaryIndex</name></member>
      <member refid="classid_a_f_body_1a67b9e5a1c828a6097097be2723c6a2b6" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>name</name></member>
      <member refid="classid_a_f_body_1a281bd18efd67977b381906c4360082db" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>next</name></member>
      <member refid="classid_a_f_body_1a6cff21886a406600dd526f841dd288c3" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>numResponses</name></member>
      <member refid="classid_a_f_body_1a5fe1bc5265f6180a0d4efb9df6ab9084" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>parent</name></member>
      <member refid="classid_a_f_body_1ae25e4c972b1c34008ba2c1c6dc765a74" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>primaryConstraint</name></member>
      <member refid="classid_a_f_body_1a831b8579124ff4a540cfb6fab9772512" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>response</name></member>
      <member refid="classid_a_f_body_1a587992e1c94fa7eb4c9ceae1ba86a980" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>responseIndex</name></member>
      <member refid="classid_a_f_body_1a3128c076681bfa40ad107bd061f32aa2" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>Restore</name></member>
      <member refid="classid_a_f_body_1a3128c076681bfa40ad107bd061f32aa2" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>Restore</name></member>
      <member refid="classid_a_f_body_1a4ee08d7933c9a4b81a0f20c3d58b36e3" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>s</name></member>
      <member refid="classid_a_f_body_1a016084b6b2bf5b59baf4d4dd1f313301" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>Save</name></member>
      <member refid="classid_a_f_body_1a016084b6b2bf5b59baf4d4dd1f313301" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>Save</name></member>
      <member refid="classid_a_f_body_1af343c1fb2b2e428f531d26af459f936b" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>saved</name></member>
      <member refid="classid_a_f_body_1a6496e3614b49b7e44cf255eaf36321da" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>SetAngularVelocity</name></member>
      <member refid="classid_a_f_body_1a6496e3614b49b7e44cf255eaf36321da" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>SetAngularVelocity</name></member>
      <member refid="classid_a_f_body_1a09e24675dbf8a3de1657b93fee395c29" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>SetBouncyness</name></member>
      <member refid="classid_a_f_body_1a09e24675dbf8a3de1657b93fee395c29" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>SetBouncyness</name></member>
      <member refid="classid_a_f_body_1af4e95addb7b21f92dda8faa5982926dd" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>SetClipMask</name></member>
      <member refid="classid_a_f_body_1af4e95addb7b21f92dda8faa5982926dd" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>SetClipMask</name></member>
      <member refid="classid_a_f_body_1a34a3d5e8fffe39f0f88eb6ba48fc7e51" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>SetClipModel</name></member>
      <member refid="classid_a_f_body_1a34a3d5e8fffe39f0f88eb6ba48fc7e51" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>SetClipModel</name></member>
      <member refid="classid_a_f_body_1ad8a04fd58c8a4aa6fe28579e64b05488" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>SetContactMotorDirection</name></member>
      <member refid="classid_a_f_body_1ad8a04fd58c8a4aa6fe28579e64b05488" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>SetContactMotorDirection</name></member>
      <member refid="classid_a_f_body_1a085201ce1929c4378aa33dccf637ad6c" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>SetContactMotorForce</name></member>
      <member refid="classid_a_f_body_1a085201ce1929c4378aa33dccf637ad6c" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>SetContactMotorForce</name></member>
      <member refid="classid_a_f_body_1a8efe183fc8a6be8112350b6b23448f74" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>SetContactMotorVelocity</name></member>
      <member refid="classid_a_f_body_1a8efe183fc8a6be8112350b6b23448f74" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>SetContactMotorVelocity</name></member>
      <member refid="classid_a_f_body_1a846396ab954f89e4769e431583bd2bb7" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>SetDensity</name></member>
      <member refid="classid_a_f_body_1a846396ab954f89e4769e431583bd2bb7" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>SetDensity</name></member>
      <member refid="classid_a_f_body_1a6a32d1fb1ee0eb1b6db11519cef94e41" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>SetFriction</name></member>
      <member refid="classid_a_f_body_1a6a32d1fb1ee0eb1b6db11519cef94e41" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>SetFriction</name></member>
      <member refid="classid_a_f_body_1a8287e1143c6e0ce67bd719bbb4078e60" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>SetFrictionDirection</name></member>
      <member refid="classid_a_f_body_1a8287e1143c6e0ce67bd719bbb4078e60" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>SetFrictionDirection</name></member>
      <member refid="classid_a_f_body_1a98d87c30f2a233346688452bc2930c54" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>SetLinearVelocity</name></member>
      <member refid="classid_a_f_body_1a98d87c30f2a233346688452bc2930c54" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>SetLinearVelocity</name></member>
      <member refid="classid_a_f_body_1a4f16df508a2433e3a278900336e3284f" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>SetSelfCollision</name></member>
      <member refid="classid_a_f_body_1a4f16df508a2433e3a278900336e3284f" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>SetSelfCollision</name></member>
      <member refid="classid_a_f_body_1ae1aab61fbc425ea413ac8b9a3fa02be6" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>SetWorldAxis</name></member>
      <member refid="classid_a_f_body_1ae1aab61fbc425ea413ac8b9a3fa02be6" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>SetWorldAxis</name></member>
      <member refid="classid_a_f_body_1a9eddb9b9faa78c60ddd8452ebcb8e1f5" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>SetWorldOrigin</name></member>
      <member refid="classid_a_f_body_1a9eddb9b9faa78c60ddd8452ebcb8e1f5" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>SetWorldOrigin</name></member>
      <member refid="classid_a_f_body_1ad4cec18fe46c1b25a50cc9be3b2b12de" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>state</name></member>
      <member refid="classid_a_f_body_1a92b90b21f148e225ed219620a027b5af" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>totalForce</name></member>
      <member refid="classid_a_f_body_1a07f7d68c57ff2897ff2c67d1139242c1" prot="private" virt="non-virtual"><scope>idAFBody</scope><name>tree</name></member>
      <member refid="classid_a_f_body_1aeafcbd2964c9a7ee8e14fdd09c7adb4b" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>~idAFBody</name></member>
      <member refid="classid_a_f_body_1aeafcbd2964c9a7ee8e14fdd09c7adb4b" prot="public" virt="non-virtual"><scope>idAFBody</scope><name>~idAFBody</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
