<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_block_alloc" kind="class" prot="public">
    <compoundname>idBlockAlloc</compoundname>
    <innerclass refid="structid_block_alloc_1_1block__s" prot="private">idBlockAlloc::block_s</innerclass>
    <innerclass refid="structid_block_alloc_1_1element__s" prot="private">idBlockAlloc::element_s</innerclass>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>type</declname>
        <defname>type</defname>
      </param>
      <param>
        <type>int</type>
        <declname>blockSize</declname>
        <defname>blockSize</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classid_block_alloc_1a875b8076968cdacfae00c15e666dc605" prot="private" static="no">
        <type>struct idBlockAlloc::element_s</type>
        <definition>typedef struct idBlockAlloc::element_s  idBlockAlloc&lt; type, blockSize &gt;::element_t</definition>
        <argsstring></argsstring>
        <name>element_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Heap.h" line="172" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="classid_block_alloc_1a38ac091ddacabe7c309b72a8eb35f1f3" prot="private" static="no">
        <type>struct idBlockAlloc::block_s</type>
        <definition>typedef struct idBlockAlloc::block_s  idBlockAlloc&lt; type, blockSize &gt;::block_t</definition>
        <argsstring></argsstring>
        <name>block_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Heap.h" line="176" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classid_block_alloc_1a20b04803e8d967d7cf13fdc250792361" prot="private" static="no" mutable="no">
        <type>block_t *</type>
        <definition>block_t* idBlockAlloc&lt; type, blockSize &gt;::blocks</definition>
        <argsstring></argsstring>
        <name>blocks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Heap.h" line="178" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Heap.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_block_alloc_1a7a3fe98de10a1ff388112de8815b169f" prot="private" static="no" mutable="no">
        <type>element_t *</type>
        <definition>element_t* idBlockAlloc&lt; type, blockSize &gt;::free</definition>
        <argsstring></argsstring>
        <name>free</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Heap.h" line="179" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Heap.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_block_alloc_1ae70d2257866667987e94148d43b0d875" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idBlockAlloc&lt; type, blockSize &gt;::total</definition>
        <argsstring></argsstring>
        <name>total</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Heap.h" line="180" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Heap.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_block_alloc_1ab9571e56c5eea999faa4b37971704369" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idBlockAlloc&lt; type, blockSize &gt;::active</definition>
        <argsstring></argsstring>
        <name>active</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Heap.h" line="181" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Heap.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_block_alloc_1a3f4b8eb46d87ebc804f56790e1fb6af5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idBlockAlloc&lt; type, blockSize &gt;::idBlockAlloc</definition>
        <argsstring>(void)</argsstring>
        <name>idBlockAlloc</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Heap.h" line="156" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Heap.h" bodystart="185" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classid_block_alloc_1a078e81a0420e64e4658e95672a9d04b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idBlockAlloc&lt; type, blockSize &gt;::~idBlockAlloc</definition>
        <argsstring>(void)</argsstring>
        <name>~idBlockAlloc</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Heap.h" line="157" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Heap.h" bodystart="192" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classid_block_alloc_1a06551d784f17c8bf3d092f4bd4d0bdfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idBlockAlloc&lt; type, blockSize &gt;::Shutdown</definition>
        <argsstring>(void)</argsstring>
        <name>Shutdown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Heap.h" line="159" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Heap.h" bodystart="224" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classid_block_alloc_1a8a704aa68c719cd4d576f10d2d3799d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>type *</type>
        <definition>type * idBlockAlloc&lt; type, blockSize &gt;::Alloc</definition>
        <argsstring>(void)</argsstring>
        <name>Alloc</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Heap.h" line="161" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Heap.h" bodystart="197" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classid_block_alloc_1acde7d30e89825696c0b6fb1d51d7fda6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idBlockAlloc&lt; type, blockSize &gt;::Free</definition>
        <argsstring>(type *element)</argsstring>
        <name>Free</name>
        <param>
          <type>type *</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Heap.h" line="162" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Heap.h" bodystart="216" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classid_block_alloc_1ad6b93b667386d35a678bc7b5504c9beb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int idBlockAlloc&lt; type, blockSize &gt;::GetTotalCount</definition>
        <argsstring>(void) const </argsstring>
        <name>GetTotalCount</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Heap.h" line="164" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Heap.h" bodystart="164" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classid_block_alloc_1a3463c4929b76c9710a6a82ef6db260fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int idBlockAlloc&lt; type, blockSize &gt;::GetAllocCount</definition>
        <argsstring>(void) const </argsstring>
        <name>GetAllocCount</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Heap.h" line="165" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Heap.h" bodystart="165" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classid_block_alloc_1a079c02474ec895eb02ac8877cced275c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int idBlockAlloc&lt; type, blockSize &gt;::GetFreeCount</definition>
        <argsstring>(void) const </argsstring>
        <name>GetFreeCount</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Heap.h" line="166" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Heap.h" bodystart="166" bodyend="166"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="E:/sources/3rd_party/DOOM/neo/idlib/Heap.h" line="154" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Heap.h" bodystart="154" bodyend="182"/>
    <listofallmembers>
      <member refid="classid_block_alloc_1ab9571e56c5eea999faa4b37971704369" prot="private" virt="non-virtual"><scope>idBlockAlloc</scope><name>active</name></member>
      <member refid="classid_block_alloc_1a8a704aa68c719cd4d576f10d2d3799d0" prot="public" virt="non-virtual"><scope>idBlockAlloc</scope><name>Alloc</name></member>
      <member refid="classid_block_alloc_1a38ac091ddacabe7c309b72a8eb35f1f3" prot="private" virt="non-virtual"><scope>idBlockAlloc</scope><name>block_t</name></member>
      <member refid="classid_block_alloc_1a20b04803e8d967d7cf13fdc250792361" prot="private" virt="non-virtual"><scope>idBlockAlloc</scope><name>blocks</name></member>
      <member refid="classid_block_alloc_1a875b8076968cdacfae00c15e666dc605" prot="private" virt="non-virtual"><scope>idBlockAlloc</scope><name>element_t</name></member>
      <member refid="classid_block_alloc_1a7a3fe98de10a1ff388112de8815b169f" prot="private" virt="non-virtual"><scope>idBlockAlloc</scope><name>free</name></member>
      <member refid="classid_block_alloc_1acde7d30e89825696c0b6fb1d51d7fda6" prot="public" virt="non-virtual"><scope>idBlockAlloc</scope><name>Free</name></member>
      <member refid="classid_block_alloc_1a3463c4929b76c9710a6a82ef6db260fd" prot="public" virt="non-virtual"><scope>idBlockAlloc</scope><name>GetAllocCount</name></member>
      <member refid="classid_block_alloc_1a079c02474ec895eb02ac8877cced275c" prot="public" virt="non-virtual"><scope>idBlockAlloc</scope><name>GetFreeCount</name></member>
      <member refid="classid_block_alloc_1ad6b93b667386d35a678bc7b5504c9beb" prot="public" virt="non-virtual"><scope>idBlockAlloc</scope><name>GetTotalCount</name></member>
      <member refid="classid_block_alloc_1a3f4b8eb46d87ebc804f56790e1fb6af5" prot="public" virt="non-virtual"><scope>idBlockAlloc</scope><name>idBlockAlloc</name></member>
      <member refid="classid_block_alloc_1a06551d784f17c8bf3d092f4bd4d0bdfc" prot="public" virt="non-virtual"><scope>idBlockAlloc</scope><name>Shutdown</name></member>
      <member refid="classid_block_alloc_1ae70d2257866667987e94148d43b0d875" prot="private" virt="non-virtual"><scope>idBlockAlloc</scope><name>total</name></member>
      <member refid="classid_block_alloc_1a078e81a0420e64e4658e95672a9d04b3" prot="public" virt="non-virtual"><scope>idBlockAlloc</scope><name>~idBlockAlloc</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
