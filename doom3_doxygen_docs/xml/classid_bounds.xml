<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_bounds" kind="class" prot="public">
    <compoundname>idBounds</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classid_bounds_1a28945ddc10643347643cca1a66a19ae3" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>idVec3 idBounds::b[2]</definition>
        <argsstring>[2]</argsstring>
        <name>b</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="109" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_bounds_1aba5f4575f2e6797b669eb7e06f76db38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idBounds::idBounds</definition>
        <argsstring>(void)</argsstring>
        <name>idBounds</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="42" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="114" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a882e4231e6f5083f35dfe4733874cff7" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idBounds::idBounds</definition>
        <argsstring>(const idVec3 &amp;mins, const idVec3 &amp;maxs)</argsstring>
        <name>idBounds</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>mins</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>maxs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="43" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="117" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a43ae4a2dbf2a059567419feab71de0aa" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idBounds::idBounds</definition>
        <argsstring>(const idVec3 &amp;point)</argsstring>
        <name>idBounds</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="44" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1aaed1192776ecf8c28a3171526247cbcd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>ID_INLINE const idVec3 &amp; idBounds::operator[]</definition>
        <argsstring>(const int index) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>const int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="46" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="127" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1ad47ec646d6254790327a682a6fa888d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>ID_INLINE idVec3 &amp; idBounds::operator[]</definition>
        <argsstring>(const int index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="47" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="131" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1aabe26042edc4cc51db7d72d8d1eb454b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_bounds" kindref="compound">idBounds</ref></type>
        <definition>ID_INLINE idBounds idBounds::operator+</definition>
        <argsstring>(const idVec3 &amp;t) const </argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="48" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="135" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a8c7f4e9976a336c962feddbcf98477a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
        <definition>ID_INLINE idBounds &amp; idBounds::operator+=</definition>
        <argsstring>(const idVec3 &amp;t)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="49" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="139" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a9277b561e68d20ede0c9d0d45d347f0b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_bounds" kindref="compound">idBounds</ref></type>
        <definition>ID_INLINE idBounds idBounds::operator*</definition>
        <argsstring>(const idMat3 &amp;r) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="50" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="145" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1ab1b3e8ef88d8160c4e1207ffca8ddd46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
        <definition>ID_INLINE idBounds &amp; idBounds::operator*=</definition>
        <argsstring>(const idMat3 &amp;r)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="51" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a7c467503efddfb8da5b988ed4e9a55ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_bounds" kindref="compound">idBounds</ref></type>
        <definition>ID_INLINE idBounds idBounds::operator+</definition>
        <argsstring>(const idBounds &amp;a) const </argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="52" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="156" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1ad4e5ffd65e4fd09f0633b160eee6f0ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
        <definition>ID_INLINE idBounds &amp; idBounds::operator+=</definition>
        <argsstring>(const idBounds &amp;a)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="53" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="163" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1abf416925d36c645b81cabc8378b5b7b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_bounds" kindref="compound">idBounds</ref></type>
        <definition>ID_INLINE idBounds idBounds::operator-</definition>
        <argsstring>(const idBounds &amp;a) const </argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="54" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="168" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a6c46110bbd366e4d6eb5c48dca261439" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
        <definition>ID_INLINE idBounds &amp; idBounds::operator-=</definition>
        <argsstring>(const idBounds &amp;a)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="55" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="176" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a1ce0f7e768e537e88501f434c51eb9c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idBounds::Compare</definition>
        <argsstring>(const idBounds &amp;a) const </argsstring>
        <name>Compare</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="57" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="185" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1aa8f3f1cc0dcdc10b11a58591a79ea92d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idBounds::Compare</definition>
        <argsstring>(const idBounds &amp;a, const float epsilon) const </argsstring>
        <name>Compare</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="58" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="189" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1ab30f334de70615f1ee6201bde5e1a407" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idBounds::operator==</definition>
        <argsstring>(const idBounds &amp;a) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="59" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="193" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a55465ae97c8cac03c577733c03feb702" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idBounds::operator!=</definition>
        <argsstring>(const idBounds &amp;a) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="60" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="197" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a0f56c3377f5efb132c26a05766d8f891" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idBounds::Clear</definition>
        <argsstring>(void)</argsstring>
        <name>Clear</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="62" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="201" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a0d90a790a8fdcd73140a7921d23d66c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idBounds::Zero</definition>
        <argsstring>(void)</argsstring>
        <name>Zero</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="63" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="206" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a72d8d9e292392a9dd47ace056526cc18" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>ID_INLINE idVec3 idBounds::GetCenter</definition>
        <argsstring>(void) const </argsstring>
        <name>GetCenter</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="65" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="211" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1adc10c15288f44543d9603f894dda068e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float idBounds::GetRadius</definition>
        <argsstring>(void) const </argsstring>
        <name>GetRadius</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="66" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.cpp" bodystart="39" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a3c0044c7e79cd28181a8c9fff06cdfa7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float idBounds::GetRadius</definition>
        <argsstring>(const idVec3 &amp;center) const </argsstring>
        <name>GetRadius</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>center</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="67" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.cpp" bodystart="61" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1af45d4cf533aa45b916c321b2e12f151b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>ID_INLINE float idBounds::GetVolume</definition>
        <argsstring>(void) const </argsstring>
        <name>GetVolume</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="68" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="215" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1adb6113cca6073ca6f5f6c4c24c8f4839" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idBounds::IsCleared</definition>
        <argsstring>(void) const </argsstring>
        <name>IsCleared</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="69" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="222" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a5b25b9fd85c03f63ee31dd69c49e1ea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idBounds::AddPoint</definition>
        <argsstring>(const idVec3 &amp;v)</argsstring>
        <name>AddPoint</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="71" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="226" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a42f8d1e23a8a9185f3795271fffb0092" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idBounds::AddBounds</definition>
        <argsstring>(const idBounds &amp;a)</argsstring>
        <name>AddBounds</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="72" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="255" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a86ef7e5c3a3c0d51dc6c9aadcafc94d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_bounds" kindref="compound">idBounds</ref></type>
        <definition>ID_INLINE idBounds idBounds::Intersect</definition>
        <argsstring>(const idBounds &amp;a) const </argsstring>
        <name>Intersect</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="73" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="284" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a8ae5c2eed5e6f41290102bd19dfeecfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
        <definition>ID_INLINE idBounds &amp; idBounds::IntersectSelf</definition>
        <argsstring>(const idBounds &amp;a)</argsstring>
        <name>IntersectSelf</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="74" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="295" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1abbd0f5fb37d8d7ee8a2b8efbe1a5054e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_bounds" kindref="compound">idBounds</ref></type>
        <definition>ID_INLINE idBounds idBounds::Expand</definition>
        <argsstring>(const float d) const </argsstring>
        <name>Expand</name>
        <param>
          <type>const float</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="75" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="317" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a19613551fe8974ffd1a38af0d1a4e6c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
        <definition>ID_INLINE idBounds &amp; idBounds::ExpandSelf</definition>
        <argsstring>(const float d)</argsstring>
        <name>ExpandSelf</name>
        <param>
          <type>const float</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="76" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="322" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1aa6e0dfb6f77779ca057bae0175f97647" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_bounds" kindref="compound">idBounds</ref></type>
        <definition>ID_INLINE idBounds idBounds::Translate</definition>
        <argsstring>(const idVec3 &amp;translation) const </argsstring>
        <name>Translate</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>translation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="77" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="332" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a063cce18da84526dd2179f042ebac33f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
        <definition>ID_INLINE idBounds &amp; idBounds::TranslateSelf</definition>
        <argsstring>(const idVec3 &amp;translation)</argsstring>
        <name>TranslateSelf</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>translation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="78" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="336" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a511347c8d0dfa2dc87c554423f5978bc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_bounds" kindref="compound">idBounds</ref></type>
        <definition>ID_INLINE idBounds idBounds::Rotate</definition>
        <argsstring>(const idMat3 &amp;rotation) const </argsstring>
        <name>Rotate</name>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="79" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="342" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a1ac4003a912c43d9f92b05fceff2f1e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
        <definition>ID_INLINE idBounds &amp; idBounds::RotateSelf</definition>
        <argsstring>(const idMat3 &amp;rotation)</argsstring>
        <name>RotateSelf</name>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="80" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="348" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a30ad01ab5a441834dd4783982090397d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float idBounds::PlaneDistance</definition>
        <argsstring>(const idPlane &amp;plane) const </argsstring>
        <name>PlaneDistance</name>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>plane</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="82" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.cpp" bodystart="83" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a3bddebd210116137d04cf12cbbdd9d6b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idBounds::PlaneSide</definition>
        <argsstring>(const idPlane &amp;plane, const float epsilon=ON_EPSILON) const </argsstring>
        <name>PlaneSide</name>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>plane</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
          <defval>ON_EPSILON</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="83" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.cpp" bodystart="108" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1aa4daafdbb2c3dec39000e88988579d4a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idBounds::ContainsPoint</definition>
        <argsstring>(const idVec3 &amp;p) const </argsstring>
        <name>ContainsPoint</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="85" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="353" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a26279a045c80ddafefecee86c81e6d48" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idBounds::IntersectsBounds</definition>
        <argsstring>(const idBounds &amp;a) const </argsstring>
        <name>IntersectsBounds</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="86" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="361" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a7583b3dc30a674e68c082c93ed2b70d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idBounds::LineIntersection</definition>
        <argsstring>(const idVec3 &amp;start, const idVec3 &amp;end) const </argsstring>
        <name>LineIntersection</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="87" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.cpp" bodystart="135" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a8ec63f975ef8b2426ea5d44af3ab8482" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idBounds::RayIntersection</definition>
        <argsstring>(const idVec3 &amp;start, const idVec3 &amp;dir, float &amp;scale) const </argsstring>
        <name>RayIntersection</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="89" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.cpp" bodystart="184" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a5129a475b685d486f0baca0632b7cb15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idBounds::FromTransformedBounds</definition>
        <argsstring>(const idBounds &amp;bounds, const idVec3 &amp;origin, const idMat3 &amp;axis)</argsstring>
        <name>FromTransformedBounds</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>axis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="92" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.cpp" bodystart="232" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a5e310671da904cf41dbff1a19a26dbaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idBounds::FromPoints</definition>
        <argsstring>(const idVec3 *points, const int numPoints)</argsstring>
        <name>FromPoints</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> *</type>
          <declname>points</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numPoints</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="94" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.cpp" bodystart="257" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a019e074bc1350e189a5021178c832db8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idBounds::FromPointTranslation</definition>
        <argsstring>(const idVec3 &amp;point, const idVec3 &amp;translation)</argsstring>
        <name>FromPointTranslation</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>translation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="96" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.cpp" bodystart="268" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1aaf3b654db14d38198b565de801530960" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idBounds::FromBoundsTranslation</definition>
        <argsstring>(const idBounds &amp;bounds, const idVec3 &amp;origin, const idMat3 &amp;axis, const idVec3 &amp;translation)</argsstring>
        <name>FromBoundsTranslation</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>translation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="97" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.cpp" bodystart="290" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1ad5366b2ebcc5fc53d56231e1ff6c5109" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idBounds::FromPointRotation</definition>
        <argsstring>(const idVec3 &amp;point, const idRotation &amp;rotation)</argsstring>
        <name>FromPointRotation</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>const <ref refid="classid_rotation" kindref="compound">idRotation</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="99" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.cpp" bodystart="363" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1ab6d06037d6a0d5baafd36be7a766109b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idBounds::FromBoundsRotation</definition>
        <argsstring>(const idBounds &amp;bounds, const idVec3 &amp;origin, const idMat3 &amp;axis, const idRotation &amp;rotation)</argsstring>
        <name>FromBoundsRotation</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>const <ref refid="classid_rotation" kindref="compound">idRotation</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="100" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.cpp" bodystart="386" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a896bc17fa55ecf21f39c7fe4a63db5ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idBounds::ToPoints</definition>
        <argsstring>(idVec3 points[8]) const </argsstring>
        <name>ToPoints</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>points</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="102" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.cpp" bodystart="418" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1a968d98b49ba27ac663f4442da142de17" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_sphere" kindref="compound">idSphere</ref></type>
        <definition>ID_INLINE idSphere idBounds::ToSphere</definition>
        <argsstring>(void) const </argsstring>
        <name>ToSphere</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="103" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="369" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1ae55734af5bdc0a82eb0f299f36e9b6a7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idBounds::AxisProjection</definition>
        <argsstring>(const idVec3 &amp;dir, float &amp;min, float &amp;max) const </argsstring>
        <name>AxisProjection</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="105" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="376" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="classid_bounds_1afe8fdea57f4f370bac6cac62ed1d0743" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idBounds::AxisProjection</definition>
        <argsstring>(const idVec3 &amp;origin, const idMat3 &amp;axis, const idVec3 &amp;dir, float &amp;min, float &amp;max) const </argsstring>
        <name>AxisProjection</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="106" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="392" bodyend="407"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" line="40" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Bounds.h" bodystart="40" bodyend="110"/>
    <listofallmembers>
      <member refid="classid_bounds_1a42f8d1e23a8a9185f3795271fffb0092" prot="public" virt="non-virtual"><scope>idBounds</scope><name>AddBounds</name></member>
      <member refid="classid_bounds_1a5b25b9fd85c03f63ee31dd69c49e1ea8" prot="public" virt="non-virtual"><scope>idBounds</scope><name>AddPoint</name></member>
      <member refid="classid_bounds_1ae55734af5bdc0a82eb0f299f36e9b6a7" prot="public" virt="non-virtual"><scope>idBounds</scope><name>AxisProjection</name></member>
      <member refid="classid_bounds_1afe8fdea57f4f370bac6cac62ed1d0743" prot="public" virt="non-virtual"><scope>idBounds</scope><name>AxisProjection</name></member>
      <member refid="classid_bounds_1a28945ddc10643347643cca1a66a19ae3" prot="private" virt="non-virtual"><scope>idBounds</scope><name>b</name></member>
      <member refid="classid_bounds_1a0f56c3377f5efb132c26a05766d8f891" prot="public" virt="non-virtual"><scope>idBounds</scope><name>Clear</name></member>
      <member refid="classid_bounds_1a1ce0f7e768e537e88501f434c51eb9c0" prot="public" virt="non-virtual"><scope>idBounds</scope><name>Compare</name></member>
      <member refid="classid_bounds_1aa8f3f1cc0dcdc10b11a58591a79ea92d" prot="public" virt="non-virtual"><scope>idBounds</scope><name>Compare</name></member>
      <member refid="classid_bounds_1aa4daafdbb2c3dec39000e88988579d4a" prot="public" virt="non-virtual"><scope>idBounds</scope><name>ContainsPoint</name></member>
      <member refid="classid_bounds_1abbd0f5fb37d8d7ee8a2b8efbe1a5054e" prot="public" virt="non-virtual"><scope>idBounds</scope><name>Expand</name></member>
      <member refid="classid_bounds_1a19613551fe8974ffd1a38af0d1a4e6c2" prot="public" virt="non-virtual"><scope>idBounds</scope><name>ExpandSelf</name></member>
      <member refid="classid_bounds_1ab6d06037d6a0d5baafd36be7a766109b" prot="public" virt="non-virtual"><scope>idBounds</scope><name>FromBoundsRotation</name></member>
      <member refid="classid_bounds_1aaf3b654db14d38198b565de801530960" prot="public" virt="non-virtual"><scope>idBounds</scope><name>FromBoundsTranslation</name></member>
      <member refid="classid_bounds_1ad5366b2ebcc5fc53d56231e1ff6c5109" prot="public" virt="non-virtual"><scope>idBounds</scope><name>FromPointRotation</name></member>
      <member refid="classid_bounds_1a5e310671da904cf41dbff1a19a26dbaa" prot="public" virt="non-virtual"><scope>idBounds</scope><name>FromPoints</name></member>
      <member refid="classid_bounds_1a019e074bc1350e189a5021178c832db8" prot="public" virt="non-virtual"><scope>idBounds</scope><name>FromPointTranslation</name></member>
      <member refid="classid_bounds_1a5129a475b685d486f0baca0632b7cb15" prot="public" virt="non-virtual"><scope>idBounds</scope><name>FromTransformedBounds</name></member>
      <member refid="classid_bounds_1a72d8d9e292392a9dd47ace056526cc18" prot="public" virt="non-virtual"><scope>idBounds</scope><name>GetCenter</name></member>
      <member refid="classid_bounds_1adc10c15288f44543d9603f894dda068e" prot="public" virt="non-virtual"><scope>idBounds</scope><name>GetRadius</name></member>
      <member refid="classid_bounds_1a3c0044c7e79cd28181a8c9fff06cdfa7" prot="public" virt="non-virtual"><scope>idBounds</scope><name>GetRadius</name></member>
      <member refid="classid_bounds_1af45d4cf533aa45b916c321b2e12f151b" prot="public" virt="non-virtual"><scope>idBounds</scope><name>GetVolume</name></member>
      <member refid="classid_bounds_1aba5f4575f2e6797b669eb7e06f76db38" prot="public" virt="non-virtual"><scope>idBounds</scope><name>idBounds</name></member>
      <member refid="classid_bounds_1a882e4231e6f5083f35dfe4733874cff7" prot="public" virt="non-virtual"><scope>idBounds</scope><name>idBounds</name></member>
      <member refid="classid_bounds_1a43ae4a2dbf2a059567419feab71de0aa" prot="public" virt="non-virtual"><scope>idBounds</scope><name>idBounds</name></member>
      <member refid="classid_bounds_1a86ef7e5c3a3c0d51dc6c9aadcafc94d6" prot="public" virt="non-virtual"><scope>idBounds</scope><name>Intersect</name></member>
      <member refid="classid_bounds_1a26279a045c80ddafefecee86c81e6d48" prot="public" virt="non-virtual"><scope>idBounds</scope><name>IntersectsBounds</name></member>
      <member refid="classid_bounds_1a8ae5c2eed5e6f41290102bd19dfeecfa" prot="public" virt="non-virtual"><scope>idBounds</scope><name>IntersectSelf</name></member>
      <member refid="classid_bounds_1adb6113cca6073ca6f5f6c4c24c8f4839" prot="public" virt="non-virtual"><scope>idBounds</scope><name>IsCleared</name></member>
      <member refid="classid_bounds_1a7583b3dc30a674e68c082c93ed2b70d0" prot="public" virt="non-virtual"><scope>idBounds</scope><name>LineIntersection</name></member>
      <member refid="classid_bounds_1a55465ae97c8cac03c577733c03feb702" prot="public" virt="non-virtual"><scope>idBounds</scope><name>operator!=</name></member>
      <member refid="classid_bounds_1a9277b561e68d20ede0c9d0d45d347f0b" prot="public" virt="non-virtual"><scope>idBounds</scope><name>operator*</name></member>
      <member refid="classid_bounds_1ab1b3e8ef88d8160c4e1207ffca8ddd46" prot="public" virt="non-virtual"><scope>idBounds</scope><name>operator*=</name></member>
      <member refid="classid_bounds_1aabe26042edc4cc51db7d72d8d1eb454b" prot="public" virt="non-virtual"><scope>idBounds</scope><name>operator+</name></member>
      <member refid="classid_bounds_1a7c467503efddfb8da5b988ed4e9a55ce" prot="public" virt="non-virtual"><scope>idBounds</scope><name>operator+</name></member>
      <member refid="classid_bounds_1a8c7f4e9976a336c962feddbcf98477a4" prot="public" virt="non-virtual"><scope>idBounds</scope><name>operator+=</name></member>
      <member refid="classid_bounds_1ad4e5ffd65e4fd09f0633b160eee6f0ae" prot="public" virt="non-virtual"><scope>idBounds</scope><name>operator+=</name></member>
      <member refid="classid_bounds_1abf416925d36c645b81cabc8378b5b7b2" prot="public" virt="non-virtual"><scope>idBounds</scope><name>operator-</name></member>
      <member refid="classid_bounds_1a6c46110bbd366e4d6eb5c48dca261439" prot="public" virt="non-virtual"><scope>idBounds</scope><name>operator-=</name></member>
      <member refid="classid_bounds_1ab30f334de70615f1ee6201bde5e1a407" prot="public" virt="non-virtual"><scope>idBounds</scope><name>operator==</name></member>
      <member refid="classid_bounds_1aaed1192776ecf8c28a3171526247cbcd" prot="public" virt="non-virtual"><scope>idBounds</scope><name>operator[]</name></member>
      <member refid="classid_bounds_1ad47ec646d6254790327a682a6fa888d3" prot="public" virt="non-virtual"><scope>idBounds</scope><name>operator[]</name></member>
      <member refid="classid_bounds_1a30ad01ab5a441834dd4783982090397d" prot="public" virt="non-virtual"><scope>idBounds</scope><name>PlaneDistance</name></member>
      <member refid="classid_bounds_1a3bddebd210116137d04cf12cbbdd9d6b" prot="public" virt="non-virtual"><scope>idBounds</scope><name>PlaneSide</name></member>
      <member refid="classid_bounds_1a8ec63f975ef8b2426ea5d44af3ab8482" prot="public" virt="non-virtual"><scope>idBounds</scope><name>RayIntersection</name></member>
      <member refid="classid_bounds_1a511347c8d0dfa2dc87c554423f5978bc" prot="public" virt="non-virtual"><scope>idBounds</scope><name>Rotate</name></member>
      <member refid="classid_bounds_1a1ac4003a912c43d9f92b05fceff2f1e5" prot="public" virt="non-virtual"><scope>idBounds</scope><name>RotateSelf</name></member>
      <member refid="classid_bounds_1a896bc17fa55ecf21f39c7fe4a63db5ac" prot="public" virt="non-virtual"><scope>idBounds</scope><name>ToPoints</name></member>
      <member refid="classid_bounds_1a968d98b49ba27ac663f4442da142de17" prot="public" virt="non-virtual"><scope>idBounds</scope><name>ToSphere</name></member>
      <member refid="classid_bounds_1aa6e0dfb6f77779ca057bae0175f97647" prot="public" virt="non-virtual"><scope>idBounds</scope><name>Translate</name></member>
      <member refid="classid_bounds_1a063cce18da84526dd2179f042ebac33f" prot="public" virt="non-virtual"><scope>idBounds</scope><name>TranslateSelf</name></member>
      <member refid="classid_bounds_1a0d90a790a8fdcd73140a7921d23d66c3" prot="public" virt="non-virtual"><scope>idBounds</scope><name>Zero</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
