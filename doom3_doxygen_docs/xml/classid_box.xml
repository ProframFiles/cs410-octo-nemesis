<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_box" kind="class" prot="public">
    <compoundname>idBox</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classid_box_1aa413a6a9428b95795b086b3d839fc24f" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>idVec3 idBox::center</definition>
        <argsstring></argsstring>
        <name>center</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="110" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_box_1a20a791a11a144ada82ba6429011ad08f" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>idVec3 idBox::extents</definition>
        <argsstring></argsstring>
        <name>extents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="111" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_box_1a50db47226d74b6405da3a57e1010819c" prot="private" static="no" mutable="no">
        <type><ref refid="classid_mat3" kindref="compound">idMat3</ref></type>
        <definition>idMat3 idBox::axis</definition>
        <argsstring></argsstring>
        <name>axis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="112" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_box_1aa817365523f4319bd9d7d7ad3a75dda8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idBox::idBox</definition>
        <argsstring>(void)</argsstring>
        <name>idBox</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="42" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="117" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1aaff1513f66b75c99df9eae2bfe9aef4d" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idBox::idBox</definition>
        <argsstring>(const idVec3 &amp;center, const idVec3 &amp;extents, const idMat3 &amp;axis)</argsstring>
        <name>idBox</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>center</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>extents</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>axis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="43" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="120" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1aa22a7366e4a84d760caadf7715ddfb82" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idBox::idBox</definition>
        <argsstring>(const idVec3 &amp;point)</argsstring>
        <name>idBox</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="44" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="126" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1a10a178bbc91d1854514701b0b734f751" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idBox::idBox</definition>
        <argsstring>(const idBounds &amp;bounds)</argsstring>
        <name>idBox</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="45" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="132" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1a02bf2ea947e7644093b960f0ad855178" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idBox::idBox</definition>
        <argsstring>(const idBounds &amp;bounds, const idVec3 &amp;origin, const idMat3 &amp;axis)</argsstring>
        <name>idBox</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>axis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="46" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="138" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1a87dfd086efbfa914dcbade3871189b89" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_box" kindref="compound">idBox</ref></type>
        <definition>ID_INLINE idBox idBox::operator+</definition>
        <argsstring>(const idVec3 &amp;t) const </argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="48" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1a75c0e9d802a7f3f0f717eaf58fac49a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_box" kindref="compound">idBox</ref> &amp;</type>
        <definition>ID_INLINE idBox &amp; idBox::operator+=</definition>
        <argsstring>(const idVec3 &amp;t)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="49" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1af48bbd157a86db26819b8d22c2d7adf2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_box" kindref="compound">idBox</ref></type>
        <definition>ID_INLINE idBox idBox::operator*</definition>
        <argsstring>(const idMat3 &amp;r) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="50" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="154" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1ab91b34f2cc309383c42a79abec6538d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_box" kindref="compound">idBox</ref> &amp;</type>
        <definition>ID_INLINE idBox &amp; idBox::operator*=</definition>
        <argsstring>(const idMat3 &amp;r)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="51" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="158" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1ab7b133f58fc1fd31946c215a16d61220" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_box" kindref="compound">idBox</ref></type>
        <definition>ID_INLINE idBox idBox::operator+</definition>
        <argsstring>(const idBox &amp;a) const </argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classid_box" kindref="compound">idBox</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="52" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="164" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1a4e8769d7a67943748361ad894a6b9158" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_box" kindref="compound">idBox</ref> &amp;</type>
        <definition>ID_INLINE idBox &amp; idBox::operator+=</definition>
        <argsstring>(const idBox &amp;a)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classid_box" kindref="compound">idBox</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="53" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="171" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1aa473f77587c7ceb66185fcc777fe0ca6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_box" kindref="compound">idBox</ref></type>
        <definition>ID_INLINE idBox idBox::operator-</definition>
        <argsstring>(const idBox &amp;a) const </argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classid_box" kindref="compound">idBox</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="54" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="176" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1aef786daf7df7e5c4c9f7f8de88028ceb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_box" kindref="compound">idBox</ref> &amp;</type>
        <definition>ID_INLINE idBox &amp; idBox::operator-=</definition>
        <argsstring>(const idBox &amp;a)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classid_box" kindref="compound">idBox</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="55" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="180" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1a0b86671fff66447e4ca16238abd14dab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idBox::Compare</definition>
        <argsstring>(const idBox &amp;a) const </argsstring>
        <name>Compare</name>
        <param>
          <type>const <ref refid="classid_box" kindref="compound">idBox</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="57" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="185" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1a9d966a3fd40bc9bce75e1f8eae130454" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idBox::Compare</definition>
        <argsstring>(const idBox &amp;a, const float epsilon) const </argsstring>
        <name>Compare</name>
        <param>
          <type>const <ref refid="classid_box" kindref="compound">idBox</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="58" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="189" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1a580d9477dd3f39dd2f1dc1fab9b4988d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idBox::operator==</definition>
        <argsstring>(const idBox &amp;a) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classid_box" kindref="compound">idBox</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="59" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="193" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1a6b484e987aad72f195449da9456af966" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idBox::operator!=</definition>
        <argsstring>(const idBox &amp;a) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classid_box" kindref="compound">idBox</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="60" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="197" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1a32d3ea3410d01fe3f948a1599ab99787" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idBox::Clear</definition>
        <argsstring>(void)</argsstring>
        <name>Clear</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="62" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="201" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1a6ddb85586d6fbe770144259f7d6e8fac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idBox::Zero</definition>
        <argsstring>(void)</argsstring>
        <name>Zero</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="63" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="207" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1aedf556b35028ae35d119316ab61243db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>ID_INLINE const idVec3 &amp; idBox::GetCenter</definition>
        <argsstring>(void) const </argsstring>
        <name>GetCenter</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="65" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="213" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1ac07bd1dffac517790b616c990ccb62ff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>ID_INLINE const idVec3 &amp; idBox::GetExtents</definition>
        <argsstring>(void) const </argsstring>
        <name>GetExtents</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="66" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="217" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1a4a0f76cb0c0ff9f265755879c8979b99" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
        <definition>ID_INLINE const idMat3 &amp; idBox::GetAxis</definition>
        <argsstring>(void) const </argsstring>
        <name>GetAxis</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="67" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="221" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1a333f482e295560d33583865937208353" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>ID_INLINE float idBox::GetVolume</definition>
        <argsstring>(void) const </argsstring>
        <name>GetVolume</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="68" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="225" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1a68ad5d07ce5d608799c13cc317d63c1a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idBox::IsCleared</definition>
        <argsstring>(void) const </argsstring>
        <name>IsCleared</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="69" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="229" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1a736379632954abfa969aa5e4a79e39ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idBox::AddPoint</definition>
        <argsstring>(const idVec3 &amp;v)</argsstring>
        <name>AddPoint</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="71" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.cpp" bodystart="194" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1abe9f79264e4b77d37277d0ca1f1191d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idBox::AddBox</definition>
        <argsstring>(const idBox &amp;a)</argsstring>
        <name>AddBox</name>
        <param>
          <type>const <ref refid="classid_box" kindref="compound">idBox</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="72" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.cpp" bodystart="245" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1aa7353758b22dfd5f17acd0043b4d07b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_box" kindref="compound">idBox</ref></type>
        <definition>ID_INLINE idBox idBox::Expand</definition>
        <argsstring>(const float d) const </argsstring>
        <name>Expand</name>
        <param>
          <type>const float</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="73" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="233" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1afd345c17e3e6efcc4d4675719dbc2407" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_box" kindref="compound">idBox</ref> &amp;</type>
        <definition>ID_INLINE idBox &amp; idBox::ExpandSelf</definition>
        <argsstring>(const float d)</argsstring>
        <name>ExpandSelf</name>
        <param>
          <type>const float</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="74" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="237" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1a7cad08a2adf5aab8b585f003f3824e36" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_box" kindref="compound">idBox</ref></type>
        <definition>ID_INLINE idBox idBox::Translate</definition>
        <argsstring>(const idVec3 &amp;translation) const </argsstring>
        <name>Translate</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>translation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="75" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="244" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1a1edbb20b10209190bff24bcd572f1100" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_box" kindref="compound">idBox</ref> &amp;</type>
        <definition>ID_INLINE idBox &amp; idBox::TranslateSelf</definition>
        <argsstring>(const idVec3 &amp;translation)</argsstring>
        <name>TranslateSelf</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>translation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="76" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="248" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1a05eb14e9c166aec3122ee93402dc357a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_box" kindref="compound">idBox</ref></type>
        <definition>ID_INLINE idBox idBox::Rotate</definition>
        <argsstring>(const idMat3 &amp;rotation) const </argsstring>
        <name>Rotate</name>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="77" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="253" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1a60fdd260b1f78bead19db286ce373b7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_box" kindref="compound">idBox</ref> &amp;</type>
        <definition>ID_INLINE idBox &amp; idBox::RotateSelf</definition>
        <argsstring>(const idMat3 &amp;rotation)</argsstring>
        <name>RotateSelf</name>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="78" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="257" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1a843ac1d8bbbc1a388488aa085a6f9942" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float idBox::PlaneDistance</definition>
        <argsstring>(const idPlane &amp;plane) const </argsstring>
        <name>PlaneDistance</name>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>plane</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="80" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.cpp" bodystart="332" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1a912074a5dc33ee766e3288d10dd0d784" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idBox::PlaneSide</definition>
        <argsstring>(const idPlane &amp;plane, const float epsilon=ON_EPSILON) const </argsstring>
        <name>PlaneSide</name>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>plane</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
          <defval>ON_EPSILON</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="81" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.cpp" bodystart="354" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1aa9a39ec8202490f9e454e76159a95784" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idBox::ContainsPoint</definition>
        <argsstring>(const idVec3 &amp;p) const </argsstring>
        <name>ContainsPoint</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="83" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="263" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1abb3e7e1e721e352b1cce08aa7e453862" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idBox::IntersectsBox</definition>
        <argsstring>(const idBox &amp;a) const </argsstring>
        <name>IntersectsBox</name>
        <param>
          <type>const <ref refid="classid_box" kindref="compound">idBox</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="84" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.cpp" bodystart="376" bodyend="529"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1a484aa829e99738d531d6f78fde75883b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idBox::LineIntersection</definition>
        <argsstring>(const idVec3 &amp;start, const idVec3 &amp;end) const </argsstring>
        <name>LineIntersection</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="85" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.cpp" bodystart="538" bodyend="574"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1ad3b105269ccc9652b913be1eb21194d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idBox::RayIntersection</definition>
        <argsstring>(const idVec3 &amp;start, const idVec3 &amp;dir, float &amp;scale1, float &amp;scale2) const </argsstring>
        <name>RayIntersection</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>scale1</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>scale2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="87" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.cpp" bodystart="614" bodyend="628"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1a167bf63299915f2841272ba56b83b329" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idBox::FromPoints</definition>
        <argsstring>(const idVec3 *points, const int numPoints)</argsstring>
        <name>FromPoints</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> *</type>
          <declname>points</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numPoints</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="90" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.cpp" bodystart="637" bodyend="710"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1a50f3d29783b6228228b6f5542e2101a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idBox::FromPointTranslation</definition>
        <argsstring>(const idVec3 &amp;point, const idVec3 &amp;translation)</argsstring>
        <name>FromPointTranslation</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>translation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="92" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.cpp" bodystart="719" bodyend="721"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1aa1b65b2a99861c2d70fda8ed2f6d896b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idBox::FromBoxTranslation</definition>
        <argsstring>(const idBox &amp;box, const idVec3 &amp;translation)</argsstring>
        <name>FromBoxTranslation</name>
        <param>
          <type>const <ref refid="classid_box" kindref="compound">idBox</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>translation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="93" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.cpp" bodystart="730" bodyend="732"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1a9b812db10a3543206ea83f5ec326b869" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idBox::FromPointRotation</definition>
        <argsstring>(const idVec3 &amp;point, const idRotation &amp;rotation)</argsstring>
        <name>FromPointRotation</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>const <ref refid="classid_rotation" kindref="compound">idRotation</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="95" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.cpp" bodystart="741" bodyend="743"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1a91693dbcb0aadb0b44434f28837f5050" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idBox::FromBoxRotation</definition>
        <argsstring>(const idBox &amp;box, const idRotation &amp;rotation)</argsstring>
        <name>FromBoxRotation</name>
        <param>
          <type>const <ref refid="classid_box" kindref="compound">idBox</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>const <ref refid="classid_rotation" kindref="compound">idRotation</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="96" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.cpp" bodystart="752" bodyend="754"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1aa726b9ce900c3a3ac2244165ba8ccd6a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idBox::ToPoints</definition>
        <argsstring>(idVec3 points[8]) const </argsstring>
        <name>ToPoints</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>points</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="98" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.cpp" bodystart="761" bodyend="780"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1a25666fc6b8b2771bb8c6aeb45e85bdff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_sphere" kindref="compound">idSphere</ref></type>
        <definition>ID_INLINE idSphere idBox::ToSphere</definition>
        <argsstring>(void) const </argsstring>
        <name>ToSphere</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="99" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="273" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1ac10ebe560b7e2d5a616a5bc92a934115" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idBox::AxisProjection</definition>
        <argsstring>(const idVec3 &amp;dir, float &amp;min, float &amp;max) const </argsstring>
        <name>AxisProjection</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="102" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="277" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1a813dafdcbc7c438ac1927f2dc3de1da4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idBox::AxisProjection</definition>
        <argsstring>(const idMat3 &amp;ax, idBounds &amp;bounds) const </argsstring>
        <name>AxisProjection</name>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>ax</declname>
        </param>
        <param>
          <type><ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="103" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="286" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1ae051d0cfa9320d9bb62f631c4957c39a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idBox::GetProjectionSilhouetteVerts</definition>
        <argsstring>(const idVec3 &amp;projectionOrigin, idVec3 silVerts[6]) const </argsstring>
        <name>GetProjectionSilhouetteVerts</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>projectionOrigin</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>silVerts</declname>
          <array>[6]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="106" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.cpp" bodystart="787" bodyend="815"/>
      </memberdef>
      <memberdef kind="function" id="classid_box_1ae46aab551d24083aa538a6a9c8d4d4ae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idBox::GetParallelProjectionSilhouetteVerts</definition>
        <argsstring>(const idVec3 &amp;projectionDir, idVec3 silVerts[6]) const </argsstring>
        <name>GetParallelProjectionSilhouetteVerts</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>projectionDir</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>silVerts</declname>
          <array>[6]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="107" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.cpp" bodystart="822" bodyend="849"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" line="40" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Box.h" bodystart="40" bodyend="113"/>
    <listofallmembers>
      <member refid="classid_box_1abe9f79264e4b77d37277d0ca1f1191d2" prot="public" virt="non-virtual"><scope>idBox</scope><name>AddBox</name></member>
      <member refid="classid_box_1a736379632954abfa969aa5e4a79e39ba" prot="public" virt="non-virtual"><scope>idBox</scope><name>AddPoint</name></member>
      <member refid="classid_box_1a50db47226d74b6405da3a57e1010819c" prot="private" virt="non-virtual"><scope>idBox</scope><name>axis</name></member>
      <member refid="classid_box_1ac10ebe560b7e2d5a616a5bc92a934115" prot="public" virt="non-virtual"><scope>idBox</scope><name>AxisProjection</name></member>
      <member refid="classid_box_1a813dafdcbc7c438ac1927f2dc3de1da4" prot="public" virt="non-virtual"><scope>idBox</scope><name>AxisProjection</name></member>
      <member refid="classid_box_1aa413a6a9428b95795b086b3d839fc24f" prot="private" virt="non-virtual"><scope>idBox</scope><name>center</name></member>
      <member refid="classid_box_1a32d3ea3410d01fe3f948a1599ab99787" prot="public" virt="non-virtual"><scope>idBox</scope><name>Clear</name></member>
      <member refid="classid_box_1a0b86671fff66447e4ca16238abd14dab" prot="public" virt="non-virtual"><scope>idBox</scope><name>Compare</name></member>
      <member refid="classid_box_1a9d966a3fd40bc9bce75e1f8eae130454" prot="public" virt="non-virtual"><scope>idBox</scope><name>Compare</name></member>
      <member refid="classid_box_1aa9a39ec8202490f9e454e76159a95784" prot="public" virt="non-virtual"><scope>idBox</scope><name>ContainsPoint</name></member>
      <member refid="classid_box_1aa7353758b22dfd5f17acd0043b4d07b2" prot="public" virt="non-virtual"><scope>idBox</scope><name>Expand</name></member>
      <member refid="classid_box_1afd345c17e3e6efcc4d4675719dbc2407" prot="public" virt="non-virtual"><scope>idBox</scope><name>ExpandSelf</name></member>
      <member refid="classid_box_1a20a791a11a144ada82ba6429011ad08f" prot="private" virt="non-virtual"><scope>idBox</scope><name>extents</name></member>
      <member refid="classid_box_1a91693dbcb0aadb0b44434f28837f5050" prot="public" virt="non-virtual"><scope>idBox</scope><name>FromBoxRotation</name></member>
      <member refid="classid_box_1aa1b65b2a99861c2d70fda8ed2f6d896b" prot="public" virt="non-virtual"><scope>idBox</scope><name>FromBoxTranslation</name></member>
      <member refid="classid_box_1a9b812db10a3543206ea83f5ec326b869" prot="public" virt="non-virtual"><scope>idBox</scope><name>FromPointRotation</name></member>
      <member refid="classid_box_1a167bf63299915f2841272ba56b83b329" prot="public" virt="non-virtual"><scope>idBox</scope><name>FromPoints</name></member>
      <member refid="classid_box_1a50f3d29783b6228228b6f5542e2101a9" prot="public" virt="non-virtual"><scope>idBox</scope><name>FromPointTranslation</name></member>
      <member refid="classid_box_1a4a0f76cb0c0ff9f265755879c8979b99" prot="public" virt="non-virtual"><scope>idBox</scope><name>GetAxis</name></member>
      <member refid="classid_box_1aedf556b35028ae35d119316ab61243db" prot="public" virt="non-virtual"><scope>idBox</scope><name>GetCenter</name></member>
      <member refid="classid_box_1ac07bd1dffac517790b616c990ccb62ff" prot="public" virt="non-virtual"><scope>idBox</scope><name>GetExtents</name></member>
      <member refid="classid_box_1ae46aab551d24083aa538a6a9c8d4d4ae" prot="public" virt="non-virtual"><scope>idBox</scope><name>GetParallelProjectionSilhouetteVerts</name></member>
      <member refid="classid_box_1ae051d0cfa9320d9bb62f631c4957c39a" prot="public" virt="non-virtual"><scope>idBox</scope><name>GetProjectionSilhouetteVerts</name></member>
      <member refid="classid_box_1a333f482e295560d33583865937208353" prot="public" virt="non-virtual"><scope>idBox</scope><name>GetVolume</name></member>
      <member refid="classid_box_1aa817365523f4319bd9d7d7ad3a75dda8" prot="public" virt="non-virtual"><scope>idBox</scope><name>idBox</name></member>
      <member refid="classid_box_1aaff1513f66b75c99df9eae2bfe9aef4d" prot="public" virt="non-virtual"><scope>idBox</scope><name>idBox</name></member>
      <member refid="classid_box_1aa22a7366e4a84d760caadf7715ddfb82" prot="public" virt="non-virtual"><scope>idBox</scope><name>idBox</name></member>
      <member refid="classid_box_1a10a178bbc91d1854514701b0b734f751" prot="public" virt="non-virtual"><scope>idBox</scope><name>idBox</name></member>
      <member refid="classid_box_1a02bf2ea947e7644093b960f0ad855178" prot="public" virt="non-virtual"><scope>idBox</scope><name>idBox</name></member>
      <member refid="classid_box_1abb3e7e1e721e352b1cce08aa7e453862" prot="public" virt="non-virtual"><scope>idBox</scope><name>IntersectsBox</name></member>
      <member refid="classid_box_1a68ad5d07ce5d608799c13cc317d63c1a" prot="public" virt="non-virtual"><scope>idBox</scope><name>IsCleared</name></member>
      <member refid="classid_box_1a484aa829e99738d531d6f78fde75883b" prot="public" virt="non-virtual"><scope>idBox</scope><name>LineIntersection</name></member>
      <member refid="classid_box_1a6b484e987aad72f195449da9456af966" prot="public" virt="non-virtual"><scope>idBox</scope><name>operator!=</name></member>
      <member refid="classid_box_1af48bbd157a86db26819b8d22c2d7adf2" prot="public" virt="non-virtual"><scope>idBox</scope><name>operator*</name></member>
      <member refid="classid_box_1ab91b34f2cc309383c42a79abec6538d5" prot="public" virt="non-virtual"><scope>idBox</scope><name>operator*=</name></member>
      <member refid="classid_box_1a87dfd086efbfa914dcbade3871189b89" prot="public" virt="non-virtual"><scope>idBox</scope><name>operator+</name></member>
      <member refid="classid_box_1ab7b133f58fc1fd31946c215a16d61220" prot="public" virt="non-virtual"><scope>idBox</scope><name>operator+</name></member>
      <member refid="classid_box_1a75c0e9d802a7f3f0f717eaf58fac49a3" prot="public" virt="non-virtual"><scope>idBox</scope><name>operator+=</name></member>
      <member refid="classid_box_1a4e8769d7a67943748361ad894a6b9158" prot="public" virt="non-virtual"><scope>idBox</scope><name>operator+=</name></member>
      <member refid="classid_box_1aa473f77587c7ceb66185fcc777fe0ca6" prot="public" virt="non-virtual"><scope>idBox</scope><name>operator-</name></member>
      <member refid="classid_box_1aef786daf7df7e5c4c9f7f8de88028ceb" prot="public" virt="non-virtual"><scope>idBox</scope><name>operator-=</name></member>
      <member refid="classid_box_1a580d9477dd3f39dd2f1dc1fab9b4988d" prot="public" virt="non-virtual"><scope>idBox</scope><name>operator==</name></member>
      <member refid="classid_box_1a843ac1d8bbbc1a388488aa085a6f9942" prot="public" virt="non-virtual"><scope>idBox</scope><name>PlaneDistance</name></member>
      <member refid="classid_box_1a912074a5dc33ee766e3288d10dd0d784" prot="public" virt="non-virtual"><scope>idBox</scope><name>PlaneSide</name></member>
      <member refid="classid_box_1ad3b105269ccc9652b913be1eb21194d5" prot="public" virt="non-virtual"><scope>idBox</scope><name>RayIntersection</name></member>
      <member refid="classid_box_1a05eb14e9c166aec3122ee93402dc357a" prot="public" virt="non-virtual"><scope>idBox</scope><name>Rotate</name></member>
      <member refid="classid_box_1a60fdd260b1f78bead19db286ce373b7b" prot="public" virt="non-virtual"><scope>idBox</scope><name>RotateSelf</name></member>
      <member refid="classid_box_1aa726b9ce900c3a3ac2244165ba8ccd6a" prot="public" virt="non-virtual"><scope>idBox</scope><name>ToPoints</name></member>
      <member refid="classid_box_1a25666fc6b8b2771bb8c6aeb45e85bdff" prot="public" virt="non-virtual"><scope>idBox</scope><name>ToSphere</name></member>
      <member refid="classid_box_1a7cad08a2adf5aab8b585f003f3824e36" prot="public" virt="non-virtual"><scope>idBox</scope><name>Translate</name></member>
      <member refid="classid_box_1a1edbb20b10209190bff24bcd572f1100" prot="public" virt="non-virtual"><scope>idBox</scope><name>TranslateSelf</name></member>
      <member refid="classid_box_1a6ddb85586d6fbe770144259f7d6e8fac" prot="public" virt="non-virtual"><scope>idBox</scope><name>Zero</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
