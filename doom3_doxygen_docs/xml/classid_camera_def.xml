<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_camera_def" kind="class" prot="public">
    <compoundname>idCameraDef</compoundname>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classid_camera_def_1acda6d00b200d10fee54f58909b901002" prot="protected" static="no" mutable="no">
        <type><ref refid="classid_str" kindref="compound">idStr</ref></type>
        <definition>idStr idCameraDef::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="378" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_camera_def_1a814c243eef08c0e2dcba8d8cfded5719" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int idCameraDef::currentCameraPosition</definition>
        <argsstring></argsstring>
        <name>currentCameraPosition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="379" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_camera_def_1ae0441d46c47786c136e6b74310f31da7" prot="protected" static="no" mutable="no">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>idVec3 idCameraDef::lastDirection</definition>
        <argsstring></argsstring>
        <name>lastDirection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="380" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_camera_def_1a06aad3343b958782c426896d9f73b128" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idCameraDef::cameraRunning</definition>
        <argsstring></argsstring>
        <name>cameraRunning</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="381" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" bodystart="381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_camera_def_1a042e8b7d5d32f4cfba94c367a1087788" prot="protected" static="no" mutable="no">
        <type><ref refid="classid_camera_position" kindref="compound">idCameraPosition</ref> *</type>
        <definition>idCameraPosition* idCameraDef::cameraPosition</definition>
        <argsstring></argsstring>
        <name>cameraPosition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="382" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_camera_def_1a2d73d9bbf69a15ab937ecf0e004c51d9" prot="protected" static="no" mutable="no">
        <type><ref refid="classid_list" kindref="compound">idList</ref>&lt; <ref refid="classid_camera_position" kindref="compound">idCameraPosition</ref> * &gt;</type>
        <definition>idList&lt;idCameraPosition*&gt; idCameraDef::targetPositions</definition>
        <argsstring></argsstring>
        <name>targetPositions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="383" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_camera_def_1a5df8b6d69d1c6f606d460c96d2001dd8" prot="protected" static="no" mutable="no">
        <type><ref refid="classid_list" kindref="compound">idList</ref>&lt; <ref refid="classid_camera_event" kindref="compound">idCameraEvent</ref> * &gt;</type>
        <definition>idList&lt;idCameraEvent*&gt; idCameraDef::events</definition>
        <argsstring></argsstring>
        <name>events</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="384" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" bodystart="384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_camera_def_1ab2a10cac19c2eb14d56406e9d43ee730" prot="protected" static="no" mutable="no">
        <type><ref refid="classid_camera_f_o_v" kindref="compound">idCameraFOV</ref></type>
        <definition>idCameraFOV idCameraDef::fov</definition>
        <argsstring></argsstring>
        <name>fov</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="385" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_camera_def_1a0c43d2de6745d7d47ce4309f4ee56f88" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int idCameraDef::activeTarget</definition>
        <argsstring></argsstring>
        <name>activeTarget</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="386" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_camera_def_1a183b8570b17944cbc673124f7879f556" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float idCameraDef::totalTime</definition>
        <argsstring></argsstring>
        <name>totalTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="387" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_camera_def_1a15e5234c7b615ec50c4f1b0c84a9e48b" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float idCameraDef::baseTime</definition>
        <argsstring></argsstring>
        <name>baseTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="388" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" bodystart="388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_camera_def_1a337094610077e2fa44a0e4c1876e3e0a" prot="protected" static="no" mutable="no">
        <type>long</type>
        <definition>long idCameraDef::startTime</definition>
        <argsstring></argsstring>
        <name>startTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="389" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_camera_def_1af1f5f68b21b3951482dc7662133f4095" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idCameraDef::cameraEdit</definition>
        <argsstring></argsstring>
        <name>cameraEdit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="391" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_camera_def_1a5931d2685d135f72e0ff93e98841fdb9" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idCameraDef::editMode</definition>
        <argsstring></argsstring>
        <name>editMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="392" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_camera_def_1aa58e9e5a8098227d5264dd08f7ff5c2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>idCameraDef::idCameraDef</definition>
        <argsstring>()</argsstring>
        <name>idCameraDef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="335" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" bodystart="335" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1a696dfe4254b3d44caa7603fdac3f0602" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>idCameraDef::~idCameraDef</definition>
        <argsstring>()</argsstring>
        <name>~idCameraDef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="336" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" bodystart="336" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1a7e8ca7a92bd501e9df7e254a0d1c0b1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idCameraDef::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="338" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.cpp" bodystart="751" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1aceba74228a7bdbff315e2ece5fc0b900" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_camera_position" kindref="compound">idCameraPosition</ref> *</type>
        <definition>idCameraPosition * idCameraDef::startNewCamera</definition>
        <argsstring>(idCameraPosition::positionType type)</argsstring>
        <name>startNewCamera</name>
        <param>
          <type>idCameraPosition::positionType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="339" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.cpp" bodystart="777" bodyend="787"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1ae7ff8b4bfb10b9fd00800ff7a73dcbbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idCameraDef::addEvent</definition>
        <argsstring>(idCameraEvent::eventType t, const char *param, long time)</argsstring>
        <name>addEvent</name>
        <param>
          <type>idCameraEvent::eventType</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>param</declname>
        </param>
        <param>
          <type>long</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="340" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.cpp" bodystart="1388" bodyend="1391"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1a4307a1bb030447cf3eacc5c1d1754de6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idCameraDef::addEvent</definition>
        <argsstring>(idCameraEvent *event)</argsstring>
        <name>addEvent</name>
        <param>
          <type><ref refid="classid_camera_event" kindref="compound">idCameraEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="341" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.cpp" bodystart="1377" bodyend="1381"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1a539320d816b3b67b9ae1d74236c68c91" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int idCameraDef::numEvents</definition>
        <argsstring>()</argsstring>
        <name>numEvents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="343" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" bodystart="343" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1a6b5055c4c6e842d043f9350fa3ccd4de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classid_camera_event" kindref="compound">idCameraEvent</ref> *</type>
        <definition>idCameraEvent* idCameraDef::getEvent</definition>
        <argsstring>(int index)</argsstring>
        <name>getEvent</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="344" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" bodystart="344" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1a8a5a4bf49782694a7b2b1481bf3eddcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idCameraDef::parse</definition>
        <argsstring>(idParser *src)</argsstring>
        <name>parse</name>
        <param>
          <type><ref refid="classid_parser" kindref="compound">idParser</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="345" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.cpp" bodystart="1239" bodyend="1300"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1aab05cefa26982d69180b7ee20ad16772" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idCameraDef::load</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>load</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="346" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.cpp" bodystart="1307" bodyend="1323"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1ae301c2adfa5d86f0338d3ec2faad499c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idCameraDef::save</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>save</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="347" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.cpp" bodystart="1330" bodyend="1352"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1a0f1da26a055d1e3ce5deac42ac43b6cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idCameraDef::buildCamera</definition>
        <argsstring>()</argsstring>
        <name>buildCamera</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="348" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.cpp" bodystart="1081" bodyend="1216"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1ac7a37b2c9a6fdf6bd06edc2d3a373367" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idCameraDef::addTarget</definition>
        <argsstring>(const char *name, idCameraPosition::positionType type)</argsstring>
        <name>addTarget</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>idCameraPosition::positionType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="350" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.cpp" bodystart="794" bodyend="806"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1adab8cbbad5121195c5f0c9fd4a3b1b55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_camera_position" kindref="compound">idCameraPosition</ref> *</type>
        <definition>idCameraPosition * idCameraDef::getActiveTarget</definition>
        <argsstring>()</argsstring>
        <name>getActiveTarget</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="352" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.cpp" bodystart="813" bodyend="818"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1ad1ff318a345465b2dd282d6a0212d2f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_camera_position" kindref="compound">idCameraPosition</ref> *</type>
        <definition>idCameraPosition * idCameraDef::getActiveTarget</definition>
        <argsstring>(int index)</argsstring>
        <name>getActiveTarget</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="353" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.cpp" bodystart="825" bodyend="831"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1ab40a73cf3329b27c36a991c03d494576" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int idCameraDef::numTargets</definition>
        <argsstring>()</argsstring>
        <name>numTargets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="354" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" bodystart="354" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1ab5368ad002f56386a2cb8c7a449407ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idCameraDef::setActiveTargetByName</definition>
        <argsstring>(const char *name)</argsstring>
        <name>setActiveTargetByName</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="355" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.cpp" bodystart="838" bodyend="845"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1a57cf7e2c0c4239ff00b1deba7304ca2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idCameraDef::setActiveTarget</definition>
        <argsstring>(int index)</argsstring>
        <name>setActiveTarget</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="356" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.cpp" bodystart="852" bodyend="855"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1a2d05bb45143a713c63624529c4d78938" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idCameraDef::setRunning</definition>
        <argsstring>(bool b)</argsstring>
        <name>setRunning</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="357" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" bodystart="357" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1a2f9f754ae6d33940db3de06e6f1da290" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idCameraDef::setBaseTime</definition>
        <argsstring>(float f)</argsstring>
        <name>setBaseTime</name>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="358" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" bodystart="358" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1a14276e0b8664a21a5f26db9a670b35b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float idCameraDef::getBaseTime</definition>
        <argsstring>()</argsstring>
        <name>getBaseTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="359" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" bodystart="359" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1aee10448df9c181a882f0bec0417f4f07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float idCameraDef::getTotalTime</definition>
        <argsstring>()</argsstring>
        <name>getTotalTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="360" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" bodystart="360" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1add24001ed211e707010a01939b23fd06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idCameraDef::startCamera</definition>
        <argsstring>(long t)</argsstring>
        <name>startCamera</name>
        <param>
          <type>long</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="361" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.cpp" bodystart="1223" bodyend="1232"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1a65dd2e38394528871b3e21df65af5ac5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idCameraDef::stopCamera</definition>
        <argsstring>()</argsstring>
        <name>stopCamera</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="362" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" bodystart="362" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1ace7f51b3c119c545fb8c1ceacd7e41b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idCameraDef::getActiveSegmentInfo</definition>
        <argsstring>(int segment, idVec3 &amp;origin, idVec3 &amp;direction, float *fv)</argsstring>
        <name>getActiveSegmentInfo</name>
        <param>
          <type>int</type>
          <declname>segment</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>fv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="363" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.cpp" bodystart="948" bodyend="982"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1a432f6529837d56bd471bfe4c83176e89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idCameraDef::getCameraInfo</definition>
        <argsstring>(long time, idVec3 &amp;origin, idVec3 &amp;direction, float *fv)</argsstring>
        <name>getCameraInfo</name>
        <param>
          <type>long</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>fv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="364" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.cpp" bodystart="989" bodyend="1057"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1a741ae3dc4b3ad6f3600f5e33e8a41075" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idCameraDef::draw</definition>
        <argsstring>(bool editMode)</argsstring>
        <name>draw</name>
        <param>
          <type>bool</type>
          <declname>editMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="365" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.cpp" bodystart="862" bodyend="872"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1aab2a08e12bedc8af3a9d01202c1b5f42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idCameraDef::numPoints</definition>
        <argsstring>()</argsstring>
        <name>numPoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="366" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.cpp" bodystart="879" bodyend="884"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1a2b0b64bcdd0f4b3b63b8111b6fdd62fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> *</type>
        <definition>const idVec3 * idCameraDef::getPoint</definition>
        <argsstring>(int index)</argsstring>
        <name>getPoint</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="367" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.cpp" bodystart="891" bodyend="896"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1aa6f8ce14cdb47f26db086a4709ffecea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idCameraDef::stopEdit</definition>
        <argsstring>()</argsstring>
        <name>stopEdit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="368" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.cpp" bodystart="903" bodyend="910"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1aea23fd54153e32fe10a01de3acb5711e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idCameraDef::startEdit</definition>
        <argsstring>(bool camera)</argsstring>
        <name>startEdit</name>
        <param>
          <type>bool</type>
          <declname>camera</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="369" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.cpp" bodystart="917" bodyend="929"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1ad58478cd62329ca307836fbede9469dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idCameraDef::waitEvent</definition>
        <argsstring>(int index)</argsstring>
        <name>waitEvent</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="370" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.cpp" bodystart="1064" bodyend="1071"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1a3166c97eb3f842cab70c4ecda9ffd61a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* idCameraDef::getName</definition>
        <argsstring>()</argsstring>
        <name>getName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="371" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" bodystart="371" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1a07152397dac708980c1bb718531ab852" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idCameraDef::setName</definition>
        <argsstring>(const char *p)</argsstring>
        <name>setName</name>
        <param>
          <type>const char *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="372" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" bodystart="372" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1a78e51d6c4a719c6851354c7757d0e1fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_camera_position" kindref="compound">idCameraPosition</ref> *</type>
        <definition>idCameraPosition * idCameraDef::getPositionObj</definition>
        <argsstring>()</argsstring>
        <name>getPositionObj</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="373" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.cpp" bodystart="936" bodyend="941"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classid_camera_def_1a89834a4268cd6d8726d6b7cd137b6374" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idCameraDef::sortEvents</definition>
        <argsstring>(const void *p1, const void *p2)</argsstring>
        <name>sortEvents</name>
        <param>
          <type>const void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="342" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.cpp" bodystart="1359" bodyend="1370"/>
      </memberdef>
      <memberdef kind="function" id="classid_camera_def_1a79b810f89678a2e8b5553b12d89ccf8f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_camera_position" kindref="compound">idCameraPosition</ref> *</type>
        <definition>idCameraPosition * idCameraDef::newFromType</definition>
        <argsstring>(idCameraPosition::positionType t)</argsstring>
        <name>newFromType</name>
        <param>
          <type>idCameraPosition::positionType</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="375" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.cpp" bodystart="1398" bodyend="1405"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="22654">
        <label>idCameraPosition</label>
        <link refid="classid_camera_position"/>
        <childnode refid="22655" relation="public-inheritance">
        </childnode>
        <childnode refid="22652" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="22657" relation="usage">
          <edgelabel>velocities</edgelabel>
        </childnode>
      </node>
      <node id="22649">
        <label>idCameraDef</label>
        <link refid="classid_camera_def"/>
        <childnode refid="22650" relation="usage">
          <edgelabel>events</edgelabel>
        </childnode>
        <childnode refid="22651" relation="usage">
          <edgelabel>targetPositions</edgelabel>
        </childnode>
        <childnode refid="22652" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="22653" relation="usage">
          <edgelabel>fov</edgelabel>
        </childnode>
        <childnode refid="22654" relation="usage">
          <edgelabel>cameraPosition</edgelabel>
        </childnode>
        <childnode refid="22658" relation="usage">
          <edgelabel>lastDirection</edgelabel>
        </childnode>
      </node>
      <node id="22655">
        <label>idPointListInterface</label>
        <link refid="classid_point_list_interface"/>
        <childnode refid="22656" relation="usage">
          <edgelabel>selectedPoints</edgelabel>
        </childnode>
      </node>
      <node id="22653">
        <label>idCameraFOV</label>
        <link refid="classid_camera_f_o_v"/>
      </node>
      <node id="22656">
        <label>idList&lt; int &gt;</label>
        <link refid="classid_list"/>
      </node>
      <node id="22650">
        <label>idList&lt; idCameraEvent * &gt;</label>
        <link refid="classid_list"/>
      </node>
      <node id="22651">
        <label>idList&lt; idCameraPosition * &gt;</label>
        <link refid="classid_list"/>
      </node>
      <node id="22652">
        <label>idStr</label>
        <link refid="classid_str"/>
      </node>
      <node id="22658">
        <label>idVec3</label>
        <link refid="classid_vec3"/>
      </node>
      <node id="22657">
        <label>idList&lt; idVelocity * &gt;</label>
        <link refid="classid_list"/>
      </node>
    </collaborationgraph>
    <location file="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" line="333" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/radiant/splines.h" bodystart="333" bodyend="393"/>
    <listofallmembers>
      <member refid="classid_camera_def_1a0c43d2de6745d7d47ce4309f4ee56f88" prot="protected" virt="non-virtual"><scope>idCameraDef</scope><name>activeTarget</name></member>
      <member refid="classid_camera_def_1ae7ff8b4bfb10b9fd00800ff7a73dcbbc" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>addEvent</name></member>
      <member refid="classid_camera_def_1a4307a1bb030447cf3eacc5c1d1754de6" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>addEvent</name></member>
      <member refid="classid_camera_def_1ac7a37b2c9a6fdf6bd06edc2d3a373367" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>addTarget</name></member>
      <member refid="classid_camera_def_1a15e5234c7b615ec50c4f1b0c84a9e48b" prot="protected" virt="non-virtual"><scope>idCameraDef</scope><name>baseTime</name></member>
      <member refid="classid_camera_def_1a0f1da26a055d1e3ce5deac42ac43b6cf" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>buildCamera</name></member>
      <member refid="classid_camera_def_1af1f5f68b21b3951482dc7662133f4095" prot="protected" virt="non-virtual"><scope>idCameraDef</scope><name>cameraEdit</name></member>
      <member refid="classid_camera_def_1a042e8b7d5d32f4cfba94c367a1087788" prot="protected" virt="non-virtual"><scope>idCameraDef</scope><name>cameraPosition</name></member>
      <member refid="classid_camera_def_1a06aad3343b958782c426896d9f73b128" prot="protected" virt="non-virtual"><scope>idCameraDef</scope><name>cameraRunning</name></member>
      <member refid="classid_camera_def_1a7e8ca7a92bd501e9df7e254a0d1c0b1f" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>clear</name></member>
      <member refid="classid_camera_def_1a814c243eef08c0e2dcba8d8cfded5719" prot="protected" virt="non-virtual"><scope>idCameraDef</scope><name>currentCameraPosition</name></member>
      <member refid="classid_camera_def_1a741ae3dc4b3ad6f3600f5e33e8a41075" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>draw</name></member>
      <member refid="classid_camera_def_1a5931d2685d135f72e0ff93e98841fdb9" prot="protected" virt="non-virtual"><scope>idCameraDef</scope><name>editMode</name></member>
      <member refid="classid_camera_def_1a5df8b6d69d1c6f606d460c96d2001dd8" prot="protected" virt="non-virtual"><scope>idCameraDef</scope><name>events</name></member>
      <member refid="classid_camera_def_1ab2a10cac19c2eb14d56406e9d43ee730" prot="protected" virt="non-virtual"><scope>idCameraDef</scope><name>fov</name></member>
      <member refid="classid_camera_def_1ace7f51b3c119c545fb8c1ceacd7e41b4" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>getActiveSegmentInfo</name></member>
      <member refid="classid_camera_def_1adab8cbbad5121195c5f0c9fd4a3b1b55" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>getActiveTarget</name></member>
      <member refid="classid_camera_def_1ad1ff318a345465b2dd282d6a0212d2f1" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>getActiveTarget</name></member>
      <member refid="classid_camera_def_1a14276e0b8664a21a5f26db9a670b35b8" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>getBaseTime</name></member>
      <member refid="classid_camera_def_1a432f6529837d56bd471bfe4c83176e89" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>getCameraInfo</name></member>
      <member refid="classid_camera_def_1a6b5055c4c6e842d043f9350fa3ccd4de" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>getEvent</name></member>
      <member refid="classid_camera_def_1a3166c97eb3f842cab70c4ecda9ffd61a" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>getName</name></member>
      <member refid="classid_camera_def_1a2b0b64bcdd0f4b3b63b8111b6fdd62fb" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>getPoint</name></member>
      <member refid="classid_camera_def_1a78e51d6c4a719c6851354c7757d0e1fd" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>getPositionObj</name></member>
      <member refid="classid_camera_def_1aee10448df9c181a882f0bec0417f4f07" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>getTotalTime</name></member>
      <member refid="classid_camera_def_1aa58e9e5a8098227d5264dd08f7ff5c2d" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>idCameraDef</name></member>
      <member refid="classid_camera_def_1ae0441d46c47786c136e6b74310f31da7" prot="protected" virt="non-virtual"><scope>idCameraDef</scope><name>lastDirection</name></member>
      <member refid="classid_camera_def_1aab05cefa26982d69180b7ee20ad16772" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>load</name></member>
      <member refid="classid_camera_def_1acda6d00b200d10fee54f58909b901002" prot="protected" virt="non-virtual"><scope>idCameraDef</scope><name>name</name></member>
      <member refid="classid_camera_def_1a79b810f89678a2e8b5553b12d89ccf8f" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>newFromType</name></member>
      <member refid="classid_camera_def_1a539320d816b3b67b9ae1d74236c68c91" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>numEvents</name></member>
      <member refid="classid_camera_def_1aab2a08e12bedc8af3a9d01202c1b5f42" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>numPoints</name></member>
      <member refid="classid_camera_def_1ab40a73cf3329b27c36a991c03d494576" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>numTargets</name></member>
      <member refid="classid_camera_def_1a8a5a4bf49782694a7b2b1481bf3eddcc" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>parse</name></member>
      <member refid="classid_camera_def_1ae301c2adfa5d86f0338d3ec2faad499c" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>save</name></member>
      <member refid="classid_camera_def_1a57cf7e2c0c4239ff00b1deba7304ca2b" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>setActiveTarget</name></member>
      <member refid="classid_camera_def_1ab5368ad002f56386a2cb8c7a449407ec" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>setActiveTargetByName</name></member>
      <member refid="classid_camera_def_1a2f9f754ae6d33940db3de06e6f1da290" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>setBaseTime</name></member>
      <member refid="classid_camera_def_1a07152397dac708980c1bb718531ab852" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>setName</name></member>
      <member refid="classid_camera_def_1a2d05bb45143a713c63624529c4d78938" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>setRunning</name></member>
      <member refid="classid_camera_def_1a89834a4268cd6d8726d6b7cd137b6374" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>sortEvents</name></member>
      <member refid="classid_camera_def_1add24001ed211e707010a01939b23fd06" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>startCamera</name></member>
      <member refid="classid_camera_def_1aea23fd54153e32fe10a01de3acb5711e" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>startEdit</name></member>
      <member refid="classid_camera_def_1aceba74228a7bdbff315e2ece5fc0b900" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>startNewCamera</name></member>
      <member refid="classid_camera_def_1a337094610077e2fa44a0e4c1876e3e0a" prot="protected" virt="non-virtual"><scope>idCameraDef</scope><name>startTime</name></member>
      <member refid="classid_camera_def_1a65dd2e38394528871b3e21df65af5ac5" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>stopCamera</name></member>
      <member refid="classid_camera_def_1aa6f8ce14cdb47f26db086a4709ffecea" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>stopEdit</name></member>
      <member refid="classid_camera_def_1a2d73d9bbf69a15ab937ecf0e004c51d9" prot="protected" virt="non-virtual"><scope>idCameraDef</scope><name>targetPositions</name></member>
      <member refid="classid_camera_def_1a183b8570b17944cbc673124f7879f556" prot="protected" virt="non-virtual"><scope>idCameraDef</scope><name>totalTime</name></member>
      <member refid="classid_camera_def_1ad58478cd62329ca307836fbede9469dd" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>waitEvent</name></member>
      <member refid="classid_camera_def_1a696dfe4254b3d44caa7603fdac3f0602" prot="public" virt="non-virtual"><scope>idCameraDef</scope><name>~idCameraDef</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
