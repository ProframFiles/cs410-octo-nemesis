<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_clip" kind="class" prot="public">
    <compoundname>idClip</compoundname>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classid_clip_1ad92d3a6f9a4c052a386f3612fa8a4ab1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>idClipModel</definition>
        <argsstring></argsstring>
        <name>idClipModel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="250" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classid_clip_1a74093cdada8e31f6424f89a93d115de0" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idClip::numClipSectors</definition>
        <argsstring></argsstring>
        <name>numClipSectors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="310" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_clip_1a539423a833514bc17a627d4eab61a2dc" prot="private" static="no" mutable="no">
        <type>struct <ref refid="structclip_sector__s" kindref="compound">clipSector_s</ref> *</type>
        <definition>struct clipSector_s * idClip::clipSectors</definition>
        <argsstring></argsstring>
        <name>clipSectors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="311" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_clip_1abd6d601ed15e0e2c3b287029bb5ece01" prot="private" static="no" mutable="no">
        <type><ref refid="classid_bounds" kindref="compound">idBounds</ref></type>
        <definition>idBounds idClip::worldBounds</definition>
        <argsstring></argsstring>
        <name>worldBounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="312" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_clip_1a8491fed546e610fd04956676b8298b5b" prot="private" static="no" mutable="no">
        <type><ref refid="classid_clip_model" kindref="compound">idClipModel</ref></type>
        <definition>idClipModel idClip::temporaryClipModel</definition>
        <argsstring></argsstring>
        <name>temporaryClipModel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="313" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_clip_1a13b6eff6f2d432afc1e19d7311cbbe64" prot="private" static="no" mutable="no">
        <type><ref refid="classid_clip_model" kindref="compound">idClipModel</ref></type>
        <definition>idClipModel idClip::defaultClipModel</definition>
        <argsstring></argsstring>
        <name>defaultClipModel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="314" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_clip_1a508ddc3e36a0ca85e4360ab4881450bf" prot="private" static="no" mutable="yes">
        <type>int</type>
        <definition>int idClip::touchCount</definition>
        <argsstring></argsstring>
        <name>touchCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="315" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_clip_1a59a6f7f2a7b7688849641d362323e344" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idClip::numTranslations</definition>
        <argsstring></argsstring>
        <name>numTranslations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="317" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_clip_1a1b7e875b789b7a13af4adf44854705e4" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idClip::numRotations</definition>
        <argsstring></argsstring>
        <name>numRotations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="318" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_clip_1a903611675e3377beaea388e36a467566" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idClip::numMotions</definition>
        <argsstring></argsstring>
        <name>numMotions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="319" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_clip_1a1810583a15ccb7f3dd8009351058d555" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idClip::numRenderModelTraces</definition>
        <argsstring></argsstring>
        <name>numRenderModelTraces</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="320" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_clip_1a2f2bf12ea033312f57f3b00333f91e2f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idClip::numContents</definition>
        <argsstring></argsstring>
        <name>numContents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="321" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_clip_1a5fa6a5cc9dad13c6217aa7f5ac6c2656" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idClip::numContacts</definition>
        <argsstring></argsstring>
        <name>numContacts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="322" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="322" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_clip_1a7def1b6c54791d052209f84a95116578" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idClip::idClip</definition>
        <argsstring>(void)</argsstring>
        <name>idClip</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="253" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="622" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1adfb3c99dd484bb7a098c5149468c2c2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClip::Init</definition>
        <argsstring>(void)</argsstring>
        <name>Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="255" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="684" bodyend="708"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a0427ac683930ca23e6b60a100fbe8746" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClip::Shutdown</definition>
        <argsstring>(void)</argsstring>
        <name>Shutdown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="256" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="715" bodyend="732"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1ad877bae5b888b3d11a4bb1d555f1bef4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idClip::Translation</definition>
        <argsstring>(trace_t &amp;results, const idVec3 &amp;start, const idVec3 &amp;end, const idClipModel *mdl, const idMat3 &amp;trmAxis, int contentMask, const idEntity *passEntity)</argsstring>
        <name>Translation</name>
        <param>
          <type><ref refid="structtrace__s" kindref="compound">trace_t</ref> &amp;</type>
          <declname>results</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>mdl</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>trmAxis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type>const <ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>passEntity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="259" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="1056" bodyend="1123"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1ae3afac8b7c38e4e8fc55d72e6e885e7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idClip::Rotation</definition>
        <argsstring>(trace_t &amp;results, const idVec3 &amp;start, const idRotation &amp;rotation, const idClipModel *mdl, const idMat3 &amp;trmAxis, int contentMask, const idEntity *passEntity)</argsstring>
        <name>Rotation</name>
        <param>
          <type><ref refid="structtrace__s" kindref="compound">trace_t</ref> &amp;</type>
          <declname>results</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_rotation" kindref="compound">idRotation</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>mdl</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>trmAxis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type>const <ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>passEntity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="261" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="1130" bodyend="1190"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1ac2cabcc1dd099562b6af4680256ba196" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idClip::Motion</definition>
        <argsstring>(trace_t &amp;results, const idVec3 &amp;start, const idVec3 &amp;end, const idRotation &amp;rotation, const idClipModel *mdl, const idMat3 &amp;trmAxis, int contentMask, const idEntity *passEntity)</argsstring>
        <name>Motion</name>
        <param>
          <type><ref refid="structtrace__s" kindref="compound">trace_t</ref> &amp;</type>
          <declname>results</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const <ref refid="classid_rotation" kindref="compound">idRotation</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>mdl</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>trmAxis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type>const <ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>passEntity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="263" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="1197" bodyend="1351"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a7ddfcd21f5a7c467dcd3a0047e6618d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idClip::Contacts</definition>
        <argsstring>(contactInfo_t *contacts, const int maxContacts, const idVec3 &amp;start, const idVec6 &amp;dir, const float depth, const idClipModel *mdl, const idMat3 &amp;trmAxis, int contentMask, const idEntity *passEntity)</argsstring>
        <name>Contacts</name>
        <param>
          <type><ref refid="structcontact_info__t" kindref="compound">contactInfo_t</ref> *</type>
          <declname>contacts</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>maxContacts</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec6" kindref="compound">idVec6</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>mdl</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>trmAxis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type>const <ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>passEntity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="265" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="1358" bodyend="1422"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a62dd12fdda9a1b268beeeb49d67a1746" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idClip::Contents</definition>
        <argsstring>(const idVec3 &amp;start, const idClipModel *mdl, const idMat3 &amp;trmAxis, int contentMask, const idEntity *passEntity)</argsstring>
        <name>Contents</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>mdl</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>trmAxis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type>const <ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>passEntity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="267" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="1429" bodyend="1486"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1aab4bf3ea871bbc5bb1a62283be20bf66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idClip::TracePoint</definition>
        <argsstring>(trace_t &amp;results, const idVec3 &amp;start, const idVec3 &amp;end, int contentMask, const idEntity *passEntity)</argsstring>
        <name>TracePoint</name>
        <param>
          <type><ref refid="structtrace__s" kindref="compound">trace_t</ref> &amp;</type>
          <declname>results</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type>const <ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>passEntity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="271" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="333" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1ab803cc8d34611ab2a76519f3c5b3897a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idClip::TraceBounds</definition>
        <argsstring>(trace_t &amp;results, const idVec3 &amp;start, const idVec3 &amp;end, const idBounds &amp;bounds, int contentMask, const idEntity *passEntity)</argsstring>
        <name>TraceBounds</name>
        <param>
          <type><ref refid="structtrace__s" kindref="compound">trace_t</ref> &amp;</type>
          <declname>results</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type>const <ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>passEntity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="273" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="338" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a517e01418f17257c47fa99f12079f4b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClip::TranslationModel</definition>
        <argsstring>(trace_t &amp;results, const idVec3 &amp;start, const idVec3 &amp;end, const idClipModel *mdl, const idMat3 &amp;trmAxis, int contentMask, cmHandle_t model, const idVec3 &amp;modelOrigin, const idMat3 &amp;modelAxis)</argsstring>
        <name>TranslationModel</name>
        <param>
          <type><ref refid="structtrace__s" kindref="compound">trace_t</ref> &amp;</type>
          <declname>results</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>mdl</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>trmAxis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type>cmHandle_t</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>modelOrigin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>modelAxis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="277" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="1493" bodyend="1499"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a70fd52a0cada883324e6226152297c18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClip::RotationModel</definition>
        <argsstring>(trace_t &amp;results, const idVec3 &amp;start, const idRotation &amp;rotation, const idClipModel *mdl, const idMat3 &amp;trmAxis, int contentMask, cmHandle_t model, const idVec3 &amp;modelOrigin, const idMat3 &amp;modelAxis)</argsstring>
        <name>RotationModel</name>
        <param>
          <type><ref refid="structtrace__s" kindref="compound">trace_t</ref> &amp;</type>
          <declname>results</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_rotation" kindref="compound">idRotation</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>mdl</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>trmAxis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type>cmHandle_t</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>modelOrigin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>modelAxis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="280" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="1506" bodyend="1512"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a3edee53f4bfc4f945e72990048119398" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idClip::ContactsModel</definition>
        <argsstring>(contactInfo_t *contacts, const int maxContacts, const idVec3 &amp;start, const idVec6 &amp;dir, const float depth, const idClipModel *mdl, const idMat3 &amp;trmAxis, int contentMask, cmHandle_t model, const idVec3 &amp;modelOrigin, const idMat3 &amp;modelAxis)</argsstring>
        <name>ContactsModel</name>
        <param>
          <type><ref refid="structcontact_info__t" kindref="compound">contactInfo_t</ref> *</type>
          <declname>contacts</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>maxContacts</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec6" kindref="compound">idVec6</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>mdl</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>trmAxis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type>cmHandle_t</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>modelOrigin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>modelAxis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="283" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="1519" bodyend="1525"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a4d91af184e5abae9ea6ba601c0d787f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idClip::ContentsModel</definition>
        <argsstring>(const idVec3 &amp;start, const idClipModel *mdl, const idMat3 &amp;trmAxis, int contentMask, cmHandle_t model, const idVec3 &amp;modelOrigin, const idMat3 &amp;modelAxis)</argsstring>
        <name>ContentsModel</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>mdl</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>trmAxis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type>cmHandle_t</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>modelOrigin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>modelAxis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="286" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="1532" bodyend="1538"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1ae076cac5a4dcc19104777e44f91397f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClip::TranslationEntities</definition>
        <argsstring>(trace_t &amp;results, const idVec3 &amp;start, const idVec3 &amp;end, const idClipModel *mdl, const idMat3 &amp;trmAxis, int contentMask, const idEntity *passEntity)</argsstring>
        <name>TranslationEntities</name>
        <param>
          <type><ref refid="structtrace__s" kindref="compound">trace_t</ref> &amp;</type>
          <declname>results</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>mdl</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>trmAxis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type>const <ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>passEntity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="291" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="995" bodyend="1049"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a5276abff6ae733b7f87d05b29416a02d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idClip::GetModelContactFeature</definition>
        <argsstring>(const contactInfo_t &amp;contact, const idClipModel *clipModel, idFixedWinding &amp;winding) const </argsstring>
        <name>GetModelContactFeature</name>
        <param>
          <type>const <ref refid="structcontact_info__t" kindref="compound">contactInfo_t</ref> &amp;</type>
          <declname>contact</declname>
        </param>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>clipModel</declname>
        </param>
        <param>
          <type><ref refid="classid_fixed_winding" kindref="compound">idFixedWinding</ref> &amp;</type>
          <declname>winding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="295" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="1545" bodyend="1599"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a96b081bf49a5e2c104f6893034627b97" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idClip::EntitiesTouchingBounds</definition>
        <argsstring>(const idBounds &amp;bounds, int contentMask, idEntity **entityList, int maxCount) const </argsstring>
        <name>EntitiesTouchingBounds</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> **</type>
          <declname>entityList</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="298" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="833" bodyend="857"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1afe8fe6c80758e6f2515d211c4b454732" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idClip::ClipModelsTouchingBounds</definition>
        <argsstring>(const idBounds &amp;bounds, int contentMask, idClipModel **clipModelList, int maxCount) const </argsstring>
        <name>ClipModelsTouchingBounds</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type><ref refid="classid_clip_model" kindref="compound">idClipModel</ref> **</type>
          <declname>clipModelList</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="299" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="804" bodyend="826"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a71b59dd68cb3fa1bea32d748f91f7f66" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
        <definition>ID_INLINE const idBounds &amp; idClip::GetWorldBounds</definition>
        <argsstring>(void) const </argsstring>
        <name>GetWorldBounds</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="301" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="344" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1acafb072f3726463d27c26ab5b75f6c9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
        <definition>ID_INLINE idClipModel * idClip::DefaultClipModel</definition>
        <argsstring>(void)</argsstring>
        <name>DefaultClipModel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="302" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="348" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a0df6f04d10cfb29ebe8f15d810b09754" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClip::PrintStatistics</definition>
        <argsstring>(void)</argsstring>
        <name>PrintStatistics</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="305" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="1606" bodyend="1610"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a75df6f95e78483de809875b9cfadcec8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClip::DrawClipModels</definition>
        <argsstring>(const idVec3 &amp;eye, const float radius, const idEntity *passEntity)</argsstring>
        <name>DrawClipModels</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>eye</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>const <ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>passEntity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="306" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="1617" bodyend="1638"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a45f2f39aef70788c295b4add5d0a3f8e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idClip::DrawModelContactFeature</definition>
        <argsstring>(const contactInfo_t &amp;contact, const idClipModel *clipModel, int lifetime) const </argsstring>
        <name>DrawModelContactFeature</name>
        <param>
          <type>const <ref refid="structcontact_info__t" kindref="compound">contactInfo_t</ref> &amp;</type>
          <declname>contact</declname>
        </param>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>clipModel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lifetime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="307" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="1645" bodyend="1671"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a7def1b6c54791d052209f84a95116578" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idClip::idClip</definition>
        <argsstring>(void)</argsstring>
        <name>idClip</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="253" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1adfb3c99dd484bb7a098c5149468c2c2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClip::Init</definition>
        <argsstring>(void)</argsstring>
        <name>Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="255" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a0427ac683930ca23e6b60a100fbe8746" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClip::Shutdown</definition>
        <argsstring>(void)</argsstring>
        <name>Shutdown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="256" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1ad877bae5b888b3d11a4bb1d555f1bef4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idClip::Translation</definition>
        <argsstring>(trace_t &amp;results, const idVec3 &amp;start, const idVec3 &amp;end, const idClipModel *mdl, const idMat3 &amp;trmAxis, int contentMask, const idEntity *passEntity)</argsstring>
        <name>Translation</name>
        <param>
          <type><ref refid="structtrace__s" kindref="compound">trace_t</ref> &amp;</type>
          <declname>results</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>mdl</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>trmAxis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type>const <ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>passEntity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="259" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1ae3afac8b7c38e4e8fc55d72e6e885e7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idClip::Rotation</definition>
        <argsstring>(trace_t &amp;results, const idVec3 &amp;start, const idRotation &amp;rotation, const idClipModel *mdl, const idMat3 &amp;trmAxis, int contentMask, const idEntity *passEntity)</argsstring>
        <name>Rotation</name>
        <param>
          <type><ref refid="structtrace__s" kindref="compound">trace_t</ref> &amp;</type>
          <declname>results</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_rotation" kindref="compound">idRotation</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>mdl</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>trmAxis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type>const <ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>passEntity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="261" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1ac2cabcc1dd099562b6af4680256ba196" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idClip::Motion</definition>
        <argsstring>(trace_t &amp;results, const idVec3 &amp;start, const idVec3 &amp;end, const idRotation &amp;rotation, const idClipModel *mdl, const idMat3 &amp;trmAxis, int contentMask, const idEntity *passEntity)</argsstring>
        <name>Motion</name>
        <param>
          <type><ref refid="structtrace__s" kindref="compound">trace_t</ref> &amp;</type>
          <declname>results</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const <ref refid="classid_rotation" kindref="compound">idRotation</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>mdl</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>trmAxis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type>const <ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>passEntity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="263" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a7ddfcd21f5a7c467dcd3a0047e6618d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idClip::Contacts</definition>
        <argsstring>(contactInfo_t *contacts, const int maxContacts, const idVec3 &amp;start, const idVec6 &amp;dir, const float depth, const idClipModel *mdl, const idMat3 &amp;trmAxis, int contentMask, const idEntity *passEntity)</argsstring>
        <name>Contacts</name>
        <param>
          <type><ref refid="structcontact_info__t" kindref="compound">contactInfo_t</ref> *</type>
          <declname>contacts</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>maxContacts</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec6" kindref="compound">idVec6</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>mdl</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>trmAxis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type>const <ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>passEntity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="265" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a62dd12fdda9a1b268beeeb49d67a1746" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idClip::Contents</definition>
        <argsstring>(const idVec3 &amp;start, const idClipModel *mdl, const idMat3 &amp;trmAxis, int contentMask, const idEntity *passEntity)</argsstring>
        <name>Contents</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>mdl</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>trmAxis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type>const <ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>passEntity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="267" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1ae43db79f02eb636fd4cebd51bab6c7d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idClip::TracePoint</definition>
        <argsstring>(trace_t &amp;results, const idVec3 &amp;start, const idVec3 &amp;end, int contentMask, const idEntity *passEntity)</argsstring>
        <name>TracePoint</name>
        <param>
          <type><ref refid="structtrace__s" kindref="compound">trace_t</ref> &amp;</type>
          <declname>results</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type>const <ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>passEntity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="271" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1ac66391df57125b02b23550b6ff87ab82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idClip::TraceBounds</definition>
        <argsstring>(trace_t &amp;results, const idVec3 &amp;start, const idVec3 &amp;end, const idBounds &amp;bounds, int contentMask, const idEntity *passEntity)</argsstring>
        <name>TraceBounds</name>
        <param>
          <type><ref refid="structtrace__s" kindref="compound">trace_t</ref> &amp;</type>
          <declname>results</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type>const <ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>passEntity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="273" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a517e01418f17257c47fa99f12079f4b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClip::TranslationModel</definition>
        <argsstring>(trace_t &amp;results, const idVec3 &amp;start, const idVec3 &amp;end, const idClipModel *mdl, const idMat3 &amp;trmAxis, int contentMask, cmHandle_t model, const idVec3 &amp;modelOrigin, const idMat3 &amp;modelAxis)</argsstring>
        <name>TranslationModel</name>
        <param>
          <type><ref refid="structtrace__s" kindref="compound">trace_t</ref> &amp;</type>
          <declname>results</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>mdl</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>trmAxis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type>cmHandle_t</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>modelOrigin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>modelAxis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="277" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a70fd52a0cada883324e6226152297c18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClip::RotationModel</definition>
        <argsstring>(trace_t &amp;results, const idVec3 &amp;start, const idRotation &amp;rotation, const idClipModel *mdl, const idMat3 &amp;trmAxis, int contentMask, cmHandle_t model, const idVec3 &amp;modelOrigin, const idMat3 &amp;modelAxis)</argsstring>
        <name>RotationModel</name>
        <param>
          <type><ref refid="structtrace__s" kindref="compound">trace_t</ref> &amp;</type>
          <declname>results</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_rotation" kindref="compound">idRotation</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>mdl</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>trmAxis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type>cmHandle_t</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>modelOrigin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>modelAxis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="280" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a3edee53f4bfc4f945e72990048119398" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idClip::ContactsModel</definition>
        <argsstring>(contactInfo_t *contacts, const int maxContacts, const idVec3 &amp;start, const idVec6 &amp;dir, const float depth, const idClipModel *mdl, const idMat3 &amp;trmAxis, int contentMask, cmHandle_t model, const idVec3 &amp;modelOrigin, const idMat3 &amp;modelAxis)</argsstring>
        <name>ContactsModel</name>
        <param>
          <type><ref refid="structcontact_info__t" kindref="compound">contactInfo_t</ref> *</type>
          <declname>contacts</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>maxContacts</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec6" kindref="compound">idVec6</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>mdl</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>trmAxis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type>cmHandle_t</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>modelOrigin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>modelAxis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="283" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a4d91af184e5abae9ea6ba601c0d787f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idClip::ContentsModel</definition>
        <argsstring>(const idVec3 &amp;start, const idClipModel *mdl, const idMat3 &amp;trmAxis, int contentMask, cmHandle_t model, const idVec3 &amp;modelOrigin, const idMat3 &amp;modelAxis)</argsstring>
        <name>ContentsModel</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>mdl</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>trmAxis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type>cmHandle_t</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>modelOrigin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>modelAxis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="286" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1ae076cac5a4dcc19104777e44f91397f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClip::TranslationEntities</definition>
        <argsstring>(trace_t &amp;results, const idVec3 &amp;start, const idVec3 &amp;end, const idClipModel *mdl, const idMat3 &amp;trmAxis, int contentMask, const idEntity *passEntity)</argsstring>
        <name>TranslationEntities</name>
        <param>
          <type><ref refid="structtrace__s" kindref="compound">trace_t</ref> &amp;</type>
          <declname>results</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>mdl</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>trmAxis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type>const <ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>passEntity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="291" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a5276abff6ae733b7f87d05b29416a02d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idClip::GetModelContactFeature</definition>
        <argsstring>(const contactInfo_t &amp;contact, const idClipModel *clipModel, idFixedWinding &amp;winding) const </argsstring>
        <name>GetModelContactFeature</name>
        <param>
          <type>const <ref refid="structcontact_info__t" kindref="compound">contactInfo_t</ref> &amp;</type>
          <declname>contact</declname>
        </param>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>clipModel</declname>
        </param>
        <param>
          <type><ref refid="classid_fixed_winding" kindref="compound">idFixedWinding</ref> &amp;</type>
          <declname>winding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="295" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a96b081bf49a5e2c104f6893034627b97" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idClip::EntitiesTouchingBounds</definition>
        <argsstring>(const idBounds &amp;bounds, int contentMask, idEntity **entityList, int maxCount) const </argsstring>
        <name>EntitiesTouchingBounds</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> **</type>
          <declname>entityList</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="298" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1afe8fe6c80758e6f2515d211c4b454732" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idClip::ClipModelsTouchingBounds</definition>
        <argsstring>(const idBounds &amp;bounds, int contentMask, idClipModel **clipModelList, int maxCount) const </argsstring>
        <name>ClipModelsTouchingBounds</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type><ref refid="classid_clip_model" kindref="compound">idClipModel</ref> **</type>
          <declname>clipModelList</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="299" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1aa6129e9594f39b524d272ad41bcf2d75" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
        <definition>const idBounds&amp; idClip::GetWorldBounds</definition>
        <argsstring>(void) const </argsstring>
        <name>GetWorldBounds</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="301" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a25321a71dbdc98ecf0d2c32dfc496964" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
        <definition>idClipModel* idClip::DefaultClipModel</definition>
        <argsstring>(void)</argsstring>
        <name>DefaultClipModel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="302" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a0df6f04d10cfb29ebe8f15d810b09754" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClip::PrintStatistics</definition>
        <argsstring>(void)</argsstring>
        <name>PrintStatistics</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="305" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a75df6f95e78483de809875b9cfadcec8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClip::DrawClipModels</definition>
        <argsstring>(const idVec3 &amp;eye, const float radius, const idEntity *passEntity)</argsstring>
        <name>DrawClipModels</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>eye</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>const <ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>passEntity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="306" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a45f2f39aef70788c295b4add5d0a3f8e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idClip::DrawModelContactFeature</definition>
        <argsstring>(const contactInfo_t &amp;contact, const idClipModel *clipModel, int lifetime) const </argsstring>
        <name>DrawModelContactFeature</name>
        <param>
          <type>const <ref refid="structcontact_info__t" kindref="compound">contactInfo_t</ref> &amp;</type>
          <declname>contact</declname>
        </param>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>clipModel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lifetime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="307" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classid_clip_1a239d17836aa119aaa688f0ca95bf4bef" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structclip_sector__s" kindref="compound">clipSector_s</ref> *</type>
        <definition>clipSector_t * idClip::CreateClipSectors_r</definition>
        <argsstring>(const int depth, const idBounds &amp;bounds, idVec3 &amp;maxSector)</argsstring>
        <name>CreateClipSectors_r</name>
        <param>
          <type>const int</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>maxSector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="325" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="636" bodyend="677"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1aeca1e9397b27578fe0cfa06a61c42e22" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClip::ClipModelsTouchingBounds_r</definition>
        <argsstring>(const struct clipSector_s *node, struct listParms_s &amp;parms) const </argsstring>
        <name>ClipModelsTouchingBounds_r</name>
        <param>
          <type>const struct <ref refid="structclip_sector__s" kindref="compound">clipSector_s</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>struct <ref refid="structlist_parms__s" kindref="compound">listParms_s</ref> &amp;</type>
          <declname>parms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="326" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="747" bodyend="797"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a903198ea027744d98b37545970034eb9" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_trace_model" kindref="compound">idTraceModel</ref> *</type>
        <definition>const idTraceModel * idClip::TraceModelForClipModel</definition>
        <argsstring>(const idClipModel *mdl) const </argsstring>
        <name>TraceModelForClipModel</name>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>mdl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="327" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="944" bodyend="957"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1aa70660a0af2551206cb73a47ea7f70c6" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idClip::GetTraceClipModels</definition>
        <argsstring>(const idBounds &amp;bounds, int contentMask, const idEntity *passEntity, idClipModel **clipModelList) const </argsstring>
        <name>GetTraceClipModels</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type>const <ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>passEntity</declname>
        </param>
        <param>
          <type><ref refid="classid_clip_model" kindref="compound">idClipModel</ref> **</type>
          <declname>clipModelList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="328" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="870" bodyend="906"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a8f53e2e6347217b737377799790f2046" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClip::TraceRenderModel</definition>
        <argsstring>(trace_t &amp;trace, const idVec3 &amp;start, const idVec3 &amp;end, const float radius, const idMat3 &amp;axis, idClipModel *touch) const </argsstring>
        <name>TraceRenderModel</name>
        <param>
          <type><ref refid="structtrace__s" kindref="compound">trace_t</ref> &amp;</type>
          <declname>trace</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>axis</declname>
        </param>
        <param>
          <type><ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>touch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="329" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="913" bodyend="937"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1af8347b580b3c5dc4c9de7378e24e128f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structclip_sector__s" kindref="compound">clipSector_s</ref> *</type>
        <definition>struct clipSector_s* idClip::CreateClipSectors_r</definition>
        <argsstring>(const int depth, const idBounds &amp;bounds, idVec3 &amp;maxSector)</argsstring>
        <name>CreateClipSectors_r</name>
        <param>
          <type>const int</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>maxSector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="325" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1aeca1e9397b27578fe0cfa06a61c42e22" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClip::ClipModelsTouchingBounds_r</definition>
        <argsstring>(const struct clipSector_s *node, struct listParms_s &amp;parms) const </argsstring>
        <name>ClipModelsTouchingBounds_r</name>
        <param>
          <type>const struct <ref refid="structclip_sector__s" kindref="compound">clipSector_s</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>struct <ref refid="structlist_parms__s" kindref="compound">listParms_s</ref> &amp;</type>
          <declname>parms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="326" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a3731fbc1251ecbe0547a153f4a479a25" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_trace_model" kindref="compound">idTraceModel</ref> *</type>
        <definition>const idTraceModel* idClip::TraceModelForClipModel</definition>
        <argsstring>(const idClipModel *mdl) const </argsstring>
        <name>TraceModelForClipModel</name>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>mdl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="327" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1aa70660a0af2551206cb73a47ea7f70c6" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idClip::GetTraceClipModels</definition>
        <argsstring>(const idBounds &amp;bounds, int contentMask, const idEntity *passEntity, idClipModel **clipModelList) const </argsstring>
        <name>GetTraceClipModels</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentMask</declname>
        </param>
        <param>
          <type>const <ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>passEntity</declname>
        </param>
        <param>
          <type><ref refid="classid_clip_model" kindref="compound">idClipModel</ref> **</type>
          <declname>clipModelList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="328" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_1a8f53e2e6347217b737377799790f2046" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClip::TraceRenderModel</definition>
        <argsstring>(trace_t &amp;trace, const idVec3 &amp;start, const idVec3 &amp;end, const float radius, const idMat3 &amp;axis, idClipModel *touch) const </argsstring>
        <name>TraceRenderModel</name>
        <param>
          <type><ref refid="structtrace__s" kindref="compound">trace_t</ref> &amp;</type>
          <declname>trace</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>axis</declname>
        </param>
        <param>
          <type><ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>touch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="329" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="248" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="248" bodyend="330"/>
    <listofallmembers>
      <member refid="classid_clip_1afe8fe6c80758e6f2515d211c4b454732" prot="public" virt="non-virtual"><scope>idClip</scope><name>ClipModelsTouchingBounds</name></member>
      <member refid="classid_clip_1afe8fe6c80758e6f2515d211c4b454732" prot="public" virt="non-virtual"><scope>idClip</scope><name>ClipModelsTouchingBounds</name></member>
      <member refid="classid_clip_1aeca1e9397b27578fe0cfa06a61c42e22" prot="private" virt="non-virtual"><scope>idClip</scope><name>ClipModelsTouchingBounds_r</name></member>
      <member refid="classid_clip_1aeca1e9397b27578fe0cfa06a61c42e22" prot="private" virt="non-virtual"><scope>idClip</scope><name>ClipModelsTouchingBounds_r</name></member>
      <member refid="classid_clip_1a539423a833514bc17a627d4eab61a2dc" prot="private" virt="non-virtual"><scope>idClip</scope><name>clipSectors</name></member>
      <member refid="classid_clip_1a7ddfcd21f5a7c467dcd3a0047e6618d8" prot="public" virt="non-virtual"><scope>idClip</scope><name>Contacts</name></member>
      <member refid="classid_clip_1a7ddfcd21f5a7c467dcd3a0047e6618d8" prot="public" virt="non-virtual"><scope>idClip</scope><name>Contacts</name></member>
      <member refid="classid_clip_1a3edee53f4bfc4f945e72990048119398" prot="public" virt="non-virtual"><scope>idClip</scope><name>ContactsModel</name></member>
      <member refid="classid_clip_1a3edee53f4bfc4f945e72990048119398" prot="public" virt="non-virtual"><scope>idClip</scope><name>ContactsModel</name></member>
      <member refid="classid_clip_1a62dd12fdda9a1b268beeeb49d67a1746" prot="public" virt="non-virtual"><scope>idClip</scope><name>Contents</name></member>
      <member refid="classid_clip_1a62dd12fdda9a1b268beeeb49d67a1746" prot="public" virt="non-virtual"><scope>idClip</scope><name>Contents</name></member>
      <member refid="classid_clip_1a4d91af184e5abae9ea6ba601c0d787f8" prot="public" virt="non-virtual"><scope>idClip</scope><name>ContentsModel</name></member>
      <member refid="classid_clip_1a4d91af184e5abae9ea6ba601c0d787f8" prot="public" virt="non-virtual"><scope>idClip</scope><name>ContentsModel</name></member>
      <member refid="classid_clip_1a239d17836aa119aaa688f0ca95bf4bef" prot="private" virt="non-virtual"><scope>idClip</scope><name>CreateClipSectors_r</name></member>
      <member refid="classid_clip_1af8347b580b3c5dc4c9de7378e24e128f" prot="private" virt="non-virtual"><scope>idClip</scope><name>CreateClipSectors_r</name></member>
      <member refid="classid_clip_1acafb072f3726463d27c26ab5b75f6c9a" prot="public" virt="non-virtual"><scope>idClip</scope><name>DefaultClipModel</name></member>
      <member refid="classid_clip_1a25321a71dbdc98ecf0d2c32dfc496964" prot="public" virt="non-virtual"><scope>idClip</scope><name>DefaultClipModel</name></member>
      <member refid="classid_clip_1a13b6eff6f2d432afc1e19d7311cbbe64" prot="private" virt="non-virtual"><scope>idClip</scope><name>defaultClipModel</name></member>
      <member refid="classid_clip_1a75df6f95e78483de809875b9cfadcec8" prot="public" virt="non-virtual"><scope>idClip</scope><name>DrawClipModels</name></member>
      <member refid="classid_clip_1a75df6f95e78483de809875b9cfadcec8" prot="public" virt="non-virtual"><scope>idClip</scope><name>DrawClipModels</name></member>
      <member refid="classid_clip_1a45f2f39aef70788c295b4add5d0a3f8e" prot="public" virt="non-virtual"><scope>idClip</scope><name>DrawModelContactFeature</name></member>
      <member refid="classid_clip_1a45f2f39aef70788c295b4add5d0a3f8e" prot="public" virt="non-virtual"><scope>idClip</scope><name>DrawModelContactFeature</name></member>
      <member refid="classid_clip_1a96b081bf49a5e2c104f6893034627b97" prot="public" virt="non-virtual"><scope>idClip</scope><name>EntitiesTouchingBounds</name></member>
      <member refid="classid_clip_1a96b081bf49a5e2c104f6893034627b97" prot="public" virt="non-virtual"><scope>idClip</scope><name>EntitiesTouchingBounds</name></member>
      <member refid="classid_clip_1a5276abff6ae733b7f87d05b29416a02d" prot="public" virt="non-virtual"><scope>idClip</scope><name>GetModelContactFeature</name></member>
      <member refid="classid_clip_1a5276abff6ae733b7f87d05b29416a02d" prot="public" virt="non-virtual"><scope>idClip</scope><name>GetModelContactFeature</name></member>
      <member refid="classid_clip_1aa70660a0af2551206cb73a47ea7f70c6" prot="private" virt="non-virtual"><scope>idClip</scope><name>GetTraceClipModels</name></member>
      <member refid="classid_clip_1aa70660a0af2551206cb73a47ea7f70c6" prot="private" virt="non-virtual"><scope>idClip</scope><name>GetTraceClipModels</name></member>
      <member refid="classid_clip_1a71b59dd68cb3fa1bea32d748f91f7f66" prot="public" virt="non-virtual"><scope>idClip</scope><name>GetWorldBounds</name></member>
      <member refid="classid_clip_1aa6129e9594f39b524d272ad41bcf2d75" prot="public" virt="non-virtual"><scope>idClip</scope><name>GetWorldBounds</name></member>
      <member refid="classid_clip_1a7def1b6c54791d052209f84a95116578" prot="public" virt="non-virtual"><scope>idClip</scope><name>idClip</name></member>
      <member refid="classid_clip_1a7def1b6c54791d052209f84a95116578" prot="public" virt="non-virtual"><scope>idClip</scope><name>idClip</name></member>
      <member refid="classid_clip_1ad92d3a6f9a4c052a386f3612fa8a4ab1" prot="private" virt="non-virtual"><scope>idClip</scope><name>idClipModel</name></member>
      <member refid="classid_clip_1adfb3c99dd484bb7a098c5149468c2c2e" prot="public" virt="non-virtual"><scope>idClip</scope><name>Init</name></member>
      <member refid="classid_clip_1adfb3c99dd484bb7a098c5149468c2c2e" prot="public" virt="non-virtual"><scope>idClip</scope><name>Init</name></member>
      <member refid="classid_clip_1ac2cabcc1dd099562b6af4680256ba196" prot="public" virt="non-virtual"><scope>idClip</scope><name>Motion</name></member>
      <member refid="classid_clip_1ac2cabcc1dd099562b6af4680256ba196" prot="public" virt="non-virtual"><scope>idClip</scope><name>Motion</name></member>
      <member refid="classid_clip_1a74093cdada8e31f6424f89a93d115de0" prot="private" virt="non-virtual"><scope>idClip</scope><name>numClipSectors</name></member>
      <member refid="classid_clip_1a5fa6a5cc9dad13c6217aa7f5ac6c2656" prot="private" virt="non-virtual"><scope>idClip</scope><name>numContacts</name></member>
      <member refid="classid_clip_1a2f2bf12ea033312f57f3b00333f91e2f" prot="private" virt="non-virtual"><scope>idClip</scope><name>numContents</name></member>
      <member refid="classid_clip_1a903611675e3377beaea388e36a467566" prot="private" virt="non-virtual"><scope>idClip</scope><name>numMotions</name></member>
      <member refid="classid_clip_1a1810583a15ccb7f3dd8009351058d555" prot="private" virt="non-virtual"><scope>idClip</scope><name>numRenderModelTraces</name></member>
      <member refid="classid_clip_1a1b7e875b789b7a13af4adf44854705e4" prot="private" virt="non-virtual"><scope>idClip</scope><name>numRotations</name></member>
      <member refid="classid_clip_1a59a6f7f2a7b7688849641d362323e344" prot="private" virt="non-virtual"><scope>idClip</scope><name>numTranslations</name></member>
      <member refid="classid_clip_1a0df6f04d10cfb29ebe8f15d810b09754" prot="public" virt="non-virtual"><scope>idClip</scope><name>PrintStatistics</name></member>
      <member refid="classid_clip_1a0df6f04d10cfb29ebe8f15d810b09754" prot="public" virt="non-virtual"><scope>idClip</scope><name>PrintStatistics</name></member>
      <member refid="classid_clip_1ae3afac8b7c38e4e8fc55d72e6e885e7a" prot="public" virt="non-virtual"><scope>idClip</scope><name>Rotation</name></member>
      <member refid="classid_clip_1ae3afac8b7c38e4e8fc55d72e6e885e7a" prot="public" virt="non-virtual"><scope>idClip</scope><name>Rotation</name></member>
      <member refid="classid_clip_1a70fd52a0cada883324e6226152297c18" prot="public" virt="non-virtual"><scope>idClip</scope><name>RotationModel</name></member>
      <member refid="classid_clip_1a70fd52a0cada883324e6226152297c18" prot="public" virt="non-virtual"><scope>idClip</scope><name>RotationModel</name></member>
      <member refid="classid_clip_1a0427ac683930ca23e6b60a100fbe8746" prot="public" virt="non-virtual"><scope>idClip</scope><name>Shutdown</name></member>
      <member refid="classid_clip_1a0427ac683930ca23e6b60a100fbe8746" prot="public" virt="non-virtual"><scope>idClip</scope><name>Shutdown</name></member>
      <member refid="classid_clip_1a8491fed546e610fd04956676b8298b5b" prot="private" virt="non-virtual"><scope>idClip</scope><name>temporaryClipModel</name></member>
      <member refid="classid_clip_1a508ddc3e36a0ca85e4360ab4881450bf" prot="private" virt="non-virtual"><scope>idClip</scope><name>touchCount</name></member>
      <member refid="classid_clip_1ab803cc8d34611ab2a76519f3c5b3897a" prot="public" virt="non-virtual"><scope>idClip</scope><name>TraceBounds</name></member>
      <member refid="classid_clip_1ac66391df57125b02b23550b6ff87ab82" prot="public" virt="non-virtual"><scope>idClip</scope><name>TraceBounds</name></member>
      <member refid="classid_clip_1a903198ea027744d98b37545970034eb9" prot="private" virt="non-virtual"><scope>idClip</scope><name>TraceModelForClipModel</name></member>
      <member refid="classid_clip_1a3731fbc1251ecbe0547a153f4a479a25" prot="private" virt="non-virtual"><scope>idClip</scope><name>TraceModelForClipModel</name></member>
      <member refid="classid_clip_1aab4bf3ea871bbc5bb1a62283be20bf66" prot="public" virt="non-virtual"><scope>idClip</scope><name>TracePoint</name></member>
      <member refid="classid_clip_1ae43db79f02eb636fd4cebd51bab6c7d9" prot="public" virt="non-virtual"><scope>idClip</scope><name>TracePoint</name></member>
      <member refid="classid_clip_1a8f53e2e6347217b737377799790f2046" prot="private" virt="non-virtual"><scope>idClip</scope><name>TraceRenderModel</name></member>
      <member refid="classid_clip_1a8f53e2e6347217b737377799790f2046" prot="private" virt="non-virtual"><scope>idClip</scope><name>TraceRenderModel</name></member>
      <member refid="classid_clip_1ad877bae5b888b3d11a4bb1d555f1bef4" prot="public" virt="non-virtual"><scope>idClip</scope><name>Translation</name></member>
      <member refid="classid_clip_1ad877bae5b888b3d11a4bb1d555f1bef4" prot="public" virt="non-virtual"><scope>idClip</scope><name>Translation</name></member>
      <member refid="classid_clip_1ae076cac5a4dcc19104777e44f91397f3" prot="public" virt="non-virtual"><scope>idClip</scope><name>TranslationEntities</name></member>
      <member refid="classid_clip_1ae076cac5a4dcc19104777e44f91397f3" prot="public" virt="non-virtual"><scope>idClip</scope><name>TranslationEntities</name></member>
      <member refid="classid_clip_1a517e01418f17257c47fa99f12079f4b9" prot="public" virt="non-virtual"><scope>idClip</scope><name>TranslationModel</name></member>
      <member refid="classid_clip_1a517e01418f17257c47fa99f12079f4b9" prot="public" virt="non-virtual"><scope>idClip</scope><name>TranslationModel</name></member>
      <member refid="classid_clip_1abd6d601ed15e0e2c3b287029bb5ece01" prot="private" virt="non-virtual"><scope>idClip</scope><name>worldBounds</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
