<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_clip_model" kind="class" prot="public">
    <compoundname>idClipModel</compoundname>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classid_clip_model_1ae897e8b2d56a0d06c2ed0e246c9f797b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>idClip</definition>
        <argsstring></argsstring>
        <name>idClip</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="56" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classid_clip_model_1ae4724c9a92577861153d4d8e68051234" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idClipModel::enabled</definition>
        <argsstring></argsstring>
        <name>enabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="112" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_clip_model_1ab642e7bf852850b1b1c8eb99d88725ec" prot="private" static="no" mutable="no">
        <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
        <definition>idEntity * idClipModel::entity</definition>
        <argsstring></argsstring>
        <name>entity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="113" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_clip_model_1ac082f39d79f1ed3f9d4758c9a11cb8a0" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idClipModel::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="114" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_clip_model_1a8a95a02c3dc7512ae23510b4f4c8c887" prot="private" static="no" mutable="no">
        <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
        <definition>idEntity * idClipModel::owner</definition>
        <argsstring></argsstring>
        <name>owner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="115" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_clip_model_1a7ee60b1197ff3f9400edd40a9a588626" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>idVec3 idClipModel::origin</definition>
        <argsstring></argsstring>
        <name>origin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="116" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_clip_model_1a08a45d0227fa04fad49596260b51a847" prot="private" static="no" mutable="no">
        <type><ref refid="classid_mat3" kindref="compound">idMat3</ref></type>
        <definition>idMat3 idClipModel::axis</definition>
        <argsstring></argsstring>
        <name>axis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="117" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_clip_model_1a0c887d865006a6ac2978829685e97950" prot="private" static="no" mutable="no">
        <type><ref refid="classid_bounds" kindref="compound">idBounds</ref></type>
        <definition>idBounds idClipModel::bounds</definition>
        <argsstring></argsstring>
        <name>bounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="118" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_clip_model_1a2b509dd79dcf23f877207840edf50873" prot="private" static="no" mutable="no">
        <type><ref refid="classid_bounds" kindref="compound">idBounds</ref></type>
        <definition>idBounds idClipModel::absBounds</definition>
        <argsstring></argsstring>
        <name>absBounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="119" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_clip_model_1acf43d5679d63889f75ba0070bcb5c611" prot="private" static="no" mutable="no">
        <type>const <ref refid="classid_material" kindref="compound">idMaterial</ref> *</type>
        <definition>const idMaterial * idClipModel::material</definition>
        <argsstring></argsstring>
        <name>material</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="120" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_clip_model_1acf7f7526c6800033fe33d5c454aba843" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idClipModel::contents</definition>
        <argsstring></argsstring>
        <name>contents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="121" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_clip_model_1a2488432ef8a8ad806a55a2b1b26e5c92" prot="private" static="no" mutable="no">
        <type>cmHandle_t</type>
        <definition>cmHandle_t idClipModel::collisionModelHandle</definition>
        <argsstring></argsstring>
        <name>collisionModelHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="122" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_clip_model_1a10208d452b96743d5e4efea06b821bd1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idClipModel::traceModelIndex</definition>
        <argsstring></argsstring>
        <name>traceModelIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="123" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_clip_model_1a51a792ff940f927890a13cdedfff0ca8" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idClipModel::renderModelHandle</definition>
        <argsstring></argsstring>
        <name>renderModelHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="124" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_clip_model_1ab3ef08fd513168ff58b8fcd60d9f4632" prot="private" static="no" mutable="no">
        <type>struct <ref refid="structclip_link__s" kindref="compound">clipLink_s</ref> *</type>
        <definition>struct clipLink_s * idClipModel::clipLinks</definition>
        <argsstring></argsstring>
        <name>clipLinks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="126" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_clip_model_1a32ba826c05f7a64f2dbc2c76e009160c" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idClipModel::touchCount</definition>
        <argsstring></argsstring>
        <name>touchCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="127" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_clip_model_1ad2b4326340dfe885466ffc88a545177b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idClipModel::idClipModel</definition>
        <argsstring>(void)</argsstring>
        <name>idClipModel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="59" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="295" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a3e79c7ee67c32fd2e6b342c50cbb9c6a" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>idClipModel::idClipModel</definition>
        <argsstring>(const char *name)</argsstring>
        <name>idClipModel</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="60" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="304" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a6f866f316a94d78c502c218a0b6c7668" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>idClipModel::idClipModel</definition>
        <argsstring>(const idTraceModel &amp;trm)</argsstring>
        <name>idClipModel</name>
        <param>
          <type>const <ref refid="classid_trace_model" kindref="compound">idTraceModel</ref> &amp;</type>
          <declname>trm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="61" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="314" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1acc7254018afd859aac9710e5802a9f95" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>idClipModel::idClipModel</definition>
        <argsstring>(const int renderModelHandle)</argsstring>
        <name>idClipModel</name>
        <param>
          <type>const int</type>
          <declname>renderModelHandle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="62" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="324" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a5b43769cd2a3f4b328040296d4e557cc" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>idClipModel::idClipModel</definition>
        <argsstring>(const idClipModel *model)</argsstring>
        <name>idClipModel</name>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="63" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="335" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1ae96ce54d7cd2612a1930a0f3aee21aa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idClipModel::~idClipModel</definition>
        <argsstring>(void)</argsstring>
        <name>~idClipModel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="64" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="361" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a8d0101abb5c5dba246a2205b58611c35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idClipModel::LoadModel</definition>
        <argsstring>(const char *name)</argsstring>
        <name>LoadModel</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="66" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="215" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a2ebeee87d1fa6dcfc185bce29d436af7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::LoadModel</definition>
        <argsstring>(const idTraceModel &amp;trm)</argsstring>
        <name>LoadModel</name>
        <param>
          <type>const <ref refid="classid_trace_model" kindref="compound">idTraceModel</ref> &amp;</type>
          <declname>trm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="67" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="237" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a11553c50a9f1dab9618344d1922103dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::LoadModel</definition>
        <argsstring>(const int renderModelHandle)</argsstring>
        <name>LoadModel</name>
        <param>
          <type>const int</type>
          <declname>renderModelHandle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="68" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="252" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a314aeb4a321d91f969ae4925eebf0ca6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::Save</definition>
        <argsstring>(idSaveGame *savefile) const </argsstring>
        <name>Save</name>
        <param>
          <type><ref refid="classid_save_game" kindref="compound">idSaveGame</ref> *</type>
          <declname>savefile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="70" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="374" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a4dde2e25ddddd842d5167aacc95671a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::Restore</definition>
        <argsstring>(idRestoreGame *savefile)</argsstring>
        <name>Restore</name>
        <param>
          <type><ref refid="classid_restore_game" kindref="compound">idRestoreGame</ref> *</type>
          <declname>savefile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="71" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="401" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a05999a47cff6808a3ac10cdeb9ab5f6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::Link</definition>
        <argsstring>(idClip &amp;clp)</argsstring>
        <name>Link</name>
        <param>
          <type><ref refid="classid_clip" kindref="compound">idClip</ref> &amp;</type>
          <declname>clp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="73" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="545" bodyend="576"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a1c94eff86ae45faa2eb24f6d481238ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::Link</definition>
        <argsstring>(idClip &amp;clp, idEntity *ent, int newId, const idVec3 &amp;newOrigin, const idMat3 &amp;newAxis, int renderModelHandle=-1)</argsstring>
        <name>Link</name>
        <param>
          <type><ref refid="classid_clip" kindref="compound">idClip</ref> &amp;</type>
          <declname>clp</declname>
        </param>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>ent</declname>
        </param>
        <param>
          <type>int</type>
          <declname>newId</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>newOrigin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>newAxis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>renderModelHandle</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="74" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="583" bodyend="597"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a17bcdcaf1df38f8b0c2cb13061dab3a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::Unlink</definition>
        <argsstring>(void)</argsstring>
        <name>Unlink</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="75" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="491" bodyend="506"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1ad20f12138243c32e26755d619fcbfa5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::SetPosition</definition>
        <argsstring>(const idVec3 &amp;newOrigin, const idMat3 &amp;newAxis)</argsstring>
        <name>SetPosition</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>newOrigin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>newAxis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="76" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="444" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1ac533faa4b7abdf81520c772f91b63199" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idClipModel::Translate</definition>
        <argsstring>(const idVec3 &amp;translation)</argsstring>
        <name>Translate</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>translation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="77" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a38028f31e3ae98e2c3e25789e73c1f49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idClipModel::Rotate</definition>
        <argsstring>(const idRotation &amp;rotation)</argsstring>
        <name>Rotate</name>
        <param>
          <type>const <ref refid="classid_rotation" kindref="compound">idRotation</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="78" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="144" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a946ce2c92249b76a9b6bda71dcd00334" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idClipModel::Enable</definition>
        <argsstring>(void)</argsstring>
        <name>Enable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="79" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="150" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1ad24af0e12af6b260f130dd33df35e72b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idClipModel::Disable</definition>
        <argsstring>(void)</argsstring>
        <name>Disable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="80" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="154" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1ab7454ff0aa00f3ddac23465b8b8b2499" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idClipModel::SetMaterial</definition>
        <argsstring>(const idMaterial *m)</argsstring>
        <name>SetMaterial</name>
        <param>
          <type>const <ref refid="classid_material" kindref="compound">idMaterial</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="81" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="158" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a3d528daeae477372f2ac1c9e8086c85a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_material" kindref="compound">idMaterial</ref> *</type>
        <definition>ID_INLINE const idMaterial * idClipModel::GetMaterial</definition>
        <argsstring>(void) const </argsstring>
        <name>GetMaterial</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="82" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="162" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a9da2e81bfbbf6eee724c1e1bb11d1810" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idClipModel::SetContents</definition>
        <argsstring>(int newContents)</argsstring>
        <name>SetContents</name>
        <param>
          <type>int</type>
          <declname>newContents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="83" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="166" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a6909c91191da81d6753764e903b217f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idClipModel::GetContents</definition>
        <argsstring>(void) const </argsstring>
        <name>GetContents</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="84" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="170" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a24d1bd5b83bea355434e002c6dead920" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idClipModel::SetEntity</definition>
        <argsstring>(idEntity *newEntity)</argsstring>
        <name>SetEntity</name>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>newEntity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="85" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a259551523b7cdf88f9c6cb59e1b281ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
        <definition>ID_INLINE idEntity * idClipModel::GetEntity</definition>
        <argsstring>(void) const </argsstring>
        <name>GetEntity</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="86" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="178" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a5938388e85c44c4a29d2995acce0316b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idClipModel::SetId</definition>
        <argsstring>(int newId)</argsstring>
        <name>SetId</name>
        <param>
          <type>int</type>
          <declname>newId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="87" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="182" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1ab20d04d7f4e208ae415b9b29fd2fe05f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idClipModel::GetId</definition>
        <argsstring>(void) const </argsstring>
        <name>GetId</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="88" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="186" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a729436e247948eec7044574610556128" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idClipModel::SetOwner</definition>
        <argsstring>(idEntity *newOwner)</argsstring>
        <name>SetOwner</name>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>newOwner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="89" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="190" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a8908fb6fe618021a137475e9456dca74" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
        <definition>ID_INLINE idEntity * idClipModel::GetOwner</definition>
        <argsstring>(void) const </argsstring>
        <name>GetOwner</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="90" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="194" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1ad684bed72a8b2dcc275c5dcc0ba4bf29" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
        <definition>ID_INLINE const idBounds &amp; idClipModel::GetBounds</definition>
        <argsstring>(void) const </argsstring>
        <name>GetBounds</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="91" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="198" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1acfc3c90c3be85125bd3eb96225369d1e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
        <definition>ID_INLINE const idBounds &amp; idClipModel::GetAbsBounds</definition>
        <argsstring>(void) const </argsstring>
        <name>GetAbsBounds</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="92" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="202" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a97860a64e941f1b09dafb6e92de63ef5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>ID_INLINE const idVec3 &amp; idClipModel::GetOrigin</definition>
        <argsstring>(void) const </argsstring>
        <name>GetOrigin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="93" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="206" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1ab3d52289f1b7f84e92760df628bad2f7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
        <definition>ID_INLINE const idMat3 &amp; idClipModel::GetAxis</definition>
        <argsstring>(void) const </argsstring>
        <name>GetAxis</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="94" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="210" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1ac91ba536476afd3ba517d8b6ae79f5f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idClipModel::IsTraceModel</definition>
        <argsstring>(void) const </argsstring>
        <name>IsTraceModel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="95" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="218" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1ad243ced8229acceb6a0818926167493e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idClipModel::IsRenderModel</definition>
        <argsstring>(void) const </argsstring>
        <name>IsRenderModel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="96" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="214" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1aabf0d15810782f2b3118fa727725a3b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idClipModel::IsLinked</definition>
        <argsstring>(void) const </argsstring>
        <name>IsLinked</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="97" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="222" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a5f2c7aa59bbde4c81912203a640cba37" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idClipModel::IsEnabled</definition>
        <argsstring>(void) const </argsstring>
        <name>IsEnabled</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="98" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="226" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a0d3cc258060b9ec0278ec7d8b625f386" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idClipModel::IsEqual</definition>
        <argsstring>(const idTraceModel &amp;trm) const </argsstring>
        <name>IsEqual</name>
        <param>
          <type>const <ref refid="classid_trace_model" kindref="compound">idTraceModel</ref> &amp;</type>
          <declname>trm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="99" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="230" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a1a9d3219a073cd52509277d3c6ad107e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>cmHandle_t</type>
        <definition>cmHandle_t idClipModel::Handle</definition>
        <argsstring>(void) const </argsstring>
        <name>Handle</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="100" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="457" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1aa05bbe5f6eaf0c190beccd2307b45871" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_trace_model" kindref="compound">idTraceModel</ref> *</type>
        <definition>ID_INLINE const idTraceModel * idClipModel::GetTraceModel</definition>
        <argsstring>(void) const </argsstring>
        <name>GetTraceModel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="101" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="234" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a81f25df3ad43c7358d5130ac49d04aa4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::GetMassProperties</definition>
        <argsstring>(const float density, float &amp;mass, idVec3 &amp;centerOfMass, idMat3 &amp;inertiaTensor) const </argsstring>
        <name>GetMassProperties</name>
        <param>
          <type>const float</type>
          <declname>density</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>mass</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>centerOfMass</declname>
        </param>
        <param>
          <type><ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>inertiaTensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="102" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="475" bodyend="484"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1ad2b4326340dfe885466ffc88a545177b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idClipModel::idClipModel</definition>
        <argsstring>(void)</argsstring>
        <name>idClipModel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a3e79c7ee67c32fd2e6b342c50cbb9c6a" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>idClipModel::idClipModel</definition>
        <argsstring>(const char *name)</argsstring>
        <name>idClipModel</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a6f866f316a94d78c502c218a0b6c7668" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>idClipModel::idClipModel</definition>
        <argsstring>(const idTraceModel &amp;trm)</argsstring>
        <name>idClipModel</name>
        <param>
          <type>const <ref refid="classid_trace_model" kindref="compound">idTraceModel</ref> &amp;</type>
          <declname>trm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1acc7254018afd859aac9710e5802a9f95" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>idClipModel::idClipModel</definition>
        <argsstring>(const int renderModelHandle)</argsstring>
        <name>idClipModel</name>
        <param>
          <type>const int</type>
          <declname>renderModelHandle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a5b43769cd2a3f4b328040296d4e557cc" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>idClipModel::idClipModel</definition>
        <argsstring>(const idClipModel *model)</argsstring>
        <name>idClipModel</name>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1ae96ce54d7cd2612a1930a0f3aee21aa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idClipModel::~idClipModel</definition>
        <argsstring>(void)</argsstring>
        <name>~idClipModel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a8d0101abb5c5dba246a2205b58611c35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idClipModel::LoadModel</definition>
        <argsstring>(const char *name)</argsstring>
        <name>LoadModel</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a2ebeee87d1fa6dcfc185bce29d436af7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::LoadModel</definition>
        <argsstring>(const idTraceModel &amp;trm)</argsstring>
        <name>LoadModel</name>
        <param>
          <type>const <ref refid="classid_trace_model" kindref="compound">idTraceModel</ref> &amp;</type>
          <declname>trm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a11553c50a9f1dab9618344d1922103dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::LoadModel</definition>
        <argsstring>(const int renderModelHandle)</argsstring>
        <name>LoadModel</name>
        <param>
          <type>const int</type>
          <declname>renderModelHandle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a314aeb4a321d91f969ae4925eebf0ca6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::Save</definition>
        <argsstring>(idSaveGame *savefile) const </argsstring>
        <name>Save</name>
        <param>
          <type><ref refid="classid_save_game" kindref="compound">idSaveGame</ref> *</type>
          <declname>savefile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a4dde2e25ddddd842d5167aacc95671a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::Restore</definition>
        <argsstring>(idRestoreGame *savefile)</argsstring>
        <name>Restore</name>
        <param>
          <type><ref refid="classid_restore_game" kindref="compound">idRestoreGame</ref> *</type>
          <declname>savefile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a05999a47cff6808a3ac10cdeb9ab5f6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::Link</definition>
        <argsstring>(idClip &amp;clp)</argsstring>
        <name>Link</name>
        <param>
          <type><ref refid="classid_clip" kindref="compound">idClip</ref> &amp;</type>
          <declname>clp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a1c94eff86ae45faa2eb24f6d481238ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::Link</definition>
        <argsstring>(idClip &amp;clp, idEntity *ent, int newId, const idVec3 &amp;newOrigin, const idMat3 &amp;newAxis, int renderModelHandle=-1)</argsstring>
        <name>Link</name>
        <param>
          <type><ref refid="classid_clip" kindref="compound">idClip</ref> &amp;</type>
          <declname>clp</declname>
        </param>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>ent</declname>
        </param>
        <param>
          <type>int</type>
          <declname>newId</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>newOrigin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>newAxis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>renderModelHandle</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a17bcdcaf1df38f8b0c2cb13061dab3a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::Unlink</definition>
        <argsstring>(void)</argsstring>
        <name>Unlink</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1ad20f12138243c32e26755d619fcbfa5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::SetPosition</definition>
        <argsstring>(const idVec3 &amp;newOrigin, const idMat3 &amp;newAxis)</argsstring>
        <name>SetPosition</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>newOrigin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>newAxis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a51579124b87769e2431d359d7760c563" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::Translate</definition>
        <argsstring>(const idVec3 &amp;translation)</argsstring>
        <name>Translate</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>translation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a9e47e70fa48409e3bfafe889f45459cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::Rotate</definition>
        <argsstring>(const idRotation &amp;rotation)</argsstring>
        <name>Rotate</name>
        <param>
          <type>const <ref refid="classid_rotation" kindref="compound">idRotation</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1aa03c5b11a837640d4b810392a68ab25c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::Enable</definition>
        <argsstring>(void)</argsstring>
        <name>Enable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1aa2a289f616a9fca7ce543efc046faff1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::Disable</definition>
        <argsstring>(void)</argsstring>
        <name>Disable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a807f46bf1ce42f98be5aac883d61fbc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::SetMaterial</definition>
        <argsstring>(const idMaterial *m)</argsstring>
        <name>SetMaterial</name>
        <param>
          <type>const <ref refid="classid_material" kindref="compound">idMaterial</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a7ab13edb5e0a2a2872a909f05226d51e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_material" kindref="compound">idMaterial</ref> *</type>
        <definition>const idMaterial* idClipModel::GetMaterial</definition>
        <argsstring>(void) const </argsstring>
        <name>GetMaterial</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1aa1c5bda7b26c9c9534852539471a13c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::SetContents</definition>
        <argsstring>(int newContents)</argsstring>
        <name>SetContents</name>
        <param>
          <type>int</type>
          <declname>newContents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a3f6b47b2255383c925d933b9081d89ea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idClipModel::GetContents</definition>
        <argsstring>(void) const </argsstring>
        <name>GetContents</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a2d401c74982cdd156d150587b3e4951e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::SetEntity</definition>
        <argsstring>(idEntity *newEntity)</argsstring>
        <name>SetEntity</name>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>newEntity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1af3d7c7f07b872f5077c7d68fcfdeb4df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
        <definition>idEntity* idClipModel::GetEntity</definition>
        <argsstring>(void) const </argsstring>
        <name>GetEntity</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1aea349c77e77309db8ac05cca4ef6e4a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::SetId</definition>
        <argsstring>(int newId)</argsstring>
        <name>SetId</name>
        <param>
          <type>int</type>
          <declname>newId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1ad6b571b6816d72e40f075208305b854a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idClipModel::GetId</definition>
        <argsstring>(void) const </argsstring>
        <name>GetId</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1ae9d261ed2c551c6c1e48325f00ffaf01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::SetOwner</definition>
        <argsstring>(idEntity *newOwner)</argsstring>
        <name>SetOwner</name>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>newOwner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1ac68e54ee3e238563c27fa3c5714203ab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
        <definition>idEntity* idClipModel::GetOwner</definition>
        <argsstring>(void) const </argsstring>
        <name>GetOwner</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1ac9fff8ecc29c0320cbed9e694639272d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
        <definition>const idBounds&amp; idClipModel::GetBounds</definition>
        <argsstring>(void) const </argsstring>
        <name>GetBounds</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1ab402902ea97948c9892aa97d2b667b8e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
        <definition>const idBounds&amp; idClipModel::GetAbsBounds</definition>
        <argsstring>(void) const </argsstring>
        <name>GetAbsBounds</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1afe2e9c874c936f8b6621907853630a29" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3&amp; idClipModel::GetOrigin</definition>
        <argsstring>(void) const </argsstring>
        <name>GetOrigin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1ac37c1a0676231a0fb1c57f69985428fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
        <definition>const idMat3&amp; idClipModel::GetAxis</definition>
        <argsstring>(void) const </argsstring>
        <name>GetAxis</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a403404423d47efad3f6a3045cbb78fc7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idClipModel::IsTraceModel</definition>
        <argsstring>(void) const </argsstring>
        <name>IsTraceModel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1ac6db9d180e85e40a71f4955726a6b850" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idClipModel::IsRenderModel</definition>
        <argsstring>(void) const </argsstring>
        <name>IsRenderModel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a27ee3906a16a16419a7bf3f34c3a963e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idClipModel::IsLinked</definition>
        <argsstring>(void) const </argsstring>
        <name>IsLinked</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1afbf138b39bd67c3ec425c8480f439b0a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idClipModel::IsEnabled</definition>
        <argsstring>(void) const </argsstring>
        <name>IsEnabled</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1ae42113b881c43916ce65fd4616a44e8a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idClipModel::IsEqual</definition>
        <argsstring>(const idTraceModel &amp;trm) const </argsstring>
        <name>IsEqual</name>
        <param>
          <type>const <ref refid="classid_trace_model" kindref="compound">idTraceModel</ref> &amp;</type>
          <declname>trm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a1a9d3219a073cd52509277d3c6ad107e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>cmHandle_t</type>
        <definition>cmHandle_t idClipModel::Handle</definition>
        <argsstring>(void) const </argsstring>
        <name>Handle</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1ac401160494cde52529012de265a796ec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_trace_model" kindref="compound">idTraceModel</ref> *</type>
        <definition>const idTraceModel* idClipModel::GetTraceModel</definition>
        <argsstring>(void) const </argsstring>
        <name>GetTraceModel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a81f25df3ad43c7358d5130ac49d04aa4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::GetMassProperties</definition>
        <argsstring>(const float density, float &amp;mass, idVec3 &amp;centerOfMass, idMat3 &amp;inertiaTensor) const </argsstring>
        <name>GetMassProperties</name>
        <param>
          <type>const float</type>
          <declname>density</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>mass</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>centerOfMass</declname>
        </param>
        <param>
          <type><ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>inertiaTensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="102" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classid_clip_model_1a9d9a222e184fc7b40f13d0082c17ec4e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cmHandle_t</type>
        <definition>cmHandle_t idClipModel::CheckModel</definition>
        <argsstring>(const char *name)</argsstring>
        <name>CheckModel</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="104" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="604" bodyend="606"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a536cbccf82b301d7deb031542fc0d479" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::ClearTraceModelCache</definition>
        <argsstring>(void)</argsstring>
        <name>ClearTraceModelCache</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="105" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a2e0a237ba120739c9eb10c8084d606be" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idClipModel::TraceModelCacheSize</definition>
        <argsstring>(void)</argsstring>
        <name>TraceModelCacheSize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="106" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="91" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a1e26012031158e10a5aba2cc060e4964" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::SaveTraceModels</definition>
        <argsstring>(idSaveGame *savefile)</argsstring>
        <name>SaveTraceModels</name>
        <param>
          <type><ref refid="classid_save_game" kindref="compound">idSaveGame</ref> *</type>
          <declname>savefile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="108" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="159" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1aabcea5bfca3959b6c632f95ac278c849" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::RestoreTraceModels</definition>
        <argsstring>(idRestoreGame *savefile)</argsstring>
        <name>RestoreTraceModels</name>
        <param>
          <type><ref refid="classid_restore_game" kindref="compound">idRestoreGame</ref> *</type>
          <declname>savefile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="109" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="178" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a7eb2fa0d3f74b261abaaf0be5172a012" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cmHandle_t</type>
        <definition>static cmHandle_t idClipModel::CheckModel</definition>
        <argsstring>(const char *name)</argsstring>
        <name>CheckModel</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a7b933d228a37df6caf45fb77e3f13ada" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void idClipModel::ClearTraceModelCache</definition>
        <argsstring>(void)</argsstring>
        <name>ClearTraceModelCache</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1adaa82aa571f379fd185b8ba15ee2137f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int idClipModel::TraceModelCacheSize</definition>
        <argsstring>(void)</argsstring>
        <name>TraceModelCacheSize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1ae0e16cd5c547cf532bdde4163b9b3edd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void idClipModel::SaveTraceModels</definition>
        <argsstring>(idSaveGame *savefile)</argsstring>
        <name>SaveTraceModels</name>
        <param>
          <type><ref refid="classid_save_game" kindref="compound">idSaveGame</ref> *</type>
          <declname>savefile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a3f78c30afa230d56a3983ea9b2fa8ef9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void idClipModel::RestoreTraceModels</definition>
        <argsstring>(idRestoreGame *savefile)</argsstring>
        <name>RestoreTraceModels</name>
        <param>
          <type><ref refid="classid_restore_game" kindref="compound">idRestoreGame</ref> *</type>
          <declname>savefile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="109" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classid_clip_model_1a4adbfd1bd59328632569e6a30dd9123c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::Init</definition>
        <argsstring>(void)</argsstring>
        <name>Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="129" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="272" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a0958801851c197b4f2797dc75028efd4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::Link_r</definition>
        <argsstring>(struct clipSector_s *node)</argsstring>
        <name>Link_r</name>
        <param>
          <type>struct <ref refid="structclip_sector__s" kindref="compound">clipSector_s</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="130" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="513" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a4adbfd1bd59328632569e6a30dd9123c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::Init</definition>
        <argsstring>(void)</argsstring>
        <name>Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a0958801851c197b4f2797dc75028efd4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::Link_r</definition>
        <argsstring>(struct clipSector_s *node)</argsstring>
        <name>Link_r</name>
        <param>
          <type>struct <ref refid="structclip_sector__s" kindref="compound">clipSector_s</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="130" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classid_clip_model_1a025fc7568e24ed4a22e23a9516b75325" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idClipModel::AllocTraceModel</definition>
        <argsstring>(const idTraceModel &amp;trm)</argsstring>
        <name>AllocTraceModel</name>
        <param>
          <type>const <ref refid="classid_trace_model" kindref="compound">idTraceModel</ref> &amp;</type>
          <declname>trm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="132" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="100" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1ace3671af30277bc3f7f09a42af88579e" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idClipModel::FreeTraceModel</definition>
        <argsstring>(int traceModelIndex)</argsstring>
        <name>FreeTraceModel</name>
        <param>
          <type>int</type>
          <declname>traceModelIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="133" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="127" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a354179c8542523908fd37602b6201df8" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_trace_model" kindref="compound">idTraceModel</ref> *</type>
        <definition>idTraceModel * idClipModel::GetCachedTraceModel</definition>
        <argsstring>(int traceModelIndex)</argsstring>
        <name>GetCachedTraceModel</name>
        <param>
          <type>int</type>
          <declname>traceModelIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="134" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="140" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1a68a1772e43db500ce89ec7a2845509f6" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idClipModel::GetTraceModelHashKey</definition>
        <argsstring>(const idTraceModel &amp;trm)</argsstring>
        <name>GetTraceModelHashKey</name>
        <param>
          <type>const <ref refid="classid_trace_model" kindref="compound">idTraceModel</ref> &amp;</type>
          <declname>trm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="135" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.cpp" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1aec528c87ca0f9c12e9fbc3e216b6a7eb" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int idClipModel::AllocTraceModel</definition>
        <argsstring>(const idTraceModel &amp;trm)</argsstring>
        <name>AllocTraceModel</name>
        <param>
          <type>const <ref refid="classid_trace_model" kindref="compound">idTraceModel</ref> &amp;</type>
          <declname>trm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1acbd8c0684b248fcb4c60a8484b7ac862" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void idClipModel::FreeTraceModel</definition>
        <argsstring>(int traceModelIndex)</argsstring>
        <name>FreeTraceModel</name>
        <param>
          <type>int</type>
          <declname>traceModelIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1ae961efecc2c41d13ace1cd43d7e4caf5" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_trace_model" kindref="compound">idTraceModel</ref> *</type>
        <definition>static idTraceModel* idClipModel::GetCachedTraceModel</definition>
        <argsstring>(int traceModelIndex)</argsstring>
        <name>GetCachedTraceModel</name>
        <param>
          <type>int</type>
          <declname>traceModelIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_clip_model_1aa63399477c946569226a0097440af7da" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int idClipModel::GetTraceModelHashKey</definition>
        <argsstring>(const idTraceModel &amp;trm)</argsstring>
        <name>GetTraceModelHashKey</name>
        <param>
          <type>const <ref refid="classid_trace_model" kindref="compound">idTraceModel</ref> &amp;</type>
          <declname>trm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Clip.h" line="135" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" line="54" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Clip.h" bodystart="54" bodyend="136"/>
    <listofallmembers>
      <member refid="classid_clip_model_1a2b509dd79dcf23f877207840edf50873" prot="private" virt="non-virtual"><scope>idClipModel</scope><name>absBounds</name></member>
      <member refid="classid_clip_model_1a025fc7568e24ed4a22e23a9516b75325" prot="private" virt="non-virtual"><scope>idClipModel</scope><name>AllocTraceModel</name></member>
      <member refid="classid_clip_model_1aec528c87ca0f9c12e9fbc3e216b6a7eb" prot="private" virt="non-virtual"><scope>idClipModel</scope><name>AllocTraceModel</name></member>
      <member refid="classid_clip_model_1a08a45d0227fa04fad49596260b51a847" prot="private" virt="non-virtual"><scope>idClipModel</scope><name>axis</name></member>
      <member refid="classid_clip_model_1a0c887d865006a6ac2978829685e97950" prot="private" virt="non-virtual"><scope>idClipModel</scope><name>bounds</name></member>
      <member refid="classid_clip_model_1a9d9a222e184fc7b40f13d0082c17ec4e" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>CheckModel</name></member>
      <member refid="classid_clip_model_1a7eb2fa0d3f74b261abaaf0be5172a012" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>CheckModel</name></member>
      <member refid="classid_clip_model_1a536cbccf82b301d7deb031542fc0d479" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>ClearTraceModelCache</name></member>
      <member refid="classid_clip_model_1a7b933d228a37df6caf45fb77e3f13ada" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>ClearTraceModelCache</name></member>
      <member refid="classid_clip_model_1ab3ef08fd513168ff58b8fcd60d9f4632" prot="private" virt="non-virtual"><scope>idClipModel</scope><name>clipLinks</name></member>
      <member refid="classid_clip_model_1a2488432ef8a8ad806a55a2b1b26e5c92" prot="private" virt="non-virtual"><scope>idClipModel</scope><name>collisionModelHandle</name></member>
      <member refid="classid_clip_model_1acf7f7526c6800033fe33d5c454aba843" prot="private" virt="non-virtual"><scope>idClipModel</scope><name>contents</name></member>
      <member refid="classid_clip_model_1ad24af0e12af6b260f130dd33df35e72b" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>Disable</name></member>
      <member refid="classid_clip_model_1aa2a289f616a9fca7ce543efc046faff1" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>Disable</name></member>
      <member refid="classid_clip_model_1a946ce2c92249b76a9b6bda71dcd00334" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>Enable</name></member>
      <member refid="classid_clip_model_1aa03c5b11a837640d4b810392a68ab25c" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>Enable</name></member>
      <member refid="classid_clip_model_1ae4724c9a92577861153d4d8e68051234" prot="private" virt="non-virtual"><scope>idClipModel</scope><name>enabled</name></member>
      <member refid="classid_clip_model_1ab642e7bf852850b1b1c8eb99d88725ec" prot="private" virt="non-virtual"><scope>idClipModel</scope><name>entity</name></member>
      <member refid="classid_clip_model_1ace3671af30277bc3f7f09a42af88579e" prot="private" virt="non-virtual"><scope>idClipModel</scope><name>FreeTraceModel</name></member>
      <member refid="classid_clip_model_1acbd8c0684b248fcb4c60a8484b7ac862" prot="private" virt="non-virtual"><scope>idClipModel</scope><name>FreeTraceModel</name></member>
      <member refid="classid_clip_model_1acfc3c90c3be85125bd3eb96225369d1e" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>GetAbsBounds</name></member>
      <member refid="classid_clip_model_1ab402902ea97948c9892aa97d2b667b8e" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>GetAbsBounds</name></member>
      <member refid="classid_clip_model_1ab3d52289f1b7f84e92760df628bad2f7" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>GetAxis</name></member>
      <member refid="classid_clip_model_1ac37c1a0676231a0fb1c57f69985428fe" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>GetAxis</name></member>
      <member refid="classid_clip_model_1ad684bed72a8b2dcc275c5dcc0ba4bf29" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>GetBounds</name></member>
      <member refid="classid_clip_model_1ac9fff8ecc29c0320cbed9e694639272d" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>GetBounds</name></member>
      <member refid="classid_clip_model_1a354179c8542523908fd37602b6201df8" prot="private" virt="non-virtual"><scope>idClipModel</scope><name>GetCachedTraceModel</name></member>
      <member refid="classid_clip_model_1ae961efecc2c41d13ace1cd43d7e4caf5" prot="private" virt="non-virtual"><scope>idClipModel</scope><name>GetCachedTraceModel</name></member>
      <member refid="classid_clip_model_1a6909c91191da81d6753764e903b217f8" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>GetContents</name></member>
      <member refid="classid_clip_model_1a3f6b47b2255383c925d933b9081d89ea" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>GetContents</name></member>
      <member refid="classid_clip_model_1a259551523b7cdf88f9c6cb59e1b281ca" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>GetEntity</name></member>
      <member refid="classid_clip_model_1af3d7c7f07b872f5077c7d68fcfdeb4df" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>GetEntity</name></member>
      <member refid="classid_clip_model_1ab20d04d7f4e208ae415b9b29fd2fe05f" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>GetId</name></member>
      <member refid="classid_clip_model_1ad6b571b6816d72e40f075208305b854a" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>GetId</name></member>
      <member refid="classid_clip_model_1a81f25df3ad43c7358d5130ac49d04aa4" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>GetMassProperties</name></member>
      <member refid="classid_clip_model_1a81f25df3ad43c7358d5130ac49d04aa4" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>GetMassProperties</name></member>
      <member refid="classid_clip_model_1a3d528daeae477372f2ac1c9e8086c85a" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>GetMaterial</name></member>
      <member refid="classid_clip_model_1a7ab13edb5e0a2a2872a909f05226d51e" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>GetMaterial</name></member>
      <member refid="classid_clip_model_1a97860a64e941f1b09dafb6e92de63ef5" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>GetOrigin</name></member>
      <member refid="classid_clip_model_1afe2e9c874c936f8b6621907853630a29" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>GetOrigin</name></member>
      <member refid="classid_clip_model_1a8908fb6fe618021a137475e9456dca74" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>GetOwner</name></member>
      <member refid="classid_clip_model_1ac68e54ee3e238563c27fa3c5714203ab" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>GetOwner</name></member>
      <member refid="classid_clip_model_1aa05bbe5f6eaf0c190beccd2307b45871" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>GetTraceModel</name></member>
      <member refid="classid_clip_model_1ac401160494cde52529012de265a796ec" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>GetTraceModel</name></member>
      <member refid="classid_clip_model_1a68a1772e43db500ce89ec7a2845509f6" prot="private" virt="non-virtual"><scope>idClipModel</scope><name>GetTraceModelHashKey</name></member>
      <member refid="classid_clip_model_1aa63399477c946569226a0097440af7da" prot="private" virt="non-virtual"><scope>idClipModel</scope><name>GetTraceModelHashKey</name></member>
      <member refid="classid_clip_model_1a1a9d3219a073cd52509277d3c6ad107e" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>Handle</name></member>
      <member refid="classid_clip_model_1a1a9d3219a073cd52509277d3c6ad107e" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>Handle</name></member>
      <member refid="classid_clip_model_1ac082f39d79f1ed3f9d4758c9a11cb8a0" prot="private" virt="non-virtual"><scope>idClipModel</scope><name>id</name></member>
      <member refid="classid_clip_model_1ae897e8b2d56a0d06c2ed0e246c9f797b" prot="private" virt="non-virtual"><scope>idClipModel</scope><name>idClip</name></member>
      <member refid="classid_clip_model_1ad2b4326340dfe885466ffc88a545177b" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>idClipModel</name></member>
      <member refid="classid_clip_model_1a3e79c7ee67c32fd2e6b342c50cbb9c6a" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>idClipModel</name></member>
      <member refid="classid_clip_model_1a6f866f316a94d78c502c218a0b6c7668" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>idClipModel</name></member>
      <member refid="classid_clip_model_1acc7254018afd859aac9710e5802a9f95" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>idClipModel</name></member>
      <member refid="classid_clip_model_1a5b43769cd2a3f4b328040296d4e557cc" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>idClipModel</name></member>
      <member refid="classid_clip_model_1ad2b4326340dfe885466ffc88a545177b" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>idClipModel</name></member>
      <member refid="classid_clip_model_1a3e79c7ee67c32fd2e6b342c50cbb9c6a" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>idClipModel</name></member>
      <member refid="classid_clip_model_1a6f866f316a94d78c502c218a0b6c7668" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>idClipModel</name></member>
      <member refid="classid_clip_model_1acc7254018afd859aac9710e5802a9f95" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>idClipModel</name></member>
      <member refid="classid_clip_model_1a5b43769cd2a3f4b328040296d4e557cc" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>idClipModel</name></member>
      <member refid="classid_clip_model_1a4adbfd1bd59328632569e6a30dd9123c" prot="private" virt="non-virtual"><scope>idClipModel</scope><name>Init</name></member>
      <member refid="classid_clip_model_1a4adbfd1bd59328632569e6a30dd9123c" prot="private" virt="non-virtual"><scope>idClipModel</scope><name>Init</name></member>
      <member refid="classid_clip_model_1a5f2c7aa59bbde4c81912203a640cba37" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>IsEnabled</name></member>
      <member refid="classid_clip_model_1afbf138b39bd67c3ec425c8480f439b0a" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>IsEnabled</name></member>
      <member refid="classid_clip_model_1a0d3cc258060b9ec0278ec7d8b625f386" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>IsEqual</name></member>
      <member refid="classid_clip_model_1ae42113b881c43916ce65fd4616a44e8a" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>IsEqual</name></member>
      <member refid="classid_clip_model_1aabf0d15810782f2b3118fa727725a3b3" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>IsLinked</name></member>
      <member refid="classid_clip_model_1a27ee3906a16a16419a7bf3f34c3a963e" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>IsLinked</name></member>
      <member refid="classid_clip_model_1ad243ced8229acceb6a0818926167493e" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>IsRenderModel</name></member>
      <member refid="classid_clip_model_1ac6db9d180e85e40a71f4955726a6b850" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>IsRenderModel</name></member>
      <member refid="classid_clip_model_1ac91ba536476afd3ba517d8b6ae79f5f1" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>IsTraceModel</name></member>
      <member refid="classid_clip_model_1a403404423d47efad3f6a3045cbb78fc7" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>IsTraceModel</name></member>
      <member refid="classid_clip_model_1a05999a47cff6808a3ac10cdeb9ab5f6a" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>Link</name></member>
      <member refid="classid_clip_model_1a1c94eff86ae45faa2eb24f6d481238ca" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>Link</name></member>
      <member refid="classid_clip_model_1a05999a47cff6808a3ac10cdeb9ab5f6a" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>Link</name></member>
      <member refid="classid_clip_model_1a1c94eff86ae45faa2eb24f6d481238ca" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>Link</name></member>
      <member refid="classid_clip_model_1a0958801851c197b4f2797dc75028efd4" prot="private" virt="non-virtual"><scope>idClipModel</scope><name>Link_r</name></member>
      <member refid="classid_clip_model_1a0958801851c197b4f2797dc75028efd4" prot="private" virt="non-virtual"><scope>idClipModel</scope><name>Link_r</name></member>
      <member refid="classid_clip_model_1a8d0101abb5c5dba246a2205b58611c35" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>LoadModel</name></member>
      <member refid="classid_clip_model_1a2ebeee87d1fa6dcfc185bce29d436af7" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>LoadModel</name></member>
      <member refid="classid_clip_model_1a11553c50a9f1dab9618344d1922103dd" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>LoadModel</name></member>
      <member refid="classid_clip_model_1a8d0101abb5c5dba246a2205b58611c35" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>LoadModel</name></member>
      <member refid="classid_clip_model_1a2ebeee87d1fa6dcfc185bce29d436af7" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>LoadModel</name></member>
      <member refid="classid_clip_model_1a11553c50a9f1dab9618344d1922103dd" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>LoadModel</name></member>
      <member refid="classid_clip_model_1acf43d5679d63889f75ba0070bcb5c611" prot="private" virt="non-virtual"><scope>idClipModel</scope><name>material</name></member>
      <member refid="classid_clip_model_1a7ee60b1197ff3f9400edd40a9a588626" prot="private" virt="non-virtual"><scope>idClipModel</scope><name>origin</name></member>
      <member refid="classid_clip_model_1a8a95a02c3dc7512ae23510b4f4c8c887" prot="private" virt="non-virtual"><scope>idClipModel</scope><name>owner</name></member>
      <member refid="classid_clip_model_1a51a792ff940f927890a13cdedfff0ca8" prot="private" virt="non-virtual"><scope>idClipModel</scope><name>renderModelHandle</name></member>
      <member refid="classid_clip_model_1a4dde2e25ddddd842d5167aacc95671a1" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>Restore</name></member>
      <member refid="classid_clip_model_1a4dde2e25ddddd842d5167aacc95671a1" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>Restore</name></member>
      <member refid="classid_clip_model_1aabcea5bfca3959b6c632f95ac278c849" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>RestoreTraceModels</name></member>
      <member refid="classid_clip_model_1a3f78c30afa230d56a3983ea9b2fa8ef9" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>RestoreTraceModels</name></member>
      <member refid="classid_clip_model_1a38028f31e3ae98e2c3e25789e73c1f49" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>Rotate</name></member>
      <member refid="classid_clip_model_1a9e47e70fa48409e3bfafe889f45459cd" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>Rotate</name></member>
      <member refid="classid_clip_model_1a314aeb4a321d91f969ae4925eebf0ca6" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>Save</name></member>
      <member refid="classid_clip_model_1a314aeb4a321d91f969ae4925eebf0ca6" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>Save</name></member>
      <member refid="classid_clip_model_1a1e26012031158e10a5aba2cc060e4964" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>SaveTraceModels</name></member>
      <member refid="classid_clip_model_1ae0e16cd5c547cf532bdde4163b9b3edd" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>SaveTraceModels</name></member>
      <member refid="classid_clip_model_1a9da2e81bfbbf6eee724c1e1bb11d1810" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>SetContents</name></member>
      <member refid="classid_clip_model_1aa1c5bda7b26c9c9534852539471a13c9" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>SetContents</name></member>
      <member refid="classid_clip_model_1a24d1bd5b83bea355434e002c6dead920" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>SetEntity</name></member>
      <member refid="classid_clip_model_1a2d401c74982cdd156d150587b3e4951e" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>SetEntity</name></member>
      <member refid="classid_clip_model_1a5938388e85c44c4a29d2995acce0316b" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>SetId</name></member>
      <member refid="classid_clip_model_1aea349c77e77309db8ac05cca4ef6e4a2" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>SetId</name></member>
      <member refid="classid_clip_model_1ab7454ff0aa00f3ddac23465b8b8b2499" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>SetMaterial</name></member>
      <member refid="classid_clip_model_1a807f46bf1ce42f98be5aac883d61fbc6" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>SetMaterial</name></member>
      <member refid="classid_clip_model_1a729436e247948eec7044574610556128" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>SetOwner</name></member>
      <member refid="classid_clip_model_1ae9d261ed2c551c6c1e48325f00ffaf01" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>SetOwner</name></member>
      <member refid="classid_clip_model_1ad20f12138243c32e26755d619fcbfa5a" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>SetPosition</name></member>
      <member refid="classid_clip_model_1ad20f12138243c32e26755d619fcbfa5a" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>SetPosition</name></member>
      <member refid="classid_clip_model_1a32ba826c05f7a64f2dbc2c76e009160c" prot="private" virt="non-virtual"><scope>idClipModel</scope><name>touchCount</name></member>
      <member refid="classid_clip_model_1a2e0a237ba120739c9eb10c8084d606be" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>TraceModelCacheSize</name></member>
      <member refid="classid_clip_model_1adaa82aa571f379fd185b8ba15ee2137f" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>TraceModelCacheSize</name></member>
      <member refid="classid_clip_model_1a10208d452b96743d5e4efea06b821bd1" prot="private" virt="non-virtual"><scope>idClipModel</scope><name>traceModelIndex</name></member>
      <member refid="classid_clip_model_1ac533faa4b7abdf81520c772f91b63199" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>Translate</name></member>
      <member refid="classid_clip_model_1a51579124b87769e2431d359d7760c563" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>Translate</name></member>
      <member refid="classid_clip_model_1a17bcdcaf1df38f8b0c2cb13061dab3a9" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>Unlink</name></member>
      <member refid="classid_clip_model_1a17bcdcaf1df38f8b0c2cb13061dab3a9" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>Unlink</name></member>
      <member refid="classid_clip_model_1ae96ce54d7cd2612a1930a0f3aee21aa1" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>~idClipModel</name></member>
      <member refid="classid_clip_model_1ae96ce54d7cd2612a1930a0f3aee21aa1" prot="public" virt="non-virtual"><scope>idClipModel</scope><name>~idClipModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
