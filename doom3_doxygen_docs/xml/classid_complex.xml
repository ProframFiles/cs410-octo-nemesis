<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_complex" kind="class" prot="public">
    <compoundname>idComplex</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classid_complex_1af18e03b8b1317661086a498d56655547" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float idComplex::r</definition>
        <argsstring></argsstring>
        <name>r</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="42" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_complex_1a6fd92a170e17484ea811b00f3d8f5647" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float idComplex::i</definition>
        <argsstring></argsstring>
        <name>i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="43" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_complex_1a82ca6829dac26dd4734dfbf15a048b14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idComplex::idComplex</definition>
        <argsstring>(void)</argsstring>
        <name>idComplex</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="45" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="101" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1a60e48d55341e14211aee3b5a90c41b37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idComplex::idComplex</definition>
        <argsstring>(const float r, const float i)</argsstring>
        <name>idComplex</name>
        <param>
          <type>const float</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="46" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="104" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1ad24ddacab67e63b113e61847009ccae4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idComplex::Set</definition>
        <argsstring>(const float r, const float i)</argsstring>
        <name>Set</name>
        <param>
          <type>const float</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="48" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1a76b4c178a4db4065377869512ac29699" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idComplex::Zero</definition>
        <argsstring>(void)</argsstring>
        <name>Zero</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="49" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="114" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1a013a7c2323eec132fae25c25d1112238" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>ID_INLINE float idComplex::operator[]</definition>
        <argsstring>(int index) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="51" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1a1fc70d9601cc9fce856392c955a303fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float &amp;</type>
        <definition>ID_INLINE float &amp; idComplex::operator[]</definition>
        <argsstring>(int index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="52" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="123" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1a67c9d4d41ba567bd191a9b5d3eebe1db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_complex" kindref="compound">idComplex</ref></type>
        <definition>ID_INLINE idComplex idComplex::operator-</definition>
        <argsstring>() const </argsstring>
        <name>operator-</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="54" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="128" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1aaccc332d27ffb70381871d975ddc4f4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_complex" kindref="compound">idComplex</ref> &amp;</type>
        <definition>ID_INLINE idComplex &amp; idComplex::operator=</definition>
        <argsstring>(const idComplex &amp;a)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classid_complex" kindref="compound">idComplex</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="55" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="132" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1a31e4d252749352aba52af5392f111522" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_complex" kindref="compound">idComplex</ref></type>
        <definition>ID_INLINE idComplex idComplex::operator*</definition>
        <argsstring>(const idComplex &amp;a) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classid_complex" kindref="compound">idComplex</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="57" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="138" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1af0bc798a7e6b7845b19e78c88f9a1603" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_complex" kindref="compound">idComplex</ref></type>
        <definition>ID_INLINE idComplex idComplex::operator/</definition>
        <argsstring>(const idComplex &amp;a) const </argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="classid_complex" kindref="compound">idComplex</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="58" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="142" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1a8890dd0f8eb0b2acc9ae8ffc6474fe83" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_complex" kindref="compound">idComplex</ref></type>
        <definition>ID_INLINE idComplex idComplex::operator+</definition>
        <argsstring>(const idComplex &amp;a) const </argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classid_complex" kindref="compound">idComplex</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="59" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="155" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1ac27ffa4eacd6943e40d623c7512d88c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_complex" kindref="compound">idComplex</ref></type>
        <definition>ID_INLINE idComplex idComplex::operator-</definition>
        <argsstring>(const idComplex &amp;a) const </argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classid_complex" kindref="compound">idComplex</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="60" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1a803ae2d76b27319079fbc636b88697fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_complex" kindref="compound">idComplex</ref> &amp;</type>
        <definition>ID_INLINE idComplex &amp; idComplex::operator*=</definition>
        <argsstring>(const idComplex &amp;a)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classid_complex" kindref="compound">idComplex</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="62" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="163" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1ab68a24b717fb590eebf01285d3012334" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_complex" kindref="compound">idComplex</ref> &amp;</type>
        <definition>ID_INLINE idComplex &amp; idComplex::operator/=</definition>
        <argsstring>(const idComplex &amp;a)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const <ref refid="classid_complex" kindref="compound">idComplex</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="63" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="168" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1a9301967ff3aa1681c3f416c262c01dfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_complex" kindref="compound">idComplex</ref> &amp;</type>
        <definition>ID_INLINE idComplex &amp; idComplex::operator+=</definition>
        <argsstring>(const idComplex &amp;a)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classid_complex" kindref="compound">idComplex</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="64" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="182" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1a1eac4a8909fddbdad7b7f16f606646f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_complex" kindref="compound">idComplex</ref> &amp;</type>
        <definition>ID_INLINE idComplex &amp; idComplex::operator-=</definition>
        <argsstring>(const idComplex &amp;a)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classid_complex" kindref="compound">idComplex</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="65" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="188" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1ab73f5bd3f1f7100e2f59b4da82171850" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_complex" kindref="compound">idComplex</ref></type>
        <definition>ID_INLINE idComplex idComplex::operator*</definition>
        <argsstring>(const float a) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const float</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="67" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="194" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1a0618983562057cdf0039dbc6b0826d0a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_complex" kindref="compound">idComplex</ref></type>
        <definition>ID_INLINE idComplex idComplex::operator/</definition>
        <argsstring>(const float a) const </argsstring>
        <name>operator/</name>
        <param>
          <type>const float</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="68" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="198" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1acd3d92280bd3990bc76287bd20cd6a4c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_complex" kindref="compound">idComplex</ref></type>
        <definition>ID_INLINE idComplex idComplex::operator+</definition>
        <argsstring>(const float a) const </argsstring>
        <name>operator+</name>
        <param>
          <type>const float</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="69" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="203" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1a10ebe6753787fb7ebfc2ff3d8dd3b25b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_complex" kindref="compound">idComplex</ref></type>
        <definition>ID_INLINE idComplex idComplex::operator-</definition>
        <argsstring>(const float a) const </argsstring>
        <name>operator-</name>
        <param>
          <type>const float</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="70" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="207" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1ac985abdaebd33e6df0a379fe08f60a2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_complex" kindref="compound">idComplex</ref> &amp;</type>
        <definition>ID_INLINE idComplex &amp; idComplex::operator*=</definition>
        <argsstring>(const float a)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const float</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="72" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="211" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1ad2550ac8d8025516488e7695c223d4d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_complex" kindref="compound">idComplex</ref> &amp;</type>
        <definition>ID_INLINE idComplex &amp; idComplex::operator/=</definition>
        <argsstring>(const float a)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const float</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="73" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="217" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1a90a31a312b9b9ed137107f6de73bcb55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_complex" kindref="compound">idComplex</ref> &amp;</type>
        <definition>ID_INLINE idComplex &amp; idComplex::operator+=</definition>
        <argsstring>(const float a)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const float</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="74" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="224" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1afa8f0179a8d21d8511b4cade3a7f3a3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_complex" kindref="compound">idComplex</ref> &amp;</type>
        <definition>ID_INLINE idComplex &amp; idComplex::operator-=</definition>
        <argsstring>(const float a)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const float</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="75" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="229" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1a2a57b7c62cf1b8ec604993819366b179" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idComplex::Compare</definition>
        <argsstring>(const idComplex &amp;a) const </argsstring>
        <name>Compare</name>
        <param>
          <type>const <ref refid="classid_complex" kindref="compound">idComplex</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="82" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="314" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1acec992e7186ab97a6cf6043aa9216f3d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idComplex::Compare</definition>
        <argsstring>(const idComplex &amp;a, const float epsilon) const </argsstring>
        <name>Compare</name>
        <param>
          <type>const <ref refid="classid_complex" kindref="compound">idComplex</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="83" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="318" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1a930f5de248759ba1819d0ea7dfa1965b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idComplex::operator==</definition>
        <argsstring>(const idComplex &amp;a) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classid_complex" kindref="compound">idComplex</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="84" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="328" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1a97c388c259397c620468406727501d09" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idComplex::operator!=</definition>
        <argsstring>(const idComplex &amp;a) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classid_complex" kindref="compound">idComplex</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="85" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="332" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1a3dbef1314930b588c72e42a1dd72606c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_complex" kindref="compound">idComplex</ref></type>
        <definition>ID_INLINE idComplex idComplex::Reciprocal</definition>
        <argsstring>(void) const </argsstring>
        <name>Reciprocal</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="87" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="259" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1a2115fc64087dc0e9a9338977c625c044" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_complex" kindref="compound">idComplex</ref></type>
        <definition>ID_INLINE idComplex idComplex::Sqrt</definition>
        <argsstring>(void) const </argsstring>
        <name>Sqrt</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="88" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="272" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1a229ab5fd68bfc3063292890e278d54c8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>ID_INLINE float idComplex::Abs</definition>
        <argsstring>(void) const </argsstring>
        <name>Abs</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="89" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="297" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1a240ca8f7057640be91c46037f95d8f34" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idComplex::GetDimension</definition>
        <argsstring>(void) const </argsstring>
        <name>GetDimension</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="91" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="336" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1a20977c7ce1146d567ba7a4beca20e541" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float *</type>
        <definition>ID_INLINE const float * idComplex::ToFloatPtr</definition>
        <argsstring>(void) const </argsstring>
        <name>ToFloatPtr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="93" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="340" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1af0aa7a7798f882b8c39ec6747fd8836c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float *</type>
        <definition>ID_INLINE float * idComplex::ToFloatPtr</definition>
        <argsstring>(void)</argsstring>
        <name>ToFloatPtr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="94" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="344" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="classid_complex_1a036c7b83d8d3ee8e45f57124cba9d3a0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * idComplex::ToString</definition>
        <argsstring>(int precision=2) const </argsstring>
        <name>ToString</name>
        <param>
          <type>int</type>
          <declname>precision</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="95" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.cpp" bodystart="39" bodyend="41"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classid_complex_1a65f68ab906efc1c08972a2b3af13ac78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classid_complex" kindref="compound">idComplex</ref></type>
        <definition>idComplex operator*</definition>
        <argsstring>(const float a, const idComplex &amp;b)</argsstring>
        <name>operator*</name>
        <param>
          <type>const float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classid_complex" kindref="compound">idComplex</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="77" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="234" bodyend="236"/>
      </memberdef>
      <memberdef kind="friend" id="classid_complex_1ac5a913aaa35446d32fde740bb9bce42e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classid_complex" kindref="compound">idComplex</ref></type>
        <definition>idComplex operator/</definition>
        <argsstring>(const float a, const idComplex &amp;b)</argsstring>
        <name>operator/</name>
        <param>
          <type>const float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classid_complex" kindref="compound">idComplex</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="78" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="238" bodyend="249"/>
      </memberdef>
      <memberdef kind="friend" id="classid_complex_1a118d0b8f71834f3427f051bfb32b397f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classid_complex" kindref="compound">idComplex</ref></type>
        <definition>idComplex operator+</definition>
        <argsstring>(const float a, const idComplex &amp;b)</argsstring>
        <name>operator+</name>
        <param>
          <type>const float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classid_complex" kindref="compound">idComplex</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="79" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="251" bodyend="253"/>
      </memberdef>
      <memberdef kind="friend" id="classid_complex_1acd990fc90f2d2af95e92bad23df7c3a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classid_complex" kindref="compound">idComplex</ref></type>
        <definition>idComplex operator-</definition>
        <argsstring>(const float a, const idComplex &amp;b)</argsstring>
        <name>operator-</name>
        <param>
          <type>const float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classid_complex" kindref="compound">idComplex</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="80" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="255" bodyend="257"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" line="40" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Complex.h" bodystart="40" bodyend="96"/>
    <listofallmembers>
      <member refid="classid_complex_1a229ab5fd68bfc3063292890e278d54c8" prot="public" virt="non-virtual"><scope>idComplex</scope><name>Abs</name></member>
      <member refid="classid_complex_1a2a57b7c62cf1b8ec604993819366b179" prot="public" virt="non-virtual"><scope>idComplex</scope><name>Compare</name></member>
      <member refid="classid_complex_1acec992e7186ab97a6cf6043aa9216f3d" prot="public" virt="non-virtual"><scope>idComplex</scope><name>Compare</name></member>
      <member refid="classid_complex_1a240ca8f7057640be91c46037f95d8f34" prot="public" virt="non-virtual"><scope>idComplex</scope><name>GetDimension</name></member>
      <member refid="classid_complex_1a6fd92a170e17484ea811b00f3d8f5647" prot="public" virt="non-virtual"><scope>idComplex</scope><name>i</name></member>
      <member refid="classid_complex_1a82ca6829dac26dd4734dfbf15a048b14" prot="public" virt="non-virtual"><scope>idComplex</scope><name>idComplex</name></member>
      <member refid="classid_complex_1a60e48d55341e14211aee3b5a90c41b37" prot="public" virt="non-virtual"><scope>idComplex</scope><name>idComplex</name></member>
      <member refid="classid_complex_1a97c388c259397c620468406727501d09" prot="public" virt="non-virtual"><scope>idComplex</scope><name>operator!=</name></member>
      <member refid="classid_complex_1a31e4d252749352aba52af5392f111522" prot="public" virt="non-virtual"><scope>idComplex</scope><name>operator*</name></member>
      <member refid="classid_complex_1ab73f5bd3f1f7100e2f59b4da82171850" prot="public" virt="non-virtual"><scope>idComplex</scope><name>operator*</name></member>
      <member refid="classid_complex_1a65f68ab906efc1c08972a2b3af13ac78" prot="public" virt="non-virtual"><scope>idComplex</scope><name>operator*</name></member>
      <member refid="classid_complex_1a803ae2d76b27319079fbc636b88697fb" prot="public" virt="non-virtual"><scope>idComplex</scope><name>operator*=</name></member>
      <member refid="classid_complex_1ac985abdaebd33e6df0a379fe08f60a2f" prot="public" virt="non-virtual"><scope>idComplex</scope><name>operator*=</name></member>
      <member refid="classid_complex_1a8890dd0f8eb0b2acc9ae8ffc6474fe83" prot="public" virt="non-virtual"><scope>idComplex</scope><name>operator+</name></member>
      <member refid="classid_complex_1acd3d92280bd3990bc76287bd20cd6a4c" prot="public" virt="non-virtual"><scope>idComplex</scope><name>operator+</name></member>
      <member refid="classid_complex_1a118d0b8f71834f3427f051bfb32b397f" prot="public" virt="non-virtual"><scope>idComplex</scope><name>operator+</name></member>
      <member refid="classid_complex_1a9301967ff3aa1681c3f416c262c01dfa" prot="public" virt="non-virtual"><scope>idComplex</scope><name>operator+=</name></member>
      <member refid="classid_complex_1a90a31a312b9b9ed137107f6de73bcb55" prot="public" virt="non-virtual"><scope>idComplex</scope><name>operator+=</name></member>
      <member refid="classid_complex_1a67c9d4d41ba567bd191a9b5d3eebe1db" prot="public" virt="non-virtual"><scope>idComplex</scope><name>operator-</name></member>
      <member refid="classid_complex_1ac27ffa4eacd6943e40d623c7512d88c9" prot="public" virt="non-virtual"><scope>idComplex</scope><name>operator-</name></member>
      <member refid="classid_complex_1a10ebe6753787fb7ebfc2ff3d8dd3b25b" prot="public" virt="non-virtual"><scope>idComplex</scope><name>operator-</name></member>
      <member refid="classid_complex_1acd990fc90f2d2af95e92bad23df7c3a7" prot="public" virt="non-virtual"><scope>idComplex</scope><name>operator-</name></member>
      <member refid="classid_complex_1a1eac4a8909fddbdad7b7f16f606646f0" prot="public" virt="non-virtual"><scope>idComplex</scope><name>operator-=</name></member>
      <member refid="classid_complex_1afa8f0179a8d21d8511b4cade3a7f3a3d" prot="public" virt="non-virtual"><scope>idComplex</scope><name>operator-=</name></member>
      <member refid="classid_complex_1af0bc798a7e6b7845b19e78c88f9a1603" prot="public" virt="non-virtual"><scope>idComplex</scope><name>operator/</name></member>
      <member refid="classid_complex_1a0618983562057cdf0039dbc6b0826d0a" prot="public" virt="non-virtual"><scope>idComplex</scope><name>operator/</name></member>
      <member refid="classid_complex_1ac5a913aaa35446d32fde740bb9bce42e" prot="public" virt="non-virtual"><scope>idComplex</scope><name>operator/</name></member>
      <member refid="classid_complex_1ab68a24b717fb590eebf01285d3012334" prot="public" virt="non-virtual"><scope>idComplex</scope><name>operator/=</name></member>
      <member refid="classid_complex_1ad2550ac8d8025516488e7695c223d4d3" prot="public" virt="non-virtual"><scope>idComplex</scope><name>operator/=</name></member>
      <member refid="classid_complex_1aaccc332d27ffb70381871d975ddc4f4a" prot="public" virt="non-virtual"><scope>idComplex</scope><name>operator=</name></member>
      <member refid="classid_complex_1a930f5de248759ba1819d0ea7dfa1965b" prot="public" virt="non-virtual"><scope>idComplex</scope><name>operator==</name></member>
      <member refid="classid_complex_1a013a7c2323eec132fae25c25d1112238" prot="public" virt="non-virtual"><scope>idComplex</scope><name>operator[]</name></member>
      <member refid="classid_complex_1a1fc70d9601cc9fce856392c955a303fb" prot="public" virt="non-virtual"><scope>idComplex</scope><name>operator[]</name></member>
      <member refid="classid_complex_1af18e03b8b1317661086a498d56655547" prot="public" virt="non-virtual"><scope>idComplex</scope><name>r</name></member>
      <member refid="classid_complex_1a3dbef1314930b588c72e42a1dd72606c" prot="public" virt="non-virtual"><scope>idComplex</scope><name>Reciprocal</name></member>
      <member refid="classid_complex_1ad24ddacab67e63b113e61847009ccae4" prot="public" virt="non-virtual"><scope>idComplex</scope><name>Set</name></member>
      <member refid="classid_complex_1a2115fc64087dc0e9a9338977c625c044" prot="public" virt="non-virtual"><scope>idComplex</scope><name>Sqrt</name></member>
      <member refid="classid_complex_1a20977c7ce1146d567ba7a4beca20e541" prot="public" virt="non-virtual"><scope>idComplex</scope><name>ToFloatPtr</name></member>
      <member refid="classid_complex_1af0aa7a7798f882b8c39ec6747fd8836c" prot="public" virt="non-virtual"><scope>idComplex</scope><name>ToFloatPtr</name></member>
      <member refid="classid_complex_1a036c7b83d8d3ee8e45f57124cba9d3a0" prot="public" virt="non-virtual"><scope>idComplex</scope><name>ToString</name></member>
      <member refid="classid_complex_1a76b4c178a4db4065377869512ac29699" prot="public" virt="non-virtual"><scope>idComplex</scope><name>Zero</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
