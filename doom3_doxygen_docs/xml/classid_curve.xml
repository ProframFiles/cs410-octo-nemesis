<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_curve" kind="class" prot="public">
    <compoundname>idCurve</compoundname>
    <derivedcompoundref refid="classid_curve___bezier" prot="public" virt="non-virtual">idCurve_Bezier&lt; type &gt;</derivedcompoundref>
    <derivedcompoundref refid="classid_curve___cubic_bezier" prot="public" virt="non-virtual">idCurve_CubicBezier&lt; type &gt;</derivedcompoundref>
    <derivedcompoundref refid="classid_curve___quadratic_bezier" prot="public" virt="non-virtual">idCurve_QuadraticBezier&lt; type &gt;</derivedcompoundref>
    <derivedcompoundref refid="classid_curve___spline" prot="public" virt="non-virtual">idCurve_Spline&lt; type &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>type</declname>
        <defname>type</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classid_curve_1ae2307d17b255ba55c079ae83839b64f9" prot="protected" static="no" mutable="no">
        <type><ref refid="classid_list" kindref="compound">idList</ref>&lt; float &gt;</type>
        <definition>idList&lt;float&gt; idCurve&lt; type &gt;::times</definition>
        <argsstring></argsstring>
        <name>times</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="73" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_curve_1a16fa11caf80348bef3b3dc9cf08172c6" prot="protected" static="no" mutable="no">
        <type><ref refid="classid_list" kindref="compound">idList</ref>&lt; type &gt;</type>
        <definition>idList&lt;type&gt; idCurve&lt; type &gt;::values</definition>
        <argsstring></argsstring>
        <name>values</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="74" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_curve_1a0d5b5357959a7f25f448ffdaa53fa499" prot="protected" static="no" mutable="yes">
        <type>int</type>
        <definition>int idCurve&lt; type &gt;::currentIndex</definition>
        <argsstring></argsstring>
        <name>currentIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="76" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_curve_1ab03198a2cc7a1ccb95e05949e6c60b78" prot="protected" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool idCurve&lt; type &gt;::changed</definition>
        <argsstring></argsstring>
        <name>changed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="77" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_curve_1a28f49a2868235aba0dc599c26844296e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idCurve&lt; type &gt;::idCurve</definition>
        <argsstring>(void)</argsstring>
        <name>idCurve</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="43" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classid_curve_1ad08104f2606e32f1700238fcb22b3a6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>ID_INLINE idCurve&lt; type &gt;::~idCurve</definition>
        <argsstring>(void)</argsstring>
        <name>~idCurve</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="44" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="104" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classid_curve_1aa07da2faaa24638e1038ad71da50b3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>ID_INLINE int idCurve&lt; type &gt;::AddValue</definition>
        <argsstring>(const float time, const type &amp;value)</argsstring>
        <name>AddValue</name>
        <reimplementedby refid="classid_curve___kochanek_bartels_spline_1ae1bec20b5970cb96f4fdc7c0fb7ea4e5">AddValue</reimplementedby>
        <reimplementedby refid="classid_curve___n_u_r_b_s_1a18f9db091a54264f8b6db39a04ac5f5a">AddValue</reimplementedby>
        <reimplementedby refid="classid_curve___n_u_r_b_s_1a18f9db091a54264f8b6db39a04ac5f5a">AddValue</reimplementedby>
        <param>
          <type>const float</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const type &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="46" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="116" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classid_curve_1afb2e4414934a19803141fa6f45e7d608" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idCurve&lt; type &gt;::RemoveIndex</definition>
        <argsstring>(const int index)</argsstring>
        <name>RemoveIndex</name>
        <reimplementedby refid="classid_curve___kochanek_bartels_spline_1a005e75110b79581cc5db3c2d7d7e3dd5">RemoveIndex</reimplementedby>
        <reimplementedby refid="classid_curve___n_u_r_b_s_1af6a5fe4aad8fe765df084b7540ec7de2">RemoveIndex</reimplementedby>
        <reimplementedby refid="classid_curve___n_u_r_b_s_1af6a5fe4aad8fe765df084b7540ec7de2">RemoveIndex</reimplementedby>
        <param>
          <type>const int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="47" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classid_curve_1a61b30b9add6778410c34ae8a67ca6a3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void idCurve&lt; type &gt;::Clear</definition>
        <argsstring>(void)</argsstring>
        <name>Clear</name>
        <reimplementedby refid="classid_curve___natural_cubic_spline_1a7b0c796e6c288938198a3ab1dac007cb">Clear</reimplementedby>
        <reimplementedby refid="classid_curve___kochanek_bartels_spline_1afca232cc64e5bfe43f90879b39300b1d">Clear</reimplementedby>
        <reimplementedby refid="classid_curve___n_u_r_b_s_1a849728588b214fafbc9b77445d541b8a">Clear</reimplementedby>
        <reimplementedby refid="classid_curve___n_u_r_b_s_1a849728588b214fafbc9b77445d541b8a">Clear</reimplementedby>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="48" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classid_curve_1a7dce894d0ab60b16a42e5dec8456c597" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>type</type>
        <definition>ID_INLINE type idCurve&lt; type &gt;::GetCurrentValue</definition>
        <argsstring>(const float time) const </argsstring>
        <name>GetCurrentValue</name>
        <reimplementedby refid="classid_curve___bezier_1a84986d0b3516f7e1c89181ac22454223">GetCurrentValue</reimplementedby>
        <reimplementedby refid="classid_curve___quadratic_bezier_1ab0a4b051ba5fe05b39daddfc19796bd8">GetCurrentValue</reimplementedby>
        <reimplementedby refid="classid_curve___cubic_bezier_1a86a09892de50b5e165176340dce97552">GetCurrentValue</reimplementedby>
        <reimplementedby refid="classid_curve___natural_cubic_spline_1a51853558521c9fe6e5529e855af9a619">GetCurrentValue</reimplementedby>
        <reimplementedby refid="classid_curve___catmull_rom_spline_1a4fb41263f47b6759963aaabdd04c4d11">GetCurrentValue</reimplementedby>
        <reimplementedby refid="classid_curve___kochanek_bartels_spline_1a93613d34db7f9c6ab4ffbb451426d4ed">GetCurrentValue</reimplementedby>
        <reimplementedby refid="classid_curve___b_spline_1afc36b262aee1877d54f5d70adc36dd4d">GetCurrentValue</reimplementedby>
        <reimplementedby refid="classid_curve___b_spline_1afc36b262aee1877d54f5d70adc36dd4d">GetCurrentValue</reimplementedby>
        <reimplementedby refid="classid_curve___uniform_cubic_b_spline_1a3ef4fafd5e8d8d1393886c6bffeed875">GetCurrentValue</reimplementedby>
        <reimplementedby refid="classid_curve___non_uniform_b_spline_1a831f5fec5237c19ad8bf10455261c00e">GetCurrentValue</reimplementedby>
        <reimplementedby refid="classid_curve___non_uniform_b_spline_1a831f5fec5237c19ad8bf10455261c00e">GetCurrentValue</reimplementedby>
        <reimplementedby refid="classid_curve___n_u_r_b_s_1adefd48548e1618608fa82d8d1149498b">GetCurrentValue</reimplementedby>
        <reimplementedby refid="classid_curve___n_u_r_b_s_1adefd48548e1618608fa82d8d1149498b">GetCurrentValue</reimplementedby>
        <param>
          <type>const float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="50" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="134" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classid_curve_1aa656e86a815568715b7f80b75226dbfa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>type</type>
        <definition>ID_INLINE type idCurve&lt; type &gt;::GetCurrentFirstDerivative</definition>
        <argsstring>(const float time) const </argsstring>
        <name>GetCurrentFirstDerivative</name>
        <reimplementedby refid="classid_curve___bezier_1ad263ea9c83027a187d35af6696d34b0c">GetCurrentFirstDerivative</reimplementedby>
        <reimplementedby refid="classid_curve___quadratic_bezier_1a0a0c1db25661086ab8dab4c1afff4877">GetCurrentFirstDerivative</reimplementedby>
        <reimplementedby refid="classid_curve___cubic_bezier_1a5cded7a9f595125fb3a47bf21dee4b24">GetCurrentFirstDerivative</reimplementedby>
        <reimplementedby refid="classid_curve___natural_cubic_spline_1acf3c0d9d8b2103bf97c25759f4b52945">GetCurrentFirstDerivative</reimplementedby>
        <reimplementedby refid="classid_curve___catmull_rom_spline_1ac526c61c0a30a84362ec00639c6b36c6">GetCurrentFirstDerivative</reimplementedby>
        <reimplementedby refid="classid_curve___kochanek_bartels_spline_1afcae96fd653a9e8a965fb54d7d922dac">GetCurrentFirstDerivative</reimplementedby>
        <reimplementedby refid="classid_curve___b_spline_1a328f3c705e7a1feb5ea8f1c5b1d8fa39">GetCurrentFirstDerivative</reimplementedby>
        <reimplementedby refid="classid_curve___b_spline_1a328f3c705e7a1feb5ea8f1c5b1d8fa39">GetCurrentFirstDerivative</reimplementedby>
        <reimplementedby refid="classid_curve___uniform_cubic_b_spline_1a1342287416eeeaea1159e5ac84914158">GetCurrentFirstDerivative</reimplementedby>
        <reimplementedby refid="classid_curve___non_uniform_b_spline_1aa5ff5b62e17800ffd1c52fdc0c51ce8a">GetCurrentFirstDerivative</reimplementedby>
        <reimplementedby refid="classid_curve___non_uniform_b_spline_1aa5ff5b62e17800ffd1c52fdc0c51ce8a">GetCurrentFirstDerivative</reimplementedby>
        <reimplementedby refid="classid_curve___n_u_r_b_s_1a6525c16667894609ed77d76b3a1d5c18">GetCurrentFirstDerivative</reimplementedby>
        <reimplementedby refid="classid_curve___n_u_r_b_s_1a6525c16667894609ed77d76b3a1d5c18">GetCurrentFirstDerivative</reimplementedby>
        <param>
          <type>const float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="51" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="153" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classid_curve_1acc017df4bbdb0a718cc72648fcadfbb2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>type</type>
        <definition>ID_INLINE type idCurve&lt; type &gt;::GetCurrentSecondDerivative</definition>
        <argsstring>(const float time) const </argsstring>
        <name>GetCurrentSecondDerivative</name>
        <reimplementedby refid="classid_curve___bezier_1a11fb4272b3060d9d20a6dd66eb6f68aa">GetCurrentSecondDerivative</reimplementedby>
        <reimplementedby refid="classid_curve___quadratic_bezier_1a0a855224421d5b51ef0fb85ea30b05ab">GetCurrentSecondDerivative</reimplementedby>
        <reimplementedby refid="classid_curve___cubic_bezier_1a76aa4dca6eaf76dfe1e571cfd47b3ffa">GetCurrentSecondDerivative</reimplementedby>
        <reimplementedby refid="classid_curve___natural_cubic_spline_1a37f19de3f288074ae09f1583987723e6">GetCurrentSecondDerivative</reimplementedby>
        <reimplementedby refid="classid_curve___catmull_rom_spline_1a3cf1a41ae8c8e3428ca4a7baa1ae10f9">GetCurrentSecondDerivative</reimplementedby>
        <reimplementedby refid="classid_curve___kochanek_bartels_spline_1a3196bd451c8a640386511e6751bf4a3d">GetCurrentSecondDerivative</reimplementedby>
        <reimplementedby refid="classid_curve___b_spline_1a7535ca25c4b5befdc8d1e17784e5c531">GetCurrentSecondDerivative</reimplementedby>
        <reimplementedby refid="classid_curve___b_spline_1a7535ca25c4b5befdc8d1e17784e5c531">GetCurrentSecondDerivative</reimplementedby>
        <reimplementedby refid="classid_curve___uniform_cubic_b_spline_1a6d3bfe470b68c011d3996ef090ea03d5">GetCurrentSecondDerivative</reimplementedby>
        <reimplementedby refid="classid_curve___non_uniform_b_spline_1ac3cec110ec061b39c51a24de86602a68">GetCurrentSecondDerivative</reimplementedby>
        <reimplementedby refid="classid_curve___non_uniform_b_spline_1ac3cec110ec061b39c51a24de86602a68">GetCurrentSecondDerivative</reimplementedby>
        <reimplementedby refid="classid_curve___n_u_r_b_s_1af3ee7cc02a2ce4f62108ee5302f14466">GetCurrentSecondDerivative</reimplementedby>
        <reimplementedby refid="classid_curve___n_u_r_b_s_1af3ee7cc02a2ce4f62108ee5302f14466">GetCurrentSecondDerivative</reimplementedby>
        <param>
          <type>const float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="52" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="165" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classid_curve_1aee902da3ac84387b42336b1d39ab6bc2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idCurve&lt; type &gt;::IsDone</definition>
        <argsstring>(const float time) const </argsstring>
        <name>IsDone</name>
        <reimplementedby refid="classid_curve___spline_1a833259089ec012abef9636fc0e2bf0eb">IsDone</reimplementedby>
        <reimplementedby refid="classid_curve___spline_1a833259089ec012abef9636fc0e2bf0eb">IsDone</reimplementedby>
        <reimplementedby refid="classid_curve___spline_1a833259089ec012abef9636fc0e2bf0eb">IsDone</reimplementedby>
        <reimplementedby refid="classid_curve___spline_1a833259089ec012abef9636fc0e2bf0eb">IsDone</reimplementedby>
        <param>
          <type>const float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="54" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="175" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classid_curve_1ac562ac855440567f66e166a9e3832059" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int idCurve&lt; type &gt;::GetNumValues</definition>
        <argsstring>(void) const </argsstring>
        <name>GetNumValues</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="56" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classid_curve_1a0bcfba348049c3ce97a045a95bf78d49" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idCurve&lt; type &gt;::SetValue</definition>
        <argsstring>(const int index, const type &amp;value)</argsstring>
        <name>SetValue</name>
        <param>
          <type>const int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const type &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="57" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classid_curve_1a075901dc9130d0cccd3654e0b0b311b0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>type</type>
        <definition>type idCurve&lt; type &gt;::GetValue</definition>
        <argsstring>(const int index) const </argsstring>
        <name>GetValue</name>
        <param>
          <type>const int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="58" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classid_curve_1a9051b38bd9a681bf539689dea632f0aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>type *</type>
        <definition>type* idCurve&lt; type &gt;::GetValueAddress</definition>
        <argsstring>(const int index)</argsstring>
        <name>GetValueAddress</name>
        <param>
          <type>const int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="59" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classid_curve_1a5e6ea460912a6c29381cc9cfafcfb550" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float idCurve&lt; type &gt;::GetTime</definition>
        <argsstring>(const int index) const </argsstring>
        <name>GetTime</name>
        <param>
          <type>const int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="60" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classid_curve_1a142b7b73a071efd95906135462d40f24" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>ID_INLINE float idCurve&lt; type &gt;::GetLengthForTime</definition>
        <argsstring>(const float time) const </argsstring>
        <name>GetLengthForTime</name>
        <param>
          <type>const float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="62" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="255" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classid_curve_1a0af57d4cacdf91d44a6a075461aaa13d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>ID_INLINE float idCurve&lt; type &gt;::GetTimeForLength</definition>
        <argsstring>(const float length, const float epsilon=0.1f) const </argsstring>
        <name>GetTimeForLength</name>
        <param>
          <type>const float</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
          <defval>0.1f</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="63" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="271" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="classid_curve_1a2cf0e4965cbfe35ef6f90e71f1019e67" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>ID_INLINE float idCurve&lt; type &gt;::GetLengthBetweenKnots</definition>
        <argsstring>(const int i0, const int i1) const </argsstring>
        <name>GetLengthBetweenKnots</name>
        <param>
          <type>const int</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>i1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="64" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="241" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classid_curve_1a8273c2c12a793fce6e14d14f1fae2313" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idCurve&lt; type &gt;::MakeUniform</definition>
        <argsstring>(const float totalTime)</argsstring>
        <name>MakeUniform</name>
        <param>
          <type>const float</type>
          <declname>totalTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="66" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="319" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="classid_curve_1ad0c8816f34677d79f14e62fc23c102b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idCurve&lt; type &gt;::SetConstantSpeed</definition>
        <argsstring>(const float totalTime)</argsstring>
        <name>SetConstantSpeed</name>
        <param>
          <type>const float</type>
          <declname>totalTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="67" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="335" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="classid_curve_1a77bcd3f9f5b35b553f4019b7e91dbec5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idCurve&lt; type &gt;::ShiftTime</definition>
        <argsstring>(const float deltaTime)</argsstring>
        <name>ShiftTime</name>
        <param>
          <type>const float</type>
          <declname>deltaTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="68" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="360" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="classid_curve_1a68ec740ff76c934fa2aaa8d7aa39650d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idCurve&lt; type &gt;::Translate</definition>
        <argsstring>(const type &amp;translation)</argsstring>
        <name>Translate</name>
        <param>
          <type>const type &amp;</type>
          <declname>translation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="69" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="373" bodyend="378"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classid_curve_1afbbacb7d0ef1ab00d68dffa423e8480f" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idCurve&lt; type &gt;::IndexForTime</definition>
        <argsstring>(const float time) const </argsstring>
        <name>IndexForTime</name>
        <param>
          <type>const float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="79" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="388" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="classid_curve_1a9922187fbe1d8598c401a792ad496586" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>ID_INLINE float idCurve&lt; type &gt;::TimeForIndex</definition>
        <argsstring>(const int index) const </argsstring>
        <name>TimeForIndex</name>
        <param>
          <type>const int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="80" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="459" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="classid_curve_1ad19c1a6bc72194b69410eab36905c0ad" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>type</type>
        <definition>ID_INLINE type idCurve&lt; type &gt;::ValueForIndex</definition>
        <argsstring>(const int index) const </argsstring>
        <name>ValueForIndex</name>
        <param>
          <type>const int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="81" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="440" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="classid_curve_1a2143b5b9213680b6a58b23b9be68d986" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>ID_INLINE float idCurve&lt; type &gt;::GetSpeed</definition>
        <argsstring>(const float time) const </argsstring>
        <name>GetSpeed</name>
        <param>
          <type>const float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="83" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="185" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classid_curve_1adccbc85df4306b8fa829b84cd389e42d" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>ID_INLINE float idCurve&lt; type &gt;::RombergIntegral</definition>
        <argsstring>(const float t0, const float t1, const int order) const </argsstring>
        <name>RombergIntegral</name>
        <param>
          <type>const float</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="84" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="203" bodyend="233"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="23191">
        <label>idCurve_KochanekBartelsSpline&lt; type &gt;</label>
        <link refid="classid_curve___kochanek_bartels_spline"/>
        <childnode refid="23185" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23182">
        <label>idCurve_Bezier&lt; type &gt;</label>
        <link refid="classid_curve___bezier"/>
        <childnode refid="23181" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23190">
        <label>idCurve_CatmullRomSpline&lt; type &gt;</label>
        <link refid="classid_curve___catmull_rom_spline"/>
        <childnode refid="23185" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23192">
        <label>idCurve_NaturalCubicSpline&lt; type &gt;</label>
        <link refid="classid_curve___natural_cubic_spline"/>
        <childnode refid="23185" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23184">
        <label>idCurve_QuadraticBezier&lt; type &gt;</label>
        <link refid="classid_curve___quadratic_bezier"/>
        <childnode refid="23181" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23181">
        <label>idCurve&lt; type &gt;</label>
        <link refid="classid_curve"/>
      </node>
      <node id="23186">
        <label>idCurve_BSpline&lt; type &gt;</label>
        <link refid="classid_curve___b_spline"/>
        <childnode refid="23185" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23189">
        <label>idCurve_UniformCubicBSpline&lt; type &gt;</label>
        <link refid="classid_curve___uniform_cubic_b_spline"/>
        <childnode refid="23186" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23187">
        <label>idCurve_NonUniformBSpline&lt; type &gt;</label>
        <link refid="classid_curve___non_uniform_b_spline"/>
        <childnode refid="23186" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23183">
        <label>idCurve_CubicBezier&lt; type &gt;</label>
        <link refid="classid_curve___cubic_bezier"/>
        <childnode refid="23181" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23188">
        <label>idCurve_NURBS&lt; type &gt;</label>
        <link refid="classid_curve___n_u_r_b_s"/>
        <childnode refid="23187" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23185">
        <label>idCurve_Spline&lt; type &gt;</label>
        <link refid="classid_curve___spline"/>
        <childnode refid="23181" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="23193">
        <label>idCurve&lt; type &gt;</label>
        <link refid="classid_curve"/>
        <childnode refid="23194" relation="usage">
          <edgelabel>times</edgelabel>
        </childnode>
      </node>
      <node id="23194">
        <label>idList&lt; float &gt;</label>
        <link refid="classid_list"/>
      </node>
    </collaborationgraph>
    <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" line="41" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Curve.h" bodystart="41" bodyend="85"/>
    <listofallmembers>
      <member refid="classid_curve_1aa07da2faaa24638e1038ad71da50b3d4" prot="public" virt="virtual"><scope>idCurve</scope><name>AddValue</name></member>
      <member refid="classid_curve_1ab03198a2cc7a1ccb95e05949e6c60b78" prot="protected" virt="non-virtual"><scope>idCurve</scope><name>changed</name></member>
      <member refid="classid_curve_1a61b30b9add6778410c34ae8a67ca6a3d" prot="public" virt="virtual"><scope>idCurve</scope><name>Clear</name></member>
      <member refid="classid_curve_1a0d5b5357959a7f25f448ffdaa53fa499" prot="protected" virt="non-virtual"><scope>idCurve</scope><name>currentIndex</name></member>
      <member refid="classid_curve_1aa656e86a815568715b7f80b75226dbfa" prot="public" virt="virtual"><scope>idCurve</scope><name>GetCurrentFirstDerivative</name></member>
      <member refid="classid_curve_1acc017df4bbdb0a718cc72648fcadfbb2" prot="public" virt="virtual"><scope>idCurve</scope><name>GetCurrentSecondDerivative</name></member>
      <member refid="classid_curve_1a7dce894d0ab60b16a42e5dec8456c597" prot="public" virt="virtual"><scope>idCurve</scope><name>GetCurrentValue</name></member>
      <member refid="classid_curve_1a2cf0e4965cbfe35ef6f90e71f1019e67" prot="public" virt="non-virtual"><scope>idCurve</scope><name>GetLengthBetweenKnots</name></member>
      <member refid="classid_curve_1a142b7b73a071efd95906135462d40f24" prot="public" virt="non-virtual"><scope>idCurve</scope><name>GetLengthForTime</name></member>
      <member refid="classid_curve_1ac562ac855440567f66e166a9e3832059" prot="public" virt="non-virtual"><scope>idCurve</scope><name>GetNumValues</name></member>
      <member refid="classid_curve_1a2143b5b9213680b6a58b23b9be68d986" prot="protected" virt="non-virtual"><scope>idCurve</scope><name>GetSpeed</name></member>
      <member refid="classid_curve_1a5e6ea460912a6c29381cc9cfafcfb550" prot="public" virt="non-virtual"><scope>idCurve</scope><name>GetTime</name></member>
      <member refid="classid_curve_1a0af57d4cacdf91d44a6a075461aaa13d" prot="public" virt="non-virtual"><scope>idCurve</scope><name>GetTimeForLength</name></member>
      <member refid="classid_curve_1a075901dc9130d0cccd3654e0b0b311b0" prot="public" virt="non-virtual"><scope>idCurve</scope><name>GetValue</name></member>
      <member refid="classid_curve_1a9051b38bd9a681bf539689dea632f0aa" prot="public" virt="non-virtual"><scope>idCurve</scope><name>GetValueAddress</name></member>
      <member refid="classid_curve_1a28f49a2868235aba0dc599c26844296e" prot="public" virt="non-virtual"><scope>idCurve</scope><name>idCurve</name></member>
      <member refid="classid_curve_1afbbacb7d0ef1ab00d68dffa423e8480f" prot="protected" virt="non-virtual"><scope>idCurve</scope><name>IndexForTime</name></member>
      <member refid="classid_curve_1aee902da3ac84387b42336b1d39ab6bc2" prot="public" virt="virtual"><scope>idCurve</scope><name>IsDone</name></member>
      <member refid="classid_curve_1a8273c2c12a793fce6e14d14f1fae2313" prot="public" virt="non-virtual"><scope>idCurve</scope><name>MakeUniform</name></member>
      <member refid="classid_curve_1afb2e4414934a19803141fa6f45e7d608" prot="public" virt="virtual"><scope>idCurve</scope><name>RemoveIndex</name></member>
      <member refid="classid_curve_1adccbc85df4306b8fa829b84cd389e42d" prot="protected" virt="non-virtual"><scope>idCurve</scope><name>RombergIntegral</name></member>
      <member refid="classid_curve_1ad0c8816f34677d79f14e62fc23c102b7" prot="public" virt="non-virtual"><scope>idCurve</scope><name>SetConstantSpeed</name></member>
      <member refid="classid_curve_1a0bcfba348049c3ce97a045a95bf78d49" prot="public" virt="non-virtual"><scope>idCurve</scope><name>SetValue</name></member>
      <member refid="classid_curve_1a77bcd3f9f5b35b553f4019b7e91dbec5" prot="public" virt="non-virtual"><scope>idCurve</scope><name>ShiftTime</name></member>
      <member refid="classid_curve_1a9922187fbe1d8598c401a792ad496586" prot="protected" virt="non-virtual"><scope>idCurve</scope><name>TimeForIndex</name></member>
      <member refid="classid_curve_1ae2307d17b255ba55c079ae83839b64f9" prot="protected" virt="non-virtual"><scope>idCurve</scope><name>times</name></member>
      <member refid="classid_curve_1a68ec740ff76c934fa2aaa8d7aa39650d" prot="public" virt="non-virtual"><scope>idCurve</scope><name>Translate</name></member>
      <member refid="classid_curve_1ad19c1a6bc72194b69410eab36905c0ad" prot="protected" virt="non-virtual"><scope>idCurve</scope><name>ValueForIndex</name></member>
      <member refid="classid_curve_1a16fa11caf80348bef3b3dc9cf08172c6" prot="protected" virt="non-virtual"><scope>idCurve</scope><name>values</name></member>
      <member refid="classid_curve_1ad08104f2606e32f1700238fcb22b3a6f" prot="public" virt="virtual"><scope>idCurve</scope><name>~idCurve</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
