<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_dict" kind="class" prot="public">
    <compoundname>idDict</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classid_dict_1aacfd98f6714093bf3b59eecc0b3b3e3b" prot="private" static="no" mutable="no">
        <type><ref refid="classid_list" kindref="compound">idList</ref>&lt; <ref refid="classid_key_value" kindref="compound">idKeyValue</ref> &gt;</type>
        <definition>idList&lt;idKeyValue&gt; idDict::args</definition>
        <argsstring></argsstring>
        <name>args</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="155" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_dict_1aaa2854c2a21b2318cce63bb581cab878" prot="private" static="no" mutable="no">
        <type><ref refid="classid_hash_index" kindref="compound">idHashIndex</ref></type>
        <definition>idHashIndex idDict::argHash</definition>
        <argsstring></argsstring>
        <name>argHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="156" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classid_dict_1ab4ae13e6385b8560761b03aa307cda11" prot="private" static="yes" mutable="no">
        <type><ref refid="classid_str_pool" kindref="compound">idStrPool</ref></type>
        <definition>idStrPool idDict::globalKeys</definition>
        <argsstring></argsstring>
        <name>globalKeys</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="158" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_dict_1a0635a9fe01e9e278807d389c9ca666b0" prot="private" static="yes" mutable="no">
        <type><ref refid="classid_str_pool" kindref="compound">idStrPool</ref></type>
        <definition>idStrPool idDict::globalValues</definition>
        <argsstring></argsstring>
        <name>globalValues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="159" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_dict_1af23c8433696cb71e4bfad44866a8f832" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idDict::idDict</definition>
        <argsstring>(void)</argsstring>
        <name>idDict</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="67" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="163" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a09c6da75bda6e0d3a44c1cdf41f40d31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idDict::idDict</definition>
        <argsstring>(const idDict &amp;other)</argsstring>
        <name>idDict</name>
        <param>
          <type>const <ref refid="classid_dict" kindref="compound">idDict</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="68" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="169" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1add9cbc21b01da3d6efc3d49b12945595" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idDict::~idDict</definition>
        <argsstring>(void)</argsstring>
        <name>~idDict</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="69" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="173" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1aa611eafb2b962d6b6f86309b52db2b30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idDict::SetGranularity</definition>
        <argsstring>(int granularity)</argsstring>
        <name>SetGranularity</name>
        <param>
          <type>int</type>
          <declname>granularity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="72" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a17d449366705142620371b7604005c5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idDict::SetHashSize</definition>
        <argsstring>(int hashSize)</argsstring>
        <name>SetHashSize</name>
        <param>
          <type>int</type>
          <declname>hashSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="74" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="182" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a613acd93c99ba4bfe74d36f435cddedb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_dict" kindref="compound">idDict</ref> &amp;</type>
        <definition>idDict &amp; idDict::operator=</definition>
        <argsstring>(const idDict &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classid_dict" kindref="compound">idDict</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="76" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="42" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a4a426f0968b1e57f535200b19b92530b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idDict::Copy</definition>
        <argsstring>(const idDict &amp;other)</argsstring>
        <name>Copy</name>
        <param>
          <type>const <ref refid="classid_dict" kindref="compound">idDict</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="78" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="70" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a3953b0cac1ff87dcbb31f85c66aebcdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idDict::TransferKeyValues</definition>
        <argsstring>(idDict &amp;other)</argsstring>
        <name>TransferKeyValues</name>
        <param>
          <type><ref refid="classid_dict" kindref="compound">idDict</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="80" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="111" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1aad625b462f34779f79a6b93870fda820" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idDict::Parse</definition>
        <argsstring>(idParser &amp;parser)</argsstring>
        <name>Parse</name>
        <param>
          <type><ref refid="classid_parser" kindref="compound">idParser</ref> &amp;</type>
          <declname>parser</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="82" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="142" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1ab289784e9029dfc18d4cc041df64e938" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idDict::SetDefaults</definition>
        <argsstring>(const idDict *dict)</argsstring>
        <name>SetDefaults</name>
        <param>
          <type>const <ref refid="classid_dict" kindref="compound">idDict</ref> *</type>
          <declname>dict</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="84" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="179" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a6ca5b7612d7bcc75490775dfb8541d27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idDict::Clear</definition>
        <argsstring>(void)</argsstring>
        <name>Clear</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="86" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="201" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a37a1946abecad2ae7c9d774215ae5c06" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idDict::Print</definition>
        <argsstring>() const </argsstring>
        <name>Print</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="88" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="218" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a615b5495a1a4082e73a092995da1643e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t idDict::Allocated</definition>
        <argsstring>(void) const </argsstring>
        <name>Allocated</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="90" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="258" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a4172599ff49dfb1b90744f3502c05e09" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t idDict::Size</definition>
        <argsstring>(void) const </argsstring>
        <name>Size</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="91" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1afc8f23aff79155a6c16dcf330e5d3d17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idDict::Set</definition>
        <argsstring>(const char *key, const char *value)</argsstring>
        <name>Set</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="93" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="275" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a727e7f68f48c9864bc9cf1fbfd829d51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idDict::SetFloat</definition>
        <argsstring>(const char *key, float val)</argsstring>
        <name>SetFloat</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>float</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="94" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="188" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1aca11cd7638e87e333a5044c732774656" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idDict::SetInt</definition>
        <argsstring>(const char *key, int val)</argsstring>
        <name>SetInt</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="95" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="192" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1ab562c7b3b0115ba6801ab50707f08ff2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idDict::SetBool</definition>
        <argsstring>(const char *key, bool val)</argsstring>
        <name>SetBool</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="96" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="196" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a7bdaaa275be397fd7dc643cfe404e6ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idDict::SetVector</definition>
        <argsstring>(const char *key, const idVec3 &amp;val)</argsstring>
        <name>SetVector</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="97" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="200" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a2d7ed37b30e1196ceae08018745c20da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idDict::SetVec2</definition>
        <argsstring>(const char *key, const idVec2 &amp;val)</argsstring>
        <name>SetVec2</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec2" kindref="compound">idVec2</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="98" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="208" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a99b65a72501a2d1ac86e98d222791187" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idDict::SetVec4</definition>
        <argsstring>(const char *key, const idVec4 &amp;val)</argsstring>
        <name>SetVec4</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="99" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="204" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a88a3af3f3b7f568a535ccc4ab51f6484" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idDict::SetAngles</definition>
        <argsstring>(const char *key, const idAngles &amp;val)</argsstring>
        <name>SetAngles</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="classid_angles" kindref="compound">idAngles</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="100" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="212" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1aa9cb1877650c08ed0ffc8f4a461027c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idDict::SetMatrix</definition>
        <argsstring>(const char *key, const idMat3 &amp;val)</argsstring>
        <name>SetMatrix</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="101" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="216" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a78d04013ec08f5abb72f4f5195836b41" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>ID_INLINE const char * idDict::GetString</definition>
        <argsstring>(const char *key, const char *defaultString=&quot;&quot;) const </argsstring>
        <name>GetString</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>defaultString</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="104" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="240" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a77778f0c23dab4242042674afd6deb36" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>ID_INLINE float idDict::GetFloat</definition>
        <argsstring>(const char *key, const char *defaultString=&quot;0&quot;) const </argsstring>
        <name>GetFloat</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>defaultString</declname>
          <defval>&quot;0&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="105" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="248" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1ab307ceeab64d6b121b491d920ec59e97" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idDict::GetInt</definition>
        <argsstring>(const char *key, const char *defaultString=&quot;0&quot;) const </argsstring>
        <name>GetInt</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>defaultString</declname>
          <defval>&quot;0&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="106" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="252" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1ac1dc8e6ca4e18a808e3d53bef225d04f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idDict::GetBool</definition>
        <argsstring>(const char *key, const char *defaultString=&quot;0&quot;) const </argsstring>
        <name>GetBool</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>defaultString</declname>
          <defval>&quot;0&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="107" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="256" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a5cbe2b45c817de814d375dd303559bc9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>ID_INLINE idVec3 idDict::GetVector</definition>
        <argsstring>(const char *key, const char *defaultString=NULL) const </argsstring>
        <name>GetVector</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>defaultString</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="108" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="260" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a4bb9f5811abdb2db0ef99e1ab087069e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec2" kindref="compound">idVec2</ref></type>
        <definition>ID_INLINE idVec2 idDict::GetVec2</definition>
        <argsstring>(const char *key, const char *defaultString=NULL) const </argsstring>
        <name>GetVec2</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>defaultString</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="109" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="266" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a0788b546e3f8c2039e41b908240f512f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec4" kindref="compound">idVec4</ref></type>
        <definition>ID_INLINE idVec4 idDict::GetVec4</definition>
        <argsstring>(const char *key, const char *defaultString=NULL) const </argsstring>
        <name>GetVec4</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>defaultString</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="110" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="272" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a71fd5bc24630b92c3cd9aa68689a6843" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_angles" kindref="compound">idAngles</ref></type>
        <definition>ID_INLINE idAngles idDict::GetAngles</definition>
        <argsstring>(const char *key, const char *defaultString=NULL) const </argsstring>
        <name>GetAngles</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>defaultString</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="111" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="278" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a9da1fdbe3985f0f5712b8aa465fcb6fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat3" kindref="compound">idMat3</ref></type>
        <definition>ID_INLINE idMat3 idDict::GetMatrix</definition>
        <argsstring>(const char *key, const char *defaultString=NULL) const </argsstring>
        <name>GetMatrix</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>defaultString</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="112" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="284" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a3c721414c702396cb7a00a18690e1c9a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idDict::GetString</definition>
        <argsstring>(const char *key, const char *defaultString, const char **out) const </argsstring>
        <name>GetString</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>defaultString</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="114" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="220" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1aef49cd232394555c27a238338a78236d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idDict::GetString</definition>
        <argsstring>(const char *key, const char *defaultString, idStr &amp;out) const </argsstring>
        <name>GetString</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>defaultString</declname>
        </param>
        <param>
          <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="115" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="230" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1ad5a402d10f491f7e48b6b80470194fee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idDict::GetFloat</definition>
        <argsstring>(const char *key, const char *defaultString, float &amp;out) const </argsstring>
        <name>GetFloat</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>defaultString</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="116" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="301" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a359a907a722fef8de96108ced3c78825" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idDict::GetInt</definition>
        <argsstring>(const char *key, const char *defaultString, int &amp;out) const </argsstring>
        <name>GetInt</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>defaultString</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="117" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="315" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a9668dfc1beb86271bf515012173f4ffd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idDict::GetBool</definition>
        <argsstring>(const char *key, const char *defaultString, bool &amp;out) const </argsstring>
        <name>GetBool</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>defaultString</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="118" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="329" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a62e92bbb5de31a4ec2634870d8509547" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idDict::GetVector</definition>
        <argsstring>(const char *key, const char *defaultString, idVec3 &amp;out) const </argsstring>
        <name>GetVector</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>defaultString</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="119" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="362" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a35cd40abb1c912fda6c49c7ef93d70f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idDict::GetVec2</definition>
        <argsstring>(const char *key, const char *defaultString, idVec2 &amp;out) const </argsstring>
        <name>GetVec2</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>defaultString</declname>
        </param>
        <param>
          <type><ref refid="classid_vec2" kindref="compound">idVec2</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="120" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="381" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a1aebaabb94ba26f99b9141dd8ffb8894" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idDict::GetVec4</definition>
        <argsstring>(const char *key, const char *defaultString, idVec4 &amp;out) const </argsstring>
        <name>GetVec4</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>defaultString</declname>
        </param>
        <param>
          <type><ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="121" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="400" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1af5f8ab3660af5ee0c06ca30d7256402a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idDict::GetAngles</definition>
        <argsstring>(const char *key, const char *defaultString, idAngles &amp;out) const </argsstring>
        <name>GetAngles</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>defaultString</declname>
        </param>
        <param>
          <type><ref refid="classid_angles" kindref="compound">idAngles</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="122" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="343" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1aa2a42313cc036e2fd2e648aeb9a39316" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idDict::GetMatrix</definition>
        <argsstring>(const char *key, const char *defaultString, idMat3 &amp;out) const </argsstring>
        <name>GetMatrix</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>defaultString</declname>
        </param>
        <param>
          <type><ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="123" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="419" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a4c7084f2ba1983af477d04ba17737015" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idDict::GetNumKeyVals</definition>
        <argsstring>(void) const </argsstring>
        <name>GetNumKeyVals</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="125" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="290" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a1cb07789dc473305aa4e15bd19cda18e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_key_value" kindref="compound">idKeyValue</ref> *</type>
        <definition>ID_INLINE const idKeyValue * idDict::GetKeyVal</definition>
        <argsstring>(int index) const </argsstring>
        <name>GetKeyVal</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="126" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="294" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a6df1bcf1309d3e483e725aea80bc69c7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_key_value" kindref="compound">idKeyValue</ref> *</type>
        <definition>const idKeyValue * idDict::FindKey</definition>
        <argsstring>(const char *key) const </argsstring>
        <name>FindKey</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="129" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="451" bodyend="467"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a2dc17b72e9481fc16983273c2fd002c1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idDict::FindKeyIndex</definition>
        <argsstring>(const char *key) const </argsstring>
        <name>FindKeyIndex</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="132" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="474" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1af93dd9195687362bc5ad95e855e51e92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idDict::Delete</definition>
        <argsstring>(const char *key)</argsstring>
        <name>Delete</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="134" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="496" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1ac537c5c7a9d173872be7795bbfac5c0a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_key_value" kindref="compound">idKeyValue</ref> *</type>
        <definition>const idKeyValue * idDict::MatchPrefix</definition>
        <argsstring>(const char *prefix, const idKeyValue *lastMatch=NULL) const </argsstring>
        <name>MatchPrefix</name>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>const <ref refid="classid_key_value" kindref="compound">idKeyValue</ref> *</type>
          <declname>lastMatch</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="137" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="523" bodyend="546"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a383e07ea73cb9f5407ae528f98abcf10" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * idDict::RandomPrefix</definition>
        <argsstring>(const char *prefix, idRandom &amp;random) const </argsstring>
        <name>RandomPrefix</name>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type><ref refid="classid_random" kindref="compound">idRandom</ref> &amp;</type>
          <declname>random</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="139" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="553" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a17c03a8600f86d35c1ea424182f8a311" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idDict::WriteToFileHandle</definition>
        <argsstring>(idFile *f) const </argsstring>
        <name>WriteToFileHandle</name>
        <param>
          <type><ref refid="classid_file" kindref="compound">idFile</ref> *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="141" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="571" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1ae74da71d1c464b933e88c550defeffa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idDict::ReadFromFileHandle</definition>
        <argsstring>(idFile *f)</argsstring>
        <name>ReadFromFileHandle</name>
        <param>
          <type><ref refid="classid_file" kindref="compound">idFile</ref> *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="142" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="607" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1aa7a00ceb36638b1a564fa10a5641f634" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idDict::Checksum</definition>
        <argsstring>(void) const </argsstring>
        <name>Checksum</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="145" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="237" bodyend="251"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classid_dict_1ae5d936fd44be1a7c8e35cde6f69ab02d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idDict::Init</definition>
        <argsstring>(void)</argsstring>
        <name>Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="147" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="627" bodyend="630"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1a79f213f29d534eafbb4ba2df9dc006f8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idDict::Shutdown</definition>
        <argsstring>(void)</argsstring>
        <name>Shutdown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="148" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="637" bodyend="640"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1ac64e896a78ecbdbdd4b09a54af2819eb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idDict::ShowMemoryUsage_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>ShowMemoryUsage_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="150" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="647" bodyend="650"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1adc18d76f5bb3f4ca2686394f42daf67b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idDict::ListKeys_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>ListKeys_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="151" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="668" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="classid_dict_1ac4ae97e68396adcce06002f00be60f0f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idDict::ListValues_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>ListValues_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="152" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.cpp" bodystart="687" bodyend="699"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="65" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="65" bodyend="160"/>
    <listofallmembers>
      <member refid="classid_dict_1a615b5495a1a4082e73a092995da1643e" prot="public" virt="non-virtual"><scope>idDict</scope><name>Allocated</name></member>
      <member refid="classid_dict_1aaa2854c2a21b2318cce63bb581cab878" prot="private" virt="non-virtual"><scope>idDict</scope><name>argHash</name></member>
      <member refid="classid_dict_1aacfd98f6714093bf3b59eecc0b3b3e3b" prot="private" virt="non-virtual"><scope>idDict</scope><name>args</name></member>
      <member refid="classid_dict_1aa7a00ceb36638b1a564fa10a5641f634" prot="public" virt="non-virtual"><scope>idDict</scope><name>Checksum</name></member>
      <member refid="classid_dict_1a6ca5b7612d7bcc75490775dfb8541d27" prot="public" virt="non-virtual"><scope>idDict</scope><name>Clear</name></member>
      <member refid="classid_dict_1a4a426f0968b1e57f535200b19b92530b" prot="public" virt="non-virtual"><scope>idDict</scope><name>Copy</name></member>
      <member refid="classid_dict_1af93dd9195687362bc5ad95e855e51e92" prot="public" virt="non-virtual"><scope>idDict</scope><name>Delete</name></member>
      <member refid="classid_dict_1a6df1bcf1309d3e483e725aea80bc69c7" prot="public" virt="non-virtual"><scope>idDict</scope><name>FindKey</name></member>
      <member refid="classid_dict_1a2dc17b72e9481fc16983273c2fd002c1" prot="public" virt="non-virtual"><scope>idDict</scope><name>FindKeyIndex</name></member>
      <member refid="classid_dict_1a71fd5bc24630b92c3cd9aa68689a6843" prot="public" virt="non-virtual"><scope>idDict</scope><name>GetAngles</name></member>
      <member refid="classid_dict_1af5f8ab3660af5ee0c06ca30d7256402a" prot="public" virt="non-virtual"><scope>idDict</scope><name>GetAngles</name></member>
      <member refid="classid_dict_1ac1dc8e6ca4e18a808e3d53bef225d04f" prot="public" virt="non-virtual"><scope>idDict</scope><name>GetBool</name></member>
      <member refid="classid_dict_1a9668dfc1beb86271bf515012173f4ffd" prot="public" virt="non-virtual"><scope>idDict</scope><name>GetBool</name></member>
      <member refid="classid_dict_1a77778f0c23dab4242042674afd6deb36" prot="public" virt="non-virtual"><scope>idDict</scope><name>GetFloat</name></member>
      <member refid="classid_dict_1ad5a402d10f491f7e48b6b80470194fee" prot="public" virt="non-virtual"><scope>idDict</scope><name>GetFloat</name></member>
      <member refid="classid_dict_1ab307ceeab64d6b121b491d920ec59e97" prot="public" virt="non-virtual"><scope>idDict</scope><name>GetInt</name></member>
      <member refid="classid_dict_1a359a907a722fef8de96108ced3c78825" prot="public" virt="non-virtual"><scope>idDict</scope><name>GetInt</name></member>
      <member refid="classid_dict_1a1cb07789dc473305aa4e15bd19cda18e" prot="public" virt="non-virtual"><scope>idDict</scope><name>GetKeyVal</name></member>
      <member refid="classid_dict_1a9da1fdbe3985f0f5712b8aa465fcb6fe" prot="public" virt="non-virtual"><scope>idDict</scope><name>GetMatrix</name></member>
      <member refid="classid_dict_1aa2a42313cc036e2fd2e648aeb9a39316" prot="public" virt="non-virtual"><scope>idDict</scope><name>GetMatrix</name></member>
      <member refid="classid_dict_1a4c7084f2ba1983af477d04ba17737015" prot="public" virt="non-virtual"><scope>idDict</scope><name>GetNumKeyVals</name></member>
      <member refid="classid_dict_1a78d04013ec08f5abb72f4f5195836b41" prot="public" virt="non-virtual"><scope>idDict</scope><name>GetString</name></member>
      <member refid="classid_dict_1a3c721414c702396cb7a00a18690e1c9a" prot="public" virt="non-virtual"><scope>idDict</scope><name>GetString</name></member>
      <member refid="classid_dict_1aef49cd232394555c27a238338a78236d" prot="public" virt="non-virtual"><scope>idDict</scope><name>GetString</name></member>
      <member refid="classid_dict_1a4bb9f5811abdb2db0ef99e1ab087069e" prot="public" virt="non-virtual"><scope>idDict</scope><name>GetVec2</name></member>
      <member refid="classid_dict_1a35cd40abb1c912fda6c49c7ef93d70f9" prot="public" virt="non-virtual"><scope>idDict</scope><name>GetVec2</name></member>
      <member refid="classid_dict_1a0788b546e3f8c2039e41b908240f512f" prot="public" virt="non-virtual"><scope>idDict</scope><name>GetVec4</name></member>
      <member refid="classid_dict_1a1aebaabb94ba26f99b9141dd8ffb8894" prot="public" virt="non-virtual"><scope>idDict</scope><name>GetVec4</name></member>
      <member refid="classid_dict_1a5cbe2b45c817de814d375dd303559bc9" prot="public" virt="non-virtual"><scope>idDict</scope><name>GetVector</name></member>
      <member refid="classid_dict_1a62e92bbb5de31a4ec2634870d8509547" prot="public" virt="non-virtual"><scope>idDict</scope><name>GetVector</name></member>
      <member refid="classid_dict_1ab4ae13e6385b8560761b03aa307cda11" prot="private" virt="non-virtual"><scope>idDict</scope><name>globalKeys</name></member>
      <member refid="classid_dict_1a0635a9fe01e9e278807d389c9ca666b0" prot="private" virt="non-virtual"><scope>idDict</scope><name>globalValues</name></member>
      <member refid="classid_dict_1af23c8433696cb71e4bfad44866a8f832" prot="public" virt="non-virtual"><scope>idDict</scope><name>idDict</name></member>
      <member refid="classid_dict_1a09c6da75bda6e0d3a44c1cdf41f40d31" prot="public" virt="non-virtual"><scope>idDict</scope><name>idDict</name></member>
      <member refid="classid_dict_1ae5d936fd44be1a7c8e35cde6f69ab02d" prot="public" virt="non-virtual"><scope>idDict</scope><name>Init</name></member>
      <member refid="classid_dict_1adc18d76f5bb3f4ca2686394f42daf67b" prot="public" virt="non-virtual"><scope>idDict</scope><name>ListKeys_f</name></member>
      <member refid="classid_dict_1ac4ae97e68396adcce06002f00be60f0f" prot="public" virt="non-virtual"><scope>idDict</scope><name>ListValues_f</name></member>
      <member refid="classid_dict_1ac537c5c7a9d173872be7795bbfac5c0a" prot="public" virt="non-virtual"><scope>idDict</scope><name>MatchPrefix</name></member>
      <member refid="classid_dict_1a613acd93c99ba4bfe74d36f435cddedb" prot="public" virt="non-virtual"><scope>idDict</scope><name>operator=</name></member>
      <member refid="classid_dict_1aad625b462f34779f79a6b93870fda820" prot="public" virt="non-virtual"><scope>idDict</scope><name>Parse</name></member>
      <member refid="classid_dict_1a37a1946abecad2ae7c9d774215ae5c06" prot="public" virt="non-virtual"><scope>idDict</scope><name>Print</name></member>
      <member refid="classid_dict_1a383e07ea73cb9f5407ae528f98abcf10" prot="public" virt="non-virtual"><scope>idDict</scope><name>RandomPrefix</name></member>
      <member refid="classid_dict_1ae74da71d1c464b933e88c550defeffa1" prot="public" virt="non-virtual"><scope>idDict</scope><name>ReadFromFileHandle</name></member>
      <member refid="classid_dict_1afc8f23aff79155a6c16dcf330e5d3d17" prot="public" virt="non-virtual"><scope>idDict</scope><name>Set</name></member>
      <member refid="classid_dict_1a88a3af3f3b7f568a535ccc4ab51f6484" prot="public" virt="non-virtual"><scope>idDict</scope><name>SetAngles</name></member>
      <member refid="classid_dict_1ab562c7b3b0115ba6801ab50707f08ff2" prot="public" virt="non-virtual"><scope>idDict</scope><name>SetBool</name></member>
      <member refid="classid_dict_1ab289784e9029dfc18d4cc041df64e938" prot="public" virt="non-virtual"><scope>idDict</scope><name>SetDefaults</name></member>
      <member refid="classid_dict_1a727e7f68f48c9864bc9cf1fbfd829d51" prot="public" virt="non-virtual"><scope>idDict</scope><name>SetFloat</name></member>
      <member refid="classid_dict_1aa611eafb2b962d6b6f86309b52db2b30" prot="public" virt="non-virtual"><scope>idDict</scope><name>SetGranularity</name></member>
      <member refid="classid_dict_1a17d449366705142620371b7604005c5f" prot="public" virt="non-virtual"><scope>idDict</scope><name>SetHashSize</name></member>
      <member refid="classid_dict_1aca11cd7638e87e333a5044c732774656" prot="public" virt="non-virtual"><scope>idDict</scope><name>SetInt</name></member>
      <member refid="classid_dict_1aa9cb1877650c08ed0ffc8f4a461027c3" prot="public" virt="non-virtual"><scope>idDict</scope><name>SetMatrix</name></member>
      <member refid="classid_dict_1a2d7ed37b30e1196ceae08018745c20da" prot="public" virt="non-virtual"><scope>idDict</scope><name>SetVec2</name></member>
      <member refid="classid_dict_1a99b65a72501a2d1ac86e98d222791187" prot="public" virt="non-virtual"><scope>idDict</scope><name>SetVec4</name></member>
      <member refid="classid_dict_1a7bdaaa275be397fd7dc643cfe404e6ca" prot="public" virt="non-virtual"><scope>idDict</scope><name>SetVector</name></member>
      <member refid="classid_dict_1ac64e896a78ecbdbdd4b09a54af2819eb" prot="public" virt="non-virtual"><scope>idDict</scope><name>ShowMemoryUsage_f</name></member>
      <member refid="classid_dict_1a79f213f29d534eafbb4ba2df9dc006f8" prot="public" virt="non-virtual"><scope>idDict</scope><name>Shutdown</name></member>
      <member refid="classid_dict_1a4172599ff49dfb1b90744f3502c05e09" prot="public" virt="non-virtual"><scope>idDict</scope><name>Size</name></member>
      <member refid="classid_dict_1a3953b0cac1ff87dcbb31f85c66aebcdb" prot="public" virt="non-virtual"><scope>idDict</scope><name>TransferKeyValues</name></member>
      <member refid="classid_dict_1a17c03a8600f86d35c1ea424182f8a311" prot="public" virt="non-virtual"><scope>idDict</scope><name>WriteToFileHandle</name></member>
      <member refid="classid_dict_1add9cbc21b01da3d6efc3d49b12945595" prot="public" virt="non-virtual"><scope>idDict</scope><name>~idDict</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
