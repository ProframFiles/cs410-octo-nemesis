<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_file_system" kind="class" prot="public" abstract="yes">
    <compoundname>idFileSystem</compoundname>
    <derivedcompoundref refid="classid_file_system_local" prot="public" virt="non-virtual">idFileSystemLocal</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_file_system_1aeaeed9ae63288e6d7cefdfa94f456c6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual idFileSystem::~idFileSystem</definition>
        <argsstring>()</argsstring>
        <name>~idFileSystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="150" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" bodystart="150" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1a295fc368165734a6caacec3703133110" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idFileSystem::Init</definition>
        <argsstring>(void)=0</argsstring>
        <name>Init</name>
        <reimplementedby refid="classid_file_system_local_1ac942e6769a7f145abb506ca396fde183">Init</reimplementedby>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1aa1217fb6bde01a8a217451362c924272" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idFileSystem::Restart</definition>
        <argsstring>(void)=0</argsstring>
        <name>Restart</name>
        <reimplementedby refid="classid_file_system_local_1a06c5c0be3e69fb0dd97911bf8ed80213">Restart</reimplementedby>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1ab8f1efda329f18312a658c1251ca388f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idFileSystem::Shutdown</definition>
        <argsstring>(bool reloading)=0</argsstring>
        <name>Shutdown</name>
        <reimplementedby refid="classid_file_system_local_1ae101941e3d8a8159bf772134e70057f0">Shutdown</reimplementedby>
        <param>
          <type>bool</type>
          <declname>reloading</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1aa861f2105210011d0db64a7db0ce310e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool idFileSystem::IsInitialized</definition>
        <argsstring>(void) const =0</argsstring>
        <name>IsInitialized</name>
        <reimplementedby refid="classid_file_system_local_1a3486af4ff0048c9be5b08817d8a905c3">IsInitialized</reimplementedby>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1a3ebe986865209c5e5f72337b703c6178" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool idFileSystem::PerformingCopyFiles</definition>
        <argsstring>(void) const =0</argsstring>
        <name>PerformingCopyFiles</name>
        <reimplementedby refid="classid_file_system_local_1ab6333812ae19decc1afdf9f01962c5ae">PerformingCopyFiles</reimplementedby>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1add96635aad0972cf48d84002fdc6e3ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classid_mod_list" kindref="compound">idModList</ref> *</type>
        <definition>virtual idModList* idFileSystem::ListMods</definition>
        <argsstring>(void)=0</argsstring>
        <name>ListMods</name>
        <reimplementedby refid="classid_file_system_local_1a1e6debbb7d85126b56d91e44011a6517">ListMods</reimplementedby>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1a57db4c86cb9f504ae2467a21f4759cd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idFileSystem::FreeModList</definition>
        <argsstring>(idModList *modList)=0</argsstring>
        <name>FreeModList</name>
        <reimplementedby refid="classid_file_system_local_1ae11ff12da33e885e845fca586ad3f06e">FreeModList</reimplementedby>
        <param>
          <type><ref refid="classid_mod_list" kindref="compound">idModList</ref> *</type>
          <declname>modList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1a817d7e8a04f0ad2b0760c76a229f2672" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classid_file_list" kindref="compound">idFileList</ref> *</type>
        <definition>virtual idFileList* idFileSystem::ListFiles</definition>
        <argsstring>(const char *relativePath, const char *extension, bool sort=false, bool fullRelativePath=false, const char *gamedir=NULL)=0</argsstring>
        <name>ListFiles</name>
        <reimplementedby refid="classid_file_system_local_1a98e20b10fe76d6139e7b2d5ff75f8423">ListFiles</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>relativePath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>extension</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sort</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>fullRelativePath</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>gamedir</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1acac7176e10905a5456e77e3788dc6015" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classid_file_list" kindref="compound">idFileList</ref> *</type>
        <definition>virtual idFileList* idFileSystem::ListFilesTree</definition>
        <argsstring>(const char *relativePath, const char *extension, bool sort=false, const char *gamedir=NULL)=0</argsstring>
        <name>ListFilesTree</name>
        <reimplementedby refid="classid_file_system_local_1a6a149537a141eed1b60d2635c8e645d8">ListFilesTree</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>relativePath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>extension</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sort</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>gamedir</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="177" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1a5c15c4a1eea93b41a984e47f5dc116db" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idFileSystem::FreeFileList</definition>
        <argsstring>(idFileList *fileList)=0</argsstring>
        <name>FreeFileList</name>
        <reimplementedby refid="classid_file_system_local_1a06539f968d24438352ee61c60c8bfddb">FreeFileList</reimplementedby>
        <param>
          <type><ref refid="classid_file_list" kindref="compound">idFileList</ref> *</type>
          <declname>fileList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="179" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1aa3a1b5fc49bf327e15beb2f98121e18d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>const char *</type>
        <definition>virtual const char* idFileSystem::OSPathToRelativePath</definition>
        <argsstring>(const char *OSPath)=0</argsstring>
        <name>OSPathToRelativePath</name>
        <reimplementedby refid="classid_file_system_local_1a95b7bb1656ec2b9622a8e5dc97170ff7">OSPathToRelativePath</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>OSPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="181" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1a9815c42d6ee3cc000bef5977964b5a5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>const char *</type>
        <definition>virtual const char* idFileSystem::RelativePathToOSPath</definition>
        <argsstring>(const char *relativePath, const char *basePath=&quot;fs_devpath&quot;)=0</argsstring>
        <name>RelativePathToOSPath</name>
        <reimplementedby refid="classid_file_system_local_1aaddcbd8f28807c515a7fa162fbe14f58">RelativePathToOSPath</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>relativePath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>basePath</declname>
          <defval>&quot;fs_devpath&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="183" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1ad021e9de00e9b4fd5eb6665dd33386ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>const char *</type>
        <definition>virtual const char* idFileSystem::BuildOSPath</definition>
        <argsstring>(const char *base, const char *game, const char *relativePath)=0</argsstring>
        <name>BuildOSPath</name>
        <reimplementedby refid="classid_file_system_local_1aa7180ae7c45cb4ed0b4ddc7bbf4c498b">BuildOSPath</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>game</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>relativePath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="185" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1ac95a00369da429824af71b34e44c347b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idFileSystem::CreateOSPath</definition>
        <argsstring>(const char *OSPath)=0</argsstring>
        <name>CreateOSPath</name>
        <reimplementedby refid="classid_file_system_local_1a5989f28c64c3915b0bb35f293f5f8588">CreateOSPath</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>OSPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1a3bccc48aed8ea36a822a225e3d8bcae8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool idFileSystem::FileIsInPAK</definition>
        <argsstring>(const char *relativePath)=0</argsstring>
        <name>FileIsInPAK</name>
        <reimplementedby refid="classid_file_system_local_1aced932c35f99a7a64ee0c36ab26405eb">FileIsInPAK</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>relativePath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="189" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1a7ce776aab95ef4c1c6096534d4b24074" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idFileSystem::UpdatePureServerChecksums</definition>
        <argsstring>(void)=0</argsstring>
        <name>UpdatePureServerChecksums</name>
        <reimplementedby refid="classid_file_system_local_1a939c3f6747c85e6976b695c46b617d6b">UpdatePureServerChecksums</reimplementedby>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1adeaa5c6356d6540946a3372af35bc3c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool idFileSystem::UpdateGamePakChecksums</definition>
        <argsstring>(void)=0</argsstring>
        <name>UpdateGamePakChecksums</name>
        <reimplementedby refid="classid_file_system_local_1a1bf053c4b7f9d33a9fcf71eb9fad6bb1">UpdateGamePakChecksums</reimplementedby>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1aa42ed18fd7e06ad88ac4a8affc62ac68" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>fsPureReply_t</type>
        <definition>virtual fsPureReply_t idFileSystem::SetPureServerChecksums</definition>
        <argsstring>(const int pureChecksums[MAX_PURE_PAKS], int gamePakChecksum, int missingChecksums[MAX_PURE_PAKS], int *missingGamePakChecksum)=0</argsstring>
        <name>SetPureServerChecksums</name>
        <reimplementedby refid="classid_file_system_local_1a59dc9e7e68c97f30771345b9a9a66e93">SetPureServerChecksums</reimplementedby>
        <param>
          <type>const int</type>
          <declname>pureChecksums</declname>
          <array>[MAX_PURE_PAKS]</array>
        </param>
        <param>
          <type>int</type>
          <declname>gamePakChecksum</declname>
        </param>
        <param>
          <type>int</type>
          <declname>missingChecksums</declname>
          <array>[MAX_PURE_PAKS]</array>
        </param>
        <param>
          <type>int *</type>
          <declname>missingGamePakChecksum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="202" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1a69dc9c74a6a508a52634da42daa73a14" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idFileSystem::GetPureServerChecksums</definition>
        <argsstring>(int checksums[MAX_PURE_PAKS], int OS, int *gamePakChecksum)=0</argsstring>
        <name>GetPureServerChecksums</name>
        <reimplementedby refid="classid_file_system_local_1a081680e36e32982a5dae5a83f2cbeff6">GetPureServerChecksums</reimplementedby>
        <param>
          <type>int</type>
          <declname>checksums</declname>
          <array>[MAX_PURE_PAKS]</array>
        </param>
        <param>
          <type>int</type>
          <declname>OS</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>gamePakChecksum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="205" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1ad82bf5925603977c7993347862a1ee0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idFileSystem::SetRestartChecksums</definition>
        <argsstring>(const int pureChecksums[MAX_PURE_PAKS], int gamePakChecksum)=0</argsstring>
        <name>SetRestartChecksums</name>
        <reimplementedby refid="classid_file_system_local_1af2fd2c617cd08e0f52c6db609523f9b7">SetRestartChecksums</reimplementedby>
        <param>
          <type>const int</type>
          <declname>pureChecksums</declname>
          <array>[MAX_PURE_PAKS]</array>
        </param>
        <param>
          <type>int</type>
          <declname>gamePakChecksum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="208" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1ae10ccbc3f649cf501fb8343033e02a48" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idFileSystem::ClearPureChecksums</definition>
        <argsstring>(void)=0</argsstring>
        <name>ClearPureChecksums</name>
        <reimplementedby refid="classid_file_system_local_1a3eb2f3708286e0a59f7e7a8c03e46b75">ClearPureChecksums</reimplementedby>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1a8362f03efe099ece84dcee5a9eb1f6d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int idFileSystem::GetOSMask</definition>
        <argsstring>(void)=0</argsstring>
        <name>GetOSMask</name>
        <reimplementedby refid="classid_file_system_local_1ad48ae579c2f2c88b00406478fef4aaa6">GetOSMask</reimplementedby>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="212" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1ad957de24bc4ec9f196541c668f91f183" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int idFileSystem::ReadFile</definition>
        <argsstring>(const char *relativePath, void **buffer, ID_TIME_T *timestamp=NULL)=0</argsstring>
        <name>ReadFile</name>
        <reimplementedby refid="classid_file_system_local_1af8dd9912d3d9de699548f7508c755b77">ReadFile</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>relativePath</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>ID_TIME_T *</type>
          <declname>timestamp</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1ac118c430082f25a07c31f4942411444f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idFileSystem::FreeFile</definition>
        <argsstring>(void *buffer)=0</argsstring>
        <name>FreeFile</name>
        <reimplementedby refid="classid_file_system_local_1af87e9fbef818b74e55d77c78a5da900f">FreeFile</reimplementedby>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="222" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1a1f54a3a5035158dd9cabee54ccc40613" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int idFileSystem::WriteFile</definition>
        <argsstring>(const char *relativePath, const void *buffer, int size, const char *basePath=&quot;fs_savepath&quot;)=0</argsstring>
        <name>WriteFile</name>
        <reimplementedby refid="classid_file_system_local_1aa824c54dae17a9c8c5faac30a02dad16">WriteFile</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>relativePath</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>basePath</declname>
          <defval>&quot;fs_savepath&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="225" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1a3395a27eeb893cf5ee8b054cb6cb86ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idFileSystem::RemoveFile</definition>
        <argsstring>(const char *relativePath)=0</argsstring>
        <name>RemoveFile</name>
        <reimplementedby refid="classid_file_system_local_1a5a6befd9b3f8bdab38b4a1fab8609f89">RemoveFile</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>relativePath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="227" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1ac3fcca18e17a70ad1dfe2a1d1ee97aaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classid_file" kindref="compound">idFile</ref> *</type>
        <definition>virtual idFile* idFileSystem::OpenFileRead</definition>
        <argsstring>(const char *relativePath, bool allowCopyFiles=true, const char *gamedir=NULL)=0</argsstring>
        <name>OpenFileRead</name>
        <reimplementedby refid="classid_file_system_local_1aee3715044d8e87215db34935898c6497">OpenFileRead</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>relativePath</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>allowCopyFiles</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>gamedir</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="229" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1a3ab46fbf5e7dc7b43bc493b170928cb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classid_file" kindref="compound">idFile</ref> *</type>
        <definition>virtual idFile* idFileSystem::OpenFileWrite</definition>
        <argsstring>(const char *relativePath, const char *basePath=&quot;fs_savepath&quot;)=0</argsstring>
        <name>OpenFileWrite</name>
        <reimplementedby refid="classid_file_system_local_1a673c315ccaeb9d567114793e1095ad11">OpenFileWrite</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>relativePath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>basePath</declname>
          <defval>&quot;fs_savepath&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="231" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1ac48544fe7f0816936df90918520a0963" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classid_file" kindref="compound">idFile</ref> *</type>
        <definition>virtual idFile* idFileSystem::OpenFileAppend</definition>
        <argsstring>(const char *filename, bool sync=false, const char *basePath=&quot;fs_basepath&quot;)=0</argsstring>
        <name>OpenFileAppend</name>
        <reimplementedby refid="classid_file_system_local_1aca3d57d5ceaf11f079074d6d4c3a49b7">OpenFileAppend</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sync</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>basePath</declname>
          <defval>&quot;fs_basepath&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="233" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1ae5b3a0046580d974acf7f82906c53e7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classid_file" kindref="compound">idFile</ref> *</type>
        <definition>virtual idFile* idFileSystem::OpenFileByMode</definition>
        <argsstring>(const char *relativePath, fsMode_t mode)=0</argsstring>
        <name>OpenFileByMode</name>
        <reimplementedby refid="classid_file_system_local_1a3d4467e7de12fa811e7715bfd9b363e1">OpenFileByMode</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>relativePath</declname>
        </param>
        <param>
          <type>fsMode_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="235" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1ae07b262e94bf6e8b33e9563ce0238902" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classid_file" kindref="compound">idFile</ref> *</type>
        <definition>virtual idFile* idFileSystem::OpenExplicitFileRead</definition>
        <argsstring>(const char *OSPath)=0</argsstring>
        <name>OpenExplicitFileRead</name>
        <reimplementedby refid="classid_file_system_local_1abc4580bf90a4b5e3639eb37952b8acb0">OpenExplicitFileRead</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>OSPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="237" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1aa672c993bb646f447d54fedad7abfda5" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classid_file" kindref="compound">idFile</ref> *</type>
        <definition>virtual idFile* idFileSystem::OpenExplicitFileWrite</definition>
        <argsstring>(const char *OSPath)=0</argsstring>
        <name>OpenExplicitFileWrite</name>
        <reimplementedby refid="classid_file_system_local_1ab5e81804b68051184b85e0e87091a108">OpenExplicitFileWrite</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>OSPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="239" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1a5076d8448240ae918b6440d6c23dee95" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idFileSystem::CloseFile</definition>
        <argsstring>(idFile *f)=0</argsstring>
        <name>CloseFile</name>
        <reimplementedby refid="classid_file_system_local_1a5ba12a57a44f438e26662261d2742cc8">CloseFile</reimplementedby>
        <param>
          <type><ref refid="classid_file" kindref="compound">idFile</ref> *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="241" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1a2f0706b43012d625d798d6c3f41ac6da" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idFileSystem::BackgroundDownload</definition>
        <argsstring>(backgroundDownload_t *bgl)=0</argsstring>
        <name>BackgroundDownload</name>
        <reimplementedby refid="classid_file_system_local_1a3c9864c37ccc1eb474bfaa3ba8e4a607">BackgroundDownload</reimplementedby>
        <param>
          <type><ref refid="structbackground_download__s" kindref="compound">backgroundDownload_t</ref> *</type>
          <declname>bgl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="243" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1ad58bb0139a03576463221cc2a41e494d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idFileSystem::ResetReadCount</definition>
        <argsstring>(void)=0</argsstring>
        <name>ResetReadCount</name>
        <reimplementedby refid="classid_file_system_local_1a32e908043a5a83779f16a0d44f7ddbb6">ResetReadCount</reimplementedby>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="245" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1aa944cb823a150861f9b05c37e252575e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int idFileSystem::GetReadCount</definition>
        <argsstring>(void)=0</argsstring>
        <name>GetReadCount</name>
        <reimplementedby refid="classid_file_system_local_1a569258a4a89e43edfce91bd54ecb6d4b">GetReadCount</reimplementedby>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="247" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1ad9846fae5a005c196249e65b00a4784e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idFileSystem::AddToReadCount</definition>
        <argsstring>(int c)=0</argsstring>
        <name>AddToReadCount</name>
        <reimplementedby refid="classid_file_system_local_1a13d35118379af1eb0a0ca3f26168175b">AddToReadCount</reimplementedby>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="249" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1a73bb32d5551ad75a9b6186137bca1e5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idFileSystem::FindDLL</definition>
        <argsstring>(const char *basename, char dllPath[MAX_OSPATH], bool updateChecksum)=0</argsstring>
        <name>FindDLL</name>
        <reimplementedby refid="classid_file_system_local_1a4dc14f3ed708233b45fafe025da573eb">FindDLL</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>basename</declname>
        </param>
        <param>
          <type>char</type>
          <declname>dllPath</declname>
          <array>[MAX_OSPATH]</array>
        </param>
        <param>
          <type>bool</type>
          <declname>updateChecksum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="251" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1ab2d70d3307f2895b4406637996408cb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idFileSystem::ClearDirCache</definition>
        <argsstring>(void)=0</argsstring>
        <name>ClearDirCache</name>
        <reimplementedby refid="classid_file_system_local_1a1b041520a223400a9516614bcc197edb">ClearDirCache</reimplementedby>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="255" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1ac8eab01adfde21deda04d42cde06ba2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool idFileSystem::HasD3XP</definition>
        <argsstring>(void)=0</argsstring>
        <name>HasD3XP</name>
        <reimplementedby refid="classid_file_system_local_1a06cb7465d96413b373bc3da133b51da1">HasD3XP</reimplementedby>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="258" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1ad5bc24d060012eabe41e9d57c62f0d21" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool idFileSystem::RunningD3XP</definition>
        <argsstring>(void)=0</argsstring>
        <name>RunningD3XP</name>
        <reimplementedby refid="classid_file_system_local_1a64ab16ba63b37d8d5c11ed5944f425db">RunningD3XP</reimplementedby>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="260" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1a22cc616fcbaa9dd1bdcd9d2aec820a47" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idFileSystem::CopyFile</definition>
        <argsstring>(const char *fromOSPath, const char *toOSPath)=0</argsstring>
        <name>CopyFile</name>
        <reimplementedby refid="classid_file_system_local_1afc3287af6c91c3b390aa04d549c69159">CopyFile</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>fromOSPath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>toOSPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="263" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1a4cc4e4bb5fd6e0e3907a904f431edf9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int idFileSystem::ValidateDownloadPakForChecksum</definition>
        <argsstring>(int checksum, char path[MAX_STRING_CHARS], bool isGamePak)=0</argsstring>
        <name>ValidateDownloadPakForChecksum</name>
        <reimplementedby refid="classid_file_system_local_1a58eaa06087d1b0f63d4f92ba805e282e">ValidateDownloadPakForChecksum</reimplementedby>
        <param>
          <type>int</type>
          <declname>checksum</declname>
        </param>
        <param>
          <type>char</type>
          <declname>path</declname>
          <array>[MAX_STRING_CHARS]</array>
        </param>
        <param>
          <type>bool</type>
          <declname>isGamePak</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1a2ff09e71a2a54d7b3703400cb55ab30e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classid_file" kindref="compound">idFile</ref> *</type>
        <definition>virtual idFile* idFileSystem::MakeTemporaryFile</definition>
        <argsstring>(void)=0</argsstring>
        <name>MakeTemporaryFile</name>
        <reimplementedby refid="classid_file_system_local_1acfc735c229f51c625ce95a58778a9737">MakeTemporaryFile</reimplementedby>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="268" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1a90f04d4cdb69f31a6efc80854e56ebeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int idFileSystem::AddZipFile</definition>
        <argsstring>(const char *path)=0</argsstring>
        <name>AddZipFile</name>
        <reimplementedby refid="classid_file_system_local_1a3c02eaa14c22f6819582e90dc692d736">AddZipFile</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="271" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1a1841a84fefc515e0fcf50cfc0b358f71" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>findFile_t</type>
        <definition>virtual findFile_t idFileSystem::FindFile</definition>
        <argsstring>(const char *path, bool scheduleAddons=false)=0</argsstring>
        <name>FindFile</name>
        <reimplementedby refid="classid_file_system_local_1a4542c0dfd5f1ea2384c1315137b50107">FindFile</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>scheduleAddons</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="275" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1ab3c9309e603d8ac79cb2c6eb06b96d6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int idFileSystem::GetNumMaps</definition>
        <argsstring>()=0</argsstring>
        <name>GetNumMaps</name>
        <reimplementedby refid="classid_file_system_local_1a9da27698dd2e1eb9fe0ff56c5059566a">GetNumMaps</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="279" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1a210d4bd388d343b66e8e33f635c17252" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="classid_dict" kindref="compound">idDict</ref> *</type>
        <definition>virtual const idDict* idFileSystem::GetMapDecl</definition>
        <argsstring>(int i)=0</argsstring>
        <name>GetMapDecl</name>
        <reimplementedby refid="classid_file_system_local_1afe00a86a260ecaa68988b54b34894da4">GetMapDecl</reimplementedby>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="280" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1a03b42aea70bbec9bc2321b56c00afcb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idFileSystem::FindMapScreenshot</definition>
        <argsstring>(const char *path, char *buf, int len)=0</argsstring>
        <name>FindMapScreenshot</name>
        <reimplementedby refid="classid_file_system_local_1a5d2ab7e35cc6b1265401a3a4f61d3624">FindMapScreenshot</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="281" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_file_system_1a5272bfb8ce28afcbf373017da02fe004" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool idFileSystem::FilenameCompare</definition>
        <argsstring>(const char *s1, const char *s2) const =0</argsstring>
        <name>FilenameCompare</name>
        <reimplementedby refid="classid_file_system_local_1acce44a56ec735259c98add07d7783e3e">FilenameCompare</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="284" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="24064">
        <label>idFileSystemLocal</label>
        <link refid="classid_file_system_local"/>
        <childnode refid="24063" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24063">
        <label>idFileSystem</label>
        <link refid="classid_file_system"/>
      </node>
    </inheritancegraph>
    <location file="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" line="148" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/framework/FileSystem.h" bodystart="148" bodyend="285"/>
    <listofallmembers>
      <member refid="classid_file_system_1ad9846fae5a005c196249e65b00a4784e" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>AddToReadCount</name></member>
      <member refid="classid_file_system_1a90f04d4cdb69f31a6efc80854e56ebeb" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>AddZipFile</name></member>
      <member refid="classid_file_system_1a2f0706b43012d625d798d6c3f41ac6da" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>BackgroundDownload</name></member>
      <member refid="classid_file_system_1ad021e9de00e9b4fd5eb6665dd33386ef" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>BuildOSPath</name></member>
      <member refid="classid_file_system_1ab2d70d3307f2895b4406637996408cb5" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>ClearDirCache</name></member>
      <member refid="classid_file_system_1ae10ccbc3f649cf501fb8343033e02a48" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>ClearPureChecksums</name></member>
      <member refid="classid_file_system_1a5076d8448240ae918b6440d6c23dee95" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>CloseFile</name></member>
      <member refid="classid_file_system_1a22cc616fcbaa9dd1bdcd9d2aec820a47" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>CopyFile</name></member>
      <member refid="classid_file_system_1ac95a00369da429824af71b34e44c347b" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>CreateOSPath</name></member>
      <member refid="classid_file_system_1a3bccc48aed8ea36a822a225e3d8bcae8" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>FileIsInPAK</name></member>
      <member refid="classid_file_system_1a5272bfb8ce28afcbf373017da02fe004" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>FilenameCompare</name></member>
      <member refid="classid_file_system_1a73bb32d5551ad75a9b6186137bca1e5d" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>FindDLL</name></member>
      <member refid="classid_file_system_1a1841a84fefc515e0fcf50cfc0b358f71" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>FindFile</name></member>
      <member refid="classid_file_system_1a03b42aea70bbec9bc2321b56c00afcb2" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>FindMapScreenshot</name></member>
      <member refid="classid_file_system_1ac118c430082f25a07c31f4942411444f" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>FreeFile</name></member>
      <member refid="classid_file_system_1a5c15c4a1eea93b41a984e47f5dc116db" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>FreeFileList</name></member>
      <member refid="classid_file_system_1a57db4c86cb9f504ae2467a21f4759cd4" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>FreeModList</name></member>
      <member refid="classid_file_system_1a210d4bd388d343b66e8e33f635c17252" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>GetMapDecl</name></member>
      <member refid="classid_file_system_1ab3c9309e603d8ac79cb2c6eb06b96d6e" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>GetNumMaps</name></member>
      <member refid="classid_file_system_1a8362f03efe099ece84dcee5a9eb1f6d9" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>GetOSMask</name></member>
      <member refid="classid_file_system_1a69dc9c74a6a508a52634da42daa73a14" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>GetPureServerChecksums</name></member>
      <member refid="classid_file_system_1aa944cb823a150861f9b05c37e252575e" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>GetReadCount</name></member>
      <member refid="classid_file_system_1ac8eab01adfde21deda04d42cde06ba2f" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>HasD3XP</name></member>
      <member refid="classid_file_system_1a295fc368165734a6caacec3703133110" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>Init</name></member>
      <member refid="classid_file_system_1aa861f2105210011d0db64a7db0ce310e" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>IsInitialized</name></member>
      <member refid="classid_file_system_1a817d7e8a04f0ad2b0760c76a229f2672" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>ListFiles</name></member>
      <member refid="classid_file_system_1acac7176e10905a5456e77e3788dc6015" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>ListFilesTree</name></member>
      <member refid="classid_file_system_1add96635aad0972cf48d84002fdc6e3ef" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>ListMods</name></member>
      <member refid="classid_file_system_1a2ff09e71a2a54d7b3703400cb55ab30e" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>MakeTemporaryFile</name></member>
      <member refid="classid_file_system_1ae07b262e94bf6e8b33e9563ce0238902" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>OpenExplicitFileRead</name></member>
      <member refid="classid_file_system_1aa672c993bb646f447d54fedad7abfda5" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>OpenExplicitFileWrite</name></member>
      <member refid="classid_file_system_1ac48544fe7f0816936df90918520a0963" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>OpenFileAppend</name></member>
      <member refid="classid_file_system_1ae5b3a0046580d974acf7f82906c53e7c" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>OpenFileByMode</name></member>
      <member refid="classid_file_system_1ac3fcca18e17a70ad1dfe2a1d1ee97aaf" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>OpenFileRead</name></member>
      <member refid="classid_file_system_1a3ab46fbf5e7dc7b43bc493b170928cb7" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>OpenFileWrite</name></member>
      <member refid="classid_file_system_1aa3a1b5fc49bf327e15beb2f98121e18d" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>OSPathToRelativePath</name></member>
      <member refid="classid_file_system_1a3ebe986865209c5e5f72337b703c6178" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>PerformingCopyFiles</name></member>
      <member refid="classid_file_system_1ad957de24bc4ec9f196541c668f91f183" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>ReadFile</name></member>
      <member refid="classid_file_system_1a9815c42d6ee3cc000bef5977964b5a5e" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>RelativePathToOSPath</name></member>
      <member refid="classid_file_system_1a3395a27eeb893cf5ee8b054cb6cb86ed" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>RemoveFile</name></member>
      <member refid="classid_file_system_1ad58bb0139a03576463221cc2a41e494d" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>ResetReadCount</name></member>
      <member refid="classid_file_system_1aa1217fb6bde01a8a217451362c924272" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>Restart</name></member>
      <member refid="classid_file_system_1ad5bc24d060012eabe41e9d57c62f0d21" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>RunningD3XP</name></member>
      <member refid="classid_file_system_1aa42ed18fd7e06ad88ac4a8affc62ac68" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>SetPureServerChecksums</name></member>
      <member refid="classid_file_system_1ad82bf5925603977c7993347862a1ee0d" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>SetRestartChecksums</name></member>
      <member refid="classid_file_system_1ab8f1efda329f18312a658c1251ca388f" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>Shutdown</name></member>
      <member refid="classid_file_system_1adeaa5c6356d6540946a3372af35bc3c0" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>UpdateGamePakChecksums</name></member>
      <member refid="classid_file_system_1a7ce776aab95ef4c1c6096534d4b24074" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>UpdatePureServerChecksums</name></member>
      <member refid="classid_file_system_1a4cc4e4bb5fd6e0e3907a904f431edf9e" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>ValidateDownloadPakForChecksum</name></member>
      <member refid="classid_file_system_1a1f54a3a5035158dd9cabee54ccc40613" prot="public" virt="pure-virtual"><scope>idFileSystem</scope><name>WriteFile</name></member>
      <member refid="classid_file_system_1aeaeed9ae63288e6d7cefdfa94f456c6b" prot="public" virt="virtual"><scope>idFileSystem</scope><name>~idFileSystem</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
