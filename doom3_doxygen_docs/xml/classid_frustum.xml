<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_frustum" kind="class" prot="public">
    <compoundname>idFrustum</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classid_frustum_1abe2e0c93d4c3ebbbd06720b330e46408" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>idVec3 idFrustum::origin</definition>
        <argsstring></argsstring>
        <name>origin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="118" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_frustum_1a7d3ae1b85841f1ab8287c09f6cadff7b" prot="private" static="no" mutable="no">
        <type><ref refid="classid_mat3" kindref="compound">idMat3</ref></type>
        <definition>idMat3 idFrustum::axis</definition>
        <argsstring></argsstring>
        <name>axis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="119" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_frustum_1a7a96aec9ce3f1d688fa71483a10aa80d" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idFrustum::dNear</definition>
        <argsstring></argsstring>
        <name>dNear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="120" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_frustum_1a0e36149ee585fb78d09f2e39ca19499a" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idFrustum::dFar</definition>
        <argsstring></argsstring>
        <name>dFar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="121" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_frustum_1af15bbd5bce4956d78d83566b5381e9a9" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idFrustum::dLeft</definition>
        <argsstring></argsstring>
        <name>dLeft</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="122" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_frustum_1a3e18132b2b2dbd232a725ef1ea1160d5" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idFrustum::dUp</definition>
        <argsstring></argsstring>
        <name>dUp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="123" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_frustum_1ad10c49bbda7288a58f348be37dbf9c9b" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idFrustum::invFar</definition>
        <argsstring></argsstring>
        <name>invFar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="124" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_frustum_1a1024fbe7824aa634098a801460bf9a8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idFrustum::idFrustum</definition>
        <argsstring>(void)</argsstring>
        <name>idFrustum</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="42" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" bodystart="148" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a1456acaa05db68ba90dacb617e9c2200" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idFrustum::SetOrigin</definition>
        <argsstring>(const idVec3 &amp;origin)</argsstring>
        <name>SetOrigin</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>origin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="44" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" bodystart="152" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a117bb402c61badf172a609946fb6cdda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idFrustum::SetAxis</definition>
        <argsstring>(const idMat3 &amp;axis)</argsstring>
        <name>SetAxis</name>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>axis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="45" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" bodystart="156" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1adf76d65e5198a2e6af5aaf5c70314955" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idFrustum::SetSize</definition>
        <argsstring>(float dNear, float dFar, float dLeft, float dUp)</argsstring>
        <name>SetSize</name>
        <param>
          <type>float</type>
          <declname>dNear</declname>
        </param>
        <param>
          <type>float</type>
          <declname>dFar</declname>
        </param>
        <param>
          <type>float</type>
          <declname>dLeft</declname>
        </param>
        <param>
          <type>float</type>
          <declname>dUp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="46" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" bodystart="160" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a3a0f74da4f1ba2073a4df2390a5816b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idFrustum::SetPyramid</definition>
        <argsstring>(float dNear, float dFar)</argsstring>
        <name>SetPyramid</name>
        <param>
          <type>float</type>
          <declname>dNear</declname>
        </param>
        <param>
          <type>float</type>
          <declname>dFar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="47" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" bodystart="169" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a4e6e6c04bd24381fc2393be15fa53f14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idFrustum::MoveNearDistance</definition>
        <argsstring>(float dNear)</argsstring>
        <name>MoveNearDistance</name>
        <param>
          <type>float</type>
          <declname>dNear</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="48" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" bodystart="178" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a0d6350f7862a060bc3a98d4fdd0a47c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idFrustum::MoveFarDistance</definition>
        <argsstring>(float dFar)</argsstring>
        <name>MoveFarDistance</name>
        <param>
          <type>float</type>
          <declname>dFar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="49" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" bodystart="183" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1ae90a5233b2be1eabec8664dfcfb3f1bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>ID_INLINE const idVec3 &amp; idFrustum::GetOrigin</definition>
        <argsstring>(void) const </argsstring>
        <name>GetOrigin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="51" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" bodystart="192" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a45858585a1bf7649c7b19786640ef7f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
        <definition>ID_INLINE const idMat3 &amp; idFrustum::GetAxis</definition>
        <argsstring>(void) const </argsstring>
        <name>GetAxis</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="52" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" bodystart="196" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a8d6eb0b5b776a73d83996fbbfcc6dbff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>ID_INLINE idVec3 idFrustum::GetCenter</definition>
        <argsstring>(void) const </argsstring>
        <name>GetCenter</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="53" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" bodystart="200" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a787ca7ece3ba4cd51a54774db44a9513" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idFrustum::IsValid</definition>
        <argsstring>(void) const </argsstring>
        <name>IsValid</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="55" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" bodystart="204" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1ada9daca3b73092103c88883ecbffbb9e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>ID_INLINE float idFrustum::GetNearDistance</definition>
        <argsstring>(void) const </argsstring>
        <name>GetNearDistance</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="56" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" bodystart="208" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a863f80a53949ca59413d8b0e5a733287" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>ID_INLINE float idFrustum::GetFarDistance</definition>
        <argsstring>(void) const </argsstring>
        <name>GetFarDistance</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="57" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" bodystart="212" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1ae7567238527188f0f907bcefe28d3612" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>ID_INLINE float idFrustum::GetLeft</definition>
        <argsstring>(void) const </argsstring>
        <name>GetLeft</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="58" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" bodystart="216" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a4fb089ab63f56f8ab6fccd80df79aac1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>ID_INLINE float idFrustum::GetUp</definition>
        <argsstring>(void) const </argsstring>
        <name>GetUp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="59" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" bodystart="220" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a1fbfadff8a5c3810aecc613f2c45a521" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_frustum" kindref="compound">idFrustum</ref></type>
        <definition>ID_INLINE idFrustum idFrustum::Expand</definition>
        <argsstring>(const float d) const </argsstring>
        <name>Expand</name>
        <param>
          <type>const float</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="61" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" bodystart="224" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a59c35229abb70fc4c7a9a4001d0adf88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_frustum" kindref="compound">idFrustum</ref> &amp;</type>
        <definition>ID_INLINE idFrustum &amp; idFrustum::ExpandSelf</definition>
        <argsstring>(const float d)</argsstring>
        <name>ExpandSelf</name>
        <param>
          <type>const float</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="62" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" bodystart="234" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a478108eeccab61160c0795984257cd3b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_frustum" kindref="compound">idFrustum</ref></type>
        <definition>ID_INLINE idFrustum idFrustum::Translate</definition>
        <argsstring>(const idVec3 &amp;translation) const </argsstring>
        <name>Translate</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>translation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="63" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" bodystart="243" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a21eea50e9c910d0d7648c2b608b88eb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_frustum" kindref="compound">idFrustum</ref> &amp;</type>
        <definition>ID_INLINE idFrustum &amp; idFrustum::TranslateSelf</definition>
        <argsstring>(const idVec3 &amp;translation)</argsstring>
        <name>TranslateSelf</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>translation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="64" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" bodystart="249" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a8a2dfcf68d2aaf248058da9636a60079" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_frustum" kindref="compound">idFrustum</ref></type>
        <definition>ID_INLINE idFrustum idFrustum::Rotate</definition>
        <argsstring>(const idMat3 &amp;rotation) const </argsstring>
        <name>Rotate</name>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="65" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" bodystart="254" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a885ad00102a6c42fd4113e61238dc87d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_frustum" kindref="compound">idFrustum</ref> &amp;</type>
        <definition>ID_INLINE idFrustum &amp; idFrustum::RotateSelf</definition>
        <argsstring>(const idMat3 &amp;rotation)</argsstring>
        <name>RotateSelf</name>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="66" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" bodystart="260" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1aca4a7560d2f38618029b600b14f88927" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float idFrustum::PlaneDistance</definition>
        <argsstring>(const idPlane &amp;plane) const </argsstring>
        <name>PlaneDistance</name>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>plane</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="68" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="84" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1ac2c8112780e33f655d468cb92a9273c8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idFrustum::PlaneSide</definition>
        <argsstring>(const idPlane &amp;plane, const float epsilon=ON_EPSILON) const </argsstring>
        <name>PlaneSide</name>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>plane</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
          <defval>ON_EPSILON</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="69" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="102" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1ad266794e48eb8e23421839559e78673f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::CullPoint</definition>
        <argsstring>(const idVec3 &amp;point) const </argsstring>
        <name>CullPoint</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="72" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="120" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a41afa1e0bc58f5b104137efb758b78f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::CullBounds</definition>
        <argsstring>(const idBounds &amp;bounds) const </argsstring>
        <name>CullBounds</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="73" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="218" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a69b0585241b27a50e336f3016ef90f61" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::CullBox</definition>
        <argsstring>(const idBox &amp;box) const </argsstring>
        <name>CullBox</name>
        <param>
          <type>const <ref refid="classid_box" kindref="compound">idBox</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="74" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="242" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a5e324c800d6456376367276cfdb4e7d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::CullSphere</definition>
        <argsstring>(const idSphere &amp;sphere) const </argsstring>
        <name>CullSphere</name>
        <param>
          <type>const <ref refid="classid_sphere" kindref="compound">idSphere</ref> &amp;</type>
          <declname>sphere</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="75" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="263" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1ac7f45cb07ac1a9a4d59e4903ef60bc3e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::CullFrustum</definition>
        <argsstring>(const idFrustum &amp;frustum) const </argsstring>
        <name>CullFrustum</name>
        <param>
          <type>const <ref refid="classid_frustum" kindref="compound">idFrustum</ref> &amp;</type>
          <declname>frustum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="76" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="395" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1afedbabedf7aa8e7a4fd905d9c894a4d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::CullWinding</definition>
        <argsstring>(const class idWinding &amp;winding) const </argsstring>
        <name>CullWinding</name>
        <param>
          <type>const class <ref refid="classid_winding" kindref="compound">idWinding</ref> &amp;</type>
          <declname>winding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="77" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="449" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1adac91e91f02e83710dfd1bf556903b29" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::ContainsPoint</definition>
        <argsstring>(const idVec3 &amp;point) const </argsstring>
        <name>ContainsPoint</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="80" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="795" bodyend="797"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a6519f0d81eac6eb6cc4b616b7dcca667" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::IntersectsBounds</definition>
        <argsstring>(const idBounds &amp;bounds) const </argsstring>
        <name>IntersectsBounds</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="81" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="864" bodyend="900"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a14cdadb997734792f323ddffe4003165" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::IntersectsBox</definition>
        <argsstring>(const idBox &amp;box) const </argsstring>
        <name>IntersectsBox</name>
        <param>
          <type>const <ref refid="classid_box" kindref="compound">idBox</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="82" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="907" bodyend="944"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a0d1f5572689a08c20cdb711836e8ae0f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::IntersectsSphere</definition>
        <argsstring>(const idSphere &amp;sphere) const </argsstring>
        <name>IntersectsSphere</name>
        <param>
          <type>const <ref refid="classid_sphere" kindref="compound">idSphere</ref> &amp;</type>
          <declname>sphere</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="83" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="955" bodyend="1048"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1aa71330acbd01b0a61ef08e9ae42ba944" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::IntersectsFrustum</definition>
        <argsstring>(const idFrustum &amp;frustum) const </argsstring>
        <name>IntersectsFrustum</name>
        <param>
          <type>const <ref refid="classid_frustum" kindref="compound">idFrustum</ref> &amp;</type>
          <declname>frustum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="84" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="1055" bodyend="1095"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a28056a054d0c0f144dc13defd2ea06f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::IntersectsWinding</definition>
        <argsstring>(const idWinding &amp;winding) const </argsstring>
        <name>IntersectsWinding</name>
        <param>
          <type>const <ref refid="classid_winding" kindref="compound">idWinding</ref> &amp;</type>
          <declname>winding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="85" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="1102" bodyend="1165"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1adb4dc3519dbd399a215723a79da2be18" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::LineIntersection</definition>
        <argsstring>(const idVec3 &amp;start, const idVec3 &amp;end) const </argsstring>
        <name>LineIntersection</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="86" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="1174" bodyend="1176"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1ac5be082f43c61b61ac25adec118055e9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::RayIntersection</definition>
        <argsstring>(const idVec3 &amp;start, const idVec3 &amp;dir, float &amp;scale1, float &amp;scale2) const </argsstring>
        <name>RayIntersection</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>scale1</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>scale2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="87" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="1187" bodyend="1195"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a07aa933b93d65cff12ca4eee8c1928f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::FromProjection</definition>
        <argsstring>(const idBounds &amp;bounds, const idVec3 &amp;projectionOrigin, const float dFar)</argsstring>
        <name>FromProjection</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>projectionOrigin</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>dFar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="90" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="1204" bodyend="1206"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1ac835b3f00667c21c0d72168f1d1d788f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::FromProjection</definition>
        <argsstring>(const idBox &amp;box, const idVec3 &amp;projectionOrigin, const float dFar)</argsstring>
        <name>FromProjection</name>
        <param>
          <type>const <ref refid="classid_box" kindref="compound">idBox</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>projectionOrigin</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>dFar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="91" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="1215" bodyend="1367"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a0f644c3975fb09488804c15e0a8a9a5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::FromProjection</definition>
        <argsstring>(const idSphere &amp;sphere, const idVec3 &amp;projectionOrigin, const float dFar)</argsstring>
        <name>FromProjection</name>
        <param>
          <type>const <ref refid="classid_sphere" kindref="compound">idSphere</ref> &amp;</type>
          <declname>sphere</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>projectionOrigin</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>dFar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="92" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="1376" bodyend="1405"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a7060deb9ec6bb031d72cf2566418fb64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::ConstrainToBounds</definition>
        <argsstring>(const idBounds &amp;bounds)</argsstring>
        <name>ConstrainToBounds</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="95" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="1414" bodyend="1425"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a7400d96d0ee8df783643bed0211dadef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::ConstrainToBox</definition>
        <argsstring>(const idBox &amp;box)</argsstring>
        <name>ConstrainToBox</name>
        <param>
          <type>const <ref refid="classid_box" kindref="compound">idBox</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="96" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="1434" bodyend="1445"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1ab15eefd6c253a3eda86bf74526276e35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::ConstrainToSphere</definition>
        <argsstring>(const idSphere &amp;sphere)</argsstring>
        <name>ConstrainToSphere</name>
        <param>
          <type>const <ref refid="classid_sphere" kindref="compound">idSphere</ref> &amp;</type>
          <declname>sphere</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="97" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="1454" bodyend="1465"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a40df5a769a7b40c57e856c4f2115fdc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::ConstrainToFrustum</definition>
        <argsstring>(const idFrustum &amp;frustum)</argsstring>
        <name>ConstrainToFrustum</name>
        <param>
          <type>const <ref refid="classid_frustum" kindref="compound">idFrustum</ref> &amp;</type>
          <declname>frustum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="98" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="1474" bodyend="1485"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a4f008c4fbd9d22b13b0c072d2786b609" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idFrustum::ToPlanes</definition>
        <argsstring>(idPlane planes[6]) const </argsstring>
        <name>ToPlanes</name>
        <param>
          <type><ref refid="classid_plane" kindref="compound">idPlane</ref></type>
          <declname>planes</declname>
          <array>[6]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="100" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="1494" bodyend="1516"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1aca0e37846871dbeaf4a1dc2ccb2f0113" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idFrustum::ToPoints</definition>
        <argsstring>(idVec3 points[8]) const </argsstring>
        <name>ToPoints</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>points</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="101" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="1523" bodyend="1547"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a408a03052014de2623bc795d4392a93d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idFrustum::AxisProjection</definition>
        <argsstring>(const idVec3 &amp;dir, float &amp;min, float &amp;max) const </argsstring>
        <name>AxisProjection</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="104" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="1684" bodyend="1689"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1ad4e077dcbbb5136651095f8a0fea176f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idFrustum::AxisProjection</definition>
        <argsstring>(const idMat3 &amp;ax, idBounds &amp;bounds) const </argsstring>
        <name>AxisProjection</name>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>ax</declname>
        </param>
        <param>
          <type><ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="105" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="1698" bodyend="1705"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1af26f177b285da404e0815574872d11b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::ProjectionBounds</definition>
        <argsstring>(const idBounds &amp;bounds, idBounds &amp;projectionBounds) const </argsstring>
        <name>ProjectionBounds</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type><ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>projectionBounds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="108" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="2043" bodyend="2045"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a7a0c5b2c4cebdad29b3343d60455ccaa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::ProjectionBounds</definition>
        <argsstring>(const idBox &amp;box, idBounds &amp;projectionBounds) const </argsstring>
        <name>ProjectionBounds</name>
        <param>
          <type>const <ref refid="classid_box" kindref="compound">idBox</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type><ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>projectionBounds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="109" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="2054" bodyend="2160"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a0432f4d09ce33f342c8f300ae8e328de" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::ProjectionBounds</definition>
        <argsstring>(const idSphere &amp;sphere, idBounds &amp;projectionBounds) const </argsstring>
        <name>ProjectionBounds</name>
        <param>
          <type>const <ref refid="classid_sphere" kindref="compound">idSphere</ref> &amp;</type>
          <declname>sphere</declname>
        </param>
        <param>
          <type><ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>projectionBounds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="110" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="2169" bodyend="2198"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a9f17f2266223c76bc0a57e90f7cbf937" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::ProjectionBounds</definition>
        <argsstring>(const idFrustum &amp;frustum, idBounds &amp;projectionBounds) const </argsstring>
        <name>ProjectionBounds</name>
        <param>
          <type>const <ref refid="classid_frustum" kindref="compound">idFrustum</ref> &amp;</type>
          <declname>frustum</declname>
        </param>
        <param>
          <type><ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>projectionBounds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="111" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="2205" bodyend="2312"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a0c734c05770954eeff07151dfc0834b9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::ProjectionBounds</definition>
        <argsstring>(const idWinding &amp;winding, idBounds &amp;projectionBounds) const </argsstring>
        <name>ProjectionBounds</name>
        <param>
          <type>const <ref refid="classid_winding" kindref="compound">idWinding</ref> &amp;</type>
          <declname>winding</declname>
        </param>
        <param>
          <type><ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>projectionBounds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="112" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="2319" bodyend="2396"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a50c51ff7056f51d7872f1b9c9293ac62" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::ClippedProjectionBounds</definition>
        <argsstring>(const idFrustum &amp;frustum, const idBox &amp;clipBox, idBounds &amp;projectionBounds) const </argsstring>
        <name>ClippedProjectionBounds</name>
        <param>
          <type>const <ref refid="classid_frustum" kindref="compound">idFrustum</ref> &amp;</type>
          <declname>frustum</declname>
        </param>
        <param>
          <type>const <ref refid="classid_box" kindref="compound">idBox</ref> &amp;</type>
          <declname>clipBox</declname>
        </param>
        <param>
          <type><ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>projectionBounds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="115" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="2623" bodyend="2843"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classid_frustum_1afc2bd88f314c66a6326ba30892e6e8ce" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::CullLocalBox</definition>
        <argsstring>(const idVec3 &amp;localOrigin, const idVec3 &amp;extents, const idMat3 &amp;localAxis) const </argsstring>
        <name>CullLocalBox</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>localOrigin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>extents</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>localAxis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="127" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="150" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1ace1ebffd16f217d3b3e10408cec78d38" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::CullLocalFrustum</definition>
        <argsstring>(const idFrustum &amp;localFrustum, const idVec3 indexPoints[8], const idVec3 cornerVecs[4]) const </argsstring>
        <name>CullLocalFrustum</name>
        <param>
          <type>const <ref refid="classid_frustum" kindref="compound">idFrustum</ref> &amp;</type>
          <declname>localFrustum</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>indexPoints</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>cornerVecs</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="128" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="308" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1ac4dd5045852bf23bcc9d2b1fee681039" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::CullLocalWinding</definition>
        <argsstring>(const idVec3 *points, const int numPoints, int *pointCull) const </argsstring>
        <name>CullLocalWinding</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> *</type>
          <declname>points</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numPoints</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pointCull</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="129" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="414" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1aafaef6bcb2738b6dd623939f58faa324" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::BoundsCullLocalFrustum</definition>
        <argsstring>(const idBounds &amp;bounds, const idFrustum &amp;localFrustum, const idVec3 indexPoints[8], const idVec3 cornerVecs[4]) const </argsstring>
        <name>BoundsCullLocalFrustum</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type>const <ref refid="classid_frustum" kindref="compound">idFrustum</ref> &amp;</type>
          <declname>localFrustum</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>indexPoints</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>cornerVecs</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="130" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="472" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a694dc13b583c898105b21da9cf63c602" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::LocalLineIntersection</definition>
        <argsstring>(const idVec3 &amp;start, const idVec3 &amp;end) const </argsstring>
        <name>LocalLineIntersection</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="131" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="547" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1aa96643c95c39ab1569519bb8e523bba1" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::LocalRayIntersection</definition>
        <argsstring>(const idVec3 &amp;start, const idVec3 &amp;dir, float &amp;scale1, float &amp;scale2) const </argsstring>
        <name>LocalRayIntersection</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>scale1</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>scale2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="132" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="674" bodyend="788"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a43a907bbc61f8f0c3e3ecfa19882384e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::LocalFrustumIntersectsFrustum</definition>
        <argsstring>(const idVec3 points[8], const bool testFirstSide) const </argsstring>
        <name>LocalFrustumIntersectsFrustum</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>points</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>const bool</type>
          <declname>testFirstSide</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="133" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="804" bodyend="827"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a928c406aecd58c86def6f55ac6efbb97" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::LocalFrustumIntersectsBounds</definition>
        <argsstring>(const idVec3 points[8], const idBounds &amp;bounds) const </argsstring>
        <name>LocalFrustumIntersectsBounds</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>points</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="134" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="834" bodyend="857"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1ad42b0b7e7de6ee7ff638b2fa7f36db3e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idFrustum::ToClippedPoints</definition>
        <argsstring>(const float fractions[4], idVec3 points[8]) const </argsstring>
        <name>ToClippedPoints</name>
        <param>
          <type>const float</type>
          <declname>fractions</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>points</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="135" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="1554" bodyend="1583"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a16be9b4af909ed71f80c4f2774265615" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idFrustum::ToIndexPoints</definition>
        <argsstring>(idVec3 indexPoints[8]) const </argsstring>
        <name>ToIndexPoints</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>indexPoints</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="136" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="1590" bodyend="1614"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a4e4ac1f6a34091f8f35acea873d06334" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idFrustum::ToIndexPointsAndCornerVecs</definition>
        <argsstring>(idVec3 indexPoints[8], idVec3 cornerVecs[4]) const </argsstring>
        <name>ToIndexPointsAndCornerVecs</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>indexPoints</declname>
          <array>[8]</array>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>cornerVecs</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="137" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="1623" bodyend="1652"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1ac753dd99919611f655d7298f90641204" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idFrustum::AxisProjection</definition>
        <argsstring>(const idVec3 indexPoints[8], const idVec3 cornerVecs[4], const idVec3 &amp;dir, float &amp;min, float &amp;max) const </argsstring>
        <name>AxisProjection</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>indexPoints</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>cornerVecs</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="138" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="1661" bodyend="1675"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1ada33d64381c7a5355fb3df5263834678" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idFrustum::AddLocalLineToProjectionBoundsSetCull</definition>
        <argsstring>(const idVec3 &amp;start, const idVec3 &amp;end, int &amp;startCull, int &amp;endCull, idBounds &amp;bounds) const </argsstring>
        <name>AddLocalLineToProjectionBoundsSetCull</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>startCull</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>endCull</declname>
        </param>
        <param>
          <type><ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="139" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="1712" bodyend="1844"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a1cd5df0899a4c8a35a32041095f76829" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idFrustum::AddLocalLineToProjectionBoundsUseCull</definition>
        <argsstring>(const idVec3 &amp;start, const idVec3 &amp;end, int startCull, int endCull, idBounds &amp;bounds) const </argsstring>
        <name>AddLocalLineToProjectionBoundsUseCull</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>int</type>
          <declname>startCull</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endCull</declname>
        </param>
        <param>
          <type><ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="140" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="1851" bodyend="1968"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1aa296935e7999fa680d8333eaf7c29e55" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idFrustum::AddLocalCapsToProjectionBounds</definition>
        <argsstring>(const idVec3 endPoints[4], const int endPointCull[4], const idVec3 &amp;point, int pointCull, int pointClip, idBounds &amp;projectionBounds) const </argsstring>
        <name>AddLocalCapsToProjectionBounds</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>endPoints</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>const int</type>
          <declname>endPointCull</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pointCull</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pointClip</declname>
        </param>
        <param>
          <type><ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>projectionBounds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="141" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="2606" bodyend="2616"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a262fb8de83e1e8285b12c77425be2cf2" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::BoundsRayIntersection</definition>
        <argsstring>(const idBounds &amp;bounds, const idVec3 &amp;start, const idVec3 &amp;dir, float &amp;scale1, float &amp;scale2) const </argsstring>
        <name>BoundsRayIntersection</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>scale1</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>scale2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="142" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="1978" bodyend="2036"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1a3df289c7187b7dc14de51949e7c3f7ee" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idFrustum::ClipFrustumToBox</definition>
        <argsstring>(const idBox &amp;box, float clipFractions[4], int clipPlanes[4]) const </argsstring>
        <name>ClipFrustumToBox</name>
        <param>
          <type>const <ref refid="classid_box" kindref="compound">idBox</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>float</type>
          <declname>clipFractions</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>int</type>
          <declname>clipPlanes</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="143" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="2405" bodyend="2458"/>
      </memberdef>
      <memberdef kind="function" id="classid_frustum_1ae5a6becece152e5cb560842c198acb0c" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idFrustum::ClipLine</definition>
        <argsstring>(const idVec3 localPoints[8], const idVec3 points[8], int startIndex, int endIndex, idVec3 &amp;start, idVec3 &amp;end, int &amp;startClip, int &amp;endClip) const </argsstring>
        <name>ClipLine</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>localPoints</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>points</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>int</type>
          <declname>startIndex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endIndex</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>startClip</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>endClip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="144" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.cpp" bodystart="2468" bodyend="2592"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" line="40" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/bv/Frustum.h" bodystart="40" bodyend="145"/>
    <listofallmembers>
      <member refid="classid_frustum_1aa296935e7999fa680d8333eaf7c29e55" prot="private" virt="non-virtual"><scope>idFrustum</scope><name>AddLocalCapsToProjectionBounds</name></member>
      <member refid="classid_frustum_1ada33d64381c7a5355fb3df5263834678" prot="private" virt="non-virtual"><scope>idFrustum</scope><name>AddLocalLineToProjectionBoundsSetCull</name></member>
      <member refid="classid_frustum_1a1cd5df0899a4c8a35a32041095f76829" prot="private" virt="non-virtual"><scope>idFrustum</scope><name>AddLocalLineToProjectionBoundsUseCull</name></member>
      <member refid="classid_frustum_1a7d3ae1b85841f1ab8287c09f6cadff7b" prot="private" virt="non-virtual"><scope>idFrustum</scope><name>axis</name></member>
      <member refid="classid_frustum_1a408a03052014de2623bc795d4392a93d" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>AxisProjection</name></member>
      <member refid="classid_frustum_1ad4e077dcbbb5136651095f8a0fea176f" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>AxisProjection</name></member>
      <member refid="classid_frustum_1ac753dd99919611f655d7298f90641204" prot="private" virt="non-virtual"><scope>idFrustum</scope><name>AxisProjection</name></member>
      <member refid="classid_frustum_1aafaef6bcb2738b6dd623939f58faa324" prot="private" virt="non-virtual"><scope>idFrustum</scope><name>BoundsCullLocalFrustum</name></member>
      <member refid="classid_frustum_1a262fb8de83e1e8285b12c77425be2cf2" prot="private" virt="non-virtual"><scope>idFrustum</scope><name>BoundsRayIntersection</name></member>
      <member refid="classid_frustum_1a3df289c7187b7dc14de51949e7c3f7ee" prot="private" virt="non-virtual"><scope>idFrustum</scope><name>ClipFrustumToBox</name></member>
      <member refid="classid_frustum_1ae5a6becece152e5cb560842c198acb0c" prot="private" virt="non-virtual"><scope>idFrustum</scope><name>ClipLine</name></member>
      <member refid="classid_frustum_1a50c51ff7056f51d7872f1b9c9293ac62" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>ClippedProjectionBounds</name></member>
      <member refid="classid_frustum_1a7060deb9ec6bb031d72cf2566418fb64" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>ConstrainToBounds</name></member>
      <member refid="classid_frustum_1a7400d96d0ee8df783643bed0211dadef" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>ConstrainToBox</name></member>
      <member refid="classid_frustum_1a40df5a769a7b40c57e856c4f2115fdc2" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>ConstrainToFrustum</name></member>
      <member refid="classid_frustum_1ab15eefd6c253a3eda86bf74526276e35" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>ConstrainToSphere</name></member>
      <member refid="classid_frustum_1adac91e91f02e83710dfd1bf556903b29" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>ContainsPoint</name></member>
      <member refid="classid_frustum_1a41afa1e0bc58f5b104137efb758b78f6" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>CullBounds</name></member>
      <member refid="classid_frustum_1a69b0585241b27a50e336f3016ef90f61" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>CullBox</name></member>
      <member refid="classid_frustum_1ac7f45cb07ac1a9a4d59e4903ef60bc3e" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>CullFrustum</name></member>
      <member refid="classid_frustum_1afc2bd88f314c66a6326ba30892e6e8ce" prot="private" virt="non-virtual"><scope>idFrustum</scope><name>CullLocalBox</name></member>
      <member refid="classid_frustum_1ace1ebffd16f217d3b3e10408cec78d38" prot="private" virt="non-virtual"><scope>idFrustum</scope><name>CullLocalFrustum</name></member>
      <member refid="classid_frustum_1ac4dd5045852bf23bcc9d2b1fee681039" prot="private" virt="non-virtual"><scope>idFrustum</scope><name>CullLocalWinding</name></member>
      <member refid="classid_frustum_1ad266794e48eb8e23421839559e78673f" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>CullPoint</name></member>
      <member refid="classid_frustum_1a5e324c800d6456376367276cfdb4e7d4" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>CullSphere</name></member>
      <member refid="classid_frustum_1afedbabedf7aa8e7a4fd905d9c894a4d5" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>CullWinding</name></member>
      <member refid="classid_frustum_1a0e36149ee585fb78d09f2e39ca19499a" prot="private" virt="non-virtual"><scope>idFrustum</scope><name>dFar</name></member>
      <member refid="classid_frustum_1af15bbd5bce4956d78d83566b5381e9a9" prot="private" virt="non-virtual"><scope>idFrustum</scope><name>dLeft</name></member>
      <member refid="classid_frustum_1a7a96aec9ce3f1d688fa71483a10aa80d" prot="private" virt="non-virtual"><scope>idFrustum</scope><name>dNear</name></member>
      <member refid="classid_frustum_1a3e18132b2b2dbd232a725ef1ea1160d5" prot="private" virt="non-virtual"><scope>idFrustum</scope><name>dUp</name></member>
      <member refid="classid_frustum_1a1fbfadff8a5c3810aecc613f2c45a521" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>Expand</name></member>
      <member refid="classid_frustum_1a59c35229abb70fc4c7a9a4001d0adf88" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>ExpandSelf</name></member>
      <member refid="classid_frustum_1a07aa933b93d65cff12ca4eee8c1928f5" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>FromProjection</name></member>
      <member refid="classid_frustum_1ac835b3f00667c21c0d72168f1d1d788f" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>FromProjection</name></member>
      <member refid="classid_frustum_1a0f644c3975fb09488804c15e0a8a9a5e" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>FromProjection</name></member>
      <member refid="classid_frustum_1a45858585a1bf7649c7b19786640ef7f8" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>GetAxis</name></member>
      <member refid="classid_frustum_1a8d6eb0b5b776a73d83996fbbfcc6dbff" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>GetCenter</name></member>
      <member refid="classid_frustum_1a863f80a53949ca59413d8b0e5a733287" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>GetFarDistance</name></member>
      <member refid="classid_frustum_1ae7567238527188f0f907bcefe28d3612" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>GetLeft</name></member>
      <member refid="classid_frustum_1ada9daca3b73092103c88883ecbffbb9e" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>GetNearDistance</name></member>
      <member refid="classid_frustum_1ae90a5233b2be1eabec8664dfcfb3f1bd" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>GetOrigin</name></member>
      <member refid="classid_frustum_1a4fb089ab63f56f8ab6fccd80df79aac1" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>GetUp</name></member>
      <member refid="classid_frustum_1a1024fbe7824aa634098a801460bf9a8e" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>idFrustum</name></member>
      <member refid="classid_frustum_1a6519f0d81eac6eb6cc4b616b7dcca667" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>IntersectsBounds</name></member>
      <member refid="classid_frustum_1a14cdadb997734792f323ddffe4003165" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>IntersectsBox</name></member>
      <member refid="classid_frustum_1aa71330acbd01b0a61ef08e9ae42ba944" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>IntersectsFrustum</name></member>
      <member refid="classid_frustum_1a0d1f5572689a08c20cdb711836e8ae0f" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>IntersectsSphere</name></member>
      <member refid="classid_frustum_1a28056a054d0c0f144dc13defd2ea06f4" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>IntersectsWinding</name></member>
      <member refid="classid_frustum_1ad10c49bbda7288a58f348be37dbf9c9b" prot="private" virt="non-virtual"><scope>idFrustum</scope><name>invFar</name></member>
      <member refid="classid_frustum_1a787ca7ece3ba4cd51a54774db44a9513" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>IsValid</name></member>
      <member refid="classid_frustum_1adb4dc3519dbd399a215723a79da2be18" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>LineIntersection</name></member>
      <member refid="classid_frustum_1a928c406aecd58c86def6f55ac6efbb97" prot="private" virt="non-virtual"><scope>idFrustum</scope><name>LocalFrustumIntersectsBounds</name></member>
      <member refid="classid_frustum_1a43a907bbc61f8f0c3e3ecfa19882384e" prot="private" virt="non-virtual"><scope>idFrustum</scope><name>LocalFrustumIntersectsFrustum</name></member>
      <member refid="classid_frustum_1a694dc13b583c898105b21da9cf63c602" prot="private" virt="non-virtual"><scope>idFrustum</scope><name>LocalLineIntersection</name></member>
      <member refid="classid_frustum_1aa96643c95c39ab1569519bb8e523bba1" prot="private" virt="non-virtual"><scope>idFrustum</scope><name>LocalRayIntersection</name></member>
      <member refid="classid_frustum_1a0d6350f7862a060bc3a98d4fdd0a47c0" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>MoveFarDistance</name></member>
      <member refid="classid_frustum_1a4e6e6c04bd24381fc2393be15fa53f14" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>MoveNearDistance</name></member>
      <member refid="classid_frustum_1abe2e0c93d4c3ebbbd06720b330e46408" prot="private" virt="non-virtual"><scope>idFrustum</scope><name>origin</name></member>
      <member refid="classid_frustum_1aca4a7560d2f38618029b600b14f88927" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>PlaneDistance</name></member>
      <member refid="classid_frustum_1ac2c8112780e33f655d468cb92a9273c8" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>PlaneSide</name></member>
      <member refid="classid_frustum_1af26f177b285da404e0815574872d11b4" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>ProjectionBounds</name></member>
      <member refid="classid_frustum_1a7a0c5b2c4cebdad29b3343d60455ccaa" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>ProjectionBounds</name></member>
      <member refid="classid_frustum_1a0432f4d09ce33f342c8f300ae8e328de" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>ProjectionBounds</name></member>
      <member refid="classid_frustum_1a9f17f2266223c76bc0a57e90f7cbf937" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>ProjectionBounds</name></member>
      <member refid="classid_frustum_1a0c734c05770954eeff07151dfc0834b9" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>ProjectionBounds</name></member>
      <member refid="classid_frustum_1ac5be082f43c61b61ac25adec118055e9" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>RayIntersection</name></member>
      <member refid="classid_frustum_1a8a2dfcf68d2aaf248058da9636a60079" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>Rotate</name></member>
      <member refid="classid_frustum_1a885ad00102a6c42fd4113e61238dc87d" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>RotateSelf</name></member>
      <member refid="classid_frustum_1a117bb402c61badf172a609946fb6cdda" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>SetAxis</name></member>
      <member refid="classid_frustum_1a1456acaa05db68ba90dacb617e9c2200" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>SetOrigin</name></member>
      <member refid="classid_frustum_1a3a0f74da4f1ba2073a4df2390a5816b2" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>SetPyramid</name></member>
      <member refid="classid_frustum_1adf76d65e5198a2e6af5aaf5c70314955" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>SetSize</name></member>
      <member refid="classid_frustum_1ad42b0b7e7de6ee7ff638b2fa7f36db3e" prot="private" virt="non-virtual"><scope>idFrustum</scope><name>ToClippedPoints</name></member>
      <member refid="classid_frustum_1a16be9b4af909ed71f80c4f2774265615" prot="private" virt="non-virtual"><scope>idFrustum</scope><name>ToIndexPoints</name></member>
      <member refid="classid_frustum_1a4e4ac1f6a34091f8f35acea873d06334" prot="private" virt="non-virtual"><scope>idFrustum</scope><name>ToIndexPointsAndCornerVecs</name></member>
      <member refid="classid_frustum_1a4f008c4fbd9d22b13b0c072d2786b609" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>ToPlanes</name></member>
      <member refid="classid_frustum_1aca0e37846871dbeaf4a1dc2ccb2f0113" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>ToPoints</name></member>
      <member refid="classid_frustum_1a478108eeccab61160c0795984257cd3b" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>Translate</name></member>
      <member refid="classid_frustum_1a21eea50e9c910d0d7648c2b608b88eb9" prot="public" virt="non-virtual"><scope>idFrustum</scope><name>TranslateSelf</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
