<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_gui_model" kind="class" prot="public">
    <compoundname>idGuiModel</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classid_gui_model_1a377589538e71d6daefe995e8c6486916" prot="private" static="no" mutable="no">
        <type><ref refid="structgui_model_surface__t" kindref="compound">guiModelSurface_t</ref> *</type>
        <definition>guiModelSurface_t* idGuiModel::surf</definition>
        <argsstring></argsstring>
        <name>surf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.h" line="64" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_gui_model_1a0af7f68b28549d255da0135ca8c66e62" prot="private" static="no" mutable="no">
        <type><ref refid="classid_list" kindref="compound">idList</ref>&lt; <ref refid="structgui_model_surface__t" kindref="compound">guiModelSurface_t</ref> &gt;</type>
        <definition>idList&lt;guiModelSurface_t&gt; idGuiModel::surfaces</definition>
        <argsstring></argsstring>
        <name>surfaces</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.h" line="66" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_gui_model_1a617260bc1d837ab1d603890fbb8eba7c" prot="private" static="no" mutable="no">
        <type><ref refid="classid_list" kindref="compound">idList</ref>&lt; glIndex_t &gt;</type>
        <definition>idList&lt;glIndex_t&gt; idGuiModel::indexes</definition>
        <argsstring></argsstring>
        <name>indexes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.h" line="67" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_gui_model_1a4b2eeea634eda595a81752d12f88ade2" prot="private" static="no" mutable="no">
        <type><ref refid="classid_list" kindref="compound">idList</ref>&lt; <ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref> &gt;</type>
        <definition>idList&lt;idDrawVert&gt; idGuiModel::verts</definition>
        <argsstring></argsstring>
        <name>verts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.h" line="68" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_gui_model_1afc0762caa848a22309b43f7dfe2f4b2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idGuiModel::idGuiModel</definition>
        <argsstring>()</argsstring>
        <name>idGuiModel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.h" line="41" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.cpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classid_gui_model_1a4fc24fbef8909765e6810358244d7021" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idGuiModel::Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.h" line="43" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.cpp" bodystart="52" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classid_gui_model_1a4b0cc4fe3ea71ce99107c78620925289" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idGuiModel::WriteToDemo</definition>
        <argsstring>(idDemoFile *demo)</argsstring>
        <name>WriteToDemo</name>
        <param>
          <type><ref refid="classid_demo_file" kindref="compound">idDemoFile</ref> *</type>
          <declname>demo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.h" line="45" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.cpp" bodystart="64" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classid_gui_model_1a073e1987e12bf68a3a73cf0581f2f4f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idGuiModel::ReadFromDemo</definition>
        <argsstring>(idDemoFile *demo)</argsstring>
        <name>ReadFromDemo</name>
        <param>
          <type><ref refid="classid_demo_file" kindref="compound">idDemoFile</ref> *</type>
          <declname>demo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.h" line="46" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.cpp" bodystart="111" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classid_gui_model_1a5d3d1389ad0cf74f2ada2e455fb01b55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idGuiModel::EmitToCurrentView</definition>
        <argsstring>(float modelMatrix[16], bool depthHack)</argsstring>
        <name>EmitToCurrentView</name>
        <param>
          <type>float</type>
          <declname>modelMatrix</declname>
          <array>[16]</array>
        </param>
        <param>
          <type>bool</type>
          <declname>depthHack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.h" line="48" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.cpp" bodystart="208" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classid_gui_model_1a4d41d10fa9dc48981fd356678bf0e473" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idGuiModel::EmitFullScreen</definition>
        <argsstring>()</argsstring>
        <name>EmitFullScreen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.h" line="49" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.cpp" bodystart="226" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="classid_gui_model_1ad5b9435e5323d5186f701f2a9b0874e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idGuiModel::SetColor</definition>
        <argsstring>(float r, float g, float b, float a)</argsstring>
        <name>SetColor</name>
        <param>
          <type>float</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>g</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.h" line="52" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.cpp" bodystart="334" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="classid_gui_model_1aae8f0e5be8d734eca34d879d3100183a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idGuiModel::DrawStretchPic</definition>
        <argsstring>(const idDrawVert *verts, const glIndex_t *indexes, int vertCount, int indexCount, const idMaterial *hShader, bool clip=true, float min_x=0.0f, float min_y=0.0f, float max_x=640.0f, float max_y=480.0f)</argsstring>
        <name>DrawStretchPic</name>
        <param>
          <type>const <ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref> *</type>
          <declname>verts</declname>
        </param>
        <param>
          <type>const glIndex_t *</type>
          <declname>indexes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vertCount</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexCount</declname>
        </param>
        <param>
          <type>const <ref refid="classid_material" kindref="compound">idMaterial</ref> *</type>
          <declname>hShader</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clip</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>float</type>
          <declname>min_x</declname>
          <defval>0.0f</defval>
        </param>
        <param>
          <type>float</type>
          <declname>min_y</declname>
          <defval>0.0f</defval>
        </param>
        <param>
          <type>float</type>
          <declname>max_x</declname>
          <defval>640.0f</defval>
        </param>
        <param>
          <type>float</type>
          <declname>max_y</declname>
          <defval>480.0f</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.h" line="53" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.cpp" bodystart="359" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="classid_gui_model_1a66bf770e740943550bdd7a2ae7c902d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idGuiModel::DrawStretchPic</definition>
        <argsstring>(float x, float y, float w, float h, float s1, float t1, float s2, float t2, const idMaterial *hShader)</argsstring>
        <name>DrawStretchPic</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>w</declname>
        </param>
        <param>
          <type>float</type>
          <declname>h</declname>
        </param>
        <param>
          <type>float</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>const <ref refid="classid_material" kindref="compound">idMaterial</ref> *</type>
          <declname>hShader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.h" line="55" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.cpp" bodystart="459" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="classid_gui_model_1aa4dcec0c9e5e59269e0a9a50edd0ac52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idGuiModel::DrawStretchTri</definition>
        <argsstring>(idVec2 p1, idVec2 p2, idVec2 p3, idVec2 t1, idVec2 t2, idVec2 t3, const idMaterial *material)</argsstring>
        <name>DrawStretchTri</name>
        <param>
          <type><ref refid="classid_vec2" kindref="compound">idVec2</ref></type>
          <declname>p1</declname>
        </param>
        <param>
          <type><ref refid="classid_vec2" kindref="compound">idVec2</ref></type>
          <declname>p2</declname>
        </param>
        <param>
          <type><ref refid="classid_vec2" kindref="compound">idVec2</ref></type>
          <declname>p3</declname>
        </param>
        <param>
          <type><ref refid="classid_vec2" kindref="compound">idVec2</ref></type>
          <declname>t1</declname>
        </param>
        <param>
          <type><ref refid="classid_vec2" kindref="compound">idVec2</ref></type>
          <declname>t2</declname>
        </param>
        <param>
          <type><ref refid="classid_vec2" kindref="compound">idVec2</ref></type>
          <declname>t3</declname>
        </param>
        <param>
          <type>const <ref refid="classid_material" kindref="compound">idMaterial</ref> *</type>
          <declname>material</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.h" line="57" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.cpp" bodystart="568" bodyend="651"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classid_gui_model_1aaebb1d45c05b9866c49181c830a82a4a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idGuiModel::AdvanceSurf</definition>
        <argsstring>()</argsstring>
        <name>AdvanceSurf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.h" line="61" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.cpp" bodystart="304" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="classid_gui_model_1a33b193e0386b51a61f2bc6682adee958" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idGuiModel::EmitSurface</definition>
        <argsstring>(guiModelSurface_t *surf, float modelMatrix[16], float modelViewMatrix[16], bool depthHack)</argsstring>
        <name>EmitSurface</name>
        <param>
          <type><ref refid="structgui_model_surface__t" kindref="compound">guiModelSurface_t</ref> *</type>
          <declname>surf</declname>
        </param>
        <param>
          <type>float</type>
          <declname>modelMatrix</declname>
          <array>[16]</array>
        </param>
        <param>
          <type>float</type>
          <declname>modelViewMatrix</declname>
          <array>[16]</array>
        </param>
        <param>
          <type>bool</type>
          <declname>depthHack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.h" line="62" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.cpp" bodystart="161" bodyend="201"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.h" line="39" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.h" bodystart="39" bodyend="69"/>
    <listofallmembers>
      <member refid="classid_gui_model_1aaebb1d45c05b9866c49181c830a82a4a" prot="private" virt="non-virtual"><scope>idGuiModel</scope><name>AdvanceSurf</name></member>
      <member refid="classid_gui_model_1a4fc24fbef8909765e6810358244d7021" prot="public" virt="non-virtual"><scope>idGuiModel</scope><name>Clear</name></member>
      <member refid="classid_gui_model_1aae8f0e5be8d734eca34d879d3100183a" prot="public" virt="non-virtual"><scope>idGuiModel</scope><name>DrawStretchPic</name></member>
      <member refid="classid_gui_model_1a66bf770e740943550bdd7a2ae7c902d0" prot="public" virt="non-virtual"><scope>idGuiModel</scope><name>DrawStretchPic</name></member>
      <member refid="classid_gui_model_1aa4dcec0c9e5e59269e0a9a50edd0ac52" prot="public" virt="non-virtual"><scope>idGuiModel</scope><name>DrawStretchTri</name></member>
      <member refid="classid_gui_model_1a4d41d10fa9dc48981fd356678bf0e473" prot="public" virt="non-virtual"><scope>idGuiModel</scope><name>EmitFullScreen</name></member>
      <member refid="classid_gui_model_1a33b193e0386b51a61f2bc6682adee958" prot="private" virt="non-virtual"><scope>idGuiModel</scope><name>EmitSurface</name></member>
      <member refid="classid_gui_model_1a5d3d1389ad0cf74f2ada2e455fb01b55" prot="public" virt="non-virtual"><scope>idGuiModel</scope><name>EmitToCurrentView</name></member>
      <member refid="classid_gui_model_1afc0762caa848a22309b43f7dfe2f4b2e" prot="public" virt="non-virtual"><scope>idGuiModel</scope><name>idGuiModel</name></member>
      <member refid="classid_gui_model_1a617260bc1d837ab1d603890fbb8eba7c" prot="private" virt="non-virtual"><scope>idGuiModel</scope><name>indexes</name></member>
      <member refid="classid_gui_model_1a073e1987e12bf68a3a73cf0581f2f4f3" prot="public" virt="non-virtual"><scope>idGuiModel</scope><name>ReadFromDemo</name></member>
      <member refid="classid_gui_model_1ad5b9435e5323d5186f701f2a9b0874e7" prot="public" virt="non-virtual"><scope>idGuiModel</scope><name>SetColor</name></member>
      <member refid="classid_gui_model_1a377589538e71d6daefe995e8c6486916" prot="private" virt="non-virtual"><scope>idGuiModel</scope><name>surf</name></member>
      <member refid="classid_gui_model_1a0af7f68b28549d255da0135ca8c66e62" prot="private" virt="non-virtual"><scope>idGuiModel</scope><name>surfaces</name></member>
      <member refid="classid_gui_model_1a4b2eeea634eda595a81752d12f88ade2" prot="private" virt="non-virtual"><scope>idGuiModel</scope><name>verts</name></member>
      <member refid="classid_gui_model_1a4b0cc4fe3ea71ce99107c78620925289" prot="public" virt="non-virtual"><scope>idGuiModel</scope><name>WriteToDemo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
