<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_hierarchy" kind="class" prot="public">
    <compoundname>idHierarchy</compoundname>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>type</declname>
        <defname>type</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classid_hierarchy_1a8b051bfd8920a20edf2e02782e36876b" prot="private" static="no" mutable="no">
        <type><ref refid="classid_hierarchy" kindref="compound">idHierarchy</ref> *</type>
        <definition>idHierarchy* idHierarchy&lt; type &gt;::parent</definition>
        <argsstring></argsstring>
        <name>parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" line="63" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_hierarchy_1ad7208633f058cd07d60f2d2739d375ab" prot="private" static="no" mutable="no">
        <type><ref refid="classid_hierarchy" kindref="compound">idHierarchy</ref> *</type>
        <definition>idHierarchy* idHierarchy&lt; type &gt;::sibling</definition>
        <argsstring></argsstring>
        <name>sibling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" line="64" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_hierarchy_1a48d9115e1dc006806da867c6eed0f9a4" prot="private" static="no" mutable="no">
        <type><ref refid="classid_hierarchy" kindref="compound">idHierarchy</ref> *</type>
        <definition>idHierarchy* idHierarchy&lt; type &gt;::child</definition>
        <argsstring></argsstring>
        <name>child</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" line="65" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_hierarchy_1a89e8192f7034be51db1d5813ff9c4299" prot="private" static="no" mutable="no">
        <type>type *</type>
        <definition>type* idHierarchy&lt; type &gt;::owner</definition>
        <argsstring></argsstring>
        <name>owner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" line="66" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_hierarchy_1ace752ac4412de4227632d83ec6cc889a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idHierarchy&lt; type &gt;::idHierarchy</definition>
        <argsstring>()</argsstring>
        <name>idHierarchy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" line="44" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" bodystart="77" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classid_hierarchy_1a1d5febd21046186e40501449cb84dafd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idHierarchy&lt; type &gt;::~idHierarchy</definition>
        <argsstring>()</argsstring>
        <name>~idHierarchy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" line="45" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classid_hierarchy_1a8aaa12c2aba324f4f7f3719fcdff8e61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idHierarchy&lt; type &gt;::SetOwner</definition>
        <argsstring>(type *object)</argsstring>
        <name>SetOwner</name>
        <param>
          <type>type *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" line="47" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" bodystart="114" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classid_hierarchy_1a6d23c212996ad25b912402d427e3f682" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>type *</type>
        <definition>type * idHierarchy&lt; type &gt;::Owner</definition>
        <argsstring>(void) const </argsstring>
        <name>Owner</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" line="48" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" bodystart="102" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classid_hierarchy_1afa57a9a84fe414e01259612aa6c4cd84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idHierarchy&lt; type &gt;::ParentTo</definition>
        <argsstring>(idHierarchy &amp;node)</argsstring>
        <name>ParentTo</name>
        <param>
          <type><ref refid="classid_hierarchy" kindref="compound">idHierarchy</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" line="49" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" bodystart="141" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classid_hierarchy_1a6dba21416be7d40aad852deb9e335525" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idHierarchy&lt; type &gt;::MakeSiblingAfter</definition>
        <argsstring>(idHierarchy &amp;node)</argsstring>
        <name>MakeSiblingAfter</name>
        <param>
          <type><ref refid="classid_hierarchy" kindref="compound">idHierarchy</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" line="50" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" bodystart="157" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classid_hierarchy_1ae50f42646ca604675a6385c037ed639b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idHierarchy&lt; type &gt;::ParentedBy</definition>
        <argsstring>(const idHierarchy &amp;node) const </argsstring>
        <name>ParentedBy</name>
        <param>
          <type>const <ref refid="classid_hierarchy" kindref="compound">idHierarchy</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" line="51" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" bodystart="124" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classid_hierarchy_1a442d9d6b8a8ff1d2b18507e6c9c5ccd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idHierarchy&lt; type &gt;::RemoveFromParent</definition>
        <argsstring>(void)</argsstring>
        <name>RemoveFromParent</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" line="52" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" bodystart="170" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classid_hierarchy_1aabd2e793845578b856c2523af0e973a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idHierarchy&lt; type &gt;::RemoveFromHierarchy</definition>
        <argsstring>(void)</argsstring>
        <name>RemoveFromHierarchy</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" line="53" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" bodystart="194" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classid_hierarchy_1a8a25e83dc4a51dff8f295b14cba9f262" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>type *</type>
        <definition>type * idHierarchy&lt; type &gt;::GetParent</definition>
        <argsstring>(void) const </argsstring>
        <name>GetParent</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" line="55" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" bodystart="220" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classid_hierarchy_1a476ce2856adb3581d0318c70ccbcee06" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>type *</type>
        <definition>type * idHierarchy&lt; type &gt;::GetChild</definition>
        <argsstring>(void) const </argsstring>
        <name>GetChild</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" line="56" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" bodystart="233" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classid_hierarchy_1a0c096c1538daaa27d55373a38b21b810" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>type *</type>
        <definition>type * idHierarchy&lt; type &gt;::GetSibling</definition>
        <argsstring>(void) const </argsstring>
        <name>GetSibling</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" line="57" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" bodystart="246" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="classid_hierarchy_1a0d98722c10b95ae79a64c7afda7e6487" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>type *</type>
        <definition>type * idHierarchy&lt; type &gt;::GetPriorSibling</definition>
        <argsstring>(void) const </argsstring>
        <name>GetPriorSibling</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" line="58" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" bodystart="291" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="classid_hierarchy_1aab0422d1be70bda4bdb6ce71074e88f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>type *</type>
        <definition>type * idHierarchy&lt; type &gt;::GetNext</definition>
        <argsstring>(void) const </argsstring>
        <name>GetNext</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" line="59" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" bodystart="310" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="classid_hierarchy_1a28de2b5d7b6df09973da32d8fc5bc119" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>type *</type>
        <definition>type * idHierarchy&lt; type &gt;::GetNextLeaf</definition>
        <argsstring>(void) const </argsstring>
        <name>GetNextLeaf</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" line="60" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" bodystart="336" bodyend="360"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classid_hierarchy_1aea98c936a8527cbf33bc9ed3fdba6627" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_hierarchy" kindref="compound">idHierarchy</ref>&lt; type &gt; *</type>
        <definition>idHierarchy&lt; type &gt; * idHierarchy&lt; type &gt;::GetPriorSiblingNode</definition>
        <argsstring>(void) const </argsstring>
        <name>GetPriorSiblingNode</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" line="68" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" bodystart="261" bodyend="281"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" line="41" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/Hierarchy.h" bodystart="41" bodyend="69"/>
    <listofallmembers>
      <member refid="classid_hierarchy_1a48d9115e1dc006806da867c6eed0f9a4" prot="private" virt="non-virtual"><scope>idHierarchy</scope><name>child</name></member>
      <member refid="classid_hierarchy_1a476ce2856adb3581d0318c70ccbcee06" prot="public" virt="non-virtual"><scope>idHierarchy</scope><name>GetChild</name></member>
      <member refid="classid_hierarchy_1aab0422d1be70bda4bdb6ce71074e88f3" prot="public" virt="non-virtual"><scope>idHierarchy</scope><name>GetNext</name></member>
      <member refid="classid_hierarchy_1a28de2b5d7b6df09973da32d8fc5bc119" prot="public" virt="non-virtual"><scope>idHierarchy</scope><name>GetNextLeaf</name></member>
      <member refid="classid_hierarchy_1a8a25e83dc4a51dff8f295b14cba9f262" prot="public" virt="non-virtual"><scope>idHierarchy</scope><name>GetParent</name></member>
      <member refid="classid_hierarchy_1a0d98722c10b95ae79a64c7afda7e6487" prot="public" virt="non-virtual"><scope>idHierarchy</scope><name>GetPriorSibling</name></member>
      <member refid="classid_hierarchy_1aea98c936a8527cbf33bc9ed3fdba6627" prot="private" virt="non-virtual"><scope>idHierarchy</scope><name>GetPriorSiblingNode</name></member>
      <member refid="classid_hierarchy_1a0c096c1538daaa27d55373a38b21b810" prot="public" virt="non-virtual"><scope>idHierarchy</scope><name>GetSibling</name></member>
      <member refid="classid_hierarchy_1ace752ac4412de4227632d83ec6cc889a" prot="public" virt="non-virtual"><scope>idHierarchy</scope><name>idHierarchy</name></member>
      <member refid="classid_hierarchy_1a6dba21416be7d40aad852deb9e335525" prot="public" virt="non-virtual"><scope>idHierarchy</scope><name>MakeSiblingAfter</name></member>
      <member refid="classid_hierarchy_1a6d23c212996ad25b912402d427e3f682" prot="public" virt="non-virtual"><scope>idHierarchy</scope><name>Owner</name></member>
      <member refid="classid_hierarchy_1a89e8192f7034be51db1d5813ff9c4299" prot="private" virt="non-virtual"><scope>idHierarchy</scope><name>owner</name></member>
      <member refid="classid_hierarchy_1a8b051bfd8920a20edf2e02782e36876b" prot="private" virt="non-virtual"><scope>idHierarchy</scope><name>parent</name></member>
      <member refid="classid_hierarchy_1ae50f42646ca604675a6385c037ed639b" prot="public" virt="non-virtual"><scope>idHierarchy</scope><name>ParentedBy</name></member>
      <member refid="classid_hierarchy_1afa57a9a84fe414e01259612aa6c4cd84" prot="public" virt="non-virtual"><scope>idHierarchy</scope><name>ParentTo</name></member>
      <member refid="classid_hierarchy_1aabd2e793845578b856c2523af0e973a2" prot="public" virt="non-virtual"><scope>idHierarchy</scope><name>RemoveFromHierarchy</name></member>
      <member refid="classid_hierarchy_1a442d9d6b8a8ff1d2b18507e6c9c5ccd2" prot="public" virt="non-virtual"><scope>idHierarchy</scope><name>RemoveFromParent</name></member>
      <member refid="classid_hierarchy_1a8aaa12c2aba324f4f7f3719fcdff8e61" prot="public" virt="non-virtual"><scope>idHierarchy</scope><name>SetOwner</name></member>
      <member refid="classid_hierarchy_1ad7208633f058cd07d60f2d2739d375ab" prot="private" virt="non-virtual"><scope>idHierarchy</scope><name>sibling</name></member>
      <member refid="classid_hierarchy_1a1d5febd21046186e40501449cb84dafd" prot="public" virt="non-virtual"><scope>idHierarchy</scope><name>~idHierarchy</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
