<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_joint_mat" kind="class" prot="public">
    <compoundname>idJointMat</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classid_joint_mat_1a4e1958361822e645e1c098a2160a7e1e" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idJointMat::mat[3 *4]</definition>
        <argsstring>[3 *4]</argsstring>
        <name>mat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" line="87" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_joint_mat_1ae33cff9f174bbbe48015b15743099aea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idJointMat::SetRotation</definition>
        <argsstring>(const idMat3 &amp;m)</argsstring>
        <name>SetRotation</name>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" line="66" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" bodystart="90" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classid_joint_mat_1aa8576235cbcf18d8fc791f03839c101a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idJointMat::SetTranslation</definition>
        <argsstring>(const idVec3 &amp;t)</argsstring>
        <name>SetTranslation</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" line="67" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" bodystart="103" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classid_joint_mat_1aa8964455390a842a8ecef0412875c2c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>ID_INLINE idVec3 idJointMat::operator*</definition>
        <argsstring>(const idVec3 &amp;v) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" line="69" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" bodystart="109" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classid_joint_mat_1a852bcc037e2b2b9c8a9663b981425f4c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>ID_INLINE idVec3 idJointMat::operator*</definition>
        <argsstring>(const idVec4 &amp;v) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" line="70" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" bodystart="115" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classid_joint_mat_1aa84d9bcc2fae4a3fb9ea17bb9e753b08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_joint_mat" kindref="compound">idJointMat</ref> &amp;</type>
        <definition>ID_INLINE idJointMat &amp; idJointMat::operator*=</definition>
        <argsstring>(const idJointMat &amp;a)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classid_joint_mat" kindref="compound">idJointMat</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" line="72" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" bodystart="121" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classid_joint_mat_1a12396f3c40bdd819f23b931b288237be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_joint_mat" kindref="compound">idJointMat</ref> &amp;</type>
        <definition>ID_INLINE idJointMat &amp; idJointMat::operator/=</definition>
        <argsstring>(const idJointMat &amp;a)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const <ref refid="classid_joint_mat" kindref="compound">idJointMat</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" line="73" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" bodystart="159" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classid_joint_mat_1aa8f61655f816746f6b637726b8cc0367" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idJointMat::Compare</definition>
        <argsstring>(const idJointMat &amp;a) const </argsstring>
        <name>Compare</name>
        <param>
          <type>const <ref refid="classid_joint_mat" kindref="compound">idJointMat</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" line="75" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" bodystart="197" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classid_joint_mat_1a5b9a8fddfeb3612e4f95bdadc7c5756c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idJointMat::Compare</definition>
        <argsstring>(const idJointMat &amp;a, const float epsilon) const </argsstring>
        <name>Compare</name>
        <param>
          <type>const <ref refid="classid_joint_mat" kindref="compound">idJointMat</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" line="76" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" bodystart="208" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classid_joint_mat_1a6a9e5c9e94c16468918bf8ac7d902150" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idJointMat::operator==</definition>
        <argsstring>(const idJointMat &amp;a) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classid_joint_mat" kindref="compound">idJointMat</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" line="77" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" bodystart="219" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classid_joint_mat_1a909c9a99f3ef55f24b09bc8bc6fdc522" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idJointMat::operator!=</definition>
        <argsstring>(const idJointMat &amp;a) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classid_joint_mat" kindref="compound">idJointMat</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" line="78" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" bodystart="223" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classid_joint_mat_1a86692c7622707720057f523ca392d938" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat3" kindref="compound">idMat3</ref></type>
        <definition>ID_INLINE idMat3 idJointMat::ToMat3</definition>
        <argsstring>(void) const </argsstring>
        <name>ToMat3</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" line="80" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" bodystart="227" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classid_joint_mat_1af96f9b4e3b4888672c48a4c4e60ad2ea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>ID_INLINE idVec3 idJointMat::ToVec3</definition>
        <argsstring>(void) const </argsstring>
        <name>ToVec3</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" line="81" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" bodystart="233" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classid_joint_mat_1a3e52bd95fb1658fb73a367f0bc54be80" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_joint_quat" kindref="compound">idJointQuat</ref></type>
        <definition>idJointQuat idJointMat::ToJointQuat</definition>
        <argsstring>(void) const </argsstring>
        <name>ToJointQuat</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" line="82" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.cpp" bodystart="38" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classid_joint_mat_1aae57f8a27a06e5091e044a21bbae1962" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float *</type>
        <definition>ID_INLINE const float * idJointMat::ToFloatPtr</definition>
        <argsstring>(void) const </argsstring>
        <name>ToFloatPtr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" line="83" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" bodystart="237" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classid_joint_mat_1a7e30d33af0840f5142ec9b6652006bad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float *</type>
        <definition>ID_INLINE float * idJointMat::ToFloatPtr</definition>
        <argsstring>(void)</argsstring>
        <name>ToFloatPtr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" line="84" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" bodystart="241" bodyend="243"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" line="63" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/JointTransform.h" bodystart="63" bodyend="88"/>
    <listofallmembers>
      <member refid="classid_joint_mat_1aa8f61655f816746f6b637726b8cc0367" prot="public" virt="non-virtual"><scope>idJointMat</scope><name>Compare</name></member>
      <member refid="classid_joint_mat_1a5b9a8fddfeb3612e4f95bdadc7c5756c" prot="public" virt="non-virtual"><scope>idJointMat</scope><name>Compare</name></member>
      <member refid="classid_joint_mat_1a4e1958361822e645e1c098a2160a7e1e" prot="private" virt="non-virtual"><scope>idJointMat</scope><name>mat</name></member>
      <member refid="classid_joint_mat_1a909c9a99f3ef55f24b09bc8bc6fdc522" prot="public" virt="non-virtual"><scope>idJointMat</scope><name>operator!=</name></member>
      <member refid="classid_joint_mat_1aa8964455390a842a8ecef0412875c2c4" prot="public" virt="non-virtual"><scope>idJointMat</scope><name>operator*</name></member>
      <member refid="classid_joint_mat_1a852bcc037e2b2b9c8a9663b981425f4c" prot="public" virt="non-virtual"><scope>idJointMat</scope><name>operator*</name></member>
      <member refid="classid_joint_mat_1aa84d9bcc2fae4a3fb9ea17bb9e753b08" prot="public" virt="non-virtual"><scope>idJointMat</scope><name>operator*=</name></member>
      <member refid="classid_joint_mat_1a12396f3c40bdd819f23b931b288237be" prot="public" virt="non-virtual"><scope>idJointMat</scope><name>operator/=</name></member>
      <member refid="classid_joint_mat_1a6a9e5c9e94c16468918bf8ac7d902150" prot="public" virt="non-virtual"><scope>idJointMat</scope><name>operator==</name></member>
      <member refid="classid_joint_mat_1ae33cff9f174bbbe48015b15743099aea" prot="public" virt="non-virtual"><scope>idJointMat</scope><name>SetRotation</name></member>
      <member refid="classid_joint_mat_1aa8576235cbcf18d8fc791f03839c101a" prot="public" virt="non-virtual"><scope>idJointMat</scope><name>SetTranslation</name></member>
      <member refid="classid_joint_mat_1aae57f8a27a06e5091e044a21bbae1962" prot="public" virt="non-virtual"><scope>idJointMat</scope><name>ToFloatPtr</name></member>
      <member refid="classid_joint_mat_1a7e30d33af0840f5142ec9b6652006bad" prot="public" virt="non-virtual"><scope>idJointMat</scope><name>ToFloatPtr</name></member>
      <member refid="classid_joint_mat_1a3e52bd95fb1658fb73a367f0bc54be80" prot="public" virt="non-virtual"><scope>idJointMat</scope><name>ToJointQuat</name></member>
      <member refid="classid_joint_mat_1a86692c7622707720057f523ca392d938" prot="public" virt="non-virtual"><scope>idJointMat</scope><name>ToMat3</name></member>
      <member refid="classid_joint_mat_1af96f9b4e3b4888672c48a4c4e60ad2ea" prot="public" virt="non-virtual"><scope>idJointMat</scope><name>ToVec3</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
