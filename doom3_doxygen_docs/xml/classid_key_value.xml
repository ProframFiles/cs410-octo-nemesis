<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_key_value" kind="class" prot="public">
    <compoundname>idKeyValue</compoundname>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classid_key_value_1a0cc40d58b2801ee72963ef5b07dce10a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class idDict</definition>
        <argsstring></argsstring>
        <name>idDict</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="49" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classid_key_value_1afca66ca4eaf3c82bc42e0337246b56df" prot="private" static="no" mutable="no">
        <type>const <ref refid="classid_pool_str" kindref="compound">idPoolStr</ref> *</type>
        <definition>const idPoolStr* idKeyValue::key</definition>
        <argsstring></argsstring>
        <name>key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="61" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_key_value_1ad497d891921165fa6b1b9624e0abf77f" prot="private" static="no" mutable="no">
        <type>const <ref refid="classid_pool_str" kindref="compound">idPoolStr</ref> *</type>
        <definition>const idPoolStr* idKeyValue::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="62" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_key_value_1a41ef41bbf0b14df475859e936f5866bf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
        <definition>const idStr&amp; idKeyValue::GetKey</definition>
        <argsstring>(void) const </argsstring>
        <name>GetKey</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="52" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classid_key_value_1ac6e734be3ea9aea9321b41face8987ef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
        <definition>const idStr&amp; idKeyValue::GetValue</definition>
        <argsstring>(void) const </argsstring>
        <name>GetValue</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="53" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classid_key_value_1a64ce5f32e8c3f8f8069e9f7ba985ecd9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t idKeyValue::Allocated</definition>
        <argsstring>(void) const </argsstring>
        <name>Allocated</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="55" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classid_key_value_1a00535acea19bdc3826aa3e789cf17915" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t idKeyValue::Size</definition>
        <argsstring>(void) const </argsstring>
        <name>Size</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="56" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classid_key_value_1adbc90a72c9ae9fec9925aada5fe7cb7a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idKeyValue::operator==</definition>
        <argsstring>(const idKeyValue &amp;kv) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classid_key_value" kindref="compound">idKeyValue</ref> &amp;</type>
          <declname>kv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="58" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="58" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" line="48" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Dict.h" bodystart="48" bodyend="63"/>
    <listofallmembers>
      <member refid="classid_key_value_1a64ce5f32e8c3f8f8069e9f7ba985ecd9" prot="public" virt="non-virtual"><scope>idKeyValue</scope><name>Allocated</name></member>
      <member refid="classid_key_value_1a41ef41bbf0b14df475859e936f5866bf" prot="public" virt="non-virtual"><scope>idKeyValue</scope><name>GetKey</name></member>
      <member refid="classid_key_value_1ac6e734be3ea9aea9321b41face8987ef" prot="public" virt="non-virtual"><scope>idKeyValue</scope><name>GetValue</name></member>
      <member refid="classid_key_value_1a0cc40d58b2801ee72963ef5b07dce10a" prot="private" virt="non-virtual"><scope>idKeyValue</scope><name>idDict</name></member>
      <member refid="classid_key_value_1afca66ca4eaf3c82bc42e0337246b56df" prot="private" virt="non-virtual"><scope>idKeyValue</scope><name>key</name></member>
      <member refid="classid_key_value_1adbc90a72c9ae9fec9925aada5fe7cb7a" prot="public" virt="non-virtual"><scope>idKeyValue</scope><name>operator==</name></member>
      <member refid="classid_key_value_1a00535acea19bdc3826aa3e789cf17915" prot="public" virt="non-virtual"><scope>idKeyValue</scope><name>Size</name></member>
      <member refid="classid_key_value_1ad497d891921165fa6b1b9624e0abf77f" prot="private" virt="non-virtual"><scope>idKeyValue</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
