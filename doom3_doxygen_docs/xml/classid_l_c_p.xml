<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_l_c_p" kind="class" prot="public" abstract="yes">
    <compoundname>idLCP</compoundname>
    <derivedcompoundref refid="classid_l_c_p___square" prot="public" virt="non-virtual">idLCP_Square</derivedcompoundref>
    <derivedcompoundref refid="classid_l_c_p___symmetric" prot="public" virt="non-virtual">idLCP_Symmetric</derivedcompoundref>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classid_l_c_p_1adb187bb98c2f416f062419b2f69b3b94" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int idLCP::maxIterations</definition>
        <argsstring></argsstring>
        <name>maxIterations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.h" line="74" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classid_l_c_p_1a159c82f9478c7600a1be50b318321824" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_l_c_p" kindref="compound">idLCP</ref> *</type>
        <definition>idLCP * idLCP::AllocSquare</definition>
        <argsstring>(void)</argsstring>
        <name>AllocSquare</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.h" line="64" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="1603" bodyend="1607"/>
      </memberdef>
      <memberdef kind="function" id="classid_l_c_p_1ae97b2efa6822f53e57deddf824880bf7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_l_c_p" kindref="compound">idLCP</ref> *</type>
        <definition>idLCP * idLCP::AllocSymmetric</definition>
        <argsstring>(void)</argsstring>
        <name>AllocSymmetric</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.h" line="65" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="1614" bodyend="1618"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_l_c_p_1a98cb74df91efb6fde31b5f74addb0997" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>idLCP::~idLCP</definition>
        <argsstring>(void)</argsstring>
        <name>~idLCP</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.h" line="67" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="1625" bodyend="1626"/>
      </memberdef>
      <memberdef kind="function" id="classid_l_c_p_1aeefb5f203149af6c1ef89fc341988d93" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool idLCP::Solve</definition>
        <argsstring>(const idMatX &amp;A, idVecX &amp;x, const idVecX &amp;b, const idVecX &amp;lo, const idVecX &amp;hi, const int *boxIndex=NULL)=0</argsstring>
        <name>Solve</name>
        <reimplementedby refid="classid_l_c_p___square_1a73e7b268aa847d9ac329bd878b975bd4">Solve</reimplementedby>
        <reimplementedby refid="classid_l_c_p___symmetric_1a2e550c3747f244d699fec6fdde8b921b">Solve</reimplementedby>
        <param>
          <type>const <ref refid="classid_mat_x" kindref="compound">idMatX</ref> &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>lo</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>hi</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>boxIndex</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_l_c_p_1a89f2585971c5bcdbe81e079c7ffe8ccb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idLCP::SetMaxIterations</definition>
        <argsstring>(int max)</argsstring>
        <name>SetMaxIterations</name>
        <param>
          <type>int</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.h" line="70" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="1633" bodyend="1635"/>
      </memberdef>
      <memberdef kind="function" id="classid_l_c_p_1ab9ed6bc1c8f9c370cd19d854f87b883d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idLCP::GetMaxIterations</definition>
        <argsstring>(void)</argsstring>
        <name>GetMaxIterations</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.h" line="71" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="1642" bodyend="1644"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="25129">
        <label>idLCP_Square</label>
        <link refid="classid_l_c_p___square"/>
        <childnode refid="25128" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25130">
        <label>idLCP_Symmetric</label>
        <link refid="classid_l_c_p___symmetric"/>
        <childnode refid="25128" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25128">
        <label>idLCP</label>
        <link refid="classid_l_c_p"/>
      </node>
    </inheritancegraph>
    <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.h" line="62" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.h" bodystart="62" bodyend="75"/>
    <listofallmembers>
      <member refid="classid_l_c_p_1a159c82f9478c7600a1be50b318321824" prot="public" virt="non-virtual"><scope>idLCP</scope><name>AllocSquare</name></member>
      <member refid="classid_l_c_p_1ae97b2efa6822f53e57deddf824880bf7" prot="public" virt="non-virtual"><scope>idLCP</scope><name>AllocSymmetric</name></member>
      <member refid="classid_l_c_p_1ab9ed6bc1c8f9c370cd19d854f87b883d" prot="public" virt="virtual"><scope>idLCP</scope><name>GetMaxIterations</name></member>
      <member refid="classid_l_c_p_1adb187bb98c2f416f062419b2f69b3b94" prot="protected" virt="non-virtual"><scope>idLCP</scope><name>maxIterations</name></member>
      <member refid="classid_l_c_p_1a89f2585971c5bcdbe81e079c7ffe8ccb" prot="public" virt="virtual"><scope>idLCP</scope><name>SetMaxIterations</name></member>
      <member refid="classid_l_c_p_1aeefb5f203149af6c1ef89fc341988d93" prot="public" virt="pure-virtual"><scope>idLCP</scope><name>Solve</name></member>
      <member refid="classid_l_c_p_1a98cb74df91efb6fde31b5f74addb0997" prot="public" virt="virtual"><scope>idLCP</scope><name>~idLCP</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
