<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_l_c_p___square" kind="class" prot="public">
    <compoundname>idLCP_Square</compoundname>
    <basecompoundref refid="classid_l_c_p" prot="public" virt="non-virtual">idLCP</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classid_l_c_p___square_1a5aa0005e4fc26c7e6582b691937c33b9" prot="private" static="no" mutable="no">
        <type><ref refid="classid_mat_x" kindref="compound">idMatX</ref></type>
        <definition>idMatX idLCP_Square::m</definition>
        <argsstring></argsstring>
        <name>m</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="52" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___square_1aaa9f657009c42eee082596a1838dbd36" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
        <definition>idVecX idLCP_Square::b</definition>
        <argsstring></argsstring>
        <name>b</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="53" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___square_1a724176a53de2d65729dee92ecbeced32" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
        <definition>idVecX idLCP_Square::lo</definition>
        <argsstring></argsstring>
        <name>lo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="54" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___square_1a186675bbf1c116b9af835c28820c201e" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
        <definition>idVecX idLCP_Square::hi</definition>
        <argsstring></argsstring>
        <name>hi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="54" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___square_1a1da84a68b1943ec9e7378fcd9ca7a023" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
        <definition>idVecX idLCP_Square::f</definition>
        <argsstring></argsstring>
        <name>f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="55" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___square_1a9f0d42db6dfcb765181305838c659192" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
        <definition>idVecX idLCP_Square::a</definition>
        <argsstring></argsstring>
        <name>a</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="55" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___square_1a6d919143f35a4607c88b6c114d8c5906" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
        <definition>idVecX idLCP_Square::delta_f</definition>
        <argsstring></argsstring>
        <name>delta_f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="56" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___square_1a95a8b3f42a0dc77b367f6afb4b9495ae" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
        <definition>idVecX idLCP_Square::delta_a</definition>
        <argsstring></argsstring>
        <name>delta_a</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="56" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___square_1a2f19ea5caa532d5dc3b26aa5c9c0ebdf" prot="private" static="no" mutable="no">
        <type><ref refid="classid_mat_x" kindref="compound">idMatX</ref></type>
        <definition>idMatX idLCP_Square::clamped</definition>
        <argsstring></argsstring>
        <name>clamped</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="57" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___square_1a18b5930594b8c741440739f92f88d993" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
        <definition>idVecX idLCP_Square::diagonal</definition>
        <argsstring></argsstring>
        <name>diagonal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="58" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___square_1a5581af0aac9fc1dba6cafcb1f051d84b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idLCP_Square::numUnbounded</definition>
        <argsstring></argsstring>
        <name>numUnbounded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="59" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___square_1a4173baa3e4c9a331638d1714033664ad" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idLCP_Square::numClamped</definition>
        <argsstring></argsstring>
        <name>numClamped</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="60" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___square_1a78d01cf774417e6eddb02e52c4342c26" prot="private" static="no" mutable="no">
        <type>float **</type>
        <definition>float** idLCP_Square::rowPtrs</definition>
        <argsstring></argsstring>
        <name>rowPtrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="61" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___square_1a9c3c07adc5f384a55a72dd0e6d4d78bb" prot="private" static="no" mutable="no">
        <type>int *</type>
        <definition>int* idLCP_Square::boxIndex</definition>
        <argsstring></argsstring>
        <name>boxIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="62" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___square_1a86a334fc8f081210c0f03a25e868df0b" prot="private" static="no" mutable="no">
        <type>int *</type>
        <definition>int* idLCP_Square::side</definition>
        <argsstring></argsstring>
        <name>side</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="63" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___square_1ae37cb3ff3d0d527e8092b655ab93c9b0" prot="private" static="no" mutable="no">
        <type>int *</type>
        <definition>int* idLCP_Square::permuted</definition>
        <argsstring></argsstring>
        <name>permuted</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="64" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___square_1a5a2ec1625706cb9dbd182a216db45bc0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idLCP_Square::padded</definition>
        <argsstring></argsstring>
        <name>padded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="65" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_l_c_p___square_1a73e7b268aa847d9ac329bd878b975bd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool idLCP_Square::Solve</definition>
        <argsstring>(const idMatX &amp;o_m, idVecX &amp;o_x, const idVecX &amp;o_b, const idVecX &amp;o_lo, const idVecX &amp;o_hi, const int *o_boxIndex)</argsstring>
        <name>Solve</name>
        <reimplements refid="classid_l_c_p_1aeefb5f203149af6c1ef89fc341988d93">Solve</reimplements>
        <param>
          <type>const <ref refid="classid_mat_x" kindref="compound">idMatX</ref> &amp;</type>
          <declname>o_m</declname>
        </param>
        <param>
          <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>o_x</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>o_b</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>o_lo</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>o_hi</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>o_boxIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="49" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="507" bodyend="795"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classid_l_c_p___square_1afb938e8551d6a5b9617a8cef778d4624" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idLCP_Square::FactorClamped</definition>
        <argsstring>(void)</argsstring>
        <name>FactorClamped</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="68" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="85" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classid_l_c_p___square_1afc16a41cc8e0df149df3624007c2d39b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idLCP_Square::SolveClamped</definition>
        <argsstring>(idVecX &amp;x, const float *b)</argsstring>
        <name>SolveClamped</name>
        <param>
          <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="69" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="122" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classid_l_c_p___square_1a1843858141ed5aa88d7d5b79c0a0fe87" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idLCP_Square::Swap</definition>
        <argsstring>(int i, int j)</argsstring>
        <name>Swap</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="70" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="150" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classid_l_c_p___square_1a18168a78664ce3db4462befbbb323104" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idLCP_Square::AddClamped</definition>
        <argsstring>(int r)</argsstring>
        <name>AddClamped</name>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="71" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="175" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classid_l_c_p___square_1a2683a6871931ccbab17334ffe7068f48" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idLCP_Square::RemoveClamped</definition>
        <argsstring>(int r)</argsstring>
        <name>RemoveClamped</name>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="72" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="214" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="classid_l_c_p___square_1a3ea3206dd3aed1fa3596f0e86e3de07e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idLCP_Square::CalcForceDelta</definition>
        <argsstring>(int d, float dir)</argsstring>
        <name>CalcForceDelta</name>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <param>
          <type>float</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="73" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="342" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="classid_l_c_p___square_1a7f4abe7ea30e17cea326c2ffc1fca455" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idLCP_Square::CalcAccelDelta</definition>
        <argsstring>(int d)</argsstring>
        <name>CalcAccelDelta</name>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="74" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="377" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="classid_l_c_p___square_1a6b1f669ec586b61389de68782cdf4e87" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idLCP_Square::ChangeForce</definition>
        <argsstring>(int d, float step)</argsstring>
        <name>ChangeForce</name>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <param>
          <type>float</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="75" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="396" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="classid_l_c_p___square_1a324bbfe8fe3fed9d78d5663babc82262" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idLCP_Square::ChangeAccel</definition>
        <argsstring>(int d, float step)</argsstring>
        <name>ChangeAccel</name>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <param>
          <type>float</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="76" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="409" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="classid_l_c_p___square_1a8d666553e0c0eb24e66f30c5ea092a62" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idLCP_Square::GetMaxStep</definition>
        <argsstring>(int d, float dir, float &amp;maxStep, int &amp;limit, int &amp;limitSide) const </argsstring>
        <name>GetMaxStep</name>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <param>
          <type>float</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>maxStep</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>limit</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>limitSide</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="77" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="419" bodyend="500"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="25132">
        <label>idLCP_Square</label>
        <link refid="classid_l_c_p___square"/>
        <childnode refid="25133" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25133">
        <label>idLCP</label>
        <link refid="classid_l_c_p"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="25134">
        <label>idLCP_Square</label>
        <link refid="classid_l_c_p___square"/>
        <childnode refid="25135" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25135">
        <label>idLCP</label>
        <link refid="classid_l_c_p"/>
      </node>
    </collaborationgraph>
    <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="47" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="47" bodyend="78"/>
    <listofallmembers>
      <member refid="classid_l_c_p___square_1a9f0d42db6dfcb765181305838c659192" prot="private" virt="non-virtual"><scope>idLCP_Square</scope><name>a</name></member>
      <member refid="classid_l_c_p___square_1a18168a78664ce3db4462befbbb323104" prot="private" virt="non-virtual"><scope>idLCP_Square</scope><name>AddClamped</name></member>
      <member refid="classid_l_c_p_1a159c82f9478c7600a1be50b318321824" prot="public" virt="non-virtual"><scope>idLCP_Square</scope><name>AllocSquare</name></member>
      <member refid="classid_l_c_p_1ae97b2efa6822f53e57deddf824880bf7" prot="public" virt="non-virtual"><scope>idLCP_Square</scope><name>AllocSymmetric</name></member>
      <member refid="classid_l_c_p___square_1aaa9f657009c42eee082596a1838dbd36" prot="private" virt="non-virtual"><scope>idLCP_Square</scope><name>b</name></member>
      <member refid="classid_l_c_p___square_1a9c3c07adc5f384a55a72dd0e6d4d78bb" prot="private" virt="non-virtual"><scope>idLCP_Square</scope><name>boxIndex</name></member>
      <member refid="classid_l_c_p___square_1a7f4abe7ea30e17cea326c2ffc1fca455" prot="private" virt="non-virtual"><scope>idLCP_Square</scope><name>CalcAccelDelta</name></member>
      <member refid="classid_l_c_p___square_1a3ea3206dd3aed1fa3596f0e86e3de07e" prot="private" virt="non-virtual"><scope>idLCP_Square</scope><name>CalcForceDelta</name></member>
      <member refid="classid_l_c_p___square_1a324bbfe8fe3fed9d78d5663babc82262" prot="private" virt="non-virtual"><scope>idLCP_Square</scope><name>ChangeAccel</name></member>
      <member refid="classid_l_c_p___square_1a6b1f669ec586b61389de68782cdf4e87" prot="private" virt="non-virtual"><scope>idLCP_Square</scope><name>ChangeForce</name></member>
      <member refid="classid_l_c_p___square_1a2f19ea5caa532d5dc3b26aa5c9c0ebdf" prot="private" virt="non-virtual"><scope>idLCP_Square</scope><name>clamped</name></member>
      <member refid="classid_l_c_p___square_1a95a8b3f42a0dc77b367f6afb4b9495ae" prot="private" virt="non-virtual"><scope>idLCP_Square</scope><name>delta_a</name></member>
      <member refid="classid_l_c_p___square_1a6d919143f35a4607c88b6c114d8c5906" prot="private" virt="non-virtual"><scope>idLCP_Square</scope><name>delta_f</name></member>
      <member refid="classid_l_c_p___square_1a18b5930594b8c741440739f92f88d993" prot="private" virt="non-virtual"><scope>idLCP_Square</scope><name>diagonal</name></member>
      <member refid="classid_l_c_p___square_1a1da84a68b1943ec9e7378fcd9ca7a023" prot="private" virt="non-virtual"><scope>idLCP_Square</scope><name>f</name></member>
      <member refid="classid_l_c_p___square_1afb938e8551d6a5b9617a8cef778d4624" prot="private" virt="non-virtual"><scope>idLCP_Square</scope><name>FactorClamped</name></member>
      <member refid="classid_l_c_p_1ab9ed6bc1c8f9c370cd19d854f87b883d" prot="public" virt="virtual"><scope>idLCP_Square</scope><name>GetMaxIterations</name></member>
      <member refid="classid_l_c_p___square_1a8d666553e0c0eb24e66f30c5ea092a62" prot="private" virt="non-virtual"><scope>idLCP_Square</scope><name>GetMaxStep</name></member>
      <member refid="classid_l_c_p___square_1a186675bbf1c116b9af835c28820c201e" prot="private" virt="non-virtual"><scope>idLCP_Square</scope><name>hi</name></member>
      <member refid="classid_l_c_p___square_1a724176a53de2d65729dee92ecbeced32" prot="private" virt="non-virtual"><scope>idLCP_Square</scope><name>lo</name></member>
      <member refid="classid_l_c_p___square_1a5aa0005e4fc26c7e6582b691937c33b9" prot="private" virt="non-virtual"><scope>idLCP_Square</scope><name>m</name></member>
      <member refid="classid_l_c_p_1adb187bb98c2f416f062419b2f69b3b94" prot="protected" virt="non-virtual"><scope>idLCP_Square</scope><name>maxIterations</name></member>
      <member refid="classid_l_c_p___square_1a4173baa3e4c9a331638d1714033664ad" prot="private" virt="non-virtual"><scope>idLCP_Square</scope><name>numClamped</name></member>
      <member refid="classid_l_c_p___square_1a5581af0aac9fc1dba6cafcb1f051d84b" prot="private" virt="non-virtual"><scope>idLCP_Square</scope><name>numUnbounded</name></member>
      <member refid="classid_l_c_p___square_1a5a2ec1625706cb9dbd182a216db45bc0" prot="private" virt="non-virtual"><scope>idLCP_Square</scope><name>padded</name></member>
      <member refid="classid_l_c_p___square_1ae37cb3ff3d0d527e8092b655ab93c9b0" prot="private" virt="non-virtual"><scope>idLCP_Square</scope><name>permuted</name></member>
      <member refid="classid_l_c_p___square_1a2683a6871931ccbab17334ffe7068f48" prot="private" virt="non-virtual"><scope>idLCP_Square</scope><name>RemoveClamped</name></member>
      <member refid="classid_l_c_p___square_1a78d01cf774417e6eddb02e52c4342c26" prot="private" virt="non-virtual"><scope>idLCP_Square</scope><name>rowPtrs</name></member>
      <member refid="classid_l_c_p_1a89f2585971c5bcdbe81e079c7ffe8ccb" prot="public" virt="virtual"><scope>idLCP_Square</scope><name>SetMaxIterations</name></member>
      <member refid="classid_l_c_p___square_1a86a334fc8f081210c0f03a25e868df0b" prot="private" virt="non-virtual"><scope>idLCP_Square</scope><name>side</name></member>
      <member refid="classid_l_c_p___square_1a73e7b268aa847d9ac329bd878b975bd4" prot="public" virt="virtual"><scope>idLCP_Square</scope><name>Solve</name></member>
      <member refid="classid_l_c_p___square_1afc16a41cc8e0df149df3624007c2d39b" prot="private" virt="non-virtual"><scope>idLCP_Square</scope><name>SolveClamped</name></member>
      <member refid="classid_l_c_p___square_1a1843858141ed5aa88d7d5b79c0a0fe87" prot="private" virt="non-virtual"><scope>idLCP_Square</scope><name>Swap</name></member>
      <member refid="classid_l_c_p_1a98cb74df91efb6fde31b5f74addb0997" prot="public" virt="virtual"><scope>idLCP_Square</scope><name>~idLCP</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
