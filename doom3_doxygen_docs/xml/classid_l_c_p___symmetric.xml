<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_l_c_p___symmetric" kind="class" prot="public">
    <compoundname>idLCP_Symmetric</compoundname>
    <basecompoundref refid="classid_l_c_p" prot="public" virt="non-virtual">idLCP</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classid_l_c_p___symmetric_1ae235a790d245c3f4050ee804f0c805eb" prot="private" static="no" mutable="no">
        <type><ref refid="classid_mat_x" kindref="compound">idMatX</ref></type>
        <definition>idMatX idLCP_Symmetric::m</definition>
        <argsstring></argsstring>
        <name>m</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="809" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="809" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___symmetric_1ad5a0dad05c662e0b73228a059cc13157" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
        <definition>idVecX idLCP_Symmetric::b</definition>
        <argsstring></argsstring>
        <name>b</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="810" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="810" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___symmetric_1ac776436c3bfc93a329e214e568d1ef80" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
        <definition>idVecX idLCP_Symmetric::lo</definition>
        <argsstring></argsstring>
        <name>lo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="811" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="811" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___symmetric_1ae236cd2aba1b17171bf0b88299430b0a" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
        <definition>idVecX idLCP_Symmetric::hi</definition>
        <argsstring></argsstring>
        <name>hi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="811" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="811" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___symmetric_1ad9719ad9a59cadbd4a4aac46df2eafc4" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
        <definition>idVecX idLCP_Symmetric::f</definition>
        <argsstring></argsstring>
        <name>f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="812" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="812" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___symmetric_1ae32a39edebeed848d528ed2ed4ae4b43" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
        <definition>idVecX idLCP_Symmetric::a</definition>
        <argsstring></argsstring>
        <name>a</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="812" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="812" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___symmetric_1ab093b7f501d3e4326e06dbea75fbb101" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
        <definition>idVecX idLCP_Symmetric::delta_f</definition>
        <argsstring></argsstring>
        <name>delta_f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="813" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="813" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___symmetric_1a76b01d93c1f5ff944590f6b74cb36bd9" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
        <definition>idVecX idLCP_Symmetric::delta_a</definition>
        <argsstring></argsstring>
        <name>delta_a</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="813" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="813" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___symmetric_1a627b56e7bd7add0884b9b864d1d4ee8a" prot="private" static="no" mutable="no">
        <type><ref refid="classid_mat_x" kindref="compound">idMatX</ref></type>
        <definition>idMatX idLCP_Symmetric::clamped</definition>
        <argsstring></argsstring>
        <name>clamped</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="814" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="814" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___symmetric_1afdf051d203e26bbe1ffb63fbe5450bf9" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
        <definition>idVecX idLCP_Symmetric::diagonal</definition>
        <argsstring></argsstring>
        <name>diagonal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="815" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="815" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___symmetric_1a736553e9b05b6d9744bb462d9364ef8f" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
        <definition>idVecX idLCP_Symmetric::solveCache1</definition>
        <argsstring></argsstring>
        <name>solveCache1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="816" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="816" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___symmetric_1a5d7cd2feb25e046ac365e8f567c5dc4b" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
        <definition>idVecX idLCP_Symmetric::solveCache2</definition>
        <argsstring></argsstring>
        <name>solveCache2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="817" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="817" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___symmetric_1a2eba816e03df9d9d9390c3fef5d999ba" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idLCP_Symmetric::numUnbounded</definition>
        <argsstring></argsstring>
        <name>numUnbounded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="818" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="818" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___symmetric_1a8b2120f37d269fe8612348141d9b1f39" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idLCP_Symmetric::numClamped</definition>
        <argsstring></argsstring>
        <name>numClamped</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="819" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="819" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___symmetric_1ade08cef3c8b58d94c9c668cd750cc64d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idLCP_Symmetric::clampedChangeStart</definition>
        <argsstring></argsstring>
        <name>clampedChangeStart</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="820" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="820" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___symmetric_1a2ef680e8d20171a0e6b94d83e99c08c0" prot="private" static="no" mutable="no">
        <type>float **</type>
        <definition>float** idLCP_Symmetric::rowPtrs</definition>
        <argsstring></argsstring>
        <name>rowPtrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="821" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="821" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___symmetric_1a51a33ce5ea9f9b2cf983eecc7eb01f5b" prot="private" static="no" mutable="no">
        <type>int *</type>
        <definition>int* idLCP_Symmetric::boxIndex</definition>
        <argsstring></argsstring>
        <name>boxIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="822" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="822" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___symmetric_1aa7c04facfe25e012fca2a5144883d63e" prot="private" static="no" mutable="no">
        <type>int *</type>
        <definition>int* idLCP_Symmetric::side</definition>
        <argsstring></argsstring>
        <name>side</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="823" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="823" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___symmetric_1aff96b9a3cbe1afc71c7da8cd801158a8" prot="private" static="no" mutable="no">
        <type>int *</type>
        <definition>int* idLCP_Symmetric::permuted</definition>
        <argsstring></argsstring>
        <name>permuted</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="824" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="824" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_l_c_p___symmetric_1ae530667ff1d52ffdb4a2ce597581b0bd" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idLCP_Symmetric::padded</definition>
        <argsstring></argsstring>
        <name>padded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="825" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="825" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_l_c_p___symmetric_1a2e550c3747f244d699fec6fdde8b921b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool idLCP_Symmetric::Solve</definition>
        <argsstring>(const idMatX &amp;o_m, idVecX &amp;o_x, const idVecX &amp;o_b, const idVecX &amp;o_lo, const idVecX &amp;o_hi, const int *o_boxIndex)</argsstring>
        <name>Solve</name>
        <reimplements refid="classid_l_c_p_1aeefb5f203149af6c1ef89fc341988d93">Solve</reimplements>
        <param>
          <type>const <ref refid="classid_mat_x" kindref="compound">idMatX</ref> &amp;</type>
          <declname>o_m</declname>
        </param>
        <param>
          <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>o_x</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>o_b</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>o_lo</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>o_hi</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>o_boxIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="806" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="1297" bodyend="1589"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classid_l_c_p___symmetric_1a38b7889e6a7f6d2c0782d93761aa41c8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idLCP_Symmetric::FactorClamped</definition>
        <argsstring>(void)</argsstring>
        <name>FactorClamped</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="828" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="845" bodyend="853"/>
      </memberdef>
      <memberdef kind="function" id="classid_l_c_p___symmetric_1ae58d2aba2b42f9348afde1d954c67055" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idLCP_Symmetric::SolveClamped</definition>
        <argsstring>(idVecX &amp;x, const float *b)</argsstring>
        <name>SolveClamped</name>
        <param>
          <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="829" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="860" bodyend="872"/>
      </memberdef>
      <memberdef kind="function" id="classid_l_c_p___symmetric_1a7e5864261fdeb9c916cd5f368b46f7f5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idLCP_Symmetric::Swap</definition>
        <argsstring>(int i, int j)</argsstring>
        <name>Swap</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="830" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="879" bodyend="897"/>
      </memberdef>
      <memberdef kind="function" id="classid_l_c_p___symmetric_1a9432dc4d669398b3a5b23c29e6b0ff53" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idLCP_Symmetric::AddClamped</definition>
        <argsstring>(int r, bool useSolveCache)</argsstring>
        <name>AddClamped</name>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>useSolveCache</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="831" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="904" bodyend="950"/>
      </memberdef>
      <memberdef kind="function" id="classid_l_c_p___symmetric_1ab21f40ce64a3d44a52b9c18ea5f162ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idLCP_Symmetric::RemoveClamped</definition>
        <argsstring>(int r)</argsstring>
        <name>RemoveClamped</name>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="832" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="957" bodyend="1129"/>
      </memberdef>
      <memberdef kind="function" id="classid_l_c_p___symmetric_1a2ea863a200d45d785db540ee873060a2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idLCP_Symmetric::CalcForceDelta</definition>
        <argsstring>(int d, float dir)</argsstring>
        <name>CalcForceDelta</name>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <param>
          <type>float</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="833" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="1138" bodyend="1158"/>
      </memberdef>
      <memberdef kind="function" id="classid_l_c_p___symmetric_1ac3b6ee82ac70c57bdf32c3fb3ff69e44" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idLCP_Symmetric::CalcAccelDelta</definition>
        <argsstring>(int d)</argsstring>
        <name>CalcAccelDelta</name>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="834" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="1167" bodyend="1177"/>
      </memberdef>
      <memberdef kind="function" id="classid_l_c_p___symmetric_1af72ec094d3b967863d7788e7a3542d16" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idLCP_Symmetric::ChangeForce</definition>
        <argsstring>(int d, float step)</argsstring>
        <name>ChangeForce</name>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <param>
          <type>float</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="835" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="1186" bodyend="1190"/>
      </memberdef>
      <memberdef kind="function" id="classid_l_c_p___symmetric_1af857bf89facce55872733e7a942a1ab5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idLCP_Symmetric::ChangeAccel</definition>
        <argsstring>(int d, float step)</argsstring>
        <name>ChangeAccel</name>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <param>
          <type>float</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="836" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="1199" bodyend="1202"/>
      </memberdef>
      <memberdef kind="function" id="classid_l_c_p___symmetric_1a1034116350a93a528b5d06ea0f72bb9d" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idLCP_Symmetric::GetMaxStep</definition>
        <argsstring>(int d, float dir, float &amp;maxStep, int &amp;limit, int &amp;limitSide) const </argsstring>
        <name>GetMaxStep</name>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <param>
          <type>float</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>maxStep</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>limit</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>limitSide</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="837" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="1209" bodyend="1290"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="25136">
        <label>idLCP_Symmetric</label>
        <link refid="classid_l_c_p___symmetric"/>
        <childnode refid="25137" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25137">
        <label>idLCP</label>
        <link refid="classid_l_c_p"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="25138">
        <label>idLCP_Symmetric</label>
        <link refid="classid_l_c_p___symmetric"/>
        <childnode refid="25139" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25139">
        <label>idLCP</label>
        <link refid="classid_l_c_p"/>
      </node>
    </collaborationgraph>
    <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" line="804" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Lcp.cpp" bodystart="804" bodyend="838"/>
    <listofallmembers>
      <member refid="classid_l_c_p___symmetric_1ae32a39edebeed848d528ed2ed4ae4b43" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>a</name></member>
      <member refid="classid_l_c_p___symmetric_1a9432dc4d669398b3a5b23c29e6b0ff53" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>AddClamped</name></member>
      <member refid="classid_l_c_p_1a159c82f9478c7600a1be50b318321824" prot="public" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>AllocSquare</name></member>
      <member refid="classid_l_c_p_1ae97b2efa6822f53e57deddf824880bf7" prot="public" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>AllocSymmetric</name></member>
      <member refid="classid_l_c_p___symmetric_1ad5a0dad05c662e0b73228a059cc13157" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>b</name></member>
      <member refid="classid_l_c_p___symmetric_1a51a33ce5ea9f9b2cf983eecc7eb01f5b" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>boxIndex</name></member>
      <member refid="classid_l_c_p___symmetric_1ac3b6ee82ac70c57bdf32c3fb3ff69e44" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>CalcAccelDelta</name></member>
      <member refid="classid_l_c_p___symmetric_1a2ea863a200d45d785db540ee873060a2" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>CalcForceDelta</name></member>
      <member refid="classid_l_c_p___symmetric_1af857bf89facce55872733e7a942a1ab5" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>ChangeAccel</name></member>
      <member refid="classid_l_c_p___symmetric_1af72ec094d3b967863d7788e7a3542d16" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>ChangeForce</name></member>
      <member refid="classid_l_c_p___symmetric_1a627b56e7bd7add0884b9b864d1d4ee8a" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>clamped</name></member>
      <member refid="classid_l_c_p___symmetric_1ade08cef3c8b58d94c9c668cd750cc64d" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>clampedChangeStart</name></member>
      <member refid="classid_l_c_p___symmetric_1a76b01d93c1f5ff944590f6b74cb36bd9" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>delta_a</name></member>
      <member refid="classid_l_c_p___symmetric_1ab093b7f501d3e4326e06dbea75fbb101" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>delta_f</name></member>
      <member refid="classid_l_c_p___symmetric_1afdf051d203e26bbe1ffb63fbe5450bf9" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>diagonal</name></member>
      <member refid="classid_l_c_p___symmetric_1ad9719ad9a59cadbd4a4aac46df2eafc4" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>f</name></member>
      <member refid="classid_l_c_p___symmetric_1a38b7889e6a7f6d2c0782d93761aa41c8" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>FactorClamped</name></member>
      <member refid="classid_l_c_p_1ab9ed6bc1c8f9c370cd19d854f87b883d" prot="public" virt="virtual"><scope>idLCP_Symmetric</scope><name>GetMaxIterations</name></member>
      <member refid="classid_l_c_p___symmetric_1a1034116350a93a528b5d06ea0f72bb9d" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>GetMaxStep</name></member>
      <member refid="classid_l_c_p___symmetric_1ae236cd2aba1b17171bf0b88299430b0a" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>hi</name></member>
      <member refid="classid_l_c_p___symmetric_1ac776436c3bfc93a329e214e568d1ef80" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>lo</name></member>
      <member refid="classid_l_c_p___symmetric_1ae235a790d245c3f4050ee804f0c805eb" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>m</name></member>
      <member refid="classid_l_c_p_1adb187bb98c2f416f062419b2f69b3b94" prot="protected" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>maxIterations</name></member>
      <member refid="classid_l_c_p___symmetric_1a8b2120f37d269fe8612348141d9b1f39" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>numClamped</name></member>
      <member refid="classid_l_c_p___symmetric_1a2eba816e03df9d9d9390c3fef5d999ba" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>numUnbounded</name></member>
      <member refid="classid_l_c_p___symmetric_1ae530667ff1d52ffdb4a2ce597581b0bd" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>padded</name></member>
      <member refid="classid_l_c_p___symmetric_1aff96b9a3cbe1afc71c7da8cd801158a8" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>permuted</name></member>
      <member refid="classid_l_c_p___symmetric_1ab21f40ce64a3d44a52b9c18ea5f162ec" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>RemoveClamped</name></member>
      <member refid="classid_l_c_p___symmetric_1a2ef680e8d20171a0e6b94d83e99c08c0" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>rowPtrs</name></member>
      <member refid="classid_l_c_p_1a89f2585971c5bcdbe81e079c7ffe8ccb" prot="public" virt="virtual"><scope>idLCP_Symmetric</scope><name>SetMaxIterations</name></member>
      <member refid="classid_l_c_p___symmetric_1aa7c04facfe25e012fca2a5144883d63e" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>side</name></member>
      <member refid="classid_l_c_p___symmetric_1a2e550c3747f244d699fec6fdde8b921b" prot="public" virt="virtual"><scope>idLCP_Symmetric</scope><name>Solve</name></member>
      <member refid="classid_l_c_p___symmetric_1a736553e9b05b6d9744bb462d9364ef8f" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>solveCache1</name></member>
      <member refid="classid_l_c_p___symmetric_1a5d7cd2feb25e046ac365e8f567c5dc4b" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>solveCache2</name></member>
      <member refid="classid_l_c_p___symmetric_1ae58d2aba2b42f9348afde1d954c67055" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>SolveClamped</name></member>
      <member refid="classid_l_c_p___symmetric_1a7e5864261fdeb9c916cd5f368b46f7f5" prot="private" virt="non-virtual"><scope>idLCP_Symmetric</scope><name>Swap</name></member>
      <member refid="classid_l_c_p_1a98cb74df91efb6fde31b5f74addb0997" prot="public" virt="virtual"><scope>idLCP_Symmetric</scope><name>~idLCP</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
