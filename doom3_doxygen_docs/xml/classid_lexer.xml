<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_lexer" kind="class" prot="public">
    <compoundname>idLexer</compoundname>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classid_lexer_1a9682571f8ada54cf7ff649d84257fb48" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class idParser</definition>
        <argsstring></argsstring>
        <name>idParser</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="139" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classid_lexer_1ac0dcce8dd7c3fa2247b4604c7be6d7be" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idLexer::loaded</definition>
        <argsstring></argsstring>
        <name>loaded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="245" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_lexer_1abbbf17ad8460f4796bbf93521317fc63" prot="private" static="no" mutable="no">
        <type><ref refid="classid_str" kindref="compound">idStr</ref></type>
        <definition>idStr idLexer::filename</definition>
        <argsstring></argsstring>
        <name>filename</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="246" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_lexer_1a3a0f546fcd705f6386fcdd4a1039f99a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idLexer::allocated</definition>
        <argsstring></argsstring>
        <name>allocated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="247" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_lexer_1aa376636cee349be01c0498f8c1d4b80b" prot="private" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* idLexer::buffer</definition>
        <argsstring></argsstring>
        <name>buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="248" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_lexer_1a6076ed8e3c43263559812da86e005ebc" prot="private" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* idLexer::script_p</definition>
        <argsstring></argsstring>
        <name>script_p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="249" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_lexer_1a60e2f89a18bfc563cfbcf6af6d96feef" prot="private" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* idLexer::end_p</definition>
        <argsstring></argsstring>
        <name>end_p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="250" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_lexer_1a896c0fcc326dc4ebdda0723479b42ed6" prot="private" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* idLexer::lastScript_p</definition>
        <argsstring></argsstring>
        <name>lastScript_p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="251" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_lexer_1a7b2f843e04321225cae3e1d2eb826904" prot="private" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* idLexer::whiteSpaceStart_p</definition>
        <argsstring></argsstring>
        <name>whiteSpaceStart_p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="252" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_lexer_1a2d1f2480e3467c35767b61bb02a8e54c" prot="private" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* idLexer::whiteSpaceEnd_p</definition>
        <argsstring></argsstring>
        <name>whiteSpaceEnd_p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="253" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_lexer_1ab0e13fd2556a95e3636c040fa189442c" prot="private" static="no" mutable="no">
        <type>ID_TIME_T</type>
        <definition>ID_TIME_T idLexer::fileTime</definition>
        <argsstring></argsstring>
        <name>fileTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="254" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_lexer_1a91906253ade172e5873776eee244803b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idLexer::length</definition>
        <argsstring></argsstring>
        <name>length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="255" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_lexer_1a483254847cb112b0197b524133d7f711" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idLexer::line</definition>
        <argsstring></argsstring>
        <name>line</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="256" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_lexer_1a0493f3da1ba9b71d33bbe79d136939ca" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idLexer::lastline</definition>
        <argsstring></argsstring>
        <name>lastline</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="257" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_lexer_1a2c8bf1126216fbe43f63348918a5c5b9" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idLexer::tokenavailable</definition>
        <argsstring></argsstring>
        <name>tokenavailable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="258" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_lexer_1abd3a79d3676fdcf3242bac9e4fbc3ec1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idLexer::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="259" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_lexer_1a49e8e327dbd019b32811ac4c315ac0cb" prot="private" static="no" mutable="no">
        <type>const <ref refid="structpunctuation__s" kindref="compound">punctuation_t</ref> *</type>
        <definition>const punctuation_t* idLexer::punctuations</definition>
        <argsstring></argsstring>
        <name>punctuations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="260" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_lexer_1ae04ed90e8065bbd08f50cc3813bcd5c0" prot="private" static="no" mutable="no">
        <type>int *</type>
        <definition>int* idLexer::punctuationtable</definition>
        <argsstring></argsstring>
        <name>punctuationtable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="261" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_lexer_1acb519e57c283c6c9f31e61affd381545" prot="private" static="no" mutable="no">
        <type>int *</type>
        <definition>int* idLexer::nextpunctuation</definition>
        <argsstring></argsstring>
        <name>nextpunctuation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="262" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_lexer_1a4ce6d90b71cc791846be89ee5e830e9a" prot="private" static="no" mutable="no">
        <type><ref refid="classid_token" kindref="compound">idToken</ref></type>
        <definition>idToken idLexer::token</definition>
        <argsstring></argsstring>
        <name>token</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="263" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_lexer_1a383ed05bfcc37f5c034f73a5104f7ebf" prot="private" static="no" mutable="no">
        <type><ref refid="classid_lexer" kindref="compound">idLexer</ref> *</type>
        <definition>idLexer* idLexer::next</definition>
        <argsstring></argsstring>
        <name>next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="264" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_lexer_1aa4e3ca8958d5fd65680e63e46e5e98b3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idLexer::hadError</definition>
        <argsstring></argsstring>
        <name>hadError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="265" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="265" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classid_lexer_1a1affc49cbf7e78a5a03e55d2aa71ddbd" prot="private" static="yes" mutable="no">
        <type>char</type>
        <definition>char idLexer::baseFolder</definition>
        <argsstring>[256]</argsstring>
        <name>baseFolder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="267" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_lexer_1ab4b01d152e2a19f3d8e78924a4fdf9c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idLexer::idLexer</definition>
        <argsstring>()</argsstring>
        <name>idLexer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="143" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1702" bodyend="1716"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a1dfa7510955f10afd11531f1d9013120" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idLexer::idLexer</definition>
        <argsstring>(int flags)</argsstring>
        <name>idLexer</name>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="144" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1723" bodyend="1737"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a0080f531b87c3edebbf2aaec184b80c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idLexer::idLexer</definition>
        <argsstring>(const char *filename, int flags=0, bool OSPath=false)</argsstring>
        <name>idLexer</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>OSPath</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="145" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1744" bodyend="1753"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1ab974f958c4a66161a272d8a9edbadafe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idLexer::idLexer</definition>
        <argsstring>(const char *ptr, int length, const char *name, int flags=0)</argsstring>
        <name>idLexer</name>
        <param>
          <type>const char *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="146" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1760" bodyend="1769"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a625098097fc8077bf94b45e60246675c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idLexer::~idLexer</definition>
        <argsstring>()</argsstring>
        <name>~idLexer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="148" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1776" bodyend="1778"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a910b144c046a797a929c4840de686fff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::LoadFile</definition>
        <argsstring>(const char *filename, bool OSPath=false)</argsstring>
        <name>LoadFile</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>OSPath</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="150" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1591" bodyend="1639"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1ab609d05f8bccb73c6ddfa77fa8ea14c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::LoadMemory</definition>
        <argsstring>(const char *ptr, int length, const char *name, int startLine=1)</argsstring>
        <name>LoadMemory</name>
        <param>
          <type>const char *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>startLine</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="154" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1646" bodyend="1669"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1affb1bfff07c8ed6537cd68aadcca2aae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idLexer::FreeSource</definition>
        <argsstring>(void)</argsstring>
        <name>FreeSource</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="156" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1676" bodyend="1695"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a5c37737bfed123f542c2d3801b67608d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::IsLoaded</definition>
        <argsstring>(void)</argsstring>
        <name>IsLoaded</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="158" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="158" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a7a35ead2358bea09ffb40df1a7ad1608" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::ReadToken</definition>
        <argsstring>(idToken *token)</argsstring>
        <name>ReadToken</name>
        <param>
          <type><ref refid="classid_token" kindref="compound">idToken</ref> *</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="160" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="820" bodyend="912"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1aee0b9eba8613b02444902c1fd7778958" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::ExpectTokenString</definition>
        <argsstring>(const char *string)</argsstring>
        <name>ExpectTokenString</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="162" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="919" bodyend="931"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a805fd5c342cbfa38f355d97e366be659" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::ExpectTokenType</definition>
        <argsstring>(int type, int subtype, idToken *token)</argsstring>
        <name>ExpectTokenType</name>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>subtype</declname>
        </param>
        <param>
          <type><ref refid="classid_token" kindref="compound">idToken</ref> *</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="164" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="938" bodyend="985"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a0674b656bad7799324b83beec004977c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::ExpectAnyToken</definition>
        <argsstring>(idToken *token)</argsstring>
        <name>ExpectAnyToken</name>
        <param>
          <type><ref refid="classid_token" kindref="compound">idToken</ref> *</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="166" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="992" bodyend="1000"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1ae7852f7afc5a45434774c99a7163fe29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::CheckTokenString</definition>
        <argsstring>(const char *string)</argsstring>
        <name>CheckTokenString</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="168" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1007" bodyend="1021"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a2aec271fec14a006b2b04cfbb4be3ff8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::CheckTokenType</definition>
        <argsstring>(int type, int subtype, idToken *token)</argsstring>
        <name>CheckTokenType</name>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>subtype</declname>
        </param>
        <param>
          <type><ref refid="classid_token" kindref="compound">idToken</ref> *</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="170" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1028" bodyend="1043"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a0649c444a3b1900e9be902f3cba5ffc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::PeekTokenString</definition>
        <argsstring>(const char *string)</argsstring>
        <name>PeekTokenString</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="172" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1050" bodyend="1066"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1aa6f28cb5b2df7bfd78aa57a121241867" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::PeekTokenType</definition>
        <argsstring>(int type, int subtype, idToken *token)</argsstring>
        <name>PeekTokenType</name>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>subtype</declname>
        </param>
        <param>
          <type><ref refid="classid_token" kindref="compound">idToken</ref> *</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="174" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1073" bodyend="1090"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a213d7922fd0cce8c9c1c5cbe625c98c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::SkipUntilString</definition>
        <argsstring>(const char *string)</argsstring>
        <name>SkipUntilString</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="176" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1097" bodyend="1106"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a93425a5379a9db366b17cbda0af0edf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::SkipRestOfLine</definition>
        <argsstring>(void)</argsstring>
        <name>SkipRestOfLine</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="178" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1113" bodyend="1124"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a576665238215d5dce80bfa88594a7cdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::SkipBracedSection</definition>
        <argsstring>(bool parseFirstBrace=true)</argsstring>
        <name>SkipBracedSection</name>
        <param>
          <type>bool</type>
          <declname>parseFirstBrace</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="180" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1134" bodyend="1152"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1ae4d1b596f8703ebb2319cd096a71fc97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idLexer::UnreadToken</definition>
        <argsstring>(const idToken *token)</argsstring>
        <name>UnreadToken</name>
        <param>
          <type>const <ref refid="classid_token" kindref="compound">idToken</ref> *</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="182" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1159" bodyend="1165"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a8f3a278d8fcab76f63d1eb5e2b862a80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::ReadTokenOnLine</definition>
        <argsstring>(idToken *token)</argsstring>
        <name>ReadTokenOnLine</name>
        <param>
          <type><ref refid="classid_token" kindref="compound">idToken</ref> *</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="184" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1172" bodyend="1190"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a8df74b69984f3f421c6ca54649870b71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * idLexer::ReadRestOfLine</definition>
        <argsstring>(idStr &amp;out)</argsstring>
        <name>ReadRestOfLine</name>
        <param>
          <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="187" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1197" bodyend="1220"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a74cdb5c278d9482bfc01c9e7fce2f1ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::ParseInt</definition>
        <argsstring>(void)</argsstring>
        <name>ParseInt</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="190" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1227" bodyend="1242"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1ac6ba405f2fb3aaee29037a8a236545ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idLexer::ParseBool</definition>
        <argsstring>(void)</argsstring>
        <name>ParseBool</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="192" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1249" bodyend="1257"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a35223c62c79b7304fb4d9be0e3957d17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float idLexer::ParseFloat</definition>
        <argsstring>(bool *errorFlag=NULL)</argsstring>
        <name>ParseFloat</name>
        <param>
          <type>bool *</type>
          <declname>errorFlag</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="195" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1264" bodyend="1293"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a75f2092e61a0634fd6f1b66a30d13db7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::Parse1DMatrix</definition>
        <argsstring>(int x, float *m)</argsstring>
        <name>Parse1DMatrix</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="197" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1300" bodyend="1315"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a4a70d25171970e27a7b615ec7d6ba720" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::Parse2DMatrix</definition>
        <argsstring>(int y, int x, float *m)</argsstring>
        <name>Parse2DMatrix</name>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="198" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1322" bodyend="1339"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a631b204f9da1122eae9e7de341404459" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::Parse3DMatrix</definition>
        <argsstring>(int z, int y, int x, float *m)</argsstring>
        <name>Parse3DMatrix</name>
        <param>
          <type>int</type>
          <declname>z</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="199" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1346" bodyend="1363"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1ac6f3b009144377b8d3eaba88a07060af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * idLexer::ParseBracedSection</definition>
        <argsstring>(idStr &amp;out)</argsstring>
        <name>ParseBracedSection</name>
        <param>
          <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="201" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1447" bodyend="1487"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a8b0c29b616f9d922c4c37ac0c2aa8854" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * idLexer::ParseBracedSectionExact</definition>
        <argsstring>(idStr &amp;out, int tabs=-1)</argsstring>
        <name>ParseBracedSectionExact</name>
        <param>
          <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tabs</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="203" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1376" bodyend="1436"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a172615a1395bd50f3422c04841886b7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * idLexer::ParseRestOfLine</definition>
        <argsstring>(idStr &amp;out)</argsstring>
        <name>ParseRestOfLine</name>
        <param>
          <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="205" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1496" bodyend="1512"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1aa20795d22dd845c476e7015b5b45ef6a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::GetLastWhiteSpace</definition>
        <argsstring>(idStr &amp;whiteSpace) const </argsstring>
        <name>GetLastWhiteSpace</name>
        <param>
          <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>whiteSpace</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="207" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1519" bodyend="1525"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a5aabe03a3404752a70174dc05699326f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::GetLastWhiteSpaceStart</definition>
        <argsstring>(void) const </argsstring>
        <name>GetLastWhiteSpaceStart</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="209" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1532" bodyend="1534"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1acf617bfa44f60e83b348dd4502bfa4f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::GetLastWhiteSpaceEnd</definition>
        <argsstring>(void) const </argsstring>
        <name>GetLastWhiteSpaceEnd</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="211" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1541" bodyend="1543"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a79aa5ad3cc1ddf2c6eea62d7d1edd39c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idLexer::SetPunctuations</definition>
        <argsstring>(const punctuation_t *p)</argsstring>
        <name>SetPunctuations</name>
        <param>
          <type>const <ref refid="structpunctuation__s" kindref="compound">punctuation_t</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="213" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="260" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a76368bc3764a125d37c565dc56c593c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * idLexer::GetPunctuationFromId</definition>
        <argsstring>(int id)</argsstring>
        <name>GetPunctuationFromId</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="215" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="183" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a4a34bf66fc83efa7ab89685a7266928f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::GetPunctuationId</definition>
        <argsstring>(const char *p)</argsstring>
        <name>GetPunctuationId</name>
        <param>
          <type>const char *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="217" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="199" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a16c329ee5fcc7ea049f4233e8be8a98a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idLexer::SetFlags</definition>
        <argsstring>(int flags)</argsstring>
        <name>SetFlags</name>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="219" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="298" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a4ce44cda7ac461cd21388380d72cc945" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idLexer::GetFlags</definition>
        <argsstring>(void)</argsstring>
        <name>GetFlags</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="221" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="302" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1afb585a1794623616b705fe330c288ee7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idLexer::Reset</definition>
        <argsstring>(void)</argsstring>
        <name>Reset</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="223" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1550" bodyend="1566"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1ad418083937fa279ad65147a5990e8837" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::EndOfFile</definition>
        <argsstring>(void)</argsstring>
        <name>EndOfFile</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="225" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1573" bodyend="1575"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a5afa71422c22337f41a9917f2fe10e82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>ID_INLINE const char * idLexer::GetFileName</definition>
        <argsstring>(void)</argsstring>
        <name>GetFileName</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="227" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="282" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a19d429de7c8f9c9230a27f499920bc9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const int</type>
        <definition>ID_INLINE const int idLexer::GetFileOffset</definition>
        <argsstring>(void)</argsstring>
        <name>GetFileOffset</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="229" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="286" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1aaa5d02660b0d37915a466ffcd99b78ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const ID_TIME_T</type>
        <definition>ID_INLINE const ID_TIME_T idLexer::GetFileTime</definition>
        <argsstring>(void)</argsstring>
        <name>GetFileTime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="231" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="290" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a061eee16d29e7932047ade591e35a90b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const int</type>
        <definition>ID_INLINE const int idLexer::GetLineNum</definition>
        <argsstring>(void)</argsstring>
        <name>GetLineNum</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="233" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="294" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a3f07c392095b74c524add7e48e0133a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idLexer::Error</definition>
        <argsstring>(const char *str,...) id_attribute((format(printf</argsstring>
        <name>Error</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="235" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="215" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a7583d664ed44b309acb05c68bde20a00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void void</type>
        <definition>void idLexer::Warning</definition>
        <argsstring>(const char *str,...) id_attribute((format(printf</argsstring>
        <name>Warning</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="237" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="241" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1af06f78a852c8c171bfc30a63589e7686" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void void bool</type>
        <definition>bool idLexer::HadError</definition>
        <argsstring>(void) const </argsstring>
        <name>HadError</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="239" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1794" bodyend="1796"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classid_lexer_1a989404121d7874314ee7bfeb785a8fa2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idLexer::SetBaseFolder</definition>
        <argsstring>(const char *path)</argsstring>
        <name>SetBaseFolder</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="242" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1785" bodyend="1787"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classid_lexer_1a5d692a2a2e7f5ea4903266f470e59323" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idLexer::CreatePunctuationTable</definition>
        <argsstring>(const punctuation_t *punctuations)</argsstring>
        <name>CreatePunctuationTable</name>
        <param>
          <type>const <ref refid="structpunctuation__s" kindref="compound">punctuation_t</ref> *</type>
          <declname>punctuations</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="270" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="120" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a3ebf2314871cca7dc5f820955cdb33a8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::ReadWhiteSpace</definition>
        <argsstring>(void)</argsstring>
        <name>ReadWhiteSpace</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="271" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="285" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1acb08d047d100b3304c585ee0d2537e6d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::ReadEscapeCharacter</definition>
        <argsstring>(char *ch)</argsstring>
        <name>ReadEscapeCharacter</name>
        <param>
          <type>char *</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="272" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="357" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a95bf8b8f675a5a193724d831c81e4944" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::ReadString</definition>
        <argsstring>(idToken *token, int quote)</argsstring>
        <name>ReadString</name>
        <param>
          <type><ref refid="classid_token" kindref="compound">idToken</ref> *</type>
          <declname>token</declname>
        </param>
        <param>
          <type>int</type>
          <declname>quote</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="273" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="436" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1ad34cfbbaf403cf4f034ee79796517f39" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::ReadName</definition>
        <argsstring>(idToken *token)</argsstring>
        <name>ReadName</name>
        <param>
          <type><ref refid="classid_token" kindref="compound">idToken</ref> *</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="274" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="534" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a298c2613f503be14fd23b6f44fb32b19" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::ReadNumber</definition>
        <argsstring>(idToken *token)</argsstring>
        <name>ReadNumber</name>
        <param>
          <type><ref refid="classid_token" kindref="compound">idToken</ref> *</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="275" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="576" bodyend="768"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1ac48311eb74075827606734c7f142c6ef" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::ReadPunctuation</definition>
        <argsstring>(idToken *token)</argsstring>
        <name>ReadPunctuation</name>
        <param>
          <type><ref refid="classid_token" kindref="compound">idToken</ref> *</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="276" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="775" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1ae88ce98b083e6b565f6dd5bc09e9df57" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::ReadPrimitive</definition>
        <argsstring>(idToken *token)</argsstring>
        <name>ReadPrimitive</name>
        <param>
          <type><ref refid="classid_token" kindref="compound">idToken</ref> *</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="277" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a1e4d8e6baf3212d0f656d94a315033c4" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idLexer::CheckString</definition>
        <argsstring>(const char *str) const </argsstring>
        <name>CheckString</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="278" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="560" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="classid_lexer_1a545cec8ee0983282d7c049684ff3a962" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idLexer::NumLinesCrossed</definition>
        <argsstring>(void)</argsstring>
        <name>NumLinesCrossed</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="279" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.cpp" bodystart="1582" bodyend="1584"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" line="137" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Lexer.h" bodystart="137" bodyend="280"/>
    <listofallmembers>
      <member refid="classid_lexer_1a3a0f546fcd705f6386fcdd4a1039f99a" prot="private" virt="non-virtual"><scope>idLexer</scope><name>allocated</name></member>
      <member refid="classid_lexer_1a1affc49cbf7e78a5a03e55d2aa71ddbd" prot="private" virt="non-virtual"><scope>idLexer</scope><name>baseFolder</name></member>
      <member refid="classid_lexer_1aa376636cee349be01c0498f8c1d4b80b" prot="private" virt="non-virtual"><scope>idLexer</scope><name>buffer</name></member>
      <member refid="classid_lexer_1a1e4d8e6baf3212d0f656d94a315033c4" prot="private" virt="non-virtual"><scope>idLexer</scope><name>CheckString</name></member>
      <member refid="classid_lexer_1ae7852f7afc5a45434774c99a7163fe29" prot="public" virt="non-virtual"><scope>idLexer</scope><name>CheckTokenString</name></member>
      <member refid="classid_lexer_1a2aec271fec14a006b2b04cfbb4be3ff8" prot="public" virt="non-virtual"><scope>idLexer</scope><name>CheckTokenType</name></member>
      <member refid="classid_lexer_1a5d692a2a2e7f5ea4903266f470e59323" prot="private" virt="non-virtual"><scope>idLexer</scope><name>CreatePunctuationTable</name></member>
      <member refid="classid_lexer_1a60e2f89a18bfc563cfbcf6af6d96feef" prot="private" virt="non-virtual"><scope>idLexer</scope><name>end_p</name></member>
      <member refid="classid_lexer_1ad418083937fa279ad65147a5990e8837" prot="public" virt="non-virtual"><scope>idLexer</scope><name>EndOfFile</name></member>
      <member refid="classid_lexer_1a3f07c392095b74c524add7e48e0133a6" prot="public" virt="non-virtual"><scope>idLexer</scope><name>Error</name></member>
      <member refid="classid_lexer_1a0674b656bad7799324b83beec004977c" prot="public" virt="non-virtual"><scope>idLexer</scope><name>ExpectAnyToken</name></member>
      <member refid="classid_lexer_1aee0b9eba8613b02444902c1fd7778958" prot="public" virt="non-virtual"><scope>idLexer</scope><name>ExpectTokenString</name></member>
      <member refid="classid_lexer_1a805fd5c342cbfa38f355d97e366be659" prot="public" virt="non-virtual"><scope>idLexer</scope><name>ExpectTokenType</name></member>
      <member refid="classid_lexer_1abbbf17ad8460f4796bbf93521317fc63" prot="private" virt="non-virtual"><scope>idLexer</scope><name>filename</name></member>
      <member refid="classid_lexer_1ab0e13fd2556a95e3636c040fa189442c" prot="private" virt="non-virtual"><scope>idLexer</scope><name>fileTime</name></member>
      <member refid="classid_lexer_1abd3a79d3676fdcf3242bac9e4fbc3ec1" prot="private" virt="non-virtual"><scope>idLexer</scope><name>flags</name></member>
      <member refid="classid_lexer_1affb1bfff07c8ed6537cd68aadcca2aae" prot="public" virt="non-virtual"><scope>idLexer</scope><name>FreeSource</name></member>
      <member refid="classid_lexer_1a5afa71422c22337f41a9917f2fe10e82" prot="public" virt="non-virtual"><scope>idLexer</scope><name>GetFileName</name></member>
      <member refid="classid_lexer_1a19d429de7c8f9c9230a27f499920bc9d" prot="public" virt="non-virtual"><scope>idLexer</scope><name>GetFileOffset</name></member>
      <member refid="classid_lexer_1aaa5d02660b0d37915a466ffcd99b78ca" prot="public" virt="non-virtual"><scope>idLexer</scope><name>GetFileTime</name></member>
      <member refid="classid_lexer_1a4ce44cda7ac461cd21388380d72cc945" prot="public" virt="non-virtual"><scope>idLexer</scope><name>GetFlags</name></member>
      <member refid="classid_lexer_1aa20795d22dd845c476e7015b5b45ef6a" prot="public" virt="non-virtual"><scope>idLexer</scope><name>GetLastWhiteSpace</name></member>
      <member refid="classid_lexer_1acf617bfa44f60e83b348dd4502bfa4f6" prot="public" virt="non-virtual"><scope>idLexer</scope><name>GetLastWhiteSpaceEnd</name></member>
      <member refid="classid_lexer_1a5aabe03a3404752a70174dc05699326f" prot="public" virt="non-virtual"><scope>idLexer</scope><name>GetLastWhiteSpaceStart</name></member>
      <member refid="classid_lexer_1a061eee16d29e7932047ade591e35a90b" prot="public" virt="non-virtual"><scope>idLexer</scope><name>GetLineNum</name></member>
      <member refid="classid_lexer_1a76368bc3764a125d37c565dc56c593c2" prot="public" virt="non-virtual"><scope>idLexer</scope><name>GetPunctuationFromId</name></member>
      <member refid="classid_lexer_1a4a34bf66fc83efa7ab89685a7266928f" prot="public" virt="non-virtual"><scope>idLexer</scope><name>GetPunctuationId</name></member>
      <member refid="classid_lexer_1af06f78a852c8c171bfc30a63589e7686" prot="public" virt="non-virtual"><scope>idLexer</scope><name>HadError</name></member>
      <member refid="classid_lexer_1aa4e3ca8958d5fd65680e63e46e5e98b3" prot="private" virt="non-virtual"><scope>idLexer</scope><name>hadError</name></member>
      <member refid="classid_lexer_1ab4b01d152e2a19f3d8e78924a4fdf9c5" prot="public" virt="non-virtual"><scope>idLexer</scope><name>idLexer</name></member>
      <member refid="classid_lexer_1a1dfa7510955f10afd11531f1d9013120" prot="public" virt="non-virtual"><scope>idLexer</scope><name>idLexer</name></member>
      <member refid="classid_lexer_1a0080f531b87c3edebbf2aaec184b80c9" prot="public" virt="non-virtual"><scope>idLexer</scope><name>idLexer</name></member>
      <member refid="classid_lexer_1ab974f958c4a66161a272d8a9edbadafe" prot="public" virt="non-virtual"><scope>idLexer</scope><name>idLexer</name></member>
      <member refid="classid_lexer_1a9682571f8ada54cf7ff649d84257fb48" prot="private" virt="non-virtual"><scope>idLexer</scope><name>idParser</name></member>
      <member refid="classid_lexer_1a5c37737bfed123f542c2d3801b67608d" prot="public" virt="non-virtual"><scope>idLexer</scope><name>IsLoaded</name></member>
      <member refid="classid_lexer_1a0493f3da1ba9b71d33bbe79d136939ca" prot="private" virt="non-virtual"><scope>idLexer</scope><name>lastline</name></member>
      <member refid="classid_lexer_1a896c0fcc326dc4ebdda0723479b42ed6" prot="private" virt="non-virtual"><scope>idLexer</scope><name>lastScript_p</name></member>
      <member refid="classid_lexer_1a91906253ade172e5873776eee244803b" prot="private" virt="non-virtual"><scope>idLexer</scope><name>length</name></member>
      <member refid="classid_lexer_1a483254847cb112b0197b524133d7f711" prot="private" virt="non-virtual"><scope>idLexer</scope><name>line</name></member>
      <member refid="classid_lexer_1ac0dcce8dd7c3fa2247b4604c7be6d7be" prot="private" virt="non-virtual"><scope>idLexer</scope><name>loaded</name></member>
      <member refid="classid_lexer_1a910b144c046a797a929c4840de686fff" prot="public" virt="non-virtual"><scope>idLexer</scope><name>LoadFile</name></member>
      <member refid="classid_lexer_1ab609d05f8bccb73c6ddfa77fa8ea14c3" prot="public" virt="non-virtual"><scope>idLexer</scope><name>LoadMemory</name></member>
      <member refid="classid_lexer_1a383ed05bfcc37f5c034f73a5104f7ebf" prot="private" virt="non-virtual"><scope>idLexer</scope><name>next</name></member>
      <member refid="classid_lexer_1acb519e57c283c6c9f31e61affd381545" prot="private" virt="non-virtual"><scope>idLexer</scope><name>nextpunctuation</name></member>
      <member refid="classid_lexer_1a545cec8ee0983282d7c049684ff3a962" prot="private" virt="non-virtual"><scope>idLexer</scope><name>NumLinesCrossed</name></member>
      <member refid="classid_lexer_1a75f2092e61a0634fd6f1b66a30d13db7" prot="public" virt="non-virtual"><scope>idLexer</scope><name>Parse1DMatrix</name></member>
      <member refid="classid_lexer_1a4a70d25171970e27a7b615ec7d6ba720" prot="public" virt="non-virtual"><scope>idLexer</scope><name>Parse2DMatrix</name></member>
      <member refid="classid_lexer_1a631b204f9da1122eae9e7de341404459" prot="public" virt="non-virtual"><scope>idLexer</scope><name>Parse3DMatrix</name></member>
      <member refid="classid_lexer_1ac6ba405f2fb3aaee29037a8a236545ce" prot="public" virt="non-virtual"><scope>idLexer</scope><name>ParseBool</name></member>
      <member refid="classid_lexer_1ac6f3b009144377b8d3eaba88a07060af" prot="public" virt="non-virtual"><scope>idLexer</scope><name>ParseBracedSection</name></member>
      <member refid="classid_lexer_1a8b0c29b616f9d922c4c37ac0c2aa8854" prot="public" virt="non-virtual"><scope>idLexer</scope><name>ParseBracedSectionExact</name></member>
      <member refid="classid_lexer_1a35223c62c79b7304fb4d9be0e3957d17" prot="public" virt="non-virtual"><scope>idLexer</scope><name>ParseFloat</name></member>
      <member refid="classid_lexer_1a74cdb5c278d9482bfc01c9e7fce2f1ac" prot="public" virt="non-virtual"><scope>idLexer</scope><name>ParseInt</name></member>
      <member refid="classid_lexer_1a172615a1395bd50f3422c04841886b7f" prot="public" virt="non-virtual"><scope>idLexer</scope><name>ParseRestOfLine</name></member>
      <member refid="classid_lexer_1a0649c444a3b1900e9be902f3cba5ffc6" prot="public" virt="non-virtual"><scope>idLexer</scope><name>PeekTokenString</name></member>
      <member refid="classid_lexer_1aa6f28cb5b2df7bfd78aa57a121241867" prot="public" virt="non-virtual"><scope>idLexer</scope><name>PeekTokenType</name></member>
      <member refid="classid_lexer_1a49e8e327dbd019b32811ac4c315ac0cb" prot="private" virt="non-virtual"><scope>idLexer</scope><name>punctuations</name></member>
      <member refid="classid_lexer_1ae04ed90e8065bbd08f50cc3813bcd5c0" prot="private" virt="non-virtual"><scope>idLexer</scope><name>punctuationtable</name></member>
      <member refid="classid_lexer_1acb08d047d100b3304c585ee0d2537e6d" prot="private" virt="non-virtual"><scope>idLexer</scope><name>ReadEscapeCharacter</name></member>
      <member refid="classid_lexer_1ad34cfbbaf403cf4f034ee79796517f39" prot="private" virt="non-virtual"><scope>idLexer</scope><name>ReadName</name></member>
      <member refid="classid_lexer_1a298c2613f503be14fd23b6f44fb32b19" prot="private" virt="non-virtual"><scope>idLexer</scope><name>ReadNumber</name></member>
      <member refid="classid_lexer_1ae88ce98b083e6b565f6dd5bc09e9df57" prot="private" virt="non-virtual"><scope>idLexer</scope><name>ReadPrimitive</name></member>
      <member refid="classid_lexer_1ac48311eb74075827606734c7f142c6ef" prot="private" virt="non-virtual"><scope>idLexer</scope><name>ReadPunctuation</name></member>
      <member refid="classid_lexer_1a8df74b69984f3f421c6ca54649870b71" prot="public" virt="non-virtual"><scope>idLexer</scope><name>ReadRestOfLine</name></member>
      <member refid="classid_lexer_1a95bf8b8f675a5a193724d831c81e4944" prot="private" virt="non-virtual"><scope>idLexer</scope><name>ReadString</name></member>
      <member refid="classid_lexer_1a7a35ead2358bea09ffb40df1a7ad1608" prot="public" virt="non-virtual"><scope>idLexer</scope><name>ReadToken</name></member>
      <member refid="classid_lexer_1a8f3a278d8fcab76f63d1eb5e2b862a80" prot="public" virt="non-virtual"><scope>idLexer</scope><name>ReadTokenOnLine</name></member>
      <member refid="classid_lexer_1a3ebf2314871cca7dc5f820955cdb33a8" prot="private" virt="non-virtual"><scope>idLexer</scope><name>ReadWhiteSpace</name></member>
      <member refid="classid_lexer_1afb585a1794623616b705fe330c288ee7" prot="public" virt="non-virtual"><scope>idLexer</scope><name>Reset</name></member>
      <member refid="classid_lexer_1a6076ed8e3c43263559812da86e005ebc" prot="private" virt="non-virtual"><scope>idLexer</scope><name>script_p</name></member>
      <member refid="classid_lexer_1a989404121d7874314ee7bfeb785a8fa2" prot="public" virt="non-virtual"><scope>idLexer</scope><name>SetBaseFolder</name></member>
      <member refid="classid_lexer_1a16c329ee5fcc7ea049f4233e8be8a98a" prot="public" virt="non-virtual"><scope>idLexer</scope><name>SetFlags</name></member>
      <member refid="classid_lexer_1a79aa5ad3cc1ddf2c6eea62d7d1edd39c" prot="public" virt="non-virtual"><scope>idLexer</scope><name>SetPunctuations</name></member>
      <member refid="classid_lexer_1a576665238215d5dce80bfa88594a7cdf" prot="public" virt="non-virtual"><scope>idLexer</scope><name>SkipBracedSection</name></member>
      <member refid="classid_lexer_1a93425a5379a9db366b17cbda0af0edf7" prot="public" virt="non-virtual"><scope>idLexer</scope><name>SkipRestOfLine</name></member>
      <member refid="classid_lexer_1a213d7922fd0cce8c9c1c5cbe625c98c2" prot="public" virt="non-virtual"><scope>idLexer</scope><name>SkipUntilString</name></member>
      <member refid="classid_lexer_1a4ce6d90b71cc791846be89ee5e830e9a" prot="private" virt="non-virtual"><scope>idLexer</scope><name>token</name></member>
      <member refid="classid_lexer_1a2c8bf1126216fbe43f63348918a5c5b9" prot="private" virt="non-virtual"><scope>idLexer</scope><name>tokenavailable</name></member>
      <member refid="classid_lexer_1ae4d1b596f8703ebb2319cd096a71fc97" prot="public" virt="non-virtual"><scope>idLexer</scope><name>UnreadToken</name></member>
      <member refid="classid_lexer_1a7583d664ed44b309acb05c68bde20a00" prot="public" virt="non-virtual"><scope>idLexer</scope><name>Warning</name></member>
      <member refid="classid_lexer_1a2d1f2480e3467c35767b61bb02a8e54c" prot="private" virt="non-virtual"><scope>idLexer</scope><name>whiteSpaceEnd_p</name></member>
      <member refid="classid_lexer_1a7b2f843e04321225cae3e1d2eb826904" prot="private" virt="non-virtual"><scope>idLexer</scope><name>whiteSpaceStart_p</name></member>
      <member refid="classid_lexer_1a625098097fc8077bf94b45e60246675c" prot="public" virt="non-virtual"><scope>idLexer</scope><name>~idLexer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
