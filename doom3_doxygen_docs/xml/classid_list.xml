<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_list" kind="class" prot="public">
    <compoundname>idList</compoundname>
    <derivedcompoundref refid="classid_vector_set" prot="public" virt="non-virtual">idVectorSet&lt; type, dimension &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>type</declname>
        <defname>type</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classid_list_1ada4274fadc80fc06bee4cb828fb7aa71" prot="public" static="no">
        <type>int</type>
        <definition>typedef int idList&lt; type &gt;::cmp_t(const type *, const type *)</definition>
        <argsstring>(const type *, const type *)</argsstring>
        <name>cmp_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="87" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classid_list_1a55f88b7a1275bf09210e090551f6c9f7" prot="public" static="no">
        <type>type</type>
        <definition>typedef type idList&lt; type &gt;::new_t(void)</definition>
        <argsstring>(void)</argsstring>
        <name>new_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="88" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classid_list_1ad61035ca457f0b4ce91ccd10282d25c7" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idList&lt; type &gt;::num</definition>
        <argsstring></argsstring>
        <name>num</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="135" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_list_1a72b2aee3470ae12748de7e36fb661332" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idList&lt; type &gt;::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="136" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_list_1aa4210632d7128598a8a3e8adf7772626" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idList&lt; type &gt;::granularity</definition>
        <argsstring></argsstring>
        <name>granularity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="137" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_list_1a69bb7eec706dd21b2e67743c244d0bcb" prot="private" static="no" mutable="no">
        <type>type *</type>
        <definition>type* idList&lt; type &gt;::list</definition>
        <argsstring></argsstring>
        <name>list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="138" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_list_1ac0bf4d2c668e6208e294b05440078b1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idList&lt; type &gt;::idList</definition>
        <argsstring>(int newgranularity=16)</argsstring>
        <name>idList</name>
        <param>
          <type>int</type>
          <declname>newgranularity</declname>
          <defval>16</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="90" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="147" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1af804f3842d6db3f3b9dffe66a6bbf23e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idList&lt; type &gt;::idList</definition>
        <argsstring>(const idList&lt; type &gt; &amp;other)</argsstring>
        <name>idList</name>
        <param>
          <type>const <ref refid="classid_list" kindref="compound">idList</ref>&lt; type &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="91" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1ab28770645d13df114ac91bd91a5f56f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idList&lt; type &gt;::~idList</definition>
        <argsstring>(void)</argsstring>
        <name>~idList</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="91" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="172" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1ae08e43e68305491c4cd9ccea6eafcc48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idList&lt; type &gt;::Clear</definition>
        <argsstring>(void)</argsstring>
        <name>Clear</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="94" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="184" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1acd30faf8064d1fe9b1f8477bfc6a0ee5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idList&lt; type &gt;::Num</definition>
        <argsstring>(void) const </argsstring>
        <name>Num</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="95" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="265" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1a9efa3ccebd69bcd1a62242f2624cc409" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idList&lt; type &gt;::NumAllocated</definition>
        <argsstring>(void) const </argsstring>
        <name>NumAllocated</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="96" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="277" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1acac8c1b19827a55572d286fc22de9440" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idList&lt; type &gt;::SetGranularity</definition>
        <argsstring>(int newgranularity)</argsstring>
        <name>SetGranularity</name>
        <param>
          <type>int</type>
          <declname>newgranularity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="97" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="305" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1a87df22e86561e89f6be59f3b6c8faf6c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idList&lt; type &gt;::GetGranularity</definition>
        <argsstring>(void) const </argsstring>
        <name>GetGranularity</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="98" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="329" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1ad4047c4911de96f5e91c0c83ccac5d97" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>ID_INLINE size_t idList&lt; type &gt;::Allocated</definition>
        <argsstring>(void) const </argsstring>
        <name>Allocated</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="100" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="230" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1a00e2edc2211a583bc3a9595f8dd001e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>ID_INLINE size_t idList&lt; type &gt;::Size</definition>
        <argsstring>(void) const </argsstring>
        <name>Size</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="101" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="242" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1aa6e6c42a9982ffcba0f4e9085ba63073" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>ID_INLINE size_t idList&lt; type &gt;::MemoryUsed</definition>
        <argsstring>(void) const </argsstring>
        <name>MemoryUsed</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="102" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="252" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1a9caa05f16444dea240927b06381b3333" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_list" kindref="compound">idList</ref>&lt; type &gt; &amp;</type>
        <definition>ID_INLINE idList&lt; type &gt; &amp; idList&lt; type &gt;::operator=</definition>
        <argsstring>(const idList&lt; type &gt; &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classid_list" kindref="compound">idList</ref>&lt; type &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="104" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="533" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1a6ca9f1ad9ab9da8ff5eef9021443fb73" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const type &amp;</type>
        <definition>ID_INLINE const type &amp; idList&lt; type &gt;::operator[]</definition>
        <argsstring>(int index) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="105" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="561" bodyend="566"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1a3a21dfe36ef88a7afb82484b5e2fbcd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>type &amp;</type>
        <definition>ID_INLINE type &amp; idList&lt; type &gt;::operator[]</definition>
        <argsstring>(int index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="106" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="577" bodyend="582"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1a6d109a4230fa159afa2ba90a7a0c97d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idList&lt; type &gt;::Condense</definition>
        <argsstring>(void)</argsstring>
        <name>Condense</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="108" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="341" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1a8cb6f85c85d4c8ced8b4b56a642552da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idList&lt; type &gt;::Resize</definition>
        <argsstring>(int newsize)</argsstring>
        <name>Resize</name>
        <param>
          <type>int</type>
          <declname>newsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="109" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="360" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1a7f2bdf1e034936798b14c7e6b69d5256" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idList&lt; type &gt;::Resize</definition>
        <argsstring>(int newsize, int newgranularity)</argsstring>
        <name>Resize</name>
        <param>
          <type>int</type>
          <declname>newsize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>newgranularity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="110" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="404" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1a27768d062a7b962d05199ea42f30f75e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idList&lt; type &gt;::SetNum</definition>
        <argsstring>(int newnum, bool resize=true)</argsstring>
        <name>SetNum</name>
        <param>
          <type>int</type>
          <declname>newnum</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>resize</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="111" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="289" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1a08a2ccfb0228dd398215406fd6ba87a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idList&lt; type &gt;::AssureSize</definition>
        <argsstring>(int newSize)</argsstring>
        <name>AssureSize</name>
        <param>
          <type>int</type>
          <declname>newSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="112" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="445" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1a98cf08e4adf53e4a8beae40b3b709f8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idList&lt; type &gt;::AssureSize</definition>
        <argsstring>(int newSize, const type &amp;initValue)</argsstring>
        <name>AssureSize</name>
        <param>
          <type>int</type>
          <declname>newSize</declname>
        </param>
        <param>
          <type>const type &amp;</type>
          <declname>initValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="113" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="470" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1a7ae60689c3aa8d4257e2edf10cd7d88f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idList&lt; type &gt;::AssureSizeAlloc</definition>
        <argsstring>(int newSize, new_t *allocator)</argsstring>
        <name>AssureSizeAlloc</name>
        <param>
          <type>int</type>
          <declname>newSize</declname>
        </param>
        <param>
          <type>new_t *</type>
          <declname>allocator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="114" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="503" bodyend="523"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1aa4e735ff91c7fcf3690ec19a69537a1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>type *</type>
        <definition>ID_INLINE type * idList&lt; type &gt;::Ptr</definition>
        <argsstring>(void)</argsstring>
        <name>Ptr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="116" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="596" bodyend="598"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1a5ff1ed8c0cfbb863306b166e880f1546" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const type *</type>
        <definition>const ID_INLINE type * idList&lt; type &gt;::Ptr</definition>
        <argsstring>(void) const </argsstring>
        <name>Ptr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="117" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="612" bodyend="614"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1a5b25a2d53f546e93ec9e4fe45fc31e3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>type &amp;</type>
        <definition>ID_INLINE type &amp; idList&lt; type &gt;::Alloc</definition>
        <argsstring>(void)</argsstring>
        <name>Alloc</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="118" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="624" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1a9bb574963ec0b24540a6ba5d29a2f94a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idList&lt; type &gt;::Append</definition>
        <argsstring>(const type &amp;obj)</argsstring>
        <name>Append</name>
        <param>
          <type>const type &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="119" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="646" bodyend="665"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1a307c31aa041e31ff8e1308cab79b448e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idList&lt; type &gt;::Append</definition>
        <argsstring>(const idList&lt; type &gt; &amp;other)</argsstring>
        <name>Append</name>
        <param>
          <type>const <ref refid="classid_list" kindref="compound">idList</ref>&lt; type &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="120" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="718" bodyend="732"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1a5b9272e5c4fdde98c5b13047a9a6eb59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idList&lt; type &gt;::AddUnique</definition>
        <argsstring>(const type &amp;obj)</argsstring>
        <name>AddUnique</name>
        <param>
          <type>const type &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="121" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="742" bodyend="751"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1a7d57ea5e1d75f4977e1ab2f6cd4e9eae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idList&lt; type &gt;::Insert</definition>
        <argsstring>(const type &amp;obj, int index=0)</argsstring>
        <name>Insert</name>
        <param>
          <type>const type &amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="122" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="679" bodyend="706"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1a4a89bd4a13b03d2f580d29f297f593b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idList&lt; type &gt;::FindIndex</definition>
        <argsstring>(const type &amp;obj) const </argsstring>
        <name>FindIndex</name>
        <param>
          <type>const type &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="123" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="761" bodyend="772"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1a43716e3300a282610ad5f796db9888f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>type *</type>
        <definition>ID_INLINE type * idList&lt; type &gt;::Find</definition>
        <argsstring>(type const &amp;obj) const </argsstring>
        <name>Find</name>
        <param>
          <type>type const &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="124" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="782" bodyend="791"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1aa2d564537eb78fb0e4c66ad6545fa7d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idList&lt; type &gt;::FindNull</definition>
        <argsstring>(void) const </argsstring>
        <name>FindNull</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="125" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="804" bodyend="815"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1a4d21590cf55d7eafb844c4e7d1f7055f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idList&lt; type &gt;::IndexOf</definition>
        <argsstring>(const type *obj) const </argsstring>
        <name>IndexOf</name>
        <param>
          <type>const type *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="126" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="828" bodyend="837"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1a9c66216893911963c02be67710331ca9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idList&lt; type &gt;::RemoveIndex</definition>
        <argsstring>(int index)</argsstring>
        <name>RemoveIndex</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="127" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="849" bodyend="866"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1a1f2c6c1ed18785ab6bdbecbd347dca13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idList&lt; type &gt;::Remove</definition>
        <argsstring>(const type &amp;obj)</argsstring>
        <name>Remove</name>
        <param>
          <type>const type &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="128" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="878" bodyend="887"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1a17b5086ea80f9c581a71a8e80bce5fa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idList&lt; type &gt;::Sort</definition>
        <argsstring>(cmp_t *compare=(cmp_t *)&amp;idListSortCompare&lt; type &gt;)</argsstring>
        <name>Sort</name>
        <param>
          <type>cmp_t *</type>
          <declname>compare</declname>
          <defval>(cmp_t *)&amp;idListSortCompare&lt; type &gt;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="129" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="898" bodyend="906"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1a9fb86fd7f1ce6c4f8ed95fe86328cdc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idList&lt; type &gt;::SortSubSection</definition>
        <argsstring>(int startIndex, int endIndex, cmp_t *compare=(cmp_t *)&amp;idListSortCompare&lt; type &gt;)</argsstring>
        <name>SortSubSection</name>
        <param>
          <type>int</type>
          <declname>startIndex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endIndex</declname>
        </param>
        <param>
          <type>cmp_t *</type>
          <declname>compare</declname>
          <defval>(cmp_t *)&amp;idListSortCompare&lt; type &gt;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="130" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="916" bodyend="933"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1a8c2dcb7ef5b23f9ce1b9966f2f8e1739" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idList&lt; type &gt;::Swap</definition>
        <argsstring>(idList&lt; type &gt; &amp;other)</argsstring>
        <name>Swap</name>
        <param>
          <type><ref refid="classid_list" kindref="compound">idList</ref>&lt; type &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="131" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="943" bodyend="948"/>
      </memberdef>
      <memberdef kind="function" id="classid_list_1adddcaba492f8f25ef5d84f744773f2d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idList&lt; type &gt;::DeleteContents</definition>
        <argsstring>(bool clear)</argsstring>
        <name>DeleteContents</name>
        <param>
          <type>bool</type>
          <declname>clear</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="132" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="207" bodyend="220"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="25222">
        <label>idList&lt; type &gt;</label>
        <link refid="classid_list"/>
      </node>
      <node id="25223">
        <label>idVectorSet&lt; type &gt;</label>
        <link refid="classid_vector_set"/>
        <childnode refid="25222" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" line="84" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/containers/List.h" bodystart="84" bodyend="139"/>
    <listofallmembers>
      <member refid="classid_list_1a5b9272e5c4fdde98c5b13047a9a6eb59" prot="public" virt="non-virtual"><scope>idList</scope><name>AddUnique</name></member>
      <member refid="classid_list_1a5b25a2d53f546e93ec9e4fe45fc31e3c" prot="public" virt="non-virtual"><scope>idList</scope><name>Alloc</name></member>
      <member refid="classid_list_1ad4047c4911de96f5e91c0c83ccac5d97" prot="public" virt="non-virtual"><scope>idList</scope><name>Allocated</name></member>
      <member refid="classid_list_1a9bb574963ec0b24540a6ba5d29a2f94a" prot="public" virt="non-virtual"><scope>idList</scope><name>Append</name></member>
      <member refid="classid_list_1a307c31aa041e31ff8e1308cab79b448e" prot="public" virt="non-virtual"><scope>idList</scope><name>Append</name></member>
      <member refid="classid_list_1a08a2ccfb0228dd398215406fd6ba87a6" prot="public" virt="non-virtual"><scope>idList</scope><name>AssureSize</name></member>
      <member refid="classid_list_1a98cf08e4adf53e4a8beae40b3b709f8f" prot="public" virt="non-virtual"><scope>idList</scope><name>AssureSize</name></member>
      <member refid="classid_list_1a7ae60689c3aa8d4257e2edf10cd7d88f" prot="public" virt="non-virtual"><scope>idList</scope><name>AssureSizeAlloc</name></member>
      <member refid="classid_list_1ae08e43e68305491c4cd9ccea6eafcc48" prot="public" virt="non-virtual"><scope>idList</scope><name>Clear</name></member>
      <member refid="classid_list_1ada4274fadc80fc06bee4cb828fb7aa71" prot="public" virt="non-virtual"><scope>idList</scope><name>cmp_t</name></member>
      <member refid="classid_list_1a6d109a4230fa159afa2ba90a7a0c97d5" prot="public" virt="non-virtual"><scope>idList</scope><name>Condense</name></member>
      <member refid="classid_list_1adddcaba492f8f25ef5d84f744773f2d9" prot="public" virt="non-virtual"><scope>idList</scope><name>DeleteContents</name></member>
      <member refid="classid_list_1a43716e3300a282610ad5f796db9888f2" prot="public" virt="non-virtual"><scope>idList</scope><name>Find</name></member>
      <member refid="classid_list_1a4a89bd4a13b03d2f580d29f297f593b3" prot="public" virt="non-virtual"><scope>idList</scope><name>FindIndex</name></member>
      <member refid="classid_list_1aa2d564537eb78fb0e4c66ad6545fa7d5" prot="public" virt="non-virtual"><scope>idList</scope><name>FindNull</name></member>
      <member refid="classid_list_1a87df22e86561e89f6be59f3b6c8faf6c" prot="public" virt="non-virtual"><scope>idList</scope><name>GetGranularity</name></member>
      <member refid="classid_list_1aa4210632d7128598a8a3e8adf7772626" prot="private" virt="non-virtual"><scope>idList</scope><name>granularity</name></member>
      <member refid="classid_list_1ac0bf4d2c668e6208e294b05440078b1f" prot="public" virt="non-virtual"><scope>idList</scope><name>idList</name></member>
      <member refid="classid_list_1af804f3842d6db3f3b9dffe66a6bbf23e" prot="public" virt="non-virtual"><scope>idList</scope><name>idList</name></member>
      <member refid="classid_list_1a4d21590cf55d7eafb844c4e7d1f7055f" prot="public" virt="non-virtual"><scope>idList</scope><name>IndexOf</name></member>
      <member refid="classid_list_1a7d57ea5e1d75f4977e1ab2f6cd4e9eae" prot="public" virt="non-virtual"><scope>idList</scope><name>Insert</name></member>
      <member refid="classid_list_1a69bb7eec706dd21b2e67743c244d0bcb" prot="private" virt="non-virtual"><scope>idList</scope><name>list</name></member>
      <member refid="classid_list_1aa6e6c42a9982ffcba0f4e9085ba63073" prot="public" virt="non-virtual"><scope>idList</scope><name>MemoryUsed</name></member>
      <member refid="classid_list_1a55f88b7a1275bf09210e090551f6c9f7" prot="public" virt="non-virtual"><scope>idList</scope><name>new_t</name></member>
      <member refid="classid_list_1acd30faf8064d1fe9b1f8477bfc6a0ee5" prot="public" virt="non-virtual"><scope>idList</scope><name>Num</name></member>
      <member refid="classid_list_1ad61035ca457f0b4ce91ccd10282d25c7" prot="private" virt="non-virtual"><scope>idList</scope><name>num</name></member>
      <member refid="classid_list_1a9efa3ccebd69bcd1a62242f2624cc409" prot="public" virt="non-virtual"><scope>idList</scope><name>NumAllocated</name></member>
      <member refid="classid_list_1a9caa05f16444dea240927b06381b3333" prot="public" virt="non-virtual"><scope>idList</scope><name>operator=</name></member>
      <member refid="classid_list_1a6ca9f1ad9ab9da8ff5eef9021443fb73" prot="public" virt="non-virtual"><scope>idList</scope><name>operator[]</name></member>
      <member refid="classid_list_1a3a21dfe36ef88a7afb82484b5e2fbcd5" prot="public" virt="non-virtual"><scope>idList</scope><name>operator[]</name></member>
      <member refid="classid_list_1aa4e735ff91c7fcf3690ec19a69537a1d" prot="public" virt="non-virtual"><scope>idList</scope><name>Ptr</name></member>
      <member refid="classid_list_1a5ff1ed8c0cfbb863306b166e880f1546" prot="public" virt="non-virtual"><scope>idList</scope><name>Ptr</name></member>
      <member refid="classid_list_1a1f2c6c1ed18785ab6bdbecbd347dca13" prot="public" virt="non-virtual"><scope>idList</scope><name>Remove</name></member>
      <member refid="classid_list_1a9c66216893911963c02be67710331ca9" prot="public" virt="non-virtual"><scope>idList</scope><name>RemoveIndex</name></member>
      <member refid="classid_list_1a8cb6f85c85d4c8ced8b4b56a642552da" prot="public" virt="non-virtual"><scope>idList</scope><name>Resize</name></member>
      <member refid="classid_list_1a7f2bdf1e034936798b14c7e6b69d5256" prot="public" virt="non-virtual"><scope>idList</scope><name>Resize</name></member>
      <member refid="classid_list_1acac8c1b19827a55572d286fc22de9440" prot="public" virt="non-virtual"><scope>idList</scope><name>SetGranularity</name></member>
      <member refid="classid_list_1a27768d062a7b962d05199ea42f30f75e" prot="public" virt="non-virtual"><scope>idList</scope><name>SetNum</name></member>
      <member refid="classid_list_1a00e2edc2211a583bc3a9595f8dd001e2" prot="public" virt="non-virtual"><scope>idList</scope><name>Size</name></member>
      <member refid="classid_list_1a72b2aee3470ae12748de7e36fb661332" prot="private" virt="non-virtual"><scope>idList</scope><name>size</name></member>
      <member refid="classid_list_1a17b5086ea80f9c581a71a8e80bce5fa9" prot="public" virt="non-virtual"><scope>idList</scope><name>Sort</name></member>
      <member refid="classid_list_1a9fb86fd7f1ce6c4f8ed95fe86328cdc5" prot="public" virt="non-virtual"><scope>idList</scope><name>SortSubSection</name></member>
      <member refid="classid_list_1a8c2dcb7ef5b23f9ce1b9966f2f8e1739" prot="public" virt="non-virtual"><scope>idList</scope><name>Swap</name></member>
      <member refid="classid_list_1ab28770645d13df114ac91bd91a5f56f5" prot="public" virt="non-virtual"><scope>idList</scope><name>~idList</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
