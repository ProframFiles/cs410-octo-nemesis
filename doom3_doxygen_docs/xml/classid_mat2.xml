<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_mat2" kind="class" prot="public">
    <compoundname>idMat2</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classid_mat2_1aad373866c88a8487ee97ec78cf8409d2" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec2" kindref="compound">idVec2</ref></type>
        <definition>idVec2 idMat2::mat[2]</definition>
        <argsstring>[2]</argsstring>
        <name>mat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="106" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_mat2_1af608438f93a6d1dbcee6d372163458ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idMat2::idMat2</definition>
        <argsstring>(void)</argsstring>
        <name>idMat2</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="57" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="113" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1ae0d10328cf2991193e2e10e5df592a18" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idMat2::idMat2</definition>
        <argsstring>(const idVec2 &amp;x, const idVec2 &amp;y)</argsstring>
        <name>idMat2</name>
        <param>
          <type>const <ref refid="classid_vec2" kindref="compound">idVec2</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec2" kindref="compound">idVec2</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="58" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1a9cf2b196317a7ef5699ca979801e7160" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idMat2::idMat2</definition>
        <argsstring>(const float xx, const float xy, const float yx, const float yy)</argsstring>
        <name>idMat2</name>
        <param>
          <type>const float</type>
          <declname>xx</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>xy</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>yx</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>yy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="59" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1addeb0697b64a8f132ecf87817d720745" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idMat2::idMat2</definition>
        <argsstring>(const float src[2][2])</argsstring>
        <name>idMat2</name>
        <param>
          <type>const float</type>
          <declname>src</declname>
          <array>[2][2]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="60" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="126" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1a9aca51d16dc6da41a42e5f9527d29d7b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_vec2" kindref="compound">idVec2</ref> &amp;</type>
        <definition>ID_INLINE const idVec2 &amp; idMat2::operator[]</definition>
        <argsstring>(int index) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="62" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="130" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1a712a962409f6b53a675285a73822b64f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec2" kindref="compound">idVec2</ref> &amp;</type>
        <definition>ID_INLINE idVec2 &amp; idMat2::operator[]</definition>
        <argsstring>(int index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="63" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="135" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1aa3ef949f493af8c956a9f48edd4e868d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat2" kindref="compound">idMat2</ref></type>
        <definition>ID_INLINE idMat2 idMat2::operator-</definition>
        <argsstring>() const </argsstring>
        <name>operator-</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="64" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="140" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1ae0cec996ab77e2de648ffe52fd186849" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat2" kindref="compound">idMat2</ref></type>
        <definition>ID_INLINE idMat2 idMat2::operator*</definition>
        <argsstring>(const float a) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const float</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="65" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="159" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1a3385a39e10ef38180249e32a74fdf34e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec2" kindref="compound">idVec2</ref></type>
        <definition>ID_INLINE idVec2 idMat2::operator*</definition>
        <argsstring>(const idVec2 &amp;vec) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classid_vec2" kindref="compound">idVec2</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="66" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="145" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1a46e3ff2c5a2de40be1ab91f99fe3209b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat2" kindref="compound">idMat2</ref></type>
        <definition>ID_INLINE idMat2 idMat2::operator*</definition>
        <argsstring>(const idMat2 &amp;a) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classid_mat2" kindref="compound">idMat2</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="67" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="151" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1a5f53e9304efc67f1c10b94cd9a0e6ae4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat2" kindref="compound">idMat2</ref></type>
        <definition>ID_INLINE idMat2 idMat2::operator+</definition>
        <argsstring>(const idMat2 &amp;a) const </argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classid_mat2" kindref="compound">idMat2</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="68" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="165" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1afdc98f567a81f72e7ff9d207ffc7d82b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat2" kindref="compound">idMat2</ref></type>
        <definition>ID_INLINE idMat2 idMat2::operator-</definition>
        <argsstring>(const idMat2 &amp;a) const </argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classid_mat2" kindref="compound">idMat2</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="69" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="171" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1a02ee6599d1b80c14b4532f5b28adf8a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat2" kindref="compound">idMat2</ref> &amp;</type>
        <definition>ID_INLINE idMat2 &amp; idMat2::operator*=</definition>
        <argsstring>(const float a)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const float</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="70" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="177" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1ad778dfd3cfb49ae09e7c5c28a0879623" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat2" kindref="compound">idMat2</ref> &amp;</type>
        <definition>ID_INLINE idMat2 &amp; idMat2::operator*=</definition>
        <argsstring>(const idMat2 &amp;a)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classid_mat2" kindref="compound">idMat2</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="71" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="184" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1a0bd6e4f36453e01bc59185a1fd503fc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat2" kindref="compound">idMat2</ref> &amp;</type>
        <definition>ID_INLINE idMat2 &amp; idMat2::operator+=</definition>
        <argsstring>(const idMat2 &amp;a)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classid_mat2" kindref="compound">idMat2</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="72" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="195" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1a0cd6ad9d8a7c464d0d1c743cfa308bf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat2" kindref="compound">idMat2</ref> &amp;</type>
        <definition>ID_INLINE idMat2 &amp; idMat2::operator-=</definition>
        <argsstring>(const idMat2 &amp;a)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classid_mat2" kindref="compound">idMat2</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="73" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="202" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1a4daabe2f3d08405aa2ce8ab332821215" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idMat2::Compare</definition>
        <argsstring>(const idMat2 &amp;a) const </argsstring>
        <name>Compare</name>
        <param>
          <type>const <ref refid="classid_mat2" kindref="compound">idMat2</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="79" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="222" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1a88dfac04f2b34f71583d7679ac08db56" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idMat2::Compare</definition>
        <argsstring>(const idMat2 &amp;a, const float epsilon) const </argsstring>
        <name>Compare</name>
        <param>
          <type>const <ref refid="classid_mat2" kindref="compound">idMat2</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="80" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="230" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1a73f3e345908d83ee8067d26912df0d7f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idMat2::operator==</definition>
        <argsstring>(const idMat2 &amp;a) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classid_mat2" kindref="compound">idMat2</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="81" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="238" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1a393670c061ab7a37bd13f97eae7b70b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idMat2::operator!=</definition>
        <argsstring>(const idMat2 &amp;a) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classid_mat2" kindref="compound">idMat2</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="82" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="242" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1abb776c650a9850aa23f619f98033f56e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idMat2::Zero</definition>
        <argsstring>(void)</argsstring>
        <name>Zero</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="84" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="246" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1a823ccd64239e1f87b2de67cdb4215026" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idMat2::Identity</definition>
        <argsstring>(void)</argsstring>
        <name>Identity</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="85" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="251" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1af6304ce16fc6784903830f6efece7be9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idMat2::IsIdentity</definition>
        <argsstring>(const float epsilon=1e-6) const </argsstring>
        <name>IsIdentity</name>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
          <defval>1e-6</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="86" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="255" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1a73faf7ef047d1c7540ac2152c320f116" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idMat2::IsSymmetric</definition>
        <argsstring>(const float epsilon=1e-6) const </argsstring>
        <name>IsSymmetric</name>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
          <defval>1e-6</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="87" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="259" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1a0958d15dc249c640d0bb5fdd551b32e6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idMat2::IsDiagonal</definition>
        <argsstring>(const float epsilon=1e-6) const </argsstring>
        <name>IsDiagonal</name>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
          <defval>1e-6</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="88" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="263" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1a722f22e60b342735acde8da3cd8e1cfc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>ID_INLINE float idMat2::Trace</definition>
        <argsstring>(void) const </argsstring>
        <name>Trace</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="90" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="271" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1a7fe3ace174cbe56a199fa00e05b483ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>ID_INLINE float idMat2::Determinant</definition>
        <argsstring>(void) const </argsstring>
        <name>Determinant</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="91" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="275" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1a50af56c2730bf55a84dc40041ca006a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat2" kindref="compound">idMat2</ref></type>
        <definition>ID_INLINE idMat2 idMat2::Transpose</definition>
        <argsstring>(void) const </argsstring>
        <name>Transpose</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="92" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="279" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1a865005eb748c429a36df271006a8e4d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat2" kindref="compound">idMat2</ref> &amp;</type>
        <definition>ID_INLINE idMat2 &amp; idMat2::TransposeSelf</definition>
        <argsstring>(void)</argsstring>
        <name>TransposeSelf</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="93" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="284" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1a34cd8934394dafeaec5f4c86769e43df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat2" kindref="compound">idMat2</ref></type>
        <definition>ID_INLINE idMat2 idMat2::Inverse</definition>
        <argsstring>(void) const </argsstring>
        <name>Inverse</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="94" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="294" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1a72cf2dc70d44e90cdee60808b02f713c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idMat2::InverseSelf</definition>
        <argsstring>(void)</argsstring>
        <name>InverseSelf</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="95" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.cpp" bodystart="47" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1a5e8d08663caac92382654da372dca54f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat2" kindref="compound">idMat2</ref></type>
        <definition>ID_INLINE idMat2 idMat2::InverseFast</definition>
        <argsstring>(void) const </argsstring>
        <name>InverseFast</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="96" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="303" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1ae036e55e7af89b05ae81012100fc8bff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idMat2::InverseFastSelf</definition>
        <argsstring>(void)</argsstring>
        <name>InverseFastSelf</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="97" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.cpp" bodystart="74" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1ad1e45d87fc45a3dfdddb3352859ad96a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idMat2::GetDimension</definition>
        <argsstring>(void) const </argsstring>
        <name>GetDimension</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="99" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="312" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1a041269a5fdf912024606869ffc03e643" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float *</type>
        <definition>ID_INLINE const float * idMat2::ToFloatPtr</definition>
        <argsstring>(void) const </argsstring>
        <name>ToFloatPtr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="101" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="316" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1a4faa3c95d97d5446e53f79bec967de4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float *</type>
        <definition>ID_INLINE float * idMat2::ToFloatPtr</definition>
        <argsstring>(void)</argsstring>
        <name>ToFloatPtr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="102" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="320" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat2_1af5a8a60b84f686e88b7f887176a3930c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * idMat2::ToString</definition>
        <argsstring>(int precision=2) const </argsstring>
        <name>ToString</name>
        <param>
          <type>int</type>
          <declname>precision</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="103" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.cpp" bodystart="128" bodyend="130"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classid_mat2_1a1457923236d7bd438bfa3095458f2e1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classid_mat2" kindref="compound">idMat2</ref></type>
        <definition>idMat2 operator*</definition>
        <argsstring>(const float a, const idMat2 &amp;mat)</argsstring>
        <name>operator*</name>
        <param>
          <type>const float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat2" kindref="compound">idMat2</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="75" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="213" bodyend="215"/>
      </memberdef>
      <memberdef kind="friend" id="classid_mat2_1a81a89ccf86ee12ffd75d8e0ef611d3ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classid_vec2" kindref="compound">idVec2</ref></type>
        <definition>idVec2 operator*</definition>
        <argsstring>(const idVec2 &amp;vec, const idMat2 &amp;mat)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classid_vec2" kindref="compound">idVec2</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat2" kindref="compound">idMat2</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="76" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="209" bodyend="211"/>
      </memberdef>
      <memberdef kind="friend" id="classid_mat2_1ab6be23e67ce22fe71cb674fadafead80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classid_vec2" kindref="compound">idVec2</ref> &amp;</type>
        <definition>idVec2&amp; operator*=</definition>
        <argsstring>(idVec2 &amp;vec, const idMat2 &amp;mat)</argsstring>
        <name>operator*=</name>
        <param>
          <type><ref refid="classid_vec2" kindref="compound">idVec2</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat2" kindref="compound">idMat2</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="77" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="217" bodyend="220"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="55" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="55" bodyend="107"/>
    <listofallmembers>
      <member refid="classid_mat2_1a4daabe2f3d08405aa2ce8ab332821215" prot="public" virt="non-virtual"><scope>idMat2</scope><name>Compare</name></member>
      <member refid="classid_mat2_1a88dfac04f2b34f71583d7679ac08db56" prot="public" virt="non-virtual"><scope>idMat2</scope><name>Compare</name></member>
      <member refid="classid_mat2_1a7fe3ace174cbe56a199fa00e05b483ed" prot="public" virt="non-virtual"><scope>idMat2</scope><name>Determinant</name></member>
      <member refid="classid_mat2_1ad1e45d87fc45a3dfdddb3352859ad96a" prot="public" virt="non-virtual"><scope>idMat2</scope><name>GetDimension</name></member>
      <member refid="classid_mat2_1a823ccd64239e1f87b2de67cdb4215026" prot="public" virt="non-virtual"><scope>idMat2</scope><name>Identity</name></member>
      <member refid="classid_mat2_1af608438f93a6d1dbcee6d372163458ab" prot="public" virt="non-virtual"><scope>idMat2</scope><name>idMat2</name></member>
      <member refid="classid_mat2_1ae0d10328cf2991193e2e10e5df592a18" prot="public" virt="non-virtual"><scope>idMat2</scope><name>idMat2</name></member>
      <member refid="classid_mat2_1a9cf2b196317a7ef5699ca979801e7160" prot="public" virt="non-virtual"><scope>idMat2</scope><name>idMat2</name></member>
      <member refid="classid_mat2_1addeb0697b64a8f132ecf87817d720745" prot="public" virt="non-virtual"><scope>idMat2</scope><name>idMat2</name></member>
      <member refid="classid_mat2_1a34cd8934394dafeaec5f4c86769e43df" prot="public" virt="non-virtual"><scope>idMat2</scope><name>Inverse</name></member>
      <member refid="classid_mat2_1a5e8d08663caac92382654da372dca54f" prot="public" virt="non-virtual"><scope>idMat2</scope><name>InverseFast</name></member>
      <member refid="classid_mat2_1ae036e55e7af89b05ae81012100fc8bff" prot="public" virt="non-virtual"><scope>idMat2</scope><name>InverseFastSelf</name></member>
      <member refid="classid_mat2_1a72cf2dc70d44e90cdee60808b02f713c" prot="public" virt="non-virtual"><scope>idMat2</scope><name>InverseSelf</name></member>
      <member refid="classid_mat2_1a0958d15dc249c640d0bb5fdd551b32e6" prot="public" virt="non-virtual"><scope>idMat2</scope><name>IsDiagonal</name></member>
      <member refid="classid_mat2_1af6304ce16fc6784903830f6efece7be9" prot="public" virt="non-virtual"><scope>idMat2</scope><name>IsIdentity</name></member>
      <member refid="classid_mat2_1a73faf7ef047d1c7540ac2152c320f116" prot="public" virt="non-virtual"><scope>idMat2</scope><name>IsSymmetric</name></member>
      <member refid="classid_mat2_1aad373866c88a8487ee97ec78cf8409d2" prot="private" virt="non-virtual"><scope>idMat2</scope><name>mat</name></member>
      <member refid="classid_mat2_1a393670c061ab7a37bd13f97eae7b70b3" prot="public" virt="non-virtual"><scope>idMat2</scope><name>operator!=</name></member>
      <member refid="classid_mat2_1ae0cec996ab77e2de648ffe52fd186849" prot="public" virt="non-virtual"><scope>idMat2</scope><name>operator*</name></member>
      <member refid="classid_mat2_1a3385a39e10ef38180249e32a74fdf34e" prot="public" virt="non-virtual"><scope>idMat2</scope><name>operator*</name></member>
      <member refid="classid_mat2_1a46e3ff2c5a2de40be1ab91f99fe3209b" prot="public" virt="non-virtual"><scope>idMat2</scope><name>operator*</name></member>
      <member refid="classid_mat2_1a1457923236d7bd438bfa3095458f2e1c" prot="public" virt="non-virtual"><scope>idMat2</scope><name>operator*</name></member>
      <member refid="classid_mat2_1a81a89ccf86ee12ffd75d8e0ef611d3ee" prot="public" virt="non-virtual"><scope>idMat2</scope><name>operator*</name></member>
      <member refid="classid_mat2_1a02ee6599d1b80c14b4532f5b28adf8a0" prot="public" virt="non-virtual"><scope>idMat2</scope><name>operator*=</name></member>
      <member refid="classid_mat2_1ad778dfd3cfb49ae09e7c5c28a0879623" prot="public" virt="non-virtual"><scope>idMat2</scope><name>operator*=</name></member>
      <member refid="classid_mat2_1ab6be23e67ce22fe71cb674fadafead80" prot="public" virt="non-virtual"><scope>idMat2</scope><name>operator*=</name></member>
      <member refid="classid_mat2_1a5f53e9304efc67f1c10b94cd9a0e6ae4" prot="public" virt="non-virtual"><scope>idMat2</scope><name>operator+</name></member>
      <member refid="classid_mat2_1a0bd6e4f36453e01bc59185a1fd503fc1" prot="public" virt="non-virtual"><scope>idMat2</scope><name>operator+=</name></member>
      <member refid="classid_mat2_1aa3ef949f493af8c956a9f48edd4e868d" prot="public" virt="non-virtual"><scope>idMat2</scope><name>operator-</name></member>
      <member refid="classid_mat2_1afdc98f567a81f72e7ff9d207ffc7d82b" prot="public" virt="non-virtual"><scope>idMat2</scope><name>operator-</name></member>
      <member refid="classid_mat2_1a0cd6ad9d8a7c464d0d1c743cfa308bf7" prot="public" virt="non-virtual"><scope>idMat2</scope><name>operator-=</name></member>
      <member refid="classid_mat2_1a73f3e345908d83ee8067d26912df0d7f" prot="public" virt="non-virtual"><scope>idMat2</scope><name>operator==</name></member>
      <member refid="classid_mat2_1a9aca51d16dc6da41a42e5f9527d29d7b" prot="public" virt="non-virtual"><scope>idMat2</scope><name>operator[]</name></member>
      <member refid="classid_mat2_1a712a962409f6b53a675285a73822b64f" prot="public" virt="non-virtual"><scope>idMat2</scope><name>operator[]</name></member>
      <member refid="classid_mat2_1a041269a5fdf912024606869ffc03e643" prot="public" virt="non-virtual"><scope>idMat2</scope><name>ToFloatPtr</name></member>
      <member refid="classid_mat2_1a4faa3c95d97d5446e53f79bec967de4f" prot="public" virt="non-virtual"><scope>idMat2</scope><name>ToFloatPtr</name></member>
      <member refid="classid_mat2_1af5a8a60b84f686e88b7f887176a3930c" prot="public" virt="non-virtual"><scope>idMat2</scope><name>ToString</name></member>
      <member refid="classid_mat2_1a722f22e60b342735acde8da3cd8e1cfc" prot="public" virt="non-virtual"><scope>idMat2</scope><name>Trace</name></member>
      <member refid="classid_mat2_1a50af56c2730bf55a84dc40041ca006a6" prot="public" virt="non-virtual"><scope>idMat2</scope><name>Transpose</name></member>
      <member refid="classid_mat2_1a865005eb748c429a36df271006a8e4d3" prot="public" virt="non-virtual"><scope>idMat2</scope><name>TransposeSelf</name></member>
      <member refid="classid_mat2_1abb776c650a9850aa23f619f98033f56e" prot="public" virt="non-virtual"><scope>idMat2</scope><name>Zero</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
