<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_mat4" kind="class" prot="public">
    <compoundname>idMat4</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classid_mat4_1accfa8389539ac169e7303862174c055e" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec4" kindref="compound">idVec4</ref></type>
        <definition>idVec4 idMat4::mat[4]</definition>
        <argsstring>[4]</argsstring>
        <name>mat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="826" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="826" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_mat4_1a6b2ad16e38ab926025b5310a154e2df4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idMat4::idMat4</definition>
        <argsstring>(void)</argsstring>
        <name>idMat4</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="766" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="833" bodyend="834"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1a7424de35544c64dd6198e6431d15146d" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idMat4::idMat4</definition>
        <argsstring>(const idVec4 &amp;x, const idVec4 &amp;y, const idVec4 &amp;z, const idVec4 &amp;w)</argsstring>
        <name>idMat4</name>
        <param>
          <type>const <ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>z</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="767" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="836" bodyend="841"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1aca54ce718d88082b9b240af4475be563" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idMat4::idMat4</definition>
        <argsstring>(const float xx, const float xy, const float xz, const float xw, const float yx, const float yy, const float yz, const float yw, const float zx, const float zy, const float zz, const float zw, const float wx, const float wy, const float wz, const float ww)</argsstring>
        <name>idMat4</name>
        <param>
          <type>const float</type>
          <declname>xx</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>xy</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>xz</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>xw</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>yx</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>yy</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>yz</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>yw</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>zx</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>zy</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>zz</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>zw</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>wx</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>wy</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>wz</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>ww</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="768" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="843" bodyend="851"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1a76290b607f89c5ccb0a5c7f201dafa70" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idMat4::idMat4</definition>
        <argsstring>(const idMat3 &amp;rotation, const idVec3 &amp;translation)</argsstring>
        <name>idMat4</name>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>translation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="772" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="853" bodyend="871"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1ae4bcdcd6ffefb30c810faea1a209b726" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idMat4::idMat4</definition>
        <argsstring>(const float src[4][4])</argsstring>
        <name>idMat4</name>
        <param>
          <type>const float</type>
          <declname>src</declname>
          <array>[4][4]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="773" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="873" bodyend="875"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1a1764e30846d2c955fd7214cbd0178922" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
        <definition>ID_INLINE const idVec4 &amp; idMat4::operator[]</definition>
        <argsstring>(int index) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="775" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="877" bodyend="880"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1ac9d786158dbc971108ce65d5ebc80710" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
        <definition>ID_INLINE idVec4 &amp; idMat4::operator[]</definition>
        <argsstring>(int index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="776" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="882" bodyend="885"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1a34c2cc542a5e23a4673f00ad20c8b9f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat4" kindref="compound">idMat4</ref></type>
        <definition>ID_INLINE idMat4 idMat4::operator*</definition>
        <argsstring>(const float a) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const float</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="777" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="887" bodyend="893"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1a342855d25746c06b1010e0b2d6b0ad03" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec4" kindref="compound">idVec4</ref></type>
        <definition>ID_INLINE idVec4 idMat4::operator*</definition>
        <argsstring>(const idVec4 &amp;vec) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="778" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="895" bodyend="901"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1a29c067edec1d5c7bcd68ada90319077e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>ID_INLINE idVec3 idMat4::operator*</definition>
        <argsstring>(const idVec3 &amp;vec) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="779" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="903" bodyend="921"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1a6b06943fa045de06f9d6ac672c734968" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat4" kindref="compound">idMat4</ref></type>
        <definition>ID_INLINE idMat4 idMat4::operator*</definition>
        <argsstring>(const idMat4 &amp;a) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classid_mat4" kindref="compound">idMat4</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="780" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="923" bodyend="944"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1a622b10c11999c7a03088d66fb6d6624e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat4" kindref="compound">idMat4</ref></type>
        <definition>ID_INLINE idMat4 idMat4::operator+</definition>
        <argsstring>(const idMat4 &amp;a) const </argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classid_mat4" kindref="compound">idMat4</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="781" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="946" bodyend="952"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1aad8288c3c0b295aaf7febc6c572d323b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat4" kindref="compound">idMat4</ref></type>
        <definition>ID_INLINE idMat4 idMat4::operator-</definition>
        <argsstring>(const idMat4 &amp;a) const </argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classid_mat4" kindref="compound">idMat4</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="782" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="954" bodyend="960"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1a3811f7c999eb2d6a214adc955f98fd4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat4" kindref="compound">idMat4</ref> &amp;</type>
        <definition>ID_INLINE idMat4 &amp; idMat4::operator*=</definition>
        <argsstring>(const float a)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const float</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="783" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="962" bodyend="968"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1addce8db0fea8ce7d515b92265542fe6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat4" kindref="compound">idMat4</ref> &amp;</type>
        <definition>ID_INLINE idMat4 &amp; idMat4::operator*=</definition>
        <argsstring>(const idMat4 &amp;a)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classid_mat4" kindref="compound">idMat4</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="784" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="970" bodyend="973"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1a7f9bc1e78859ed4bf72407d992258b40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat4" kindref="compound">idMat4</ref> &amp;</type>
        <definition>ID_INLINE idMat4 &amp; idMat4::operator+=</definition>
        <argsstring>(const idMat4 &amp;a)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classid_mat4" kindref="compound">idMat4</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="785" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="975" bodyend="981"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1a57a3af39f5383ba45782782b77310ac5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat4" kindref="compound">idMat4</ref> &amp;</type>
        <definition>ID_INLINE idMat4 &amp; idMat4::operator-=</definition>
        <argsstring>(const idMat4 &amp;a)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classid_mat4" kindref="compound">idMat4</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="786" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="983" bodyend="989"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1a02e68683ef20b3a74e788ae1a646677f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idMat4::Compare</definition>
        <argsstring>(const idMat4 &amp;a) const </argsstring>
        <name>Compare</name>
        <param>
          <type>const <ref refid="classid_mat4" kindref="compound">idMat4</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="794" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1013" bodyend="1025"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1a5ee64ba9935cf89029468256001e3ac8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idMat4::Compare</definition>
        <argsstring>(const idMat4 &amp;a, const float epsilon) const </argsstring>
        <name>Compare</name>
        <param>
          <type>const <ref refid="classid_mat4" kindref="compound">idMat4</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="795" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1027" bodyend="1039"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1af3fb65848fb794c13774d8ae9129ef3b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idMat4::operator==</definition>
        <argsstring>(const idMat4 &amp;a) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classid_mat4" kindref="compound">idMat4</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="796" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1041" bodyend="1043"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1a1623561c8a7e3ac26b72e7b0a424f81d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idMat4::operator!=</definition>
        <argsstring>(const idMat4 &amp;a) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classid_mat4" kindref="compound">idMat4</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="797" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1045" bodyend="1047"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1ab23ba34cb5a6f573466a1c37483facfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idMat4::Zero</definition>
        <argsstring>(void)</argsstring>
        <name>Zero</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="799" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1049" bodyend="1051"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1a846f2870b1c71c81300454af3ceb7bde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idMat4::Identity</definition>
        <argsstring>(void)</argsstring>
        <name>Identity</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="800" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1053" bodyend="1055"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1afac81a9106bc483ad45db58d94795e9e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idMat4::IsIdentity</definition>
        <argsstring>(const float epsilon=1e-6) const </argsstring>
        <name>IsIdentity</name>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
          <defval>1e-6</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="801" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1057" bodyend="1059"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1a63dbf4b74507ea27054454f74122488e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idMat4::IsSymmetric</definition>
        <argsstring>(const float epsilon=1e-6) const </argsstring>
        <name>IsSymmetric</name>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
          <defval>1e-6</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="802" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1061" bodyend="1070"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1a5cddf0fc22b7e255509d6b2d8515d0f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idMat4::IsDiagonal</definition>
        <argsstring>(const float epsilon=1e-6) const </argsstring>
        <name>IsDiagonal</name>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
          <defval>1e-6</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="803" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1072" bodyend="1081"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1a54d0f9e002e5f3d13111af05fd5f4896" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idMat4::IsRotated</definition>
        <argsstring>(void) const </argsstring>
        <name>IsRotated</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="804" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1083" bodyend="1090"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1a2edf3f2fa9253815cf4d7bedf6d979b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idMat4::ProjectVector</definition>
        <argsstring>(const idVec4 &amp;src, idVec4 &amp;dst) const </argsstring>
        <name>ProjectVector</name>
        <param>
          <type>const <ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="806" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1092" bodyend="1097"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1ad30ca7c34ad968374bb90ca18767f90c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idMat4::UnprojectVector</definition>
        <argsstring>(const idVec4 &amp;src, idVec4 &amp;dst) const </argsstring>
        <name>UnprojectVector</name>
        <param>
          <type>const <ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="807" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1099" bodyend="1101"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1a98be7a2bc9151e4c5c5f0c023cad5a95" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>ID_INLINE float idMat4::Trace</definition>
        <argsstring>(void) const </argsstring>
        <name>Trace</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="809" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1103" bodyend="1105"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1a8404ec18f3978921531a280a147e0a27" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float idMat4::Determinant</definition>
        <argsstring>(void) const </argsstring>
        <name>Determinant</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="810" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.cpp" bodystart="665" bodyend="682"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1aadda316c3fd48b0768366d6624e314e6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat4" kindref="compound">idMat4</ref></type>
        <definition>idMat4 idMat4::Transpose</definition>
        <argsstring>(void) const </argsstring>
        <name>Transpose</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="811" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.cpp" bodystart="629" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1a93834b0c90d7a6881267505c5486768c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat4" kindref="compound">idMat4</ref> &amp;</type>
        <definition>idMat4 &amp; idMat4::TransposeSelf</definition>
        <argsstring>(void)</argsstring>
        <name>TransposeSelf</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="812" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.cpp" bodystart="646" bodyend="658"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1ad6479436ec2a2d3f6c15ace8e290b0d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat4" kindref="compound">idMat4</ref></type>
        <definition>ID_INLINE idMat4 idMat4::Inverse</definition>
        <argsstring>(void) const </argsstring>
        <name>Inverse</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="813" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1107" bodyend="1114"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1a63522e1a1c063903a96cbfb9830fcf4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idMat4::InverseSelf</definition>
        <argsstring>(void)</argsstring>
        <name>InverseSelf</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="814" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.cpp" bodystart="689" bodyend="768"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1a706aeb6f6f6110a62956afbebffad27f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat4" kindref="compound">idMat4</ref></type>
        <definition>ID_INLINE idMat4 idMat4::InverseFast</definition>
        <argsstring>(void) const </argsstring>
        <name>InverseFast</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="815" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1116" bodyend="1123"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1acee32d92fa594712b2c2d2abf4bf371d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idMat4::InverseFastSelf</definition>
        <argsstring>(void)</argsstring>
        <name>InverseFastSelf</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="816" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.cpp" bodystart="775" bodyend="1038"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1ae9be470598ccbe570c981c6ccefc027b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat4" kindref="compound">idMat4</ref></type>
        <definition>idMat4 idMat4::TransposeMultiply</definition>
        <argsstring>(const idMat4 &amp;b) const </argsstring>
        <name>TransposeMultiply</name>
        <param>
          <type>const <ref refid="classid_mat4" kindref="compound">idMat4</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="817" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1afbcff26301f9e249ed4276450ecbc124" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idMat4::GetDimension</definition>
        <argsstring>(void) const </argsstring>
        <name>GetDimension</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="819" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1133" bodyend="1135"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1a3b4b65baeb397e92da2d2609e61cf6ae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float *</type>
        <definition>ID_INLINE const float * idMat4::ToFloatPtr</definition>
        <argsstring>(void) const </argsstring>
        <name>ToFloatPtr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="821" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1137" bodyend="1139"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1af79286a453c16488b4d299af7b4ecada" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float *</type>
        <definition>ID_INLINE float * idMat4::ToFloatPtr</definition>
        <argsstring>(void)</argsstring>
        <name>ToFloatPtr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="822" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1141" bodyend="1143"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat4_1a140d0ee38cedc31854e5e6d868e1052a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * idMat4::ToString</definition>
        <argsstring>(int precision=2) const </argsstring>
        <name>ToString</name>
        <param>
          <type>int</type>
          <declname>precision</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="823" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.cpp" bodystart="1045" bodyend="1047"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classid_mat4_1a62ea763d3364937226dba65e295c392d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classid_mat4" kindref="compound">idMat4</ref></type>
        <definition>idMat4 operator*</definition>
        <argsstring>(const float a, const idMat4 &amp;mat)</argsstring>
        <name>operator*</name>
        <param>
          <type>const float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat4" kindref="compound">idMat4</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="788" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="991" bodyend="993"/>
      </memberdef>
      <memberdef kind="friend" id="classid_mat4_1aec2f60f5544472e51d7d18f16611c029" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classid_vec4" kindref="compound">idVec4</ref></type>
        <definition>idVec4 operator*</definition>
        <argsstring>(const idVec4 &amp;vec, const idMat4 &amp;mat)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat4" kindref="compound">idMat4</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="789" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="995" bodyend="997"/>
      </memberdef>
      <memberdef kind="friend" id="classid_mat4_1a6a9b6b84d016ea3a1b9c0c8a3f3c8fbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>idVec3 operator*</definition>
        <argsstring>(const idVec3 &amp;vec, const idMat4 &amp;mat)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat4" kindref="compound">idMat4</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="790" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="999" bodyend="1001"/>
      </memberdef>
      <memberdef kind="friend" id="classid_mat4_1adb305283d18fe920ac62c310f17433e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
        <definition>idVec4&amp; operator*=</definition>
        <argsstring>(idVec4 &amp;vec, const idMat4 &amp;mat)</argsstring>
        <name>operator*=</name>
        <param>
          <type><ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat4" kindref="compound">idMat4</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="791" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1003" bodyend="1006"/>
      </memberdef>
      <memberdef kind="friend" id="classid_mat4_1a230a290db71b7de1d78a812b78bb632e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>idVec3&amp; operator*=</definition>
        <argsstring>(idVec3 &amp;vec, const idMat4 &amp;mat)</argsstring>
        <name>operator*=</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat4" kindref="compound">idMat4</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="792" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1008" bodyend="1011"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="764" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="764" bodyend="827"/>
    <listofallmembers>
      <member refid="classid_mat4_1a02e68683ef20b3a74e788ae1a646677f" prot="public" virt="non-virtual"><scope>idMat4</scope><name>Compare</name></member>
      <member refid="classid_mat4_1a5ee64ba9935cf89029468256001e3ac8" prot="public" virt="non-virtual"><scope>idMat4</scope><name>Compare</name></member>
      <member refid="classid_mat4_1a8404ec18f3978921531a280a147e0a27" prot="public" virt="non-virtual"><scope>idMat4</scope><name>Determinant</name></member>
      <member refid="classid_mat4_1afbcff26301f9e249ed4276450ecbc124" prot="public" virt="non-virtual"><scope>idMat4</scope><name>GetDimension</name></member>
      <member refid="classid_mat4_1a846f2870b1c71c81300454af3ceb7bde" prot="public" virt="non-virtual"><scope>idMat4</scope><name>Identity</name></member>
      <member refid="classid_mat4_1a6b2ad16e38ab926025b5310a154e2df4" prot="public" virt="non-virtual"><scope>idMat4</scope><name>idMat4</name></member>
      <member refid="classid_mat4_1a7424de35544c64dd6198e6431d15146d" prot="public" virt="non-virtual"><scope>idMat4</scope><name>idMat4</name></member>
      <member refid="classid_mat4_1aca54ce718d88082b9b240af4475be563" prot="public" virt="non-virtual"><scope>idMat4</scope><name>idMat4</name></member>
      <member refid="classid_mat4_1a76290b607f89c5ccb0a5c7f201dafa70" prot="public" virt="non-virtual"><scope>idMat4</scope><name>idMat4</name></member>
      <member refid="classid_mat4_1ae4bcdcd6ffefb30c810faea1a209b726" prot="public" virt="non-virtual"><scope>idMat4</scope><name>idMat4</name></member>
      <member refid="classid_mat4_1ad6479436ec2a2d3f6c15ace8e290b0d5" prot="public" virt="non-virtual"><scope>idMat4</scope><name>Inverse</name></member>
      <member refid="classid_mat4_1a706aeb6f6f6110a62956afbebffad27f" prot="public" virt="non-virtual"><scope>idMat4</scope><name>InverseFast</name></member>
      <member refid="classid_mat4_1acee32d92fa594712b2c2d2abf4bf371d" prot="public" virt="non-virtual"><scope>idMat4</scope><name>InverseFastSelf</name></member>
      <member refid="classid_mat4_1a63522e1a1c063903a96cbfb9830fcf4c" prot="public" virt="non-virtual"><scope>idMat4</scope><name>InverseSelf</name></member>
      <member refid="classid_mat4_1a5cddf0fc22b7e255509d6b2d8515d0f4" prot="public" virt="non-virtual"><scope>idMat4</scope><name>IsDiagonal</name></member>
      <member refid="classid_mat4_1afac81a9106bc483ad45db58d94795e9e" prot="public" virt="non-virtual"><scope>idMat4</scope><name>IsIdentity</name></member>
      <member refid="classid_mat4_1a54d0f9e002e5f3d13111af05fd5f4896" prot="public" virt="non-virtual"><scope>idMat4</scope><name>IsRotated</name></member>
      <member refid="classid_mat4_1a63dbf4b74507ea27054454f74122488e" prot="public" virt="non-virtual"><scope>idMat4</scope><name>IsSymmetric</name></member>
      <member refid="classid_mat4_1accfa8389539ac169e7303862174c055e" prot="private" virt="non-virtual"><scope>idMat4</scope><name>mat</name></member>
      <member refid="classid_mat4_1a1623561c8a7e3ac26b72e7b0a424f81d" prot="public" virt="non-virtual"><scope>idMat4</scope><name>operator!=</name></member>
      <member refid="classid_mat4_1a34c2cc542a5e23a4673f00ad20c8b9f2" prot="public" virt="non-virtual"><scope>idMat4</scope><name>operator*</name></member>
      <member refid="classid_mat4_1a342855d25746c06b1010e0b2d6b0ad03" prot="public" virt="non-virtual"><scope>idMat4</scope><name>operator*</name></member>
      <member refid="classid_mat4_1a29c067edec1d5c7bcd68ada90319077e" prot="public" virt="non-virtual"><scope>idMat4</scope><name>operator*</name></member>
      <member refid="classid_mat4_1a6b06943fa045de06f9d6ac672c734968" prot="public" virt="non-virtual"><scope>idMat4</scope><name>operator*</name></member>
      <member refid="classid_mat4_1a62ea763d3364937226dba65e295c392d" prot="public" virt="non-virtual"><scope>idMat4</scope><name>operator*</name></member>
      <member refid="classid_mat4_1aec2f60f5544472e51d7d18f16611c029" prot="public" virt="non-virtual"><scope>idMat4</scope><name>operator*</name></member>
      <member refid="classid_mat4_1a6a9b6b84d016ea3a1b9c0c8a3f3c8fbe" prot="public" virt="non-virtual"><scope>idMat4</scope><name>operator*</name></member>
      <member refid="classid_mat4_1a3811f7c999eb2d6a214adc955f98fd4c" prot="public" virt="non-virtual"><scope>idMat4</scope><name>operator*=</name></member>
      <member refid="classid_mat4_1addce8db0fea8ce7d515b92265542fe6f" prot="public" virt="non-virtual"><scope>idMat4</scope><name>operator*=</name></member>
      <member refid="classid_mat4_1adb305283d18fe920ac62c310f17433e9" prot="public" virt="non-virtual"><scope>idMat4</scope><name>operator*=</name></member>
      <member refid="classid_mat4_1a230a290db71b7de1d78a812b78bb632e" prot="public" virt="non-virtual"><scope>idMat4</scope><name>operator*=</name></member>
      <member refid="classid_mat4_1a622b10c11999c7a03088d66fb6d6624e" prot="public" virt="non-virtual"><scope>idMat4</scope><name>operator+</name></member>
      <member refid="classid_mat4_1a7f9bc1e78859ed4bf72407d992258b40" prot="public" virt="non-virtual"><scope>idMat4</scope><name>operator+=</name></member>
      <member refid="classid_mat4_1aad8288c3c0b295aaf7febc6c572d323b" prot="public" virt="non-virtual"><scope>idMat4</scope><name>operator-</name></member>
      <member refid="classid_mat4_1a57a3af39f5383ba45782782b77310ac5" prot="public" virt="non-virtual"><scope>idMat4</scope><name>operator-=</name></member>
      <member refid="classid_mat4_1af3fb65848fb794c13774d8ae9129ef3b" prot="public" virt="non-virtual"><scope>idMat4</scope><name>operator==</name></member>
      <member refid="classid_mat4_1a1764e30846d2c955fd7214cbd0178922" prot="public" virt="non-virtual"><scope>idMat4</scope><name>operator[]</name></member>
      <member refid="classid_mat4_1ac9d786158dbc971108ce65d5ebc80710" prot="public" virt="non-virtual"><scope>idMat4</scope><name>operator[]</name></member>
      <member refid="classid_mat4_1a2edf3f2fa9253815cf4d7bedf6d979b0" prot="public" virt="non-virtual"><scope>idMat4</scope><name>ProjectVector</name></member>
      <member refid="classid_mat4_1a3b4b65baeb397e92da2d2609e61cf6ae" prot="public" virt="non-virtual"><scope>idMat4</scope><name>ToFloatPtr</name></member>
      <member refid="classid_mat4_1af79286a453c16488b4d299af7b4ecada" prot="public" virt="non-virtual"><scope>idMat4</scope><name>ToFloatPtr</name></member>
      <member refid="classid_mat4_1a140d0ee38cedc31854e5e6d868e1052a" prot="public" virt="non-virtual"><scope>idMat4</scope><name>ToString</name></member>
      <member refid="classid_mat4_1a98be7a2bc9151e4c5c5f0c023cad5a95" prot="public" virt="non-virtual"><scope>idMat4</scope><name>Trace</name></member>
      <member refid="classid_mat4_1aadda316c3fd48b0768366d6624e314e6" prot="public" virt="non-virtual"><scope>idMat4</scope><name>Transpose</name></member>
      <member refid="classid_mat4_1ae9be470598ccbe570c981c6ccefc027b" prot="public" virt="non-virtual"><scope>idMat4</scope><name>TransposeMultiply</name></member>
      <member refid="classid_mat4_1a93834b0c90d7a6881267505c5486768c" prot="public" virt="non-virtual"><scope>idMat4</scope><name>TransposeSelf</name></member>
      <member refid="classid_mat4_1ad30ca7c34ad968374bb90ca18767f90c" prot="public" virt="non-virtual"><scope>idMat4</scope><name>UnprojectVector</name></member>
      <member refid="classid_mat4_1ab23ba34cb5a6f573466a1c37483facfb" prot="public" virt="non-virtual"><scope>idMat4</scope><name>Zero</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
