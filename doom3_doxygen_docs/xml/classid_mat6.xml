<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_mat6" kind="class" prot="public">
    <compoundname>idMat6</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classid_mat6_1ab1a3094ed0debf40a5aef6c0f5cb8d8b" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec6" kindref="compound">idVec6</ref></type>
        <definition>idVec6 idMat6::mat[6]</definition>
        <argsstring>[6]</argsstring>
        <name>mat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1500" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1500" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_mat6_1a902181bfa6e6c31257583f13ba62da51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idMat6::idMat6</definition>
        <argsstring>(void)</argsstring>
        <name>idMat6</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1451" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1507" bodyend="1508"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1a3e353e6ac719cbf87aaeb1a2934cc592" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idMat6::idMat6</definition>
        <argsstring>(const idVec6 &amp;v0, const idVec6 &amp;v1, const idVec6 &amp;v2, const idVec6 &amp;v3, const idVec6 &amp;v4, const idVec6 &amp;v5)</argsstring>
        <name>idMat6</name>
        <param>
          <type>const <ref refid="classid_vec6" kindref="compound">idVec6</ref> &amp;</type>
          <declname>v0</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec6" kindref="compound">idVec6</ref> &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec6" kindref="compound">idVec6</ref> &amp;</type>
          <declname>v2</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec6" kindref="compound">idVec6</ref> &amp;</type>
          <declname>v3</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec6" kindref="compound">idVec6</ref> &amp;</type>
          <declname>v4</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec6" kindref="compound">idVec6</ref> &amp;</type>
          <declname>v5</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1452" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1519" bodyend="1526"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1acdae56b921e2d43d7b09e1b11492d2a4" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idMat6::idMat6</definition>
        <argsstring>(const idMat3 &amp;m0, const idMat3 &amp;m1, const idMat3 &amp;m2, const idMat3 &amp;m3)</argsstring>
        <name>idMat6</name>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>m0</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>m1</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>m2</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>m3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1453" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1510" bodyend="1517"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1a2fcdbc6e8a581a86246dcc962f69ad76" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idMat6::idMat6</definition>
        <argsstring>(const float src[6][6])</argsstring>
        <name>idMat6</name>
        <param>
          <type>const float</type>
          <declname>src</declname>
          <array>[6][6]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1454" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1528" bodyend="1530"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1ae948d3ffbc42cd63111d4e15f792cce1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_vec6" kindref="compound">idVec6</ref> &amp;</type>
        <definition>ID_INLINE const idVec6 &amp; idMat6::operator[]</definition>
        <argsstring>(int index) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1456" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1532" bodyend="1535"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1ad502e06873f1ee925b1480909106c9ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec6" kindref="compound">idVec6</ref> &amp;</type>
        <definition>ID_INLINE idVec6 &amp; idMat6::operator[]</definition>
        <argsstring>(int index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1457" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1537" bodyend="1540"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1aae8510a96033fbaa3830704174af2353" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat6" kindref="compound">idMat6</ref></type>
        <definition>ID_INLINE idMat6 idMat6::operator*</definition>
        <argsstring>(const float a) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const float</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1458" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1567" bodyend="1575"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1a8bc92a94c1c2130a3b91a2700974cb73" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec6" kindref="compound">idVec6</ref></type>
        <definition>ID_INLINE idVec6 idMat6::operator*</definition>
        <argsstring>(const idVec6 &amp;vec) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classid_vec6" kindref="compound">idVec6</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1459" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1577" bodyend="1585"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1aefba524d3c9ff0f904ab27f557cca5aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat6" kindref="compound">idMat6</ref></type>
        <definition>ID_INLINE idMat6 idMat6::operator*</definition>
        <argsstring>(const idMat6 &amp;a) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classid_mat6" kindref="compound">idMat6</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1460" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1542" bodyend="1565"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1a61dcf86b4e780c64b6179a3fc5bea663" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat6" kindref="compound">idMat6</ref></type>
        <definition>ID_INLINE idMat6 idMat6::operator+</definition>
        <argsstring>(const idMat6 &amp;a) const </argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classid_mat6" kindref="compound">idMat6</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1461" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1587" bodyend="1595"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1a8046007deba5aa48c2eb806381847522" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat6" kindref="compound">idMat6</ref></type>
        <definition>ID_INLINE idMat6 idMat6::operator-</definition>
        <argsstring>(const idMat6 &amp;a) const </argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classid_mat6" kindref="compound">idMat6</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1462" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1597" bodyend="1605"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1a202956d41420c70f1b15aa93dc1ca6ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat6" kindref="compound">idMat6</ref> &amp;</type>
        <definition>ID_INLINE idMat6 &amp; idMat6::operator*=</definition>
        <argsstring>(const float a)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const float</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1463" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1607" bodyend="1615"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1a63c3467a8e9acf8668d5a54dd7dd3502" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat6" kindref="compound">idMat6</ref> &amp;</type>
        <definition>ID_INLINE idMat6 &amp; idMat6::operator*=</definition>
        <argsstring>(const idMat6 &amp;a)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classid_mat6" kindref="compound">idMat6</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1464" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1617" bodyend="1620"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1ac207741fa0032a8f65cf58fdb30a509a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat6" kindref="compound">idMat6</ref> &amp;</type>
        <definition>ID_INLINE idMat6 &amp; idMat6::operator+=</definition>
        <argsstring>(const idMat6 &amp;a)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classid_mat6" kindref="compound">idMat6</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1465" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1622" bodyend="1630"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1aabcc559b3b2d6b2871ccdb53e8ed4c0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat6" kindref="compound">idMat6</ref> &amp;</type>
        <definition>ID_INLINE idMat6 &amp; idMat6::operator-=</definition>
        <argsstring>(const idMat6 &amp;a)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classid_mat6" kindref="compound">idMat6</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1466" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1632" bodyend="1640"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1a71da2b85cd151c531f37da153d0d3ecd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idMat6::Compare</definition>
        <argsstring>(const idMat6 &amp;a) const </argsstring>
        <name>Compare</name>
        <param>
          <type>const <ref refid="classid_mat6" kindref="compound">idMat6</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1472" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1655" bodyend="1667"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1a992ec138cd1bc7fcfa70d60859eabc97" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idMat6::Compare</definition>
        <argsstring>(const idMat6 &amp;a, const float epsilon) const </argsstring>
        <name>Compare</name>
        <param>
          <type>const <ref refid="classid_mat6" kindref="compound">idMat6</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1473" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1669" bodyend="1681"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1ac77cdd86897caab01b5a1c59a785a67f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idMat6::operator==</definition>
        <argsstring>(const idMat6 &amp;a) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classid_mat6" kindref="compound">idMat6</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1474" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1683" bodyend="1685"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1a0e6f05f0673aa3e539f62e4b10c84315" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idMat6::operator!=</definition>
        <argsstring>(const idMat6 &amp;a) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classid_mat6" kindref="compound">idMat6</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1475" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1687" bodyend="1689"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1a0af8fd635a2734f65c000d306da34990" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idMat6::Zero</definition>
        <argsstring>(void)</argsstring>
        <name>Zero</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1477" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1691" bodyend="1693"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1aa7ddb2653d428d7bf9148631c68698b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idMat6::Identity</definition>
        <argsstring>(void)</argsstring>
        <name>Identity</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1478" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1695" bodyend="1697"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1a079e3bad73989e19ca3580f825777a19" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idMat6::IsIdentity</definition>
        <argsstring>(const float epsilon=1e-6) const </argsstring>
        <name>IsIdentity</name>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
          <defval>1e-6</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1479" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1699" bodyend="1701"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1afa8ba81dbedb30db4fc05fbdb45c3e75" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idMat6::IsSymmetric</definition>
        <argsstring>(const float epsilon=1e-6) const </argsstring>
        <name>IsSymmetric</name>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
          <defval>1e-6</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1480" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1703" bodyend="1712"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1a1416aaabd5eb1d3e8d9444d4eae02577" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idMat6::IsDiagonal</definition>
        <argsstring>(const float epsilon=1e-6) const </argsstring>
        <name>IsDiagonal</name>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
          <defval>1e-6</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1481" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1714" bodyend="1723"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1a780ef0b5c0f8b628364b8cdabe00307e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat3" kindref="compound">idMat3</ref></type>
        <definition>ID_INLINE idMat3 idMat6::SubMat3</definition>
        <argsstring>(int n) const </argsstring>
        <name>SubMat3</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1483" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1725" bodyend="1733"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1a966346b00c1464fcc996dbb6d1df4725" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>ID_INLINE float idMat6::Trace</definition>
        <argsstring>(void) const </argsstring>
        <name>Trace</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1484" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1735" bodyend="1737"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1a6d68c86eeb5944234e12512e0be3ae2d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float idMat6::Determinant</definition>
        <argsstring>(void) const </argsstring>
        <name>Determinant</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1485" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.cpp" bodystart="1793" bodyend="1862"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1a6d2053a9c856df4f52745e37f6df26ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat6" kindref="compound">idMat6</ref></type>
        <definition>idMat6 idMat6::Transpose</definition>
        <argsstring>(void) const </argsstring>
        <name>Transpose</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1486" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.cpp" bodystart="1757" bodyend="1767"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1a360ccd8cf013e28a0a1d899a61c0d5ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat6" kindref="compound">idMat6</ref> &amp;</type>
        <definition>idMat6 &amp; idMat6::TransposeSelf</definition>
        <argsstring>(void)</argsstring>
        <name>TransposeSelf</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1487" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.cpp" bodystart="1774" bodyend="1786"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1a77f29890edfa68d48115ac262bfcec62" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat6" kindref="compound">idMat6</ref></type>
        <definition>ID_INLINE idMat6 idMat6::Inverse</definition>
        <argsstring>(void) const </argsstring>
        <name>Inverse</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1488" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1739" bodyend="1746"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1a61bcbf270bf31524e9c6d6e56dc91cc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idMat6::InverseSelf</definition>
        <argsstring>(void)</argsstring>
        <name>InverseSelf</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1489" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.cpp" bodystart="1869" bodyend="2179"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1ad6e5431292ce29e04192ae50b585c421" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat6" kindref="compound">idMat6</ref></type>
        <definition>ID_INLINE idMat6 idMat6::InverseFast</definition>
        <argsstring>(void) const </argsstring>
        <name>InverseFast</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1490" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1748" bodyend="1755"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1aa3c41809101bdf7424868d38dddbf300" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idMat6::InverseFastSelf</definition>
        <argsstring>(void)</argsstring>
        <name>InverseFastSelf</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1491" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.cpp" bodystart="2186" bodyend="2920"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1a7599b3618106c192662514403f2ab2ea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idMat6::GetDimension</definition>
        <argsstring>(void) const </argsstring>
        <name>GetDimension</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1493" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1757" bodyend="1759"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1a0605f331f4f7ec0458ece5eeaff83cde" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float *</type>
        <definition>ID_INLINE const float * idMat6::ToFloatPtr</definition>
        <argsstring>(void) const </argsstring>
        <name>ToFloatPtr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1495" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1761" bodyend="1763"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1a34f95e99bfcd9d29c80caff30e748cee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float *</type>
        <definition>ID_INLINE float * idMat6::ToFloatPtr</definition>
        <argsstring>(void)</argsstring>
        <name>ToFloatPtr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1496" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1765" bodyend="1767"/>
      </memberdef>
      <memberdef kind="function" id="classid_mat6_1a535f3eb623f3a90ab59e8e4c47436d86" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * idMat6::ToString</definition>
        <argsstring>(int precision=2) const </argsstring>
        <name>ToString</name>
        <param>
          <type>int</type>
          <declname>precision</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1497" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.cpp" bodystart="2927" bodyend="2929"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classid_mat6_1a7505013caf657db16ea3f11358ee9362" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classid_mat6" kindref="compound">idMat6</ref></type>
        <definition>idMat6 operator*</definition>
        <argsstring>(const float a, const idMat6 &amp;mat)</argsstring>
        <name>operator*</name>
        <param>
          <type>const float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat6" kindref="compound">idMat6</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1468" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1646" bodyend="1648"/>
      </memberdef>
      <memberdef kind="friend" id="classid_mat6_1a47eb3ab6fa4878267a3db84ef5fc0179" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classid_vec6" kindref="compound">idVec6</ref></type>
        <definition>idVec6 operator*</definition>
        <argsstring>(const idVec6 &amp;vec, const idMat6 &amp;mat)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classid_vec6" kindref="compound">idVec6</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat6" kindref="compound">idMat6</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1469" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1642" bodyend="1644"/>
      </memberdef>
      <memberdef kind="friend" id="classid_mat6_1a6e18768f6385e629503acecc081998c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classid_vec6" kindref="compound">idVec6</ref> &amp;</type>
        <definition>idVec6&amp; operator*=</definition>
        <argsstring>(idVec6 &amp;vec, const idMat6 &amp;mat)</argsstring>
        <name>operator*=</name>
        <param>
          <type><ref refid="classid_vec6" kindref="compound">idVec6</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat6" kindref="compound">idMat6</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1470" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1650" bodyend="1653"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" line="1449" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Matrix.h" bodystart="1449" bodyend="1501"/>
    <listofallmembers>
      <member refid="classid_mat6_1a71da2b85cd151c531f37da153d0d3ecd" prot="public" virt="non-virtual"><scope>idMat6</scope><name>Compare</name></member>
      <member refid="classid_mat6_1a992ec138cd1bc7fcfa70d60859eabc97" prot="public" virt="non-virtual"><scope>idMat6</scope><name>Compare</name></member>
      <member refid="classid_mat6_1a6d68c86eeb5944234e12512e0be3ae2d" prot="public" virt="non-virtual"><scope>idMat6</scope><name>Determinant</name></member>
      <member refid="classid_mat6_1a7599b3618106c192662514403f2ab2ea" prot="public" virt="non-virtual"><scope>idMat6</scope><name>GetDimension</name></member>
      <member refid="classid_mat6_1aa7ddb2653d428d7bf9148631c68698b6" prot="public" virt="non-virtual"><scope>idMat6</scope><name>Identity</name></member>
      <member refid="classid_mat6_1a902181bfa6e6c31257583f13ba62da51" prot="public" virt="non-virtual"><scope>idMat6</scope><name>idMat6</name></member>
      <member refid="classid_mat6_1a3e353e6ac719cbf87aaeb1a2934cc592" prot="public" virt="non-virtual"><scope>idMat6</scope><name>idMat6</name></member>
      <member refid="classid_mat6_1acdae56b921e2d43d7b09e1b11492d2a4" prot="public" virt="non-virtual"><scope>idMat6</scope><name>idMat6</name></member>
      <member refid="classid_mat6_1a2fcdbc6e8a581a86246dcc962f69ad76" prot="public" virt="non-virtual"><scope>idMat6</scope><name>idMat6</name></member>
      <member refid="classid_mat6_1a77f29890edfa68d48115ac262bfcec62" prot="public" virt="non-virtual"><scope>idMat6</scope><name>Inverse</name></member>
      <member refid="classid_mat6_1ad6e5431292ce29e04192ae50b585c421" prot="public" virt="non-virtual"><scope>idMat6</scope><name>InverseFast</name></member>
      <member refid="classid_mat6_1aa3c41809101bdf7424868d38dddbf300" prot="public" virt="non-virtual"><scope>idMat6</scope><name>InverseFastSelf</name></member>
      <member refid="classid_mat6_1a61bcbf270bf31524e9c6d6e56dc91cc1" prot="public" virt="non-virtual"><scope>idMat6</scope><name>InverseSelf</name></member>
      <member refid="classid_mat6_1a1416aaabd5eb1d3e8d9444d4eae02577" prot="public" virt="non-virtual"><scope>idMat6</scope><name>IsDiagonal</name></member>
      <member refid="classid_mat6_1a079e3bad73989e19ca3580f825777a19" prot="public" virt="non-virtual"><scope>idMat6</scope><name>IsIdentity</name></member>
      <member refid="classid_mat6_1afa8ba81dbedb30db4fc05fbdb45c3e75" prot="public" virt="non-virtual"><scope>idMat6</scope><name>IsSymmetric</name></member>
      <member refid="classid_mat6_1ab1a3094ed0debf40a5aef6c0f5cb8d8b" prot="private" virt="non-virtual"><scope>idMat6</scope><name>mat</name></member>
      <member refid="classid_mat6_1a0e6f05f0673aa3e539f62e4b10c84315" prot="public" virt="non-virtual"><scope>idMat6</scope><name>operator!=</name></member>
      <member refid="classid_mat6_1aae8510a96033fbaa3830704174af2353" prot="public" virt="non-virtual"><scope>idMat6</scope><name>operator*</name></member>
      <member refid="classid_mat6_1a8bc92a94c1c2130a3b91a2700974cb73" prot="public" virt="non-virtual"><scope>idMat6</scope><name>operator*</name></member>
      <member refid="classid_mat6_1aefba524d3c9ff0f904ab27f557cca5aa" prot="public" virt="non-virtual"><scope>idMat6</scope><name>operator*</name></member>
      <member refid="classid_mat6_1a7505013caf657db16ea3f11358ee9362" prot="public" virt="non-virtual"><scope>idMat6</scope><name>operator*</name></member>
      <member refid="classid_mat6_1a47eb3ab6fa4878267a3db84ef5fc0179" prot="public" virt="non-virtual"><scope>idMat6</scope><name>operator*</name></member>
      <member refid="classid_mat6_1a202956d41420c70f1b15aa93dc1ca6ed" prot="public" virt="non-virtual"><scope>idMat6</scope><name>operator*=</name></member>
      <member refid="classid_mat6_1a63c3467a8e9acf8668d5a54dd7dd3502" prot="public" virt="non-virtual"><scope>idMat6</scope><name>operator*=</name></member>
      <member refid="classid_mat6_1a6e18768f6385e629503acecc081998c6" prot="public" virt="non-virtual"><scope>idMat6</scope><name>operator*=</name></member>
      <member refid="classid_mat6_1a61dcf86b4e780c64b6179a3fc5bea663" prot="public" virt="non-virtual"><scope>idMat6</scope><name>operator+</name></member>
      <member refid="classid_mat6_1ac207741fa0032a8f65cf58fdb30a509a" prot="public" virt="non-virtual"><scope>idMat6</scope><name>operator+=</name></member>
      <member refid="classid_mat6_1a8046007deba5aa48c2eb806381847522" prot="public" virt="non-virtual"><scope>idMat6</scope><name>operator-</name></member>
      <member refid="classid_mat6_1aabcc559b3b2d6b2871ccdb53e8ed4c0c" prot="public" virt="non-virtual"><scope>idMat6</scope><name>operator-=</name></member>
      <member refid="classid_mat6_1ac77cdd86897caab01b5a1c59a785a67f" prot="public" virt="non-virtual"><scope>idMat6</scope><name>operator==</name></member>
      <member refid="classid_mat6_1ae948d3ffbc42cd63111d4e15f792cce1" prot="public" virt="non-virtual"><scope>idMat6</scope><name>operator[]</name></member>
      <member refid="classid_mat6_1ad502e06873f1ee925b1480909106c9ea" prot="public" virt="non-virtual"><scope>idMat6</scope><name>operator[]</name></member>
      <member refid="classid_mat6_1a780ef0b5c0f8b628364b8cdabe00307e" prot="public" virt="non-virtual"><scope>idMat6</scope><name>SubMat3</name></member>
      <member refid="classid_mat6_1a0605f331f4f7ec0458ece5eeaff83cde" prot="public" virt="non-virtual"><scope>idMat6</scope><name>ToFloatPtr</name></member>
      <member refid="classid_mat6_1a34f95e99bfcd9d29c80caff30e748cee" prot="public" virt="non-virtual"><scope>idMat6</scope><name>ToFloatPtr</name></member>
      <member refid="classid_mat6_1a535f3eb623f3a90ab59e8e4c47436d86" prot="public" virt="non-virtual"><scope>idMat6</scope><name>ToString</name></member>
      <member refid="classid_mat6_1a966346b00c1464fcc996dbb6d1df4725" prot="public" virt="non-virtual"><scope>idMat6</scope><name>Trace</name></member>
      <member refid="classid_mat6_1a6d2053a9c856df4f52745e37f6df26ac" prot="public" virt="non-virtual"><scope>idMat6</scope><name>Transpose</name></member>
      <member refid="classid_mat6_1a360ccd8cf013e28a0a1d899a61c0d5ad" prot="public" virt="non-virtual"><scope>idMat6</scope><name>TransposeSelf</name></member>
      <member refid="classid_mat6_1a0af8fd635a2734f65c000d306da34990" prot="public" virt="non-virtual"><scope>idMat6</scope><name>Zero</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
