<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_physics___parametric" kind="class" prot="public">
    <compoundname>idPhysics_Parametric</compoundname>
    <basecompoundref refid="classid_physics___base" prot="public" virt="non-virtual">idPhysics_Base</basecompoundref>
    <basecompoundref refid="classid_physics___base" prot="public" virt="non-virtual">idPhysics_Base</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classid_physics___parametric_1a3516995651c4a0d55bc65138dee52ac4" prot="private" static="no" mutable="no">
        <type><ref refid="structparametric_p_state__s" kindref="compound">parametricPState_t</ref></type>
        <definition>parametricPState_t idPhysics_Parametric::current</definition>
        <argsstring></argsstring>
        <name>current</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="155" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___parametric_1af1938c503ea917a2be73a4c404dcad91" prot="private" static="no" mutable="no">
        <type><ref refid="structparametric_p_state__s" kindref="compound">parametricPState_t</ref></type>
        <definition>parametricPState_t idPhysics_Parametric::saved</definition>
        <argsstring></argsstring>
        <name>saved</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="156" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___parametric_1a963a01dddc9ae8cf0557b584879dba24" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idPhysics_Parametric::isPusher</definition>
        <argsstring></argsstring>
        <name>isPusher</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="159" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___parametric_1a5bc56936130e0914aca761ec423f5458" prot="private" static="no" mutable="no">
        <type><ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
        <definition>idClipModel * idPhysics_Parametric::clipModel</definition>
        <argsstring></argsstring>
        <name>clipModel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="160" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___parametric_1adc4a1b92ac038c9f307756eb3c0fc64d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idPhysics_Parametric::pushFlags</definition>
        <argsstring></argsstring>
        <name>pushFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="161" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___parametric_1a2c95f27bd1cfc64b0d616ac2940421a1" prot="private" static="no" mutable="no">
        <type><ref refid="structtrace__s" kindref="compound">trace_t</ref></type>
        <definition>trace_t idPhysics_Parametric::pushResults</definition>
        <argsstring></argsstring>
        <name>pushResults</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="164" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___parametric_1a4f486a78f98cd5cc3011351570c07655" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idPhysics_Parametric::isBlocked</definition>
        <argsstring></argsstring>
        <name>isBlocked</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="165" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___parametric_1a5fc7c334e15585498465766d2b6f6c35" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idPhysics_Parametric::hasMaster</definition>
        <argsstring></argsstring>
        <name>hasMaster</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="168" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___parametric_1a9edfffb4830f544e58cd19f4aebbf351" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idPhysics_Parametric::isOrientated</definition>
        <argsstring></argsstring>
        <name>isOrientated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="169" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_physics___parametric_1a9620668916988c19894b1092abd5b171" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idPhysics_Parametric::CLASS_PROTOTYPE</definition>
        <argsstring>(idPhysics_Parametric)</argsstring>
        <name>CLASS_PROTOTYPE</name>
        <param>
          <type><ref refid="classid_physics___parametric" kindref="compound">idPhysics_Parametric</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1af8dc3d5107820eb5edf2294b8eedc87e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idPhysics_Parametric::idPhysics_Parametric</definition>
        <argsstring>(void)</argsstring>
        <name>idPhysics_Parametric</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="67" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="101" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a5901e9a40869da0510493ee2e8650557" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idPhysics_Parametric::~idPhysics_Parametric</definition>
        <argsstring>(void)</argsstring>
        <name>~idPhysics_Parametric</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="68" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="135" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a1cafdc49f990091ab0869d9f9072d22a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::Save</definition>
        <argsstring>(idSaveGame *savefile) const </argsstring>
        <name>Save</name>
        <param>
          <type><ref refid="classid_save_game" kindref="compound">idSaveGame</ref> *</type>
          <declname>savefile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="70" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="272" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a839c8e4cc235ef2c1057299369ea17c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::Restore</definition>
        <argsstring>(idRestoreGame *savefile)</argsstring>
        <name>Restore</name>
        <param>
          <type><ref refid="classid_restore_game" kindref="compound">idRestoreGame</ref> *</type>
          <declname>savefile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="71" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="293" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1ab6483b17e9e7445a3b52b35727f66f9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SetPusher</definition>
        <argsstring>(int flags)</argsstring>
        <name>SetPusher</name>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="73" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="314" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a4f094f6fd4453bc9ee5e47bdfcee01d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idPhysics_Parametric::IsPusher</definition>
        <argsstring>(void) const </argsstring>
        <name>IsPusher</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="74" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="325" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a3435d812df74af3bccbf36a14bcab764" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SetLinearExtrapolation</definition>
        <argsstring>(extrapolation_t type, int time, int duration, const idVec3 &amp;base, const idVec3 &amp;speed, const idVec3 &amp;baseSpeed)</argsstring>
        <name>SetLinearExtrapolation</name>
        <param>
          <type>extrapolation_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>duration</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>speed</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>baseSpeed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="76" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="334" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a76f8f12a43a3820052c6da2c14f89ad5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SetAngularExtrapolation</definition>
        <argsstring>(extrapolation_t type, int time, int duration, const idAngles &amp;base, const idAngles &amp;speed, const idAngles &amp;baseSpeed)</argsstring>
        <name>SetAngularExtrapolation</name>
        <param>
          <type>extrapolation_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>duration</declname>
        </param>
        <param>
          <type>const <ref refid="classid_angles" kindref="compound">idAngles</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="classid_angles" kindref="compound">idAngles</ref> &amp;</type>
          <declname>speed</declname>
        </param>
        <param>
          <type>const <ref refid="classid_angles" kindref="compound">idAngles</ref> &amp;</type>
          <declname>baseSpeed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="77" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="346" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a8ffee84cbf90573d0f48a8c5e5cad815" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>extrapolation_t</type>
        <definition>extrapolation_t idPhysics_Parametric::GetLinearExtrapolationType</definition>
        <argsstring>(void) const </argsstring>
        <name>GetLinearExtrapolationType</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="78" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="358" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a5b3c652411a1f92deb9f18862a132fc6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>extrapolation_t</type>
        <definition>extrapolation_t idPhysics_Parametric::GetAngularExtrapolationType</definition>
        <argsstring>(void) const </argsstring>
        <name>GetAngularExtrapolationType</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="79" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="367" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1ab6cca99e1e8a46bb1761a8a323c96c35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SetLinearInterpolation</definition>
        <argsstring>(int time, int accelTime, int decelTime, int duration, const idVec3 &amp;startPos, const idVec3 &amp;endPos)</argsstring>
        <name>SetLinearInterpolation</name>
        <param>
          <type>int</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>accelTime</declname>
        </param>
        <param>
          <type>int</type>
          <declname>decelTime</declname>
        </param>
        <param>
          <type>int</type>
          <declname>duration</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>startPos</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>endPos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="81" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="376" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a6f34447871cdf2f2570709577a550590" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SetAngularInterpolation</definition>
        <argsstring>(int time, int accelTime, int decelTime, int duration, const idAngles &amp;startAng, const idAngles &amp;endAng)</argsstring>
        <name>SetAngularInterpolation</name>
        <param>
          <type>int</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>accelTime</declname>
        </param>
        <param>
          <type>int</type>
          <declname>decelTime</declname>
        </param>
        <param>
          <type>int</type>
          <declname>duration</declname>
        </param>
        <param>
          <type>const <ref refid="classid_angles" kindref="compound">idAngles</ref> &amp;</type>
          <declname>startAng</declname>
        </param>
        <param>
          <type>const <ref refid="classid_angles" kindref="compound">idAngles</ref> &amp;</type>
          <declname>endAng</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="82" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="388" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a868edd11b2037d3a0d542f6b0ecf78a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SetSpline</definition>
        <argsstring>(idCurve_Spline&lt; idVec3 &gt; *spline, int accelTime, int decelTime, bool useSplineAngles)</argsstring>
        <name>SetSpline</name>
        <param>
          <type><ref refid="classid_curve___spline" kindref="compound">idCurve_Spline</ref>&lt; <ref refid="classid_vec3" kindref="compound">idVec3</ref> &gt; *</type>
          <declname>spline</declname>
        </param>
        <param>
          <type>int</type>
          <declname>accelTime</declname>
        </param>
        <param>
          <type>int</type>
          <declname>decelTime</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>useSplineAngles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="84" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="400" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1ad18003cf490ee094d5c44a9a9f7f0cb2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_curve___spline" kindref="compound">idCurve_Spline</ref>&lt; <ref refid="classid_vec3" kindref="compound">idVec3</ref> &gt; *</type>
        <definition>idCurve_Spline&lt; idVec3 &gt; * idPhysics_Parametric::GetSpline</definition>
        <argsstring>(void) const </argsstring>
        <name>GetSpline</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="85" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="421" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1afc627d684c2b340570ccf4bc5dc58e38" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idPhysics_Parametric::GetSplineAcceleration</definition>
        <argsstring>(void) const </argsstring>
        <name>GetSplineAcceleration</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="86" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="430" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a691baf357938852c4cca258dbd62f8a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idPhysics_Parametric::GetSplineDeceleration</definition>
        <argsstring>(void) const </argsstring>
        <name>GetSplineDeceleration</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="87" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="439" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a4b545222d5971218e1c08abfba11dde0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idPhysics_Parametric::UsingSplineAngles</definition>
        <argsstring>(void) const </argsstring>
        <name>UsingSplineAngles</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="88" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="448" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a6eb8474aba2c97c3a20d996444621f1d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::GetLocalOrigin</definition>
        <argsstring>(idVec3 &amp;curOrigin) const </argsstring>
        <name>GetLocalOrigin</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>curOrigin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="90" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="457" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1af4cdc9369a502736e174b49af5c09ae3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::GetLocalAngles</definition>
        <argsstring>(idAngles &amp;curAngles) const </argsstring>
        <name>GetLocalAngles</name>
        <param>
          <type><ref refid="classid_angles" kindref="compound">idAngles</ref> &amp;</type>
          <declname>curAngles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="91" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="466" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a0b3b6484ad11d676bd40827ee630c2d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::GetAngles</definition>
        <argsstring>(idAngles &amp;curAngles) const </argsstring>
        <name>GetAngles</name>
        <param>
          <type><ref refid="classid_angles" kindref="compound">idAngles</ref> &amp;</type>
          <declname>curAngles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="93" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="831" bodyend="833"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1ae59db0081d9d802d10276d91be67a942" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SetClipModel</definition>
        <argsstring>(idClipModel *model, float density, int id=0, bool freeOld=true)</argsstring>
        <name>SetClipModel</name>
        <reimplements refid="classid_physics___base_1a5edb633e663b390e4ef86def7a73acf3">SetClipModel</reimplements>
        <param>
          <type><ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>float</type>
          <declname>density</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>freeOld</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="96" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="475" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1acb085d1a102a221e52e08ba9884b7a80" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
        <definition>idClipModel * idPhysics_Parametric::GetClipModel</definition>
        <argsstring>(int id=0) const </argsstring>
        <name>GetClipModel</name>
        <reimplements refid="classid_physics___base_1a0951d4bb0abbc765f91ac70dffc8697d">GetClipModel</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="97" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="492" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1ad1db7677c789d54b749c1382a4520977" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idPhysics_Parametric::GetNumClipModels</definition>
        <argsstring>(void) const </argsstring>
        <name>GetNumClipModels</name>
        <reimplements refid="classid_physics___base_1a8f6463ef806b08afcd55a3a1444b8418">GetNumClipModels</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="98" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="501" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a4c9b8e22389200c0deb2de8e691c611d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SetMass</definition>
        <argsstring>(float mass, int id=-1)</argsstring>
        <name>SetMass</name>
        <reimplements refid="classid_physics___base_1a886e32b283a3c179e560229e2347fa37">SetMass</reimplements>
        <param>
          <type>float</type>
          <declname>mass</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="100" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="510" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a85fb0906841fa01c870ef442fae0e0ef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>float</type>
        <definition>float idPhysics_Parametric::GetMass</definition>
        <argsstring>(int id=-1) const </argsstring>
        <name>GetMass</name>
        <reimplements refid="classid_physics___base_1acb76436fa3c366d359bd25232a6d3ec6">GetMass</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="101" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="518" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a9c7f3433cbc4ae579a4bdb4cd26f124b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SetContents</definition>
        <argsstring>(int contents, int id=-1)</argsstring>
        <name>SetContents</name>
        <reimplements refid="classid_physics___base_1ac80bde90971178559a1e1b6c9027b59f">SetContents</reimplements>
        <param>
          <type>int</type>
          <declname>contents</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="103" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="527" bodyend="531"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1af03167a9b1f1e19ac818fa4b5a96c358" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idPhysics_Parametric::GetContents</definition>
        <argsstring>(int id=-1) const </argsstring>
        <name>GetContents</name>
        <reimplements refid="classid_physics___base_1a33cb3cada27d29286f3166d9261e5228">GetContents</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="104" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="538" bodyend="543"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a2609d92d297586ddd5e960aeffc277c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
        <definition>const idBounds &amp; idPhysics_Parametric::GetBounds</definition>
        <argsstring>(int id=-1) const </argsstring>
        <name>GetBounds</name>
        <reimplements refid="classid_physics___base_1a7d642504c96aadf08357338addae4889">GetBounds</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="106" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="550" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a2e0858d98c8b19c986aa560533f58771" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
        <definition>const idBounds &amp; idPhysics_Parametric::GetAbsBounds</definition>
        <argsstring>(int id=-1) const </argsstring>
        <name>GetAbsBounds</name>
        <reimplements refid="classid_physics___base_1a6888af190525559c1938423350962e7a">GetAbsBounds</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="107" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="562" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a2bcc7f02a2f982412ab2812edd91fe21" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool idPhysics_Parametric::Evaluate</definition>
        <argsstring>(int timeStepMSec, int endTimeMSec)</argsstring>
        <name>Evaluate</name>
        <reimplements refid="classid_physics___base_1a68e8bb83889f347f77b5b7c0af1df3a0">Evaluate</reimplements>
        <param>
          <type>int</type>
          <declname>timeStepMSec</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endTimeMSec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="109" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="574" bodyend="655"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a192def7ea3c831a4fcff84e0c5fd06d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::UpdateTime</definition>
        <argsstring>(int endTimeMSec)</argsstring>
        <name>UpdateTime</name>
        <reimplements refid="classid_physics___base_1a57bc63cb5983f055072ff1e3da5c83a2">UpdateTime</reimplements>
        <param>
          <type>int</type>
          <declname>endTimeMSec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="110" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="662" bodyend="675"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a751d947e637dad857e59336520485050" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idPhysics_Parametric::GetTime</definition>
        <argsstring>(void) const </argsstring>
        <name>GetTime</name>
        <reimplements refid="classid_physics___base_1a5df6d476848ba03d22104cd27ac9acd0">GetTime</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="111" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="682" bodyend="684"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1adff11048313f40fdb9078436635e95b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::Activate</definition>
        <argsstring>(void)</argsstring>
        <name>Activate</name>
        <reimplements refid="classid_physics___base_1a0631910fa43a8b62994e4718c2e6ddc5">Activate</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="113" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a910051917dda42a71dc3a4fe16ff2e43" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool idPhysics_Parametric::IsAtRest</definition>
        <argsstring>(void) const </argsstring>
        <name>IsAtRest</name>
        <reimplements refid="classid_physics___base_1adf5fdb18bf2f51f4e9a62c0c3962496c">IsAtRest</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="114" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="691" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1adfa166b07d2202c508799a179c0ef6db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idPhysics_Parametric::GetRestStartTime</definition>
        <argsstring>(void) const </argsstring>
        <name>GetRestStartTime</name>
        <reimplements refid="classid_physics___base_1a573317c8b6147e7c5adba7022b01e3e4">GetRestStartTime</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="115" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="700" bodyend="702"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a430d4667783aa188925ee04b173524e6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool idPhysics_Parametric::IsPushable</definition>
        <argsstring>(void) const </argsstring>
        <name>IsPushable</name>
        <reimplements refid="classid_physics___base_1acf36457d378524f02a285d4e25f07080">IsPushable</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="116" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="709" bodyend="711"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1ae2e9c4552e871935fef55993dba6a1f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SaveState</definition>
        <argsstring>(void)</argsstring>
        <name>SaveState</name>
        <reimplements refid="classid_physics___base_1abfef1ec167da6780db337a59f6df318b">SaveState</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="118" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="718" bodyend="720"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1ae3e0600f0f8cd31b4e41bbb303199210" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::RestoreState</definition>
        <argsstring>(void)</argsstring>
        <name>RestoreState</name>
        <reimplements refid="classid_physics___base_1a2506a696d776e0f4ab7aeb5706a5df93">RestoreState</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="119" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="727" bodyend="734"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a493baf5016cee9f6e56d77c170d2ff8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SetOrigin</definition>
        <argsstring>(const idVec3 &amp;newOrigin, int id=-1)</argsstring>
        <name>SetOrigin</name>
        <reimplements refid="classid_physics___base_1a70d7961cab60fc62ef0ff32af732d51b">SetOrigin</reimplements>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>newOrigin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="121" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="741" bodyend="760"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a5a2664370a597c35e786c4e49eb5b3c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SetAxis</definition>
        <argsstring>(const idMat3 &amp;newAxis, int id=-1)</argsstring>
        <name>SetAxis</name>
        <reimplements refid="classid_physics___base_1a4dad199e469655584a79547d3c959ae9">SetAxis</reimplements>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>newAxis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="122" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="767" bodyend="790"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a76e8fb6e7066d5107bd1b02f32316a4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::Translate</definition>
        <argsstring>(const idVec3 &amp;translation, int id=-1)</argsstring>
        <name>Translate</name>
        <reimplements refid="classid_physics___base_1a9bb7ce564e1f8ad77f0003c24c86e54b">Translate</reimplements>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>translation</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="124" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="797" bodyend="798"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a780c62e9540ddf6f70407d1f53feef6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::Rotate</definition>
        <argsstring>(const idRotation &amp;rotation, int id=-1)</argsstring>
        <name>Rotate</name>
        <reimplements refid="classid_physics___base_1a277197f47e1ef55dd0ddd0e4ed40e93c">Rotate</reimplements>
        <param>
          <type>const <ref refid="classid_rotation" kindref="compound">idRotation</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="125" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="805" bodyend="806"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a0220b5da28f9ca27da22e5c598de8b24" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3 &amp; idPhysics_Parametric::GetOrigin</definition>
        <argsstring>(int id=0) const </argsstring>
        <name>GetOrigin</name>
        <reimplements refid="classid_physics___base_1a6ac21917144fe325bfabab210279286d">GetOrigin</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="127" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="813" bodyend="815"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a650df25e2d18d2b8447bffda3bb2aa51" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
        <definition>const idMat3 &amp; idPhysics_Parametric::GetAxis</definition>
        <argsstring>(int id=0) const </argsstring>
        <name>GetAxis</name>
        <reimplements refid="classid_physics___base_1a061f61210b0e86a74141deb0d3c64b02">GetAxis</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="128" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="822" bodyend="824"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a53f53d92836f42fd08992a90f84538de" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SetLinearVelocity</definition>
        <argsstring>(const idVec3 &amp;newLinearVelocity, int id=0)</argsstring>
        <name>SetLinearVelocity</name>
        <reimplements refid="classid_physics___base_1a064d14b46eacbd8c578461248c6447bd">SetLinearVelocity</reimplements>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>newLinearVelocity</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="130" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="840" bodyend="844"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1ad004b5b838bce1aed3a28dc9ae0dd8ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SetAngularVelocity</definition>
        <argsstring>(const idVec3 &amp;newAngularVelocity, int id=0)</argsstring>
        <name>SetAngularVelocity</name>
        <reimplements refid="classid_physics___base_1a5060b7c0e5e6b8cab5481ee96faf1ebd">SetAngularVelocity</reimplements>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>newAngularVelocity</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="131" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="851" bodyend="863"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a0a5db734353332d96a0275171c83cbe6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3 &amp; idPhysics_Parametric::GetLinearVelocity</definition>
        <argsstring>(int id=0) const </argsstring>
        <name>GetLinearVelocity</name>
        <reimplements refid="classid_physics___base_1a1bb04a7510edfedbe96faaba2ac389c2">GetLinearVelocity</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="133" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="870" bodyend="875"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1ab7d2b3a46765e598d0e2901d4bc75740" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3 &amp; idPhysics_Parametric::GetAngularVelocity</definition>
        <argsstring>(int id=0) const </argsstring>
        <name>GetAngularVelocity</name>
        <reimplements refid="classid_physics___base_1a415e2df939c32fccb5be0709cd5b2c67">GetAngularVelocity</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="134" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="882" bodyend="889"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1aa3c7c8d286a50631a10a4b60659c2a0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::DisableClip</definition>
        <argsstring>(void)</argsstring>
        <name>DisableClip</name>
        <reimplements refid="classid_physics___base_1aeb85fab7fc687823db9992d77477a1de">DisableClip</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="136" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="896" bodyend="900"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1abfa2d89211e847228a83d125dd75db3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::EnableClip</definition>
        <argsstring>(void)</argsstring>
        <name>EnableClip</name>
        <reimplements refid="classid_physics___base_1afe4b626a7b78bee2a5fa253c9d445285">EnableClip</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="137" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="907" bodyend="911"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a0b2cc8f9d31007308ca0196af14e4571" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::UnlinkClip</definition>
        <argsstring>(void)</argsstring>
        <name>UnlinkClip</name>
        <reimplements refid="classid_physics___base_1a3494d7fd367a623c046eada3e7a01af4">UnlinkClip</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="139" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="918" bodyend="922"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1aa4a7d53671961f8ad55f3a72a36dfd39" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::LinkClip</definition>
        <argsstring>(void)</argsstring>
        <name>LinkClip</name>
        <reimplements refid="classid_physics___base_1a0f8b1514afb3160d69ce99704a9fc847">LinkClip</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="140" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="929" bodyend="933"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1afe96b9fbfb5a96c4dd55d2efb68579d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SetMaster</definition>
        <argsstring>(idEntity *master, const bool orientated=true)</argsstring>
        <name>SetMaster</name>
        <reimplements refid="classid_physics___base_1a1a70caaf421d2a73aa3a03ffca5d11fb">SetMaster</reimplements>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>master</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>orientated</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="142" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="961" bodyend="994"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1afb6a77588633fadb60d15bd1fa0a110f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="structtrace__s" kindref="compound">trace_t</ref> *</type>
        <definition>const trace_t * idPhysics_Parametric::GetBlockingInfo</definition>
        <argsstring>(void) const </argsstring>
        <name>GetBlockingInfo</name>
        <reimplements refid="classid_physics___base_1a206073bba90fdfabb70f51c634d9761a">GetBlockingInfo</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="144" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="940" bodyend="942"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a85897abaf3893fba66b97e65b89627c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
        <definition>idEntity * idPhysics_Parametric::GetBlockingEntity</definition>
        <argsstring>(void) const </argsstring>
        <name>GetBlockingEntity</name>
        <reimplements refid="classid_physics___base_1a756b9a94869efb6cfd2772848a826816">GetBlockingEntity</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="145" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="949" bodyend="954"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a27d08b48efcfea1c413b189b103b51c8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idPhysics_Parametric::GetLinearEndTime</definition>
        <argsstring>(void) const </argsstring>
        <name>GetLinearEndTime</name>
        <reimplements refid="classid_physics___base_1aa28440e55de3dfb916b6253fcf7982e3">GetLinearEndTime</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="147" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="1001" bodyend="1013"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1aeb74914d22b4be8b475a089f45caa463" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idPhysics_Parametric::GetAngularEndTime</definition>
        <argsstring>(void) const </argsstring>
        <name>GetAngularEndTime</name>
        <reimplements refid="classid_physics___base_1affb89ba003c6fde4f376b3ad86a2a648">GetAngularEndTime</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="148" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="1020" bodyend="1026"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1afd1423ce1771b073008c11d1cc07e321" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::WriteToSnapshot</definition>
        <argsstring>(idBitMsgDelta &amp;msg) const </argsstring>
        <name>WriteToSnapshot</name>
        <reimplements refid="classid_physics___base_1a62ca703f7ad9004e69e09ca99582756d">WriteToSnapshot</reimplements>
        <param>
          <type><ref refid="classid_bit_msg_delta" kindref="compound">idBitMsgDelta</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="150" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="1033" bodyend="1096"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a7a627b349d610cce68ca190dd01e3f6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::ReadFromSnapshot</definition>
        <argsstring>(const idBitMsgDelta &amp;msg)</argsstring>
        <name>ReadFromSnapshot</name>
        <reimplements refid="classid_physics___base_1a54bee9929d92f797ca95c205c6720ca5">ReadFromSnapshot</reimplements>
        <param>
          <type>const <ref refid="classid_bit_msg_delta" kindref="compound">idBitMsgDelta</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="151" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="1103" bodyend="1181"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a9620668916988c19894b1092abd5b171" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idPhysics_Parametric::CLASS_PROTOTYPE</definition>
        <argsstring>(idPhysics_Parametric)</argsstring>
        <name>CLASS_PROTOTYPE</name>
        <param>
          <type><ref refid="classid_physics___parametric" kindref="compound">idPhysics_Parametric</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1af8dc3d5107820eb5edf2294b8eedc87e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idPhysics_Parametric::idPhysics_Parametric</definition>
        <argsstring>(void)</argsstring>
        <name>idPhysics_Parametric</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a5901e9a40869da0510493ee2e8650557" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idPhysics_Parametric::~idPhysics_Parametric</definition>
        <argsstring>(void)</argsstring>
        <name>~idPhysics_Parametric</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a1cafdc49f990091ab0869d9f9072d22a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::Save</definition>
        <argsstring>(idSaveGame *savefile) const </argsstring>
        <name>Save</name>
        <param>
          <type><ref refid="classid_save_game" kindref="compound">idSaveGame</ref> *</type>
          <declname>savefile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a839c8e4cc235ef2c1057299369ea17c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::Restore</definition>
        <argsstring>(idRestoreGame *savefile)</argsstring>
        <name>Restore</name>
        <param>
          <type><ref refid="classid_restore_game" kindref="compound">idRestoreGame</ref> *</type>
          <declname>savefile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1ab6483b17e9e7445a3b52b35727f66f9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SetPusher</definition>
        <argsstring>(int flags)</argsstring>
        <name>SetPusher</name>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a4f094f6fd4453bc9ee5e47bdfcee01d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idPhysics_Parametric::IsPusher</definition>
        <argsstring>(void) const </argsstring>
        <name>IsPusher</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a3435d812df74af3bccbf36a14bcab764" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SetLinearExtrapolation</definition>
        <argsstring>(extrapolation_t type, int time, int duration, const idVec3 &amp;base, const idVec3 &amp;speed, const idVec3 &amp;baseSpeed)</argsstring>
        <name>SetLinearExtrapolation</name>
        <param>
          <type>extrapolation_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>duration</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>speed</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>baseSpeed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a76f8f12a43a3820052c6da2c14f89ad5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SetAngularExtrapolation</definition>
        <argsstring>(extrapolation_t type, int time, int duration, const idAngles &amp;base, const idAngles &amp;speed, const idAngles &amp;baseSpeed)</argsstring>
        <name>SetAngularExtrapolation</name>
        <param>
          <type>extrapolation_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>duration</declname>
        </param>
        <param>
          <type>const <ref refid="classid_angles" kindref="compound">idAngles</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="classid_angles" kindref="compound">idAngles</ref> &amp;</type>
          <declname>speed</declname>
        </param>
        <param>
          <type>const <ref refid="classid_angles" kindref="compound">idAngles</ref> &amp;</type>
          <declname>baseSpeed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a8ffee84cbf90573d0f48a8c5e5cad815" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>extrapolation_t</type>
        <definition>extrapolation_t idPhysics_Parametric::GetLinearExtrapolationType</definition>
        <argsstring>(void) const </argsstring>
        <name>GetLinearExtrapolationType</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a5b3c652411a1f92deb9f18862a132fc6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>extrapolation_t</type>
        <definition>extrapolation_t idPhysics_Parametric::GetAngularExtrapolationType</definition>
        <argsstring>(void) const </argsstring>
        <name>GetAngularExtrapolationType</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1ab6cca99e1e8a46bb1761a8a323c96c35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SetLinearInterpolation</definition>
        <argsstring>(int time, int accelTime, int decelTime, int duration, const idVec3 &amp;startPos, const idVec3 &amp;endPos)</argsstring>
        <name>SetLinearInterpolation</name>
        <param>
          <type>int</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>accelTime</declname>
        </param>
        <param>
          <type>int</type>
          <declname>decelTime</declname>
        </param>
        <param>
          <type>int</type>
          <declname>duration</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>startPos</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>endPos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a6f34447871cdf2f2570709577a550590" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SetAngularInterpolation</definition>
        <argsstring>(int time, int accelTime, int decelTime, int duration, const idAngles &amp;startAng, const idAngles &amp;endAng)</argsstring>
        <name>SetAngularInterpolation</name>
        <param>
          <type>int</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>accelTime</declname>
        </param>
        <param>
          <type>int</type>
          <declname>decelTime</declname>
        </param>
        <param>
          <type>int</type>
          <declname>duration</declname>
        </param>
        <param>
          <type>const <ref refid="classid_angles" kindref="compound">idAngles</ref> &amp;</type>
          <declname>startAng</declname>
        </param>
        <param>
          <type>const <ref refid="classid_angles" kindref="compound">idAngles</ref> &amp;</type>
          <declname>endAng</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a868edd11b2037d3a0d542f6b0ecf78a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SetSpline</definition>
        <argsstring>(idCurve_Spline&lt; idVec3 &gt; *spline, int accelTime, int decelTime, bool useSplineAngles)</argsstring>
        <name>SetSpline</name>
        <param>
          <type><ref refid="classid_curve___spline" kindref="compound">idCurve_Spline</ref>&lt; <ref refid="classid_vec3" kindref="compound">idVec3</ref> &gt; *</type>
          <declname>spline</declname>
        </param>
        <param>
          <type>int</type>
          <declname>accelTime</declname>
        </param>
        <param>
          <type>int</type>
          <declname>decelTime</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>useSplineAngles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a8a2ed6f348a8ed67a2c6a4caa2b16aeb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_curve___spline" kindref="compound">idCurve_Spline</ref>&lt; <ref refid="classid_vec3" kindref="compound">idVec3</ref> &gt; *</type>
        <definition>idCurve_Spline&lt;idVec3&gt;* idPhysics_Parametric::GetSpline</definition>
        <argsstring>(void) const </argsstring>
        <name>GetSpline</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1afc627d684c2b340570ccf4bc5dc58e38" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idPhysics_Parametric::GetSplineAcceleration</definition>
        <argsstring>(void) const </argsstring>
        <name>GetSplineAcceleration</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a691baf357938852c4cca258dbd62f8a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idPhysics_Parametric::GetSplineDeceleration</definition>
        <argsstring>(void) const </argsstring>
        <name>GetSplineDeceleration</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a4b545222d5971218e1c08abfba11dde0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idPhysics_Parametric::UsingSplineAngles</definition>
        <argsstring>(void) const </argsstring>
        <name>UsingSplineAngles</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a6eb8474aba2c97c3a20d996444621f1d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::GetLocalOrigin</definition>
        <argsstring>(idVec3 &amp;curOrigin) const </argsstring>
        <name>GetLocalOrigin</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>curOrigin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1af4cdc9369a502736e174b49af5c09ae3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::GetLocalAngles</definition>
        <argsstring>(idAngles &amp;curAngles) const </argsstring>
        <name>GetLocalAngles</name>
        <param>
          <type><ref refid="classid_angles" kindref="compound">idAngles</ref> &amp;</type>
          <declname>curAngles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a0b3b6484ad11d676bd40827ee630c2d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::GetAngles</definition>
        <argsstring>(idAngles &amp;curAngles) const </argsstring>
        <name>GetAngles</name>
        <param>
          <type><ref refid="classid_angles" kindref="compound">idAngles</ref> &amp;</type>
          <declname>curAngles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1ae59db0081d9d802d10276d91be67a942" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SetClipModel</definition>
        <argsstring>(idClipModel *model, float density, int id=0, bool freeOld=true)</argsstring>
        <name>SetClipModel</name>
        <reimplements refid="classid_physics___base_1a5edb633e663b390e4ef86def7a73acf3">SetClipModel</reimplements>
        <param>
          <type><ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>float</type>
          <declname>density</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>freeOld</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a5206d017a5497ceef9c0cdd1d6fef28c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
        <definition>idClipModel* idPhysics_Parametric::GetClipModel</definition>
        <argsstring>(int id=0) const </argsstring>
        <name>GetClipModel</name>
        <reimplements refid="classid_physics___base_1a0951d4bb0abbc765f91ac70dffc8697d">GetClipModel</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1ad1db7677c789d54b749c1382a4520977" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idPhysics_Parametric::GetNumClipModels</definition>
        <argsstring>(void) const </argsstring>
        <name>GetNumClipModels</name>
        <reimplements refid="classid_physics___base_1a8f6463ef806b08afcd55a3a1444b8418">GetNumClipModels</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a4c9b8e22389200c0deb2de8e691c611d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SetMass</definition>
        <argsstring>(float mass, int id=-1)</argsstring>
        <name>SetMass</name>
        <reimplements refid="classid_physics___base_1a886e32b283a3c179e560229e2347fa37">SetMass</reimplements>
        <param>
          <type>float</type>
          <declname>mass</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a85fb0906841fa01c870ef442fae0e0ef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>float</type>
        <definition>float idPhysics_Parametric::GetMass</definition>
        <argsstring>(int id=-1) const </argsstring>
        <name>GetMass</name>
        <reimplements refid="classid_physics___base_1acb76436fa3c366d359bd25232a6d3ec6">GetMass</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a9c7f3433cbc4ae579a4bdb4cd26f124b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SetContents</definition>
        <argsstring>(int contents, int id=-1)</argsstring>
        <name>SetContents</name>
        <reimplements refid="classid_physics___base_1ac80bde90971178559a1e1b6c9027b59f">SetContents</reimplements>
        <param>
          <type>int</type>
          <declname>contents</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1af03167a9b1f1e19ac818fa4b5a96c358" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idPhysics_Parametric::GetContents</definition>
        <argsstring>(int id=-1) const </argsstring>
        <name>GetContents</name>
        <reimplements refid="classid_physics___base_1a33cb3cada27d29286f3166d9261e5228">GetContents</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a4884d9b9490509d035082f8c2dea883f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
        <definition>const idBounds&amp; idPhysics_Parametric::GetBounds</definition>
        <argsstring>(int id=-1) const </argsstring>
        <name>GetBounds</name>
        <reimplements refid="classid_physics___base_1a7d642504c96aadf08357338addae4889">GetBounds</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1aa2333c3073430dc12c3f812447c85b55" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
        <definition>const idBounds&amp; idPhysics_Parametric::GetAbsBounds</definition>
        <argsstring>(int id=-1) const </argsstring>
        <name>GetAbsBounds</name>
        <reimplements refid="classid_physics___base_1a6888af190525559c1938423350962e7a">GetAbsBounds</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a2bcc7f02a2f982412ab2812edd91fe21" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool idPhysics_Parametric::Evaluate</definition>
        <argsstring>(int timeStepMSec, int endTimeMSec)</argsstring>
        <name>Evaluate</name>
        <reimplements refid="classid_physics___base_1a68e8bb83889f347f77b5b7c0af1df3a0">Evaluate</reimplements>
        <param>
          <type>int</type>
          <declname>timeStepMSec</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endTimeMSec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a192def7ea3c831a4fcff84e0c5fd06d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::UpdateTime</definition>
        <argsstring>(int endTimeMSec)</argsstring>
        <name>UpdateTime</name>
        <reimplements refid="classid_physics___base_1a57bc63cb5983f055072ff1e3da5c83a2">UpdateTime</reimplements>
        <param>
          <type>int</type>
          <declname>endTimeMSec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a751d947e637dad857e59336520485050" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idPhysics_Parametric::GetTime</definition>
        <argsstring>(void) const </argsstring>
        <name>GetTime</name>
        <reimplements refid="classid_physics___base_1a5df6d476848ba03d22104cd27ac9acd0">GetTime</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1adff11048313f40fdb9078436635e95b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::Activate</definition>
        <argsstring>(void)</argsstring>
        <name>Activate</name>
        <reimplements refid="classid_physics___base_1a0631910fa43a8b62994e4718c2e6ddc5">Activate</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a910051917dda42a71dc3a4fe16ff2e43" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool idPhysics_Parametric::IsAtRest</definition>
        <argsstring>(void) const </argsstring>
        <name>IsAtRest</name>
        <reimplements refid="classid_physics___base_1adf5fdb18bf2f51f4e9a62c0c3962496c">IsAtRest</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1adfa166b07d2202c508799a179c0ef6db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idPhysics_Parametric::GetRestStartTime</definition>
        <argsstring>(void) const </argsstring>
        <name>GetRestStartTime</name>
        <reimplements refid="classid_physics___base_1a573317c8b6147e7c5adba7022b01e3e4">GetRestStartTime</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a430d4667783aa188925ee04b173524e6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool idPhysics_Parametric::IsPushable</definition>
        <argsstring>(void) const </argsstring>
        <name>IsPushable</name>
        <reimplements refid="classid_physics___base_1acf36457d378524f02a285d4e25f07080">IsPushable</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1ae2e9c4552e871935fef55993dba6a1f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SaveState</definition>
        <argsstring>(void)</argsstring>
        <name>SaveState</name>
        <reimplements refid="classid_physics___base_1abfef1ec167da6780db337a59f6df318b">SaveState</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1ae3e0600f0f8cd31b4e41bbb303199210" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::RestoreState</definition>
        <argsstring>(void)</argsstring>
        <name>RestoreState</name>
        <reimplements refid="classid_physics___base_1a2506a696d776e0f4ab7aeb5706a5df93">RestoreState</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a493baf5016cee9f6e56d77c170d2ff8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SetOrigin</definition>
        <argsstring>(const idVec3 &amp;newOrigin, int id=-1)</argsstring>
        <name>SetOrigin</name>
        <reimplements refid="classid_physics___base_1a70d7961cab60fc62ef0ff32af732d51b">SetOrigin</reimplements>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>newOrigin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a5a2664370a597c35e786c4e49eb5b3c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SetAxis</definition>
        <argsstring>(const idMat3 &amp;newAxis, int id=-1)</argsstring>
        <name>SetAxis</name>
        <reimplements refid="classid_physics___base_1a4dad199e469655584a79547d3c959ae9">SetAxis</reimplements>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>newAxis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a76e8fb6e7066d5107bd1b02f32316a4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::Translate</definition>
        <argsstring>(const idVec3 &amp;translation, int id=-1)</argsstring>
        <name>Translate</name>
        <reimplements refid="classid_physics___base_1a9bb7ce564e1f8ad77f0003c24c86e54b">Translate</reimplements>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>translation</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a780c62e9540ddf6f70407d1f53feef6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::Rotate</definition>
        <argsstring>(const idRotation &amp;rotation, int id=-1)</argsstring>
        <name>Rotate</name>
        <reimplements refid="classid_physics___base_1a277197f47e1ef55dd0ddd0e4ed40e93c">Rotate</reimplements>
        <param>
          <type>const <ref refid="classid_rotation" kindref="compound">idRotation</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1adb7dd420e4422e2610a8233ff4865d19" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3&amp; idPhysics_Parametric::GetOrigin</definition>
        <argsstring>(int id=0) const </argsstring>
        <name>GetOrigin</name>
        <reimplements refid="classid_physics___base_1a6ac21917144fe325bfabab210279286d">GetOrigin</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a3edcbd5c6de7bb2ddd6fc512d4da7d14" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
        <definition>const idMat3&amp; idPhysics_Parametric::GetAxis</definition>
        <argsstring>(int id=0) const </argsstring>
        <name>GetAxis</name>
        <reimplements refid="classid_physics___base_1a061f61210b0e86a74141deb0d3c64b02">GetAxis</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a53f53d92836f42fd08992a90f84538de" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SetLinearVelocity</definition>
        <argsstring>(const idVec3 &amp;newLinearVelocity, int id=0)</argsstring>
        <name>SetLinearVelocity</name>
        <reimplements refid="classid_physics___base_1a064d14b46eacbd8c578461248c6447bd">SetLinearVelocity</reimplements>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>newLinearVelocity</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1ad004b5b838bce1aed3a28dc9ae0dd8ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SetAngularVelocity</definition>
        <argsstring>(const idVec3 &amp;newAngularVelocity, int id=0)</argsstring>
        <name>SetAngularVelocity</name>
        <reimplements refid="classid_physics___base_1a5060b7c0e5e6b8cab5481ee96faf1ebd">SetAngularVelocity</reimplements>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>newAngularVelocity</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a2f9f0f0bfbd848497eae75838b4b7c44" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3&amp; idPhysics_Parametric::GetLinearVelocity</definition>
        <argsstring>(int id=0) const </argsstring>
        <name>GetLinearVelocity</name>
        <reimplements refid="classid_physics___base_1a1bb04a7510edfedbe96faaba2ac389c2">GetLinearVelocity</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a0e8f4cc9b1148d5382cc15fb93ef791c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3&amp; idPhysics_Parametric::GetAngularVelocity</definition>
        <argsstring>(int id=0) const </argsstring>
        <name>GetAngularVelocity</name>
        <reimplements refid="classid_physics___base_1a415e2df939c32fccb5be0709cd5b2c67">GetAngularVelocity</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1aa3c7c8d286a50631a10a4b60659c2a0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::DisableClip</definition>
        <argsstring>(void)</argsstring>
        <name>DisableClip</name>
        <reimplements refid="classid_physics___base_1aeb85fab7fc687823db9992d77477a1de">DisableClip</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1abfa2d89211e847228a83d125dd75db3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::EnableClip</definition>
        <argsstring>(void)</argsstring>
        <name>EnableClip</name>
        <reimplements refid="classid_physics___base_1afe4b626a7b78bee2a5fa253c9d445285">EnableClip</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a0b2cc8f9d31007308ca0196af14e4571" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::UnlinkClip</definition>
        <argsstring>(void)</argsstring>
        <name>UnlinkClip</name>
        <reimplements refid="classid_physics___base_1a3494d7fd367a623c046eada3e7a01af4">UnlinkClip</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1aa4a7d53671961f8ad55f3a72a36dfd39" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::LinkClip</definition>
        <argsstring>(void)</argsstring>
        <name>LinkClip</name>
        <reimplements refid="classid_physics___base_1a0f8b1514afb3160d69ce99704a9fc847">LinkClip</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1afe96b9fbfb5a96c4dd55d2efb68579d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::SetMaster</definition>
        <argsstring>(idEntity *master, const bool orientated=true)</argsstring>
        <name>SetMaster</name>
        <reimplements refid="classid_physics___base_1a1a70caaf421d2a73aa3a03ffca5d11fb">SetMaster</reimplements>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>master</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>orientated</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a47fed1305b7c6e56da78e46155c735c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="structtrace__s" kindref="compound">trace_t</ref> *</type>
        <definition>const trace_t* idPhysics_Parametric::GetBlockingInfo</definition>
        <argsstring>(void) const </argsstring>
        <name>GetBlockingInfo</name>
        <reimplements refid="classid_physics___base_1a206073bba90fdfabb70f51c634d9761a">GetBlockingInfo</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a5b91ace3fddb87b31a3d22619145b8dc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
        <definition>idEntity* idPhysics_Parametric::GetBlockingEntity</definition>
        <argsstring>(void) const </argsstring>
        <name>GetBlockingEntity</name>
        <reimplements refid="classid_physics___base_1a756b9a94869efb6cfd2772848a826816">GetBlockingEntity</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a27d08b48efcfea1c413b189b103b51c8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idPhysics_Parametric::GetLinearEndTime</definition>
        <argsstring>(void) const </argsstring>
        <name>GetLinearEndTime</name>
        <reimplements refid="classid_physics___base_1aa28440e55de3dfb916b6253fcf7982e3">GetLinearEndTime</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1aeb74914d22b4be8b475a089f45caa463" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idPhysics_Parametric::GetAngularEndTime</definition>
        <argsstring>(void) const </argsstring>
        <name>GetAngularEndTime</name>
        <reimplements refid="classid_physics___base_1affb89ba003c6fde4f376b3ad86a2a648">GetAngularEndTime</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1afd1423ce1771b073008c11d1cc07e321" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::WriteToSnapshot</definition>
        <argsstring>(idBitMsgDelta &amp;msg) const </argsstring>
        <name>WriteToSnapshot</name>
        <reimplements refid="classid_physics___base_1a62ca703f7ad9004e69e09ca99582756d">WriteToSnapshot</reimplements>
        <param>
          <type><ref refid="classid_bit_msg_delta" kindref="compound">idBitMsgDelta</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1a7a627b349d610cce68ca190dd01e3f6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::ReadFromSnapshot</definition>
        <argsstring>(const idBitMsgDelta &amp;msg)</argsstring>
        <name>ReadFromSnapshot</name>
        <reimplements refid="classid_physics___base_1a54bee9929d92f797ca95c205c6720ca5">ReadFromSnapshot</reimplements>
        <param>
          <type>const <ref refid="classid_bit_msg_delta" kindref="compound">idBitMsgDelta</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="151" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classid_physics___parametric_1afbc2d74eb24ba07a7b0b70d5ceb075e4" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idPhysics_Parametric::TestIfAtRest</definition>
        <argsstring>(void) const </argsstring>
        <name>TestIfAtRest</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="172" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="53" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1aac5b98f12eb02b39d93a91ec4018301a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::Rest</definition>
        <argsstring>(void)</argsstring>
        <name>Rest</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="173" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.cpp" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1afbc2d74eb24ba07a7b0b70d5ceb075e4" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idPhysics_Parametric::TestIfAtRest</definition>
        <argsstring>(void) const </argsstring>
        <name>TestIfAtRest</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___parametric_1aac5b98f12eb02b39d93a91ec4018301a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Parametric::Rest</definition>
        <argsstring>(void)</argsstring>
        <name>Rest</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Parametric.h" line="173" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="26155">
        <label>idClass</label>
        <link refid="classid_class"/>
      </node>
      <node id="26152">
        <label>idPhysics_Parametric</label>
        <link refid="classid_physics___parametric"/>
        <childnode refid="26153" relation="public-inheritance">
        </childnode>
        <childnode refid="26153" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26153">
        <label>idPhysics_Base</label>
        <link refid="classid_physics___base"/>
        <childnode refid="26154" relation="public-inheritance">
        </childnode>
        <childnode refid="26154" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26154">
        <label>idPhysics</label>
        <link refid="classid_physics"/>
        <childnode refid="26155" relation="public-inheritance">
        </childnode>
        <childnode refid="26155" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="26185">
        <label>idSoundShader</label>
        <link refid="classid_sound_shader"/>
        <childnode refid="26171" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26183">
        <label>refSound_t</label>
        <link refid="structref_sound__t"/>
        <childnode refid="26184" relation="usage">
          <edgelabel>parms</edgelabel>
        </childnode>
        <childnode refid="26185" relation="usage">
          <edgelabel>shader</edgelabel>
        </childnode>
        <childnode refid="26178" relation="usage">
          <edgelabel>referenceSound</edgelabel>
        </childnode>
        <childnode refid="26169" relation="usage">
          <edgelabel>origin</edgelabel>
        </childnode>
      </node>
      <node id="26166">
        <label>idEntity::entityFlags_s</label>
        <link refid="structid_entity_1_1entity_flags__s"/>
      </node>
      <node id="26159">
        <label>idClass</label>
        <link refid="classid_class"/>
        <childnode refid="26160" relation="usage">
          <edgelabel>Type</edgelabel>
        </childnode>
        <childnode refid="26162" relation="usage">
          <edgelabel>eventCallbacks</edgelabel>
        </childnode>
      </node>
      <node id="26167">
        <label>renderView_s</label>
        <link refid="structrender_view__s"/>
        <childnode refid="26168" relation="usage">
          <edgelabel>viewaxis</edgelabel>
        </childnode>
        <childnode refid="26169" relation="usage">
          <edgelabel>vieworg</edgelabel>
        </childnode>
        <childnode refid="26170" relation="usage">
          <edgelabel>globalMaterial</edgelabel>
        </childnode>
      </node>
      <node id="26162">
        <label>idEventFunc&lt; idClass &gt;</label>
        <link refid="structid_event_func"/>
        <childnode refid="26163" relation="usage">
          <edgelabel>event</edgelabel>
        </childnode>
      </node>
      <node id="26164">
        <label>idEntity</label>
        <link refid="classid_entity"/>
        <childnode refid="26159" relation="public-inheritance">
        </childnode>
        <childnode refid="26159" relation="public-inheritance">
        </childnode>
        <childnode refid="26164" relation="usage">
          <edgelabel>cameraTarget</edgelabel>
        </childnode>
        <childnode refid="26165" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="26166" relation="usage">
          <edgelabel>fl</edgelabel>
        </childnode>
        <childnode refid="26167" relation="usage">
          <edgelabel>renderView</edgelabel>
        </childnode>
        <childnode refid="26173" relation="usage">
          <edgelabel>targets</edgelabel>
        </childnode>
        <childnode refid="26174" relation="usage">
          <edgelabel>spawnNode</edgelabel>
          <edgelabel>snapshotNode</edgelabel>
          <edgelabel>activeNode</edgelabel>
        </childnode>
        <childnode refid="26175" relation="usage">
          <edgelabel>renderEntity</edgelabel>
        </childnode>
        <childnode refid="26182" relation="usage">
          <edgelabel>spawnArgs</edgelabel>
        </childnode>
        <childnode refid="26183" relation="usage">
          <edgelabel>refSound</edgelabel>
        </childnode>
        <childnode refid="26186" relation="usage">
          <edgelabel>scriptObject</edgelabel>
        </childnode>
      </node>
      <node id="26184">
        <label>soundShaderParms_t</label>
        <link refid="structsound_shader_parms__t"/>
      </node>
      <node id="26156">
        <label>idPhysics_Parametric</label>
        <link refid="classid_physics___parametric"/>
        <childnode refid="26157" relation="public-inheritance">
        </childnode>
        <childnode refid="26157" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26178">
        <label>idSoundEmitter</label>
        <link refid="classid_sound_emitter"/>
      </node>
      <node id="26170">
        <label>idMaterial</label>
        <link refid="classid_material"/>
        <childnode refid="26171" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26163">
        <label>idEventDef</label>
        <link refid="classid_event_def"/>
      </node>
      <node id="26177">
        <label>idJointMat</label>
        <link refid="classid_joint_mat"/>
      </node>
      <node id="26173">
        <label>idList&lt; idEntityPtr&lt; idEntity &gt; &gt;</label>
        <link refid="classid_list"/>
      </node>
      <node id="26175">
        <label>renderEntity_s</label>
        <link refid="structrender_entity__s"/>
        <childnode refid="26168" relation="usage">
          <edgelabel>axis</edgelabel>
        </childnode>
        <childnode refid="26176" relation="usage">
          <edgelabel>customSkin</edgelabel>
        </childnode>
        <childnode refid="26177" relation="usage">
          <edgelabel>joints</edgelabel>
        </childnode>
        <childnode refid="26167" relation="usage">
          <edgelabel>remoteRenderView</edgelabel>
        </childnode>
        <childnode refid="26178" relation="usage">
          <edgelabel>referenceSound</edgelabel>
        </childnode>
        <childnode refid="26179" relation="usage">
          <edgelabel>hModel</edgelabel>
        </childnode>
        <childnode refid="26180" relation="usage">
          <edgelabel>bounds</edgelabel>
        </childnode>
        <childnode refid="26169" relation="usage">
          <edgelabel>origin</edgelabel>
        </childnode>
        <childnode refid="26175" relation="usage">
          <edgelabel>callback</edgelabel>
        </childnode>
        <childnode refid="26170" relation="usage">
          <edgelabel>customShader</edgelabel>
          <edgelabel>referenceShader</edgelabel>
        </childnode>
        <childnode refid="26181" relation="usage">
          <edgelabel>gui</edgelabel>
        </childnode>
      </node>
      <node id="26187">
        <label>idList&lt; contactInfo_t &gt;</label>
        <link refid="classid_list"/>
      </node>
      <node id="26157">
        <label>idPhysics_Base</label>
        <link refid="classid_physics___base"/>
        <childnode refid="26158" relation="public-inheritance">
        </childnode>
        <childnode refid="26158" relation="public-inheritance">
        </childnode>
        <childnode refid="26164" relation="usage">
          <edgelabel>self</edgelabel>
        </childnode>
        <childnode refid="26173" relation="usage">
          <edgelabel>contactEntities</edgelabel>
        </childnode>
        <childnode refid="26187" relation="usage">
          <edgelabel>contacts</edgelabel>
        </childnode>
        <childnode refid="26169" relation="usage">
          <edgelabel>gravityNormal</edgelabel>
          <edgelabel>gravityVector</edgelabel>
        </childnode>
      </node>
      <node id="26186">
        <label>idScriptObject</label>
        <link refid="classid_script_object"/>
      </node>
      <node id="26180">
        <label>idBounds</label>
        <link refid="classid_bounds"/>
      </node>
      <node id="26168">
        <label>idMat3</label>
        <link refid="classid_mat3"/>
      </node>
      <node id="26181">
        <label>idUserInterface</label>
        <link refid="classid_user_interface"/>
      </node>
      <node id="26172">
        <label>idDeclBase</label>
        <link refid="classid_decl_base"/>
      </node>
      <node id="26161">
        <label>idHierarchy&lt; idTypeInfo &gt;</label>
        <link refid="classid_hierarchy"/>
      </node>
      <node id="26165">
        <label>idStr</label>
        <link refid="classid_str"/>
      </node>
      <node id="26179">
        <label>idRenderModel</label>
        <link refid="classid_render_model"/>
      </node>
      <node id="26171">
        <label>idDecl</label>
        <link refid="classid_decl"/>
        <childnode refid="26172" relation="usage">
          <edgelabel>base</edgelabel>
        </childnode>
      </node>
      <node id="26169">
        <label>idVec3</label>
        <link refid="classid_vec3"/>
      </node>
      <node id="26158">
        <label>idPhysics</label>
        <link refid="classid_physics"/>
        <childnode refid="26159" relation="public-inheritance">
        </childnode>
        <childnode refid="26159" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26174">
        <label>idLinkList&lt; idEntity &gt;</label>
        <link refid="classid_link_list"/>
      </node>
      <node id="26182">
        <label>idDict</label>
        <link refid="classid_dict"/>
      </node>
      <node id="26176">
        <label>idDeclSkin</label>
        <link refid="classid_decl_skin"/>
        <childnode refid="26171" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26160">
        <label>idTypeInfo</label>
        <link refid="classid_type_info"/>
        <childnode refid="26160" relation="usage">
          <edgelabel>next</edgelabel>
          <edgelabel>super</edgelabel>
        </childnode>
        <childnode refid="26161" relation="usage">
          <edgelabel>node</edgelabel>
        </childnode>
        <childnode refid="26162" relation="usage">
          <edgelabel>eventCallbacks</edgelabel>
        </childnode>
        <childnode refid="26159" relation="usage">
          <edgelabel>CreateInstance</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" line="62" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Parametric.h" bodystart="62" bodyend="174"/>
    <listofallmembers>
      <member refid="classid_physics_1a2904b8d7d7b3f2973802d4b3397816f8" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>ABSTRACT_PROTOTYPE</name></member>
      <member refid="classid_physics_1a2904b8d7d7b3f2973802d4b3397816f8" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>ABSTRACT_PROTOTYPE</name></member>
      <member refid="classid_physics___parametric_1adff11048313f40fdb9078436635e95b3" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>Activate</name></member>
      <member refid="classid_physics___parametric_1adff11048313f40fdb9078436635e95b3" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>Activate</name></member>
      <member refid="classid_physics___base_1aa9bb8305faea4dd9034372e429811678" prot="protected" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>ActivateContactEntities</name></member>
      <member refid="classid_physics___base_1aa9bb8305faea4dd9034372e429811678" prot="protected" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>ActivateContactEntities</name></member>
      <member refid="classid_physics___base_1a9f123a67dca0979f266cdb5ca9753bf7" prot="protected" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>AddContactEntitiesForContacts</name></member>
      <member refid="classid_physics___base_1a9f123a67dca0979f266cdb5ca9753bf7" prot="protected" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>AddContactEntitiesForContacts</name></member>
      <member refid="classid_physics___base_1a0b822895dea8a3eadad02f0152b02a11" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>AddContactEntity</name></member>
      <member refid="classid_physics___base_1a0b822895dea8a3eadad02f0152b02a11" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>AddContactEntity</name></member>
      <member refid="classid_physics___base_1ad8f420453bd2ebe473c26cda63c574e4" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>AddForce</name></member>
      <member refid="classid_physics___base_1ad8f420453bd2ebe473c26cda63c574e4" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>AddForce</name></member>
      <member refid="classid_physics___base_1a1ce4ffdea33f423c9e7c18e7e5577c9d" prot="protected" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>AddGroundContacts</name></member>
      <member refid="classid_physics___base_1a1ce4ffdea33f423c9e7c18e7e5577c9d" prot="protected" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>AddGroundContacts</name></member>
      <member refid="classid_physics___base_1a4ab48ead610a476aa0d5485c573c17b4" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>ApplyImpulse</name></member>
      <member refid="classid_physics___base_1a4ab48ead610a476aa0d5485c573c17b4" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>ApplyImpulse</name></member>
      <member refid="classid_class_1a39284ab290b3303f923cb647fefb0443" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>CallSpawn</name></member>
      <member refid="classid_class_1a39284ab290b3303f923cb647fefb0443" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>CallSpawn</name></member>
      <member refid="classid_class_1a7cf590c676b38adea6ff199b72c4e46f" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>CancelEvents</name></member>
      <member refid="classid_class_1a7cf590c676b38adea6ff199b72c4e46f" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>CancelEvents</name></member>
      <member refid="classid_physics___parametric_1a9620668916988c19894b1092abd5b171" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>CLASS_PROTOTYPE</name></member>
      <member refid="classid_physics___parametric_1a9620668916988c19894b1092abd5b171" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>CLASS_PROTOTYPE</name></member>
      <member refid="classid_physics___base_1a5d7eef5817a612d03295e1fd530b74de" prot="public" virt="non-virtual" ambiguityscope="idPhysics_Base::"><scope>idPhysics_Parametric</scope><name>CLASS_PROTOTYPE</name></member>
      <member refid="classid_physics___base_1a16b0bd9758c6dea37b59934927dd6ea6" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>ClearContacts</name></member>
      <member refid="classid_physics___base_1a16b0bd9758c6dea37b59934927dd6ea6" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>ClearContacts</name></member>
      <member refid="classid_physics___base_1aa0276c508e8e77475ae74757a3688ac4" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>ClipContents</name></member>
      <member refid="classid_physics___base_1aa0276c508e8e77475ae74757a3688ac4" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>ClipContents</name></member>
      <member refid="classid_physics___base_1a3ebc7d969885db541110a0ba251006b0" prot="protected" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>clipMask</name></member>
      <member refid="classid_physics___parametric_1a5bc56936130e0914aca761ec423f5458" prot="private" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>clipModel</name></member>
      <member refid="classid_physics___base_1a490fbebb7ef595a0094fce79929ee8ef" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>ClipRotation</name></member>
      <member refid="classid_physics___base_1a490fbebb7ef595a0094fce79929ee8ef" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>ClipRotation</name></member>
      <member refid="classid_physics___base_1a5d68ecee1632d33bad82e13bb5a83f4a" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>ClipTranslation</name></member>
      <member refid="classid_physics___base_1a5d68ecee1632d33bad82e13bb5a83f4a" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>ClipTranslation</name></member>
      <member refid="classid_physics___base_1a6073eb89e23712ed185b2aa271362601" prot="protected" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>contactEntities</name></member>
      <member refid="classid_physics___base_1a4afb91d6f5a39eb38877a945d805b666" prot="protected" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>contacts</name></member>
      <member refid="classid_class_1aef9a17d3847d8cc27174e618a9e63fec" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>CreateInstance</name></member>
      <member refid="classid_class_1af15da9143dfb04760e1ad309d0a739c8" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>CreateInstance</name></member>
      <member refid="classid_class_1a90a0350a49f5aec1b7944630e9635f60" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>CreateInstance</name></member>
      <member refid="classid_class_1af0beb6afc6c719fcc5d6d596c0b5dbce" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>CreateInstance</name></member>
      <member refid="classid_physics___parametric_1a3516995651c4a0d55bc65138dee52ac4" prot="private" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>current</name></member>
      <member refid="classid_physics___parametric_1aa3c7c8d286a50631a10a4b60659c2a0f" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>DisableClip</name></member>
      <member refid="classid_physics___parametric_1aa3c7c8d286a50631a10a4b60659c2a0f" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>DisableClip</name></member>
      <member refid="classid_class_1a1e808d0b267750a5eb6def058921988e" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>DisplayInfo_f</name></member>
      <member refid="classid_class_1abcc05dad3a0a605c2f34454a2a200a6e" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>DisplayInfo_f</name></member>
      <member refid="classid_physics___base_1ab19db6412a9557916aa24c1cb542ce1a" prot="protected" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>DrawVelocity</name></member>
      <member refid="classid_physics___base_1ab19db6412a9557916aa24c1cb542ce1a" prot="protected" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>DrawVelocity</name></member>
      <member refid="classid_physics___parametric_1abfa2d89211e847228a83d125dd75db3b" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>EnableClip</name></member>
      <member refid="classid_physics___parametric_1abfa2d89211e847228a83d125dd75db3b" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>EnableClip</name></member>
      <member refid="classid_physics___parametric_1a2bcc7f02a2f982412ab2812edd91fe21" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>Evaluate</name></member>
      <member refid="classid_physics___parametric_1a2bcc7f02a2f982412ab2812edd91fe21" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>Evaluate</name></member>
      <member refid="classid_physics___base_1ab9eb83d03417cd2a6c371ab62ca6b6f0" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>EvaluateContacts</name></member>
      <member refid="classid_physics___base_1ab9eb83d03417cd2a6c371ab62ca6b6f0" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>EvaluateContacts</name></member>
      <member refid="classid_class_1a746516c6f1ce54dfb6d046ae8517863b" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>Event_Remove</name></member>
      <member refid="classid_class_1a746516c6f1ce54dfb6d046ae8517863b" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>Event_Remove</name></member>
      <member refid="classid_class_1a7873f9bca2ac9b04d44764e4daa70ad5" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>eventCallbacks</name></member>
      <member refid="classid_class_1acd5d3a153b040060c1d79a7bc441ecfa" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>FindUninitializedMemory</name></member>
      <member refid="classid_class_1acd5d3a153b040060c1d79a7bc441ecfa" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>FindUninitializedMemory</name></member>
      <member refid="classid_physics___parametric_1a2e0858d98c8b19c986aa560533f58771" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetAbsBounds</name></member>
      <member refid="classid_physics___parametric_1aa2333c3073430dc12c3f812447c85b55" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetAbsBounds</name></member>
      <member refid="classid_physics___parametric_1a0b3b6484ad11d676bd40827ee630c2d4" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>GetAngles</name></member>
      <member refid="classid_physics___parametric_1a0b3b6484ad11d676bd40827ee630c2d4" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>GetAngles</name></member>
      <member refid="classid_physics___parametric_1aeb74914d22b4be8b475a089f45caa463" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetAngularEndTime</name></member>
      <member refid="classid_physics___parametric_1aeb74914d22b4be8b475a089f45caa463" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetAngularEndTime</name></member>
      <member refid="classid_physics___parametric_1a5b3c652411a1f92deb9f18862a132fc6" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>GetAngularExtrapolationType</name></member>
      <member refid="classid_physics___parametric_1a5b3c652411a1f92deb9f18862a132fc6" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>GetAngularExtrapolationType</name></member>
      <member refid="classid_physics___parametric_1ab7d2b3a46765e598d0e2901d4bc75740" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetAngularVelocity</name></member>
      <member refid="classid_physics___parametric_1a0e8f4cc9b1148d5382cc15fb93ef791c" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetAngularVelocity</name></member>
      <member refid="classid_physics___parametric_1a650df25e2d18d2b8447bffda3bb2aa51" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetAxis</name></member>
      <member refid="classid_physics___parametric_1a3edcbd5c6de7bb2ddd6fc512d4da7d14" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetAxis</name></member>
      <member refid="classid_physics___parametric_1a85897abaf3893fba66b97e65b89627c2" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetBlockingEntity</name></member>
      <member refid="classid_physics___parametric_1a5b91ace3fddb87b31a3d22619145b8dc" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetBlockingEntity</name></member>
      <member refid="classid_physics___parametric_1afb6a77588633fadb60d15bd1fa0a110f" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetBlockingInfo</name></member>
      <member refid="classid_physics___parametric_1a47fed1305b7c6e56da78e46155c735c0" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetBlockingInfo</name></member>
      <member refid="classid_physics___parametric_1a2609d92d297586ddd5e960aeffc277c2" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetBounds</name></member>
      <member refid="classid_physics___parametric_1a4884d9b9490509d035082f8c2dea883f" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetBounds</name></member>
      <member refid="classid_class_1a9ac01fd82cb27d90e065151dad7b3f57" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>GetClass</name></member>
      <member refid="classid_class_1a2fd37bdd12da7a6405bbe4fa985d8a90" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>GetClass</name></member>
      <member refid="classid_class_1aaf010933354d3ab55c938d09beaefb70" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>GetClassname</name></member>
      <member refid="classid_class_1a1b3ea8a396a4642e0d523b8e0cb9f090" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>GetClassname</name></member>
      <member refid="classid_physics___base_1abcb6ed9fc12a6a447e3b2974a5f5cfde" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetClipMask</name></member>
      <member refid="classid_physics___base_1abcb6ed9fc12a6a447e3b2974a5f5cfde" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetClipMask</name></member>
      <member refid="classid_physics___parametric_1acb085d1a102a221e52e08ba9884b7a80" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetClipModel</name></member>
      <member refid="classid_physics___parametric_1a5206d017a5497ceef9c0cdd1d6fef28c" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetClipModel</name></member>
      <member refid="classid_physics___base_1a965dc2249da49f64230118a862742515" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetContact</name></member>
      <member refid="classid_physics___base_1aa41a26a20ade34f59525914b849ef556" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetContact</name></member>
      <member refid="classid_physics___parametric_1af03167a9b1f1e19ac818fa4b5a96c358" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetContents</name></member>
      <member refid="classid_physics___parametric_1af03167a9b1f1e19ac818fa4b5a96c358" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetContents</name></member>
      <member refid="classid_physics___base_1ae8bc6192c60fa87fd6f57aadb757866a" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetGravity</name></member>
      <member refid="classid_physics___base_1a2679f65747e6c8078e17554cadf44dc1" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetGravity</name></member>
      <member refid="classid_physics___base_1aa0495c925db8011432767326b5bddd31" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetGravityNormal</name></member>
      <member refid="classid_physics___base_1abc7d16f57934012ea517046238e16fca" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetGravityNormal</name></member>
      <member refid="classid_physics___base_1a2d7c23a0cfba3a82b535f5a88e1c2241" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetImpactInfo</name></member>
      <member refid="classid_physics___base_1a2d7c23a0cfba3a82b535f5a88e1c2241" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetImpactInfo</name></member>
      <member refid="classid_physics___parametric_1a27d08b48efcfea1c413b189b103b51c8" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetLinearEndTime</name></member>
      <member refid="classid_physics___parametric_1a27d08b48efcfea1c413b189b103b51c8" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetLinearEndTime</name></member>
      <member refid="classid_physics___parametric_1a8ffee84cbf90573d0f48a8c5e5cad815" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>GetLinearExtrapolationType</name></member>
      <member refid="classid_physics___parametric_1a8ffee84cbf90573d0f48a8c5e5cad815" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>GetLinearExtrapolationType</name></member>
      <member refid="classid_physics___parametric_1a0a5db734353332d96a0275171c83cbe6" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetLinearVelocity</name></member>
      <member refid="classid_physics___parametric_1a2f9f0f0bfbd848497eae75838b4b7c44" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetLinearVelocity</name></member>
      <member refid="classid_physics___parametric_1af4cdc9369a502736e174b49af5c09ae3" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>GetLocalAngles</name></member>
      <member refid="classid_physics___parametric_1af4cdc9369a502736e174b49af5c09ae3" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>GetLocalAngles</name></member>
      <member refid="classid_physics___parametric_1a6eb8474aba2c97c3a20d996444621f1d" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>GetLocalOrigin</name></member>
      <member refid="classid_physics___parametric_1a6eb8474aba2c97c3a20d996444621f1d" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>GetLocalOrigin</name></member>
      <member refid="classid_physics___parametric_1a85fb0906841fa01c870ef442fae0e0ef" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetMass</name></member>
      <member refid="classid_physics___parametric_1a85fb0906841fa01c870ef442fae0e0ef" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetMass</name></member>
      <member refid="classid_physics___parametric_1ad1db7677c789d54b749c1382a4520977" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetNumClipModels</name></member>
      <member refid="classid_physics___parametric_1ad1db7677c789d54b749c1382a4520977" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetNumClipModels</name></member>
      <member refid="classid_physics___base_1a5e301c7b5acf30df1f6a3cb9d3599729" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetNumContacts</name></member>
      <member refid="classid_physics___base_1a5e301c7b5acf30df1f6a3cb9d3599729" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetNumContacts</name></member>
      <member refid="classid_class_1a0b1f5ff97e7101384e1ca978fbde9878" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>GetNumTypes</name></member>
      <member refid="classid_class_1a0b1f5ff97e7101384e1ca978fbde9878" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>GetNumTypes</name></member>
      <member refid="classid_physics___parametric_1a0220b5da28f9ca27da22e5c598de8b24" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetOrigin</name></member>
      <member refid="classid_physics___parametric_1adb7dd420e4422e2610a8233ff4865d19" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetOrigin</name></member>
      <member refid="classid_physics___base_1adffd5069de66956869e10d4557f0925d" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetPushedAngularVelocity</name></member>
      <member refid="classid_physics___base_1ad5506da708fed58a9b24fa02c328959b" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetPushedAngularVelocity</name></member>
      <member refid="classid_physics___base_1af384cca825ba76992c4f461b91a1f444" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetPushedLinearVelocity</name></member>
      <member refid="classid_physics___base_1a96510581ea22bd37d95e33626ab693c5" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetPushedLinearVelocity</name></member>
      <member refid="classid_physics___parametric_1adfa166b07d2202c508799a179c0ef6db" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetRestStartTime</name></member>
      <member refid="classid_physics___parametric_1adfa166b07d2202c508799a179c0ef6db" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetRestStartTime</name></member>
      <member refid="classid_physics___parametric_1ad18003cf490ee094d5c44a9a9f7f0cb2" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>GetSpline</name></member>
      <member refid="classid_physics___parametric_1a8a2ed6f348a8ed67a2c6a4caa2b16aeb" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>GetSpline</name></member>
      <member refid="classid_physics___parametric_1afc627d684c2b340570ccf4bc5dc58e38" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>GetSplineAcceleration</name></member>
      <member refid="classid_physics___parametric_1afc627d684c2b340570ccf4bc5dc58e38" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>GetSplineAcceleration</name></member>
      <member refid="classid_physics___parametric_1a691baf357938852c4cca258dbd62f8a5" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>GetSplineDeceleration</name></member>
      <member refid="classid_physics___parametric_1a691baf357938852c4cca258dbd62f8a5" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>GetSplineDeceleration</name></member>
      <member refid="classid_class_1a272cbc9f1eeb09ec9f524b2d9948945a" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>GetSuperclass</name></member>
      <member refid="classid_class_1a250ad44de415ebe4c6ee6af859978e98" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>GetSuperclass</name></member>
      <member refid="classid_physics___parametric_1a751d947e637dad857e59336520485050" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetTime</name></member>
      <member refid="classid_physics___parametric_1a751d947e637dad857e59336520485050" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetTime</name></member>
      <member refid="classid_class_1ae1e4a1553a64224e101467819ceb5086" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetType</name></member>
      <member refid="classid_class_1a4581fc61c1e64c22928a4c4096c5a47b" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>GetType</name></member>
      <member refid="classid_class_1a68f8759cc5b307eee3dca1dc38402b2d" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>GetType</name></member>
      <member refid="classid_class_1a3662d6404c00a84bee44be1d4d0d3b42" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>GetType</name></member>
      <member refid="classid_class_1a6981e636da3bb171b209f773ff5c579f" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>GetTypeNumBits</name></member>
      <member refid="classid_class_1a6981e636da3bb171b209f773ff5c579f" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>GetTypeNumBits</name></member>
      <member refid="classid_physics___base_1a0cf3a7bb3df1f5fa29b7313fb50bfc3d" prot="protected" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>gravityNormal</name></member>
      <member refid="classid_physics___base_1a2faa320bcff1c6052dc1fa30e2595866" prot="protected" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>gravityVector</name></member>
      <member refid="classid_physics___base_1a3fd59d57ddc623c1d23df2b45ad6b1ec" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>HasGroundContacts</name></member>
      <member refid="classid_physics___base_1a3fd59d57ddc623c1d23df2b45ad6b1ec" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>HasGroundContacts</name></member>
      <member refid="classid_physics___parametric_1a5fc7c334e15585498465766d2b6f6c35" prot="private" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>hasMaster</name></member>
      <member refid="classid_physics___base_1af74b33c815b5ed40bb108fed93120f3c" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>idPhysics_Base</name></member>
      <member refid="classid_physics___base_1af74b33c815b5ed40bb108fed93120f3c" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>idPhysics_Base</name></member>
      <member refid="classid_physics___parametric_1af8dc3d5107820eb5edf2294b8eedc87e" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>idPhysics_Parametric</name></member>
      <member refid="classid_physics___parametric_1af8dc3d5107820eb5edf2294b8eedc87e" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>idPhysics_Parametric</name></member>
      <member refid="classid_class_1a477e1abd1ec413bb1e201cfe14961bdf" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>Init</name></member>
      <member refid="classid_class_1a09bc718f8fa432d081a010c393431e86" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>Init</name></member>
      <member refid="classid_physics___parametric_1a910051917dda42a71dc3a4fe16ff2e43" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>IsAtRest</name></member>
      <member refid="classid_physics___parametric_1a910051917dda42a71dc3a4fe16ff2e43" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>IsAtRest</name></member>
      <member refid="classid_physics___parametric_1a4f486a78f98cd5cc3011351570c07655" prot="private" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>isBlocked</name></member>
      <member refid="classid_physics___base_1a969fc5a622df60f1510f5b4f01fa88dc" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>IsGroundClipModel</name></member>
      <member refid="classid_physics___base_1a969fc5a622df60f1510f5b4f01fa88dc" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>IsGroundClipModel</name></member>
      <member refid="classid_physics___base_1a07d038db013f97e5ae34b25a98d52730" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>IsGroundEntity</name></member>
      <member refid="classid_physics___base_1a07d038db013f97e5ae34b25a98d52730" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>IsGroundEntity</name></member>
      <member refid="classid_physics___parametric_1a9edfffb4830f544e58cd19f4aebbf351" prot="private" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>isOrientated</name></member>
      <member refid="classid_physics___base_1a9a62b7f2b473c6a202192b2ae43cc2ab" prot="protected" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>IsOutsideWorld</name></member>
      <member refid="classid_physics___base_1a9a62b7f2b473c6a202192b2ae43cc2ab" prot="protected" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>IsOutsideWorld</name></member>
      <member refid="classid_physics___parametric_1a430d4667783aa188925ee04b173524e6" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>IsPushable</name></member>
      <member refid="classid_physics___parametric_1a430d4667783aa188925ee04b173524e6" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>IsPushable</name></member>
      <member refid="classid_physics___parametric_1a4f094f6fd4453bc9ee5e47bdfcee01d3" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>IsPusher</name></member>
      <member refid="classid_physics___parametric_1a4f094f6fd4453bc9ee5e47bdfcee01d3" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>IsPusher</name></member>
      <member refid="classid_physics___parametric_1a963a01dddc9ae8cf0557b584879dba24" prot="private" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>isPusher</name></member>
      <member refid="classid_class_1a3514bbccebcac499ac15083bb2a67487" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>IsType</name></member>
      <member refid="classid_class_1a44af143b246636c3e6f43aebad05b6d6" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>IsType</name></member>
      <member refid="classid_physics___parametric_1aa4a7d53671961f8ad55f3a72a36dfd39" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>LinkClip</name></member>
      <member refid="classid_physics___parametric_1aa4a7d53671961f8ad55f3a72a36dfd39" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>LinkClip</name></member>
      <member refid="classid_class_1a4bae32c6569ee5b7f27e5cd5a4c93eab" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>ListClasses_f</name></member>
      <member refid="classid_class_1ad5f3b0730c302ad9f74e35d94274ad34" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>ListClasses_f</name></member>
      <member refid="classid_class_1a039b8531aa3f54ab164066361aa51bac" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>operator delete</name></member>
      <member refid="classid_class_1a9154911c956031443c4a177434a7c951" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>operator delete</name></member>
      <member refid="classid_class_1a039b8531aa3f54ab164066361aa51bac" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>operator delete</name></member>
      <member refid="classid_class_1a9154911c956031443c4a177434a7c951" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>operator delete</name></member>
      <member refid="classid_class_1aa56d622a26b2984a1507446905237a5e" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>operator new</name></member>
      <member refid="classid_class_1a72f2d16d9ac043833e32bc734e1e8173" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>operator new</name></member>
      <member refid="classid_class_1a11843e3263fac01b39f2e738a08d885e" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>operator new</name></member>
      <member refid="classid_class_1a3dbb763aa8a408c7dc80beab9edaadd5" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>operator new</name></member>
      <member refid="classid_class_1a4e1bee4c8c95b22799f58284785ea45d" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a79ff2ce28802016d22c52b575732468c" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a4d532e97b9b8c8528107509486f399aa" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1aeabbc3155ac6c991b288f874a313f4c6" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1af489f280656236ffda55cf31e28a1458" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a3bf07e2d8d295cf61856d9fd26f5ba0b" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1ab1c59135543538e7507590761864c054" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a269276b4a60c83e6678b4308b3b72afe" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a2cdfe8eb844ec5a8881f6e5861dff198" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a4e1bee4c8c95b22799f58284785ea45d" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a79ff2ce28802016d22c52b575732468c" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a4d532e97b9b8c8528107509486f399aa" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1aeabbc3155ac6c991b288f874a313f4c6" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1af489f280656236ffda55cf31e28a1458" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a3bf07e2d8d295cf61856d9fd26f5ba0b" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1ab1c59135543538e7507590761864c054" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a269276b4a60c83e6678b4308b3b72afe" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a2cdfe8eb844ec5a8881f6e5861dff198" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a44dd1c98e3a3067301cccd467424e1fb" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a6aa307dcafd72a277e1b0ba7e7e86313" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a06dfecc610d58cfa6c9a714b41f5e500" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a57d88fe874e7fce62ab80de4e9bac4d1" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a90d5e0e78a3f2ab541f2de7842fbd25c" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a78e7ad3f071bca22b371033e074dcb95" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a66d99ca51730aaf6151aa65e6e891dad" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a8251d21ac61b4b5bf71865c5daedecb3" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a0f023d36142f56c506f3de44bcb88a60" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a44dd1c98e3a3067301cccd467424e1fb" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a6aa307dcafd72a277e1b0ba7e7e86313" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a06dfecc610d58cfa6c9a714b41f5e500" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a57d88fe874e7fce62ab80de4e9bac4d1" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a90d5e0e78a3f2ab541f2de7842fbd25c" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a78e7ad3f071bca22b371033e074dcb95" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a66d99ca51730aaf6151aa65e6e891dad" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a8251d21ac61b4b5bf71865c5daedecb3" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a0f023d36142f56c506f3de44bcb88a60" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a2730cf06c2248d033d3331393690d465" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a41ebdd2ed60bad555b8040af1468dd5e" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1ae1688cd389fea365f91310fd8f0fbdc1" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a682126d778da71c1d61c350ef1383cb8" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1aacfd744269d9a43b3055d4403674a261" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1abd8938dad93fdc7aa9cb90d84f81541b" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a804fc083a766317b62978b9f4f1de2f3" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1af3a58075c898bc5018cce41a6840a3eb" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a925bdbdc9aa6d61b6c74a0e17393007b" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a2730cf06c2248d033d3331393690d465" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a41ebdd2ed60bad555b8040af1468dd5e" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1ae1688cd389fea365f91310fd8f0fbdc1" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a682126d778da71c1d61c350ef1383cb8" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1aacfd744269d9a43b3055d4403674a261" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1abd8938dad93fdc7aa9cb90d84f81541b" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a804fc083a766317b62978b9f4f1de2f3" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1af3a58075c898bc5018cce41a6840a3eb" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a925bdbdc9aa6d61b6c74a0e17393007b" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a913781fd6276d5d821999c206c784505" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>ProcessEventArgPtr</name></member>
      <member refid="classid_class_1a913781fd6276d5d821999c206c784505" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>ProcessEventArgPtr</name></member>
      <member refid="classid_physics___parametric_1adc4a1b92ac038c9f307756eb3c0fc64d" prot="private" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>pushFlags</name></member>
      <member refid="classid_physics___parametric_1a2c95f27bd1cfc64b0d616ac2940421a1" prot="private" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>pushResults</name></member>
      <member refid="classid_physics___base_1af6f4016a03919fb7983e6158f555e20c" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>PutToRest</name></member>
      <member refid="classid_physics___base_1af6f4016a03919fb7983e6158f555e20c" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>PutToRest</name></member>
      <member refid="classid_physics___parametric_1a7a627b349d610cce68ca190dd01e3f6c" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>ReadFromSnapshot</name></member>
      <member refid="classid_physics___parametric_1a7a627b349d610cce68ca190dd01e3f6c" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>ReadFromSnapshot</name></member>
      <member refid="classid_physics___base_1af9d3ef9f8c72406f8dfd0488bf4bf43a" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>RemoveContactEntity</name></member>
      <member refid="classid_physics___base_1af9d3ef9f8c72406f8dfd0488bf4bf43a" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>RemoveContactEntity</name></member>
      <member refid="classid_class_1ab8459ec829b2e016db6d2b13d184917d" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>RespondsTo</name></member>
      <member refid="classid_class_1ab135cc5b1099727aeb0710d169ee641f" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>RespondsTo</name></member>
      <member refid="classid_physics___parametric_1aac5b98f12eb02b39d93a91ec4018301a" prot="private" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>Rest</name></member>
      <member refid="classid_physics___parametric_1aac5b98f12eb02b39d93a91ec4018301a" prot="private" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>Rest</name></member>
      <member refid="classid_physics___parametric_1a839c8e4cc235ef2c1057299369ea17c3" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>Restore</name></member>
      <member refid="classid_physics___parametric_1a839c8e4cc235ef2c1057299369ea17c3" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>Restore</name></member>
      <member refid="classid_physics___parametric_1ae3e0600f0f8cd31b4e41bbb303199210" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>RestoreState</name></member>
      <member refid="classid_physics___parametric_1ae3e0600f0f8cd31b4e41bbb303199210" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>RestoreState</name></member>
      <member refid="classid_physics___parametric_1a780c62e9540ddf6f70407d1f53feef6b" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>Rotate</name></member>
      <member refid="classid_physics___parametric_1a780c62e9540ddf6f70407d1f53feef6b" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>Rotate</name></member>
      <member refid="classid_physics___parametric_1a1cafdc49f990091ab0869d9f9072d22a" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>Save</name></member>
      <member refid="classid_physics___parametric_1a1cafdc49f990091ab0869d9f9072d22a" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>Save</name></member>
      <member refid="classid_physics___parametric_1af1938c503ea917a2be73a4c404dcad91" prot="private" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>saved</name></member>
      <member refid="classid_physics___parametric_1ae2e9c4552e871935fef55993dba6a1f6" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>SaveState</name></member>
      <member refid="classid_physics___parametric_1ae2e9c4552e871935fef55993dba6a1f6" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>SaveState</name></member>
      <member refid="classid_physics___base_1ada002093b0a9dc08bb8bb7f1dddb1adc" prot="protected" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>self</name></member>
      <member refid="classid_physics___parametric_1a76f8f12a43a3820052c6da2c14f89ad5" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>SetAngularExtrapolation</name></member>
      <member refid="classid_physics___parametric_1a76f8f12a43a3820052c6da2c14f89ad5" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>SetAngularExtrapolation</name></member>
      <member refid="classid_physics___parametric_1a6f34447871cdf2f2570709577a550590" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>SetAngularInterpolation</name></member>
      <member refid="classid_physics___parametric_1a6f34447871cdf2f2570709577a550590" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>SetAngularInterpolation</name></member>
      <member refid="classid_physics___parametric_1ad004b5b838bce1aed3a28dc9ae0dd8ed" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>SetAngularVelocity</name></member>
      <member refid="classid_physics___parametric_1ad004b5b838bce1aed3a28dc9ae0dd8ed" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>SetAngularVelocity</name></member>
      <member refid="classid_physics___parametric_1a5a2664370a597c35e786c4e49eb5b3c5" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>SetAxis</name></member>
      <member refid="classid_physics___parametric_1a5a2664370a597c35e786c4e49eb5b3c5" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>SetAxis</name></member>
      <member refid="classid_physics_1ae52890530331a67139263e6af3397899" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>SetClipBox</name></member>
      <member refid="classid_physics_1ac74fac665cf900d7d9e9fc04d43ddfc1" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>SetClipBox</name></member>
      <member refid="classid_physics___base_1aaf043cdb5e4f407a44678acf8d08e6f2" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>SetClipMask</name></member>
      <member refid="classid_physics___base_1aaf043cdb5e4f407a44678acf8d08e6f2" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>SetClipMask</name></member>
      <member refid="classid_physics___parametric_1ae59db0081d9d802d10276d91be67a942" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>SetClipModel</name></member>
      <member refid="classid_physics___parametric_1ae59db0081d9d802d10276d91be67a942" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>SetClipModel</name></member>
      <member refid="classid_physics___parametric_1a9c7f3433cbc4ae579a4bdb4cd26f124b" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>SetContents</name></member>
      <member refid="classid_physics___parametric_1a9c7f3433cbc4ae579a4bdb4cd26f124b" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>SetContents</name></member>
      <member refid="classid_physics___base_1ad73661fe7e1092f31a05a216afb79492" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>SetGravity</name></member>
      <member refid="classid_physics___base_1ad73661fe7e1092f31a05a216afb79492" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>SetGravity</name></member>
      <member refid="classid_physics___parametric_1a3435d812df74af3bccbf36a14bcab764" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>SetLinearExtrapolation</name></member>
      <member refid="classid_physics___parametric_1a3435d812df74af3bccbf36a14bcab764" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>SetLinearExtrapolation</name></member>
      <member refid="classid_physics___parametric_1ab6cca99e1e8a46bb1761a8a323c96c35" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>SetLinearInterpolation</name></member>
      <member refid="classid_physics___parametric_1ab6cca99e1e8a46bb1761a8a323c96c35" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>SetLinearInterpolation</name></member>
      <member refid="classid_physics___parametric_1a53f53d92836f42fd08992a90f84538de" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>SetLinearVelocity</name></member>
      <member refid="classid_physics___parametric_1a53f53d92836f42fd08992a90f84538de" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>SetLinearVelocity</name></member>
      <member refid="classid_physics___parametric_1a4c9b8e22389200c0deb2de8e691c611d" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>SetMass</name></member>
      <member refid="classid_physics___parametric_1a4c9b8e22389200c0deb2de8e691c611d" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>SetMass</name></member>
      <member refid="classid_physics___parametric_1afe96b9fbfb5a96c4dd55d2efb68579d3" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>SetMaster</name></member>
      <member refid="classid_physics___parametric_1afe96b9fbfb5a96c4dd55d2efb68579d3" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>SetMaster</name></member>
      <member refid="classid_physics___parametric_1a493baf5016cee9f6e56d77c170d2ff8a" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>SetOrigin</name></member>
      <member refid="classid_physics___parametric_1a493baf5016cee9f6e56d77c170d2ff8a" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>SetOrigin</name></member>
      <member refid="classid_physics___base_1acfa76e02788bac5bcde53162d68c5db9" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>SetPushed</name></member>
      <member refid="classid_physics___base_1acfa76e02788bac5bcde53162d68c5db9" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>SetPushed</name></member>
      <member refid="classid_physics___parametric_1ab6483b17e9e7445a3b52b35727f66f9f" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>SetPusher</name></member>
      <member refid="classid_physics___parametric_1ab6483b17e9e7445a3b52b35727f66f9f" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>SetPusher</name></member>
      <member refid="classid_physics___base_1a201eb3ff18b214ddc3fa27b5ff041879" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>SetSelf</name></member>
      <member refid="classid_physics___base_1a201eb3ff18b214ddc3fa27b5ff041879" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>SetSelf</name></member>
      <member refid="classid_physics___parametric_1a868edd11b2037d3a0d542f6b0ecf78a3" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>SetSpline</name></member>
      <member refid="classid_physics___parametric_1a868edd11b2037d3a0d542f6b0ecf78a3" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>SetSpline</name></member>
      <member refid="classid_class_1aa20c883a28509e2b4997ee91ae0b8eae" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>Shutdown</name></member>
      <member refid="classid_class_1a42b60ee435e4d84ad914d828a4f7f82f" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>Shutdown</name></member>
      <member refid="classid_physics_1a3a07541fcfddc8507565281c841ad40a" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>SnapTimeToPhysicsFrame</name></member>
      <member refid="classid_physics_1a227507b5b7079ccc8bc3b150dcb57b2e" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>SnapTimeToPhysicsFrame</name></member>
      <member refid="classid_class_1a7b8213ff8dd347c24657306603a3ef8e" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>Spawn</name></member>
      <member refid="classid_class_1a7b8213ff8dd347c24657306603a3ef8e" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>Spawn</name></member>
      <member refid="classid_physics___parametric_1afbc2d74eb24ba07a7b0b70d5ceb075e4" prot="private" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>TestIfAtRest</name></member>
      <member refid="classid_physics___parametric_1afbc2d74eb24ba07a7b0b70d5ceb075e4" prot="private" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>TestIfAtRest</name></member>
      <member refid="classid_physics___parametric_1a76e8fb6e7066d5107bd1b02f32316a4d" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>Translate</name></member>
      <member refid="classid_physics___parametric_1a76e8fb6e7066d5107bd1b02f32316a4d" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>Translate</name></member>
      <member refid="classid_class_1ae391af31676f812ccd2dc7b0c8f921b1" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>Type</name></member>
      <member refid="classid_physics___parametric_1a0b2cc8f9d31007308ca0196af14e4571" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>UnlinkClip</name></member>
      <member refid="classid_physics___parametric_1a0b2cc8f9d31007308ca0196af14e4571" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>UnlinkClip</name></member>
      <member refid="classid_physics___parametric_1a192def7ea3c831a4fcff84e0c5fd06d7" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>UpdateTime</name></member>
      <member refid="classid_physics___parametric_1a192def7ea3c831a4fcff84e0c5fd06d7" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>UpdateTime</name></member>
      <member refid="classid_physics___parametric_1a4b545222d5971218e1c08abfba11dde0" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>UsingSplineAngles</name></member>
      <member refid="classid_physics___parametric_1a4b545222d5971218e1c08abfba11dde0" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>UsingSplineAngles</name></member>
      <member refid="classid_physics___parametric_1afd1423ce1771b073008c11d1cc07e321" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>WriteToSnapshot</name></member>
      <member refid="classid_physics___parametric_1afd1423ce1771b073008c11d1cc07e321" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>WriteToSnapshot</name></member>
      <member refid="classid_class_1a252055b84ce9dd64e15482a0a083bd92" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>~idClass</name></member>
      <member refid="classid_class_1adc7282c1b9d17b7b852bc7e0086e256d" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>~idClass</name></member>
      <member refid="classid_physics_1a6afd95253b165b07ae7f3636e5fee3b1" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>~idPhysics</name></member>
      <member refid="classid_physics_1a011cc8d6312c743f535327af57c4b7f2" prot="public" virt="virtual"><scope>idPhysics_Parametric</scope><name>~idPhysics</name></member>
      <member refid="classid_physics___base_1a06fe55f4290d55c2bae27146db5bfc51" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>~idPhysics_Base</name></member>
      <member refid="classid_physics___base_1a06fe55f4290d55c2bae27146db5bfc51" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>~idPhysics_Base</name></member>
      <member refid="classid_physics___parametric_1a5901e9a40869da0510493ee2e8650557" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>~idPhysics_Parametric</name></member>
      <member refid="classid_physics___parametric_1a5901e9a40869da0510493ee2e8650557" prot="public" virt="non-virtual"><scope>idPhysics_Parametric</scope><name>~idPhysics_Parametric</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
