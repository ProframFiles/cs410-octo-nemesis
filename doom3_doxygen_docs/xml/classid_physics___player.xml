<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_physics___player" kind="class" prot="public">
    <compoundname>idPhysics_Player</compoundname>
    <basecompoundref refid="classid_physics___actor" prot="public" virt="non-virtual">idPhysics_Actor</basecompoundref>
    <basecompoundref refid="classid_physics___actor" prot="public" virt="non-virtual">idPhysics_Actor</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classid_physics___player_1a52a3647e29026b29732f0747a1088877" prot="private" static="no" mutable="no">
        <type><ref refid="structplayer_p_state__s" kindref="compound">playerPState_t</ref></type>
        <definition>playerPState_t idPhysics_Player::current</definition>
        <argsstring></argsstring>
        <name>current</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="135" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___player_1a140d8f4a7f7d18fb214e28ab9076db17" prot="private" static="no" mutable="no">
        <type><ref refid="structplayer_p_state__s" kindref="compound">playerPState_t</ref></type>
        <definition>playerPState_t idPhysics_Player::saved</definition>
        <argsstring></argsstring>
        <name>saved</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="136" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___player_1ac6d4acefd4fc41259c4b53154a247db7" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idPhysics_Player::walkSpeed</definition>
        <argsstring></argsstring>
        <name>walkSpeed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="139" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___player_1a8092d1d72ca68830bb4e4acbcf0eef45" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idPhysics_Player::crouchSpeed</definition>
        <argsstring></argsstring>
        <name>crouchSpeed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="140" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___player_1af990b5280a2235ad867785f4a123efe4" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idPhysics_Player::maxStepHeight</definition>
        <argsstring></argsstring>
        <name>maxStepHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="141" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___player_1a10e477c10e1c340945be2923dc1cf4bb" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idPhysics_Player::maxJumpHeight</definition>
        <argsstring></argsstring>
        <name>maxJumpHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="142" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___player_1a2007455f38a236fb29c9de09623336ed" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idPhysics_Player::debugLevel</definition>
        <argsstring></argsstring>
        <name>debugLevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="143" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___player_1a9faba315475995b6f758ceb5f2299693" prot="private" static="no" mutable="no">
        <type><ref refid="classusercmd__t" kindref="compound">usercmd_t</ref></type>
        <definition>usercmd_t idPhysics_Player::command</definition>
        <argsstring></argsstring>
        <name>command</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="146" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___player_1a85b2ad31a35d64c679d8b268a2f4dd34" prot="private" static="no" mutable="no">
        <type><ref refid="classid_angles" kindref="compound">idAngles</ref></type>
        <definition>idAngles idPhysics_Player::viewAngles</definition>
        <argsstring></argsstring>
        <name>viewAngles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="147" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___player_1a9aeec9875049e7c1ca194ef28a4d6947" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idPhysics_Player::framemsec</definition>
        <argsstring></argsstring>
        <name>framemsec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="150" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___player_1a061b14cc47c260f1b5e01d938cfaccb8" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idPhysics_Player::frametime</definition>
        <argsstring></argsstring>
        <name>frametime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="151" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___player_1acc0eb1b155c6ca8b17744d3631d220d0" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idPhysics_Player::playerSpeed</definition>
        <argsstring></argsstring>
        <name>playerSpeed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="152" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___player_1a2de185ab1bd7e855c995c474ec203f80" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>idVec3 idPhysics_Player::viewForward</definition>
        <argsstring></argsstring>
        <name>viewForward</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="153" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___player_1acf5e997aad432f36d2a7c110b55432c8" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>idVec3 idPhysics_Player::viewRight</definition>
        <argsstring></argsstring>
        <name>viewRight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="154" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___player_1aecc59147969f0b6467ffa86b1ab4a027" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idPhysics_Player::walking</definition>
        <argsstring></argsstring>
        <name>walking</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="157" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___player_1a1b213aefa9e2213ebcf68944ce4efb19" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idPhysics_Player::groundPlane</definition>
        <argsstring></argsstring>
        <name>groundPlane</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="158" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___player_1a51168ce654e24c0bc452fc533f907736" prot="private" static="no" mutable="no">
        <type><ref refid="structtrace__s" kindref="compound">trace_t</ref></type>
        <definition>trace_t idPhysics_Player::groundTrace</definition>
        <argsstring></argsstring>
        <name>groundTrace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="159" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___player_1a049cc22fd8ed3644c998519fb4ae6809" prot="private" static="no" mutable="no">
        <type>const <ref refid="classid_material" kindref="compound">idMaterial</ref> *</type>
        <definition>const idMaterial * idPhysics_Player::groundMaterial</definition>
        <argsstring></argsstring>
        <name>groundMaterial</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="160" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___player_1a3488fb89ddf600e83644d908521a0e30" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idPhysics_Player::ladder</definition>
        <argsstring></argsstring>
        <name>ladder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="163" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___player_1a94c61791473b43738c4f76325e169a14" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>idVec3 idPhysics_Player::ladderNormal</definition>
        <argsstring></argsstring>
        <name>ladderNormal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="164" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___player_1a2cf907aaff47aa439f6a140244cc0743" prot="private" static="no" mutable="no">
        <type>waterLevel_t</type>
        <definition>waterLevel_t idPhysics_Player::waterLevel</definition>
        <argsstring></argsstring>
        <name>waterLevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="167" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___player_1a385397cb93b9d7a1dc8a3b59ef08855b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idPhysics_Player::waterType</definition>
        <argsstring></argsstring>
        <name>waterType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="168" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_physics___player_1ad123fdaed9368daab485390b440e8588" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idPhysics_Player::CLASS_PROTOTYPE</definition>
        <argsstring>(idPhysics_Player)</argsstring>
        <name>CLASS_PROTOTYPE</name>
        <param>
          <type><ref refid="classid_physics___player" kindref="compound">idPhysics_Player</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a24139aa53bed6b2b7f5fce0b929d3aea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idPhysics_Player::idPhysics_Player</definition>
        <argsstring>(void)</argsstring>
        <name>idPhysics_Player</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="77" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1498" bodyend="1523"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1ae1652e06be42f2586348c5422f6e7087" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::Save</definition>
        <argsstring>(idSaveGame *savefile) const </argsstring>
        <name>Save</name>
        <param>
          <type><ref refid="classid_save_game" kindref="compound">idSaveGame</ref> *</type>
          <declname>savefile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="79" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1562" bodyend="1592"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a195168f333ce0caa0b2f3aff76a5aeb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::Restore</definition>
        <argsstring>(idRestoreGame *savefile)</argsstring>
        <name>Restore</name>
        <param>
          <type><ref refid="classid_restore_game" kindref="compound">idRestoreGame</ref> *</type>
          <declname>savefile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="80" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1599" bodyend="1629"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a51336d4ab8e15339de1f6030bb8a7635" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SetSpeed</definition>
        <argsstring>(const float newWalkSpeed, const float newCrouchSpeed)</argsstring>
        <name>SetSpeed</name>
        <param>
          <type>const float</type>
          <declname>newWalkSpeed</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>newCrouchSpeed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="83" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1646" bodyend="1649"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a3457a20686aecb4eb7c3bbbe9e16856e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SetMaxStepHeight</definition>
        <argsstring>(const float newMaxStepHeight)</argsstring>
        <name>SetMaxStepHeight</name>
        <param>
          <type>const float</type>
          <declname>newMaxStepHeight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="84" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1656" bodyend="1658"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1ae4ea16824fee22eba4a627f66a7fb87b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float idPhysics_Player::GetMaxStepHeight</definition>
        <argsstring>(void) const </argsstring>
        <name>GetMaxStepHeight</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="85" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1665" bodyend="1667"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a87a727b48811305235d4359374040c86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SetMaxJumpHeight</definition>
        <argsstring>(const float newMaxJumpHeight)</argsstring>
        <name>SetMaxJumpHeight</name>
        <param>
          <type>const float</type>
          <declname>newMaxJumpHeight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="86" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1674" bodyend="1676"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1abf47e46989bf0b5c5eb469fe467dca6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SetMovementType</definition>
        <argsstring>(const pmtype_t type)</argsstring>
        <name>SetMovementType</name>
        <param>
          <type>const pmtype_t</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="87" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1683" bodyend="1685"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1afc15e8f22752d960bf26d1156d6ae65a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SetPlayerInput</definition>
        <argsstring>(const usercmd_t &amp;cmd, const idAngles &amp;newViewAngles)</argsstring>
        <name>SetPlayerInput</name>
        <param>
          <type>const <ref refid="classusercmd__t" kindref="compound">usercmd_t</ref> &amp;</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>const <ref refid="classid_angles" kindref="compound">idAngles</ref> &amp;</type>
          <declname>newViewAngles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="88" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1636" bodyend="1639"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1aa1123ceef37c5f743edc08e7d7bc780e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SetKnockBack</definition>
        <argsstring>(const int knockBackTime)</argsstring>
        <name>SetKnockBack</name>
        <param>
          <type>const int</type>
          <declname>knockBackTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="89" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1692" bodyend="1698"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a36646496d9b620c2846fd92b068058ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SetDebugLevel</definition>
        <argsstring>(bool set)</argsstring>
        <name>SetDebugLevel</name>
        <param>
          <type>bool</type>
          <declname>set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="90" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1705" bodyend="1707"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a3ef3bda85e58ec93bc560d483535a8c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>waterLevel_t</type>
        <definition>waterLevel_t idPhysics_Player::GetWaterLevel</definition>
        <argsstring>(void) const </argsstring>
        <name>GetWaterLevel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="92" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1435" bodyend="1437"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a30ab67d4c08fef4088785546daa8937f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idPhysics_Player::GetWaterType</definition>
        <argsstring>(void) const </argsstring>
        <name>GetWaterType</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="93" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1444" bodyend="1446"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a3fec998614cab94715acb837924d14c6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idPhysics_Player::HasJumped</definition>
        <argsstring>(void) const </argsstring>
        <name>HasJumped</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="94" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1453" bodyend="1455"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1ac1b3d058c0dc5c8cf611df1c8102dcd2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idPhysics_Player::HasSteppedUp</definition>
        <argsstring>(void) const </argsstring>
        <name>HasSteppedUp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="95" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1462" bodyend="1464"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a4944b6f5fd1a8114ae530e3305916d80" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float idPhysics_Player::GetStepUp</definition>
        <argsstring>(void) const </argsstring>
        <name>GetStepUp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="96" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1471" bodyend="1473"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1ad28dba2e5379c100d2ca4f2861591519" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idPhysics_Player::IsCrouching</definition>
        <argsstring>(void) const </argsstring>
        <name>IsCrouching</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="97" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1480" bodyend="1482"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1ab05d6cdf94e32278aaeb90c3592d4f3b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idPhysics_Player::OnLadder</definition>
        <argsstring>(void) const </argsstring>
        <name>OnLadder</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="98" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1489" bodyend="1491"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a7c86dbd95a1fbbc78b7a6695d60dd3ea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3 &amp; idPhysics_Player::PlayerGetOrigin</definition>
        <argsstring>(void) const </argsstring>
        <name>PlayerGetOrigin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="99" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1855" bodyend="1857"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a31065cae4bf946c93abf406df8006578" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool idPhysics_Player::Evaluate</definition>
        <argsstring>(int timeStepMSec, int endTimeMSec)</argsstring>
        <name>Evaluate</name>
        <reimplements refid="classid_physics___base_1a68e8bb83889f347f77b5b7c0af1df3a0">Evaluate</reimplements>
        <param>
          <type>int</type>
          <declname>timeStepMSec</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endTimeMSec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="102" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1714" bodyend="1747"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1aa8dab26ec1896a70282934022c0ec209" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Player::UpdateTime</definition>
        <argsstring>(int endTimeMSec)</argsstring>
        <name>UpdateTime</name>
        <reimplements refid="classid_physics___base_1a57bc63cb5983f055072ff1e3da5c83a2">UpdateTime</reimplements>
        <param>
          <type>int</type>
          <declname>endTimeMSec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="103" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1754" bodyend="1755"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a28b24876a64dd2e2ded9212d45d249a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idPhysics_Player::GetTime</definition>
        <argsstring>(void) const </argsstring>
        <name>GetTime</name>
        <reimplements refid="classid_physics___base_1a5df6d476848ba03d22104cd27ac9acd0">GetTime</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="104" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1762" bodyend="1764"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a13f37135eecbe060e12226c8033b7b03" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Player::GetImpactInfo</definition>
        <argsstring>(const int id, const idVec3 &amp;point, impactInfo_t *info) const </argsstring>
        <name>GetImpactInfo</name>
        <reimplements refid="classid_physics___base_1a2d7c23a0cfba3a82b535f5a88e1c2241">GetImpactInfo</reimplements>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type><ref refid="structimpact_info__s" kindref="compound">impactInfo_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="106" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1771" bodyend="1776"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1aa629680dc2ed53f3f0957eb7d0ef2eb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Player::ApplyImpulse</definition>
        <argsstring>(const int id, const idVec3 &amp;point, const idVec3 &amp;impulse)</argsstring>
        <name>ApplyImpulse</name>
        <reimplements refid="classid_physics___base_1a4ab48ead610a476aa0d5485c573c17b4">ApplyImpulse</reimplements>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>impulse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="107" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1783" bodyend="1787"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a6c7804b9e07456c44e3c693821c4766f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool idPhysics_Player::IsAtRest</definition>
        <argsstring>(void) const </argsstring>
        <name>IsAtRest</name>
        <reimplements refid="classid_physics___base_1adf5fdb18bf2f51f4e9a62c0c3962496c">IsAtRest</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="108" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1794" bodyend="1796"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a60f7ddddc5a1c71616eb610ff15bbce0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idPhysics_Player::GetRestStartTime</definition>
        <argsstring>(void) const </argsstring>
        <name>GetRestStartTime</name>
        <reimplements refid="classid_physics___base_1a573317c8b6147e7c5adba7022b01e3e4">GetRestStartTime</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="109" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1803" bodyend="1805"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a4f24cf0125e574ef1c88fc3723849b4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SaveState</definition>
        <argsstring>(void)</argsstring>
        <name>SaveState</name>
        <reimplements refid="classid_physics___base_1abfef1ec167da6780db337a59f6df318b">SaveState</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="111" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1812" bodyend="1814"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1ad4c5ca6d19919581fd49ac61e956d985" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Player::RestoreState</definition>
        <argsstring>(void)</argsstring>
        <name>RestoreState</name>
        <reimplements refid="classid_physics___base_1a2506a696d776e0f4ab7aeb5706a5df93">RestoreState</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="112" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1821" bodyend="1827"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a3d0011165fcf451ad97ce37dcba68d0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SetOrigin</definition>
        <argsstring>(const idVec3 &amp;newOrigin, int id=-1)</argsstring>
        <name>SetOrigin</name>
        <reimplements refid="classid_physics___base_1a70d7961cab60fc62ef0ff32af732d51b">SetOrigin</reimplements>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>newOrigin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="114" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1834" bodyend="1848"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1af96f846c83fe039d57b637525fd9d5ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SetAxis</definition>
        <argsstring>(const idMat3 &amp;newAxis, int id=-1)</argsstring>
        <name>SetAxis</name>
        <reimplements refid="classid_physics___base_1a4dad199e469655584a79547d3c959ae9">SetAxis</reimplements>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>newAxis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="115" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1864" bodyend="1866"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1aa69656047a0c9faa88273fb641c11c31" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Player::Translate</definition>
        <argsstring>(const idVec3 &amp;translation, int id=-1)</argsstring>
        <name>Translate</name>
        <reimplements refid="classid_physics___base_1a9bb7ce564e1f8ad77f0003c24c86e54b">Translate</reimplements>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>translation</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="117" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1873" bodyend="1879"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1adf16c016d875b078b8f6ac93416ddafc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Player::Rotate</definition>
        <argsstring>(const idRotation &amp;rotation, int id=-1)</argsstring>
        <name>Rotate</name>
        <reimplements refid="classid_physics___base_1a277197f47e1ef55dd0ddd0e4ed40e93c">Rotate</reimplements>
        <param>
          <type>const <ref refid="classid_rotation" kindref="compound">idRotation</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="118" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1886" bodyend="1900"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1abc2116d78322d6f96a0ac170967c5f6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SetLinearVelocity</definition>
        <argsstring>(const idVec3 &amp;newLinearVelocity, int id=0)</argsstring>
        <name>SetLinearVelocity</name>
        <reimplements refid="classid_physics___base_1a064d14b46eacbd8c578461248c6447bd">SetLinearVelocity</reimplements>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>newLinearVelocity</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="120" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1907" bodyend="1909"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a6c383ce2043facbd27b070db583245d8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3 &amp; idPhysics_Player::GetLinearVelocity</definition>
        <argsstring>(int id=0) const </argsstring>
        <name>GetLinearVelocity</name>
        <reimplements refid="classid_physics___base_1a1bb04a7510edfedbe96faaba2ac389c2">GetLinearVelocity</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="122" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1916" bodyend="1918"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a64e8f059d255a331183810fa154bec59" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SetPushed</definition>
        <argsstring>(int deltaTime)</argsstring>
        <name>SetPushed</name>
        <reimplements refid="classid_physics___base_1acfa76e02788bac5bcde53162d68c5db9">SetPushed</reimplements>
        <param>
          <type>int</type>
          <declname>deltaTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="124" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1925" bodyend="1939"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a5988d969a20ba4c12d57badaf9987079" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3 &amp; idPhysics_Player::GetPushedLinearVelocity</definition>
        <argsstring>(const int id=0) const </argsstring>
        <name>GetPushedLinearVelocity</name>
        <reimplements refid="classid_physics___base_1af384cca825ba76992c4f461b91a1f444">GetPushedLinearVelocity</reimplements>
        <param>
          <type>const int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="125" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1946" bodyend="1948"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1ae3d7e2c64db305a26210b59b75b321e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::ClearPushedVelocity</definition>
        <argsstring>(void)</argsstring>
        <name>ClearPushedVelocity</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="126" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1955" bodyend="1957"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1af33bfa80db7da92dbbaee88f7216bcf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SetMaster</definition>
        <argsstring>(idEntity *master, const bool orientated=true)</argsstring>
        <name>SetMaster</name>
        <reimplements refid="classid_physics___base_1a1a70caaf421d2a73aa3a03ffca5d11fb">SetMaster</reimplements>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>master</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>orientated</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="128" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1966" bodyend="1985"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a44d6adfc3d8b13e63fab6623aec28462" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Player::WriteToSnapshot</definition>
        <argsstring>(idBitMsgDelta &amp;msg) const </argsstring>
        <name>WriteToSnapshot</name>
        <reimplements refid="classid_physics___base_1a62ca703f7ad9004e69e09ca99582756d">WriteToSnapshot</reimplements>
        <param>
          <type><ref refid="classid_bit_msg_delta" kindref="compound">idBitMsgDelta</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="130" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1999" bodyend="2016"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1ac4ee9e2272e69992ff5513b7566483ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Player::ReadFromSnapshot</definition>
        <argsstring>(const idBitMsgDelta &amp;msg)</argsstring>
        <name>ReadFromSnapshot</name>
        <reimplements refid="classid_physics___base_1a54bee9929d92f797ca95c205c6720ca5">ReadFromSnapshot</reimplements>
        <param>
          <type>const <ref refid="classid_bit_msg_delta" kindref="compound">idBitMsgDelta</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="131" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="2023" bodyend="2044"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1ad123fdaed9368daab485390b440e8588" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idPhysics_Player::CLASS_PROTOTYPE</definition>
        <argsstring>(idPhysics_Player)</argsstring>
        <name>CLASS_PROTOTYPE</name>
        <param>
          <type><ref refid="classid_physics___player" kindref="compound">idPhysics_Player</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a24139aa53bed6b2b7f5fce0b929d3aea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idPhysics_Player::idPhysics_Player</definition>
        <argsstring>(void)</argsstring>
        <name>idPhysics_Player</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1ae1652e06be42f2586348c5422f6e7087" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::Save</definition>
        <argsstring>(idSaveGame *savefile) const </argsstring>
        <name>Save</name>
        <param>
          <type><ref refid="classid_save_game" kindref="compound">idSaveGame</ref> *</type>
          <declname>savefile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a195168f333ce0caa0b2f3aff76a5aeb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::Restore</definition>
        <argsstring>(idRestoreGame *savefile)</argsstring>
        <name>Restore</name>
        <param>
          <type><ref refid="classid_restore_game" kindref="compound">idRestoreGame</ref> *</type>
          <declname>savefile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a51336d4ab8e15339de1f6030bb8a7635" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SetSpeed</definition>
        <argsstring>(const float newWalkSpeed, const float newCrouchSpeed)</argsstring>
        <name>SetSpeed</name>
        <param>
          <type>const float</type>
          <declname>newWalkSpeed</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>newCrouchSpeed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a3457a20686aecb4eb7c3bbbe9e16856e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SetMaxStepHeight</definition>
        <argsstring>(const float newMaxStepHeight)</argsstring>
        <name>SetMaxStepHeight</name>
        <param>
          <type>const float</type>
          <declname>newMaxStepHeight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1ae4ea16824fee22eba4a627f66a7fb87b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float idPhysics_Player::GetMaxStepHeight</definition>
        <argsstring>(void) const </argsstring>
        <name>GetMaxStepHeight</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a87a727b48811305235d4359374040c86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SetMaxJumpHeight</definition>
        <argsstring>(const float newMaxJumpHeight)</argsstring>
        <name>SetMaxJumpHeight</name>
        <param>
          <type>const float</type>
          <declname>newMaxJumpHeight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1abf47e46989bf0b5c5eb469fe467dca6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SetMovementType</definition>
        <argsstring>(const pmtype_t type)</argsstring>
        <name>SetMovementType</name>
        <param>
          <type>const pmtype_t</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1afc15e8f22752d960bf26d1156d6ae65a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SetPlayerInput</definition>
        <argsstring>(const usercmd_t &amp;cmd, const idAngles &amp;newViewAngles)</argsstring>
        <name>SetPlayerInput</name>
        <param>
          <type>const <ref refid="classusercmd__t" kindref="compound">usercmd_t</ref> &amp;</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>const <ref refid="classid_angles" kindref="compound">idAngles</ref> &amp;</type>
          <declname>newViewAngles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1aa1123ceef37c5f743edc08e7d7bc780e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SetKnockBack</definition>
        <argsstring>(const int knockBackTime)</argsstring>
        <name>SetKnockBack</name>
        <param>
          <type>const int</type>
          <declname>knockBackTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a36646496d9b620c2846fd92b068058ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SetDebugLevel</definition>
        <argsstring>(bool set)</argsstring>
        <name>SetDebugLevel</name>
        <param>
          <type>bool</type>
          <declname>set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a3ef3bda85e58ec93bc560d483535a8c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>waterLevel_t</type>
        <definition>waterLevel_t idPhysics_Player::GetWaterLevel</definition>
        <argsstring>(void) const </argsstring>
        <name>GetWaterLevel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a30ab67d4c08fef4088785546daa8937f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idPhysics_Player::GetWaterType</definition>
        <argsstring>(void) const </argsstring>
        <name>GetWaterType</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a3fec998614cab94715acb837924d14c6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idPhysics_Player::HasJumped</definition>
        <argsstring>(void) const </argsstring>
        <name>HasJumped</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1ac1b3d058c0dc5c8cf611df1c8102dcd2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idPhysics_Player::HasSteppedUp</definition>
        <argsstring>(void) const </argsstring>
        <name>HasSteppedUp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a4944b6f5fd1a8114ae530e3305916d80" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float idPhysics_Player::GetStepUp</definition>
        <argsstring>(void) const </argsstring>
        <name>GetStepUp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1ad28dba2e5379c100d2ca4f2861591519" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idPhysics_Player::IsCrouching</definition>
        <argsstring>(void) const </argsstring>
        <name>IsCrouching</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1ab05d6cdf94e32278aaeb90c3592d4f3b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idPhysics_Player::OnLadder</definition>
        <argsstring>(void) const </argsstring>
        <name>OnLadder</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1acf8458169b1d54b86635136260b614f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3&amp; idPhysics_Player::PlayerGetOrigin</definition>
        <argsstring>(void) const </argsstring>
        <name>PlayerGetOrigin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a31065cae4bf946c93abf406df8006578" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool idPhysics_Player::Evaluate</definition>
        <argsstring>(int timeStepMSec, int endTimeMSec)</argsstring>
        <name>Evaluate</name>
        <reimplements refid="classid_physics___base_1a68e8bb83889f347f77b5b7c0af1df3a0">Evaluate</reimplements>
        <param>
          <type>int</type>
          <declname>timeStepMSec</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endTimeMSec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1aa8dab26ec1896a70282934022c0ec209" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Player::UpdateTime</definition>
        <argsstring>(int endTimeMSec)</argsstring>
        <name>UpdateTime</name>
        <reimplements refid="classid_physics___base_1a57bc63cb5983f055072ff1e3da5c83a2">UpdateTime</reimplements>
        <param>
          <type>int</type>
          <declname>endTimeMSec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a28b24876a64dd2e2ded9212d45d249a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idPhysics_Player::GetTime</definition>
        <argsstring>(void) const </argsstring>
        <name>GetTime</name>
        <reimplements refid="classid_physics___base_1a5df6d476848ba03d22104cd27ac9acd0">GetTime</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a13f37135eecbe060e12226c8033b7b03" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Player::GetImpactInfo</definition>
        <argsstring>(const int id, const idVec3 &amp;point, impactInfo_t *info) const </argsstring>
        <name>GetImpactInfo</name>
        <reimplements refid="classid_physics___base_1a2d7c23a0cfba3a82b535f5a88e1c2241">GetImpactInfo</reimplements>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type><ref refid="structimpact_info__s" kindref="compound">impactInfo_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1aa629680dc2ed53f3f0957eb7d0ef2eb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Player::ApplyImpulse</definition>
        <argsstring>(const int id, const idVec3 &amp;point, const idVec3 &amp;impulse)</argsstring>
        <name>ApplyImpulse</name>
        <reimplements refid="classid_physics___base_1a4ab48ead610a476aa0d5485c573c17b4">ApplyImpulse</reimplements>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>impulse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a6c7804b9e07456c44e3c693821c4766f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool idPhysics_Player::IsAtRest</definition>
        <argsstring>(void) const </argsstring>
        <name>IsAtRest</name>
        <reimplements refid="classid_physics___base_1adf5fdb18bf2f51f4e9a62c0c3962496c">IsAtRest</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a60f7ddddc5a1c71616eb610ff15bbce0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idPhysics_Player::GetRestStartTime</definition>
        <argsstring>(void) const </argsstring>
        <name>GetRestStartTime</name>
        <reimplements refid="classid_physics___base_1a573317c8b6147e7c5adba7022b01e3e4">GetRestStartTime</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a4f24cf0125e574ef1c88fc3723849b4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SaveState</definition>
        <argsstring>(void)</argsstring>
        <name>SaveState</name>
        <reimplements refid="classid_physics___base_1abfef1ec167da6780db337a59f6df318b">SaveState</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1ad4c5ca6d19919581fd49ac61e956d985" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Player::RestoreState</definition>
        <argsstring>(void)</argsstring>
        <name>RestoreState</name>
        <reimplements refid="classid_physics___base_1a2506a696d776e0f4ab7aeb5706a5df93">RestoreState</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a3d0011165fcf451ad97ce37dcba68d0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SetOrigin</definition>
        <argsstring>(const idVec3 &amp;newOrigin, int id=-1)</argsstring>
        <name>SetOrigin</name>
        <reimplements refid="classid_physics___base_1a70d7961cab60fc62ef0ff32af732d51b">SetOrigin</reimplements>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>newOrigin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1af96f846c83fe039d57b637525fd9d5ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SetAxis</definition>
        <argsstring>(const idMat3 &amp;newAxis, int id=-1)</argsstring>
        <name>SetAxis</name>
        <reimplements refid="classid_physics___base_1a4dad199e469655584a79547d3c959ae9">SetAxis</reimplements>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>newAxis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1aa69656047a0c9faa88273fb641c11c31" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Player::Translate</definition>
        <argsstring>(const idVec3 &amp;translation, int id=-1)</argsstring>
        <name>Translate</name>
        <reimplements refid="classid_physics___base_1a9bb7ce564e1f8ad77f0003c24c86e54b">Translate</reimplements>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>translation</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1adf16c016d875b078b8f6ac93416ddafc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Player::Rotate</definition>
        <argsstring>(const idRotation &amp;rotation, int id=-1)</argsstring>
        <name>Rotate</name>
        <reimplements refid="classid_physics___base_1a277197f47e1ef55dd0ddd0e4ed40e93c">Rotate</reimplements>
        <param>
          <type>const <ref refid="classid_rotation" kindref="compound">idRotation</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1abc2116d78322d6f96a0ac170967c5f6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SetLinearVelocity</definition>
        <argsstring>(const idVec3 &amp;newLinearVelocity, int id=0)</argsstring>
        <name>SetLinearVelocity</name>
        <reimplements refid="classid_physics___base_1a064d14b46eacbd8c578461248c6447bd">SetLinearVelocity</reimplements>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>newLinearVelocity</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a25c40731152126019feafcda890178fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3&amp; idPhysics_Player::GetLinearVelocity</definition>
        <argsstring>(int id=0) const </argsstring>
        <name>GetLinearVelocity</name>
        <reimplements refid="classid_physics___base_1a1bb04a7510edfedbe96faaba2ac389c2">GetLinearVelocity</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a64e8f059d255a331183810fa154bec59" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SetPushed</definition>
        <argsstring>(int deltaTime)</argsstring>
        <name>SetPushed</name>
        <reimplements refid="classid_physics___base_1acfa76e02788bac5bcde53162d68c5db9">SetPushed</reimplements>
        <param>
          <type>int</type>
          <declname>deltaTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a410cbebf2a9b35a205abd50c1526155a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3&amp; idPhysics_Player::GetPushedLinearVelocity</definition>
        <argsstring>(const int id=0) const </argsstring>
        <name>GetPushedLinearVelocity</name>
        <reimplements refid="classid_physics___base_1af384cca825ba76992c4f461b91a1f444">GetPushedLinearVelocity</reimplements>
        <param>
          <type>const int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1ae3d7e2c64db305a26210b59b75b321e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::ClearPushedVelocity</definition>
        <argsstring>(void)</argsstring>
        <name>ClearPushedVelocity</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1af33bfa80db7da92dbbaee88f7216bcf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SetMaster</definition>
        <argsstring>(idEntity *master, const bool orientated=true)</argsstring>
        <name>SetMaster</name>
        <reimplements refid="classid_physics___base_1a1a70caaf421d2a73aa3a03ffca5d11fb">SetMaster</reimplements>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>master</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>orientated</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a44d6adfc3d8b13e63fab6623aec28462" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Player::WriteToSnapshot</definition>
        <argsstring>(idBitMsgDelta &amp;msg) const </argsstring>
        <name>WriteToSnapshot</name>
        <reimplements refid="classid_physics___base_1a62ca703f7ad9004e69e09ca99582756d">WriteToSnapshot</reimplements>
        <param>
          <type><ref refid="classid_bit_msg_delta" kindref="compound">idBitMsgDelta</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1ac4ee9e2272e69992ff5513b7566483ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_Player::ReadFromSnapshot</definition>
        <argsstring>(const idBitMsgDelta &amp;msg)</argsstring>
        <name>ReadFromSnapshot</name>
        <reimplements refid="classid_physics___base_1a54bee9929d92f797ca95c205c6720ca5">ReadFromSnapshot</reimplements>
        <param>
          <type>const <ref refid="classid_bit_msg_delta" kindref="compound">idBitMsgDelta</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="131" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classid_physics___player_1a88472aa852111477395906c95d790580" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float idPhysics_Player::CmdScale</definition>
        <argsstring>(const usercmd_t &amp;cmd) const </argsstring>
        <name>CmdScale</name>
        <param>
          <type>const <ref refid="classusercmd__t" kindref="compound">usercmd_t</ref> &amp;</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="171" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="79" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a37319f84505d0201d4a587e6d5908cc7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::Accelerate</definition>
        <argsstring>(const idVec3 &amp;wishdir, const float wishspeed, const float accel)</argsstring>
        <name>Accelerate</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>wishdir</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>wishspeed</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>accel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="172" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="123" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a0081f324fe7e426deb8930e160b9c5b4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idPhysics_Player::SlideMove</definition>
        <argsstring>(bool gravity, bool stepUp, bool stepDown, bool push)</argsstring>
        <name>SlideMove</name>
        <param>
          <type>bool</type>
          <declname>gravity</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>stepUp</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>stepDown</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>push</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="173" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="168" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1aebffb0f70db32a48c6f2b1f5ee54f4fb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::Friction</definition>
        <argsstring>(void)</argsstring>
        <name>Friction</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="174" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="440" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1ac5f2b7dd1aa3f564250f41afc3c18357" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::WaterJumpMove</definition>
        <argsstring>(void)</argsstring>
        <name>WaterJumpMove</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="175" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="504" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a50cd1bb48111b1e812ffe90c43fad85b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::WaterMove</definition>
        <argsstring>(void)</argsstring>
        <name>WaterMove</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="176" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="524" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a5c7eedefdef58e2770d3adfc0ab39135" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::FlyMove</definition>
        <argsstring>(void)</argsstring>
        <name>FlyMove</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="177" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="575" bodyend="599"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a1daeee2796866a54652af37181b958ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::AirMove</definition>
        <argsstring>(void)</argsstring>
        <name>AirMove</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="178" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="606" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a116198f138f1ebfc3bb016d079a517d6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::WalkMove</definition>
        <argsstring>(void)</argsstring>
        <name>WalkMove</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="179" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="646" bodyend="743"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a03a1919195490a8265d517675c53a5ff" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::DeadMove</definition>
        <argsstring>(void)</argsstring>
        <name>DeadMove</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="180" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="750" bodyend="767"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a720555238ac7d7f802f0323ab353b2a2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::NoclipMove</definition>
        <argsstring>(void)</argsstring>
        <name>NoclipMove</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="181" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="774" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a27f2a00ab3b03aadb79d8561221e3508" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SpectatorMove</definition>
        <argsstring>(void)</argsstring>
        <name>SpectatorMove</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="182" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="820" bodyend="847"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a112ce6c58308bd97d5d1453064aa9174" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::LadderMove</definition>
        <argsstring>(void)</argsstring>
        <name>LadderMove</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="183" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="854" bodyend="926"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1acd6cbd9ca4bb77ac8d25321f53d2bfdf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::CorrectAllSolid</definition>
        <argsstring>(trace_t &amp;trace, int contents)</argsstring>
        <name>CorrectAllSolid</name>
        <param>
          <type><ref refid="structtrace__s" kindref="compound">trace_t</ref> &amp;</type>
          <declname>trace</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="184" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="933" bodyend="954"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a98f55d7f6f13f7cc75f8741361f68feb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::CheckGround</definition>
        <argsstring>(void)</argsstring>
        <name>CheckGround</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="185" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="961" bodyend="1063"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1af260c09aef1f97906fc8fdf324d87792" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::CheckDuck</definition>
        <argsstring>(void)</argsstring>
        <name>CheckDuck</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="186" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1072" bodyend="1115"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a8db9b30413fc03c994e7c59aaf788273" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::CheckLadder</definition>
        <argsstring>(void)</argsstring>
        <name>CheckLadder</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="187" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1122" bodyend="1174"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a9fe166f3e68d59ce4c40b7d34c8bd019" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idPhysics_Player::CheckJump</definition>
        <argsstring>(void)</argsstring>
        <name>CheckJump</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="188" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1181" bodyend="1208"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1ad1c6f0999fda8b3135ef5a7994788a3e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idPhysics_Player::CheckWaterJump</definition>
        <argsstring>(void)</argsstring>
        <name>CheckWaterJump</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="189" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1215" bodyend="1251"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1ab1255ac3d3c789777882ae877ab1e732" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SetWaterLevel</definition>
        <argsstring>(void)</argsstring>
        <name>SetWaterLevel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="190" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1258" bodyend="1294"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1ab334d272231f3a1e436ff5531e4b7f34" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::DropTimers</definition>
        <argsstring>(void)</argsstring>
        <name>DropTimers</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="191" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1301" bodyend="1312"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a129e47576c760468e745692d075ae9fe" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::MovePlayer</definition>
        <argsstring>(int msec)</argsstring>
        <name>MovePlayer</name>
        <param>
          <type>int</type>
          <declname>msec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="192" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.cpp" bodystart="1319" bodyend="1428"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a88472aa852111477395906c95d790580" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float idPhysics_Player::CmdScale</definition>
        <argsstring>(const usercmd_t &amp;cmd) const </argsstring>
        <name>CmdScale</name>
        <param>
          <type>const <ref refid="classusercmd__t" kindref="compound">usercmd_t</ref> &amp;</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="171" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a37319f84505d0201d4a587e6d5908cc7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::Accelerate</definition>
        <argsstring>(const idVec3 &amp;wishdir, const float wishspeed, const float accel)</argsstring>
        <name>Accelerate</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>wishdir</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>wishspeed</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>accel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a0081f324fe7e426deb8930e160b9c5b4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idPhysics_Player::SlideMove</definition>
        <argsstring>(bool gravity, bool stepUp, bool stepDown, bool push)</argsstring>
        <name>SlideMove</name>
        <param>
          <type>bool</type>
          <declname>gravity</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>stepUp</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>stepDown</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>push</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1aebffb0f70db32a48c6f2b1f5ee54f4fb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::Friction</definition>
        <argsstring>(void)</argsstring>
        <name>Friction</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="174" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1ac5f2b7dd1aa3f564250f41afc3c18357" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::WaterJumpMove</definition>
        <argsstring>(void)</argsstring>
        <name>WaterJumpMove</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a50cd1bb48111b1e812ffe90c43fad85b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::WaterMove</definition>
        <argsstring>(void)</argsstring>
        <name>WaterMove</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a5c7eedefdef58e2770d3adfc0ab39135" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::FlyMove</definition>
        <argsstring>(void)</argsstring>
        <name>FlyMove</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="177" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a1daeee2796866a54652af37181b958ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::AirMove</definition>
        <argsstring>(void)</argsstring>
        <name>AirMove</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="178" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a116198f138f1ebfc3bb016d079a517d6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::WalkMove</definition>
        <argsstring>(void)</argsstring>
        <name>WalkMove</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="179" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a03a1919195490a8265d517675c53a5ff" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::DeadMove</definition>
        <argsstring>(void)</argsstring>
        <name>DeadMove</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a720555238ac7d7f802f0323ab353b2a2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::NoclipMove</definition>
        <argsstring>(void)</argsstring>
        <name>NoclipMove</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="181" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a27f2a00ab3b03aadb79d8561221e3508" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SpectatorMove</definition>
        <argsstring>(void)</argsstring>
        <name>SpectatorMove</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="182" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a112ce6c58308bd97d5d1453064aa9174" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::LadderMove</definition>
        <argsstring>(void)</argsstring>
        <name>LadderMove</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="183" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1acd6cbd9ca4bb77ac8d25321f53d2bfdf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::CorrectAllSolid</definition>
        <argsstring>(trace_t &amp;trace, int contents)</argsstring>
        <name>CorrectAllSolid</name>
        <param>
          <type><ref refid="structtrace__s" kindref="compound">trace_t</ref> &amp;</type>
          <declname>trace</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="184" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a98f55d7f6f13f7cc75f8741361f68feb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::CheckGround</definition>
        <argsstring>(void)</argsstring>
        <name>CheckGround</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="185" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1af260c09aef1f97906fc8fdf324d87792" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::CheckDuck</definition>
        <argsstring>(void)</argsstring>
        <name>CheckDuck</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="186" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a8db9b30413fc03c994e7c59aaf788273" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::CheckLadder</definition>
        <argsstring>(void)</argsstring>
        <name>CheckLadder</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a9fe166f3e68d59ce4c40b7d34c8bd019" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idPhysics_Player::CheckJump</definition>
        <argsstring>(void)</argsstring>
        <name>CheckJump</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="188" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1ad1c6f0999fda8b3135ef5a7994788a3e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idPhysics_Player::CheckWaterJump</definition>
        <argsstring>(void)</argsstring>
        <name>CheckWaterJump</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="189" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1ab1255ac3d3c789777882ae877ab1e732" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::SetWaterLevel</definition>
        <argsstring>(void)</argsstring>
        <name>SetWaterLevel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1ab334d272231f3a1e436ff5531e4b7f34" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::DropTimers</definition>
        <argsstring>(void)</argsstring>
        <name>DropTimers</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___player_1a129e47576c760468e745692d075ae9fe" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_Player::MovePlayer</definition>
        <argsstring>(int msec)</argsstring>
        <name>MovePlayer</name>
        <param>
          <type>int</type>
          <declname>msec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_Player.h" line="192" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="26192">
        <label>idClass</label>
        <link refid="classid_class"/>
      </node>
      <node id="26189">
        <label>idPhysics_Actor</label>
        <link refid="classid_physics___actor"/>
        <childnode refid="26190" relation="public-inheritance">
        </childnode>
        <childnode refid="26190" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26190">
        <label>idPhysics_Base</label>
        <link refid="classid_physics___base"/>
        <childnode refid="26191" relation="public-inheritance">
        </childnode>
        <childnode refid="26191" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26188">
        <label>idPhysics_Player</label>
        <link refid="classid_physics___player"/>
        <childnode refid="26189" relation="public-inheritance">
        </childnode>
        <childnode refid="26189" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26191">
        <label>idPhysics</label>
        <link refid="classid_physics"/>
        <childnode refid="26192" relation="public-inheritance">
        </childnode>
        <childnode refid="26192" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="26223">
        <label>idSoundShader</label>
        <link refid="classid_sound_shader"/>
        <childnode refid="26209" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26227">
        <label>idEntityPtr&lt; idEntity &gt;</label>
        <link refid="classid_entity_ptr"/>
      </node>
      <node id="26221">
        <label>refSound_t</label>
        <link refid="structref_sound__t"/>
        <childnode refid="26222" relation="usage">
          <edgelabel>parms</edgelabel>
        </childnode>
        <childnode refid="26223" relation="usage">
          <edgelabel>shader</edgelabel>
        </childnode>
        <childnode refid="26216" relation="usage">
          <edgelabel>referenceSound</edgelabel>
        </childnode>
        <childnode refid="26207" relation="usage">
          <edgelabel>origin</edgelabel>
        </childnode>
      </node>
      <node id="26204">
        <label>idEntity::entityFlags_s</label>
        <link refid="structid_entity_1_1entity_flags__s"/>
      </node>
      <node id="26197">
        <label>idClass</label>
        <link refid="classid_class"/>
        <childnode refid="26198" relation="usage">
          <edgelabel>Type</edgelabel>
        </childnode>
        <childnode refid="26200" relation="usage">
          <edgelabel>eventCallbacks</edgelabel>
        </childnode>
      </node>
      <node id="26205">
        <label>renderView_s</label>
        <link refid="structrender_view__s"/>
        <childnode refid="26206" relation="usage">
          <edgelabel>viewaxis</edgelabel>
        </childnode>
        <childnode refid="26207" relation="usage">
          <edgelabel>vieworg</edgelabel>
        </childnode>
        <childnode refid="26208" relation="usage">
          <edgelabel>globalMaterial</edgelabel>
        </childnode>
      </node>
      <node id="26200">
        <label>idEventFunc&lt; idClass &gt;</label>
        <link refid="structid_event_func"/>
        <childnode refid="26201" relation="usage">
          <edgelabel>event</edgelabel>
        </childnode>
      </node>
      <node id="26202">
        <label>idEntity</label>
        <link refid="classid_entity"/>
        <childnode refid="26197" relation="public-inheritance">
        </childnode>
        <childnode refid="26197" relation="public-inheritance">
        </childnode>
        <childnode refid="26202" relation="usage">
          <edgelabel>cameraTarget</edgelabel>
        </childnode>
        <childnode refid="26203" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="26204" relation="usage">
          <edgelabel>fl</edgelabel>
        </childnode>
        <childnode refid="26205" relation="usage">
          <edgelabel>renderView</edgelabel>
        </childnode>
        <childnode refid="26211" relation="usage">
          <edgelabel>targets</edgelabel>
        </childnode>
        <childnode refid="26212" relation="usage">
          <edgelabel>spawnNode</edgelabel>
          <edgelabel>snapshotNode</edgelabel>
          <edgelabel>activeNode</edgelabel>
        </childnode>
        <childnode refid="26213" relation="usage">
          <edgelabel>renderEntity</edgelabel>
        </childnode>
        <childnode refid="26220" relation="usage">
          <edgelabel>spawnArgs</edgelabel>
        </childnode>
        <childnode refid="26221" relation="usage">
          <edgelabel>refSound</edgelabel>
        </childnode>
        <childnode refid="26224" relation="usage">
          <edgelabel>scriptObject</edgelabel>
        </childnode>
      </node>
      <node id="26222">
        <label>soundShaderParms_t</label>
        <link refid="structsound_shader_parms__t"/>
      </node>
      <node id="26216">
        <label>idSoundEmitter</label>
        <link refid="classid_sound_emitter"/>
      </node>
      <node id="26208">
        <label>idMaterial</label>
        <link refid="classid_material"/>
        <childnode refid="26209" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26201">
        <label>idEventDef</label>
        <link refid="classid_event_def"/>
      </node>
      <node id="26215">
        <label>idJointMat</label>
        <link refid="classid_joint_mat"/>
      </node>
      <node id="26211">
        <label>idList&lt; idEntityPtr&lt; idEntity &gt; &gt;</label>
        <link refid="classid_list"/>
      </node>
      <node id="26194">
        <label>idPhysics_Actor</label>
        <link refid="classid_physics___actor"/>
        <childnode refid="26195" relation="public-inheritance">
        </childnode>
        <childnode refid="26195" relation="public-inheritance">
        </childnode>
        <childnode refid="26202" relation="usage">
          <edgelabel>masterEntity</edgelabel>
        </childnode>
        <childnode refid="26206" relation="usage">
          <edgelabel>clipModelAxis</edgelabel>
        </childnode>
        <childnode refid="26226" relation="usage">
          <edgelabel>clipModel</edgelabel>
        </childnode>
        <childnode refid="26227" relation="usage">
          <edgelabel>groundEntityPtr</edgelabel>
        </childnode>
      </node>
      <node id="26213">
        <label>renderEntity_s</label>
        <link refid="structrender_entity__s"/>
        <childnode refid="26206" relation="usage">
          <edgelabel>axis</edgelabel>
        </childnode>
        <childnode refid="26214" relation="usage">
          <edgelabel>customSkin</edgelabel>
        </childnode>
        <childnode refid="26215" relation="usage">
          <edgelabel>joints</edgelabel>
        </childnode>
        <childnode refid="26205" relation="usage">
          <edgelabel>remoteRenderView</edgelabel>
        </childnode>
        <childnode refid="26216" relation="usage">
          <edgelabel>referenceSound</edgelabel>
        </childnode>
        <childnode refid="26217" relation="usage">
          <edgelabel>hModel</edgelabel>
        </childnode>
        <childnode refid="26218" relation="usage">
          <edgelabel>bounds</edgelabel>
        </childnode>
        <childnode refid="26207" relation="usage">
          <edgelabel>origin</edgelabel>
        </childnode>
        <childnode refid="26213" relation="usage">
          <edgelabel>callback</edgelabel>
        </childnode>
        <childnode refid="26208" relation="usage">
          <edgelabel>customShader</edgelabel>
          <edgelabel>referenceShader</edgelabel>
        </childnode>
        <childnode refid="26219" relation="usage">
          <edgelabel>gui</edgelabel>
        </childnode>
      </node>
      <node id="26225">
        <label>idList&lt; contactInfo_t &gt;</label>
        <link refid="classid_list"/>
      </node>
      <node id="26195">
        <label>idPhysics_Base</label>
        <link refid="classid_physics___base"/>
        <childnode refid="26196" relation="public-inheritance">
        </childnode>
        <childnode refid="26196" relation="public-inheritance">
        </childnode>
        <childnode refid="26202" relation="usage">
          <edgelabel>self</edgelabel>
        </childnode>
        <childnode refid="26211" relation="usage">
          <edgelabel>contactEntities</edgelabel>
        </childnode>
        <childnode refid="26225" relation="usage">
          <edgelabel>contacts</edgelabel>
        </childnode>
        <childnode refid="26207" relation="usage">
          <edgelabel>gravityNormal</edgelabel>
          <edgelabel>gravityVector</edgelabel>
        </childnode>
      </node>
      <node id="26224">
        <label>idScriptObject</label>
        <link refid="classid_script_object"/>
      </node>
      <node id="26218">
        <label>idBounds</label>
        <link refid="classid_bounds"/>
      </node>
      <node id="26206">
        <label>idMat3</label>
        <link refid="classid_mat3"/>
      </node>
      <node id="26219">
        <label>idUserInterface</label>
        <link refid="classid_user_interface"/>
      </node>
      <node id="26210">
        <label>idDeclBase</label>
        <link refid="classid_decl_base"/>
      </node>
      <node id="26193">
        <label>idPhysics_Player</label>
        <link refid="classid_physics___player"/>
        <childnode refid="26194" relation="public-inheritance">
        </childnode>
        <childnode refid="26194" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26199">
        <label>idHierarchy&lt; idTypeInfo &gt;</label>
        <link refid="classid_hierarchy"/>
      </node>
      <node id="26203">
        <label>idStr</label>
        <link refid="classid_str"/>
      </node>
      <node id="26217">
        <label>idRenderModel</label>
        <link refid="classid_render_model"/>
      </node>
      <node id="26209">
        <label>idDecl</label>
        <link refid="classid_decl"/>
        <childnode refid="26210" relation="usage">
          <edgelabel>base</edgelabel>
        </childnode>
      </node>
      <node id="26207">
        <label>idVec3</label>
        <link refid="classid_vec3"/>
      </node>
      <node id="26196">
        <label>idPhysics</label>
        <link refid="classid_physics"/>
        <childnode refid="26197" relation="public-inheritance">
        </childnode>
        <childnode refid="26197" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26212">
        <label>idLinkList&lt; idEntity &gt;</label>
        <link refid="classid_link_list"/>
      </node>
      <node id="26220">
        <label>idDict</label>
        <link refid="classid_dict"/>
      </node>
      <node id="26214">
        <label>idDeclSkin</label>
        <link refid="classid_decl_skin"/>
        <childnode refid="26209" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26226">
        <label>idClipModel</label>
        <link refid="classid_clip_model"/>
      </node>
      <node id="26198">
        <label>idTypeInfo</label>
        <link refid="classid_type_info"/>
        <childnode refid="26198" relation="usage">
          <edgelabel>next</edgelabel>
          <edgelabel>super</edgelabel>
        </childnode>
        <childnode refid="26199" relation="usage">
          <edgelabel>node</edgelabel>
        </childnode>
        <childnode refid="26200" relation="usage">
          <edgelabel>eventCallbacks</edgelabel>
        </childnode>
        <childnode refid="26197" relation="usage">
          <edgelabel>CreateInstance</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" line="72" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_Player.h" bodystart="72" bodyend="193"/>
    <listofallmembers>
      <member refid="classid_physics_1a2904b8d7d7b3f2973802d4b3397816f8" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>ABSTRACT_PROTOTYPE</name></member>
      <member refid="classid_physics_1a2904b8d7d7b3f2973802d4b3397816f8" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>ABSTRACT_PROTOTYPE</name></member>
      <member refid="classid_physics___player_1a37319f84505d0201d4a587e6d5908cc7" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>Accelerate</name></member>
      <member refid="classid_physics___player_1a37319f84505d0201d4a587e6d5908cc7" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>Accelerate</name></member>
      <member refid="classid_physics___base_1a0631910fa43a8b62994e4718c2e6ddc5" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>Activate</name></member>
      <member refid="classid_physics___base_1a0631910fa43a8b62994e4718c2e6ddc5" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>Activate</name></member>
      <member refid="classid_physics___base_1aa9bb8305faea4dd9034372e429811678" prot="protected" virt="non-virtual"><scope>idPhysics_Player</scope><name>ActivateContactEntities</name></member>
      <member refid="classid_physics___base_1aa9bb8305faea4dd9034372e429811678" prot="protected" virt="non-virtual"><scope>idPhysics_Player</scope><name>ActivateContactEntities</name></member>
      <member refid="classid_physics___base_1a9f123a67dca0979f266cdb5ca9753bf7" prot="protected" virt="non-virtual"><scope>idPhysics_Player</scope><name>AddContactEntitiesForContacts</name></member>
      <member refid="classid_physics___base_1a9f123a67dca0979f266cdb5ca9753bf7" prot="protected" virt="non-virtual"><scope>idPhysics_Player</scope><name>AddContactEntitiesForContacts</name></member>
      <member refid="classid_physics___base_1a0b822895dea8a3eadad02f0152b02a11" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>AddContactEntity</name></member>
      <member refid="classid_physics___base_1a0b822895dea8a3eadad02f0152b02a11" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>AddContactEntity</name></member>
      <member refid="classid_physics___base_1ad8f420453bd2ebe473c26cda63c574e4" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>AddForce</name></member>
      <member refid="classid_physics___base_1ad8f420453bd2ebe473c26cda63c574e4" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>AddForce</name></member>
      <member refid="classid_physics___base_1a1ce4ffdea33f423c9e7c18e7e5577c9d" prot="protected" virt="non-virtual"><scope>idPhysics_Player</scope><name>AddGroundContacts</name></member>
      <member refid="classid_physics___base_1a1ce4ffdea33f423c9e7c18e7e5577c9d" prot="protected" virt="non-virtual"><scope>idPhysics_Player</scope><name>AddGroundContacts</name></member>
      <member refid="classid_physics___player_1a1daeee2796866a54652af37181b958ec" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>AirMove</name></member>
      <member refid="classid_physics___player_1a1daeee2796866a54652af37181b958ec" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>AirMove</name></member>
      <member refid="classid_physics___player_1aa629680dc2ed53f3f0957eb7d0ef2eb2" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>ApplyImpulse</name></member>
      <member refid="classid_physics___player_1aa629680dc2ed53f3f0957eb7d0ef2eb2" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>ApplyImpulse</name></member>
      <member refid="classid_class_1a39284ab290b3303f923cb647fefb0443" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>CallSpawn</name></member>
      <member refid="classid_class_1a39284ab290b3303f923cb647fefb0443" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>CallSpawn</name></member>
      <member refid="classid_class_1a7cf590c676b38adea6ff199b72c4e46f" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>CancelEvents</name></member>
      <member refid="classid_class_1a7cf590c676b38adea6ff199b72c4e46f" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>CancelEvents</name></member>
      <member refid="classid_physics___player_1af260c09aef1f97906fc8fdf324d87792" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>CheckDuck</name></member>
      <member refid="classid_physics___player_1af260c09aef1f97906fc8fdf324d87792" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>CheckDuck</name></member>
      <member refid="classid_physics___player_1a98f55d7f6f13f7cc75f8741361f68feb" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>CheckGround</name></member>
      <member refid="classid_physics___player_1a98f55d7f6f13f7cc75f8741361f68feb" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>CheckGround</name></member>
      <member refid="classid_physics___player_1a9fe166f3e68d59ce4c40b7d34c8bd019" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>CheckJump</name></member>
      <member refid="classid_physics___player_1a9fe166f3e68d59ce4c40b7d34c8bd019" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>CheckJump</name></member>
      <member refid="classid_physics___player_1a8db9b30413fc03c994e7c59aaf788273" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>CheckLadder</name></member>
      <member refid="classid_physics___player_1a8db9b30413fc03c994e7c59aaf788273" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>CheckLadder</name></member>
      <member refid="classid_physics___player_1ad1c6f0999fda8b3135ef5a7994788a3e" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>CheckWaterJump</name></member>
      <member refid="classid_physics___player_1ad1c6f0999fda8b3135ef5a7994788a3e" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>CheckWaterJump</name></member>
      <member refid="classid_physics___player_1ad123fdaed9368daab485390b440e8588" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>CLASS_PROTOTYPE</name></member>
      <member refid="classid_physics___player_1ad123fdaed9368daab485390b440e8588" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>CLASS_PROTOTYPE</name></member>
      <member refid="classid_physics___actor_1a9c4d6473679170c31474157058cc2867" prot="public" virt="non-virtual" ambiguityscope="idPhysics_Actor::"><scope>idPhysics_Player</scope><name>CLASS_PROTOTYPE</name></member>
      <member refid="classid_physics___base_1a5d7eef5817a612d03295e1fd530b74de" prot="public" virt="non-virtual" ambiguityscope="idPhysics_Base::"><scope>idPhysics_Player</scope><name>CLASS_PROTOTYPE</name></member>
      <member refid="classid_physics___base_1a16b0bd9758c6dea37b59934927dd6ea6" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>ClearContacts</name></member>
      <member refid="classid_physics___base_1a16b0bd9758c6dea37b59934927dd6ea6" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>ClearContacts</name></member>
      <member refid="classid_physics___player_1ae3d7e2c64db305a26210b59b75b321e9" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>ClearPushedVelocity</name></member>
      <member refid="classid_physics___player_1ae3d7e2c64db305a26210b59b75b321e9" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>ClearPushedVelocity</name></member>
      <member refid="classid_physics___actor_1a34f6dd4c57344bce00c81cf4cf99491c" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>ClipContents</name></member>
      <member refid="classid_physics___actor_1a34f6dd4c57344bce00c81cf4cf99491c" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>ClipContents</name></member>
      <member refid="classid_physics___base_1a3ebc7d969885db541110a0ba251006b0" prot="protected" virt="non-virtual"><scope>idPhysics_Player</scope><name>clipMask</name></member>
      <member refid="classid_physics___actor_1a0abfa03dbdab261233be4ffd391d9157" prot="protected" virt="non-virtual"><scope>idPhysics_Player</scope><name>clipModel</name></member>
      <member refid="classid_physics___actor_1a0f96008b3907a0749cf59c44d430b7cf" prot="protected" virt="non-virtual"><scope>idPhysics_Player</scope><name>clipModelAxis</name></member>
      <member refid="classid_physics___actor_1abfd5d65d6f43d16fa5386b3b245f990a" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>ClipRotation</name></member>
      <member refid="classid_physics___actor_1abfd5d65d6f43d16fa5386b3b245f990a" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>ClipRotation</name></member>
      <member refid="classid_physics___actor_1af32e95da7ac09e0b7b165aa275af0d08" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>ClipTranslation</name></member>
      <member refid="classid_physics___actor_1af32e95da7ac09e0b7b165aa275af0d08" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>ClipTranslation</name></member>
      <member refid="classid_physics___player_1a88472aa852111477395906c95d790580" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>CmdScale</name></member>
      <member refid="classid_physics___player_1a88472aa852111477395906c95d790580" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>CmdScale</name></member>
      <member refid="classid_physics___player_1a9faba315475995b6f758ceb5f2299693" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>command</name></member>
      <member refid="classid_physics___base_1a6073eb89e23712ed185b2aa271362601" prot="protected" virt="non-virtual"><scope>idPhysics_Player</scope><name>contactEntities</name></member>
      <member refid="classid_physics___base_1a4afb91d6f5a39eb38877a945d805b666" prot="protected" virt="non-virtual"><scope>idPhysics_Player</scope><name>contacts</name></member>
      <member refid="classid_physics___player_1acd6cbd9ca4bb77ac8d25321f53d2bfdf" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>CorrectAllSolid</name></member>
      <member refid="classid_physics___player_1acd6cbd9ca4bb77ac8d25321f53d2bfdf" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>CorrectAllSolid</name></member>
      <member refid="classid_class_1aef9a17d3847d8cc27174e618a9e63fec" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>CreateInstance</name></member>
      <member refid="classid_class_1af15da9143dfb04760e1ad309d0a739c8" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>CreateInstance</name></member>
      <member refid="classid_class_1a90a0350a49f5aec1b7944630e9635f60" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>CreateInstance</name></member>
      <member refid="classid_class_1af0beb6afc6c719fcc5d6d596c0b5dbce" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>CreateInstance</name></member>
      <member refid="classid_physics___player_1a8092d1d72ca68830bb4e4acbcf0eef45" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>crouchSpeed</name></member>
      <member refid="classid_physics___player_1a52a3647e29026b29732f0747a1088877" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>current</name></member>
      <member refid="classid_physics___player_1a03a1919195490a8265d517675c53a5ff" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>DeadMove</name></member>
      <member refid="classid_physics___player_1a03a1919195490a8265d517675c53a5ff" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>DeadMove</name></member>
      <member refid="classid_physics___player_1a2007455f38a236fb29c9de09623336ed" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>debugLevel</name></member>
      <member refid="classid_physics___actor_1a3a1a3b9a3055dd5833ebb57493b702a5" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>DisableClip</name></member>
      <member refid="classid_physics___actor_1a3a1a3b9a3055dd5833ebb57493b702a5" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>DisableClip</name></member>
      <member refid="classid_class_1a1e808d0b267750a5eb6def058921988e" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>DisplayInfo_f</name></member>
      <member refid="classid_class_1abcc05dad3a0a605c2f34454a2a200a6e" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>DisplayInfo_f</name></member>
      <member refid="classid_physics___base_1ab19db6412a9557916aa24c1cb542ce1a" prot="protected" virt="non-virtual"><scope>idPhysics_Player</scope><name>DrawVelocity</name></member>
      <member refid="classid_physics___base_1ab19db6412a9557916aa24c1cb542ce1a" prot="protected" virt="non-virtual"><scope>idPhysics_Player</scope><name>DrawVelocity</name></member>
      <member refid="classid_physics___player_1ab334d272231f3a1e436ff5531e4b7f34" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>DropTimers</name></member>
      <member refid="classid_physics___player_1ab334d272231f3a1e436ff5531e4b7f34" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>DropTimers</name></member>
      <member refid="classid_physics___actor_1a06d5ec36e7624ab2fe249ecb9c54217a" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>EnableClip</name></member>
      <member refid="classid_physics___actor_1a06d5ec36e7624ab2fe249ecb9c54217a" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>EnableClip</name></member>
      <member refid="classid_physics___player_1a31065cae4bf946c93abf406df8006578" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>Evaluate</name></member>
      <member refid="classid_physics___player_1a31065cae4bf946c93abf406df8006578" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>Evaluate</name></member>
      <member refid="classid_physics___actor_1afb2e3d3826a8b29d334137c74ed6b174" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>EvaluateContacts</name></member>
      <member refid="classid_physics___actor_1afb2e3d3826a8b29d334137c74ed6b174" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>EvaluateContacts</name></member>
      <member refid="classid_class_1a746516c6f1ce54dfb6d046ae8517863b" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>Event_Remove</name></member>
      <member refid="classid_class_1a746516c6f1ce54dfb6d046ae8517863b" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>Event_Remove</name></member>
      <member refid="classid_class_1a7873f9bca2ac9b04d44764e4daa70ad5" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>eventCallbacks</name></member>
      <member refid="classid_class_1acd5d3a153b040060c1d79a7bc441ecfa" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>FindUninitializedMemory</name></member>
      <member refid="classid_class_1acd5d3a153b040060c1d79a7bc441ecfa" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>FindUninitializedMemory</name></member>
      <member refid="classid_physics___player_1a5c7eedefdef58e2770d3adfc0ab39135" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>FlyMove</name></member>
      <member refid="classid_physics___player_1a5c7eedefdef58e2770d3adfc0ab39135" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>FlyMove</name></member>
      <member refid="classid_physics___player_1a9aeec9875049e7c1ca194ef28a4d6947" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>framemsec</name></member>
      <member refid="classid_physics___player_1a061b14cc47c260f1b5e01d938cfaccb8" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>frametime</name></member>
      <member refid="classid_physics___player_1aebffb0f70db32a48c6f2b1f5ee54f4fb" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>Friction</name></member>
      <member refid="classid_physics___player_1aebffb0f70db32a48c6f2b1f5ee54f4fb" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>Friction</name></member>
      <member refid="classid_physics___actor_1ab6149bbf867f5874167c4d0d669898a3" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetAbsBounds</name></member>
      <member refid="classid_physics___actor_1a79ca4e06766bd7bce744502a2bd359cc" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetAbsBounds</name></member>
      <member refid="classid_physics___base_1affb89ba003c6fde4f376b3ad86a2a648" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetAngularEndTime</name></member>
      <member refid="classid_physics___base_1affb89ba003c6fde4f376b3ad86a2a648" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetAngularEndTime</name></member>
      <member refid="classid_physics___base_1a415e2df939c32fccb5be0709cd5b2c67" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetAngularVelocity</name></member>
      <member refid="classid_physics___base_1aee9cc84064974c4a32af8a95a0dd3390" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetAngularVelocity</name></member>
      <member refid="classid_physics___actor_1a63f8bf3b19f0f7ac8fd41be3979a0a97" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetAxis</name></member>
      <member refid="classid_physics___actor_1a19f932f3b344eb3d7b785c590b0e8427" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetAxis</name></member>
      <member refid="classid_physics___base_1a756b9a94869efb6cfd2772848a826816" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetBlockingEntity</name></member>
      <member refid="classid_physics___base_1a9c47244f88e6899c1d23d773f0b14b6f" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetBlockingEntity</name></member>
      <member refid="classid_physics___base_1a206073bba90fdfabb70f51c634d9761a" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetBlockingInfo</name></member>
      <member refid="classid_physics___base_1a790dfb4c3d63af82de6bccec2aebb644" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetBlockingInfo</name></member>
      <member refid="classid_physics___actor_1a2c307a0fd12de7a3627819facf5b6aeb" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetBounds</name></member>
      <member refid="classid_physics___actor_1ab7d48d95a709c96758f24eb9708baee6" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetBounds</name></member>
      <member refid="classid_class_1a9ac01fd82cb27d90e065151dad7b3f57" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>GetClass</name></member>
      <member refid="classid_class_1a2fd37bdd12da7a6405bbe4fa985d8a90" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>GetClass</name></member>
      <member refid="classid_class_1aaf010933354d3ab55c938d09beaefb70" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>GetClassname</name></member>
      <member refid="classid_class_1a1b3ea8a396a4642e0d523b8e0cb9f090" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>GetClassname</name></member>
      <member refid="classid_physics___base_1abcb6ed9fc12a6a447e3b2974a5f5cfde" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetClipMask</name></member>
      <member refid="classid_physics___base_1abcb6ed9fc12a6a447e3b2974a5f5cfde" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetClipMask</name></member>
      <member refid="classid_physics___actor_1afb6e7e98165f4bf93c46fd4bfc0821fe" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetClipModel</name></member>
      <member refid="classid_physics___actor_1a6b3f4fb3d578cadebfa2c209a97bf5c2" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetClipModel</name></member>
      <member refid="classid_physics___base_1a965dc2249da49f64230118a862742515" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetContact</name></member>
      <member refid="classid_physics___base_1aa41a26a20ade34f59525914b849ef556" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetContact</name></member>
      <member refid="classid_physics___actor_1ab4341308a5e7f58464b87588a7a81e89" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetContents</name></member>
      <member refid="classid_physics___actor_1ab4341308a5e7f58464b87588a7a81e89" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetContents</name></member>
      <member refid="classid_physics___base_1ae8bc6192c60fa87fd6f57aadb757866a" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetGravity</name></member>
      <member refid="classid_physics___base_1a2679f65747e6c8078e17554cadf44dc1" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetGravity</name></member>
      <member refid="classid_physics___actor_1ace9bfb1cb2b3c34a837bc2f204b48adb" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>GetGravityAxis</name></member>
      <member refid="classid_physics___actor_1ac44cbb6b949c625f3784150b4b92b696" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>GetGravityAxis</name></member>
      <member refid="classid_physics___base_1aa0495c925db8011432767326b5bddd31" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetGravityNormal</name></member>
      <member refid="classid_physics___base_1abc7d16f57934012ea517046238e16fca" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetGravityNormal</name></member>
      <member refid="classid_physics___actor_1aa027a4328275046909ed26d636c0f3ed" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>GetGroundEntity</name></member>
      <member refid="classid_physics___actor_1a31beb395699e160d6cb2641f4b6868b2" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>GetGroundEntity</name></member>
      <member refid="classid_physics___player_1a13f37135eecbe060e12226c8033b7b03" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetImpactInfo</name></member>
      <member refid="classid_physics___player_1a13f37135eecbe060e12226c8033b7b03" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetImpactInfo</name></member>
      <member refid="classid_physics___base_1aa28440e55de3dfb916b6253fcf7982e3" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetLinearEndTime</name></member>
      <member refid="classid_physics___base_1aa28440e55de3dfb916b6253fcf7982e3" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetLinearEndTime</name></member>
      <member refid="classid_physics___player_1a6c383ce2043facbd27b070db583245d8" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetLinearVelocity</name></member>
      <member refid="classid_physics___player_1a25c40731152126019feafcda890178fd" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetLinearVelocity</name></member>
      <member refid="classid_physics___actor_1a175c1e6664ab52383ddcf17db63bc2ed" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetMass</name></member>
      <member refid="classid_physics___actor_1a175c1e6664ab52383ddcf17db63bc2ed" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetMass</name></member>
      <member refid="classid_physics___actor_1a9653617728b4ced3a6ddd5de5a243718" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>GetMasterDeltaYaw</name></member>
      <member refid="classid_physics___actor_1a9653617728b4ced3a6ddd5de5a243718" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>GetMasterDeltaYaw</name></member>
      <member refid="classid_physics___player_1ae4ea16824fee22eba4a627f66a7fb87b" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>GetMaxStepHeight</name></member>
      <member refid="classid_physics___player_1ae4ea16824fee22eba4a627f66a7fb87b" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>GetMaxStepHeight</name></member>
      <member refid="classid_physics___actor_1a73a53d45625ca7aa6a2b6960e710a7d1" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetNumClipModels</name></member>
      <member refid="classid_physics___actor_1a73a53d45625ca7aa6a2b6960e710a7d1" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetNumClipModels</name></member>
      <member refid="classid_physics___base_1a5e301c7b5acf30df1f6a3cb9d3599729" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetNumContacts</name></member>
      <member refid="classid_physics___base_1a5e301c7b5acf30df1f6a3cb9d3599729" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetNumContacts</name></member>
      <member refid="classid_class_1a0b1f5ff97e7101384e1ca978fbde9878" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>GetNumTypes</name></member>
      <member refid="classid_class_1a0b1f5ff97e7101384e1ca978fbde9878" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>GetNumTypes</name></member>
      <member refid="classid_physics___actor_1a80455411ac42707e50189fb32933f9cb" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetOrigin</name></member>
      <member refid="classid_physics___actor_1a93cce744a19209c683e47307d67ce445" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetOrigin</name></member>
      <member refid="classid_physics___base_1adffd5069de66956869e10d4557f0925d" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetPushedAngularVelocity</name></member>
      <member refid="classid_physics___base_1ad5506da708fed58a9b24fa02c328959b" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetPushedAngularVelocity</name></member>
      <member refid="classid_physics___player_1a5988d969a20ba4c12d57badaf9987079" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetPushedLinearVelocity</name></member>
      <member refid="classid_physics___player_1a410cbebf2a9b35a205abd50c1526155a" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetPushedLinearVelocity</name></member>
      <member refid="classid_physics___player_1a60f7ddddc5a1c71616eb610ff15bbce0" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetRestStartTime</name></member>
      <member refid="classid_physics___player_1a60f7ddddc5a1c71616eb610ff15bbce0" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetRestStartTime</name></member>
      <member refid="classid_physics___player_1a4944b6f5fd1a8114ae530e3305916d80" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>GetStepUp</name></member>
      <member refid="classid_physics___player_1a4944b6f5fd1a8114ae530e3305916d80" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>GetStepUp</name></member>
      <member refid="classid_class_1a272cbc9f1eeb09ec9f524b2d9948945a" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>GetSuperclass</name></member>
      <member refid="classid_class_1a250ad44de415ebe4c6ee6af859978e98" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>GetSuperclass</name></member>
      <member refid="classid_physics___player_1a28b24876a64dd2e2ded9212d45d249a5" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetTime</name></member>
      <member refid="classid_physics___player_1a28b24876a64dd2e2ded9212d45d249a5" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetTime</name></member>
      <member refid="classid_class_1ae1e4a1553a64224e101467819ceb5086" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetType</name></member>
      <member refid="classid_class_1a4581fc61c1e64c22928a4c4096c5a47b" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>GetType</name></member>
      <member refid="classid_class_1a68f8759cc5b307eee3dca1dc38402b2d" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>GetType</name></member>
      <member refid="classid_class_1a3662d6404c00a84bee44be1d4d0d3b42" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>GetType</name></member>
      <member refid="classid_class_1a6981e636da3bb171b209f773ff5c579f" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>GetTypeNumBits</name></member>
      <member refid="classid_class_1a6981e636da3bb171b209f773ff5c579f" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>GetTypeNumBits</name></member>
      <member refid="classid_physics___player_1a3ef3bda85e58ec93bc560d483535a8c4" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>GetWaterLevel</name></member>
      <member refid="classid_physics___player_1a3ef3bda85e58ec93bc560d483535a8c4" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>GetWaterLevel</name></member>
      <member refid="classid_physics___player_1a30ab67d4c08fef4088785546daa8937f" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>GetWaterType</name></member>
      <member refid="classid_physics___player_1a30ab67d4c08fef4088785546daa8937f" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>GetWaterType</name></member>
      <member refid="classid_physics___base_1a0cf3a7bb3df1f5fa29b7313fb50bfc3d" prot="protected" virt="non-virtual"><scope>idPhysics_Player</scope><name>gravityNormal</name></member>
      <member refid="classid_physics___base_1a2faa320bcff1c6052dc1fa30e2595866" prot="protected" virt="non-virtual"><scope>idPhysics_Player</scope><name>gravityVector</name></member>
      <member refid="classid_physics___actor_1acf76c052d1dda35fcc9adf22ecc327d4" prot="protected" virt="non-virtual"><scope>idPhysics_Player</scope><name>groundEntityPtr</name></member>
      <member refid="classid_physics___player_1a049cc22fd8ed3644c998519fb4ae6809" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>groundMaterial</name></member>
      <member refid="classid_physics___player_1a1b213aefa9e2213ebcf68944ce4efb19" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>groundPlane</name></member>
      <member refid="classid_physics___player_1a51168ce654e24c0bc452fc533f907736" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>groundTrace</name></member>
      <member refid="classid_physics___base_1a3fd59d57ddc623c1d23df2b45ad6b1ec" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>HasGroundContacts</name></member>
      <member refid="classid_physics___base_1a3fd59d57ddc623c1d23df2b45ad6b1ec" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>HasGroundContacts</name></member>
      <member refid="classid_physics___player_1a3fec998614cab94715acb837924d14c6" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>HasJumped</name></member>
      <member refid="classid_physics___player_1a3fec998614cab94715acb837924d14c6" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>HasJumped</name></member>
      <member refid="classid_physics___player_1ac1b3d058c0dc5c8cf611df1c8102dcd2" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>HasSteppedUp</name></member>
      <member refid="classid_physics___player_1ac1b3d058c0dc5c8cf611df1c8102dcd2" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>HasSteppedUp</name></member>
      <member refid="classid_physics___actor_1ae415544531d6cf8f3d8acbecf36a4f20" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>idPhysics_Actor</name></member>
      <member refid="classid_physics___actor_1ae415544531d6cf8f3d8acbecf36a4f20" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>idPhysics_Actor</name></member>
      <member refid="classid_physics___base_1af74b33c815b5ed40bb108fed93120f3c" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>idPhysics_Base</name></member>
      <member refid="classid_physics___base_1af74b33c815b5ed40bb108fed93120f3c" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>idPhysics_Base</name></member>
      <member refid="classid_physics___player_1a24139aa53bed6b2b7f5fce0b929d3aea" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>idPhysics_Player</name></member>
      <member refid="classid_physics___player_1a24139aa53bed6b2b7f5fce0b929d3aea" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>idPhysics_Player</name></member>
      <member refid="classid_class_1a477e1abd1ec413bb1e201cfe14961bdf" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>Init</name></member>
      <member refid="classid_class_1a09bc718f8fa432d081a010c393431e86" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>Init</name></member>
      <member refid="classid_physics___actor_1a1b71fe07ab221ec915c5ae8d848453b7" prot="protected" virt="non-virtual"><scope>idPhysics_Player</scope><name>invMass</name></member>
      <member refid="classid_physics___player_1a6c7804b9e07456c44e3c693821c4766f" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>IsAtRest</name></member>
      <member refid="classid_physics___player_1a6c7804b9e07456c44e3c693821c4766f" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>IsAtRest</name></member>
      <member refid="classid_physics___player_1ad28dba2e5379c100d2ca4f2861591519" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>IsCrouching</name></member>
      <member refid="classid_physics___player_1ad28dba2e5379c100d2ca4f2861591519" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>IsCrouching</name></member>
      <member refid="classid_physics___base_1a969fc5a622df60f1510f5b4f01fa88dc" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>IsGroundClipModel</name></member>
      <member refid="classid_physics___base_1a969fc5a622df60f1510f5b4f01fa88dc" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>IsGroundClipModel</name></member>
      <member refid="classid_physics___base_1a07d038db013f97e5ae34b25a98d52730" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>IsGroundEntity</name></member>
      <member refid="classid_physics___base_1a07d038db013f97e5ae34b25a98d52730" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>IsGroundEntity</name></member>
      <member refid="classid_physics___base_1a9a62b7f2b473c6a202192b2ae43cc2ab" prot="protected" virt="non-virtual"><scope>idPhysics_Player</scope><name>IsOutsideWorld</name></member>
      <member refid="classid_physics___base_1a9a62b7f2b473c6a202192b2ae43cc2ab" prot="protected" virt="non-virtual"><scope>idPhysics_Player</scope><name>IsOutsideWorld</name></member>
      <member refid="classid_physics___actor_1a381812b0068d9f3aa7008ce4bd977cca" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>IsPushable</name></member>
      <member refid="classid_physics___actor_1a381812b0068d9f3aa7008ce4bd977cca" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>IsPushable</name></member>
      <member refid="classid_class_1a3514bbccebcac499ac15083bb2a67487" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>IsType</name></member>
      <member refid="classid_class_1a44af143b246636c3e6f43aebad05b6d6" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>IsType</name></member>
      <member refid="classid_physics___player_1a3488fb89ddf600e83644d908521a0e30" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>ladder</name></member>
      <member refid="classid_physics___player_1a112ce6c58308bd97d5d1453064aa9174" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>LadderMove</name></member>
      <member refid="classid_physics___player_1a112ce6c58308bd97d5d1453064aa9174" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>LadderMove</name></member>
      <member refid="classid_physics___player_1a94c61791473b43738c4f76325e169a14" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>ladderNormal</name></member>
      <member refid="classid_physics___actor_1a4d2cf47c3f62188cb5c20902f73b3f7f" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>LinkClip</name></member>
      <member refid="classid_physics___actor_1a4d2cf47c3f62188cb5c20902f73b3f7f" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>LinkClip</name></member>
      <member refid="classid_class_1a4bae32c6569ee5b7f27e5cd5a4c93eab" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>ListClasses_f</name></member>
      <member refid="classid_class_1ad5f3b0730c302ad9f74e35d94274ad34" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>ListClasses_f</name></member>
      <member refid="classid_physics___actor_1ab5b9229be4076461a181957bcad08c15" prot="protected" virt="non-virtual"><scope>idPhysics_Player</scope><name>mass</name></member>
      <member refid="classid_physics___actor_1a67583a85f99cead52e1bb8a11d86d550" prot="protected" virt="non-virtual"><scope>idPhysics_Player</scope><name>masterDeltaYaw</name></member>
      <member refid="classid_physics___actor_1a5deaaaecc49acecbd32681553cf9f1ba" prot="protected" virt="non-virtual"><scope>idPhysics_Player</scope><name>masterEntity</name></member>
      <member refid="classid_physics___actor_1aaf5d838d0663957b8c2c98d5fa2a80a3" prot="protected" virt="non-virtual"><scope>idPhysics_Player</scope><name>masterYaw</name></member>
      <member refid="classid_physics___player_1a10e477c10e1c340945be2923dc1cf4bb" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>maxJumpHeight</name></member>
      <member refid="classid_physics___player_1af990b5280a2235ad867785f4a123efe4" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>maxStepHeight</name></member>
      <member refid="classid_physics___player_1a129e47576c760468e745692d075ae9fe" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>MovePlayer</name></member>
      <member refid="classid_physics___player_1a129e47576c760468e745692d075ae9fe" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>MovePlayer</name></member>
      <member refid="classid_physics___player_1a720555238ac7d7f802f0323ab353b2a2" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>NoclipMove</name></member>
      <member refid="classid_physics___player_1a720555238ac7d7f802f0323ab353b2a2" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>NoclipMove</name></member>
      <member refid="classid_physics___player_1ab05d6cdf94e32278aaeb90c3592d4f3b" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>OnLadder</name></member>
      <member refid="classid_physics___player_1ab05d6cdf94e32278aaeb90c3592d4f3b" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>OnLadder</name></member>
      <member refid="classid_class_1a039b8531aa3f54ab164066361aa51bac" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>operator delete</name></member>
      <member refid="classid_class_1a9154911c956031443c4a177434a7c951" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>operator delete</name></member>
      <member refid="classid_class_1a039b8531aa3f54ab164066361aa51bac" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>operator delete</name></member>
      <member refid="classid_class_1a9154911c956031443c4a177434a7c951" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>operator delete</name></member>
      <member refid="classid_class_1aa56d622a26b2984a1507446905237a5e" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>operator new</name></member>
      <member refid="classid_class_1a72f2d16d9ac043833e32bc734e1e8173" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>operator new</name></member>
      <member refid="classid_class_1a11843e3263fac01b39f2e738a08d885e" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>operator new</name></member>
      <member refid="classid_class_1a3dbb763aa8a408c7dc80beab9edaadd5" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>operator new</name></member>
      <member refid="classid_physics___player_1a7c86dbd95a1fbbc78b7a6695d60dd3ea" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PlayerGetOrigin</name></member>
      <member refid="classid_physics___player_1acf8458169b1d54b86635136260b614f3" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PlayerGetOrigin</name></member>
      <member refid="classid_physics___player_1acc0eb1b155c6ca8b17744d3631d220d0" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>playerSpeed</name></member>
      <member refid="classid_class_1a4e1bee4c8c95b22799f58284785ea45d" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a79ff2ce28802016d22c52b575732468c" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a4d532e97b9b8c8528107509486f399aa" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1aeabbc3155ac6c991b288f874a313f4c6" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1af489f280656236ffda55cf31e28a1458" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a3bf07e2d8d295cf61856d9fd26f5ba0b" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1ab1c59135543538e7507590761864c054" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a269276b4a60c83e6678b4308b3b72afe" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a2cdfe8eb844ec5a8881f6e5861dff198" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a4e1bee4c8c95b22799f58284785ea45d" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a79ff2ce28802016d22c52b575732468c" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a4d532e97b9b8c8528107509486f399aa" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1aeabbc3155ac6c991b288f874a313f4c6" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1af489f280656236ffda55cf31e28a1458" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a3bf07e2d8d295cf61856d9fd26f5ba0b" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1ab1c59135543538e7507590761864c054" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a269276b4a60c83e6678b4308b3b72afe" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a2cdfe8eb844ec5a8881f6e5861dff198" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a44dd1c98e3a3067301cccd467424e1fb" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a6aa307dcafd72a277e1b0ba7e7e86313" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a06dfecc610d58cfa6c9a714b41f5e500" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a57d88fe874e7fce62ab80de4e9bac4d1" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a90d5e0e78a3f2ab541f2de7842fbd25c" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a78e7ad3f071bca22b371033e074dcb95" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a66d99ca51730aaf6151aa65e6e891dad" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a8251d21ac61b4b5bf71865c5daedecb3" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a0f023d36142f56c506f3de44bcb88a60" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a44dd1c98e3a3067301cccd467424e1fb" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a6aa307dcafd72a277e1b0ba7e7e86313" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a06dfecc610d58cfa6c9a714b41f5e500" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a57d88fe874e7fce62ab80de4e9bac4d1" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a90d5e0e78a3f2ab541f2de7842fbd25c" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a78e7ad3f071bca22b371033e074dcb95" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a66d99ca51730aaf6151aa65e6e891dad" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a8251d21ac61b4b5bf71865c5daedecb3" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a0f023d36142f56c506f3de44bcb88a60" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a2730cf06c2248d033d3331393690d465" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a41ebdd2ed60bad555b8040af1468dd5e" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1ae1688cd389fea365f91310fd8f0fbdc1" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a682126d778da71c1d61c350ef1383cb8" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1aacfd744269d9a43b3055d4403674a261" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1abd8938dad93fdc7aa9cb90d84f81541b" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a804fc083a766317b62978b9f4f1de2f3" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1af3a58075c898bc5018cce41a6840a3eb" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a925bdbdc9aa6d61b6c74a0e17393007b" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a2730cf06c2248d033d3331393690d465" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a41ebdd2ed60bad555b8040af1468dd5e" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1ae1688cd389fea365f91310fd8f0fbdc1" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a682126d778da71c1d61c350ef1383cb8" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1aacfd744269d9a43b3055d4403674a261" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1abd8938dad93fdc7aa9cb90d84f81541b" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a804fc083a766317b62978b9f4f1de2f3" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1af3a58075c898bc5018cce41a6840a3eb" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a925bdbdc9aa6d61b6c74a0e17393007b" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a913781fd6276d5d821999c206c784505" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>ProcessEventArgPtr</name></member>
      <member refid="classid_class_1a913781fd6276d5d821999c206c784505" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>ProcessEventArgPtr</name></member>
      <member refid="classid_physics___base_1af6f4016a03919fb7983e6158f555e20c" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>PutToRest</name></member>
      <member refid="classid_physics___base_1af6f4016a03919fb7983e6158f555e20c" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>PutToRest</name></member>
      <member refid="classid_physics___player_1ac4ee9e2272e69992ff5513b7566483ae" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>ReadFromSnapshot</name></member>
      <member refid="classid_physics___player_1ac4ee9e2272e69992ff5513b7566483ae" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>ReadFromSnapshot</name></member>
      <member refid="classid_physics___base_1af9d3ef9f8c72406f8dfd0488bf4bf43a" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>RemoveContactEntity</name></member>
      <member refid="classid_physics___base_1af9d3ef9f8c72406f8dfd0488bf4bf43a" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>RemoveContactEntity</name></member>
      <member refid="classid_class_1ab8459ec829b2e016db6d2b13d184917d" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>RespondsTo</name></member>
      <member refid="classid_class_1ab135cc5b1099727aeb0710d169ee641f" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>RespondsTo</name></member>
      <member refid="classid_physics___player_1a195168f333ce0caa0b2f3aff76a5aeb1" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>Restore</name></member>
      <member refid="classid_physics___player_1a195168f333ce0caa0b2f3aff76a5aeb1" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>Restore</name></member>
      <member refid="classid_physics___player_1ad4c5ca6d19919581fd49ac61e956d985" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>RestoreState</name></member>
      <member refid="classid_physics___player_1ad4c5ca6d19919581fd49ac61e956d985" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>RestoreState</name></member>
      <member refid="classid_physics___player_1adf16c016d875b078b8f6ac93416ddafc" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>Rotate</name></member>
      <member refid="classid_physics___player_1adf16c016d875b078b8f6ac93416ddafc" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>Rotate</name></member>
      <member refid="classid_physics___player_1ae1652e06be42f2586348c5422f6e7087" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>Save</name></member>
      <member refid="classid_physics___player_1ae1652e06be42f2586348c5422f6e7087" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>Save</name></member>
      <member refid="classid_physics___player_1a140d8f4a7f7d18fb214e28ab9076db17" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>saved</name></member>
      <member refid="classid_physics___player_1a4f24cf0125e574ef1c88fc3723849b4e" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>SaveState</name></member>
      <member refid="classid_physics___player_1a4f24cf0125e574ef1c88fc3723849b4e" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>SaveState</name></member>
      <member refid="classid_physics___base_1ada002093b0a9dc08bb8bb7f1dddb1adc" prot="protected" virt="non-virtual"><scope>idPhysics_Player</scope><name>self</name></member>
      <member refid="classid_physics___base_1a5060b7c0e5e6b8cab5481ee96faf1ebd" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>SetAngularVelocity</name></member>
      <member refid="classid_physics___base_1a5060b7c0e5e6b8cab5481ee96faf1ebd" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>SetAngularVelocity</name></member>
      <member refid="classid_physics___player_1af96f846c83fe039d57b637525fd9d5ae" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>SetAxis</name></member>
      <member refid="classid_physics___player_1af96f846c83fe039d57b637525fd9d5ae" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>SetAxis</name></member>
      <member refid="classid_physics_1ae52890530331a67139263e6af3397899" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>SetClipBox</name></member>
      <member refid="classid_physics_1ac74fac665cf900d7d9e9fc04d43ddfc1" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>SetClipBox</name></member>
      <member refid="classid_physics___base_1aaf043cdb5e4f407a44678acf8d08e6f2" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>SetClipMask</name></member>
      <member refid="classid_physics___base_1aaf043cdb5e4f407a44678acf8d08e6f2" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>SetClipMask</name></member>
      <member refid="classid_physics___actor_1a721b5d7792439e542d2f9d36c9435202" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>SetClipModel</name></member>
      <member refid="classid_physics___actor_1a721b5d7792439e542d2f9d36c9435202" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>SetClipModel</name></member>
      <member refid="classid_physics___actor_1aaf87690582cd55425c1854be3ff7e75b" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>SetClipModelAxis</name></member>
      <member refid="classid_physics___actor_1aaf87690582cd55425c1854be3ff7e75b" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>SetClipModelAxis</name></member>
      <member refid="classid_physics___actor_1ac8893e8e812514605b68460a654dd7d0" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>SetContents</name></member>
      <member refid="classid_physics___actor_1ac8893e8e812514605b68460a654dd7d0" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>SetContents</name></member>
      <member refid="classid_physics___player_1a36646496d9b620c2846fd92b068058ae" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>SetDebugLevel</name></member>
      <member refid="classid_physics___player_1a36646496d9b620c2846fd92b068058ae" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>SetDebugLevel</name></member>
      <member refid="classid_physics___actor_1a8358c16dc41a27f1a5690c03e1d1c352" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>SetGravity</name></member>
      <member refid="classid_physics___actor_1a8358c16dc41a27f1a5690c03e1d1c352" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>SetGravity</name></member>
      <member refid="classid_physics___player_1aa1123ceef37c5f743edc08e7d7bc780e" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>SetKnockBack</name></member>
      <member refid="classid_physics___player_1aa1123ceef37c5f743edc08e7d7bc780e" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>SetKnockBack</name></member>
      <member refid="classid_physics___player_1abc2116d78322d6f96a0ac170967c5f6b" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>SetLinearVelocity</name></member>
      <member refid="classid_physics___player_1abc2116d78322d6f96a0ac170967c5f6b" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>SetLinearVelocity</name></member>
      <member refid="classid_physics___actor_1afda644a401015c0afe00e07cf80cd21c" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>SetMass</name></member>
      <member refid="classid_physics___actor_1afda644a401015c0afe00e07cf80cd21c" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>SetMass</name></member>
      <member refid="classid_physics___player_1af33bfa80db7da92dbbaee88f7216bcf2" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>SetMaster</name></member>
      <member refid="classid_physics___player_1af33bfa80db7da92dbbaee88f7216bcf2" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>SetMaster</name></member>
      <member refid="classid_physics___player_1a87a727b48811305235d4359374040c86" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>SetMaxJumpHeight</name></member>
      <member refid="classid_physics___player_1a87a727b48811305235d4359374040c86" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>SetMaxJumpHeight</name></member>
      <member refid="classid_physics___player_1a3457a20686aecb4eb7c3bbbe9e16856e" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>SetMaxStepHeight</name></member>
      <member refid="classid_physics___player_1a3457a20686aecb4eb7c3bbbe9e16856e" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>SetMaxStepHeight</name></member>
      <member refid="classid_physics___player_1abf47e46989bf0b5c5eb469fe467dca6f" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>SetMovementType</name></member>
      <member refid="classid_physics___player_1abf47e46989bf0b5c5eb469fe467dca6f" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>SetMovementType</name></member>
      <member refid="classid_physics___player_1a3d0011165fcf451ad97ce37dcba68d0e" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>SetOrigin</name></member>
      <member refid="classid_physics___player_1a3d0011165fcf451ad97ce37dcba68d0e" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>SetOrigin</name></member>
      <member refid="classid_physics___player_1afc15e8f22752d960bf26d1156d6ae65a" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>SetPlayerInput</name></member>
      <member refid="classid_physics___player_1afc15e8f22752d960bf26d1156d6ae65a" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>SetPlayerInput</name></member>
      <member refid="classid_physics___player_1a64e8f059d255a331183810fa154bec59" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>SetPushed</name></member>
      <member refid="classid_physics___player_1a64e8f059d255a331183810fa154bec59" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>SetPushed</name></member>
      <member refid="classid_physics___base_1a201eb3ff18b214ddc3fa27b5ff041879" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>SetSelf</name></member>
      <member refid="classid_physics___base_1a201eb3ff18b214ddc3fa27b5ff041879" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>SetSelf</name></member>
      <member refid="classid_physics___player_1a51336d4ab8e15339de1f6030bb8a7635" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>SetSpeed</name></member>
      <member refid="classid_physics___player_1a51336d4ab8e15339de1f6030bb8a7635" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>SetSpeed</name></member>
      <member refid="classid_physics___player_1ab1255ac3d3c789777882ae877ab1e732" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>SetWaterLevel</name></member>
      <member refid="classid_physics___player_1ab1255ac3d3c789777882ae877ab1e732" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>SetWaterLevel</name></member>
      <member refid="classid_class_1aa20c883a28509e2b4997ee91ae0b8eae" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>Shutdown</name></member>
      <member refid="classid_class_1a42b60ee435e4d84ad914d828a4f7f82f" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>Shutdown</name></member>
      <member refid="classid_physics___player_1a0081f324fe7e426deb8930e160b9c5b4" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>SlideMove</name></member>
      <member refid="classid_physics___player_1a0081f324fe7e426deb8930e160b9c5b4" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>SlideMove</name></member>
      <member refid="classid_physics_1a3a07541fcfddc8507565281c841ad40a" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>SnapTimeToPhysicsFrame</name></member>
      <member refid="classid_physics_1a227507b5b7079ccc8bc3b150dcb57b2e" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>SnapTimeToPhysicsFrame</name></member>
      <member refid="classid_class_1a7b8213ff8dd347c24657306603a3ef8e" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>Spawn</name></member>
      <member refid="classid_class_1a7b8213ff8dd347c24657306603a3ef8e" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>Spawn</name></member>
      <member refid="classid_physics___player_1a27f2a00ab3b03aadb79d8561221e3508" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>SpectatorMove</name></member>
      <member refid="classid_physics___player_1a27f2a00ab3b03aadb79d8561221e3508" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>SpectatorMove</name></member>
      <member refid="classid_physics___player_1aa69656047a0c9faa88273fb641c11c31" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>Translate</name></member>
      <member refid="classid_physics___player_1aa69656047a0c9faa88273fb641c11c31" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>Translate</name></member>
      <member refid="classid_class_1ae391af31676f812ccd2dc7b0c8f921b1" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>Type</name></member>
      <member refid="classid_physics___actor_1ad117b1bc6f1b5e607881f7f7ea52ee38" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>UnlinkClip</name></member>
      <member refid="classid_physics___actor_1ad117b1bc6f1b5e607881f7f7ea52ee38" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>UnlinkClip</name></member>
      <member refid="classid_physics___player_1aa8dab26ec1896a70282934022c0ec209" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>UpdateTime</name></member>
      <member refid="classid_physics___player_1aa8dab26ec1896a70282934022c0ec209" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>UpdateTime</name></member>
      <member refid="classid_physics___player_1a85b2ad31a35d64c679d8b268a2f4dd34" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>viewAngles</name></member>
      <member refid="classid_physics___player_1a2de185ab1bd7e855c995c474ec203f80" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>viewForward</name></member>
      <member refid="classid_physics___player_1acf5e997aad432f36d2a7c110b55432c8" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>viewRight</name></member>
      <member refid="classid_physics___player_1aecc59147969f0b6467ffa86b1ab4a027" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>walking</name></member>
      <member refid="classid_physics___player_1a116198f138f1ebfc3bb016d079a517d6" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>WalkMove</name></member>
      <member refid="classid_physics___player_1a116198f138f1ebfc3bb016d079a517d6" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>WalkMove</name></member>
      <member refid="classid_physics___player_1ac6d4acefd4fc41259c4b53154a247db7" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>walkSpeed</name></member>
      <member refid="classid_physics___player_1ac5f2b7dd1aa3f564250f41afc3c18357" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>WaterJumpMove</name></member>
      <member refid="classid_physics___player_1ac5f2b7dd1aa3f564250f41afc3c18357" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>WaterJumpMove</name></member>
      <member refid="classid_physics___player_1a2cf907aaff47aa439f6a140244cc0743" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>waterLevel</name></member>
      <member refid="classid_physics___player_1a50cd1bb48111b1e812ffe90c43fad85b" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>WaterMove</name></member>
      <member refid="classid_physics___player_1a50cd1bb48111b1e812ffe90c43fad85b" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>WaterMove</name></member>
      <member refid="classid_physics___player_1a385397cb93b9d7a1dc8a3b59ef08855b" prot="private" virt="non-virtual"><scope>idPhysics_Player</scope><name>waterType</name></member>
      <member refid="classid_physics___player_1a44d6adfc3d8b13e63fab6623aec28462" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>WriteToSnapshot</name></member>
      <member refid="classid_physics___player_1a44d6adfc3d8b13e63fab6623aec28462" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>WriteToSnapshot</name></member>
      <member refid="classid_class_1a252055b84ce9dd64e15482a0a083bd92" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>~idClass</name></member>
      <member refid="classid_class_1adc7282c1b9d17b7b852bc7e0086e256d" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>~idClass</name></member>
      <member refid="classid_physics_1a6afd95253b165b07ae7f3636e5fee3b1" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>~idPhysics</name></member>
      <member refid="classid_physics_1a011cc8d6312c743f535327af57c4b7f2" prot="public" virt="virtual"><scope>idPhysics_Player</scope><name>~idPhysics</name></member>
      <member refid="classid_physics___actor_1a24b248f9bf0815958650a18c4000e0fa" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>~idPhysics_Actor</name></member>
      <member refid="classid_physics___actor_1a24b248f9bf0815958650a18c4000e0fa" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>~idPhysics_Actor</name></member>
      <member refid="classid_physics___base_1a06fe55f4290d55c2bae27146db5bfc51" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>~idPhysics_Base</name></member>
      <member refid="classid_physics___base_1a06fe55f4290d55c2bae27146db5bfc51" prot="public" virt="non-virtual"><scope>idPhysics_Player</scope><name>~idPhysics_Base</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
