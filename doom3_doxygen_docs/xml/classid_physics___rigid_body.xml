<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_physics___rigid_body" kind="class" prot="public">
    <compoundname>idPhysics_RigidBody</compoundname>
    <basecompoundref refid="classid_physics___base" prot="public" virt="non-virtual">idPhysics_Base</basecompoundref>
    <basecompoundref refid="classid_physics___base" prot="public" virt="non-virtual">idPhysics_Base</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classid_physics___rigid_body_1a1b459a04c55ac39bccf1dce519cb6e4e" prot="private" static="no" mutable="no">
        <type><ref refid="structrigid_body_p_state__s" kindref="compound">rigidBodyPState_t</ref></type>
        <definition>rigidBodyPState_t idPhysics_RigidBody::current</definition>
        <argsstring></argsstring>
        <name>current</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="157" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___rigid_body_1a3d0482b2ee2c1d82f160ce6f82f7161a" prot="private" static="no" mutable="no">
        <type><ref refid="structrigid_body_p_state__s" kindref="compound">rigidBodyPState_t</ref></type>
        <definition>rigidBodyPState_t idPhysics_RigidBody::saved</definition>
        <argsstring></argsstring>
        <name>saved</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="158" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___rigid_body_1a9a10c7d147f5b5b7f88cb9feb366a2f6" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idPhysics_RigidBody::linearFriction</definition>
        <argsstring></argsstring>
        <name>linearFriction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="161" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___rigid_body_1a8466672471503442ec8485b1f736c4ce" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idPhysics_RigidBody::angularFriction</definition>
        <argsstring></argsstring>
        <name>angularFriction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="162" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___rigid_body_1a526a33c590bfa3df76d974dcdd684173" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idPhysics_RigidBody::contactFriction</definition>
        <argsstring></argsstring>
        <name>contactFriction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="163" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___rigid_body_1a873f062806893b0441c59aaf2fd27a96" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idPhysics_RigidBody::bouncyness</definition>
        <argsstring></argsstring>
        <name>bouncyness</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="164" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___rigid_body_1ac96559e7bf031c964501b6ffa6c00df2" prot="private" static="no" mutable="no">
        <type><ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
        <definition>idClipModel * idPhysics_RigidBody::clipModel</definition>
        <argsstring></argsstring>
        <name>clipModel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="165" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___rigid_body_1a2c1a716aff55390bee0458bba4fff41c" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idPhysics_RigidBody::mass</definition>
        <argsstring></argsstring>
        <name>mass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="168" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___rigid_body_1a55beb6b31d319e3231c0e2796177bad6" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idPhysics_RigidBody::inverseMass</definition>
        <argsstring></argsstring>
        <name>inverseMass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="169" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___rigid_body_1aa8dfec278e752e8c6fb64d52bc441989" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>idVec3 idPhysics_RigidBody::centerOfMass</definition>
        <argsstring></argsstring>
        <name>centerOfMass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="170" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___rigid_body_1a643b332a6aa5f632e363789e8cc7bfd0" prot="private" static="no" mutable="no">
        <type><ref refid="classid_mat3" kindref="compound">idMat3</ref></type>
        <definition>idMat3 idPhysics_RigidBody::inertiaTensor</definition>
        <argsstring></argsstring>
        <name>inertiaTensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="171" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___rigid_body_1ae00ba1faa48953de63dcbf2baed81569" prot="private" static="no" mutable="no">
        <type><ref refid="classid_mat3" kindref="compound">idMat3</ref></type>
        <definition>idMat3 idPhysics_RigidBody::inverseInertiaTensor</definition>
        <argsstring></argsstring>
        <name>inverseInertiaTensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="172" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___rigid_body_1ac4663f930a2d69acf978c17f1af884eb" prot="private" static="no" mutable="no">
        <type><ref refid="classid_o_d_e" kindref="compound">idODE</ref> *</type>
        <definition>idODE * idPhysics_RigidBody::integrator</definition>
        <argsstring></argsstring>
        <name>integrator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="174" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___rigid_body_1ad06912c87d59beed1659742afa732b6a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idPhysics_RigidBody::dropToFloor</definition>
        <argsstring></argsstring>
        <name>dropToFloor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="175" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___rigid_body_1a98e8ed718afb121ee9dcb225c75bdaee" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idPhysics_RigidBody::testSolid</definition>
        <argsstring></argsstring>
        <name>testSolid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="176" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___rigid_body_1afda4cc2bffec075e9efe3eb0e036fad3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idPhysics_RigidBody::noImpact</definition>
        <argsstring></argsstring>
        <name>noImpact</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="177" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___rigid_body_1ad8b75e56363ae7a266eca8f9f1bf681a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idPhysics_RigidBody::noContact</definition>
        <argsstring></argsstring>
        <name>noContact</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="178" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___rigid_body_1a47bba6dd1608b1e5310a9f456b041d68" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idPhysics_RigidBody::hasMaster</definition>
        <argsstring></argsstring>
        <name>hasMaster</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="181" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_physics___rigid_body_1a006508713e5cf8cc9b06e0d20ff2ce1a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idPhysics_RigidBody::isOrientated</definition>
        <argsstring></argsstring>
        <name>isOrientated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="182" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_physics___rigid_body_1ac85e6b5552cd16e62a9fe1a325900d05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idPhysics_RigidBody::CLASS_PROTOTYPE</definition>
        <argsstring>(idPhysics_RigidBody)</argsstring>
        <name>CLASS_PROTOTYPE</name>
        <param>
          <type><ref refid="classid_physics___rigid_body" kindref="compound">idPhysics_RigidBody</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a677e9ed3ecaf5d3de236a973b10265ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idPhysics_RigidBody::idPhysics_RigidBody</definition>
        <argsstring>(void)</argsstring>
        <name>idPhysics_RigidBody</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="72" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="435" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a9d516415f54b806d59d1b67945591934" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idPhysics_RigidBody::~idPhysics_RigidBody</definition>
        <argsstring>(void)</argsstring>
        <name>~idPhysics_RigidBody</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="73" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="482" bodyend="488"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ac563e17c717983ab36a6767669b465f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::Save</definition>
        <argsstring>(idSaveGame *savefile) const </argsstring>
        <name>Save</name>
        <param>
          <type><ref refid="classid_save_game" kindref="compound">idSaveGame</ref> *</type>
          <declname>savefile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="75" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="535" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a4e88df206e30b4ab25a40d0861f7763c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::Restore</definition>
        <argsstring>(idRestoreGame *savefile)</argsstring>
        <name>Restore</name>
        <param>
          <type><ref refid="classid_restore_game" kindref="compound">idRestoreGame</ref> *</type>
          <declname>savefile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="76" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="566" bodyend="590"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a3ae777331a37121db076edb3537a8c00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::SetFriction</definition>
        <argsstring>(const float linear, const float angular, const float contact)</argsstring>
        <name>SetFriction</name>
        <param>
          <type>const float</type>
          <declname>linear</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>angular</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>contact</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="79" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="694" bodyend="703"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1aa07c0abf0a3c81ac5eb0fd28ee7ad93e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::SetBouncyness</definition>
        <argsstring>(const float b)</argsstring>
        <name>SetBouncyness</name>
        <param>
          <type>const float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="80" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="710" bodyend="715"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a1bcc92a6f83af6fd10f2bf7e34405689" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::DropToFloor</definition>
        <argsstring>(void)</argsstring>
        <name>DropToFloor</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="82" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="734" bodyend="737"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ae185e3444d7e32af153e06cb8dc19521" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::NoContact</definition>
        <argsstring>(void)</argsstring>
        <name>NoContact</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="84" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="744" bodyend="746"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1afe2d111a46aa7cf7b7b38784d7c937c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::EnableImpact</definition>
        <argsstring>(void)</argsstring>
        <name>EnableImpact</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="86" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="774" bodyend="776"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a518b1b1d5aaf1535092d5d6cc84789bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::DisableImpact</definition>
        <argsstring>(void)</argsstring>
        <name>DisableImpact</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="87" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="783" bodyend="785"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a65d6856d268631d5ad84ed04aec0f2bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::SetClipModel</definition>
        <argsstring>(idClipModel *model, float density, int id=0, bool freeOld=true)</argsstring>
        <name>SetClipModel</name>
        <reimplements refid="classid_physics___base_1a5edb633e663b390e4ef86def7a73acf3">SetClipModel</reimplements>
        <param>
          <type><ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>float</type>
          <declname>density</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>freeOld</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="90" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="599" bodyend="647"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1af2cef4da5a992bc39639f45d90d0900d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
        <definition>idClipModel * idPhysics_RigidBody::GetClipModel</definition>
        <argsstring>(int id=0) const </argsstring>
        <name>GetClipModel</name>
        <reimplements refid="classid_physics___base_1a0951d4bb0abbc765f91ac70dffc8697d">GetClipModel</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="91" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="654" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a8185940ef4ae2820e02b48c933c975e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idPhysics_RigidBody::GetNumClipModels</definition>
        <argsstring>(void) const </argsstring>
        <name>GetNumClipModels</name>
        <reimplements refid="classid_physics___base_1a8f6463ef806b08afcd55a3a1444b8418">GetNumClipModels</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="92" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="663" bodyend="665"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1aa97456b0d8170469551eb9bf4446eb0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::SetMass</definition>
        <argsstring>(float mass, int id=-1)</argsstring>
        <name>SetMass</name>
        <reimplements refid="classid_physics___base_1a886e32b283a3c179e560229e2347fa37">SetMass</reimplements>
        <param>
          <type>float</type>
          <declname>mass</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="94" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="672" bodyend="678"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a6849551d0a9d20767b40fbc17ec2bd08" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>float</type>
        <definition>float idPhysics_RigidBody::GetMass</definition>
        <argsstring>(int id=-1) const </argsstring>
        <name>GetMass</name>
        <reimplements refid="classid_physics___base_1acb76436fa3c366d359bd25232a6d3ec6">GetMass</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="95" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="685" bodyend="687"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ac6ae89e557e9681e31a1eb2f0d86bdbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::SetContents</definition>
        <argsstring>(int contents, int id=-1)</argsstring>
        <name>SetContents</name>
        <reimplements refid="classid_physics___base_1ac80bde90971178559a1e1b6c9027b59f">SetContents</reimplements>
        <param>
          <type>int</type>
          <declname>contents</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="97" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="792" bodyend="794"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a8bb2455b712f06b37706571c6cb12aa3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idPhysics_RigidBody::GetContents</definition>
        <argsstring>(int id=-1) const </argsstring>
        <name>GetContents</name>
        <reimplements refid="classid_physics___base_1a33cb3cada27d29286f3166d9261e5228">GetContents</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="98" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="801" bodyend="803"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ab73b2d274312d479858e3e75e4b3f384" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
        <definition>const idBounds &amp; idPhysics_RigidBody::GetBounds</definition>
        <argsstring>(int id=-1) const </argsstring>
        <name>GetBounds</name>
        <reimplements refid="classid_physics___base_1a7d642504c96aadf08357338addae4889">GetBounds</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="100" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="810" bodyend="812"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a38f5587e8980058f17b57b84e4b780f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
        <definition>const idBounds &amp; idPhysics_RigidBody::GetAbsBounds</definition>
        <argsstring>(int id=-1) const </argsstring>
        <name>GetAbsBounds</name>
        <reimplements refid="classid_physics___base_1a6888af190525559c1938423350962e7a">GetAbsBounds</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="101" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="819" bodyend="821"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a4f127f3c3a9e8cdcf1ec82dd3ec56d36" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool idPhysics_RigidBody::Evaluate</definition>
        <argsstring>(int timeStepMSec, int endTimeMSec)</argsstring>
        <name>Evaluate</name>
        <reimplements refid="classid_physics___base_1a68e8bb83889f347f77b5b7c0af1df3a0">Evaluate</reimplements>
        <param>
          <type>int</type>
          <declname>timeStepMSec</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endTimeMSec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="103" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="832" bodyend="998"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ad5ee697b8892647b6a5afbb0e11bfcb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::UpdateTime</definition>
        <argsstring>(int endTimeMSec)</argsstring>
        <name>UpdateTime</name>
        <reimplements refid="classid_physics___base_1a57bc63cb5983f055072ff1e3da5c83a2">UpdateTime</reimplements>
        <param>
          <type>int</type>
          <declname>endTimeMSec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="104" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1005" bodyend="1006"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a28513679a4a2ff57302d129624dab173" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idPhysics_RigidBody::GetTime</definition>
        <argsstring>(void) const </argsstring>
        <name>GetTime</name>
        <reimplements refid="classid_physics___base_1a5df6d476848ba03d22104cd27ac9acd0">GetTime</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="105" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1013" bodyend="1015"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a3e8b9f0c3bd420c991e6d1d6e24d8209" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::GetImpactInfo</definition>
        <argsstring>(const int id, const idVec3 &amp;point, impactInfo_t *info) const </argsstring>
        <name>GetImpactInfo</name>
        <reimplements refid="classid_physics___base_1a2d7c23a0cfba3a82b535f5a88e1c2241">GetImpactInfo</reimplements>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type><ref refid="structimpact_info__s" kindref="compound">impactInfo_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="107" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1022" bodyend="1034"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a78b22a3d27f6b9f5c538caf3130fd7db" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::ApplyImpulse</definition>
        <argsstring>(const int id, const idVec3 &amp;point, const idVec3 &amp;impulse)</argsstring>
        <name>ApplyImpulse</name>
        <reimplements refid="classid_physics___base_1a4ab48ead610a476aa0d5485c573c17b4">ApplyImpulse</reimplements>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>impulse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="108" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1041" bodyend="1048"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a4343e4051cd8bd1bd8696d8c64f5dcb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::AddForce</definition>
        <argsstring>(const int id, const idVec3 &amp;point, const idVec3 &amp;force)</argsstring>
        <name>AddForce</name>
        <reimplements refid="classid_physics___base_1ad8f420453bd2ebe473c26cda63c574e4">AddForce</reimplements>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>force</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="109" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1055" bodyend="1062"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a46bf037931662d2a9e24bc0cdd223d68" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::Activate</definition>
        <argsstring>(void)</argsstring>
        <name>Activate</name>
        <reimplements refid="classid_physics___base_1a0631910fa43a8b62994e4718c2e6ddc5">Activate</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="110" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="753" bodyend="756"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ab5219e7298e14b784148923543d5fa6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::PutToRest</definition>
        <argsstring>(void)</argsstring>
        <name>PutToRest</name>
        <reimplements refid="classid_physics___base_1af6f4016a03919fb7983e6158f555e20c">PutToRest</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="111" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="765" bodyend="767"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1aeb39501be194efdef0227a3860c3e5a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool idPhysics_RigidBody::IsAtRest</definition>
        <argsstring>(void) const </argsstring>
        <name>IsAtRest</name>
        <reimplements refid="classid_physics___base_1adf5fdb18bf2f51f4e9a62c0c3962496c">IsAtRest</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="112" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1069" bodyend="1071"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ae5e7281002971fe54547a19d64100561" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idPhysics_RigidBody::GetRestStartTime</definition>
        <argsstring>(void) const </argsstring>
        <name>GetRestStartTime</name>
        <reimplements refid="classid_physics___base_1a573317c8b6147e7c5adba7022b01e3e4">GetRestStartTime</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="113" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1078" bodyend="1080"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ae90279f8ad7f6b88562b30fcbb49aecf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool idPhysics_RigidBody::IsPushable</definition>
        <argsstring>(void) const </argsstring>
        <name>IsPushable</name>
        <reimplements refid="classid_physics___base_1acf36457d378524f02a285d4e25f07080">IsPushable</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="114" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1087" bodyend="1089"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a542437e6e5e51017a81346c6c4bb26cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::SaveState</definition>
        <argsstring>(void)</argsstring>
        <name>SaveState</name>
        <reimplements refid="classid_physics___base_1abfef1ec167da6780db337a59f6df318b">SaveState</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="116" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1096" bodyend="1098"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a125c506a083ddbbf15c45cf7db742f9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::RestoreState</definition>
        <argsstring>(void)</argsstring>
        <name>RestoreState</name>
        <reimplements refid="classid_physics___base_1a2506a696d776e0f4ab7aeb5706a5df93">RestoreState</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="117" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1105" bodyend="1111"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1aa70966127aebbbe36ea82a223be52381" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::SetOrigin</definition>
        <argsstring>(const idVec3 &amp;newOrigin, int id=-1)</argsstring>
        <name>SetOrigin</name>
        <reimplements refid="classid_physics___base_1a70d7961cab60fc62ef0ff32af732d51b">SetOrigin</reimplements>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>newOrigin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="119" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1118" bodyend="1134"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a47bc083dbe76fdd5719fdc9da084a29f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::SetAxis</definition>
        <argsstring>(const idMat3 &amp;newAxis, int id=-1)</argsstring>
        <name>SetAxis</name>
        <reimplements refid="classid_physics___base_1a4dad199e469655584a79547d3c959ae9">SetAxis</reimplements>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>newAxis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="120" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1141" bodyend="1157"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a828025cb04bf987d234edc473c5d5cc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::Translate</definition>
        <argsstring>(const idVec3 &amp;translation, int id=-1)</argsstring>
        <name>Translate</name>
        <reimplements refid="classid_physics___base_1a9bb7ce564e1f8ad77f0003c24c86e54b">Translate</reimplements>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>translation</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="122" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1164" bodyend="1172"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a05f34cef53c76e5f656a003e4198a7de" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::Rotate</definition>
        <argsstring>(const idRotation &amp;rotation, int id=-1)</argsstring>
        <name>Rotate</name>
        <reimplements refid="classid_physics___base_1a277197f47e1ef55dd0ddd0e4ed40e93c">Rotate</reimplements>
        <param>
          <type>const <ref refid="classid_rotation" kindref="compound">idRotation</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="123" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1179" bodyend="1199"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ab6d36df436dfa974f3b666530eb1c2b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3 &amp; idPhysics_RigidBody::GetOrigin</definition>
        <argsstring>(int id=0) const </argsstring>
        <name>GetOrigin</name>
        <reimplements refid="classid_physics___base_1a6ac21917144fe325bfabab210279286d">GetOrigin</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="125" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1206" bodyend="1208"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a0a19163b3f77f0bde137f00e54e8e7de" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
        <definition>const idMat3 &amp; idPhysics_RigidBody::GetAxis</definition>
        <argsstring>(int id=0) const </argsstring>
        <name>GetAxis</name>
        <reimplements refid="classid_physics___base_1a061f61210b0e86a74141deb0d3c64b02">GetAxis</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="126" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1215" bodyend="1217"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ace9b866dc10ebde6f7f28f7df9ea4a73" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::SetLinearVelocity</definition>
        <argsstring>(const idVec3 &amp;newLinearVelocity, int id=0)</argsstring>
        <name>SetLinearVelocity</name>
        <reimplements refid="classid_physics___base_1a064d14b46eacbd8c578461248c6447bd">SetLinearVelocity</reimplements>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>newLinearVelocity</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="128" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1224" bodyend="1227"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ab3f7f79f9021b073be672dc5c8501bc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::SetAngularVelocity</definition>
        <argsstring>(const idVec3 &amp;newAngularVelocity, int id=0)</argsstring>
        <name>SetAngularVelocity</name>
        <reimplements refid="classid_physics___base_1a5060b7c0e5e6b8cab5481ee96faf1ebd">SetAngularVelocity</reimplements>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>newAngularVelocity</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="129" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1234" bodyend="1237"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a8ee00a432438db08e75a57bbaeef6cf5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3 &amp; idPhysics_RigidBody::GetLinearVelocity</definition>
        <argsstring>(int id=0) const </argsstring>
        <name>GetLinearVelocity</name>
        <reimplements refid="classid_physics___base_1a1bb04a7510edfedbe96faaba2ac389c2">GetLinearVelocity</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="131" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1244" bodyend="1248"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1afcd3832d998a8a023490232937c7e278" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3 &amp; idPhysics_RigidBody::GetAngularVelocity</definition>
        <argsstring>(int id=0) const </argsstring>
        <name>GetAngularVelocity</name>
        <reimplements refid="classid_physics___base_1a415e2df939c32fccb5be0709cd5b2c67">GetAngularVelocity</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="132" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1255" bodyend="1262"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a92d3e54f0e448f92e4fa5e7235d57653" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::ClipTranslation</definition>
        <argsstring>(trace_t &amp;results, const idVec3 &amp;translation, const idClipModel *model) const </argsstring>
        <name>ClipTranslation</name>
        <reimplements refid="classid_physics___base_1a5d68ecee1632d33bad82e13bb5a83f4a">ClipTranslation</reimplements>
        <param>
          <type><ref refid="structtrace__s" kindref="compound">trace_t</ref> &amp;</type>
          <declname>results</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>translation</declname>
        </param>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="134" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1269" bodyend="1279"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1af267de50ce9091b7e95ed9989d457c23" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::ClipRotation</definition>
        <argsstring>(trace_t &amp;results, const idRotation &amp;rotation, const idClipModel *model) const </argsstring>
        <name>ClipRotation</name>
        <reimplements refid="classid_physics___base_1a490fbebb7ef595a0094fce79929ee8ef">ClipRotation</reimplements>
        <param>
          <type><ref refid="structtrace__s" kindref="compound">trace_t</ref> &amp;</type>
          <declname>results</declname>
        </param>
        <param>
          <type>const <ref refid="classid_rotation" kindref="compound">idRotation</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="135" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1286" bodyend="1296"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a6bcf9ba48b6dca691cae6facb6414cc5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idPhysics_RigidBody::ClipContents</definition>
        <argsstring>(const idClipModel *model) const </argsstring>
        <name>ClipContents</name>
        <reimplements refid="classid_physics___base_1aa0276c508e8e77475ae74757a3688ac4">ClipContents</reimplements>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="136" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1303" bodyend="1311"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1adf9f1ce90ecd14077c4a79302925c131" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::DisableClip</definition>
        <argsstring>(void)</argsstring>
        <name>DisableClip</name>
        <reimplements refid="classid_physics___base_1aeb85fab7fc687823db9992d77477a1de">DisableClip</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="138" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1318" bodyend="1320"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ae356d3cb4ceda055694b890021dacd64" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::EnableClip</definition>
        <argsstring>(void)</argsstring>
        <name>EnableClip</name>
        <reimplements refid="classid_physics___base_1afe4b626a7b78bee2a5fa253c9d445285">EnableClip</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="139" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1327" bodyend="1329"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ad64df06095a19c0bc29319067dcc4b4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::UnlinkClip</definition>
        <argsstring>(void)</argsstring>
        <name>UnlinkClip</name>
        <reimplements refid="classid_physics___base_1a3494d7fd367a623c046eada3e7a01af4">UnlinkClip</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="141" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1336" bodyend="1338"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a582be3b03ca3215e075c6cff2d23b9b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::LinkClip</definition>
        <argsstring>(void)</argsstring>
        <name>LinkClip</name>
        <reimplements refid="classid_physics___base_1a0f8b1514afb3160d69ce99704a9fc847">LinkClip</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="142" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1345" bodyend="1347"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a2cb8c23d38ad09700add09be03009e40" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool idPhysics_RigidBody::EvaluateContacts</definition>
        <argsstring>(void)</argsstring>
        <name>EvaluateContacts</name>
        <reimplements refid="classid_physics___base_1ab9eb83d03417cd2a6c371ab62ca6b6f0">EvaluateContacts</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="144" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1354" bodyend="1373"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1aaddc24340cd3893afc5ec86c726f478f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::SetPushed</definition>
        <argsstring>(int deltaTime)</argsstring>
        <name>SetPushed</name>
        <reimplements refid="classid_physics___base_1acfa76e02788bac5bcde53162d68c5db9">SetPushed</reimplements>
        <param>
          <type>int</type>
          <declname>deltaTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="146" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1380" bodyend="1388"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ac0d6ee52c3a25f4a8cd22ad5305bf802" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3 &amp; idPhysics_RigidBody::GetPushedLinearVelocity</definition>
        <argsstring>(const int id=0) const </argsstring>
        <name>GetPushedLinearVelocity</name>
        <reimplements refid="classid_physics___base_1af384cca825ba76992c4f461b91a1f444">GetPushedLinearVelocity</reimplements>
        <param>
          <type>const int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="147" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1395" bodyend="1397"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a96cc20abdcbfa240af0a5987992122b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3 &amp; idPhysics_RigidBody::GetPushedAngularVelocity</definition>
        <argsstring>(const int id=0) const </argsstring>
        <name>GetPushedAngularVelocity</name>
        <reimplements refid="classid_physics___base_1adffd5069de66956869e10d4557f0925d">GetPushedAngularVelocity</reimplements>
        <param>
          <type>const int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="148" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1404" bodyend="1406"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a75bb0d5eb4ef68424e1308b28ca17c2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::SetMaster</definition>
        <argsstring>(idEntity *master, const bool orientated)</argsstring>
        <name>SetMaster</name>
        <reimplements refid="classid_physics___base_1a1a70caaf421d2a73aa3a03ffca5d11fb">SetMaster</reimplements>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>master</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>orientated</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="150" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1413" bodyend="1439"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a3592efd7d4fc6295f8adc969e3302d0b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::WriteToSnapshot</definition>
        <argsstring>(idBitMsgDelta &amp;msg) const </argsstring>
        <name>WriteToSnapshot</name>
        <reimplements refid="classid_physics___base_1a62ca703f7ad9004e69e09ca99582756d">WriteToSnapshot</reimplements>
        <param>
          <type><ref refid="classid_bit_msg_delta" kindref="compound">idBitMsgDelta</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="152" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1459" bodyend="1493"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a9c8e83fcc9142bbd228cc490f23bcec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::ReadFromSnapshot</definition>
        <argsstring>(const idBitMsgDelta &amp;msg)</argsstring>
        <name>ReadFromSnapshot</name>
        <reimplements refid="classid_physics___base_1a54bee9929d92f797ca95c205c6720ca5">ReadFromSnapshot</reimplements>
        <param>
          <type>const <ref refid="classid_bit_msg_delta" kindref="compound">idBitMsgDelta</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="153" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="1500" bodyend="1538"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ac85e6b5552cd16e62a9fe1a325900d05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idPhysics_RigidBody::CLASS_PROTOTYPE</definition>
        <argsstring>(idPhysics_RigidBody)</argsstring>
        <name>CLASS_PROTOTYPE</name>
        <param>
          <type><ref refid="classid_physics___rigid_body" kindref="compound">idPhysics_RigidBody</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a677e9ed3ecaf5d3de236a973b10265ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idPhysics_RigidBody::idPhysics_RigidBody</definition>
        <argsstring>(void)</argsstring>
        <name>idPhysics_RigidBody</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a9d516415f54b806d59d1b67945591934" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idPhysics_RigidBody::~idPhysics_RigidBody</definition>
        <argsstring>(void)</argsstring>
        <name>~idPhysics_RigidBody</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ac563e17c717983ab36a6767669b465f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::Save</definition>
        <argsstring>(idSaveGame *savefile) const </argsstring>
        <name>Save</name>
        <param>
          <type><ref refid="classid_save_game" kindref="compound">idSaveGame</ref> *</type>
          <declname>savefile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a4e88df206e30b4ab25a40d0861f7763c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::Restore</definition>
        <argsstring>(idRestoreGame *savefile)</argsstring>
        <name>Restore</name>
        <param>
          <type><ref refid="classid_restore_game" kindref="compound">idRestoreGame</ref> *</type>
          <declname>savefile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a3ae777331a37121db076edb3537a8c00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::SetFriction</definition>
        <argsstring>(const float linear, const float angular, const float contact)</argsstring>
        <name>SetFriction</name>
        <param>
          <type>const float</type>
          <declname>linear</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>angular</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>contact</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1aa07c0abf0a3c81ac5eb0fd28ee7ad93e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::SetBouncyness</definition>
        <argsstring>(const float b)</argsstring>
        <name>SetBouncyness</name>
        <param>
          <type>const float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a1bcc92a6f83af6fd10f2bf7e34405689" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::DropToFloor</definition>
        <argsstring>(void)</argsstring>
        <name>DropToFloor</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ae185e3444d7e32af153e06cb8dc19521" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::NoContact</definition>
        <argsstring>(void)</argsstring>
        <name>NoContact</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1afe2d111a46aa7cf7b7b38784d7c937c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::EnableImpact</definition>
        <argsstring>(void)</argsstring>
        <name>EnableImpact</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a518b1b1d5aaf1535092d5d6cc84789bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::DisableImpact</definition>
        <argsstring>(void)</argsstring>
        <name>DisableImpact</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a65d6856d268631d5ad84ed04aec0f2bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::SetClipModel</definition>
        <argsstring>(idClipModel *model, float density, int id=0, bool freeOld=true)</argsstring>
        <name>SetClipModel</name>
        <reimplements refid="classid_physics___base_1a5edb633e663b390e4ef86def7a73acf3">SetClipModel</reimplements>
        <param>
          <type><ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>float</type>
          <declname>density</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>freeOld</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a46d1dd211d8303e00d67b34da5756c1c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
        <definition>idClipModel* idPhysics_RigidBody::GetClipModel</definition>
        <argsstring>(int id=0) const </argsstring>
        <name>GetClipModel</name>
        <reimplements refid="classid_physics___base_1a0951d4bb0abbc765f91ac70dffc8697d">GetClipModel</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a8185940ef4ae2820e02b48c933c975e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idPhysics_RigidBody::GetNumClipModels</definition>
        <argsstring>(void) const </argsstring>
        <name>GetNumClipModels</name>
        <reimplements refid="classid_physics___base_1a8f6463ef806b08afcd55a3a1444b8418">GetNumClipModels</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1aa97456b0d8170469551eb9bf4446eb0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::SetMass</definition>
        <argsstring>(float mass, int id=-1)</argsstring>
        <name>SetMass</name>
        <reimplements refid="classid_physics___base_1a886e32b283a3c179e560229e2347fa37">SetMass</reimplements>
        <param>
          <type>float</type>
          <declname>mass</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a6849551d0a9d20767b40fbc17ec2bd08" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>float</type>
        <definition>float idPhysics_RigidBody::GetMass</definition>
        <argsstring>(int id=-1) const </argsstring>
        <name>GetMass</name>
        <reimplements refid="classid_physics___base_1acb76436fa3c366d359bd25232a6d3ec6">GetMass</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ac6ae89e557e9681e31a1eb2f0d86bdbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::SetContents</definition>
        <argsstring>(int contents, int id=-1)</argsstring>
        <name>SetContents</name>
        <reimplements refid="classid_physics___base_1ac80bde90971178559a1e1b6c9027b59f">SetContents</reimplements>
        <param>
          <type>int</type>
          <declname>contents</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a8bb2455b712f06b37706571c6cb12aa3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idPhysics_RigidBody::GetContents</definition>
        <argsstring>(int id=-1) const </argsstring>
        <name>GetContents</name>
        <reimplements refid="classid_physics___base_1a33cb3cada27d29286f3166d9261e5228">GetContents</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a27ec3bb02a951a7ea28cd43ba1183ce4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
        <definition>const idBounds&amp; idPhysics_RigidBody::GetBounds</definition>
        <argsstring>(int id=-1) const </argsstring>
        <name>GetBounds</name>
        <reimplements refid="classid_physics___base_1a7d642504c96aadf08357338addae4889">GetBounds</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a3d61d2216ee7383aafd170054cf90f4e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
        <definition>const idBounds&amp; idPhysics_RigidBody::GetAbsBounds</definition>
        <argsstring>(int id=-1) const </argsstring>
        <name>GetAbsBounds</name>
        <reimplements refid="classid_physics___base_1a6888af190525559c1938423350962e7a">GetAbsBounds</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a4f127f3c3a9e8cdcf1ec82dd3ec56d36" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool idPhysics_RigidBody::Evaluate</definition>
        <argsstring>(int timeStepMSec, int endTimeMSec)</argsstring>
        <name>Evaluate</name>
        <reimplements refid="classid_physics___base_1a68e8bb83889f347f77b5b7c0af1df3a0">Evaluate</reimplements>
        <param>
          <type>int</type>
          <declname>timeStepMSec</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endTimeMSec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ad5ee697b8892647b6a5afbb0e11bfcb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::UpdateTime</definition>
        <argsstring>(int endTimeMSec)</argsstring>
        <name>UpdateTime</name>
        <reimplements refid="classid_physics___base_1a57bc63cb5983f055072ff1e3da5c83a2">UpdateTime</reimplements>
        <param>
          <type>int</type>
          <declname>endTimeMSec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a28513679a4a2ff57302d129624dab173" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idPhysics_RigidBody::GetTime</definition>
        <argsstring>(void) const </argsstring>
        <name>GetTime</name>
        <reimplements refid="classid_physics___base_1a5df6d476848ba03d22104cd27ac9acd0">GetTime</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a3e8b9f0c3bd420c991e6d1d6e24d8209" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::GetImpactInfo</definition>
        <argsstring>(const int id, const idVec3 &amp;point, impactInfo_t *info) const </argsstring>
        <name>GetImpactInfo</name>
        <reimplements refid="classid_physics___base_1a2d7c23a0cfba3a82b535f5a88e1c2241">GetImpactInfo</reimplements>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type><ref refid="structimpact_info__s" kindref="compound">impactInfo_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a78b22a3d27f6b9f5c538caf3130fd7db" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::ApplyImpulse</definition>
        <argsstring>(const int id, const idVec3 &amp;point, const idVec3 &amp;impulse)</argsstring>
        <name>ApplyImpulse</name>
        <reimplements refid="classid_physics___base_1a4ab48ead610a476aa0d5485c573c17b4">ApplyImpulse</reimplements>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>impulse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a4343e4051cd8bd1bd8696d8c64f5dcb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::AddForce</definition>
        <argsstring>(const int id, const idVec3 &amp;point, const idVec3 &amp;force)</argsstring>
        <name>AddForce</name>
        <reimplements refid="classid_physics___base_1ad8f420453bd2ebe473c26cda63c574e4">AddForce</reimplements>
        <param>
          <type>const int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>force</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a46bf037931662d2a9e24bc0cdd223d68" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::Activate</definition>
        <argsstring>(void)</argsstring>
        <name>Activate</name>
        <reimplements refid="classid_physics___base_1a0631910fa43a8b62994e4718c2e6ddc5">Activate</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ab5219e7298e14b784148923543d5fa6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::PutToRest</definition>
        <argsstring>(void)</argsstring>
        <name>PutToRest</name>
        <reimplements refid="classid_physics___base_1af6f4016a03919fb7983e6158f555e20c">PutToRest</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1aeb39501be194efdef0227a3860c3e5a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool idPhysics_RigidBody::IsAtRest</definition>
        <argsstring>(void) const </argsstring>
        <name>IsAtRest</name>
        <reimplements refid="classid_physics___base_1adf5fdb18bf2f51f4e9a62c0c3962496c">IsAtRest</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ae5e7281002971fe54547a19d64100561" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idPhysics_RigidBody::GetRestStartTime</definition>
        <argsstring>(void) const </argsstring>
        <name>GetRestStartTime</name>
        <reimplements refid="classid_physics___base_1a573317c8b6147e7c5adba7022b01e3e4">GetRestStartTime</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ae90279f8ad7f6b88562b30fcbb49aecf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool idPhysics_RigidBody::IsPushable</definition>
        <argsstring>(void) const </argsstring>
        <name>IsPushable</name>
        <reimplements refid="classid_physics___base_1acf36457d378524f02a285d4e25f07080">IsPushable</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a542437e6e5e51017a81346c6c4bb26cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::SaveState</definition>
        <argsstring>(void)</argsstring>
        <name>SaveState</name>
        <reimplements refid="classid_physics___base_1abfef1ec167da6780db337a59f6df318b">SaveState</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a125c506a083ddbbf15c45cf7db742f9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::RestoreState</definition>
        <argsstring>(void)</argsstring>
        <name>RestoreState</name>
        <reimplements refid="classid_physics___base_1a2506a696d776e0f4ab7aeb5706a5df93">RestoreState</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1aa70966127aebbbe36ea82a223be52381" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::SetOrigin</definition>
        <argsstring>(const idVec3 &amp;newOrigin, int id=-1)</argsstring>
        <name>SetOrigin</name>
        <reimplements refid="classid_physics___base_1a70d7961cab60fc62ef0ff32af732d51b">SetOrigin</reimplements>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>newOrigin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a47bc083dbe76fdd5719fdc9da084a29f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::SetAxis</definition>
        <argsstring>(const idMat3 &amp;newAxis, int id=-1)</argsstring>
        <name>SetAxis</name>
        <reimplements refid="classid_physics___base_1a4dad199e469655584a79547d3c959ae9">SetAxis</reimplements>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>newAxis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a828025cb04bf987d234edc473c5d5cc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::Translate</definition>
        <argsstring>(const idVec3 &amp;translation, int id=-1)</argsstring>
        <name>Translate</name>
        <reimplements refid="classid_physics___base_1a9bb7ce564e1f8ad77f0003c24c86e54b">Translate</reimplements>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>translation</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a05f34cef53c76e5f656a003e4198a7de" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::Rotate</definition>
        <argsstring>(const idRotation &amp;rotation, int id=-1)</argsstring>
        <name>Rotate</name>
        <reimplements refid="classid_physics___base_1a277197f47e1ef55dd0ddd0e4ed40e93c">Rotate</reimplements>
        <param>
          <type>const <ref refid="classid_rotation" kindref="compound">idRotation</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a01e2738eecc8c2055936603c6534efc2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3&amp; idPhysics_RigidBody::GetOrigin</definition>
        <argsstring>(int id=0) const </argsstring>
        <name>GetOrigin</name>
        <reimplements refid="classid_physics___base_1a6ac21917144fe325bfabab210279286d">GetOrigin</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ad62364a2c5718c5efdb8d1fb71959c60" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
        <definition>const idMat3&amp; idPhysics_RigidBody::GetAxis</definition>
        <argsstring>(int id=0) const </argsstring>
        <name>GetAxis</name>
        <reimplements refid="classid_physics___base_1a061f61210b0e86a74141deb0d3c64b02">GetAxis</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ace9b866dc10ebde6f7f28f7df9ea4a73" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::SetLinearVelocity</definition>
        <argsstring>(const idVec3 &amp;newLinearVelocity, int id=0)</argsstring>
        <name>SetLinearVelocity</name>
        <reimplements refid="classid_physics___base_1a064d14b46eacbd8c578461248c6447bd">SetLinearVelocity</reimplements>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>newLinearVelocity</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ab3f7f79f9021b073be672dc5c8501bc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::SetAngularVelocity</definition>
        <argsstring>(const idVec3 &amp;newAngularVelocity, int id=0)</argsstring>
        <name>SetAngularVelocity</name>
        <reimplements refid="classid_physics___base_1a5060b7c0e5e6b8cab5481ee96faf1ebd">SetAngularVelocity</reimplements>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>newAngularVelocity</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a97655256e8de33f0ef29e8dda0bb5070" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3&amp; idPhysics_RigidBody::GetLinearVelocity</definition>
        <argsstring>(int id=0) const </argsstring>
        <name>GetLinearVelocity</name>
        <reimplements refid="classid_physics___base_1a1bb04a7510edfedbe96faaba2ac389c2">GetLinearVelocity</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ac11259ab08a51f2d42c28fcf735c929e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3&amp; idPhysics_RigidBody::GetAngularVelocity</definition>
        <argsstring>(int id=0) const </argsstring>
        <name>GetAngularVelocity</name>
        <reimplements refid="classid_physics___base_1a415e2df939c32fccb5be0709cd5b2c67">GetAngularVelocity</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a92d3e54f0e448f92e4fa5e7235d57653" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::ClipTranslation</definition>
        <argsstring>(trace_t &amp;results, const idVec3 &amp;translation, const idClipModel *model) const </argsstring>
        <name>ClipTranslation</name>
        <reimplements refid="classid_physics___base_1a5d68ecee1632d33bad82e13bb5a83f4a">ClipTranslation</reimplements>
        <param>
          <type><ref refid="structtrace__s" kindref="compound">trace_t</ref> &amp;</type>
          <declname>results</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>translation</declname>
        </param>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1af267de50ce9091b7e95ed9989d457c23" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::ClipRotation</definition>
        <argsstring>(trace_t &amp;results, const idRotation &amp;rotation, const idClipModel *model) const </argsstring>
        <name>ClipRotation</name>
        <reimplements refid="classid_physics___base_1a490fbebb7ef595a0094fce79929ee8ef">ClipRotation</reimplements>
        <param>
          <type><ref refid="structtrace__s" kindref="compound">trace_t</ref> &amp;</type>
          <declname>results</declname>
        </param>
        <param>
          <type>const <ref refid="classid_rotation" kindref="compound">idRotation</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a6bcf9ba48b6dca691cae6facb6414cc5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int idPhysics_RigidBody::ClipContents</definition>
        <argsstring>(const idClipModel *model) const </argsstring>
        <name>ClipContents</name>
        <reimplements refid="classid_physics___base_1aa0276c508e8e77475ae74757a3688ac4">ClipContents</reimplements>
        <param>
          <type>const <ref refid="classid_clip_model" kindref="compound">idClipModel</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1adf9f1ce90ecd14077c4a79302925c131" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::DisableClip</definition>
        <argsstring>(void)</argsstring>
        <name>DisableClip</name>
        <reimplements refid="classid_physics___base_1aeb85fab7fc687823db9992d77477a1de">DisableClip</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ae356d3cb4ceda055694b890021dacd64" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::EnableClip</definition>
        <argsstring>(void)</argsstring>
        <name>EnableClip</name>
        <reimplements refid="classid_physics___base_1afe4b626a7b78bee2a5fa253c9d445285">EnableClip</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ad64df06095a19c0bc29319067dcc4b4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::UnlinkClip</definition>
        <argsstring>(void)</argsstring>
        <name>UnlinkClip</name>
        <reimplements refid="classid_physics___base_1a3494d7fd367a623c046eada3e7a01af4">UnlinkClip</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a582be3b03ca3215e075c6cff2d23b9b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::LinkClip</definition>
        <argsstring>(void)</argsstring>
        <name>LinkClip</name>
        <reimplements refid="classid_physics___base_1a0f8b1514afb3160d69ce99704a9fc847">LinkClip</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a2cb8c23d38ad09700add09be03009e40" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool idPhysics_RigidBody::EvaluateContacts</definition>
        <argsstring>(void)</argsstring>
        <name>EvaluateContacts</name>
        <reimplements refid="classid_physics___base_1ab9eb83d03417cd2a6c371ab62ca6b6f0">EvaluateContacts</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1aaddc24340cd3893afc5ec86c726f478f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::SetPushed</definition>
        <argsstring>(int deltaTime)</argsstring>
        <name>SetPushed</name>
        <reimplements refid="classid_physics___base_1acfa76e02788bac5bcde53162d68c5db9">SetPushed</reimplements>
        <param>
          <type>int</type>
          <declname>deltaTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="146" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1aa1298e0e5e4f36acf12ee03879812a33" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3&amp; idPhysics_RigidBody::GetPushedLinearVelocity</definition>
        <argsstring>(const int id=0) const </argsstring>
        <name>GetPushedLinearVelocity</name>
        <reimplements refid="classid_physics___base_1af384cca825ba76992c4f461b91a1f444">GetPushedLinearVelocity</reimplements>
        <param>
          <type>const int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a3fdce02c557d9af460a2a08bb81f7bd1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>const idVec3&amp; idPhysics_RigidBody::GetPushedAngularVelocity</definition>
        <argsstring>(const int id=0) const </argsstring>
        <name>GetPushedAngularVelocity</name>
        <reimplements refid="classid_physics___base_1adffd5069de66956869e10d4557f0925d">GetPushedAngularVelocity</reimplements>
        <param>
          <type>const int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a75bb0d5eb4ef68424e1308b28ca17c2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::SetMaster</definition>
        <argsstring>(idEntity *master, const bool orientated)</argsstring>
        <name>SetMaster</name>
        <reimplements refid="classid_physics___base_1a1a70caaf421d2a73aa3a03ffca5d11fb">SetMaster</reimplements>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>master</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>orientated</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a3592efd7d4fc6295f8adc969e3302d0b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::WriteToSnapshot</definition>
        <argsstring>(idBitMsgDelta &amp;msg) const </argsstring>
        <name>WriteToSnapshot</name>
        <reimplements refid="classid_physics___base_1a62ca703f7ad9004e69e09ca99582756d">WriteToSnapshot</reimplements>
        <param>
          <type><ref refid="classid_bit_msg_delta" kindref="compound">idBitMsgDelta</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a9c8e83fcc9142bbd228cc490f23bcec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::ReadFromSnapshot</definition>
        <argsstring>(const idBitMsgDelta &amp;msg)</argsstring>
        <name>ReadFromSnapshot</name>
        <reimplements refid="classid_physics___base_1a54bee9929d92f797ca95c205c6720ca5">ReadFromSnapshot</reimplements>
        <param>
          <type>const <ref refid="classid_bit_msg_delta" kindref="compound">idBitMsgDelta</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="153" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classid_physics___rigid_body_1a771ce0a4cd0a2c02c84cebc24427b138" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend void</type>
        <definition>void RigidBodyDerivatives</definition>
        <argsstring>(const float t, const void *clientData, const float *state, float *derivatives)</argsstring>
        <name>RigidBodyDerivatives</name>
        <param>
          <type>const float</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>clientData</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>derivatives</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="185" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="54" bodyend="74"/>
      </memberdef>
      <memberdef kind="friend" id="classid_physics___rigid_body_1a771ce0a4cd0a2c02c84cebc24427b138" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend void</type>
        <definition>void RigidBodyDerivatives</definition>
        <argsstring>(const float t, const void *clientData, const float *state, float *derivatives)</argsstring>
        <name>RigidBodyDerivatives</name>
        <param>
          <type>const float</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>clientData</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>derivatives</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="185" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="54" bodyend="74"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classid_physics___rigid_body_1afaf4c52949cdaed3321faa2532d951cd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::Integrate</definition>
        <argsstring>(const float deltaTime, rigidBodyPState_t &amp;next)</argsstring>
        <name>Integrate</name>
        <param>
          <type>const float</type>
          <declname>deltaTime</declname>
        </param>
        <param>
          <type><ref refid="structrigid_body_p_state__s" kindref="compound">rigidBodyPState_t</ref> &amp;</type>
          <declname>next</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="186" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="83" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a33afe34091b8dd91661453fde3f640c8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idPhysics_RigidBody::CheckForCollisions</definition>
        <argsstring>(const float deltaTime, rigidBodyPState_t &amp;next, trace_t &amp;collision)</argsstring>
        <name>CheckForCollisions</name>
        <param>
          <type>const float</type>
          <declname>deltaTime</declname>
        </param>
        <param>
          <type><ref refid="structrigid_body_p_state__s" kindref="compound">rigidBodyPState_t</ref> &amp;</type>
          <declname>next</declname>
        </param>
        <param>
          <type><ref refid="structtrace__s" kindref="compound">trace_t</ref> &amp;</type>
          <declname>collision</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="187" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="172" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ad89aca18d31f71cc90802f8ada277716" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idPhysics_RigidBody::CollisionImpulse</definition>
        <argsstring>(const trace_t &amp;collision, idVec3 &amp;impulse)</argsstring>
        <name>CollisionImpulse</name>
        <param>
          <type>const <ref refid="structtrace__s" kindref="compound">trace_t</ref> &amp;</type>
          <declname>collision</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>impulse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="188" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="114" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a7cbd42b7882685518781f737249233fe" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::ContactFriction</definition>
        <argsstring>(float deltaTime)</argsstring>
        <name>ContactFriction</name>
        <param>
          <type>float</type>
          <declname>deltaTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="189" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="217" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1aa43a49d87e8bb2bf93dd7405643e3238" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::DropToFloorAndRest</definition>
        <argsstring>(void)</argsstring>
        <name>DropToFloorAndRest</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="190" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="360" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a47fa767f666f267cf939c43e342a5c30" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idPhysics_RigidBody::TestIfAtRest</definition>
        <argsstring>(void) const </argsstring>
        <name>TestIfAtRest</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="191" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="274" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1af81d45cd2ccde4e1e9d9f84d3e96a703" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::Rest</definition>
        <argsstring>(void)</argsstring>
        <name>Rest</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="192" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="722" bodyend="727"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a9d2e0f6880694e20b0e88ce4370775be" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::DebugDraw</definition>
        <argsstring>(void)</argsstring>
        <name>DebugDraw</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="193" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.cpp" bodystart="406" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1afaf4c52949cdaed3321faa2532d951cd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::Integrate</definition>
        <argsstring>(const float deltaTime, rigidBodyPState_t &amp;next)</argsstring>
        <name>Integrate</name>
        <param>
          <type>const float</type>
          <declname>deltaTime</declname>
        </param>
        <param>
          <type><ref refid="structrigid_body_p_state__s" kindref="compound">rigidBodyPState_t</ref> &amp;</type>
          <declname>next</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="186" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a33afe34091b8dd91661453fde3f640c8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idPhysics_RigidBody::CheckForCollisions</definition>
        <argsstring>(const float deltaTime, rigidBodyPState_t &amp;next, trace_t &amp;collision)</argsstring>
        <name>CheckForCollisions</name>
        <param>
          <type>const float</type>
          <declname>deltaTime</declname>
        </param>
        <param>
          <type><ref refid="structrigid_body_p_state__s" kindref="compound">rigidBodyPState_t</ref> &amp;</type>
          <declname>next</declname>
        </param>
        <param>
          <type><ref refid="structtrace__s" kindref="compound">trace_t</ref> &amp;</type>
          <declname>collision</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1ad89aca18d31f71cc90802f8ada277716" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idPhysics_RigidBody::CollisionImpulse</definition>
        <argsstring>(const trace_t &amp;collision, idVec3 &amp;impulse)</argsstring>
        <name>CollisionImpulse</name>
        <param>
          <type>const <ref refid="structtrace__s" kindref="compound">trace_t</ref> &amp;</type>
          <declname>collision</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>impulse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="188" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a7cbd42b7882685518781f737249233fe" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::ContactFriction</definition>
        <argsstring>(float deltaTime)</argsstring>
        <name>ContactFriction</name>
        <param>
          <type>float</type>
          <declname>deltaTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="189" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1aa43a49d87e8bb2bf93dd7405643e3238" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::DropToFloorAndRest</definition>
        <argsstring>(void)</argsstring>
        <name>DropToFloorAndRest</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a47fa767f666f267cf939c43e342a5c30" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idPhysics_RigidBody::TestIfAtRest</definition>
        <argsstring>(void) const </argsstring>
        <name>TestIfAtRest</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1af81d45cd2ccde4e1e9d9f84d3e96a703" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::Rest</definition>
        <argsstring>(void)</argsstring>
        <name>Rest</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_physics___rigid_body_1a9d2e0f6880694e20b0e88ce4370775be" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idPhysics_RigidBody::DebugDraw</definition>
        <argsstring>(void)</argsstring>
        <name>DebugDraw</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/physics/Physics_RigidBody.h" line="193" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="26231">
        <label>idClass</label>
        <link refid="classid_class"/>
      </node>
      <node id="26229">
        <label>idPhysics_Base</label>
        <link refid="classid_physics___base"/>
        <childnode refid="26230" relation="public-inheritance">
        </childnode>
        <childnode refid="26230" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26228">
        <label>idPhysics_RigidBody</label>
        <link refid="classid_physics___rigid_body"/>
        <childnode refid="26229" relation="public-inheritance">
        </childnode>
        <childnode refid="26229" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26230">
        <label>idPhysics</label>
        <link refid="classid_physics"/>
        <childnode refid="26231" relation="public-inheritance">
        </childnode>
        <childnode refid="26231" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="26261">
        <label>idSoundShader</label>
        <link refid="classid_sound_shader"/>
        <childnode refid="26247" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26259">
        <label>refSound_t</label>
        <link refid="structref_sound__t"/>
        <childnode refid="26260" relation="usage">
          <edgelabel>parms</edgelabel>
        </childnode>
        <childnode refid="26261" relation="usage">
          <edgelabel>shader</edgelabel>
        </childnode>
        <childnode refid="26254" relation="usage">
          <edgelabel>referenceSound</edgelabel>
        </childnode>
        <childnode refid="26245" relation="usage">
          <edgelabel>origin</edgelabel>
        </childnode>
      </node>
      <node id="26242">
        <label>idEntity::entityFlags_s</label>
        <link refid="structid_entity_1_1entity_flags__s"/>
      </node>
      <node id="26235">
        <label>idClass</label>
        <link refid="classid_class"/>
        <childnode refid="26236" relation="usage">
          <edgelabel>Type</edgelabel>
        </childnode>
        <childnode refid="26238" relation="usage">
          <edgelabel>eventCallbacks</edgelabel>
        </childnode>
      </node>
      <node id="26243">
        <label>renderView_s</label>
        <link refid="structrender_view__s"/>
        <childnode refid="26244" relation="usage">
          <edgelabel>viewaxis</edgelabel>
        </childnode>
        <childnode refid="26245" relation="usage">
          <edgelabel>vieworg</edgelabel>
        </childnode>
        <childnode refid="26246" relation="usage">
          <edgelabel>globalMaterial</edgelabel>
        </childnode>
      </node>
      <node id="26238">
        <label>idEventFunc&lt; idClass &gt;</label>
        <link refid="structid_event_func"/>
        <childnode refid="26239" relation="usage">
          <edgelabel>event</edgelabel>
        </childnode>
      </node>
      <node id="26240">
        <label>idEntity</label>
        <link refid="classid_entity"/>
        <childnode refid="26235" relation="public-inheritance">
        </childnode>
        <childnode refid="26235" relation="public-inheritance">
        </childnode>
        <childnode refid="26240" relation="usage">
          <edgelabel>cameraTarget</edgelabel>
        </childnode>
        <childnode refid="26241" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="26242" relation="usage">
          <edgelabel>fl</edgelabel>
        </childnode>
        <childnode refid="26243" relation="usage">
          <edgelabel>renderView</edgelabel>
        </childnode>
        <childnode refid="26249" relation="usage">
          <edgelabel>targets</edgelabel>
        </childnode>
        <childnode refid="26250" relation="usage">
          <edgelabel>spawnNode</edgelabel>
          <edgelabel>snapshotNode</edgelabel>
          <edgelabel>activeNode</edgelabel>
        </childnode>
        <childnode refid="26251" relation="usage">
          <edgelabel>renderEntity</edgelabel>
        </childnode>
        <childnode refid="26258" relation="usage">
          <edgelabel>spawnArgs</edgelabel>
        </childnode>
        <childnode refid="26259" relation="usage">
          <edgelabel>refSound</edgelabel>
        </childnode>
        <childnode refid="26262" relation="usage">
          <edgelabel>scriptObject</edgelabel>
        </childnode>
      </node>
      <node id="26260">
        <label>soundShaderParms_t</label>
        <link refid="structsound_shader_parms__t"/>
      </node>
      <node id="26254">
        <label>idSoundEmitter</label>
        <link refid="classid_sound_emitter"/>
      </node>
      <node id="26246">
        <label>idMaterial</label>
        <link refid="classid_material"/>
        <childnode refid="26247" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26239">
        <label>idEventDef</label>
        <link refid="classid_event_def"/>
      </node>
      <node id="26253">
        <label>idJointMat</label>
        <link refid="classid_joint_mat"/>
      </node>
      <node id="26249">
        <label>idList&lt; idEntityPtr&lt; idEntity &gt; &gt;</label>
        <link refid="classid_list"/>
      </node>
      <node id="26251">
        <label>renderEntity_s</label>
        <link refid="structrender_entity__s"/>
        <childnode refid="26244" relation="usage">
          <edgelabel>axis</edgelabel>
        </childnode>
        <childnode refid="26252" relation="usage">
          <edgelabel>customSkin</edgelabel>
        </childnode>
        <childnode refid="26253" relation="usage">
          <edgelabel>joints</edgelabel>
        </childnode>
        <childnode refid="26243" relation="usage">
          <edgelabel>remoteRenderView</edgelabel>
        </childnode>
        <childnode refid="26254" relation="usage">
          <edgelabel>referenceSound</edgelabel>
        </childnode>
        <childnode refid="26255" relation="usage">
          <edgelabel>hModel</edgelabel>
        </childnode>
        <childnode refid="26256" relation="usage">
          <edgelabel>bounds</edgelabel>
        </childnode>
        <childnode refid="26245" relation="usage">
          <edgelabel>origin</edgelabel>
        </childnode>
        <childnode refid="26251" relation="usage">
          <edgelabel>callback</edgelabel>
        </childnode>
        <childnode refid="26246" relation="usage">
          <edgelabel>customShader</edgelabel>
          <edgelabel>referenceShader</edgelabel>
        </childnode>
        <childnode refid="26257" relation="usage">
          <edgelabel>gui</edgelabel>
        </childnode>
      </node>
      <node id="26263">
        <label>idList&lt; contactInfo_t &gt;</label>
        <link refid="classid_list"/>
      </node>
      <node id="26233">
        <label>idPhysics_Base</label>
        <link refid="classid_physics___base"/>
        <childnode refid="26234" relation="public-inheritance">
        </childnode>
        <childnode refid="26234" relation="public-inheritance">
        </childnode>
        <childnode refid="26240" relation="usage">
          <edgelabel>self</edgelabel>
        </childnode>
        <childnode refid="26249" relation="usage">
          <edgelabel>contactEntities</edgelabel>
        </childnode>
        <childnode refid="26263" relation="usage">
          <edgelabel>contacts</edgelabel>
        </childnode>
        <childnode refid="26245" relation="usage">
          <edgelabel>gravityNormal</edgelabel>
          <edgelabel>gravityVector</edgelabel>
        </childnode>
      </node>
      <node id="26262">
        <label>idScriptObject</label>
        <link refid="classid_script_object"/>
      </node>
      <node id="26256">
        <label>idBounds</label>
        <link refid="classid_bounds"/>
      </node>
      <node id="26244">
        <label>idMat3</label>
        <link refid="classid_mat3"/>
      </node>
      <node id="26257">
        <label>idUserInterface</label>
        <link refid="classid_user_interface"/>
      </node>
      <node id="26248">
        <label>idDeclBase</label>
        <link refid="classid_decl_base"/>
      </node>
      <node id="26237">
        <label>idHierarchy&lt; idTypeInfo &gt;</label>
        <link refid="classid_hierarchy"/>
      </node>
      <node id="26232">
        <label>idPhysics_RigidBody</label>
        <link refid="classid_physics___rigid_body"/>
        <childnode refid="26233" relation="public-inheritance">
        </childnode>
        <childnode refid="26233" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26241">
        <label>idStr</label>
        <link refid="classid_str"/>
      </node>
      <node id="26255">
        <label>idRenderModel</label>
        <link refid="classid_render_model"/>
      </node>
      <node id="26247">
        <label>idDecl</label>
        <link refid="classid_decl"/>
        <childnode refid="26248" relation="usage">
          <edgelabel>base</edgelabel>
        </childnode>
      </node>
      <node id="26245">
        <label>idVec3</label>
        <link refid="classid_vec3"/>
      </node>
      <node id="26234">
        <label>idPhysics</label>
        <link refid="classid_physics"/>
        <childnode refid="26235" relation="public-inheritance">
        </childnode>
        <childnode refid="26235" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26250">
        <label>idLinkList&lt; idEntity &gt;</label>
        <link refid="classid_link_list"/>
      </node>
      <node id="26258">
        <label>idDict</label>
        <link refid="classid_dict"/>
      </node>
      <node id="26252">
        <label>idDeclSkin</label>
        <link refid="classid_decl_skin"/>
        <childnode refid="26247" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26236">
        <label>idTypeInfo</label>
        <link refid="classid_type_info"/>
        <childnode refid="26236" relation="usage">
          <edgelabel>next</edgelabel>
          <edgelabel>super</edgelabel>
        </childnode>
        <childnode refid="26237" relation="usage">
          <edgelabel>node</edgelabel>
        </childnode>
        <childnode refid="26238" relation="usage">
          <edgelabel>eventCallbacks</edgelabel>
        </childnode>
        <childnode refid="26235" relation="usage">
          <edgelabel>CreateInstance</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" line="66" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/physics/Physics_RigidBody.h" bodystart="66" bodyend="194"/>
    <listofallmembers>
      <member refid="classid_physics_1a2904b8d7d7b3f2973802d4b3397816f8" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>ABSTRACT_PROTOTYPE</name></member>
      <member refid="classid_physics_1a2904b8d7d7b3f2973802d4b3397816f8" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>ABSTRACT_PROTOTYPE</name></member>
      <member refid="classid_physics___rigid_body_1a46bf037931662d2a9e24bc0cdd223d68" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>Activate</name></member>
      <member refid="classid_physics___rigid_body_1a46bf037931662d2a9e24bc0cdd223d68" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>Activate</name></member>
      <member refid="classid_physics___base_1aa9bb8305faea4dd9034372e429811678" prot="protected" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>ActivateContactEntities</name></member>
      <member refid="classid_physics___base_1aa9bb8305faea4dd9034372e429811678" prot="protected" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>ActivateContactEntities</name></member>
      <member refid="classid_physics___base_1a9f123a67dca0979f266cdb5ca9753bf7" prot="protected" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>AddContactEntitiesForContacts</name></member>
      <member refid="classid_physics___base_1a9f123a67dca0979f266cdb5ca9753bf7" prot="protected" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>AddContactEntitiesForContacts</name></member>
      <member refid="classid_physics___base_1a0b822895dea8a3eadad02f0152b02a11" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>AddContactEntity</name></member>
      <member refid="classid_physics___base_1a0b822895dea8a3eadad02f0152b02a11" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>AddContactEntity</name></member>
      <member refid="classid_physics___rigid_body_1a4343e4051cd8bd1bd8696d8c64f5dcb4" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>AddForce</name></member>
      <member refid="classid_physics___rigid_body_1a4343e4051cd8bd1bd8696d8c64f5dcb4" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>AddForce</name></member>
      <member refid="classid_physics___base_1a1ce4ffdea33f423c9e7c18e7e5577c9d" prot="protected" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>AddGroundContacts</name></member>
      <member refid="classid_physics___base_1a1ce4ffdea33f423c9e7c18e7e5577c9d" prot="protected" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>AddGroundContacts</name></member>
      <member refid="classid_physics___rigid_body_1a8466672471503442ec8485b1f736c4ce" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>angularFriction</name></member>
      <member refid="classid_physics___rigid_body_1a78b22a3d27f6b9f5c538caf3130fd7db" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>ApplyImpulse</name></member>
      <member refid="classid_physics___rigid_body_1a78b22a3d27f6b9f5c538caf3130fd7db" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>ApplyImpulse</name></member>
      <member refid="classid_physics___rigid_body_1a873f062806893b0441c59aaf2fd27a96" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>bouncyness</name></member>
      <member refid="classid_class_1a39284ab290b3303f923cb647fefb0443" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>CallSpawn</name></member>
      <member refid="classid_class_1a39284ab290b3303f923cb647fefb0443" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>CallSpawn</name></member>
      <member refid="classid_class_1a7cf590c676b38adea6ff199b72c4e46f" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>CancelEvents</name></member>
      <member refid="classid_class_1a7cf590c676b38adea6ff199b72c4e46f" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>CancelEvents</name></member>
      <member refid="classid_physics___rigid_body_1aa8dfec278e752e8c6fb64d52bc441989" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>centerOfMass</name></member>
      <member refid="classid_physics___rigid_body_1a33afe34091b8dd91661453fde3f640c8" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>CheckForCollisions</name></member>
      <member refid="classid_physics___rigid_body_1a33afe34091b8dd91661453fde3f640c8" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>CheckForCollisions</name></member>
      <member refid="classid_physics___rigid_body_1ac85e6b5552cd16e62a9fe1a325900d05" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>CLASS_PROTOTYPE</name></member>
      <member refid="classid_physics___rigid_body_1ac85e6b5552cd16e62a9fe1a325900d05" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>CLASS_PROTOTYPE</name></member>
      <member refid="classid_physics___base_1a5d7eef5817a612d03295e1fd530b74de" prot="public" virt="non-virtual" ambiguityscope="idPhysics_Base::"><scope>idPhysics_RigidBody</scope><name>CLASS_PROTOTYPE</name></member>
      <member refid="classid_physics___base_1a16b0bd9758c6dea37b59934927dd6ea6" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>ClearContacts</name></member>
      <member refid="classid_physics___base_1a16b0bd9758c6dea37b59934927dd6ea6" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>ClearContacts</name></member>
      <member refid="classid_physics___rigid_body_1a6bcf9ba48b6dca691cae6facb6414cc5" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>ClipContents</name></member>
      <member refid="classid_physics___rigid_body_1a6bcf9ba48b6dca691cae6facb6414cc5" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>ClipContents</name></member>
      <member refid="classid_physics___base_1a3ebc7d969885db541110a0ba251006b0" prot="protected" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>clipMask</name></member>
      <member refid="classid_physics___rigid_body_1ac96559e7bf031c964501b6ffa6c00df2" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>clipModel</name></member>
      <member refid="classid_physics___rigid_body_1af267de50ce9091b7e95ed9989d457c23" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>ClipRotation</name></member>
      <member refid="classid_physics___rigid_body_1af267de50ce9091b7e95ed9989d457c23" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>ClipRotation</name></member>
      <member refid="classid_physics___rigid_body_1a92d3e54f0e448f92e4fa5e7235d57653" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>ClipTranslation</name></member>
      <member refid="classid_physics___rigid_body_1a92d3e54f0e448f92e4fa5e7235d57653" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>ClipTranslation</name></member>
      <member refid="classid_physics___rigid_body_1ad89aca18d31f71cc90802f8ada277716" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>CollisionImpulse</name></member>
      <member refid="classid_physics___rigid_body_1ad89aca18d31f71cc90802f8ada277716" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>CollisionImpulse</name></member>
      <member refid="classid_physics___base_1a6073eb89e23712ed185b2aa271362601" prot="protected" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>contactEntities</name></member>
      <member refid="classid_physics___rigid_body_1a526a33c590bfa3df76d974dcdd684173" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>contactFriction</name></member>
      <member refid="classid_physics___rigid_body_1a7cbd42b7882685518781f737249233fe" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>ContactFriction</name></member>
      <member refid="classid_physics___rigid_body_1a7cbd42b7882685518781f737249233fe" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>ContactFriction</name></member>
      <member refid="classid_physics___base_1a4afb91d6f5a39eb38877a945d805b666" prot="protected" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>contacts</name></member>
      <member refid="classid_class_1aef9a17d3847d8cc27174e618a9e63fec" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>CreateInstance</name></member>
      <member refid="classid_class_1af15da9143dfb04760e1ad309d0a739c8" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>CreateInstance</name></member>
      <member refid="classid_class_1a90a0350a49f5aec1b7944630e9635f60" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>CreateInstance</name></member>
      <member refid="classid_class_1af0beb6afc6c719fcc5d6d596c0b5dbce" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>CreateInstance</name></member>
      <member refid="classid_physics___rigid_body_1a1b459a04c55ac39bccf1dce519cb6e4e" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>current</name></member>
      <member refid="classid_physics___rigid_body_1a9d2e0f6880694e20b0e88ce4370775be" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>DebugDraw</name></member>
      <member refid="classid_physics___rigid_body_1a9d2e0f6880694e20b0e88ce4370775be" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>DebugDraw</name></member>
      <member refid="classid_physics___rigid_body_1adf9f1ce90ecd14077c4a79302925c131" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>DisableClip</name></member>
      <member refid="classid_physics___rigid_body_1adf9f1ce90ecd14077c4a79302925c131" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>DisableClip</name></member>
      <member refid="classid_physics___rigid_body_1a518b1b1d5aaf1535092d5d6cc84789bc" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>DisableImpact</name></member>
      <member refid="classid_physics___rigid_body_1a518b1b1d5aaf1535092d5d6cc84789bc" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>DisableImpact</name></member>
      <member refid="classid_class_1a1e808d0b267750a5eb6def058921988e" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>DisplayInfo_f</name></member>
      <member refid="classid_class_1abcc05dad3a0a605c2f34454a2a200a6e" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>DisplayInfo_f</name></member>
      <member refid="classid_physics___base_1ab19db6412a9557916aa24c1cb542ce1a" prot="protected" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>DrawVelocity</name></member>
      <member refid="classid_physics___base_1ab19db6412a9557916aa24c1cb542ce1a" prot="protected" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>DrawVelocity</name></member>
      <member refid="classid_physics___rigid_body_1a1bcc92a6f83af6fd10f2bf7e34405689" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>DropToFloor</name></member>
      <member refid="classid_physics___rigid_body_1a1bcc92a6f83af6fd10f2bf7e34405689" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>DropToFloor</name></member>
      <member refid="classid_physics___rigid_body_1ad06912c87d59beed1659742afa732b6a" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>dropToFloor</name></member>
      <member refid="classid_physics___rigid_body_1aa43a49d87e8bb2bf93dd7405643e3238" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>DropToFloorAndRest</name></member>
      <member refid="classid_physics___rigid_body_1aa43a49d87e8bb2bf93dd7405643e3238" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>DropToFloorAndRest</name></member>
      <member refid="classid_physics___rigid_body_1ae356d3cb4ceda055694b890021dacd64" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>EnableClip</name></member>
      <member refid="classid_physics___rigid_body_1ae356d3cb4ceda055694b890021dacd64" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>EnableClip</name></member>
      <member refid="classid_physics___rigid_body_1afe2d111a46aa7cf7b7b38784d7c937c3" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>EnableImpact</name></member>
      <member refid="classid_physics___rigid_body_1afe2d111a46aa7cf7b7b38784d7c937c3" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>EnableImpact</name></member>
      <member refid="classid_physics___rigid_body_1a4f127f3c3a9e8cdcf1ec82dd3ec56d36" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>Evaluate</name></member>
      <member refid="classid_physics___rigid_body_1a4f127f3c3a9e8cdcf1ec82dd3ec56d36" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>Evaluate</name></member>
      <member refid="classid_physics___rigid_body_1a2cb8c23d38ad09700add09be03009e40" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>EvaluateContacts</name></member>
      <member refid="classid_physics___rigid_body_1a2cb8c23d38ad09700add09be03009e40" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>EvaluateContacts</name></member>
      <member refid="classid_class_1a746516c6f1ce54dfb6d046ae8517863b" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>Event_Remove</name></member>
      <member refid="classid_class_1a746516c6f1ce54dfb6d046ae8517863b" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>Event_Remove</name></member>
      <member refid="classid_class_1a7873f9bca2ac9b04d44764e4daa70ad5" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>eventCallbacks</name></member>
      <member refid="classid_class_1acd5d3a153b040060c1d79a7bc441ecfa" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>FindUninitializedMemory</name></member>
      <member refid="classid_class_1acd5d3a153b040060c1d79a7bc441ecfa" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>FindUninitializedMemory</name></member>
      <member refid="classid_physics___rigid_body_1a38f5587e8980058f17b57b84e4b780f6" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetAbsBounds</name></member>
      <member refid="classid_physics___rigid_body_1a3d61d2216ee7383aafd170054cf90f4e" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetAbsBounds</name></member>
      <member refid="classid_physics___base_1affb89ba003c6fde4f376b3ad86a2a648" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetAngularEndTime</name></member>
      <member refid="classid_physics___base_1affb89ba003c6fde4f376b3ad86a2a648" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetAngularEndTime</name></member>
      <member refid="classid_physics___rigid_body_1afcd3832d998a8a023490232937c7e278" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetAngularVelocity</name></member>
      <member refid="classid_physics___rigid_body_1ac11259ab08a51f2d42c28fcf735c929e" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetAngularVelocity</name></member>
      <member refid="classid_physics___rigid_body_1a0a19163b3f77f0bde137f00e54e8e7de" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetAxis</name></member>
      <member refid="classid_physics___rigid_body_1ad62364a2c5718c5efdb8d1fb71959c60" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetAxis</name></member>
      <member refid="classid_physics___base_1a756b9a94869efb6cfd2772848a826816" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetBlockingEntity</name></member>
      <member refid="classid_physics___base_1a9c47244f88e6899c1d23d773f0b14b6f" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetBlockingEntity</name></member>
      <member refid="classid_physics___base_1a206073bba90fdfabb70f51c634d9761a" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetBlockingInfo</name></member>
      <member refid="classid_physics___base_1a790dfb4c3d63af82de6bccec2aebb644" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetBlockingInfo</name></member>
      <member refid="classid_physics___rigid_body_1ab73b2d274312d479858e3e75e4b3f384" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetBounds</name></member>
      <member refid="classid_physics___rigid_body_1a27ec3bb02a951a7ea28cd43ba1183ce4" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetBounds</name></member>
      <member refid="classid_class_1a9ac01fd82cb27d90e065151dad7b3f57" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>GetClass</name></member>
      <member refid="classid_class_1a2fd37bdd12da7a6405bbe4fa985d8a90" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>GetClass</name></member>
      <member refid="classid_class_1aaf010933354d3ab55c938d09beaefb70" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>GetClassname</name></member>
      <member refid="classid_class_1a1b3ea8a396a4642e0d523b8e0cb9f090" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>GetClassname</name></member>
      <member refid="classid_physics___base_1abcb6ed9fc12a6a447e3b2974a5f5cfde" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetClipMask</name></member>
      <member refid="classid_physics___base_1abcb6ed9fc12a6a447e3b2974a5f5cfde" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetClipMask</name></member>
      <member refid="classid_physics___rigid_body_1af2cef4da5a992bc39639f45d90d0900d" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetClipModel</name></member>
      <member refid="classid_physics___rigid_body_1a46d1dd211d8303e00d67b34da5756c1c" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetClipModel</name></member>
      <member refid="classid_physics___base_1a965dc2249da49f64230118a862742515" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetContact</name></member>
      <member refid="classid_physics___base_1aa41a26a20ade34f59525914b849ef556" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetContact</name></member>
      <member refid="classid_physics___rigid_body_1a8bb2455b712f06b37706571c6cb12aa3" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetContents</name></member>
      <member refid="classid_physics___rigid_body_1a8bb2455b712f06b37706571c6cb12aa3" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetContents</name></member>
      <member refid="classid_physics___base_1ae8bc6192c60fa87fd6f57aadb757866a" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetGravity</name></member>
      <member refid="classid_physics___base_1a2679f65747e6c8078e17554cadf44dc1" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetGravity</name></member>
      <member refid="classid_physics___base_1aa0495c925db8011432767326b5bddd31" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetGravityNormal</name></member>
      <member refid="classid_physics___base_1abc7d16f57934012ea517046238e16fca" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetGravityNormal</name></member>
      <member refid="classid_physics___rigid_body_1a3e8b9f0c3bd420c991e6d1d6e24d8209" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetImpactInfo</name></member>
      <member refid="classid_physics___rigid_body_1a3e8b9f0c3bd420c991e6d1d6e24d8209" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetImpactInfo</name></member>
      <member refid="classid_physics___base_1aa28440e55de3dfb916b6253fcf7982e3" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetLinearEndTime</name></member>
      <member refid="classid_physics___base_1aa28440e55de3dfb916b6253fcf7982e3" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetLinearEndTime</name></member>
      <member refid="classid_physics___rigid_body_1a8ee00a432438db08e75a57bbaeef6cf5" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetLinearVelocity</name></member>
      <member refid="classid_physics___rigid_body_1a97655256e8de33f0ef29e8dda0bb5070" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetLinearVelocity</name></member>
      <member refid="classid_physics___rigid_body_1a6849551d0a9d20767b40fbc17ec2bd08" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetMass</name></member>
      <member refid="classid_physics___rigid_body_1a6849551d0a9d20767b40fbc17ec2bd08" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetMass</name></member>
      <member refid="classid_physics___rigid_body_1a8185940ef4ae2820e02b48c933c975e4" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetNumClipModels</name></member>
      <member refid="classid_physics___rigid_body_1a8185940ef4ae2820e02b48c933c975e4" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetNumClipModels</name></member>
      <member refid="classid_physics___base_1a5e301c7b5acf30df1f6a3cb9d3599729" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetNumContacts</name></member>
      <member refid="classid_physics___base_1a5e301c7b5acf30df1f6a3cb9d3599729" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetNumContacts</name></member>
      <member refid="classid_class_1a0b1f5ff97e7101384e1ca978fbde9878" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>GetNumTypes</name></member>
      <member refid="classid_class_1a0b1f5ff97e7101384e1ca978fbde9878" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>GetNumTypes</name></member>
      <member refid="classid_physics___rigid_body_1ab6d36df436dfa974f3b666530eb1c2b5" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetOrigin</name></member>
      <member refid="classid_physics___rigid_body_1a01e2738eecc8c2055936603c6534efc2" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetOrigin</name></member>
      <member refid="classid_physics___rigid_body_1a96cc20abdcbfa240af0a5987992122b2" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetPushedAngularVelocity</name></member>
      <member refid="classid_physics___rigid_body_1a3fdce02c557d9af460a2a08bb81f7bd1" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetPushedAngularVelocity</name></member>
      <member refid="classid_physics___rigid_body_1ac0d6ee52c3a25f4a8cd22ad5305bf802" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetPushedLinearVelocity</name></member>
      <member refid="classid_physics___rigid_body_1aa1298e0e5e4f36acf12ee03879812a33" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetPushedLinearVelocity</name></member>
      <member refid="classid_physics___rigid_body_1ae5e7281002971fe54547a19d64100561" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetRestStartTime</name></member>
      <member refid="classid_physics___rigid_body_1ae5e7281002971fe54547a19d64100561" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetRestStartTime</name></member>
      <member refid="classid_class_1a272cbc9f1eeb09ec9f524b2d9948945a" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>GetSuperclass</name></member>
      <member refid="classid_class_1a250ad44de415ebe4c6ee6af859978e98" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>GetSuperclass</name></member>
      <member refid="classid_physics___rigid_body_1a28513679a4a2ff57302d129624dab173" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetTime</name></member>
      <member refid="classid_physics___rigid_body_1a28513679a4a2ff57302d129624dab173" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetTime</name></member>
      <member refid="classid_class_1ae1e4a1553a64224e101467819ceb5086" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetType</name></member>
      <member refid="classid_class_1a4581fc61c1e64c22928a4c4096c5a47b" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>GetType</name></member>
      <member refid="classid_class_1a68f8759cc5b307eee3dca1dc38402b2d" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>GetType</name></member>
      <member refid="classid_class_1a3662d6404c00a84bee44be1d4d0d3b42" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>GetType</name></member>
      <member refid="classid_class_1a6981e636da3bb171b209f773ff5c579f" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>GetTypeNumBits</name></member>
      <member refid="classid_class_1a6981e636da3bb171b209f773ff5c579f" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>GetTypeNumBits</name></member>
      <member refid="classid_physics___base_1a0cf3a7bb3df1f5fa29b7313fb50bfc3d" prot="protected" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>gravityNormal</name></member>
      <member refid="classid_physics___base_1a2faa320bcff1c6052dc1fa30e2595866" prot="protected" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>gravityVector</name></member>
      <member refid="classid_physics___base_1a3fd59d57ddc623c1d23df2b45ad6b1ec" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>HasGroundContacts</name></member>
      <member refid="classid_physics___base_1a3fd59d57ddc623c1d23df2b45ad6b1ec" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>HasGroundContacts</name></member>
      <member refid="classid_physics___rigid_body_1a47bba6dd1608b1e5310a9f456b041d68" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>hasMaster</name></member>
      <member refid="classid_physics___base_1af74b33c815b5ed40bb108fed93120f3c" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>idPhysics_Base</name></member>
      <member refid="classid_physics___base_1af74b33c815b5ed40bb108fed93120f3c" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>idPhysics_Base</name></member>
      <member refid="classid_physics___rigid_body_1a677e9ed3ecaf5d3de236a973b10265ac" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>idPhysics_RigidBody</name></member>
      <member refid="classid_physics___rigid_body_1a677e9ed3ecaf5d3de236a973b10265ac" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>idPhysics_RigidBody</name></member>
      <member refid="classid_physics___rigid_body_1a643b332a6aa5f632e363789e8cc7bfd0" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>inertiaTensor</name></member>
      <member refid="classid_class_1a477e1abd1ec413bb1e201cfe14961bdf" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>Init</name></member>
      <member refid="classid_class_1a09bc718f8fa432d081a010c393431e86" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>Init</name></member>
      <member refid="classid_physics___rigid_body_1afaf4c52949cdaed3321faa2532d951cd" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>Integrate</name></member>
      <member refid="classid_physics___rigid_body_1afaf4c52949cdaed3321faa2532d951cd" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>Integrate</name></member>
      <member refid="classid_physics___rigid_body_1ac4663f930a2d69acf978c17f1af884eb" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>integrator</name></member>
      <member refid="classid_physics___rigid_body_1ae00ba1faa48953de63dcbf2baed81569" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>inverseInertiaTensor</name></member>
      <member refid="classid_physics___rigid_body_1a55beb6b31d319e3231c0e2796177bad6" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>inverseMass</name></member>
      <member refid="classid_physics___rigid_body_1aeb39501be194efdef0227a3860c3e5a2" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>IsAtRest</name></member>
      <member refid="classid_physics___rigid_body_1aeb39501be194efdef0227a3860c3e5a2" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>IsAtRest</name></member>
      <member refid="classid_physics___base_1a969fc5a622df60f1510f5b4f01fa88dc" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>IsGroundClipModel</name></member>
      <member refid="classid_physics___base_1a969fc5a622df60f1510f5b4f01fa88dc" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>IsGroundClipModel</name></member>
      <member refid="classid_physics___base_1a07d038db013f97e5ae34b25a98d52730" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>IsGroundEntity</name></member>
      <member refid="classid_physics___base_1a07d038db013f97e5ae34b25a98d52730" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>IsGroundEntity</name></member>
      <member refid="classid_physics___rigid_body_1a006508713e5cf8cc9b06e0d20ff2ce1a" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>isOrientated</name></member>
      <member refid="classid_physics___base_1a9a62b7f2b473c6a202192b2ae43cc2ab" prot="protected" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>IsOutsideWorld</name></member>
      <member refid="classid_physics___base_1a9a62b7f2b473c6a202192b2ae43cc2ab" prot="protected" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>IsOutsideWorld</name></member>
      <member refid="classid_physics___rigid_body_1ae90279f8ad7f6b88562b30fcbb49aecf" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>IsPushable</name></member>
      <member refid="classid_physics___rigid_body_1ae90279f8ad7f6b88562b30fcbb49aecf" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>IsPushable</name></member>
      <member refid="classid_class_1a3514bbccebcac499ac15083bb2a67487" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>IsType</name></member>
      <member refid="classid_class_1a44af143b246636c3e6f43aebad05b6d6" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>IsType</name></member>
      <member refid="classid_physics___rigid_body_1a9a10c7d147f5b5b7f88cb9feb366a2f6" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>linearFriction</name></member>
      <member refid="classid_physics___rigid_body_1a582be3b03ca3215e075c6cff2d23b9b7" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>LinkClip</name></member>
      <member refid="classid_physics___rigid_body_1a582be3b03ca3215e075c6cff2d23b9b7" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>LinkClip</name></member>
      <member refid="classid_class_1a4bae32c6569ee5b7f27e5cd5a4c93eab" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>ListClasses_f</name></member>
      <member refid="classid_class_1ad5f3b0730c302ad9f74e35d94274ad34" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>ListClasses_f</name></member>
      <member refid="classid_physics___rigid_body_1a2c1a716aff55390bee0458bba4fff41c" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>mass</name></member>
      <member refid="classid_physics___rigid_body_1ad8b75e56363ae7a266eca8f9f1bf681a" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>noContact</name></member>
      <member refid="classid_physics___rigid_body_1ae185e3444d7e32af153e06cb8dc19521" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>NoContact</name></member>
      <member refid="classid_physics___rigid_body_1ae185e3444d7e32af153e06cb8dc19521" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>NoContact</name></member>
      <member refid="classid_physics___rigid_body_1afda4cc2bffec075e9efe3eb0e036fad3" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>noImpact</name></member>
      <member refid="classid_class_1a039b8531aa3f54ab164066361aa51bac" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>operator delete</name></member>
      <member refid="classid_class_1a9154911c956031443c4a177434a7c951" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>operator delete</name></member>
      <member refid="classid_class_1a039b8531aa3f54ab164066361aa51bac" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>operator delete</name></member>
      <member refid="classid_class_1a9154911c956031443c4a177434a7c951" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>operator delete</name></member>
      <member refid="classid_class_1aa56d622a26b2984a1507446905237a5e" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>operator new</name></member>
      <member refid="classid_class_1a72f2d16d9ac043833e32bc734e1e8173" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>operator new</name></member>
      <member refid="classid_class_1a11843e3263fac01b39f2e738a08d885e" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>operator new</name></member>
      <member refid="classid_class_1a3dbb763aa8a408c7dc80beab9edaadd5" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>operator new</name></member>
      <member refid="classid_class_1a4e1bee4c8c95b22799f58284785ea45d" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a79ff2ce28802016d22c52b575732468c" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a4d532e97b9b8c8528107509486f399aa" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1aeabbc3155ac6c991b288f874a313f4c6" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1af489f280656236ffda55cf31e28a1458" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a3bf07e2d8d295cf61856d9fd26f5ba0b" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1ab1c59135543538e7507590761864c054" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a269276b4a60c83e6678b4308b3b72afe" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a2cdfe8eb844ec5a8881f6e5861dff198" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a4e1bee4c8c95b22799f58284785ea45d" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a79ff2ce28802016d22c52b575732468c" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a4d532e97b9b8c8528107509486f399aa" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1aeabbc3155ac6c991b288f874a313f4c6" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1af489f280656236ffda55cf31e28a1458" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a3bf07e2d8d295cf61856d9fd26f5ba0b" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1ab1c59135543538e7507590761864c054" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a269276b4a60c83e6678b4308b3b72afe" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a2cdfe8eb844ec5a8881f6e5861dff198" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a44dd1c98e3a3067301cccd467424e1fb" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a6aa307dcafd72a277e1b0ba7e7e86313" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a06dfecc610d58cfa6c9a714b41f5e500" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a57d88fe874e7fce62ab80de4e9bac4d1" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a90d5e0e78a3f2ab541f2de7842fbd25c" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a78e7ad3f071bca22b371033e074dcb95" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a66d99ca51730aaf6151aa65e6e891dad" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a8251d21ac61b4b5bf71865c5daedecb3" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a0f023d36142f56c506f3de44bcb88a60" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a44dd1c98e3a3067301cccd467424e1fb" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a6aa307dcafd72a277e1b0ba7e7e86313" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a06dfecc610d58cfa6c9a714b41f5e500" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a57d88fe874e7fce62ab80de4e9bac4d1" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a90d5e0e78a3f2ab541f2de7842fbd25c" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a78e7ad3f071bca22b371033e074dcb95" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a66d99ca51730aaf6151aa65e6e891dad" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a8251d21ac61b4b5bf71865c5daedecb3" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a0f023d36142f56c506f3de44bcb88a60" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a2730cf06c2248d033d3331393690d465" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a41ebdd2ed60bad555b8040af1468dd5e" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1ae1688cd389fea365f91310fd8f0fbdc1" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a682126d778da71c1d61c350ef1383cb8" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1aacfd744269d9a43b3055d4403674a261" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1abd8938dad93fdc7aa9cb90d84f81541b" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a804fc083a766317b62978b9f4f1de2f3" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1af3a58075c898bc5018cce41a6840a3eb" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a925bdbdc9aa6d61b6c74a0e17393007b" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a2730cf06c2248d033d3331393690d465" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a41ebdd2ed60bad555b8040af1468dd5e" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1ae1688cd389fea365f91310fd8f0fbdc1" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a682126d778da71c1d61c350ef1383cb8" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1aacfd744269d9a43b3055d4403674a261" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1abd8938dad93fdc7aa9cb90d84f81541b" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a804fc083a766317b62978b9f4f1de2f3" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1af3a58075c898bc5018cce41a6840a3eb" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a925bdbdc9aa6d61b6c74a0e17393007b" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a913781fd6276d5d821999c206c784505" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>ProcessEventArgPtr</name></member>
      <member refid="classid_class_1a913781fd6276d5d821999c206c784505" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>ProcessEventArgPtr</name></member>
      <member refid="classid_physics___rigid_body_1ab5219e7298e14b784148923543d5fa6b" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>PutToRest</name></member>
      <member refid="classid_physics___rigid_body_1ab5219e7298e14b784148923543d5fa6b" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>PutToRest</name></member>
      <member refid="classid_physics___rigid_body_1a9c8e83fcc9142bbd228cc490f23bcec0" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>ReadFromSnapshot</name></member>
      <member refid="classid_physics___rigid_body_1a9c8e83fcc9142bbd228cc490f23bcec0" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>ReadFromSnapshot</name></member>
      <member refid="classid_physics___base_1af9d3ef9f8c72406f8dfd0488bf4bf43a" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>RemoveContactEntity</name></member>
      <member refid="classid_physics___base_1af9d3ef9f8c72406f8dfd0488bf4bf43a" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>RemoveContactEntity</name></member>
      <member refid="classid_class_1ab8459ec829b2e016db6d2b13d184917d" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>RespondsTo</name></member>
      <member refid="classid_class_1ab135cc5b1099727aeb0710d169ee641f" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>RespondsTo</name></member>
      <member refid="classid_physics___rigid_body_1af81d45cd2ccde4e1e9d9f84d3e96a703" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>Rest</name></member>
      <member refid="classid_physics___rigid_body_1af81d45cd2ccde4e1e9d9f84d3e96a703" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>Rest</name></member>
      <member refid="classid_physics___rigid_body_1a4e88df206e30b4ab25a40d0861f7763c" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>Restore</name></member>
      <member refid="classid_physics___rigid_body_1a4e88df206e30b4ab25a40d0861f7763c" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>Restore</name></member>
      <member refid="classid_physics___rigid_body_1a125c506a083ddbbf15c45cf7db742f9e" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>RestoreState</name></member>
      <member refid="classid_physics___rigid_body_1a125c506a083ddbbf15c45cf7db742f9e" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>RestoreState</name></member>
      <member refid="classid_physics___rigid_body_1a771ce0a4cd0a2c02c84cebc24427b138" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>RigidBodyDerivatives</name></member>
      <member refid="classid_physics___rigid_body_1a771ce0a4cd0a2c02c84cebc24427b138" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>RigidBodyDerivatives</name></member>
      <member refid="classid_physics___rigid_body_1a05f34cef53c76e5f656a003e4198a7de" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>Rotate</name></member>
      <member refid="classid_physics___rigid_body_1a05f34cef53c76e5f656a003e4198a7de" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>Rotate</name></member>
      <member refid="classid_physics___rigid_body_1ac563e17c717983ab36a6767669b465f2" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>Save</name></member>
      <member refid="classid_physics___rigid_body_1ac563e17c717983ab36a6767669b465f2" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>Save</name></member>
      <member refid="classid_physics___rigid_body_1a3d0482b2ee2c1d82f160ce6f82f7161a" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>saved</name></member>
      <member refid="classid_physics___rigid_body_1a542437e6e5e51017a81346c6c4bb26cd" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>SaveState</name></member>
      <member refid="classid_physics___rigid_body_1a542437e6e5e51017a81346c6c4bb26cd" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>SaveState</name></member>
      <member refid="classid_physics___base_1ada002093b0a9dc08bb8bb7f1dddb1adc" prot="protected" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>self</name></member>
      <member refid="classid_physics___rigid_body_1ab3f7f79f9021b073be672dc5c8501bc3" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>SetAngularVelocity</name></member>
      <member refid="classid_physics___rigid_body_1ab3f7f79f9021b073be672dc5c8501bc3" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>SetAngularVelocity</name></member>
      <member refid="classid_physics___rigid_body_1a47bc083dbe76fdd5719fdc9da084a29f" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>SetAxis</name></member>
      <member refid="classid_physics___rigid_body_1a47bc083dbe76fdd5719fdc9da084a29f" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>SetAxis</name></member>
      <member refid="classid_physics___rigid_body_1aa07c0abf0a3c81ac5eb0fd28ee7ad93e" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>SetBouncyness</name></member>
      <member refid="classid_physics___rigid_body_1aa07c0abf0a3c81ac5eb0fd28ee7ad93e" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>SetBouncyness</name></member>
      <member refid="classid_physics_1ae52890530331a67139263e6af3397899" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>SetClipBox</name></member>
      <member refid="classid_physics_1ac74fac665cf900d7d9e9fc04d43ddfc1" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>SetClipBox</name></member>
      <member refid="classid_physics___base_1aaf043cdb5e4f407a44678acf8d08e6f2" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>SetClipMask</name></member>
      <member refid="classid_physics___base_1aaf043cdb5e4f407a44678acf8d08e6f2" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>SetClipMask</name></member>
      <member refid="classid_physics___rigid_body_1a65d6856d268631d5ad84ed04aec0f2bc" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>SetClipModel</name></member>
      <member refid="classid_physics___rigid_body_1a65d6856d268631d5ad84ed04aec0f2bc" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>SetClipModel</name></member>
      <member refid="classid_physics___rigid_body_1ac6ae89e557e9681e31a1eb2f0d86bdbf" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>SetContents</name></member>
      <member refid="classid_physics___rigid_body_1ac6ae89e557e9681e31a1eb2f0d86bdbf" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>SetContents</name></member>
      <member refid="classid_physics___rigid_body_1a3ae777331a37121db076edb3537a8c00" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>SetFriction</name></member>
      <member refid="classid_physics___rigid_body_1a3ae777331a37121db076edb3537a8c00" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>SetFriction</name></member>
      <member refid="classid_physics___base_1ad73661fe7e1092f31a05a216afb79492" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>SetGravity</name></member>
      <member refid="classid_physics___base_1ad73661fe7e1092f31a05a216afb79492" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>SetGravity</name></member>
      <member refid="classid_physics___rigid_body_1ace9b866dc10ebde6f7f28f7df9ea4a73" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>SetLinearVelocity</name></member>
      <member refid="classid_physics___rigid_body_1ace9b866dc10ebde6f7f28f7df9ea4a73" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>SetLinearVelocity</name></member>
      <member refid="classid_physics___rigid_body_1aa97456b0d8170469551eb9bf4446eb0e" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>SetMass</name></member>
      <member refid="classid_physics___rigid_body_1aa97456b0d8170469551eb9bf4446eb0e" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>SetMass</name></member>
      <member refid="classid_physics___rigid_body_1a75bb0d5eb4ef68424e1308b28ca17c2f" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>SetMaster</name></member>
      <member refid="classid_physics___rigid_body_1a75bb0d5eb4ef68424e1308b28ca17c2f" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>SetMaster</name></member>
      <member refid="classid_physics___rigid_body_1aa70966127aebbbe36ea82a223be52381" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>SetOrigin</name></member>
      <member refid="classid_physics___rigid_body_1aa70966127aebbbe36ea82a223be52381" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>SetOrigin</name></member>
      <member refid="classid_physics___rigid_body_1aaddc24340cd3893afc5ec86c726f478f" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>SetPushed</name></member>
      <member refid="classid_physics___rigid_body_1aaddc24340cd3893afc5ec86c726f478f" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>SetPushed</name></member>
      <member refid="classid_physics___base_1a201eb3ff18b214ddc3fa27b5ff041879" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>SetSelf</name></member>
      <member refid="classid_physics___base_1a201eb3ff18b214ddc3fa27b5ff041879" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>SetSelf</name></member>
      <member refid="classid_class_1aa20c883a28509e2b4997ee91ae0b8eae" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>Shutdown</name></member>
      <member refid="classid_class_1a42b60ee435e4d84ad914d828a4f7f82f" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>Shutdown</name></member>
      <member refid="classid_physics_1a3a07541fcfddc8507565281c841ad40a" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>SnapTimeToPhysicsFrame</name></member>
      <member refid="classid_physics_1a227507b5b7079ccc8bc3b150dcb57b2e" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>SnapTimeToPhysicsFrame</name></member>
      <member refid="classid_class_1a7b8213ff8dd347c24657306603a3ef8e" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>Spawn</name></member>
      <member refid="classid_class_1a7b8213ff8dd347c24657306603a3ef8e" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>Spawn</name></member>
      <member refid="classid_physics___rigid_body_1a47fa767f666f267cf939c43e342a5c30" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>TestIfAtRest</name></member>
      <member refid="classid_physics___rigid_body_1a47fa767f666f267cf939c43e342a5c30" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>TestIfAtRest</name></member>
      <member refid="classid_physics___rigid_body_1a98e8ed718afb121ee9dcb225c75bdaee" prot="private" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>testSolid</name></member>
      <member refid="classid_physics___rigid_body_1a828025cb04bf987d234edc473c5d5cc0" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>Translate</name></member>
      <member refid="classid_physics___rigid_body_1a828025cb04bf987d234edc473c5d5cc0" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>Translate</name></member>
      <member refid="classid_class_1ae391af31676f812ccd2dc7b0c8f921b1" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>Type</name></member>
      <member refid="classid_physics___rigid_body_1ad64df06095a19c0bc29319067dcc4b4c" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>UnlinkClip</name></member>
      <member refid="classid_physics___rigid_body_1ad64df06095a19c0bc29319067dcc4b4c" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>UnlinkClip</name></member>
      <member refid="classid_physics___rigid_body_1ad5ee697b8892647b6a5afbb0e11bfcb4" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>UpdateTime</name></member>
      <member refid="classid_physics___rigid_body_1ad5ee697b8892647b6a5afbb0e11bfcb4" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>UpdateTime</name></member>
      <member refid="classid_physics___rigid_body_1a3592efd7d4fc6295f8adc969e3302d0b" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>WriteToSnapshot</name></member>
      <member refid="classid_physics___rigid_body_1a3592efd7d4fc6295f8adc969e3302d0b" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>WriteToSnapshot</name></member>
      <member refid="classid_class_1a252055b84ce9dd64e15482a0a083bd92" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>~idClass</name></member>
      <member refid="classid_class_1adc7282c1b9d17b7b852bc7e0086e256d" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>~idClass</name></member>
      <member refid="classid_physics_1a6afd95253b165b07ae7f3636e5fee3b1" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>~idPhysics</name></member>
      <member refid="classid_physics_1a011cc8d6312c743f535327af57c4b7f2" prot="public" virt="virtual"><scope>idPhysics_RigidBody</scope><name>~idPhysics</name></member>
      <member refid="classid_physics___base_1a06fe55f4290d55c2bae27146db5bfc51" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>~idPhysics_Base</name></member>
      <member refid="classid_physics___base_1a06fe55f4290d55c2bae27146db5bfc51" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>~idPhysics_Base</name></member>
      <member refid="classid_physics___rigid_body_1a9d516415f54b806d59d1b67945591934" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>~idPhysics_RigidBody</name></member>
      <member refid="classid_physics___rigid_body_1a9d516415f54b806d59d1b67945591934" prot="public" virt="non-virtual"><scope>idPhysics_RigidBody</scope><name>~idPhysics_RigidBody</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
