<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_plane" kind="class" prot="public">
    <compoundname>idPlane</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classid_plane_1aa69b8476d61fde6c9ca5b84a526ab83d" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idPlane::a</definition>
        <argsstring></argsstring>
        <name>a</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="128" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_plane_1aef1ae64bdfbe7ee6f1cd0c690b980cf3" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idPlane::b</definition>
        <argsstring></argsstring>
        <name>b</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="129" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_plane_1ad6c02dd70f5c6c050267b2d7d62800c9" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idPlane::c</definition>
        <argsstring></argsstring>
        <name>c</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="130" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_plane_1ad00eb9a9f62a8cdbe6602a21fd90cf7b" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idPlane::d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="131" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_plane_1a48c11246296e43f12184cf91e726efa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idPlane::idPlane</definition>
        <argsstring>(void)</argsstring>
        <name>idPlane</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="73" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="137" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a669298b5692ce72959c8bad6ac28a69e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idPlane::idPlane</definition>
        <argsstring>(float a, float b, float c, float d)</argsstring>
        <name>idPlane</name>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float</type>
          <declname>c</declname>
        </param>
        <param>
          <type>float</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="74" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="140" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a4de3afeb926b5827060c57efaa7da2dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idPlane::idPlane</definition>
        <argsstring>(const idVec3 &amp;normal, const float dist)</argsstring>
        <name>idPlane</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>normal</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>dist</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="75" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="147" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a320078ad39c3f01216ff658a2ada065f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>ID_INLINE float idPlane::operator[]</definition>
        <argsstring>(int index) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="77" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="154" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1ac63667aac44ea0babcdb8068a5a88f62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float &amp;</type>
        <definition>ID_INLINE float &amp; idPlane::operator[]</definition>
        <argsstring>(int index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="78" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="158" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1aaac561710cec48d8911c2cfb9f239552" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_plane" kindref="compound">idPlane</ref></type>
        <definition>ID_INLINE idPlane idPlane::operator-</definition>
        <argsstring>() const </argsstring>
        <name>operator-</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="79" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="162" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a74be76e13630b5c5364a20d97862bffc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
        <definition>ID_INLINE idPlane &amp; idPlane::operator=</definition>
        <argsstring>(const idVec3 &amp;v)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="80" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="166" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a9d425a23b738701b8cae353798889c72" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_plane" kindref="compound">idPlane</ref></type>
        <definition>ID_INLINE idPlane idPlane::operator+</definition>
        <argsstring>(const idPlane &amp;p) const </argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="81" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a69a0bbf4987e9f9a111c1b07290fe8b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_plane" kindref="compound">idPlane</ref></type>
        <definition>ID_INLINE idPlane idPlane::operator-</definition>
        <argsstring>(const idPlane &amp;p) const </argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="82" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="178" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a51f3a7ef8e4f88574a2cfdc9261b0c47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
        <definition>ID_INLINE idPlane &amp; idPlane::operator*=</definition>
        <argsstring>(const idMat3 &amp;m)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="83" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="182" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a5a535869c76a7a08ad173eb63f7e3284" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idPlane::Compare</definition>
        <argsstring>(const idPlane &amp;p) const </argsstring>
        <name>Compare</name>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="85" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="187" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a6920ae0e8a2938cf9ae969c80afccbc0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idPlane::Compare</definition>
        <argsstring>(const idPlane &amp;p, const float epsilon) const </argsstring>
        <name>Compare</name>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="86" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="191" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a40cfdb2938ef45ad08b765bf6ef4986e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idPlane::Compare</definition>
        <argsstring>(const idPlane &amp;p, const float normalEps, const float distEps) const </argsstring>
        <name>Compare</name>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>normalEps</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>distEps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="87" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="211" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a9445ee4e69d78c7afe6ffb49ab2f4315" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idPlane::operator==</definition>
        <argsstring>(const idPlane &amp;p) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="88" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="221" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1aa9b1d9616d96e944fbdb3bb69c1d0ca8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idPlane::operator!=</definition>
        <argsstring>(const idPlane &amp;p) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="89" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="225" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1afb38984904368e711cef4e4ca2a7ebaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idPlane::Zero</definition>
        <argsstring>(void)</argsstring>
        <name>Zero</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="91" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="229" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a2c1c3931d8f5a7b0f380cd9bbc4420e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idPlane::SetNormal</definition>
        <argsstring>(const idVec3 &amp;normal)</argsstring>
        <name>SetNormal</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>normal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="92" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="233" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a154352060485ef7719c051edda3764ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>ID_INLINE const idVec3 &amp; idPlane::Normal</definition>
        <argsstring>(void) const </argsstring>
        <name>Normal</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="93" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="239" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a08a6feedea84b0c40397c51bfb6564b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>ID_INLINE idVec3 &amp; idPlane::Normal</definition>
        <argsstring>(void)</argsstring>
        <name>Normal</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="94" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="243" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a6290bb57ca68d9a3b7b154fa6dfe0c66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>ID_INLINE float idPlane::Normalize</definition>
        <argsstring>(bool fixDegenerate=true)</argsstring>
        <name>Normalize</name>
        <param>
          <type>bool</type>
          <declname>fixDegenerate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="95" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="247" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1afe8ddb02b7f3f6186ddb5b35f431d7c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idPlane::FixDegenerateNormal</definition>
        <argsstring>(void)</argsstring>
        <name>FixDegenerateNormal</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="96" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="256" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1abf7ecbcf6b788b81336faeb2a1ee1019" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idPlane::FixDegeneracies</definition>
        <argsstring>(float distEpsilon)</argsstring>
        <name>FixDegeneracies</name>
        <param>
          <type>float</type>
          <declname>distEpsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="97" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="260" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a1637b4bd2730af0913e1c73acd5f506a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>ID_INLINE float idPlane::Dist</definition>
        <argsstring>(void) const </argsstring>
        <name>Dist</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="98" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="271" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1ab1b4608266aace46ca2ff01a1f831a43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idPlane::SetDist</definition>
        <argsstring>(const float dist)</argsstring>
        <name>SetDist</name>
        <param>
          <type>const float</type>
          <declname>dist</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="99" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="275" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a281a867ff9355d5deff7ba56c3393aef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idPlane::Type</definition>
        <argsstring>(void) const </argsstring>
        <name>Type</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="100" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.cpp" bodystart="39" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a7a1bbb2743e29659eb60569f47b00539" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idPlane::FromPoints</definition>
        <argsstring>(const idVec3 &amp;p1, const idVec3 &amp;p2, const idVec3 &amp;p3, bool fixDegenerate=true)</argsstring>
        <name>FromPoints</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fixDegenerate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="102" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="279" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a2025ce23da8dc0e277e981dfa3539357" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idPlane::FromVecs</definition>
        <argsstring>(const idVec3 &amp;dir1, const idVec3 &amp;dir2, const idVec3 &amp;p, bool fixDegenerate=true)</argsstring>
        <name>FromVecs</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir1</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir2</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fixDegenerate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="103" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="288" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a7b7d1e2a6208b85cab40cfe830f125d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idPlane::FitThroughPoint</definition>
        <argsstring>(const idVec3 &amp;p)</argsstring>
        <name>FitThroughPoint</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="104" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="297" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a271850791a43fd9fbc0b46e875878a16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idPlane::HeightFit</definition>
        <argsstring>(const idVec3 *points, const int numPoints)</argsstring>
        <name>HeightFit</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> *</type>
          <declname>points</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numPoints</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="105" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.cpp" bodystart="72" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1ab84792f47b58a9d106041792741e8f4d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_plane" kindref="compound">idPlane</ref></type>
        <definition>ID_INLINE idPlane idPlane::Translate</definition>
        <argsstring>(const idVec3 &amp;translation) const </argsstring>
        <name>Translate</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>translation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="106" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="301" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a75d78b62d66d1b161f09089074591635" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
        <definition>ID_INLINE idPlane &amp; idPlane::TranslateSelf</definition>
        <argsstring>(const idVec3 &amp;translation)</argsstring>
        <name>TranslateSelf</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>translation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="107" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="305" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a81b77968382ab374cf5cd7419637bb3b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_plane" kindref="compound">idPlane</ref></type>
        <definition>ID_INLINE idPlane idPlane::Rotate</definition>
        <argsstring>(const idVec3 &amp;origin, const idMat3 &amp;axis) const </argsstring>
        <name>Rotate</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>axis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="108" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="310" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a42669f4a2396f3628f28791fef59982a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
        <definition>ID_INLINE idPlane &amp; idPlane::RotateSelf</definition>
        <argsstring>(const idVec3 &amp;origin, const idMat3 &amp;axis)</argsstring>
        <name>RotateSelf</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>axis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="109" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="317" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1ab3e68da92ac800b72171466df8585c4e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>ID_INLINE float idPlane::Distance</definition>
        <argsstring>(const idVec3 &amp;v) const </argsstring>
        <name>Distance</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="111" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="324" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a708f6104fee346df01668d61dbbf3017" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idPlane::Side</definition>
        <argsstring>(const idVec3 &amp;v, const float epsilon=0.0f) const </argsstring>
        <name>Side</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
          <defval>0.0f</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="112" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="328" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a45f473a6f95557b75160790fa02c8404" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idPlane::LineIntersection</definition>
        <argsstring>(const idVec3 &amp;start, const idVec3 &amp;end) const </argsstring>
        <name>LineIntersection</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="114" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="341" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a6a3e7968a3d9c8ddd95ee862888b8607" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idPlane::RayIntersection</definition>
        <argsstring>(const idVec3 &amp;start, const idVec3 &amp;dir, float &amp;scale) const </argsstring>
        <name>RayIntersection</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="116" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="359" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a4a84ffcfc56a66ebfe780e7d92787aa7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idPlane::PlaneIntersection</definition>
        <argsstring>(const idPlane &amp;plane, idVec3 &amp;start, idVec3 &amp;dir) const </argsstring>
        <name>PlaneIntersection</name>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>plane</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="117" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.cpp" bodystart="126" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1ab2cd05a23616b291a9e5d8c4bcf6d1db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idPlane::GetDimension</definition>
        <argsstring>(void) const </argsstring>
        <name>GetDimension</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="119" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="371" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1ac6cb626946cbad9d0a1819f02dd8e452" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
        <definition>ID_INLINE const idVec4 &amp; idPlane::ToVec4</definition>
        <argsstring>(void) const </argsstring>
        <name>ToVec4</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="121" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="375" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a8911e57de1ce11e033cc7d09948ff889" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
        <definition>ID_INLINE idVec4 &amp; idPlane::ToVec4</definition>
        <argsstring>(void)</argsstring>
        <name>ToVec4</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="122" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="379" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a2361920c35d9035c3a49e7016234e9cd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float *</type>
        <definition>ID_INLINE const float * idPlane::ToFloatPtr</definition>
        <argsstring>(void) const </argsstring>
        <name>ToFloatPtr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="123" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="383" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1a4be2eb038362264bdff7ab3eb0ef172b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float *</type>
        <definition>ID_INLINE float * idPlane::ToFloatPtr</definition>
        <argsstring>(void)</argsstring>
        <name>ToFloatPtr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="124" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="387" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="classid_plane_1ac264815a7a22e650bc888b6533669aca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * idPlane::ToString</definition>
        <argsstring>(int precision=2) const </argsstring>
        <name>ToString</name>
        <param>
          <type>int</type>
          <declname>precision</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="125" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.cpp" bodystart="152" bodyend="154"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" line="71" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Plane.h" bodystart="71" bodyend="132"/>
    <listofallmembers>
      <member refid="classid_plane_1aa69b8476d61fde6c9ca5b84a526ab83d" prot="private" virt="non-virtual"><scope>idPlane</scope><name>a</name></member>
      <member refid="classid_plane_1aef1ae64bdfbe7ee6f1cd0c690b980cf3" prot="private" virt="non-virtual"><scope>idPlane</scope><name>b</name></member>
      <member refid="classid_plane_1ad6c02dd70f5c6c050267b2d7d62800c9" prot="private" virt="non-virtual"><scope>idPlane</scope><name>c</name></member>
      <member refid="classid_plane_1a5a535869c76a7a08ad173eb63f7e3284" prot="public" virt="non-virtual"><scope>idPlane</scope><name>Compare</name></member>
      <member refid="classid_plane_1a6920ae0e8a2938cf9ae969c80afccbc0" prot="public" virt="non-virtual"><scope>idPlane</scope><name>Compare</name></member>
      <member refid="classid_plane_1a40cfdb2938ef45ad08b765bf6ef4986e" prot="public" virt="non-virtual"><scope>idPlane</scope><name>Compare</name></member>
      <member refid="classid_plane_1ad00eb9a9f62a8cdbe6602a21fd90cf7b" prot="private" virt="non-virtual"><scope>idPlane</scope><name>d</name></member>
      <member refid="classid_plane_1a1637b4bd2730af0913e1c73acd5f506a" prot="public" virt="non-virtual"><scope>idPlane</scope><name>Dist</name></member>
      <member refid="classid_plane_1ab3e68da92ac800b72171466df8585c4e" prot="public" virt="non-virtual"><scope>idPlane</scope><name>Distance</name></member>
      <member refid="classid_plane_1a7b7d1e2a6208b85cab40cfe830f125d6" prot="public" virt="non-virtual"><scope>idPlane</scope><name>FitThroughPoint</name></member>
      <member refid="classid_plane_1abf7ecbcf6b788b81336faeb2a1ee1019" prot="public" virt="non-virtual"><scope>idPlane</scope><name>FixDegeneracies</name></member>
      <member refid="classid_plane_1afe8ddb02b7f3f6186ddb5b35f431d7c5" prot="public" virt="non-virtual"><scope>idPlane</scope><name>FixDegenerateNormal</name></member>
      <member refid="classid_plane_1a7a1bbb2743e29659eb60569f47b00539" prot="public" virt="non-virtual"><scope>idPlane</scope><name>FromPoints</name></member>
      <member refid="classid_plane_1a2025ce23da8dc0e277e981dfa3539357" prot="public" virt="non-virtual"><scope>idPlane</scope><name>FromVecs</name></member>
      <member refid="classid_plane_1ab2cd05a23616b291a9e5d8c4bcf6d1db" prot="public" virt="non-virtual"><scope>idPlane</scope><name>GetDimension</name></member>
      <member refid="classid_plane_1a271850791a43fd9fbc0b46e875878a16" prot="public" virt="non-virtual"><scope>idPlane</scope><name>HeightFit</name></member>
      <member refid="classid_plane_1a48c11246296e43f12184cf91e726efa4" prot="public" virt="non-virtual"><scope>idPlane</scope><name>idPlane</name></member>
      <member refid="classid_plane_1a669298b5692ce72959c8bad6ac28a69e" prot="public" virt="non-virtual"><scope>idPlane</scope><name>idPlane</name></member>
      <member refid="classid_plane_1a4de3afeb926b5827060c57efaa7da2dd" prot="public" virt="non-virtual"><scope>idPlane</scope><name>idPlane</name></member>
      <member refid="classid_plane_1a45f473a6f95557b75160790fa02c8404" prot="public" virt="non-virtual"><scope>idPlane</scope><name>LineIntersection</name></member>
      <member refid="classid_plane_1a154352060485ef7719c051edda3764ad" prot="public" virt="non-virtual"><scope>idPlane</scope><name>Normal</name></member>
      <member refid="classid_plane_1a08a6feedea84b0c40397c51bfb6564b8" prot="public" virt="non-virtual"><scope>idPlane</scope><name>Normal</name></member>
      <member refid="classid_plane_1a6290bb57ca68d9a3b7b154fa6dfe0c66" prot="public" virt="non-virtual"><scope>idPlane</scope><name>Normalize</name></member>
      <member refid="classid_plane_1aa9b1d9616d96e944fbdb3bb69c1d0ca8" prot="public" virt="non-virtual"><scope>idPlane</scope><name>operator!=</name></member>
      <member refid="classid_plane_1a51f3a7ef8e4f88574a2cfdc9261b0c47" prot="public" virt="non-virtual"><scope>idPlane</scope><name>operator*=</name></member>
      <member refid="classid_plane_1a9d425a23b738701b8cae353798889c72" prot="public" virt="non-virtual"><scope>idPlane</scope><name>operator+</name></member>
      <member refid="classid_plane_1aaac561710cec48d8911c2cfb9f239552" prot="public" virt="non-virtual"><scope>idPlane</scope><name>operator-</name></member>
      <member refid="classid_plane_1a69a0bbf4987e9f9a111c1b07290fe8b6" prot="public" virt="non-virtual"><scope>idPlane</scope><name>operator-</name></member>
      <member refid="classid_plane_1a74be76e13630b5c5364a20d97862bffc" prot="public" virt="non-virtual"><scope>idPlane</scope><name>operator=</name></member>
      <member refid="classid_plane_1a9445ee4e69d78c7afe6ffb49ab2f4315" prot="public" virt="non-virtual"><scope>idPlane</scope><name>operator==</name></member>
      <member refid="classid_plane_1a320078ad39c3f01216ff658a2ada065f" prot="public" virt="non-virtual"><scope>idPlane</scope><name>operator[]</name></member>
      <member refid="classid_plane_1ac63667aac44ea0babcdb8068a5a88f62" prot="public" virt="non-virtual"><scope>idPlane</scope><name>operator[]</name></member>
      <member refid="classid_plane_1a4a84ffcfc56a66ebfe780e7d92787aa7" prot="public" virt="non-virtual"><scope>idPlane</scope><name>PlaneIntersection</name></member>
      <member refid="classid_plane_1a6a3e7968a3d9c8ddd95ee862888b8607" prot="public" virt="non-virtual"><scope>idPlane</scope><name>RayIntersection</name></member>
      <member refid="classid_plane_1a81b77968382ab374cf5cd7419637bb3b" prot="public" virt="non-virtual"><scope>idPlane</scope><name>Rotate</name></member>
      <member refid="classid_plane_1a42669f4a2396f3628f28791fef59982a" prot="public" virt="non-virtual"><scope>idPlane</scope><name>RotateSelf</name></member>
      <member refid="classid_plane_1ab1b4608266aace46ca2ff01a1f831a43" prot="public" virt="non-virtual"><scope>idPlane</scope><name>SetDist</name></member>
      <member refid="classid_plane_1a2c1c3931d8f5a7b0f380cd9bbc4420e9" prot="public" virt="non-virtual"><scope>idPlane</scope><name>SetNormal</name></member>
      <member refid="classid_plane_1a708f6104fee346df01668d61dbbf3017" prot="public" virt="non-virtual"><scope>idPlane</scope><name>Side</name></member>
      <member refid="classid_plane_1a2361920c35d9035c3a49e7016234e9cd" prot="public" virt="non-virtual"><scope>idPlane</scope><name>ToFloatPtr</name></member>
      <member refid="classid_plane_1a4be2eb038362264bdff7ab3eb0ef172b" prot="public" virt="non-virtual"><scope>idPlane</scope><name>ToFloatPtr</name></member>
      <member refid="classid_plane_1ac264815a7a22e650bc888b6533669aca" prot="public" virt="non-virtual"><scope>idPlane</scope><name>ToString</name></member>
      <member refid="classid_plane_1ac6cb626946cbad9d0a1819f02dd8e452" prot="public" virt="non-virtual"><scope>idPlane</scope><name>ToVec4</name></member>
      <member refid="classid_plane_1a8911e57de1ce11e033cc7d09948ff889" prot="public" virt="non-virtual"><scope>idPlane</scope><name>ToVec4</name></member>
      <member refid="classid_plane_1ab84792f47b58a9d106041792741e8f4d" prot="public" virt="non-virtual"><scope>idPlane</scope><name>Translate</name></member>
      <member refid="classid_plane_1a75d78b62d66d1b161f09089074591635" prot="public" virt="non-virtual"><scope>idPlane</scope><name>TranslateSelf</name></member>
      <member refid="classid_plane_1a281a867ff9355d5deff7ba56c3393aef" prot="public" virt="non-virtual"><scope>idPlane</scope><name>Type</name></member>
      <member refid="classid_plane_1afb38984904368e711cef4e4ca2a7ebaa" prot="public" virt="non-virtual"><scope>idPlane</scope><name>Zero</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
