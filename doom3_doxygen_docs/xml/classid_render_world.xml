<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_render_world" kind="class" prot="public" abstract="yes">
    <compoundname>idRenderWorld</compoundname>
    <derivedcompoundref refid="classid_render_world_local" prot="public" virt="non-virtual">idRenderWorldLocal</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_render_world_1aef4e59cf833292e1fb73c5ded34ab2b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual idRenderWorld::~idRenderWorld</definition>
        <argsstring>()</argsstring>
        <name>~idRenderWorld</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="270" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" bodystart="270" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a3fdc7ad2725005149ab288e0bb6927e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool idRenderWorld::InitFromMap</definition>
        <argsstring>(const char *mapName)=0</argsstring>
        <name>InitFromMap</name>
        <reimplementedby refid="classid_render_world_local_1a5ac1c13dec281f6f5302039c0d117bdb">InitFromMap</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>mapName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="274" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a31e8c19b086202ac46732117882b9fa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>qhandle_t</type>
        <definition>virtual qhandle_t idRenderWorld::AddEntityDef</definition>
        <argsstring>(const renderEntity_t *re)=0</argsstring>
        <name>AddEntityDef</name>
        <reimplementedby refid="classid_render_world_local_1a381046c0f7eb01a5b882ac127031000c">AddEntityDef</reimplementedby>
        <param>
          <type>const <ref refid="structrender_entity__s" kindref="compound">renderEntity_t</ref> *</type>
          <declname>re</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="281" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1ad81e78cccfc2b4d37c4508a4b34d9656" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idRenderWorld::UpdateEntityDef</definition>
        <argsstring>(qhandle_t entityHandle, const renderEntity_t *re)=0</argsstring>
        <name>UpdateEntityDef</name>
        <reimplementedby refid="classid_render_world_local_1a258efa6d83bfedb58fa1c1b526bcbec9">UpdateEntityDef</reimplementedby>
        <param>
          <type>qhandle_t</type>
          <declname>entityHandle</declname>
        </param>
        <param>
          <type>const <ref refid="structrender_entity__s" kindref="compound">renderEntity_t</ref> *</type>
          <declname>re</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="282" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a4d8570471c6aa5e51b93d86f4dd25905" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idRenderWorld::FreeEntityDef</definition>
        <argsstring>(qhandle_t entityHandle)=0</argsstring>
        <name>FreeEntityDef</name>
        <reimplementedby refid="classid_render_world_local_1ace19ab765e7d44aa4b534e760541a41c">FreeEntityDef</reimplementedby>
        <param>
          <type>qhandle_t</type>
          <declname>entityHandle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="283" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a70f6927459192592d947947eed174d31" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="structrender_entity__s" kindref="compound">renderEntity_t</ref> *</type>
        <definition>virtual const renderEntity_t* idRenderWorld::GetRenderEntity</definition>
        <argsstring>(qhandle_t entityHandle) const =0</argsstring>
        <name>GetRenderEntity</name>
        <reimplementedby refid="classid_render_world_local_1a442de68bba6db9debc6878a9221e0aed">GetRenderEntity</reimplementedby>
        <param>
          <type>qhandle_t</type>
          <declname>entityHandle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="284" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a3f88d18748153c0259f055bb7a56c45c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>qhandle_t</type>
        <definition>virtual qhandle_t idRenderWorld::AddLightDef</definition>
        <argsstring>(const renderLight_t *rlight)=0</argsstring>
        <name>AddLightDef</name>
        <reimplementedby refid="classid_render_world_local_1a179b5989e1eb10e09c5ed949908af065">AddLightDef</reimplementedby>
        <param>
          <type>const <ref refid="structrender_light__s" kindref="compound">renderLight_t</ref> *</type>
          <declname>rlight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="286" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1af465d3fc2e4185cec8845987a9d986f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idRenderWorld::UpdateLightDef</definition>
        <argsstring>(qhandle_t lightHandle, const renderLight_t *rlight)=0</argsstring>
        <name>UpdateLightDef</name>
        <reimplementedby refid="classid_render_world_local_1a190861e2656bf6e942edc3c1e2619ddc">UpdateLightDef</reimplementedby>
        <param>
          <type>qhandle_t</type>
          <declname>lightHandle</declname>
        </param>
        <param>
          <type>const <ref refid="structrender_light__s" kindref="compound">renderLight_t</ref> *</type>
          <declname>rlight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="287" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a3a51d81f3f4e1db6a169a60403914cfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idRenderWorld::FreeLightDef</definition>
        <argsstring>(qhandle_t lightHandle)=0</argsstring>
        <name>FreeLightDef</name>
        <reimplementedby refid="classid_render_world_local_1a5b00e010e813411596192ab976cdb7bc">FreeLightDef</reimplementedby>
        <param>
          <type>qhandle_t</type>
          <declname>lightHandle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="288" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1ae6781083e287162b86e6a0e74611326a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="structrender_light__s" kindref="compound">renderLight_t</ref> *</type>
        <definition>virtual const renderLight_t* idRenderWorld::GetRenderLight</definition>
        <argsstring>(qhandle_t lightHandle) const =0</argsstring>
        <name>GetRenderLight</name>
        <reimplementedby refid="classid_render_world_local_1a6b0612a43c1ac4293dc714dd564b98d0">GetRenderLight</reimplementedby>
        <param>
          <type>qhandle_t</type>
          <declname>lightHandle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="289" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1af647776a789d2722d67d4d50a171af09" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idRenderWorld::GenerateAllInteractions</definition>
        <argsstring>()=0</argsstring>
        <name>GenerateAllInteractions</name>
        <reimplementedby refid="classid_render_world_local_1aedc88dfa73bdc3a94413e0ca36ebd350">GenerateAllInteractions</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="293" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1aa4061dfaeabb7958c1d7833855f398ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool idRenderWorld::CheckAreaForPortalSky</definition>
        <argsstring>(int areaNum)=0</argsstring>
        <name>CheckAreaForPortalSky</name>
        <reimplementedby refid="classid_render_world_local_1a414c8e62730ed93dce9d50988610fa20">CheckAreaForPortalSky</reimplementedby>
        <param>
          <type>int</type>
          <declname>areaNum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="296" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a1720aeed9d8024a0c2e756068723151e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idRenderWorld::ProjectDecalOntoWorld</definition>
        <argsstring>(const idFixedWinding &amp;winding, const idVec3 &amp;projectionOrigin, const bool parallel, const float fadeDepth, const idMaterial *material, const int startTime)=0</argsstring>
        <name>ProjectDecalOntoWorld</name>
        <reimplementedby refid="classid_render_world_local_1a3321fe5acbadbf2840fbc5c32d12ce69">ProjectDecalOntoWorld</reimplementedby>
        <param>
          <type>const <ref refid="classid_fixed_winding" kindref="compound">idFixedWinding</ref> &amp;</type>
          <declname>winding</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>projectionOrigin</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>parallel</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>fadeDepth</declname>
        </param>
        <param>
          <type>const <ref refid="classid_material" kindref="compound">idMaterial</ref> *</type>
          <declname>material</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>startTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="305" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a69c135b0f4689e022aa4ea2f6e506647" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idRenderWorld::ProjectDecal</definition>
        <argsstring>(qhandle_t entityHandle, const idFixedWinding &amp;winding, const idVec3 &amp;projectionOrigin, const bool parallel, const float fadeDepth, const idMaterial *material, const int startTime)=0</argsstring>
        <name>ProjectDecal</name>
        <reimplementedby refid="classid_render_world_local_1a94c4def362145d3b200ca544845dad59">ProjectDecal</reimplementedby>
        <param>
          <type>qhandle_t</type>
          <declname>entityHandle</declname>
        </param>
        <param>
          <type>const <ref refid="classid_fixed_winding" kindref="compound">idFixedWinding</ref> &amp;</type>
          <declname>winding</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>projectionOrigin</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>parallel</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>fadeDepth</declname>
        </param>
        <param>
          <type>const <ref refid="classid_material" kindref="compound">idMaterial</ref> *</type>
          <declname>material</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>startTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="308" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a75d794996ec52263801caea98c12f07a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idRenderWorld::ProjectOverlay</definition>
        <argsstring>(qhandle_t entityHandle, const idPlane localTextureAxis[2], const idMaterial *material)=0</argsstring>
        <name>ProjectOverlay</name>
        <reimplementedby refid="classid_render_world_local_1a815a2ec272713587abcfe65a4e7ad3c3">ProjectOverlay</reimplementedby>
        <param>
          <type>qhandle_t</type>
          <declname>entityHandle</declname>
        </param>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref></type>
          <declname>localTextureAxis</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>const <ref refid="classid_material" kindref="compound">idMaterial</ref> *</type>
          <declname>material</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="311" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a766b0a0f454df216b4e50a41482e7e2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idRenderWorld::RemoveDecals</definition>
        <argsstring>(qhandle_t entityHandle)=0</argsstring>
        <name>RemoveDecals</name>
        <reimplementedby refid="classid_render_world_local_1a82e752784d2c8a9dd51180942e1c2e7b">RemoveDecals</reimplementedby>
        <param>
          <type>qhandle_t</type>
          <declname>entityHandle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="314" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1add95ca4091fee8eeef6a9de72eb7ee89" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idRenderWorld::SetRenderView</definition>
        <argsstring>(const renderView_t *renderView)=0</argsstring>
        <name>SetRenderView</name>
        <reimplementedby refid="classid_render_world_local_1a2addcc66e50bb73b2e5a1400dbfcbdac">SetRenderView</reimplementedby>
        <param>
          <type>const <ref refid="structrender_view__s" kindref="compound">renderView_t</ref> *</type>
          <declname>renderView</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="320" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a8bdb2ebf3536281fa94369fcc9411793" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idRenderWorld::RenderScene</definition>
        <argsstring>(const renderView_t *renderView)=0</argsstring>
        <name>RenderScene</name>
        <reimplementedby refid="classid_render_world_local_1a0c105db28d7a456b2dc7b2771ae111c4">RenderScene</reimplementedby>
        <param>
          <type>const <ref refid="structrender_view__s" kindref="compound">renderView_t</ref> *</type>
          <declname>renderView</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="325" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a1de85e6f3cff68088017f0daf1399958" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int idRenderWorld::NumPortals</definition>
        <argsstring>(void) const =0</argsstring>
        <name>NumPortals</name>
        <reimplementedby refid="classid_render_world_local_1a2855457b50e2680489100bb99113db2f">NumPortals</reimplementedby>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="330" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1ad222a91213d0f21f1d7a97a96d895039" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>qhandle_t</type>
        <definition>virtual qhandle_t idRenderWorld::FindPortal</definition>
        <argsstring>(const idBounds &amp;b) const =0</argsstring>
        <name>FindPortal</name>
        <reimplementedby refid="classid_render_world_local_1aa5bdb6f490f9e15ea5ca04acb33e0d7f">FindPortal</reimplementedby>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="336" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a5433f42ae32e90af6388866b3dd71e7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idRenderWorld::SetPortalState</definition>
        <argsstring>(qhandle_t portal, int blockingBits)=0</argsstring>
        <name>SetPortalState</name>
        <reimplementedby refid="classid_render_world_local_1a6b65187bc3bf27324e56f5321a34512e">SetPortalState</reimplementedby>
        <param>
          <type>qhandle_t</type>
          <declname>portal</declname>
        </param>
        <param>
          <type>int</type>
          <declname>blockingBits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="340" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a426e720c64f47f1c15471fdd8fb8a42d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int idRenderWorld::GetPortalState</definition>
        <argsstring>(qhandle_t portal)=0</argsstring>
        <name>GetPortalState</name>
        <reimplementedby refid="classid_render_world_local_1a4ed16c1b4a349d3087707bd969a00b96">GetPortalState</reimplementedby>
        <param>
          <type>qhandle_t</type>
          <declname>portal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="341" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a2914b200727062f16b1cc6c8b2ac6a2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool idRenderWorld::AreasAreConnected</definition>
        <argsstring>(int areaNum1, int areaNum2, portalConnection_t connection)=0</argsstring>
        <name>AreasAreConnected</name>
        <reimplementedby refid="classid_render_world_local_1adb1c4f42a0e126991cdde9d531b1eba2">AreasAreConnected</reimplementedby>
        <param>
          <type>int</type>
          <declname>areaNum1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>areaNum2</declname>
        </param>
        <param>
          <type>portalConnection_t</type>
          <declname>connection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="345" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a56189ca290fe9f4a15b13dae4feef36c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int idRenderWorld::NumAreas</definition>
        <argsstring>(void) const =0</argsstring>
        <name>NumAreas</name>
        <reimplementedby refid="classid_render_world_local_1a43bec97dad65a8d784425e9443173363">NumAreas</reimplementedby>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="349" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a71578ac361c7a7bbe8cb78f7af69921e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int idRenderWorld::PointInArea</definition>
        <argsstring>(const idVec3 &amp;point) const =0</argsstring>
        <name>PointInArea</name>
        <reimplementedby refid="classid_render_world_local_1acec48f24168781ff3682872378134187">PointInArea</reimplementedby>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="353" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1aedfc8b23aed270d51c7864874157a4c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int idRenderWorld::BoundsInAreas</definition>
        <argsstring>(const idBounds &amp;bounds, int *areas, int maxAreas) const =0</argsstring>
        <name>BoundsInAreas</name>
        <reimplementedby refid="classid_render_world_local_1adea240b36a47198bb2974bbdf356bd91">BoundsInAreas</reimplementedby>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>areas</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxAreas</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="357" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1afb12cea6d6fb54e8b02b08feb9f23ac9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int idRenderWorld::NumPortalsInArea</definition>
        <argsstring>(int areaNum)=0</argsstring>
        <name>NumPortalsInArea</name>
        <reimplementedby refid="classid_render_world_local_1a565336a0fbcb595f9420dabead853b85">NumPortalsInArea</reimplementedby>
        <param>
          <type>int</type>
          <declname>areaNum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="360" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a64d1b68be03a3bbea368005929476b6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="structexit_portal__t" kindref="compound">exitPortal_t</ref></type>
        <definition>virtual exitPortal_t idRenderWorld::GetPortal</definition>
        <argsstring>(int areaNum, int portalNum)=0</argsstring>
        <name>GetPortal</name>
        <reimplementedby refid="classid_render_world_local_1afef28c2c4bdcc66030a224f64061d392">GetPortal</reimplementedby>
        <param>
          <type>int</type>
          <declname>areaNum</declname>
        </param>
        <param>
          <type>int</type>
          <declname>portalNum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="363" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1ac44b89737436731394faa8adc9685d20" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="structgui_point__t" kindref="compound">guiPoint_t</ref></type>
        <definition>virtual guiPoint_t idRenderWorld::GuiTrace</definition>
        <argsstring>(qhandle_t entityHandle, const idVec3 start, const idVec3 end) const =0</argsstring>
        <name>GuiTrace</name>
        <reimplementedby refid="classid_render_world_local_1aa71b5d8e45c862be8fc0f3075d41d84b">GuiTrace</reimplementedby>
        <param>
          <type>qhandle_t</type>
          <declname>entityHandle</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="371" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a4789c2101c5ced9dd8878740928922ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool idRenderWorld::ModelTrace</definition>
        <argsstring>(modelTrace_t &amp;trace, qhandle_t entityHandle, const idVec3 &amp;start, const idVec3 &amp;end, const float radius) const =0</argsstring>
        <name>ModelTrace</name>
        <reimplementedby refid="classid_render_world_local_1a9e916c01c67c58dec4855c605aa2c1e5">ModelTrace</reimplementedby>
        <param>
          <type><ref refid="structmodel_trace__s" kindref="compound">modelTrace_t</ref> &amp;</type>
          <declname>trace</declname>
        </param>
        <param>
          <type>qhandle_t</type>
          <declname>entityHandle</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>radius</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="374" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1abdae90c6b21e3f6e75c91116b822b92f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool idRenderWorld::Trace</definition>
        <argsstring>(modelTrace_t &amp;trace, const idVec3 &amp;start, const idVec3 &amp;end, const float radius, bool skipDynamic=true, bool skipPlayer=false) const =0</argsstring>
        <name>Trace</name>
        <reimplementedby refid="classid_render_world_local_1adfda7925cfe364e4c0d61b650660fa7c">Trace</reimplementedby>
        <param>
          <type><ref refid="structmodel_trace__s" kindref="compound">modelTrace_t</ref> &amp;</type>
          <declname>trace</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>skipDynamic</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>skipPlayer</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="377" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a83af9f869e49a9188abae4f8a70afc0c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool idRenderWorld::FastWorldTrace</definition>
        <argsstring>(modelTrace_t &amp;trace, const idVec3 &amp;start, const idVec3 &amp;end) const =0</argsstring>
        <name>FastWorldTrace</name>
        <reimplementedby refid="classid_render_world_local_1a4c92335401fba74a02e1dca08b4a7998">FastWorldTrace</reimplementedby>
        <param>
          <type><ref refid="structmodel_trace__s" kindref="compound">modelTrace_t</ref> &amp;</type>
          <declname>trace</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="380" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a4d177eccc8fe6f688c38c13c052971b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idRenderWorld::StartWritingDemo</definition>
        <argsstring>(idDemoFile *demo)=0</argsstring>
        <name>StartWritingDemo</name>
        <reimplementedby refid="classid_render_world_local_1ac686101c10b961168832ec1ebcda30ad">StartWritingDemo</reimplementedby>
        <param>
          <type><ref refid="classid_demo_file" kindref="compound">idDemoFile</ref> *</type>
          <declname>demo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="385" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a623a0fe115c9c672f13a82854beea0d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idRenderWorld::StopWritingDemo</definition>
        <argsstring>()=0</argsstring>
        <name>StopWritingDemo</name>
        <reimplementedby refid="classid_render_world_local_1adfd5cc4ca50736d9d2ed3776e4c5f388">StopWritingDemo</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="386" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1ada12ee91010bdc25b59c33aea3b82d77" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool idRenderWorld::ProcessDemoCommand</definition>
        <argsstring>(idDemoFile *readDemo, renderView_t *demoRenderView, int *demoTimeOffset)=0</argsstring>
        <name>ProcessDemoCommand</name>
        <reimplementedby refid="classid_render_world_local_1a1f1018093b7bea5c834a675a25f046d9">ProcessDemoCommand</reimplementedby>
        <param>
          <type><ref refid="classid_demo_file" kindref="compound">idDemoFile</ref> *</type>
          <declname>readDemo</declname>
        </param>
        <param>
          <type><ref refid="structrender_view__s" kindref="compound">renderView_t</ref> *</type>
          <declname>demoRenderView</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>demoTimeOffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="395" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1ae065e0e09c2fc8b3b737d133757a998c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idRenderWorld::RegenerateWorld</definition>
        <argsstring>()=0</argsstring>
        <name>RegenerateWorld</name>
        <reimplementedby refid="classid_render_world_local_1a36f6b94243b4e1a34b83295be6c30116">RegenerateWorld</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="399" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1acb3725448940aa9cc9b08d095397d6e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idRenderWorld::DebugClearLines</definition>
        <argsstring>(int time)=0</argsstring>
        <name>DebugClearLines</name>
        <reimplementedby refid="classid_render_world_local_1ae37f953ad1e719b99c1f69e403937103">DebugClearLines</reimplementedby>
        <param>
          <type>int</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="404" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a28e42aa8f9cb11d2290797c106dab084" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idRenderWorld::DebugLine</definition>
        <argsstring>(const idVec4 &amp;color, const idVec3 &amp;start, const idVec3 &amp;end, const int lifetime=0, const bool depthTest=false)=0</argsstring>
        <name>DebugLine</name>
        <reimplementedby refid="classid_render_world_local_1a5c8868a2169baa730d69bb8f41509cab">DebugLine</reimplementedby>
        <param>
          <type>const <ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>lifetime</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>depthTest</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="405" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a3a1e2434995417ca67cc0121c7ce5e2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idRenderWorld::DebugArrow</definition>
        <argsstring>(const idVec4 &amp;color, const idVec3 &amp;start, const idVec3 &amp;end, int size, const int lifetime=0)=0</argsstring>
        <name>DebugArrow</name>
        <reimplementedby refid="classid_render_world_local_1ac9da47908a30225f94920050a6e01f75">DebugArrow</reimplementedby>
        <param>
          <type>const <ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>lifetime</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="406" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a4275931558acc2f332170fac272bad78" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idRenderWorld::DebugWinding</definition>
        <argsstring>(const idVec4 &amp;color, const idWinding &amp;w, const idVec3 &amp;origin, const idMat3 &amp;axis, const int lifetime=0, const bool depthTest=false)=0</argsstring>
        <name>DebugWinding</name>
        <reimplementedby refid="classid_render_world_local_1a5feb3f33c8f9096bf5634633da32f29e">DebugWinding</reimplementedby>
        <param>
          <type>const <ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const <ref refid="classid_winding" kindref="compound">idWinding</ref> &amp;</type>
          <declname>w</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>lifetime</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>depthTest</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="407" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1ae5c4ea523ff9f4dbc4c70e62d33f6efe" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idRenderWorld::DebugCircle</definition>
        <argsstring>(const idVec4 &amp;color, const idVec3 &amp;origin, const idVec3 &amp;dir, const float radius, const int numSteps, const int lifetime=0, const bool depthTest=false)=0</argsstring>
        <name>DebugCircle</name>
        <reimplementedby refid="classid_render_world_local_1a3d0fe60985f4980546d5866e3a473df0">DebugCircle</reimplementedby>
        <param>
          <type>const <ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numSteps</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>lifetime</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>depthTest</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="408" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a7beca126ccc742253d4fd5a45fc7cc6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idRenderWorld::DebugSphere</definition>
        <argsstring>(const idVec4 &amp;color, const idSphere &amp;sphere, const int lifetime=0, bool depthTest=false)=0</argsstring>
        <name>DebugSphere</name>
        <reimplementedby refid="classid_render_world_local_1a20fbce5dc516d3dd5757926c9a3cb2ea">DebugSphere</reimplementedby>
        <param>
          <type>const <ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const <ref refid="classid_sphere" kindref="compound">idSphere</ref> &amp;</type>
          <declname>sphere</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>lifetime</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>depthTest</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="409" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a2749dc728f5846eafa2f12afe2dda886" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idRenderWorld::DebugBounds</definition>
        <argsstring>(const idVec4 &amp;color, const idBounds &amp;bounds, const idVec3 &amp;org=vec3_origin, const int lifetime=0)=0</argsstring>
        <name>DebugBounds</name>
        <reimplementedby refid="classid_render_world_local_1adcb3c7d854b17cb0239b79e58e622fc5">DebugBounds</reimplementedby>
        <param>
          <type>const <ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>org</declname>
          <defval>vec3_origin</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>lifetime</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="410" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a7355f0611fb8e61925f970fcf53713ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idRenderWorld::DebugBox</definition>
        <argsstring>(const idVec4 &amp;color, const idBox &amp;box, const int lifetime=0)=0</argsstring>
        <name>DebugBox</name>
        <reimplementedby refid="classid_render_world_local_1a20811de6200d46e439157423287770d4">DebugBox</reimplementedby>
        <param>
          <type>const <ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const <ref refid="classid_box" kindref="compound">idBox</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>lifetime</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="411" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a61ed9f3ff15538aa0e90c2b1948e3ee3" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idRenderWorld::DebugFrustum</definition>
        <argsstring>(const idVec4 &amp;color, const idFrustum &amp;frustum, const bool showFromOrigin=false, const int lifetime=0)=0</argsstring>
        <name>DebugFrustum</name>
        <reimplementedby refid="classid_render_world_local_1a09b0eac6fa480ce97f76ee6090013fae">DebugFrustum</reimplementedby>
        <param>
          <type>const <ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const <ref refid="classid_frustum" kindref="compound">idFrustum</ref> &amp;</type>
          <declname>frustum</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>showFromOrigin</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>lifetime</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="412" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a51aec01f8f821ea1b4bfb58192e21372" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idRenderWorld::DebugCone</definition>
        <argsstring>(const idVec4 &amp;color, const idVec3 &amp;apex, const idVec3 &amp;dir, float radius1, float radius2, const int lifetime=0)=0</argsstring>
        <name>DebugCone</name>
        <reimplementedby refid="classid_render_world_local_1a8cd7266e28a7795beb02185fa555b481">DebugCone</reimplementedby>
        <param>
          <type>const <ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>apex</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>float</type>
          <declname>radius1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>radius2</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>lifetime</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="413" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1aa6cbb3432f8fcc6b9774fdfcafc1fffc" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idRenderWorld::DebugAxis</definition>
        <argsstring>(const idVec3 &amp;origin, const idMat3 &amp;axis)=0</argsstring>
        <name>DebugAxis</name>
        <reimplementedby refid="classid_render_world_local_1a8d2642bc48b9295e7ba0822da7e31092">DebugAxis</reimplementedby>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>axis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="414" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1acd513635001f923a34f16168efa6a5f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idRenderWorld::DebugClearPolygons</definition>
        <argsstring>(int time)=0</argsstring>
        <name>DebugClearPolygons</name>
        <reimplementedby refid="classid_render_world_local_1aec8e8e13da180f711ccd8e719788a827">DebugClearPolygons</reimplementedby>
        <param>
          <type>int</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="417" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a8fd160fae950770e72a6d33aee542aef" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idRenderWorld::DebugPolygon</definition>
        <argsstring>(const idVec4 &amp;color, const idWinding &amp;winding, const int lifeTime=0, const bool depthTest=false)=0</argsstring>
        <name>DebugPolygon</name>
        <reimplementedby refid="classid_render_world_local_1a0d2835785eec591a93b2d1c91606af2c">DebugPolygon</reimplementedby>
        <param>
          <type>const <ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const <ref refid="classid_winding" kindref="compound">idWinding</ref> &amp;</type>
          <declname>winding</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>lifeTime</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>depthTest</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="418" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_render_world_1a2fd7ae2540988b038fedc85a0e242755" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idRenderWorld::DrawText</definition>
        <argsstring>(const char *text, const idVec3 &amp;origin, float scale, const idVec4 &amp;color, const idMat3 &amp;viewAxis, const int align=1, const int lifetime=0, bool depthTest=false)=0</argsstring>
        <name>DrawText</name>
        <reimplementedby refid="classid_render_world_local_1a314a45dc6a2bc1e887cbedaa98358561">DrawText</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>viewAxis</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>align</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>lifetime</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>depthTest</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="421" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="27182">
        <label>idRenderWorldLocal</label>
        <link refid="classid_render_world_local"/>
        <childnode refid="27181" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27181">
        <label>idRenderWorld</label>
        <link refid="classid_render_world"/>
      </node>
    </inheritancegraph>
    <location file="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" line="268" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.h" bodystart="268" bodyend="422"/>
    <listofallmembers>
      <member refid="classid_render_world_1a31e8c19b086202ac46732117882b9fa4" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>AddEntityDef</name></member>
      <member refid="classid_render_world_1a3f88d18748153c0259f055bb7a56c45c" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>AddLightDef</name></member>
      <member refid="classid_render_world_1a2914b200727062f16b1cc6c8b2ac6a2a" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>AreasAreConnected</name></member>
      <member refid="classid_render_world_1aedfc8b23aed270d51c7864874157a4c3" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>BoundsInAreas</name></member>
      <member refid="classid_render_world_1aa4061dfaeabb7958c1d7833855f398ae" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>CheckAreaForPortalSky</name></member>
      <member refid="classid_render_world_1a3a1e2434995417ca67cc0121c7ce5e2d" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>DebugArrow</name></member>
      <member refid="classid_render_world_1aa6cbb3432f8fcc6b9774fdfcafc1fffc" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>DebugAxis</name></member>
      <member refid="classid_render_world_1a2749dc728f5846eafa2f12afe2dda886" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>DebugBounds</name></member>
      <member refid="classid_render_world_1a7355f0611fb8e61925f970fcf53713ff" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>DebugBox</name></member>
      <member refid="classid_render_world_1ae5c4ea523ff9f4dbc4c70e62d33f6efe" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>DebugCircle</name></member>
      <member refid="classid_render_world_1acb3725448940aa9cc9b08d095397d6e0" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>DebugClearLines</name></member>
      <member refid="classid_render_world_1acd513635001f923a34f16168efa6a5f7" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>DebugClearPolygons</name></member>
      <member refid="classid_render_world_1a51aec01f8f821ea1b4bfb58192e21372" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>DebugCone</name></member>
      <member refid="classid_render_world_1a61ed9f3ff15538aa0e90c2b1948e3ee3" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>DebugFrustum</name></member>
      <member refid="classid_render_world_1a28e42aa8f9cb11d2290797c106dab084" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>DebugLine</name></member>
      <member refid="classid_render_world_1a8fd160fae950770e72a6d33aee542aef" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>DebugPolygon</name></member>
      <member refid="classid_render_world_1a7beca126ccc742253d4fd5a45fc7cc6b" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>DebugSphere</name></member>
      <member refid="classid_render_world_1a4275931558acc2f332170fac272bad78" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>DebugWinding</name></member>
      <member refid="classid_render_world_1a2fd7ae2540988b038fedc85a0e242755" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>DrawText</name></member>
      <member refid="classid_render_world_1a83af9f869e49a9188abae4f8a70afc0c" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>FastWorldTrace</name></member>
      <member refid="classid_render_world_1ad222a91213d0f21f1d7a97a96d895039" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>FindPortal</name></member>
      <member refid="classid_render_world_1a4d8570471c6aa5e51b93d86f4dd25905" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>FreeEntityDef</name></member>
      <member refid="classid_render_world_1a3a51d81f3f4e1db6a169a60403914cfa" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>FreeLightDef</name></member>
      <member refid="classid_render_world_1af647776a789d2722d67d4d50a171af09" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>GenerateAllInteractions</name></member>
      <member refid="classid_render_world_1a64d1b68be03a3bbea368005929476b6b" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>GetPortal</name></member>
      <member refid="classid_render_world_1a426e720c64f47f1c15471fdd8fb8a42d" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>GetPortalState</name></member>
      <member refid="classid_render_world_1a70f6927459192592d947947eed174d31" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>GetRenderEntity</name></member>
      <member refid="classid_render_world_1ae6781083e287162b86e6a0e74611326a" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>GetRenderLight</name></member>
      <member refid="classid_render_world_1ac44b89737436731394faa8adc9685d20" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>GuiTrace</name></member>
      <member refid="classid_render_world_1a3fdc7ad2725005149ab288e0bb6927e2" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>InitFromMap</name></member>
      <member refid="classid_render_world_1a4789c2101c5ced9dd8878740928922ca" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>ModelTrace</name></member>
      <member refid="classid_render_world_1a56189ca290fe9f4a15b13dae4feef36c" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>NumAreas</name></member>
      <member refid="classid_render_world_1a1de85e6f3cff68088017f0daf1399958" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>NumPortals</name></member>
      <member refid="classid_render_world_1afb12cea6d6fb54e8b02b08feb9f23ac9" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>NumPortalsInArea</name></member>
      <member refid="classid_render_world_1a71578ac361c7a7bbe8cb78f7af69921e" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>PointInArea</name></member>
      <member refid="classid_render_world_1ada12ee91010bdc25b59c33aea3b82d77" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>ProcessDemoCommand</name></member>
      <member refid="classid_render_world_1a69c135b0f4689e022aa4ea2f6e506647" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>ProjectDecal</name></member>
      <member refid="classid_render_world_1a1720aeed9d8024a0c2e756068723151e" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>ProjectDecalOntoWorld</name></member>
      <member refid="classid_render_world_1a75d794996ec52263801caea98c12f07a" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>ProjectOverlay</name></member>
      <member refid="classid_render_world_1ae065e0e09c2fc8b3b737d133757a998c" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>RegenerateWorld</name></member>
      <member refid="classid_render_world_1a766b0a0f454df216b4e50a41482e7e2a" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>RemoveDecals</name></member>
      <member refid="classid_render_world_1a8bdb2ebf3536281fa94369fcc9411793" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>RenderScene</name></member>
      <member refid="classid_render_world_1a5433f42ae32e90af6388866b3dd71e7b" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>SetPortalState</name></member>
      <member refid="classid_render_world_1add95ca4091fee8eeef6a9de72eb7ee89" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>SetRenderView</name></member>
      <member refid="classid_render_world_1a4d177eccc8fe6f688c38c13c052971b7" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>StartWritingDemo</name></member>
      <member refid="classid_render_world_1a623a0fe115c9c672f13a82854beea0d3" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>StopWritingDemo</name></member>
      <member refid="classid_render_world_1abdae90c6b21e3f6e75c91116b822b92f" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>Trace</name></member>
      <member refid="classid_render_world_1ad81e78cccfc2b4d37c4508a4b34d9656" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>UpdateEntityDef</name></member>
      <member refid="classid_render_world_1af465d3fc2e4185cec8845987a9d986f7" prot="public" virt="pure-virtual"><scope>idRenderWorld</scope><name>UpdateLightDef</name></member>
      <member refid="classid_render_world_1aef4e59cf833292e1fb73c5ded34ab2b1" prot="public" virt="virtual"><scope>idRenderWorld</scope><name>~idRenderWorld</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
