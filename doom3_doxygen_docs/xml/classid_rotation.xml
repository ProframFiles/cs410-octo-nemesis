<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_rotation" kind="class" prot="public">
    <compoundname>idRotation</compoundname>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classid_rotation_1a494b3b45948abbc86f6f7a77cf840146" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class idAngles</definition>
        <argsstring></argsstring>
        <name>idAngles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="48" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classid_rotation_1a163b2911924e26e32369e8d4ef639c6a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class idQuat</definition>
        <argsstring></argsstring>
        <name>idQuat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="49" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classid_rotation_1af2197ee2afb523b79256c0acd47cc444" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class idMat3</definition>
        <argsstring></argsstring>
        <name>idMat3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="50" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classid_rotation_1aabd1689e8a20e0f8c219ef230fbceec2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classid_rotation" kindref="compound">idRotation</ref></type>
        <definition>idRotation operator*</definition>
        <argsstring>(const float s, const idRotation &amp;r)</argsstring>
        <name>operator*</name>
        <param>
          <type>const float</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classid_rotation" kindref="compound">idRotation</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="74" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="191" bodyend="193"/>
      </memberdef>
      <memberdef kind="friend" id="classid_rotation_1a05e8af5891e30b6569710b6ab87ada4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>idVec3 operator*</definition>
        <argsstring>(const idVec3 &amp;v, const idRotation &amp;r)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classid_rotation" kindref="compound">idRotation</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="75" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="195" bodyend="197"/>
      </memberdef>
      <memberdef kind="friend" id="classid_rotation_1ab9d651da09ff8644985515aed9d0e5b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>idVec3&amp; operator*=</definition>
        <argsstring>(idVec3 &amp;v, const idRotation &amp;r)</argsstring>
        <name>operator*=</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classid_rotation" kindref="compound">idRotation</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="76" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="199" bodyend="202"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classid_rotation_1ad560f8d368d95d5ba97288a66bdca259" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>idVec3 idRotation::origin</definition>
        <argsstring></argsstring>
        <name>origin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="90" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_rotation_1a18c7566658ad4a6974654b59f32916f0" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>idVec3 idRotation::vec</definition>
        <argsstring></argsstring>
        <name>vec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="91" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_rotation_1a7485ca9bb775cc8d13a9e6e511c2e202" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float idRotation::angle</definition>
        <argsstring></argsstring>
        <name>angle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="92" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_rotation_1ab76cde29ec0f1bd9e2ad4c4cd508059e" prot="private" static="no" mutable="yes">
        <type><ref refid="classid_mat3" kindref="compound">idMat3</ref></type>
        <definition>idMat3 idRotation::axis</definition>
        <argsstring></argsstring>
        <name>axis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="93" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_rotation_1a18aedcb2976b13a79a67dcc30dc0a8af" prot="private" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool idRotation::axisValid</definition>
        <argsstring></argsstring>
        <name>axisValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="94" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_rotation_1a27514f9c2ce3e288ed6cbb5480ca430c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idRotation::idRotation</definition>
        <argsstring>(void)</argsstring>
        <name>idRotation</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="53" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="98" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classid_rotation_1acfc933f80be86394ee495d6fbad2fa9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idRotation::idRotation</definition>
        <argsstring>(const idVec3 &amp;rotationOrigin, const idVec3 &amp;rotationVec, const float rotationAngle)</argsstring>
        <name>idRotation</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>rotationOrigin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>rotationVec</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>rotationAngle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="54" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="101" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classid_rotation_1a049198b1428ba44ec0d24f95a5eccb00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idRotation::Set</definition>
        <argsstring>(const idVec3 &amp;rotationOrigin, const idVec3 &amp;rotationVec, const float rotationAngle)</argsstring>
        <name>Set</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>rotationOrigin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>rotationVec</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>rotationAngle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="56" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="108" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classid_rotation_1af5bf1df9951ae5f2fc07f542eab324fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idRotation::SetOrigin</definition>
        <argsstring>(const idVec3 &amp;rotationOrigin)</argsstring>
        <name>SetOrigin</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>rotationOrigin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="57" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="115" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classid_rotation_1af1192f7c94faa1ba711ae41b17018fb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idRotation::SetVec</definition>
        <argsstring>(const idVec3 &amp;rotationVec)</argsstring>
        <name>SetVec</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>rotationVec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="58" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classid_rotation_1a0524df5d124c8788d953fcdab56a7680" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idRotation::SetVec</definition>
        <argsstring>(const float x, const float y, const float z)</argsstring>
        <name>SetVec</name>
        <param>
          <type>const float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="59" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="124" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classid_rotation_1ae97f902c83ca7043fd0a9b6b309c11ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idRotation::SetAngle</definition>
        <argsstring>(const float rotationAngle)</argsstring>
        <name>SetAngle</name>
        <param>
          <type>const float</type>
          <declname>rotationAngle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="60" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classid_rotation_1a792529d214746e9d7dc0ad360181c716" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idRotation::Scale</definition>
        <argsstring>(const float s)</argsstring>
        <name>Scale</name>
        <param>
          <type>const float</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="61" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classid_rotation_1a4a0502a807540af6538c17bd699d6292" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idRotation::ReCalculateMatrix</definition>
        <argsstring>(void)</argsstring>
        <name>ReCalculateMatrix</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="62" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classid_rotation_1ae200f2b5d3e5fa24734f3c279491f1ff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>ID_INLINE const idVec3 &amp; idRotation::GetOrigin</definition>
        <argsstring>(void) const </argsstring>
        <name>GetOrigin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="63" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="146" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classid_rotation_1ae9b51f656159bc7883110ad7bb11e0c1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>ID_INLINE const idVec3 &amp; idRotation::GetVec</definition>
        <argsstring>(void) const </argsstring>
        <name>GetVec</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="64" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="150" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classid_rotation_1a146b94a065c8ed8b839a0eacefe676b9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>ID_INLINE float idRotation::GetAngle</definition>
        <argsstring>(void) const </argsstring>
        <name>GetAngle</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="65" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="154" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classid_rotation_1ac648a1c8b19ba1d2c789a54bab64a62e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_rotation" kindref="compound">idRotation</ref></type>
        <definition>ID_INLINE idRotation idRotation::operator-</definition>
        <argsstring>() const </argsstring>
        <name>operator-</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="67" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="158" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classid_rotation_1aed1a1444232db4115ec5b8e6693bcc04" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_rotation" kindref="compound">idRotation</ref></type>
        <definition>ID_INLINE idRotation idRotation::operator*</definition>
        <argsstring>(const float s) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const float</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="68" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="162" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classid_rotation_1ae12cf8c7c47f8c8273506aaa2ec778e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_rotation" kindref="compound">idRotation</ref></type>
        <definition>ID_INLINE idRotation idRotation::operator/</definition>
        <argsstring>(const float s) const </argsstring>
        <name>operator/</name>
        <param>
          <type>const float</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="69" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="166" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classid_rotation_1adc920c0d02421bbcba99b58531236b57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_rotation" kindref="compound">idRotation</ref> &amp;</type>
        <definition>ID_INLINE idRotation &amp; idRotation::operator*=</definition>
        <argsstring>(const float s)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const float</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="70" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="171" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classid_rotation_1a04998ff2d57c948700849b17310c5170" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_rotation" kindref="compound">idRotation</ref> &amp;</type>
        <definition>ID_INLINE idRotation &amp; idRotation::operator/=</definition>
        <argsstring>(const float s)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const float</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="71" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="177" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classid_rotation_1a9f6a8845093c5d23cddaa9fb4522129a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>ID_INLINE idVec3 idRotation::operator*</definition>
        <argsstring>(const idVec3 &amp;v) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="72" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="184" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classid_rotation_1a58b161a32db507e63258f1b741e97dac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_angles" kindref="compound">idAngles</ref></type>
        <definition>idAngles idRotation::ToAngles</definition>
        <argsstring>(void) const </argsstring>
        <name>ToAngles</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="78" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.cpp" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classid_rotation_1a3bb689bf4d905853930fcc36c69c74a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_quat" kindref="compound">idQuat</ref></type>
        <definition>idQuat idRotation::ToQuat</definition>
        <argsstring>(void) const </argsstring>
        <name>ToQuat</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="79" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.cpp" bodystart="47" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classid_rotation_1a21a7b67001b99a65e5979200eb2013f0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
        <definition>const idMat3 &amp; idRotation::ToMat3</definition>
        <argsstring>(void) const </argsstring>
        <name>ToMat3</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="80" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.cpp" bodystart="60" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classid_rotation_1ada4d1c61201394179fac34bed0999fe1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_mat4" kindref="compound">idMat4</ref></type>
        <definition>idMat4 idRotation::ToMat4</definition>
        <argsstring>(void) const </argsstring>
        <name>ToMat4</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="81" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.cpp" bodystart="116" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classid_rotation_1a113ceaadf47837bd53058832c95c729a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>idVec3 idRotation::ToAngularVelocity</definition>
        <argsstring>(void) const </argsstring>
        <name>ToAngularVelocity</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="82" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.cpp" bodystart="125" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classid_rotation_1a344f35327903302e2f3cee5a0d6422c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idRotation::RotatePoint</definition>
        <argsstring>(idVec3 &amp;point) const </argsstring>
        <name>RotatePoint</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="84" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="204" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classid_rotation_1a74499006ab564891a859af3f70721bc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idRotation::Normalize180</definition>
        <argsstring>(void)</argsstring>
        <name>Normalize180</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="86" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.cpp" bodystart="134" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classid_rotation_1acc0571b08b56f79f1d8282a75c2526a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idRotation::Normalize360</definition>
        <argsstring>(void)</argsstring>
        <name>Normalize360</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="87" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.cpp" bodystart="149" bodyend="157"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" line="46" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Rotation.h" bodystart="46" bodyend="95"/>
    <listofallmembers>
      <member refid="classid_rotation_1a7485ca9bb775cc8d13a9e6e511c2e202" prot="private" virt="non-virtual"><scope>idRotation</scope><name>angle</name></member>
      <member refid="classid_rotation_1ab76cde29ec0f1bd9e2ad4c4cd508059e" prot="private" virt="non-virtual"><scope>idRotation</scope><name>axis</name></member>
      <member refid="classid_rotation_1a18aedcb2976b13a79a67dcc30dc0a8af" prot="private" virt="non-virtual"><scope>idRotation</scope><name>axisValid</name></member>
      <member refid="classid_rotation_1a146b94a065c8ed8b839a0eacefe676b9" prot="public" virt="non-virtual"><scope>idRotation</scope><name>GetAngle</name></member>
      <member refid="classid_rotation_1ae200f2b5d3e5fa24734f3c279491f1ff" prot="public" virt="non-virtual"><scope>idRotation</scope><name>GetOrigin</name></member>
      <member refid="classid_rotation_1ae9b51f656159bc7883110ad7bb11e0c1" prot="public" virt="non-virtual"><scope>idRotation</scope><name>GetVec</name></member>
      <member refid="classid_rotation_1a494b3b45948abbc86f6f7a77cf840146" prot="private" virt="non-virtual"><scope>idRotation</scope><name>idAngles</name></member>
      <member refid="classid_rotation_1af2197ee2afb523b79256c0acd47cc444" prot="private" virt="non-virtual"><scope>idRotation</scope><name>idMat3</name></member>
      <member refid="classid_rotation_1a163b2911924e26e32369e8d4ef639c6a" prot="private" virt="non-virtual"><scope>idRotation</scope><name>idQuat</name></member>
      <member refid="classid_rotation_1a27514f9c2ce3e288ed6cbb5480ca430c" prot="public" virt="non-virtual"><scope>idRotation</scope><name>idRotation</name></member>
      <member refid="classid_rotation_1acfc933f80be86394ee495d6fbad2fa9c" prot="public" virt="non-virtual"><scope>idRotation</scope><name>idRotation</name></member>
      <member refid="classid_rotation_1a74499006ab564891a859af3f70721bc4" prot="public" virt="non-virtual"><scope>idRotation</scope><name>Normalize180</name></member>
      <member refid="classid_rotation_1acc0571b08b56f79f1d8282a75c2526a4" prot="public" virt="non-virtual"><scope>idRotation</scope><name>Normalize360</name></member>
      <member refid="classid_rotation_1aed1a1444232db4115ec5b8e6693bcc04" prot="public" virt="non-virtual"><scope>idRotation</scope><name>operator*</name></member>
      <member refid="classid_rotation_1a9f6a8845093c5d23cddaa9fb4522129a" prot="public" virt="non-virtual"><scope>idRotation</scope><name>operator*</name></member>
      <member refid="classid_rotation_1aabd1689e8a20e0f8c219ef230fbceec2" prot="public" virt="non-virtual"><scope>idRotation</scope><name>operator*</name></member>
      <member refid="classid_rotation_1a05e8af5891e30b6569710b6ab87ada4f" prot="public" virt="non-virtual"><scope>idRotation</scope><name>operator*</name></member>
      <member refid="classid_rotation_1adc920c0d02421bbcba99b58531236b57" prot="public" virt="non-virtual"><scope>idRotation</scope><name>operator*=</name></member>
      <member refid="classid_rotation_1ab9d651da09ff8644985515aed9d0e5b8" prot="public" virt="non-virtual"><scope>idRotation</scope><name>operator*=</name></member>
      <member refid="classid_rotation_1ac648a1c8b19ba1d2c789a54bab64a62e" prot="public" virt="non-virtual"><scope>idRotation</scope><name>operator-</name></member>
      <member refid="classid_rotation_1ae12cf8c7c47f8c8273506aaa2ec778e2" prot="public" virt="non-virtual"><scope>idRotation</scope><name>operator/</name></member>
      <member refid="classid_rotation_1a04998ff2d57c948700849b17310c5170" prot="public" virt="non-virtual"><scope>idRotation</scope><name>operator/=</name></member>
      <member refid="classid_rotation_1ad560f8d368d95d5ba97288a66bdca259" prot="private" virt="non-virtual"><scope>idRotation</scope><name>origin</name></member>
      <member refid="classid_rotation_1a4a0502a807540af6538c17bd699d6292" prot="public" virt="non-virtual"><scope>idRotation</scope><name>ReCalculateMatrix</name></member>
      <member refid="classid_rotation_1a344f35327903302e2f3cee5a0d6422c3" prot="public" virt="non-virtual"><scope>idRotation</scope><name>RotatePoint</name></member>
      <member refid="classid_rotation_1a792529d214746e9d7dc0ad360181c716" prot="public" virt="non-virtual"><scope>idRotation</scope><name>Scale</name></member>
      <member refid="classid_rotation_1a049198b1428ba44ec0d24f95a5eccb00" prot="public" virt="non-virtual"><scope>idRotation</scope><name>Set</name></member>
      <member refid="classid_rotation_1ae97f902c83ca7043fd0a9b6b309c11ac" prot="public" virt="non-virtual"><scope>idRotation</scope><name>SetAngle</name></member>
      <member refid="classid_rotation_1af5bf1df9951ae5f2fc07f542eab324fb" prot="public" virt="non-virtual"><scope>idRotation</scope><name>SetOrigin</name></member>
      <member refid="classid_rotation_1af1192f7c94faa1ba711ae41b17018fb9" prot="public" virt="non-virtual"><scope>idRotation</scope><name>SetVec</name></member>
      <member refid="classid_rotation_1a0524df5d124c8788d953fcdab56a7680" prot="public" virt="non-virtual"><scope>idRotation</scope><name>SetVec</name></member>
      <member refid="classid_rotation_1a58b161a32db507e63258f1b741e97dac" prot="public" virt="non-virtual"><scope>idRotation</scope><name>ToAngles</name></member>
      <member refid="classid_rotation_1a113ceaadf47837bd53058832c95c729a" prot="public" virt="non-virtual"><scope>idRotation</scope><name>ToAngularVelocity</name></member>
      <member refid="classid_rotation_1a21a7b67001b99a65e5979200eb2013f0" prot="public" virt="non-virtual"><scope>idRotation</scope><name>ToMat3</name></member>
      <member refid="classid_rotation_1ada4d1c61201394179fac34bed0999fe1" prot="public" virt="non-virtual"><scope>idRotation</scope><name>ToMat4</name></member>
      <member refid="classid_rotation_1a3bb689bf4d905853930fcc36c69c74a6" prot="public" virt="non-virtual"><scope>idRotation</scope><name>ToQuat</name></member>
      <member refid="classid_rotation_1a18c7566658ad4a6974654b59f32916f0" prot="private" virt="non-virtual"><scope>idRotation</scope><name>vec</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
