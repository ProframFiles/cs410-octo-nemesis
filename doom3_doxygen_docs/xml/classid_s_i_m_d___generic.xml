<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_s_i_m_d___generic" kind="class" prot="public">
    <compoundname>idSIMD_Generic</compoundname>
    <basecompoundref refid="classid_s_i_m_d_processor" prot="public" virt="non-virtual">idSIMDProcessor</basecompoundref>
    <derivedcompoundref refid="classid_s_i_m_d___alti_vec" prot="public" virt="non-virtual">idSIMD_AltiVec</derivedcompoundref>
    <derivedcompoundref refid="classid_s_i_m_d___m_m_x" prot="public" virt="non-virtual">idSIMD_MMX</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_s_i_m_d___generic_1adc981793729c8cf1457f520eb0290825" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const char *VPCALL</type>
        <definition>const char * idSIMD_Generic::GetName</definition>
        <argsstring>(void) const </argsstring>
        <name>GetName</name>
        <reimplements refid="classid_s_i_m_d_processor_1acf314f27338b0273f70b6d9b7fd54dd1">GetName</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="42" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a69c07f0fc4f308ec1d4390d5d597f231" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::Add</definition>
        <argsstring>(float *dst, const float constant, const float *src, const int count)</argsstring>
        <name>Add</name>
        <reimplements refid="classid_s_i_m_d_processor_1ad8ac1a4a4fdfb9a4b6a36d121a1a2a4a">Add</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>constant</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="44" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1ae515f085acd6a4ddcf67ec85e293b801" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::Add</definition>
        <argsstring>(float *dst, const float *src0, const float *src1, const int count)</argsstring>
        <name>Add</name>
        <reimplements refid="classid_s_i_m_d_processor_1a06ef9b642f259fbc9a28be866c072299">Add</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src0</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="45" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a4b1531c5a34fd98e17e7eb2117334894" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::Sub</definition>
        <argsstring>(float *dst, const float constant, const float *src, const int count)</argsstring>
        <name>Sub</name>
        <reimplements refid="classid_s_i_m_d_processor_1a5cc6bd90bcd247c31e2508f37c859f9b">Sub</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>constant</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="46" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="95" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a063fec618dae2f5774c832d28cd17770" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::Sub</definition>
        <argsstring>(float *dst, const float *src0, const float *src1, const int count)</argsstring>
        <name>Sub</name>
        <reimplements refid="classid_s_i_m_d_processor_1ab1e5aff9888fa34f7a508dcd395c559c">Sub</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src0</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="47" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a171b871f9e141984cb094601917b8eb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::Mul</definition>
        <argsstring>(float *dst, const float constant, const float *src, const int count)</argsstring>
        <name>Mul</name>
        <reimplements refid="classid_s_i_m_d_processor_1a5fb966f9940513bde95e0ca9c5f5f683">Mul</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>constant</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="48" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="120" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a147ca903cf5a449ff117f47388f276b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::Mul</definition>
        <argsstring>(float *dst, const float *src0, const float *src1, const int count)</argsstring>
        <name>Mul</name>
        <reimplements refid="classid_s_i_m_d_processor_1a5da86dab6e27c66fa2bcc6760c0f3d42">Mul</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src0</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="49" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="133" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a73b1829106afc47ca066972c7a9f051c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::Div</definition>
        <argsstring>(float *dst, const float constant, const float *src, const int count)</argsstring>
        <name>Div</name>
        <reimplements refid="classid_s_i_m_d_processor_1ae7187a71dfeb91b052a947d65996013a">Div</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>constant</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="50" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="145" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1af2a9ee45a76e4b085769734b4aff5db0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::Div</definition>
        <argsstring>(float *dst, const float *src0, const float *src1, const int count)</argsstring>
        <name>Div</name>
        <reimplements refid="classid_s_i_m_d_processor_1a43f7534f4ddcbf69f04555f52f124f3e">Div</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src0</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="51" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="158" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a7e2003a6f59feaeeae037998c356065b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::MulAdd</definition>
        <argsstring>(float *dst, const float constant, const float *src, const int count)</argsstring>
        <name>MulAdd</name>
        <reimplements refid="classid_s_i_m_d_processor_1a3f4789698d4e74e182da4c63ef9f0678">MulAdd</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>constant</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="52" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="170" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1af3c6b730f89dac0d3818482e818ed1a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::MulAdd</definition>
        <argsstring>(float *dst, const float *src0, const float *src1, const int count)</argsstring>
        <name>MulAdd</name>
        <reimplements refid="classid_s_i_m_d_processor_1af9436bfc8ba221a4302d41d0ad787ebe">MulAdd</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src0</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="53" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="183" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a570ea418ceb467c0a402dae41c475bef" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::MulSub</definition>
        <argsstring>(float *dst, const float constant, const float *src, const int count)</argsstring>
        <name>MulSub</name>
        <reimplements refid="classid_s_i_m_d_processor_1a7b2180bccd66213e588bfa1b2b4407b2">MulSub</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>constant</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="54" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="195" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1acb5e1ebdf6ef9ba49dfa92487b374a32" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::MulSub</definition>
        <argsstring>(float *dst, const float *src0, const float *src1, const int count)</argsstring>
        <name>MulSub</name>
        <reimplements refid="classid_s_i_m_d_processor_1a1d113b01f580eaa0c8c26c57e3b83ce9">MulSub</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src0</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="55" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="208" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a52ca6f4d3ba9e2b0dc383864f7110194" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::Dot</definition>
        <argsstring>(float *dst, const idVec3 &amp;constant, const idVec3 *src, const int count)</argsstring>
        <name>Dot</name>
        <reimplements refid="classid_s_i_m_d_processor_1a9fca68570c942d0694d967b885c7e8a6">Dot</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>constant</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="57" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="220" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a25f9d8ab5e955e040ce09d6dbdddb096" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::Dot</definition>
        <argsstring>(float *dst, const idVec3 &amp;constant, const idPlane *src, const int count)</argsstring>
        <name>Dot</name>
        <reimplements refid="classid_s_i_m_d_processor_1aea3b4d1bc308f439d658b4527bf30088">Dot</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>constant</declname>
        </param>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="58" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="232" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1aa07aed12fee2851e65a431d7af23abc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::Dot</definition>
        <argsstring>(float *dst, const idVec3 &amp;constant, const idDrawVert *src, const int count)</argsstring>
        <name>Dot</name>
        <reimplements refid="classid_s_i_m_d_processor_1ad9b17a8b0de3ca648f4360526c7ad620">Dot</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>constant</declname>
        </param>
        <param>
          <type>const <ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="59" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="244" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a0d0be62bcb09e2d9f11332f6357877d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::Dot</definition>
        <argsstring>(float *dst, const idPlane &amp;constant, const idVec3 *src, const int count)</argsstring>
        <name>Dot</name>
        <reimplements refid="classid_s_i_m_d_processor_1a15de4a5cc0c1b5a0b67f920aa7cd82c8">Dot</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>constant</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="60" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="256" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a004b92e0d022ed0c11bf0ff0a84d9f44" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::Dot</definition>
        <argsstring>(float *dst, const idPlane &amp;constant, const idPlane *src, const int count)</argsstring>
        <name>Dot</name>
        <reimplements refid="classid_s_i_m_d_processor_1ac25210a3eea5a5c54db30e93d3bde0e3">Dot</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>constant</declname>
        </param>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="61" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="268" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a1feb2d321e907ca2a80eda9b882305bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::Dot</definition>
        <argsstring>(float *dst, const idPlane &amp;constant, const idDrawVert *src, const int count)</argsstring>
        <name>Dot</name>
        <reimplements refid="classid_s_i_m_d_processor_1a5a02389fd9e9e9473551bf77b128b084">Dot</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>constant</declname>
        </param>
        <param>
          <type>const <ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="62" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="280" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1ad1b8e2bf037024323ac2fde8f715974d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::Dot</definition>
        <argsstring>(float *dst, const idVec3 *src0, const idVec3 *src1, const int count)</argsstring>
        <name>Dot</name>
        <reimplements refid="classid_s_i_m_d_processor_1a8b83a65117e6671e8a46bd727927548e">Dot</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> *</type>
          <declname>src0</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="63" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="292" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1aecf1db158dcdc58b6a2cca96355db96a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::Dot</definition>
        <argsstring>(float &amp;dot, const float *src1, const float *src2, const int count)</argsstring>
        <name>Dot</name>
        <reimplements refid="classid_s_i_m_d_processor_1a60e6fad69ec84dda9591f88cd19f417f">Dot</reimplements>
        <param>
          <type>float &amp;</type>
          <declname>dot</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="64" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="304" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1aecba2f868d8d3dc7b999d6b51f96a210" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::CmpGT</definition>
        <argsstring>(byte *dst, const float *src0, const float constant, const int count)</argsstring>
        <name>CmpGT</name>
        <reimplements refid="classid_s_i_m_d_processor_1a030902b243aa5bbe1262bde5f82c46ef">CmpGT</reimplements>
        <param>
          <type>byte *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src0</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>constant</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="66" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="378" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a1da13cb9bdf42b9984c04b5654205765" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::CmpGT</definition>
        <argsstring>(byte *dst, const byte bitNum, const float *src0, const float constant, const int count)</argsstring>
        <name>CmpGT</name>
        <reimplements refid="classid_s_i_m_d_processor_1af4ffaceb2768eecd4a487bfd23c05877">CmpGT</reimplements>
        <param>
          <type>byte *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const byte</type>
          <declname>bitNum</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src0</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>constant</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="67" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="390" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a17647833092fba6df950bb8ca85cbf06" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::CmpGE</definition>
        <argsstring>(byte *dst, const float *src0, const float constant, const int count)</argsstring>
        <name>CmpGE</name>
        <reimplements refid="classid_s_i_m_d_processor_1a9c6a58c89a520619d704b63dbcc3421c">CmpGE</reimplements>
        <param>
          <type>byte *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src0</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>constant</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="68" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="402" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a047a409b59f3950cce3c8d1ea5bb42c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::CmpGE</definition>
        <argsstring>(byte *dst, const byte bitNum, const float *src0, const float constant, const int count)</argsstring>
        <name>CmpGE</name>
        <reimplements refid="classid_s_i_m_d_processor_1ada64cff4b43168bb49d2dbbeabda1233">CmpGE</reimplements>
        <param>
          <type>byte *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const byte</type>
          <declname>bitNum</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src0</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>constant</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="69" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="414" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1aa37cb1a680b28a001736ed30a1c7cefa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::CmpLT</definition>
        <argsstring>(byte *dst, const float *src0, const float constant, const int count)</argsstring>
        <name>CmpLT</name>
        <reimplements refid="classid_s_i_m_d_processor_1afe5ff46c091c3b0e7b678a3b27d3c78a">CmpLT</reimplements>
        <param>
          <type>byte *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src0</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>constant</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="70" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="426" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a3928f4129bdef50b4f01e5f04c2d5eda" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::CmpLT</definition>
        <argsstring>(byte *dst, const byte bitNum, const float *src0, const float constant, const int count)</argsstring>
        <name>CmpLT</name>
        <reimplements refid="classid_s_i_m_d_processor_1ab297276b5f58b2f1816bc7d474ea0866">CmpLT</reimplements>
        <param>
          <type>byte *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const byte</type>
          <declname>bitNum</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src0</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>constant</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="71" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="438" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a3c62480e13da900fee2f14b773b5faa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::CmpLE</definition>
        <argsstring>(byte *dst, const float *src0, const float constant, const int count)</argsstring>
        <name>CmpLE</name>
        <reimplements refid="classid_s_i_m_d_processor_1a462de24107d10ad6e1a25a91cda535bd">CmpLE</reimplements>
        <param>
          <type>byte *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src0</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>constant</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="72" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="450" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1aed6d1ff0e18d2ae29690d5a522c2a6ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::CmpLE</definition>
        <argsstring>(byte *dst, const byte bitNum, const float *src0, const float constant, const int count)</argsstring>
        <name>CmpLE</name>
        <reimplements refid="classid_s_i_m_d_processor_1a4a439507d5b8f9e8c1896586f25edf7f">CmpLE</reimplements>
        <param>
          <type>byte *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const byte</type>
          <declname>bitNum</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src0</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>constant</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="73" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="462" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1aa1437a11f412eb2d820cf8548be32201" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::MinMax</definition>
        <argsstring>(float &amp;min, float &amp;max, const float *src, const int count)</argsstring>
        <name>MinMax</name>
        <reimplements refid="classid_s_i_m_d_processor_1a5e8e3df16f7843d21518e35498517c57">MinMax</reimplements>
        <param>
          <type>float &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="75" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="472" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1ad46d93a6fcc8423ed12cfd0f7d87717e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::MinMax</definition>
        <argsstring>(idVec2 &amp;min, idVec2 &amp;max, const idVec2 *src, const int count)</argsstring>
        <name>MinMax</name>
        <reimplements refid="classid_s_i_m_d_processor_1a91ed12de027cbe2702ef2454ec1ef848">MinMax</reimplements>
        <param>
          <type><ref refid="classid_vec2" kindref="compound">idVec2</ref> &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="classid_vec2" kindref="compound">idVec2</ref> &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec2" kindref="compound">idVec2</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="76" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="483" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a38b9143196c66a58fc2b7cfb4f8748d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::MinMax</definition>
        <argsstring>(idVec3 &amp;min, idVec3 &amp;max, const idVec3 *src, const int count)</argsstring>
        <name>MinMax</name>
        <reimplements refid="classid_s_i_m_d_processor_1a2d5b1d8374756854a2f539e5266209fe">MinMax</reimplements>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="77" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="494" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a43e77182806ac4d7977b124b232c7e5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::MinMax</definition>
        <argsstring>(idVec3 &amp;min, idVec3 &amp;max, const idDrawVert *src, const int count)</argsstring>
        <name>MinMax</name>
        <reimplements refid="classid_s_i_m_d_processor_1a2be19e15af3e6b733d031a86fe65042c">MinMax</reimplements>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const <ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="78" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="505" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1ad63ed9aa27e5e006ed10d909db7a1dff" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::MinMax</definition>
        <argsstring>(idVec3 &amp;min, idVec3 &amp;max, const idDrawVert *src, const int *indexes, const int count)</argsstring>
        <name>MinMax</name>
        <reimplements refid="classid_s_i_m_d_processor_1a125b89f4f6ad4739263b128569414eff">MinMax</reimplements>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const <ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>indexes</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="79" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="516" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1afe6fc2d9200e59d755c5cf8c243372f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::Clamp</definition>
        <argsstring>(float *dst, const float *src, const float min, const float max, const int count)</argsstring>
        <name>Clamp</name>
        <reimplements refid="classid_s_i_m_d_processor_1a6910aa9054f2a929176618398cfa46d1">Clamp</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>min</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="81" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="527" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a571768bafeae51fa15532720b322a0ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::ClampMin</definition>
        <argsstring>(float *dst, const float *src, const float min, const int count)</argsstring>
        <name>ClampMin</name>
        <reimplements refid="classid_s_i_m_d_processor_1a92cc54b3207812294434bab033a29571">ClampMin</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>min</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="82" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="537" bodyend="540"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a0e88e2108f6e13a574be5751facff81b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::ClampMax</definition>
        <argsstring>(float *dst, const float *src, const float max, const int count)</argsstring>
        <name>ClampMax</name>
        <reimplements refid="classid_s_i_m_d_processor_1a3a2816ceed55d44ccf82e6c43321b5e4">ClampMax</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="83" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="547" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a2be056ab3c06b77297a9c764623186dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::Memcpy</definition>
        <argsstring>(void *dst, const void *src, const int count)</argsstring>
        <name>Memcpy</name>
        <reimplements refid="classid_s_i_m_d_processor_1a2718da76248b7282c72cafc5582217ec">Memcpy</reimplements>
        <param>
          <type>void *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="85" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="557" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a2a356a73a8190a4d43547a722e8bc75b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::Memset</definition>
        <argsstring>(void *dst, const int val, const int count)</argsstring>
        <name>Memset</name>
        <reimplements refid="classid_s_i_m_d_processor_1a60a1c6154867c014087a9c1bb032e454">Memset</reimplements>
        <param>
          <type>void *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>val</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="86" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="566" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a6926096ebb584ee51b0c7a5127944090" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::Zero16</definition>
        <argsstring>(float *dst, const int count)</argsstring>
        <name>Zero16</name>
        <reimplements refid="classid_s_i_m_d_processor_1a7077e32e9d445335ad5edf6a61dcc44d">Zero16</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="88" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="575" bodyend="577"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1aa19e9b428e9d32e4e6cd06ff5fdf1503" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::Negate16</definition>
        <argsstring>(float *dst, const int count)</argsstring>
        <name>Negate16</name>
        <reimplements refid="classid_s_i_m_d_processor_1ae11193d7ac7cfddfb6f1230b49a483da">Negate16</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="89" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="584" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a85742528567b371a5701e0b8dbc04e15" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::Copy16</definition>
        <argsstring>(float *dst, const float *src, const int count)</argsstring>
        <name>Copy16</name>
        <reimplements refid="classid_s_i_m_d_processor_1a75ee46649c527540bcdb9a97b8a82485">Copy16</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="90" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="595" bodyend="598"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1afaba52ae826ead6b1dda941a4daaa5b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::Add16</definition>
        <argsstring>(float *dst, const float *src1, const float *src2, const int count)</argsstring>
        <name>Add16</name>
        <reimplements refid="classid_s_i_m_d_processor_1a3c58de418b4574baed64cb3e7fa08e66">Add16</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="91" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="605" bodyend="608"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1af84711c9fce5b4a0e764704ad4d518df" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::Sub16</definition>
        <argsstring>(float *dst, const float *src1, const float *src2, const int count)</argsstring>
        <name>Sub16</name>
        <reimplements refid="classid_s_i_m_d_processor_1a5c8aa6e40a8421e9a9055dd3d78ad2f7">Sub16</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="92" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="615" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a7098ca8ca8a42bc1b3e56ec19bb2197c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::Mul16</definition>
        <argsstring>(float *dst, const float *src1, const float constant, const int count)</argsstring>
        <name>Mul16</name>
        <reimplements refid="classid_s_i_m_d_processor_1a2874acfd172ec9f90bf8559ffcd20497">Mul16</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>constant</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="93" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="625" bodyend="628"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a78e0d78c870682aec6c5e9f3934c696a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::AddAssign16</definition>
        <argsstring>(float *dst, const float *src, const int count)</argsstring>
        <name>AddAssign16</name>
        <reimplements refid="classid_s_i_m_d_processor_1a5dd8452fbb966a8b73d53eb151d65752">AddAssign16</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="94" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="635" bodyend="638"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a36b8cd57a49a1259d402b91cbb16b1d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::SubAssign16</definition>
        <argsstring>(float *dst, const float *src, const int count)</argsstring>
        <name>SubAssign16</name>
        <reimplements refid="classid_s_i_m_d_processor_1a4ac10e35f7455d373270cea05225779a">SubAssign16</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="95" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="645" bodyend="648"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a10d0c3fce1c6c053eb48fea76802ea90" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::MulAssign16</definition>
        <argsstring>(float *dst, const float constant, const int count)</argsstring>
        <name>MulAssign16</name>
        <reimplements refid="classid_s_i_m_d_processor_1a8b8a673f7132b38461f37a88ae85bda0">MulAssign16</reimplements>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>constant</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="96" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="655" bodyend="658"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1aebf296f3b917b6e76082c322caeb78ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::MatX_MultiplyVecX</definition>
        <argsstring>(idVecX &amp;dst, const idMatX &amp;mat, const idVecX &amp;vec)</argsstring>
        <name>MatX_MultiplyVecX</name>
        <reimplements refid="classid_s_i_m_d_processor_1a9b7a131ad369a6e8d86b12f450efe588">MatX_MultiplyVecX</reimplements>
        <param>
          <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat_x" kindref="compound">idMatX</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="98" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="665" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1aec0de36205a09528a175139f11de9d80" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::MatX_MultiplyAddVecX</definition>
        <argsstring>(idVecX &amp;dst, const idMatX &amp;mat, const idVecX &amp;vec)</argsstring>
        <name>MatX_MultiplyAddVecX</name>
        <reimplements refid="classid_s_i_m_d_processor_1afe72d236189d7acc6e90954a9f9e9900">MatX_MultiplyAddVecX</reimplements>
        <param>
          <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat_x" kindref="compound">idMatX</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="99" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="736" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1ab04507a40546327247c4c86a3ed89b7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::MatX_MultiplySubVecX</definition>
        <argsstring>(idVecX &amp;dst, const idMatX &amp;mat, const idVecX &amp;vec)</argsstring>
        <name>MatX_MultiplySubVecX</name>
        <reimplements refid="classid_s_i_m_d_processor_1aefb72c7e02aa139dd67ec48e6d223504">MatX_MultiplySubVecX</reimplements>
        <param>
          <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat_x" kindref="compound">idMatX</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="100" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="807" bodyend="871"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1ac362640354b2ef4e24c6f926ddc47d0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::MatX_TransposeMultiplyVecX</definition>
        <argsstring>(idVecX &amp;dst, const idMatX &amp;mat, const idVecX &amp;vec)</argsstring>
        <name>MatX_TransposeMultiplyVecX</name>
        <reimplements refid="classid_s_i_m_d_processor_1a88fd1110bbdbe19d630ca884eeddf9e7">MatX_TransposeMultiplyVecX</reimplements>
        <param>
          <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat_x" kindref="compound">idMatX</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="101" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="878" bodyend="943"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a193be815ec1aba6956c98c617df9b8db" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::MatX_TransposeMultiplyAddVecX</definition>
        <argsstring>(idVecX &amp;dst, const idMatX &amp;mat, const idVecX &amp;vec)</argsstring>
        <name>MatX_TransposeMultiplyAddVecX</name>
        <reimplements refid="classid_s_i_m_d_processor_1a57569465f3e2f53448812867c51a8c2c">MatX_TransposeMultiplyAddVecX</reimplements>
        <param>
          <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat_x" kindref="compound">idMatX</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="102" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="950" bodyend="1015"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a39b4416205b853f35f8d0dedf1fce5e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::MatX_TransposeMultiplySubVecX</definition>
        <argsstring>(idVecX &amp;dst, const idMatX &amp;mat, const idVecX &amp;vec)</argsstring>
        <name>MatX_TransposeMultiplySubVecX</name>
        <reimplements refid="classid_s_i_m_d_processor_1aa0912c509aaa73aa2a72864a0eb72770">MatX_TransposeMultiplySubVecX</reimplements>
        <param>
          <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat_x" kindref="compound">idMatX</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="103" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="1022" bodyend="1087"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a6f9126be21a4a66deb6d2bde2396deff" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::MatX_MultiplyMatX</definition>
        <argsstring>(idMatX &amp;dst, const idMatX &amp;m1, const idMatX &amp;m2)</argsstring>
        <name>MatX_MultiplyMatX</name>
        <reimplements refid="classid_s_i_m_d_processor_1acd64a59908409682320dfbe88591ca51">MatX_MultiplyMatX</reimplements>
        <param>
          <type><ref refid="classid_mat_x" kindref="compound">idMatX</ref> &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat_x" kindref="compound">idMatX</ref> &amp;</type>
          <declname>m1</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat_x" kindref="compound">idMatX</ref> &amp;</type>
          <declname>m2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="104" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="1103" bodyend="1434"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1ab3cc05e498e6b59a476311cbb4cfd404" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::MatX_TransposeMultiplyMatX</definition>
        <argsstring>(idMatX &amp;dst, const idMatX &amp;m1, const idMatX &amp;m2)</argsstring>
        <name>MatX_TransposeMultiplyMatX</name>
        <reimplements refid="classid_s_i_m_d_processor_1ae79a92035199f0c8ae01783b133717eb">MatX_TransposeMultiplyMatX</reimplements>
        <param>
          <type><ref refid="classid_mat_x" kindref="compound">idMatX</ref> &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat_x" kindref="compound">idMatX</ref> &amp;</type>
          <declname>m1</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat_x" kindref="compound">idMatX</ref> &amp;</type>
          <declname>m2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="105" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="1448" bodyend="1678"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1af7b934ab2bbfdcf3570efd197e0a7bcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::MatX_LowerTriangularSolve</definition>
        <argsstring>(const idMatX &amp;L, float *x, const float *b, const int n, int skip=0)</argsstring>
        <name>MatX_LowerTriangularSolve</name>
        <reimplements refid="classid_s_i_m_d_processor_1aaa4ac503481ce5b0c8dadbee701818e3">MatX_LowerTriangularSolve</reimplements>
        <param>
          <type>const <ref refid="classid_mat_x" kindref="compound">idMatX</ref> &amp;</type>
          <declname>L</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>skip</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="106" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="1690" bodyend="1812"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a631f644f5ec6645d8c34e9f0ebe04784" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::MatX_LowerTriangularSolveTranspose</definition>
        <argsstring>(const idMatX &amp;L, float *x, const float *b, const int n)</argsstring>
        <name>MatX_LowerTriangularSolveTranspose</name>
        <reimplements refid="classid_s_i_m_d_processor_1a6da241d9cf4a1a94e778206836f8e3d2">MatX_LowerTriangularSolveTranspose</reimplements>
        <param>
          <type>const <ref refid="classid_mat_x" kindref="compound">idMatX</ref> &amp;</type>
          <declname>L</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="107" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="1823" bodyend="1958"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a4757e5dfe52438571a1867b4c3d50a7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool VPCALL</type>
        <definition>bool VPCALL idSIMD_Generic::MatX_LDLTFactor</definition>
        <argsstring>(idMatX &amp;mat, idVecX &amp;invDiag, const int n)</argsstring>
        <name>MatX_LDLTFactor</name>
        <reimplements refid="classid_s_i_m_d_processor_1ab1be51bd347a70d692e6373ebece3cfd">MatX_LDLTFactor</reimplements>
        <param>
          <type><ref refid="classid_mat_x" kindref="compound">idMatX</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>invDiag</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="108" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="1968" bodyend="2196"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1abd7a96065f7f19b5fea82da203c8da0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::BlendJoints</definition>
        <argsstring>(idJointQuat *joints, const idJointQuat *blendJoints, const float lerp, const int *index, const int numJoints)</argsstring>
        <name>BlendJoints</name>
        <reimplements refid="classid_s_i_m_d_processor_1ada530d91fb1f4109e8c80b9b993775b0">BlendJoints</reimplements>
        <param>
          <type><ref refid="classid_joint_quat" kindref="compound">idJointQuat</ref> *</type>
          <declname>joints</declname>
        </param>
        <param>
          <type>const <ref refid="classid_joint_quat" kindref="compound">idJointQuat</ref> *</type>
          <declname>blendJoints</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>lerp</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numJoints</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="110" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="2203" bodyend="2211"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a777a4306064bf05af583ca672bfab079" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::ConvertJointQuatsToJointMats</definition>
        <argsstring>(idJointMat *jointMats, const idJointQuat *jointQuats, const int numJoints)</argsstring>
        <name>ConvertJointQuatsToJointMats</name>
        <reimplements refid="classid_s_i_m_d_processor_1a4ffd724ccedb6cb5dcdb64187d873b1e">ConvertJointQuatsToJointMats</reimplements>
        <param>
          <type><ref refid="classid_joint_mat" kindref="compound">idJointMat</ref> *</type>
          <declname>jointMats</declname>
        </param>
        <param>
          <type>const <ref refid="classid_joint_quat" kindref="compound">idJointQuat</ref> *</type>
          <declname>jointQuats</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numJoints</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="111" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="2218" bodyend="2225"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1aab8963de3f82c536a2022395dabff277" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::ConvertJointMatsToJointQuats</definition>
        <argsstring>(idJointQuat *jointQuats, const idJointMat *jointMats, const int numJoints)</argsstring>
        <name>ConvertJointMatsToJointQuats</name>
        <reimplements refid="classid_s_i_m_d_processor_1ab668b22ead99bb0d4b200580e70335ef">ConvertJointMatsToJointQuats</reimplements>
        <param>
          <type><ref refid="classid_joint_quat" kindref="compound">idJointQuat</ref> *</type>
          <declname>jointQuats</declname>
        </param>
        <param>
          <type>const <ref refid="classid_joint_mat" kindref="compound">idJointMat</ref> *</type>
          <declname>jointMats</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numJoints</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="112" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="2232" bodyend="2238"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1aba9ec452a157c9c342d4b5413d1d862c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::TransformJoints</definition>
        <argsstring>(idJointMat *jointMats, const int *parents, const int firstJoint, const int lastJoint)</argsstring>
        <name>TransformJoints</name>
        <reimplements refid="classid_s_i_m_d_processor_1a8bb157f1b66982899476841a9000cce3">TransformJoints</reimplements>
        <param>
          <type><ref refid="classid_joint_mat" kindref="compound">idJointMat</ref> *</type>
          <declname>jointMats</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>parents</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>firstJoint</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>lastJoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="113" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="2245" bodyend="2252"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a442046b12ddaab8bcc6dcddb0a04520e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::UntransformJoints</definition>
        <argsstring>(idJointMat *jointMats, const int *parents, const int firstJoint, const int lastJoint)</argsstring>
        <name>UntransformJoints</name>
        <reimplements refid="classid_s_i_m_d_processor_1adf2397df605ef8455d4bc3ac0836ecd7">UntransformJoints</reimplements>
        <param>
          <type><ref refid="classid_joint_mat" kindref="compound">idJointMat</ref> *</type>
          <declname>jointMats</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>parents</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>firstJoint</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>lastJoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="114" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="2259" bodyend="2266"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1af95eb376c76ad7a0ef21875b375221de" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::TransformVerts</definition>
        <argsstring>(idDrawVert *verts, const int numVerts, const idJointMat *joints, const idVec4 *weights, const int *index, const int numWeights)</argsstring>
        <name>TransformVerts</name>
        <reimplements refid="classid_s_i_m_d_processor_1a2622fc47a9e88c7e35412d0d29ca270c">TransformVerts</reimplements>
        <param>
          <type><ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref> *</type>
          <declname>verts</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numVerts</declname>
        </param>
        <param>
          <type>const <ref refid="classid_joint_mat" kindref="compound">idJointMat</ref> *</type>
          <declname>joints</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec4" kindref="compound">idVec4</ref> *</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numWeights</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="115" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="2273" bodyend="2289"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1ab438130f1efca602d5b8ef06b4979dbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::TracePointCull</definition>
        <argsstring>(byte *cullBits, byte &amp;totalOr, const float radius, const idPlane *planes, const idDrawVert *verts, const int numVerts)</argsstring>
        <name>TracePointCull</name>
        <reimplements refid="classid_s_i_m_d_processor_1a19c802ac8665f6785ba6bbf3759e3777">TracePointCull</reimplements>
        <param>
          <type>byte *</type>
          <declname>cullBits</declname>
        </param>
        <param>
          <type>byte &amp;</type>
          <declname>totalOr</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> *</type>
          <declname>planes</declname>
        </param>
        <param>
          <type>const <ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref> *</type>
          <declname>verts</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numVerts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="116" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="2296" bodyend="2337"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a84a2479c05a53322b2efa2dc759f8b6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::DecalPointCull</definition>
        <argsstring>(byte *cullBits, const idPlane *planes, const idDrawVert *verts, const int numVerts)</argsstring>
        <name>DecalPointCull</name>
        <reimplements refid="classid_s_i_m_d_processor_1a331efaa0da74d2e6fb18bf19956482ff">DecalPointCull</reimplements>
        <param>
          <type>byte *</type>
          <declname>cullBits</declname>
        </param>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> *</type>
          <declname>planes</declname>
        </param>
        <param>
          <type>const <ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref> *</type>
          <declname>verts</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numVerts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="117" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="2344" bodyend="2368"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a491b547044e9eb23f45abf12885cf25b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::OverlayPointCull</definition>
        <argsstring>(byte *cullBits, idVec2 *texCoords, const idPlane *planes, const idDrawVert *verts, const int numVerts)</argsstring>
        <name>OverlayPointCull</name>
        <reimplements refid="classid_s_i_m_d_processor_1a99e77e6e5c37e126dc58bfa63c8c0fb1">OverlayPointCull</reimplements>
        <param>
          <type>byte *</type>
          <declname>cullBits</declname>
        </param>
        <param>
          <type><ref refid="classid_vec2" kindref="compound">idVec2</ref> *</type>
          <declname>texCoords</declname>
        </param>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> *</type>
          <declname>planes</declname>
        </param>
        <param>
          <type>const <ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref> *</type>
          <declname>verts</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numVerts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="118" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="2375" bodyend="2395"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1aa775c3d4ff59df351d7abf37336ffc09" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::DeriveTriPlanes</definition>
        <argsstring>(idPlane *planes, const idDrawVert *verts, const int numVerts, const int *indexes, const int numIndexes)</argsstring>
        <name>DeriveTriPlanes</name>
        <reimplements refid="classid_s_i_m_d_processor_1a6dbe37651eafc133d8d835b62f85b535">DeriveTriPlanes</reimplements>
        <param>
          <type><ref refid="classid_plane" kindref="compound">idPlane</ref> *</type>
          <declname>planes</declname>
        </param>
        <param>
          <type>const <ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref> *</type>
          <declname>verts</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numVerts</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>indexes</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numIndexes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="119" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="2404" bodyend="2438"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1aad4ff1da9f598b1ea4b0e2d64c1a7fe9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::DeriveTangents</definition>
        <argsstring>(idPlane *planes, idDrawVert *verts, const int numVerts, const int *indexes, const int numIndexes)</argsstring>
        <name>DeriveTangents</name>
        <reimplements refid="classid_s_i_m_d_processor_1a8785d3d031eefc204056ff5dda80cf3b">DeriveTangents</reimplements>
        <param>
          <type><ref refid="classid_plane" kindref="compound">idPlane</ref> *</type>
          <declname>planes</declname>
        </param>
        <param>
          <type><ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref> *</type>
          <declname>verts</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numVerts</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>indexes</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numIndexes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="120" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="2450" bodyend="2559"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a9983576704873afe281e43527530835d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::DeriveUnsmoothedTangents</definition>
        <argsstring>(idDrawVert *verts, const dominantTri_s *dominantTris, const int numVerts)</argsstring>
        <name>DeriveUnsmoothedTangents</name>
        <reimplements refid="classid_s_i_m_d_processor_1ae35cc6151b9695a44e081968eb231d67">DeriveUnsmoothedTangents</reimplements>
        <param>
          <type><ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref> *</type>
          <declname>verts</declname>
        </param>
        <param>
          <type>const <ref refid="structdominant_tri__s" kindref="compound">dominantTri_s</ref> *</type>
          <declname>dominantTris</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numVerts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="121" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="2571" bodyend="2635"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a6da181c29dc954b2839afc6e494af77c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::NormalizeTangents</definition>
        <argsstring>(idDrawVert *verts, const int numVerts)</argsstring>
        <name>NormalizeTangents</name>
        <reimplements refid="classid_s_i_m_d_processor_1a26f01240389f8d5e4874c8bfc19b3977">NormalizeTangents</reimplements>
        <param>
          <type><ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref> *</type>
          <declname>verts</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numVerts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="122" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="2645" bodyend="2662"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1aa0f4fc34761c57243ad6887555e4ca65" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::CreateTextureSpaceLightVectors</definition>
        <argsstring>(idVec3 *lightVectors, const idVec3 &amp;lightOrigin, const idDrawVert *verts, const int numVerts, const int *indexes, const int numIndexes)</argsstring>
        <name>CreateTextureSpaceLightVectors</name>
        <reimplements refid="classid_s_i_m_d_processor_1a2f43422ae5bf7637356791cddb80bf6d">CreateTextureSpaceLightVectors</reimplements>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> *</type>
          <declname>lightVectors</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>lightOrigin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref> *</type>
          <declname>verts</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numVerts</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>indexes</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numIndexes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="123" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="2673" bodyend="2695"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a85a591ebd36bbeb2c157e8ab03141b09" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::CreateSpecularTextureCoords</definition>
        <argsstring>(idVec4 *texCoords, const idVec3 &amp;lightOrigin, const idVec3 &amp;viewOrigin, const idDrawVert *verts, const int numVerts, const int *indexes, const int numIndexes)</argsstring>
        <name>CreateSpecularTextureCoords</name>
        <reimplements refid="classid_s_i_m_d_processor_1af0fdd7d2cdf725dfd410d2e93de72b54">CreateSpecularTextureCoords</reimplements>
        <param>
          <type><ref refid="classid_vec4" kindref="compound">idVec4</ref> *</type>
          <declname>texCoords</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>lightOrigin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>viewOrigin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref> *</type>
          <declname>verts</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numVerts</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>indexes</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numIndexes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="124" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="2707" bodyend="2745"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a9037fb66d2b3784fc3549527ff3548fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int VPCALL</type>
        <definition>int VPCALL idSIMD_Generic::CreateShadowCache</definition>
        <argsstring>(idVec4 *vertexCache, int *vertRemap, const idVec3 &amp;lightOrigin, const idDrawVert *verts, const int numVerts)</argsstring>
        <name>CreateShadowCache</name>
        <reimplements refid="classid_s_i_m_d_processor_1a2a942f0a1bc22ccb8516442c8d0c352a">CreateShadowCache</reimplements>
        <param>
          <type><ref refid="classid_vec4" kindref="compound">idVec4</ref> *</type>
          <declname>vertexCache</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>vertRemap</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>lightOrigin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref> *</type>
          <declname>verts</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numVerts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="125" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="2752" bodyend="2776"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a3f760d329bfd2aa7cda8c4038cd2ed48" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int VPCALL</type>
        <definition>int VPCALL idSIMD_Generic::CreateVertexProgramShadowCache</definition>
        <argsstring>(idVec4 *vertexCache, const idDrawVert *verts, const int numVerts)</argsstring>
        <name>CreateVertexProgramShadowCache</name>
        <reimplements refid="classid_s_i_m_d_processor_1a02bb0f5b84038d923452a0662716d7dc">CreateVertexProgramShadowCache</reimplements>
        <param>
          <type><ref refid="classid_vec4" kindref="compound">idVec4</ref> *</type>
          <declname>vertexCache</declname>
        </param>
        <param>
          <type>const <ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref> *</type>
          <declname>verts</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numVerts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="126" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="2783" bodyend="2796"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a99cccfe57a9c510585ba886b464dffc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void idSIMD_Generic::UpSamplePCMTo44kHz</definition>
        <argsstring>(float *dest, const short *pcm, const int numSamples, const int kHz, const int numChannels)</argsstring>
        <name>UpSamplePCMTo44kHz</name>
        <reimplements refid="classid_s_i_m_d_processor_1a3d0a788a09bbb5fe0358acbca02df63a">UpSamplePCMTo44kHz</reimplements>
        <param>
          <type>float *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const short *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numSamples</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>kHz</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numChannels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="128" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="2805" bodyend="2835"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a4c731dde4c3d5916d40602f9f4a69e54" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void idSIMD_Generic::UpSampleOGGTo44kHz</definition>
        <argsstring>(float *dest, const float *const *ogg, const int numSamples, const int kHz, const int numChannels)</argsstring>
        <name>UpSampleOGGTo44kHz</name>
        <reimplements refid="classid_s_i_m_d_processor_1a4c9c24b8463ec8e732671a54216b4f77">UpSampleOGGTo44kHz</reimplements>
        <param>
          <type>float *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const float *const *</type>
          <declname>ogg</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numSamples</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>kHz</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numChannels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="129" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="2844" bodyend="2881"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a14aa31cfc100d1fa5bb607b3d56f8a34" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::MixSoundTwoSpeakerMono</definition>
        <argsstring>(float *mixBuffer, const float *samples, const int numSamples, const float lastV[2], const float currentV[2])</argsstring>
        <name>MixSoundTwoSpeakerMono</name>
        <reimplements refid="classid_s_i_m_d_processor_1a634302066cabdb0efbf5436a529e665c">MixSoundTwoSpeakerMono</reimplements>
        <param>
          <type>float *</type>
          <declname>mixBuffer</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>samples</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numSamples</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>lastV</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>const float</type>
          <declname>currentV</declname>
          <array>[2]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="130" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="2888" bodyend="2902"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a81364a28cb0fdea715e64f419a3b1293" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::MixSoundTwoSpeakerStereo</definition>
        <argsstring>(float *mixBuffer, const float *samples, const int numSamples, const float lastV[2], const float currentV[2])</argsstring>
        <name>MixSoundTwoSpeakerStereo</name>
        <reimplements refid="classid_s_i_m_d_processor_1a160ef809a9282da83d1077907ac37ecb">MixSoundTwoSpeakerStereo</reimplements>
        <param>
          <type>float *</type>
          <declname>mixBuffer</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>samples</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numSamples</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>lastV</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>const float</type>
          <declname>currentV</declname>
          <array>[2]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="131" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="2909" bodyend="2923"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1ab308d14666bc50920a9e8851f0a453a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::MixSoundSixSpeakerMono</definition>
        <argsstring>(float *mixBuffer, const float *samples, const int numSamples, const float lastV[6], const float currentV[6])</argsstring>
        <name>MixSoundSixSpeakerMono</name>
        <reimplements refid="classid_s_i_m_d_processor_1acc552578ede7d47aaf4947440a1788e0">MixSoundSixSpeakerMono</reimplements>
        <param>
          <type>float *</type>
          <declname>mixBuffer</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>samples</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numSamples</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>lastV</declname>
          <array>[6]</array>
        </param>
        <param>
          <type>const float</type>
          <declname>currentV</declname>
          <array>[6]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="132" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="2930" bodyend="2961"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1a27bfa8ab8c02f05a8b4b57a7ae6b1c5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::MixSoundSixSpeakerStereo</definition>
        <argsstring>(float *mixBuffer, const float *samples, const int numSamples, const float lastV[6], const float currentV[6])</argsstring>
        <name>MixSoundSixSpeakerStereo</name>
        <reimplements refid="classid_s_i_m_d_processor_1a2f6688bee486ac62371b70a5c3291ad1">MixSoundSixSpeakerStereo</reimplements>
        <param>
          <type>float *</type>
          <declname>mixBuffer</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>samples</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numSamples</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>lastV</declname>
          <array>[6]</array>
        </param>
        <param>
          <type>const float</type>
          <declname>currentV</declname>
          <array>[6]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="133" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="2968" bodyend="2999"/>
      </memberdef>
      <memberdef kind="function" id="classid_s_i_m_d___generic_1ac98e75d9ecd0805d4d6313d86b24b4c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void VPCALL</type>
        <definition>void VPCALL idSIMD_Generic::MixedSoundToSamples</definition>
        <argsstring>(short *samples, const float *mixBuffer, const int numSamples)</argsstring>
        <name>MixedSoundToSamples</name>
        <reimplements refid="classid_s_i_m_d_processor_1a7626efdd6a2497b60ea52a754f73e020">MixedSoundToSamples</reimplements>
        <param>
          <type>short *</type>
          <declname>samples</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>mixBuffer</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numSamples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="134" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.cpp" bodystart="3006" bodyend="3017"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="27478">
        <label>idSIMD_3DNow</label>
        <link refid="classid_s_i_m_d__3_d_now"/>
        <childnode refid="27477" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27476">
        <label>idSIMD_AltiVec</label>
        <link refid="classid_s_i_m_d___alti_vec"/>
        <childnode refid="27474" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27479">
        <label>idSIMD_SSE</label>
        <link refid="classid_s_i_m_d___s_s_e"/>
        <childnode refid="27477" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27477">
        <label>idSIMD_MMX</label>
        <link refid="classid_s_i_m_d___m_m_x"/>
        <childnode refid="27474" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27474">
        <label>idSIMD_Generic</label>
        <link refid="classid_s_i_m_d___generic"/>
        <childnode refid="27475" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27480">
        <label>idSIMD_SSE2</label>
        <link refid="classid_s_i_m_d___s_s_e2"/>
        <childnode refid="27479" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27481">
        <label>idSIMD_SSE3</label>
        <link refid="classid_s_i_m_d___s_s_e3"/>
        <childnode refid="27480" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27475">
        <label>idSIMDProcessor</label>
        <link refid="classid_s_i_m_d_processor"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="27482">
        <label>idSIMD_Generic</label>
        <link refid="classid_s_i_m_d___generic"/>
        <childnode refid="27483" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27483">
        <label>idSIMDProcessor</label>
        <link refid="classid_s_i_m_d_processor"/>
      </node>
    </collaborationgraph>
    <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" line="40" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Simd_Generic.h" bodystart="40" bodyend="135"/>
    <listofallmembers>
      <member refid="classid_s_i_m_d___generic_1a69c07f0fc4f308ec1d4390d5d597f231" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>Add</name></member>
      <member refid="classid_s_i_m_d___generic_1ae515f085acd6a4ddcf67ec85e293b801" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>Add</name></member>
      <member refid="classid_s_i_m_d___generic_1afaba52ae826ead6b1dda941a4daaa5b7" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>Add16</name></member>
      <member refid="classid_s_i_m_d___generic_1a78e0d78c870682aec6c5e9f3934c696a" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>AddAssign16</name></member>
      <member refid="classid_s_i_m_d___generic_1abd7a96065f7f19b5fea82da203c8da0d" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>BlendJoints</name></member>
      <member refid="classid_s_i_m_d___generic_1afe6fc2d9200e59d755c5cf8c243372f8" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>Clamp</name></member>
      <member refid="classid_s_i_m_d___generic_1a0e88e2108f6e13a574be5751facff81b" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>ClampMax</name></member>
      <member refid="classid_s_i_m_d___generic_1a571768bafeae51fa15532720b322a0ed" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>ClampMin</name></member>
      <member refid="classid_s_i_m_d___generic_1a17647833092fba6df950bb8ca85cbf06" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>CmpGE</name></member>
      <member refid="classid_s_i_m_d___generic_1a047a409b59f3950cce3c8d1ea5bb42c9" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>CmpGE</name></member>
      <member refid="classid_s_i_m_d___generic_1aecba2f868d8d3dc7b999d6b51f96a210" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>CmpGT</name></member>
      <member refid="classid_s_i_m_d___generic_1a1da13cb9bdf42b9984c04b5654205765" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>CmpGT</name></member>
      <member refid="classid_s_i_m_d___generic_1a3c62480e13da900fee2f14b773b5faa1" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>CmpLE</name></member>
      <member refid="classid_s_i_m_d___generic_1aed6d1ff0e18d2ae29690d5a522c2a6ef" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>CmpLE</name></member>
      <member refid="classid_s_i_m_d___generic_1aa37cb1a680b28a001736ed30a1c7cefa" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>CmpLT</name></member>
      <member refid="classid_s_i_m_d___generic_1a3928f4129bdef50b4f01e5f04c2d5eda" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>CmpLT</name></member>
      <member refid="classid_s_i_m_d___generic_1aab8963de3f82c536a2022395dabff277" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>ConvertJointMatsToJointQuats</name></member>
      <member refid="classid_s_i_m_d___generic_1a777a4306064bf05af583ca672bfab079" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>ConvertJointQuatsToJointMats</name></member>
      <member refid="classid_s_i_m_d___generic_1a85742528567b371a5701e0b8dbc04e15" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>Copy16</name></member>
      <member refid="classid_s_i_m_d_processor_1a1abfed459adb3fb619112440aa865d3a" prot="public" virt="non-virtual"><scope>idSIMD_Generic</scope><name>cpuid</name></member>
      <member refid="classid_s_i_m_d___generic_1a9037fb66d2b3784fc3549527ff3548fe" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>CreateShadowCache</name></member>
      <member refid="classid_s_i_m_d___generic_1a85a591ebd36bbeb2c157e8ab03141b09" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>CreateSpecularTextureCoords</name></member>
      <member refid="classid_s_i_m_d___generic_1aa0f4fc34761c57243ad6887555e4ca65" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>CreateTextureSpaceLightVectors</name></member>
      <member refid="classid_s_i_m_d___generic_1a3f760d329bfd2aa7cda8c4038cd2ed48" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>CreateVertexProgramShadowCache</name></member>
      <member refid="classid_s_i_m_d___generic_1a84a2479c05a53322b2efa2dc759f8b6c" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>DecalPointCull</name></member>
      <member refid="classid_s_i_m_d___generic_1aad4ff1da9f598b1ea4b0e2d64c1a7fe9" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>DeriveTangents</name></member>
      <member refid="classid_s_i_m_d___generic_1aa775c3d4ff59df351d7abf37336ffc09" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>DeriveTriPlanes</name></member>
      <member refid="classid_s_i_m_d___generic_1a9983576704873afe281e43527530835d" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>DeriveUnsmoothedTangents</name></member>
      <member refid="classid_s_i_m_d___generic_1a73b1829106afc47ca066972c7a9f051c" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>Div</name></member>
      <member refid="classid_s_i_m_d___generic_1af2a9ee45a76e4b085769734b4aff5db0" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>Div</name></member>
      <member refid="classid_s_i_m_d___generic_1a52ca6f4d3ba9e2b0dc383864f7110194" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>Dot</name></member>
      <member refid="classid_s_i_m_d___generic_1a25f9d8ab5e955e040ce09d6dbdddb096" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>Dot</name></member>
      <member refid="classid_s_i_m_d___generic_1aa07aed12fee2851e65a431d7af23abc3" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>Dot</name></member>
      <member refid="classid_s_i_m_d___generic_1a0d0be62bcb09e2d9f11332f6357877d0" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>Dot</name></member>
      <member refid="classid_s_i_m_d___generic_1a004b92e0d022ed0c11bf0ff0a84d9f44" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>Dot</name></member>
      <member refid="classid_s_i_m_d___generic_1a1feb2d321e907ca2a80eda9b882305bd" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>Dot</name></member>
      <member refid="classid_s_i_m_d___generic_1ad1b8e2bf037024323ac2fde8f715974d" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>Dot</name></member>
      <member refid="classid_s_i_m_d___generic_1aecf1db158dcdc58b6a2cca96355db96a" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>Dot</name></member>
      <member refid="classid_s_i_m_d___generic_1adc981793729c8cf1457f520eb0290825" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>GetName</name></member>
      <member refid="classid_s_i_m_d_processor_1a75abe059ad7dd6b114124b4ef96c1649" prot="public" virt="non-virtual"><scope>idSIMD_Generic</scope><name>idSIMDProcessor</name></member>
      <member refid="classid_s_i_m_d___generic_1a4757e5dfe52438571a1867b4c3d50a7c" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>MatX_LDLTFactor</name></member>
      <member refid="classid_s_i_m_d___generic_1af7b934ab2bbfdcf3570efd197e0a7bcc" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>MatX_LowerTriangularSolve</name></member>
      <member refid="classid_s_i_m_d___generic_1a631f644f5ec6645d8c34e9f0ebe04784" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>MatX_LowerTriangularSolveTranspose</name></member>
      <member refid="classid_s_i_m_d___generic_1aec0de36205a09528a175139f11de9d80" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>MatX_MultiplyAddVecX</name></member>
      <member refid="classid_s_i_m_d___generic_1a6f9126be21a4a66deb6d2bde2396deff" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>MatX_MultiplyMatX</name></member>
      <member refid="classid_s_i_m_d___generic_1ab04507a40546327247c4c86a3ed89b7a" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>MatX_MultiplySubVecX</name></member>
      <member refid="classid_s_i_m_d___generic_1aebf296f3b917b6e76082c322caeb78ef" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>MatX_MultiplyVecX</name></member>
      <member refid="classid_s_i_m_d___generic_1a193be815ec1aba6956c98c617df9b8db" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>MatX_TransposeMultiplyAddVecX</name></member>
      <member refid="classid_s_i_m_d___generic_1ab3cc05e498e6b59a476311cbb4cfd404" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>MatX_TransposeMultiplyMatX</name></member>
      <member refid="classid_s_i_m_d___generic_1a39b4416205b853f35f8d0dedf1fce5e2" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>MatX_TransposeMultiplySubVecX</name></member>
      <member refid="classid_s_i_m_d___generic_1ac362640354b2ef4e24c6f926ddc47d0b" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>MatX_TransposeMultiplyVecX</name></member>
      <member refid="classid_s_i_m_d___generic_1a2be056ab3c06b77297a9c764623186dd" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>Memcpy</name></member>
      <member refid="classid_s_i_m_d___generic_1a2a356a73a8190a4d43547a722e8bc75b" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>Memset</name></member>
      <member refid="classid_s_i_m_d___generic_1aa1437a11f412eb2d820cf8548be32201" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>MinMax</name></member>
      <member refid="classid_s_i_m_d___generic_1ad46d93a6fcc8423ed12cfd0f7d87717e" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>MinMax</name></member>
      <member refid="classid_s_i_m_d___generic_1a38b9143196c66a58fc2b7cfb4f8748d0" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>MinMax</name></member>
      <member refid="classid_s_i_m_d___generic_1a43e77182806ac4d7977b124b232c7e5c" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>MinMax</name></member>
      <member refid="classid_s_i_m_d___generic_1ad63ed9aa27e5e006ed10d909db7a1dff" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>MinMax</name></member>
      <member refid="classid_s_i_m_d___generic_1ac98e75d9ecd0805d4d6313d86b24b4c3" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>MixedSoundToSamples</name></member>
      <member refid="classid_s_i_m_d___generic_1ab308d14666bc50920a9e8851f0a453a0" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>MixSoundSixSpeakerMono</name></member>
      <member refid="classid_s_i_m_d___generic_1a27bfa8ab8c02f05a8b4b57a7ae6b1c5d" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>MixSoundSixSpeakerStereo</name></member>
      <member refid="classid_s_i_m_d___generic_1a14aa31cfc100d1fa5bb607b3d56f8a34" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>MixSoundTwoSpeakerMono</name></member>
      <member refid="classid_s_i_m_d___generic_1a81364a28cb0fdea715e64f419a3b1293" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>MixSoundTwoSpeakerStereo</name></member>
      <member refid="classid_s_i_m_d___generic_1a171b871f9e141984cb094601917b8eb2" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>Mul</name></member>
      <member refid="classid_s_i_m_d___generic_1a147ca903cf5a449ff117f47388f276b8" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>Mul</name></member>
      <member refid="classid_s_i_m_d___generic_1a7098ca8ca8a42bc1b3e56ec19bb2197c" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>Mul16</name></member>
      <member refid="classid_s_i_m_d___generic_1a7e2003a6f59feaeeae037998c356065b" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>MulAdd</name></member>
      <member refid="classid_s_i_m_d___generic_1af3c6b730f89dac0d3818482e818ed1a4" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>MulAdd</name></member>
      <member refid="classid_s_i_m_d___generic_1a10d0c3fce1c6c053eb48fea76802ea90" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>MulAssign16</name></member>
      <member refid="classid_s_i_m_d___generic_1a570ea418ceb467c0a402dae41c475bef" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>MulSub</name></member>
      <member refid="classid_s_i_m_d___generic_1acb5e1ebdf6ef9ba49dfa92487b374a32" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>MulSub</name></member>
      <member refid="classid_s_i_m_d___generic_1aa19e9b428e9d32e4e6cd06ff5fdf1503" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>Negate16</name></member>
      <member refid="classid_s_i_m_d___generic_1a6da181c29dc954b2839afc6e494af77c" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>NormalizeTangents</name></member>
      <member refid="classid_s_i_m_d___generic_1a491b547044e9eb23f45abf12885cf25b" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>OverlayPointCull</name></member>
      <member refid="classid_s_i_m_d___generic_1a4b1531c5a34fd98e17e7eb2117334894" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>Sub</name></member>
      <member refid="classid_s_i_m_d___generic_1a063fec618dae2f5774c832d28cd17770" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>Sub</name></member>
      <member refid="classid_s_i_m_d___generic_1af84711c9fce5b4a0e764704ad4d518df" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>Sub16</name></member>
      <member refid="classid_s_i_m_d___generic_1a36b8cd57a49a1259d402b91cbb16b1d6" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>SubAssign16</name></member>
      <member refid="classid_s_i_m_d___generic_1ab438130f1efca602d5b8ef06b4979dbb" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>TracePointCull</name></member>
      <member refid="classid_s_i_m_d___generic_1aba9ec452a157c9c342d4b5413d1d862c" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>TransformJoints</name></member>
      <member refid="classid_s_i_m_d___generic_1af95eb376c76ad7a0ef21875b375221de" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>TransformVerts</name></member>
      <member refid="classid_s_i_m_d___generic_1a442046b12ddaab8bcc6dcddb0a04520e" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>UntransformJoints</name></member>
      <member refid="classid_s_i_m_d___generic_1a4c731dde4c3d5916d40602f9f4a69e54" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>UpSampleOGGTo44kHz</name></member>
      <member refid="classid_s_i_m_d___generic_1a99cccfe57a9c510585ba886b464dffc8" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>UpSamplePCMTo44kHz</name></member>
      <member refid="classid_s_i_m_d___generic_1a6926096ebb584ee51b0c7a5127944090" prot="public" virt="virtual"><scope>idSIMD_Generic</scope><name>Zero16</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
