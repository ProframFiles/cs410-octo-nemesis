<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_str" kind="class" prot="public">
    <compoundname>idStr</compoundname>
    <derivedcompoundref refid="classid_pool_str" prot="public" virt="non-virtual">idPoolStr</derivedcompoundref>
    <derivedcompoundref refid="classid_token" prot="public" virt="non-virtual">idToken</derivedcompoundref>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classid_str_1a0e285a4ca93f5092a0c4ca68e30966f4" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int idStr::len</definition>
        <argsstring></argsstring>
        <name>len</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="316" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_str_1ac3197e2cd8ae55b5a60bec9152922bd3" prot="protected" static="no" mutable="no">
        <type>char *</type>
        <definition>char* idStr::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="317" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_str_1aac6b698a3ec112026e2ff88b106410c3" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int idStr::alloced</definition>
        <argsstring></argsstring>
        <name>alloced</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="318" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_str_1a1fc4f425d372e230715b00c21fd2f0a3" prot="protected" static="no" mutable="no">
        <type>char</type>
        <definition>char idStr::baseBuffer[STR_ALLOC_BASE]</definition>
        <argsstring>[STR_ALLOC_BASE]</argsstring>
        <name>baseBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="319" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_str_1aa8a9fa71a7c0313e2e1962da527640c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idStr::idStr</definition>
        <argsstring>(void)</argsstring>
        <name>idStr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="119" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="344" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a38ca9e439c1363fba7167376ff640e9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idStr::idStr</definition>
        <argsstring>(const idStr &amp;text)</argsstring>
        <name>idStr</name>
        <param>
          <type>const <ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="120" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="348" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1ab0ab5ce0087886fa491909962fa9e221" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idStr::idStr</definition>
        <argsstring>(const idStr &amp;text, int start, int end)</argsstring>
        <name>idStr</name>
        <param>
          <type>const <ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="121" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="358" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a2ee268985c93ff86f778f0fe9902f617" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idStr::idStr</definition>
        <argsstring>(const char *text)</argsstring>
        <name>idStr</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="122" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="387" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1ad10df9ca91a27385b401ecf13933f503" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idStr::idStr</definition>
        <argsstring>(const char *text, int start, int end)</argsstring>
        <name>idStr</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="123" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="399" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a51ba3815910e52dee731b3aec6b56003" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idStr::idStr</definition>
        <argsstring>(const bool b)</argsstring>
        <name>idStr</name>
        <param>
          <type>const bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="124" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="428" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1aa69b017af8f69c66459b1483d83db5a1" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idStr::idStr</definition>
        <argsstring>(const char c)</argsstring>
        <name>idStr</name>
        <param>
          <type>const char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="125" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="436" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a591b85c52aac1cf9af6a242c85662508" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idStr::idStr</definition>
        <argsstring>(const int i)</argsstring>
        <name>idStr</name>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="126" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="444" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a16153e415ef74b98079a7a360dc06809" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idStr::idStr</definition>
        <argsstring>(const unsigned u)</argsstring>
        <name>idStr</name>
        <param>
          <type>const unsigned</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="127" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="455" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a74a50472e2a466822debd6e0ad968845" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idStr::idStr</definition>
        <argsstring>(const float f)</argsstring>
        <name>idStr</name>
        <param>
          <type>const float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="128" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="466" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a17afaa385ff9fcc71064a41f9ddcd4c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idStr::~idStr</definition>
        <argsstring>(void)</argsstring>
        <name>~idStr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="129" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="479" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a40a3cda062f70a0852800af843b2fcab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>ID_INLINE size_t idStr::Size</definition>
        <argsstring>(void) const </argsstring>
        <name>Size</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="131" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="483" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a0195e3ef3e09d32ee8e901c1087ed4f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>ID_INLINE const char * idStr::c_str</definition>
        <argsstring>(void) const </argsstring>
        <name>c_str</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="132" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="487" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a0a4f529c2dcbb4dacfce1be857809818" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idStr::operator const char *</definition>
        <argsstring>(void) const </argsstring>
        <name>operator const char *</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="133" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="495" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a3868895c6b299e6c0d13da6dbe583cd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idStr::operator const char *</definition>
        <argsstring>(void)</argsstring>
        <name>operator const char *</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="134" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="491" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a8fdff7067e4eb645a8b3bacf45a044c1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>ID_INLINE char idStr::operator[]</definition>
        <argsstring>(int index) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="136" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="499" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a5d7d52bd51b89c2d71216f82375a9f19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char &amp;</type>
        <definition>ID_INLINE char &amp; idStr::operator[]</definition>
        <argsstring>(int index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="137" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="504" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1ae185b03b480290e19a14b0f93ea2c625" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idStr::operator=</definition>
        <argsstring>(const idStr &amp;text)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="139" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="509" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1acd673d4e6a199497381be8da49730e09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idStr::operator=</definition>
        <argsstring>(const char *text)</argsstring>
        <name>operator=</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="140" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="139" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a80bd23e967b5d79e665602f3faa17699" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
        <definition>ID_INLINE idStr &amp; idStr::operator+=</definition>
        <argsstring>(const idStr &amp;a)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="152" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="606" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1ab7ee3a55751aaac9ba68a41a83f59506" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
        <definition>ID_INLINE idStr &amp; idStr::operator+=</definition>
        <argsstring>(const char *a)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const char *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="153" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="611" bodyend="614"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1aadbeba4da9271bb18e476130764c0ca9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
        <definition>ID_INLINE idStr &amp; idStr::operator+=</definition>
        <argsstring>(const float a)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const float</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="154" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="579" bodyend="586"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1ab638521f3308fbe83c60514c0ea0c474" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
        <definition>ID_INLINE idStr &amp; idStr::operator+=</definition>
        <argsstring>(const char a)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const char</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="155" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="616" bodyend="619"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1af6dae9ddc04729e98ab4be090054aa11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
        <definition>ID_INLINE idStr &amp; idStr::operator+=</definition>
        <argsstring>(const int a)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const int</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="156" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="588" bodyend="595"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a80e1f2a90f3031b871117f4c0d42923e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
        <definition>ID_INLINE idStr &amp; idStr::operator+=</definition>
        <argsstring>(const unsigned a)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const unsigned</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="157" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="597" bodyend="604"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a919e487b00d4b460647a1d63b1d7e6e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
        <definition>ID_INLINE idStr &amp; idStr::operator+=</definition>
        <argsstring>(const bool a)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const bool</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="158" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="621" bodyend="624"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a74a6c794f13efb922fdf4d7f6421a235" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idStr::Cmp</definition>
        <argsstring>(const char *text) const </argsstring>
        <name>Cmp</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="171" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="652" bodyend="655"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1af1ed055ef39df06242c204553d42352b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idStr::Cmpn</definition>
        <argsstring>(const char *text, int n) const </argsstring>
        <name>Cmpn</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="172" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="657" bodyend="660"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a555186e5891d71bd7f3cc57bada616dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idStr::CmpPrefix</definition>
        <argsstring>(const char *text) const </argsstring>
        <name>CmpPrefix</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="173" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="662" bodyend="665"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1ad564a6dc616b113fafa7fbce734ec2b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idStr::Icmp</definition>
        <argsstring>(const char *text) const </argsstring>
        <name>Icmp</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="176" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="667" bodyend="670"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1aa2372a92fd87dd436f0ddd52b1218a3a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idStr::Icmpn</definition>
        <argsstring>(const char *text, int n) const </argsstring>
        <name>Icmpn</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="177" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="672" bodyend="675"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a48a1d1db8f3004ae39705629edd12610" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idStr::IcmpPrefix</definition>
        <argsstring>(const char *text) const </argsstring>
        <name>IcmpPrefix</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="178" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="677" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a2d608ca1aac35120ee0473d29a255f0a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idStr::IcmpNoColor</definition>
        <argsstring>(const char *text) const </argsstring>
        <name>IcmpNoColor</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="181" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="682" bodyend="685"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1aa63a8c4dea61864cd21e808be5f79f91" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idStr::IcmpPath</definition>
        <argsstring>(const char *text) const </argsstring>
        <name>IcmpPath</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="184" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="687" bodyend="690"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a4c4c234439ef3c7008fa40f6ad88472a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idStr::IcmpnPath</definition>
        <argsstring>(const char *text, int n) const </argsstring>
        <name>IcmpnPath</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="185" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="692" bodyend="695"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a6267163c00f35515140b420d303d79d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idStr::IcmpPrefixPath</definition>
        <argsstring>(const char *text) const </argsstring>
        <name>IcmpPrefixPath</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="186" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="697" bodyend="700"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1ace3c5526ffe780098172fb613e8370b9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idStr::Length</definition>
        <argsstring>(void) const </argsstring>
        <name>Length</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="188" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="702" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1ad8e330d88941bd830fb5b3ba0926c087" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idStr::Allocated</definition>
        <argsstring>(void) const </argsstring>
        <name>Allocated</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="189" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="706" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a2dbbfb48544bb67d2a394b5db272efd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idStr::Empty</definition>
        <argsstring>(void)</argsstring>
        <name>Empty</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="190" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="714" bodyend="718"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a874da8f2c60ad2cd4fc431a4f578fbce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idStr::IsEmpty</definition>
        <argsstring>(void) const </argsstring>
        <name>IsEmpty</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="191" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="720" bodyend="722"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a4713271ac763836d2f72a3cdfc68b618" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idStr::Clear</definition>
        <argsstring>(void)</argsstring>
        <name>Clear</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="192" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="724" bodyend="727"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a81278fdb00ae73b6d68d4fe56db94146" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idStr::Append</definition>
        <argsstring>(const char a)</argsstring>
        <name>Append</name>
        <param>
          <type>const char</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="193" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="729" bodyend="734"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a7c78da94d57a82d57d8d1b210f2f4836" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idStr::Append</definition>
        <argsstring>(const idStr &amp;text)</argsstring>
        <name>Append</name>
        <param>
          <type>const <ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="194" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="736" bodyend="747"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a536314d352fad69ddbdab6d9ab5aa3c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idStr::Append</definition>
        <argsstring>(const char *text)</argsstring>
        <name>Append</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="195" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="749" bodyend="762"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a3a1222affeef6475acbda400b13d4522" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idStr::Append</definition>
        <argsstring>(const char *text, int len)</argsstring>
        <name>Append</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="196" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="764" bodyend="777"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1aa24276d84a6c96d3ede8b37b9b6c440a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idStr::Insert</definition>
        <argsstring>(const char a, int index)</argsstring>
        <name>Insert</name>
        <param>
          <type>const char</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="197" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="779" bodyend="795"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a7ba146f7a12fd5756942bb2dfd23fdd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idStr::Insert</definition>
        <argsstring>(const char *text, int index)</argsstring>
        <name>Insert</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="198" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="797" bodyend="815"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a511be29dd894e7ce44506d470a0b707f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idStr::ToLower</definition>
        <argsstring>(void)</argsstring>
        <name>ToLower</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="199" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="817" bodyend="823"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a5fb7f19a7180cdb7a0553a6a4e1b1b13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idStr::ToUpper</definition>
        <argsstring>(void)</argsstring>
        <name>ToUpper</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="200" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="825" bodyend="831"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a5f70d6a21814d3890e25d94d0b18c0e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idStr::IsNumeric</definition>
        <argsstring>(void) const </argsstring>
        <name>IsNumeric</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="201" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="833" bodyend="835"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a3e5ca3180988d6638124bff61404acc2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idStr::IsColor</definition>
        <argsstring>(void) const </argsstring>
        <name>IsColor</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="202" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="837" bodyend="839"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a273d350b8ece6842e12366223ca54c99" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idStr::HasLower</definition>
        <argsstring>(void) const </argsstring>
        <name>HasLower</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="203" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="841" bodyend="843"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1ac6040411fb0ff9668b789d37201cdc94" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idStr::HasUpper</definition>
        <argsstring>(void) const </argsstring>
        <name>HasUpper</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="204" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="845" bodyend="847"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a0f97a4a3e34023e3773cfb9eeb5fac58" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idStr::LengthWithoutColors</definition>
        <argsstring>(void) const </argsstring>
        <name>LengthWithoutColors</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="205" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="855" bodyend="857"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a623fe1f544ac0478e93488a737fe028a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
        <definition>ID_INLINE idStr &amp; idStr::RemoveColors</definition>
        <argsstring>(void)</argsstring>
        <name>RemoveColors</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="206" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="849" bodyend="853"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1abecd7571f8c97346a703a1170cf7f488" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idStr::CapLength</definition>
        <argsstring>(int)</argsstring>
        <name>CapLength</name>
        <param>
          <type>int</type>
          <defname>newlen</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="207" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="859" bodyend="865"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a8bbf0baba0fee6b9b4c411c6faa329e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idStr::Fill</definition>
        <argsstring>(const char ch, int newlen)</argsstring>
        <name>Fill</name>
        <param>
          <type>const char</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>int</type>
          <declname>newlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="208" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="867" bodyend="872"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a973db2c285010f2847e638f762e46e9c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idStr::Find</definition>
        <argsstring>(const char c, int start=0, int end=-1) const </argsstring>
        <name>Find</name>
        <param>
          <type>const char</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="210" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="874" bodyend="879"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a0b2b532181d0e8b9fb15c0c416c6ee2a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idStr::Find</definition>
        <argsstring>(const char *text, bool casesensitive=true, int start=0, int end=-1) const </argsstring>
        <name>Find</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>casesensitive</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="211" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="881" bodyend="886"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1ab402e1d1ad7f61752b7ba8bf44c36b92" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idStr::Filter</definition>
        <argsstring>(const char *filter, bool casesensitive) const </argsstring>
        <name>Filter</name>
        <param>
          <type>const char *</type>
          <declname>filter</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>casesensitive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="212" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="888" bodyend="890"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a19de1de20b92a20b724cd5f4284dd17d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idStr::Last</definition>
        <argsstring>(const char c) const </argsstring>
        <name>Last</name>
        <param>
          <type>const char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="213" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="452" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1ad47697d4c62754a0e758e0c4b1a55951" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>ID_INLINE const char * idStr::Left</definition>
        <argsstring>(int len, idStr &amp;result) const </argsstring>
        <name>Left</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="214" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="892" bodyend="894"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1aace4296bf7226316c4e582cfeccdc81a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>ID_INLINE const char * idStr::Right</definition>
        <argsstring>(int len, idStr &amp;result) const </argsstring>
        <name>Right</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="215" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="896" bodyend="902"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a589c6dcd8319431eb8de9d06fdd69e03" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * idStr::Mid</definition>
        <argsstring>(int start, int len, idStr &amp;result) const </argsstring>
        <name>Mid</name>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="216" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="603" bodyend="619"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a63140b47159bfd5cfd4b660408c14d78" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_str" kindref="compound">idStr</ref></type>
        <definition>ID_INLINE idStr idStr::Left</definition>
        <argsstring>(int len) const </argsstring>
        <name>Left</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="217" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="904" bodyend="906"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a73a82ca849e8f68ab6434bb623df5b71" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_str" kindref="compound">idStr</ref></type>
        <definition>ID_INLINE idStr idStr::Right</definition>
        <argsstring>(int len) const </argsstring>
        <name>Right</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="218" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="908" bodyend="913"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1ab8f6554e68f53ec77b3d80437fdf80dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_str" kindref="compound">idStr</ref></type>
        <definition>idStr idStr::Mid</definition>
        <argsstring>(int start, int len) const </argsstring>
        <name>Mid</name>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="219" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="626" bodyend="641"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1aea37be9de8ed66e3e75a007eb7ee3795" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idStr::StripLeading</definition>
        <argsstring>(const char c)</argsstring>
        <name>StripLeading</name>
        <param>
          <type>const char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="220" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="469" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a3a51812c785f4f56ea3f69ba684b63ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idStr::StripLeading</definition>
        <argsstring>(const char *string)</argsstring>
        <name>StripLeading</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="221" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="481" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1af2b013f95c2155df431b0d6c6112adad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idStr::StripLeadingOnce</definition>
        <argsstring>(const char *string)</argsstring>
        <name>StripLeadingOnce</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="222" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="498" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1af4cc155ff9fdf9ca30070eeb84b37b76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idStr::StripTrailing</definition>
        <argsstring>(const char c)</argsstring>
        <name>StripTrailing</name>
        <param>
          <type>const char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="223" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="515" bodyend="522"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a374fc1039b9b47a628432e06e8d475db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idStr::StripTrailing</definition>
        <argsstring>(const char *string)</argsstring>
        <name>StripTrailing</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="224" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="529" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a2141672d95ca255c51935c18577dfd0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idStr::StripTrailingOnce</definition>
        <argsstring>(const char *string)</argsstring>
        <name>StripTrailingOnce</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="225" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="546" bodyend="556"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a7b1c76829538bdc1056febb333a4d8d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idStr::Strip</definition>
        <argsstring>(const char c)</argsstring>
        <name>Strip</name>
        <param>
          <type>const char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="226" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="915" bodyend="918"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1afb4517728f46c6b3a79a98b783526161" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idStr::Strip</definition>
        <argsstring>(const char *string)</argsstring>
        <name>Strip</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="227" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="920" bodyend="923"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a32309ec6adfd74b7cedb9a520975ea78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idStr::StripTrailingWhitespace</definition>
        <argsstring>(void)</argsstring>
        <name>StripTrailingWhitespace</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="228" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="648" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a960b12e862ab893c3af945f7aa40cac7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
        <definition>idStr &amp; idStr::StripQuotes</definition>
        <argsstring>(void)</argsstring>
        <name>StripQuotes</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="229" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="665" bodyend="685"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a4e5c41c1e43e801a85b76360b4ea14b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idStr::Replace</definition>
        <argsstring>(const char *old, const char *nw)</argsstring>
        <name>Replace</name>
        <param>
          <type>const char *</type>
          <declname>old</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>nw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="230" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="563" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1af49999ac614f8ee4c9aa03dfd514bbe4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idStr::FileNameHash</definition>
        <argsstring>(void) const </argsstring>
        <name>FileNameHash</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="233" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="700" bodyend="720"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a02747cbfd0907b40c60159e668ec71e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
        <definition>idStr &amp; idStr::BackSlashesToSlashes</definition>
        <argsstring>(void)</argsstring>
        <name>BackSlashesToSlashes</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="234" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="727" bodyend="736"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a9c0ef9c31b23d27a7366a900144b49d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
        <definition>idStr &amp; idStr::SetFileExtension</definition>
        <argsstring>(const char *extension)</argsstring>
        <name>SetFileExtension</name>
        <param>
          <type>const char *</type>
          <declname>extension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="235" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="743" bodyend="750"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1acc44209359a7316c133a48bc624d107f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
        <definition>idStr &amp; idStr::StripFileExtension</definition>
        <argsstring>(void)</argsstring>
        <name>StripFileExtension</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="236" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="757" bodyend="768"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1ae9792dff232e25d504650d5acb07669d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
        <definition>idStr &amp; idStr::StripAbsoluteFileExtension</definition>
        <argsstring>(void)</argsstring>
        <name>StripAbsoluteFileExtension</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="237" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="775" bodyend="787"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a2b5891d27f15e0aa60599078293a8d60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
        <definition>idStr &amp; idStr::DefaultFileExtension</definition>
        <argsstring>(const char *extension)</argsstring>
        <name>DefaultFileExtension</name>
        <param>
          <type>const char *</type>
          <declname>extension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="238" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="794" bodyend="808"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a31fef8fc513f2db6d256650d292c2eb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
        <definition>idStr &amp; idStr::DefaultPath</definition>
        <argsstring>(const char *basepath)</argsstring>
        <name>DefaultPath</name>
        <param>
          <type>const char *</type>
          <declname>basepath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="239" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="815" bodyend="823"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a5d89d37d5fa008e0f473482bfae9787b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idStr::AppendPath</definition>
        <argsstring>(const char *text)</argsstring>
        <name>AppendPath</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="240" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="830" bodyend="857"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a24e163d1af0d46a292e3a815fb734376" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
        <definition>idStr &amp; idStr::StripFilename</definition>
        <argsstring>(void)</argsstring>
        <name>StripFilename</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="241" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="864" bodyend="878"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a18d832344ff9314ba8b95fd6121c16dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
        <definition>idStr &amp; idStr::StripPath</definition>
        <argsstring>(void)</argsstring>
        <name>StripPath</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="242" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="885" bodyend="895"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1aec20f6c2126ba3fc0c8ba8df7edf21a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idStr::ExtractFilePath</definition>
        <argsstring>(idStr &amp;dest) const </argsstring>
        <name>ExtractFilePath</name>
        <param>
          <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="243" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="902" bodyend="914"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a21c0836150162b7954baa46ce13a63e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idStr::ExtractFileName</definition>
        <argsstring>(idStr &amp;dest) const </argsstring>
        <name>ExtractFileName</name>
        <param>
          <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="244" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="921" bodyend="933"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1aaefeb2df504d7dbfe074ea8795ac84d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idStr::ExtractFileBase</definition>
        <argsstring>(idStr &amp;dest) const </argsstring>
        <name>ExtractFileBase</name>
        <param>
          <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="245" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="940" bodyend="958"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a9d2d60d70b878f04fb36f342307cb549" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idStr::ExtractFileExtension</definition>
        <argsstring>(idStr &amp;dest) const </argsstring>
        <name>ExtractFileExtension</name>
        <param>
          <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="246" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="965" bodyend="982"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a1aa252d21e293b0afbd9a3b1a2ec2191" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idStr::CheckExtension</definition>
        <argsstring>(const char *ext)</argsstring>
        <name>CheckExtension</name>
        <param>
          <type>const char *</type>
          <declname>ext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="247" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="925" bodyend="927"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1adda0dc6f36c0732619d5e8e637db70a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idStr::ReAllocate</definition>
        <argsstring>(int amount, bool keepold)</argsstring>
        <name>ReAllocate</name>
        <param>
          <type>int</type>
          <declname>amount</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="299" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="80" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1aa4485ac7dbd1d2de0a3df9cdb5e05d3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idStr::FreeData</definition>
        <argsstring>(void)</argsstring>
        <name>FreeData</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="300" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="123" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a0b8d78b572cdb13d604967be60ff3cf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idStr::BestUnit</definition>
        <argsstring>(const char *format, float value, Measure_t measure)</argsstring>
        <name>BestUnit</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <param>
          <type>Measure_t</type>
          <declname>measure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="303" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="1591" bodyend="1602"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a81928d2b154ace7e0fc24d1e6aee0a48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idStr::SetUnit</definition>
        <argsstring>(const char *format, float value, int unit, Measure_t measure)</argsstring>
        <name>SetUnit</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>Measure_t</type>
          <declname>measure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="305" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="1609" bodyend="1614"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a340e582f9efe55795466224885b6c6ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idStr::DynamicMemoryUsed</definition>
        <argsstring>() const </argsstring>
        <name>DynamicMemoryUsed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="312" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="1040" bodyend="1042"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classid_str_1a6f57c0386e176ff0f764cbacb7b22c76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classid_str" kindref="compound">idStr</ref></type>
        <definition>idStr operator+</definition>
        <argsstring>(const idStr &amp;a, const idStr &amp;b)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="142" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="519" bodyend="523"/>
      </memberdef>
      <memberdef kind="friend" id="classid_str_1acf48365e3213b7129b5f39a2da205936" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classid_str" kindref="compound">idStr</ref></type>
        <definition>idStr operator+</definition>
        <argsstring>(const idStr &amp;a, const char *b)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="143" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="525" bodyend="529"/>
      </memberdef>
      <memberdef kind="friend" id="classid_str_1a246ac0422320018cbd642868d545e6ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classid_str" kindref="compound">idStr</ref></type>
        <definition>idStr operator+</definition>
        <argsstring>(const char *a, const idStr &amp;b)</argsstring>
        <name>operator+</name>
        <param>
          <type>const char *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="144" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="531" bodyend="535"/>
      </memberdef>
      <memberdef kind="friend" id="classid_str_1a53d8478fe0a3eecd0ecab5278109191d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classid_str" kindref="compound">idStr</ref></type>
        <definition>idStr operator+</definition>
        <argsstring>(const idStr &amp;a, const float b)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="146" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="549" bodyend="557"/>
      </memberdef>
      <memberdef kind="friend" id="classid_str_1af37edace714c06ebb615675039bdae03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classid_str" kindref="compound">idStr</ref></type>
        <definition>idStr operator+</definition>
        <argsstring>(const idStr &amp;a, const int b)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="147" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="559" bodyend="567"/>
      </memberdef>
      <memberdef kind="friend" id="classid_str_1a6b1428402b2bc64b9a9f83ae691f92ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classid_str" kindref="compound">idStr</ref></type>
        <definition>idStr operator+</definition>
        <argsstring>(const idStr &amp;a, const unsigned b)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const unsigned</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="148" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="569" bodyend="577"/>
      </memberdef>
      <memberdef kind="friend" id="classid_str_1ad972ef7e40a4078fabe5a16f06f69b0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classid_str" kindref="compound">idStr</ref></type>
        <definition>idStr operator+</definition>
        <argsstring>(const idStr &amp;a, const bool b)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="149" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="537" bodyend="541"/>
      </memberdef>
      <memberdef kind="friend" id="classid_str_1a51011b2cbe0350586eabb3a8375c5f49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classid_str" kindref="compound">idStr</ref></type>
        <definition>idStr operator+</definition>
        <argsstring>(const idStr &amp;a, const char b)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="150" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="543" bodyend="547"/>
      </memberdef>
      <memberdef kind="friend" id="classid_str_1ae7b7752f009b66c34a5be3254f94c378" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const idStr &amp;a, const idStr &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="161" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="626" bodyend="628"/>
      </memberdef>
      <memberdef kind="friend" id="classid_str_1ae223c86a19218ab77b6a59613da2b048" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const idStr &amp;a, const char *b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="162" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="630" bodyend="633"/>
      </memberdef>
      <memberdef kind="friend" id="classid_str_1af405867c41e1dc9a63bea1caebd2a65e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const char *a, const idStr &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const char *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="163" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="635" bodyend="638"/>
      </memberdef>
      <memberdef kind="friend" id="classid_str_1ae1e0d34932abe2a4882984171ddedf94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const idStr &amp;a, const idStr &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="166" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="640" bodyend="642"/>
      </memberdef>
      <memberdef kind="friend" id="classid_str_1a6fd65c255c05e73b415e5024c327175d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const idStr &amp;a, const char *b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="167" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="644" bodyend="646"/>
      </memberdef>
      <memberdef kind="friend" id="classid_str_1abe02c8bbed971313c9a04022ed861c23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const char *a, const idStr &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const char *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="168" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="648" bodyend="650"/>
      </memberdef>
      <memberdef kind="friend" id="classid_str_1ae3cb81b7f9b7bccf5d9f78f93463d373" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend int</type>
        <definition>int sprintf</definition>
        <argsstring>(idStr &amp;dest, const char *fmt,...)</argsstring>
        <name>sprintf</name>
        <param>
          <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="296" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="1528" bodyend="1540"/>
      </memberdef>
      <memberdef kind="friend" id="classid_str_1a5944d61ba1a39daa7b504af71b41461c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend int</type>
        <definition>int vsprintf</definition>
        <argsstring>(idStr &amp;dest, const char *fmt, va_list ap)</argsstring>
        <name>vsprintf</name>
        <param>
          <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>ap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="297" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="1549" bodyend="1558"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classid_str_1a805da00d292492b2b796a7a09f3c8451" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idStr::Length</definition>
        <argsstring>(const char *s)</argsstring>
        <name>Length</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="250" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="929" bodyend="933"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a30b37203b49853669185ea7cafa16d00" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>ID_INLINE char * idStr::ToLower</definition>
        <argsstring>(char *s)</argsstring>
        <name>ToLower</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="251" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="935" bodyend="942"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a098248c59368cad5e88a1c6272042f5d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>ID_INLINE char * idStr::ToUpper</definition>
        <argsstring>(char *s)</argsstring>
        <name>ToUpper</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="252" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="944" bodyend="951"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1ac1ffc05499534ee6b0fc54e70c1455ee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idStr::IsNumeric</definition>
        <argsstring>(const char *s)</argsstring>
        <name>IsNumeric</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="253" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="1000" bodyend="1020"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a2b6416e86786c97b70c26bdf76504ec9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idStr::IsColor</definition>
        <argsstring>(const char *s)</argsstring>
        <name>IsColor</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="254" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="985" bodyend="987"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1aa8eb197191a8a973f2916f722addd946" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idStr::HasLower</definition>
        <argsstring>(const char *s)</argsstring>
        <name>HasLower</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="255" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="1029" bodyend="1042"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1aae412b093b1afb2ebe401a29ad80f99b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idStr::HasUpper</definition>
        <argsstring>(const char *s)</argsstring>
        <name>HasUpper</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="256" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="1051" bodyend="1064"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a7977f140aa398f8961552505d1e80237" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idStr::LengthWithoutColors</definition>
        <argsstring>(const char *s)</argsstring>
        <name>LengthWithoutColors</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="257" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="1412" bodyend="1432"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a4b02a0cf819182c6799a104bea3f0fa2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * idStr::RemoveColors</definition>
        <argsstring>(char *s)</argsstring>
        <name>RemoveColors</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="258" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="1439" bodyend="1458"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a21cd3be140badef76b296cb4e9b0205a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idStr::Cmp</definition>
        <argsstring>(const char *s1, const char *s2)</argsstring>
        <name>Cmp</name>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="259" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="1071" bodyend="1085"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1ab0fbfbf0d825981ee766779be10a41ae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idStr::Cmpn</definition>
        <argsstring>(const char *s1, const char *s2, int n)</argsstring>
        <name>Cmpn</name>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="260" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="1092" bodyend="1112"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a3aeef29363de6be9b39cdf0e89d0a211" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idStr::Icmp</definition>
        <argsstring>(const char *s1, const char *s2)</argsstring>
        <name>Icmp</name>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="261" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="1119" bodyend="1145"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1aadd63ee6decd18757060b977971c2feb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idStr::Icmpn</definition>
        <argsstring>(const char *s1, const char *s2, int n)</argsstring>
        <name>Icmpn</name>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="262" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="1152" bodyend="1184"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1ab15cbb6c34b33319f0604b97d0ea603b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idStr::IcmpNoColor</definition>
        <argsstring>(const char *s1, const char *s2)</argsstring>
        <name>IcmpNoColor</name>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="263" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="1191" bodyend="1223"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a09a8ec11af4c7efd9b08a279cc0effb5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idStr::IcmpPath</definition>
        <argsstring>(const char *s1, const char *s2)</argsstring>
        <name>IcmpPath</name>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="264" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="1230" bodyend="1292"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a00a47b535fe91885ba0a44352f289597" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idStr::IcmpnPath</definition>
        <argsstring>(const char *s1, const char *s2, int n)</argsstring>
        <name>IcmpnPath</name>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="265" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="1299" bodyend="1367"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1ace53df5a3223b1d08e77dce89db15985" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idStr::Append</definition>
        <argsstring>(char *dest, int size, const char *src)</argsstring>
        <name>Append</name>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="266" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="1397" bodyend="1405"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a2637da39283ee6ecca29bdb0c3cca842" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idStr::Copynz</definition>
        <argsstring>(char *dest, const char *src, int destsize)</argsstring>
        <name>Copynz</name>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>destsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="267" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="1376" bodyend="1388"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a7d246b71b00cf49c907a20cae5cbb788" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idStr::snPrintf</definition>
        <argsstring>(char *dest, int size, const char *fmt,...) id_attribute((format(printf</argsstring>
        <name>snPrintf</name>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="268" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="1465" bodyend="1482"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1afce071949cb3e150ce3c157c360d1294" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int static int</type>
        <definition>int idStr::vsnPrintf</definition>
        <argsstring>(char *dest, int size, const char *fmt, va_list argptr)</argsstring>
        <name>vsnPrintf</name>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>argptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="269" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="1502" bodyend="1519"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a1306c03487da4cb347b41dfd70cc04ec" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idStr::FindChar</definition>
        <argsstring>(const char *str, const char c, int start=0, int end=-1)</argsstring>
        <name>FindChar</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="270" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="186" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a60a523be6d8ecf539cb059a35a415aa6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idStr::FindText</definition>
        <argsstring>(const char *str, const char *text, bool casesensitive=true, int start=0, int end=-1)</argsstring>
        <name>FindText</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>casesensitive</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="271" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="207" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1ac4b0ac5b2a6423558064494dbd31256e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idStr::Filter</definition>
        <argsstring>(const char *filter, const char *name, bool casesensitive)</argsstring>
        <name>Filter</name>
        <param>
          <type>const char *</type>
          <declname>filter</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>casesensitive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="272" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="249" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a62f65b25752ef37e2cef16f7ae7fb776" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idStr::StripMediaName</definition>
        <argsstring>(const char *name, idStr &amp;mediaName)</argsstring>
        <name>StripMediaName</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>mediaName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="273" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="359" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1acf9f2c059cda4d2a3076d2096a04d9d5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idStr::CheckExtension</definition>
        <argsstring>(const char *name, const char *ext)</argsstring>
        <name>CheckExtension</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>ext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="274" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="383" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a91bd5437f6d2ccb8357e66d08eee2a97" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * idStr::FloatArrayToString</definition>
        <argsstring>(const float *array, const int length, const int precision)</argsstring>
        <name>FloatArrayToString</name>
        <param>
          <type>const float *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>precision</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="275" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="418" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a91d298ab039cc8c712bdc56e5f3cb20f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idStr::Hash</definition>
        <argsstring>(const char *string)</argsstring>
        <name>Hash</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="278" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="953" bodyend="959"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a49664c968324c23e0f00c6bc99089116" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idStr::Hash</definition>
        <argsstring>(const char *string, int length)</argsstring>
        <name>Hash</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="279" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="961" bodyend="967"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a377d285b944a7ea31f662fafbce273d0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idStr::IHash</definition>
        <argsstring>(const char *string)</argsstring>
        <name>IHash</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="280" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="969" bodyend="975"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a75c4395985f0c81fad5e6abcef164080" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idStr::IHash</definition>
        <argsstring>(const char *string, int length)</argsstring>
        <name>IHash</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="281" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="977" bodyend="983"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a9b00ac7b09be3f2606729113e059f24a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>ID_INLINE char idStr::ToLower</definition>
        <argsstring>(char c)</argsstring>
        <name>ToLower</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="284" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="989" bodyend="994"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a7231bf64eedc50499679505d60a9e08e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>ID_INLINE char idStr::ToUpper</definition>
        <argsstring>(char c)</argsstring>
        <name>ToUpper</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="285" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="996" bodyend="1001"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a38f94ac01956c331720a7bbf23395e8c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idStr::CharIsPrintable</definition>
        <argsstring>(int c)</argsstring>
        <name>CharIsPrintable</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="286" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="1003" bodyend="1006"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1adee8745c42335a8f526e65b1e7b01b77" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idStr::CharIsLower</definition>
        <argsstring>(int c)</argsstring>
        <name>CharIsLower</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="287" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="1008" bodyend="1011"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a86b23dd69314f16812d0f475fd42f9ed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idStr::CharIsUpper</definition>
        <argsstring>(int c)</argsstring>
        <name>CharIsUpper</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="288" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="1013" bodyend="1016"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1ae1f5da578e6506210fea35ecadb1694c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idStr::CharIsAlpha</definition>
        <argsstring>(int c)</argsstring>
        <name>CharIsAlpha</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="289" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="1018" bodyend="1022"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a483a64c7d2e732f2a427c1177882269a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idStr::CharIsNumeric</definition>
        <argsstring>(int c)</argsstring>
        <name>CharIsNumeric</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="290" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="1024" bodyend="1026"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a630dbea3f55a99fe2100548f59e70296" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idStr::CharIsNewLine</definition>
        <argsstring>(char c)</argsstring>
        <name>CharIsNewLine</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="291" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="1028" bodyend="1030"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1ae4e5de50eecccda1c6ada7bab35fa551" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idStr::CharIsTab</definition>
        <argsstring>(char c)</argsstring>
        <name>CharIsTab</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="292" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="1032" bodyend="1034"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1adfcb1ed6854ce214a767ec96684eff2a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idStr::ColorIndex</definition>
        <argsstring>(int c)</argsstring>
        <name>ColorIndex</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="293" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="1036" bodyend="1038"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1aff72864ee07aeb6adf66a61186f53fac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
        <definition>idVec4 &amp; idStr::ColorForIndex</definition>
        <argsstring>(int i)</argsstring>
        <name>ColorForIndex</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="294" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="71" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1acff2db3e1f073df0ede55c76c77dc6ba" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idStr::InitMemory</definition>
        <argsstring>(void)</argsstring>
        <name>InitMemory</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="307" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="1621" bodyend="1625"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1ac19b63a6fa807d92d0ad1f15d993208e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idStr::ShutdownMemory</definition>
        <argsstring>(void)</argsstring>
        <name>ShutdownMemory</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="308" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="1632" bodyend="1636"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1ae469611b8bdbc2597fb3c177aebcf177" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idStr::PurgeMemory</definition>
        <argsstring>(void)</argsstring>
        <name>PurgeMemory</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="309" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="1643" bodyend="1647"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a966a4643f0ff5f98993ad686f7aed8b1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idStr::ShowMemoryUsage_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>ShowMemoryUsage_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="310" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="1654" bodyend="1660"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a81b6c3a3e52a85054252ff3602ffbc99" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_str" kindref="compound">idStr</ref></type>
        <definition>idStr idStr::FormatNumber</definition>
        <argsstring>(int number)</argsstring>
        <name>FormatNumber</name>
        <param>
          <type>int</type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="313" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.cpp" bodystart="1682" bodyend="1742"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classid_str_1a1b4d8de16ebe93b63cfb2b70e2c0440d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idStr::Init</definition>
        <argsstring>(void)</argsstring>
        <name>Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="321" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="334" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="classid_str_1a6a7b71dc6b9986545092723722956d30" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>char ID_INLINE void idStr::EnsureAlloced</definition>
        <argsstring>(int amount, bool keepold=true)</argsstring>
        <name>EnsureAlloced</name>
        <param>
          <type>int</type>
          <declname>amount</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepold</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="322" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="328" bodyend="332"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="27967">
        <label>idPoolStr</label>
        <link refid="classid_pool_str"/>
        <childnode refid="27966" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27968">
        <label>idToken</label>
        <link refid="classid_token"/>
        <childnode refid="27966" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27966">
        <label>idStr</label>
        <link refid="classid_str"/>
      </node>
    </inheritancegraph>
    <location file="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" line="116" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/Str.h" bodystart="116" bodyend="323"/>
    <listofallmembers>
      <member refid="classid_str_1ad8e330d88941bd830fb5b3ba0926c087" prot="public" virt="non-virtual"><scope>idStr</scope><name>Allocated</name></member>
      <member refid="classid_str_1aac6b698a3ec112026e2ff88b106410c3" prot="protected" virt="non-virtual"><scope>idStr</scope><name>alloced</name></member>
      <member refid="classid_str_1a81278fdb00ae73b6d68d4fe56db94146" prot="public" virt="non-virtual"><scope>idStr</scope><name>Append</name></member>
      <member refid="classid_str_1a7c78da94d57a82d57d8d1b210f2f4836" prot="public" virt="non-virtual"><scope>idStr</scope><name>Append</name></member>
      <member refid="classid_str_1a536314d352fad69ddbdab6d9ab5aa3c3" prot="public" virt="non-virtual"><scope>idStr</scope><name>Append</name></member>
      <member refid="classid_str_1a3a1222affeef6475acbda400b13d4522" prot="public" virt="non-virtual"><scope>idStr</scope><name>Append</name></member>
      <member refid="classid_str_1ace53df5a3223b1d08e77dce89db15985" prot="public" virt="non-virtual"><scope>idStr</scope><name>Append</name></member>
      <member refid="classid_str_1a5d89d37d5fa008e0f473482bfae9787b" prot="public" virt="non-virtual"><scope>idStr</scope><name>AppendPath</name></member>
      <member refid="classid_str_1a02747cbfd0907b40c60159e668ec71e0" prot="public" virt="non-virtual"><scope>idStr</scope><name>BackSlashesToSlashes</name></member>
      <member refid="classid_str_1a1fc4f425d372e230715b00c21fd2f0a3" prot="protected" virt="non-virtual"><scope>idStr</scope><name>baseBuffer</name></member>
      <member refid="classid_str_1a0b8d78b572cdb13d604967be60ff3cf9" prot="public" virt="non-virtual"><scope>idStr</scope><name>BestUnit</name></member>
      <member refid="classid_str_1a0195e3ef3e09d32ee8e901c1087ed4f4" prot="public" virt="non-virtual"><scope>idStr</scope><name>c_str</name></member>
      <member refid="classid_str_1abecd7571f8c97346a703a1170cf7f488" prot="public" virt="non-virtual"><scope>idStr</scope><name>CapLength</name></member>
      <member refid="classid_str_1ae1f5da578e6506210fea35ecadb1694c" prot="public" virt="non-virtual"><scope>idStr</scope><name>CharIsAlpha</name></member>
      <member refid="classid_str_1adee8745c42335a8f526e65b1e7b01b77" prot="public" virt="non-virtual"><scope>idStr</scope><name>CharIsLower</name></member>
      <member refid="classid_str_1a630dbea3f55a99fe2100548f59e70296" prot="public" virt="non-virtual"><scope>idStr</scope><name>CharIsNewLine</name></member>
      <member refid="classid_str_1a483a64c7d2e732f2a427c1177882269a" prot="public" virt="non-virtual"><scope>idStr</scope><name>CharIsNumeric</name></member>
      <member refid="classid_str_1a38f94ac01956c331720a7bbf23395e8c" prot="public" virt="non-virtual"><scope>idStr</scope><name>CharIsPrintable</name></member>
      <member refid="classid_str_1ae4e5de50eecccda1c6ada7bab35fa551" prot="public" virt="non-virtual"><scope>idStr</scope><name>CharIsTab</name></member>
      <member refid="classid_str_1a86b23dd69314f16812d0f475fd42f9ed" prot="public" virt="non-virtual"><scope>idStr</scope><name>CharIsUpper</name></member>
      <member refid="classid_str_1a1aa252d21e293b0afbd9a3b1a2ec2191" prot="public" virt="non-virtual"><scope>idStr</scope><name>CheckExtension</name></member>
      <member refid="classid_str_1acf9f2c059cda4d2a3076d2096a04d9d5" prot="public" virt="non-virtual"><scope>idStr</scope><name>CheckExtension</name></member>
      <member refid="classid_str_1a4713271ac763836d2f72a3cdfc68b618" prot="public" virt="non-virtual"><scope>idStr</scope><name>Clear</name></member>
      <member refid="classid_str_1a74a6c794f13efb922fdf4d7f6421a235" prot="public" virt="non-virtual"><scope>idStr</scope><name>Cmp</name></member>
      <member refid="classid_str_1a21cd3be140badef76b296cb4e9b0205a" prot="public" virt="non-virtual"><scope>idStr</scope><name>Cmp</name></member>
      <member refid="classid_str_1af1ed055ef39df06242c204553d42352b" prot="public" virt="non-virtual"><scope>idStr</scope><name>Cmpn</name></member>
      <member refid="classid_str_1ab0fbfbf0d825981ee766779be10a41ae" prot="public" virt="non-virtual"><scope>idStr</scope><name>Cmpn</name></member>
      <member refid="classid_str_1a555186e5891d71bd7f3cc57bada616dd" prot="public" virt="non-virtual"><scope>idStr</scope><name>CmpPrefix</name></member>
      <member refid="classid_str_1aff72864ee07aeb6adf66a61186f53fac" prot="public" virt="non-virtual"><scope>idStr</scope><name>ColorForIndex</name></member>
      <member refid="classid_str_1adfcb1ed6854ce214a767ec96684eff2a" prot="public" virt="non-virtual"><scope>idStr</scope><name>ColorIndex</name></member>
      <member refid="classid_str_1a2637da39283ee6ecca29bdb0c3cca842" prot="public" virt="non-virtual"><scope>idStr</scope><name>Copynz</name></member>
      <member refid="classid_str_1ac3197e2cd8ae55b5a60bec9152922bd3" prot="protected" virt="non-virtual"><scope>idStr</scope><name>data</name></member>
      <member refid="classid_str_1a2b5891d27f15e0aa60599078293a8d60" prot="public" virt="non-virtual"><scope>idStr</scope><name>DefaultFileExtension</name></member>
      <member refid="classid_str_1a31fef8fc513f2db6d256650d292c2eb7" prot="public" virt="non-virtual"><scope>idStr</scope><name>DefaultPath</name></member>
      <member refid="classid_str_1a340e582f9efe55795466224885b6c6ed" prot="public" virt="non-virtual"><scope>idStr</scope><name>DynamicMemoryUsed</name></member>
      <member refid="classid_str_1a2dbbfb48544bb67d2a394b5db272efd2" prot="public" virt="non-virtual"><scope>idStr</scope><name>Empty</name></member>
      <member refid="classid_str_1a6a7b71dc6b9986545092723722956d30" prot="protected" virt="non-virtual"><scope>idStr</scope><name>EnsureAlloced</name></member>
      <member refid="classid_str_1aaefeb2df504d7dbfe074ea8795ac84d7" prot="public" virt="non-virtual"><scope>idStr</scope><name>ExtractFileBase</name></member>
      <member refid="classid_str_1a9d2d60d70b878f04fb36f342307cb549" prot="public" virt="non-virtual"><scope>idStr</scope><name>ExtractFileExtension</name></member>
      <member refid="classid_str_1a21c0836150162b7954baa46ce13a63e0" prot="public" virt="non-virtual"><scope>idStr</scope><name>ExtractFileName</name></member>
      <member refid="classid_str_1aec20f6c2126ba3fc0c8ba8df7edf21a2" prot="public" virt="non-virtual"><scope>idStr</scope><name>ExtractFilePath</name></member>
      <member refid="classid_str_1af49999ac614f8ee4c9aa03dfd514bbe4" prot="public" virt="non-virtual"><scope>idStr</scope><name>FileNameHash</name></member>
      <member refid="classid_str_1a8bbf0baba0fee6b9b4c411c6faa329e0" prot="public" virt="non-virtual"><scope>idStr</scope><name>Fill</name></member>
      <member refid="classid_str_1ab402e1d1ad7f61752b7ba8bf44c36b92" prot="public" virt="non-virtual"><scope>idStr</scope><name>Filter</name></member>
      <member refid="classid_str_1ac4b0ac5b2a6423558064494dbd31256e" prot="public" virt="non-virtual"><scope>idStr</scope><name>Filter</name></member>
      <member refid="classid_str_1a973db2c285010f2847e638f762e46e9c" prot="public" virt="non-virtual"><scope>idStr</scope><name>Find</name></member>
      <member refid="classid_str_1a0b2b532181d0e8b9fb15c0c416c6ee2a" prot="public" virt="non-virtual"><scope>idStr</scope><name>Find</name></member>
      <member refid="classid_str_1a1306c03487da4cb347b41dfd70cc04ec" prot="public" virt="non-virtual"><scope>idStr</scope><name>FindChar</name></member>
      <member refid="classid_str_1a60a523be6d8ecf539cb059a35a415aa6" prot="public" virt="non-virtual"><scope>idStr</scope><name>FindText</name></member>
      <member refid="classid_str_1a91bd5437f6d2ccb8357e66d08eee2a97" prot="public" virt="non-virtual"><scope>idStr</scope><name>FloatArrayToString</name></member>
      <member refid="classid_str_1a81b6c3a3e52a85054252ff3602ffbc99" prot="public" virt="non-virtual"><scope>idStr</scope><name>FormatNumber</name></member>
      <member refid="classid_str_1aa4485ac7dbd1d2de0a3df9cdb5e05d3a" prot="public" virt="non-virtual"><scope>idStr</scope><name>FreeData</name></member>
      <member refid="classid_str_1a91d298ab039cc8c712bdc56e5f3cb20f" prot="public" virt="non-virtual"><scope>idStr</scope><name>Hash</name></member>
      <member refid="classid_str_1a49664c968324c23e0f00c6bc99089116" prot="public" virt="non-virtual"><scope>idStr</scope><name>Hash</name></member>
      <member refid="classid_str_1a273d350b8ece6842e12366223ca54c99" prot="public" virt="non-virtual"><scope>idStr</scope><name>HasLower</name></member>
      <member refid="classid_str_1aa8eb197191a8a973f2916f722addd946" prot="public" virt="non-virtual"><scope>idStr</scope><name>HasLower</name></member>
      <member refid="classid_str_1ac6040411fb0ff9668b789d37201cdc94" prot="public" virt="non-virtual"><scope>idStr</scope><name>HasUpper</name></member>
      <member refid="classid_str_1aae412b093b1afb2ebe401a29ad80f99b" prot="public" virt="non-virtual"><scope>idStr</scope><name>HasUpper</name></member>
      <member refid="classid_str_1ad564a6dc616b113fafa7fbce734ec2b8" prot="public" virt="non-virtual"><scope>idStr</scope><name>Icmp</name></member>
      <member refid="classid_str_1a3aeef29363de6be9b39cdf0e89d0a211" prot="public" virt="non-virtual"><scope>idStr</scope><name>Icmp</name></member>
      <member refid="classid_str_1aa2372a92fd87dd436f0ddd52b1218a3a" prot="public" virt="non-virtual"><scope>idStr</scope><name>Icmpn</name></member>
      <member refid="classid_str_1aadd63ee6decd18757060b977971c2feb" prot="public" virt="non-virtual"><scope>idStr</scope><name>Icmpn</name></member>
      <member refid="classid_str_1a2d608ca1aac35120ee0473d29a255f0a" prot="public" virt="non-virtual"><scope>idStr</scope><name>IcmpNoColor</name></member>
      <member refid="classid_str_1ab15cbb6c34b33319f0604b97d0ea603b" prot="public" virt="non-virtual"><scope>idStr</scope><name>IcmpNoColor</name></member>
      <member refid="classid_str_1a4c4c234439ef3c7008fa40f6ad88472a" prot="public" virt="non-virtual"><scope>idStr</scope><name>IcmpnPath</name></member>
      <member refid="classid_str_1a00a47b535fe91885ba0a44352f289597" prot="public" virt="non-virtual"><scope>idStr</scope><name>IcmpnPath</name></member>
      <member refid="classid_str_1aa63a8c4dea61864cd21e808be5f79f91" prot="public" virt="non-virtual"><scope>idStr</scope><name>IcmpPath</name></member>
      <member refid="classid_str_1a09a8ec11af4c7efd9b08a279cc0effb5" prot="public" virt="non-virtual"><scope>idStr</scope><name>IcmpPath</name></member>
      <member refid="classid_str_1a48a1d1db8f3004ae39705629edd12610" prot="public" virt="non-virtual"><scope>idStr</scope><name>IcmpPrefix</name></member>
      <member refid="classid_str_1a6267163c00f35515140b420d303d79d0" prot="public" virt="non-virtual"><scope>idStr</scope><name>IcmpPrefixPath</name></member>
      <member refid="classid_str_1aa8a9fa71a7c0313e2e1962da527640c2" prot="public" virt="non-virtual"><scope>idStr</scope><name>idStr</name></member>
      <member refid="classid_str_1a38ca9e439c1363fba7167376ff640e9c" prot="public" virt="non-virtual"><scope>idStr</scope><name>idStr</name></member>
      <member refid="classid_str_1ab0ab5ce0087886fa491909962fa9e221" prot="public" virt="non-virtual"><scope>idStr</scope><name>idStr</name></member>
      <member refid="classid_str_1a2ee268985c93ff86f778f0fe9902f617" prot="public" virt="non-virtual"><scope>idStr</scope><name>idStr</name></member>
      <member refid="classid_str_1ad10df9ca91a27385b401ecf13933f503" prot="public" virt="non-virtual"><scope>idStr</scope><name>idStr</name></member>
      <member refid="classid_str_1a51ba3815910e52dee731b3aec6b56003" prot="public" virt="non-virtual"><scope>idStr</scope><name>idStr</name></member>
      <member refid="classid_str_1aa69b017af8f69c66459b1483d83db5a1" prot="public" virt="non-virtual"><scope>idStr</scope><name>idStr</name></member>
      <member refid="classid_str_1a591b85c52aac1cf9af6a242c85662508" prot="public" virt="non-virtual"><scope>idStr</scope><name>idStr</name></member>
      <member refid="classid_str_1a16153e415ef74b98079a7a360dc06809" prot="public" virt="non-virtual"><scope>idStr</scope><name>idStr</name></member>
      <member refid="classid_str_1a74a50472e2a466822debd6e0ad968845" prot="public" virt="non-virtual"><scope>idStr</scope><name>idStr</name></member>
      <member refid="classid_str_1a377d285b944a7ea31f662fafbce273d0" prot="public" virt="non-virtual"><scope>idStr</scope><name>IHash</name></member>
      <member refid="classid_str_1a75c4395985f0c81fad5e6abcef164080" prot="public" virt="non-virtual"><scope>idStr</scope><name>IHash</name></member>
      <member refid="classid_str_1a1b4d8de16ebe93b63cfb2b70e2c0440d" prot="protected" virt="non-virtual"><scope>idStr</scope><name>Init</name></member>
      <member refid="classid_str_1acff2db3e1f073df0ede55c76c77dc6ba" prot="public" virt="non-virtual"><scope>idStr</scope><name>InitMemory</name></member>
      <member refid="classid_str_1aa24276d84a6c96d3ede8b37b9b6c440a" prot="public" virt="non-virtual"><scope>idStr</scope><name>Insert</name></member>
      <member refid="classid_str_1a7ba146f7a12fd5756942bb2dfd23fdd5" prot="public" virt="non-virtual"><scope>idStr</scope><name>Insert</name></member>
      <member refid="classid_str_1a3e5ca3180988d6638124bff61404acc2" prot="public" virt="non-virtual"><scope>idStr</scope><name>IsColor</name></member>
      <member refid="classid_str_1a2b6416e86786c97b70c26bdf76504ec9" prot="public" virt="non-virtual"><scope>idStr</scope><name>IsColor</name></member>
      <member refid="classid_str_1a874da8f2c60ad2cd4fc431a4f578fbce" prot="public" virt="non-virtual"><scope>idStr</scope><name>IsEmpty</name></member>
      <member refid="classid_str_1a5f70d6a21814d3890e25d94d0b18c0e5" prot="public" virt="non-virtual"><scope>idStr</scope><name>IsNumeric</name></member>
      <member refid="classid_str_1ac1ffc05499534ee6b0fc54e70c1455ee" prot="public" virt="non-virtual"><scope>idStr</scope><name>IsNumeric</name></member>
      <member refid="classid_str_1a19de1de20b92a20b724cd5f4284dd17d" prot="public" virt="non-virtual"><scope>idStr</scope><name>Last</name></member>
      <member refid="classid_str_1ad47697d4c62754a0e758e0c4b1a55951" prot="public" virt="non-virtual"><scope>idStr</scope><name>Left</name></member>
      <member refid="classid_str_1a63140b47159bfd5cfd4b660408c14d78" prot="public" virt="non-virtual"><scope>idStr</scope><name>Left</name></member>
      <member refid="classid_str_1a0e285a4ca93f5092a0c4ca68e30966f4" prot="protected" virt="non-virtual"><scope>idStr</scope><name>len</name></member>
      <member refid="classid_str_1ace3c5526ffe780098172fb613e8370b9" prot="public" virt="non-virtual"><scope>idStr</scope><name>Length</name></member>
      <member refid="classid_str_1a805da00d292492b2b796a7a09f3c8451" prot="public" virt="non-virtual"><scope>idStr</scope><name>Length</name></member>
      <member refid="classid_str_1a0f97a4a3e34023e3773cfb9eeb5fac58" prot="public" virt="non-virtual"><scope>idStr</scope><name>LengthWithoutColors</name></member>
      <member refid="classid_str_1a7977f140aa398f8961552505d1e80237" prot="public" virt="non-virtual"><scope>idStr</scope><name>LengthWithoutColors</name></member>
      <member refid="classid_str_1a589c6dcd8319431eb8de9d06fdd69e03" prot="public" virt="non-virtual"><scope>idStr</scope><name>Mid</name></member>
      <member refid="classid_str_1ab8f6554e68f53ec77b3d80437fdf80dd" prot="public" virt="non-virtual"><scope>idStr</scope><name>Mid</name></member>
      <member refid="classid_str_1a0a4f529c2dcbb4dacfce1be857809818" prot="public" virt="non-virtual"><scope>idStr</scope><name>operator const char *</name></member>
      <member refid="classid_str_1a3868895c6b299e6c0d13da6dbe583cd5" prot="public" virt="non-virtual"><scope>idStr</scope><name>operator const char *</name></member>
      <member refid="classid_str_1ae1e0d34932abe2a4882984171ddedf94" prot="public" virt="non-virtual"><scope>idStr</scope><name>operator!=</name></member>
      <member refid="classid_str_1a6fd65c255c05e73b415e5024c327175d" prot="public" virt="non-virtual"><scope>idStr</scope><name>operator!=</name></member>
      <member refid="classid_str_1abe02c8bbed971313c9a04022ed861c23" prot="public" virt="non-virtual"><scope>idStr</scope><name>operator!=</name></member>
      <member refid="classid_str_1a6f57c0386e176ff0f764cbacb7b22c76" prot="public" virt="non-virtual"><scope>idStr</scope><name>operator+</name></member>
      <member refid="classid_str_1acf48365e3213b7129b5f39a2da205936" prot="public" virt="non-virtual"><scope>idStr</scope><name>operator+</name></member>
      <member refid="classid_str_1a246ac0422320018cbd642868d545e6ac" prot="public" virt="non-virtual"><scope>idStr</scope><name>operator+</name></member>
      <member refid="classid_str_1a53d8478fe0a3eecd0ecab5278109191d" prot="public" virt="non-virtual"><scope>idStr</scope><name>operator+</name></member>
      <member refid="classid_str_1af37edace714c06ebb615675039bdae03" prot="public" virt="non-virtual"><scope>idStr</scope><name>operator+</name></member>
      <member refid="classid_str_1a6b1428402b2bc64b9a9f83ae691f92ff" prot="public" virt="non-virtual"><scope>idStr</scope><name>operator+</name></member>
      <member refid="classid_str_1ad972ef7e40a4078fabe5a16f06f69b0f" prot="public" virt="non-virtual"><scope>idStr</scope><name>operator+</name></member>
      <member refid="classid_str_1a51011b2cbe0350586eabb3a8375c5f49" prot="public" virt="non-virtual"><scope>idStr</scope><name>operator+</name></member>
      <member refid="classid_str_1a80bd23e967b5d79e665602f3faa17699" prot="public" virt="non-virtual"><scope>idStr</scope><name>operator+=</name></member>
      <member refid="classid_str_1ab7ee3a55751aaac9ba68a41a83f59506" prot="public" virt="non-virtual"><scope>idStr</scope><name>operator+=</name></member>
      <member refid="classid_str_1aadbeba4da9271bb18e476130764c0ca9" prot="public" virt="non-virtual"><scope>idStr</scope><name>operator+=</name></member>
      <member refid="classid_str_1ab638521f3308fbe83c60514c0ea0c474" prot="public" virt="non-virtual"><scope>idStr</scope><name>operator+=</name></member>
      <member refid="classid_str_1af6dae9ddc04729e98ab4be090054aa11" prot="public" virt="non-virtual"><scope>idStr</scope><name>operator+=</name></member>
      <member refid="classid_str_1a80e1f2a90f3031b871117f4c0d42923e" prot="public" virt="non-virtual"><scope>idStr</scope><name>operator+=</name></member>
      <member refid="classid_str_1a919e487b00d4b460647a1d63b1d7e6e3" prot="public" virt="non-virtual"><scope>idStr</scope><name>operator+=</name></member>
      <member refid="classid_str_1ae185b03b480290e19a14b0f93ea2c625" prot="public" virt="non-virtual"><scope>idStr</scope><name>operator=</name></member>
      <member refid="classid_str_1acd673d4e6a199497381be8da49730e09" prot="public" virt="non-virtual"><scope>idStr</scope><name>operator=</name></member>
      <member refid="classid_str_1ae7b7752f009b66c34a5be3254f94c378" prot="public" virt="non-virtual"><scope>idStr</scope><name>operator==</name></member>
      <member refid="classid_str_1ae223c86a19218ab77b6a59613da2b048" prot="public" virt="non-virtual"><scope>idStr</scope><name>operator==</name></member>
      <member refid="classid_str_1af405867c41e1dc9a63bea1caebd2a65e" prot="public" virt="non-virtual"><scope>idStr</scope><name>operator==</name></member>
      <member refid="classid_str_1a8fdff7067e4eb645a8b3bacf45a044c1" prot="public" virt="non-virtual"><scope>idStr</scope><name>operator[]</name></member>
      <member refid="classid_str_1a5d7d52bd51b89c2d71216f82375a9f19" prot="public" virt="non-virtual"><scope>idStr</scope><name>operator[]</name></member>
      <member refid="classid_str_1ae469611b8bdbc2597fb3c177aebcf177" prot="public" virt="non-virtual"><scope>idStr</scope><name>PurgeMemory</name></member>
      <member refid="classid_str_1adda0dc6f36c0732619d5e8e637db70a0" prot="public" virt="non-virtual"><scope>idStr</scope><name>ReAllocate</name></member>
      <member refid="classid_str_1a623fe1f544ac0478e93488a737fe028a" prot="public" virt="non-virtual"><scope>idStr</scope><name>RemoveColors</name></member>
      <member refid="classid_str_1a4b02a0cf819182c6799a104bea3f0fa2" prot="public" virt="non-virtual"><scope>idStr</scope><name>RemoveColors</name></member>
      <member refid="classid_str_1a4e5c41c1e43e801a85b76360b4ea14b2" prot="public" virt="non-virtual"><scope>idStr</scope><name>Replace</name></member>
      <member refid="classid_str_1aace4296bf7226316c4e582cfeccdc81a" prot="public" virt="non-virtual"><scope>idStr</scope><name>Right</name></member>
      <member refid="classid_str_1a73a82ca849e8f68ab6434bb623df5b71" prot="public" virt="non-virtual"><scope>idStr</scope><name>Right</name></member>
      <member refid="classid_str_1a9c0ef9c31b23d27a7366a900144b49d2" prot="public" virt="non-virtual"><scope>idStr</scope><name>SetFileExtension</name></member>
      <member refid="classid_str_1a81928d2b154ace7e0fc24d1e6aee0a48" prot="public" virt="non-virtual"><scope>idStr</scope><name>SetUnit</name></member>
      <member refid="classid_str_1a966a4643f0ff5f98993ad686f7aed8b1" prot="public" virt="non-virtual"><scope>idStr</scope><name>ShowMemoryUsage_f</name></member>
      <member refid="classid_str_1ac19b63a6fa807d92d0ad1f15d993208e" prot="public" virt="non-virtual"><scope>idStr</scope><name>ShutdownMemory</name></member>
      <member refid="classid_str_1a40a3cda062f70a0852800af843b2fcab" prot="public" virt="non-virtual"><scope>idStr</scope><name>Size</name></member>
      <member refid="classid_str_1a7d246b71b00cf49c907a20cae5cbb788" prot="public" virt="non-virtual"><scope>idStr</scope><name>snPrintf</name></member>
      <member refid="classid_str_1ae3cb81b7f9b7bccf5d9f78f93463d373" prot="public" virt="non-virtual"><scope>idStr</scope><name>sprintf</name></member>
      <member refid="classid_str_1a7b1c76829538bdc1056febb333a4d8d0" prot="public" virt="non-virtual"><scope>idStr</scope><name>Strip</name></member>
      <member refid="classid_str_1afb4517728f46c6b3a79a98b783526161" prot="public" virt="non-virtual"><scope>idStr</scope><name>Strip</name></member>
      <member refid="classid_str_1ae9792dff232e25d504650d5acb07669d" prot="public" virt="non-virtual"><scope>idStr</scope><name>StripAbsoluteFileExtension</name></member>
      <member refid="classid_str_1acc44209359a7316c133a48bc624d107f" prot="public" virt="non-virtual"><scope>idStr</scope><name>StripFileExtension</name></member>
      <member refid="classid_str_1a24e163d1af0d46a292e3a815fb734376" prot="public" virt="non-virtual"><scope>idStr</scope><name>StripFilename</name></member>
      <member refid="classid_str_1aea37be9de8ed66e3e75a007eb7ee3795" prot="public" virt="non-virtual"><scope>idStr</scope><name>StripLeading</name></member>
      <member refid="classid_str_1a3a51812c785f4f56ea3f69ba684b63ec" prot="public" virt="non-virtual"><scope>idStr</scope><name>StripLeading</name></member>
      <member refid="classid_str_1af2b013f95c2155df431b0d6c6112adad" prot="public" virt="non-virtual"><scope>idStr</scope><name>StripLeadingOnce</name></member>
      <member refid="classid_str_1a62f65b25752ef37e2cef16f7ae7fb776" prot="public" virt="non-virtual"><scope>idStr</scope><name>StripMediaName</name></member>
      <member refid="classid_str_1a18d832344ff9314ba8b95fd6121c16dc" prot="public" virt="non-virtual"><scope>idStr</scope><name>StripPath</name></member>
      <member refid="classid_str_1a960b12e862ab893c3af945f7aa40cac7" prot="public" virt="non-virtual"><scope>idStr</scope><name>StripQuotes</name></member>
      <member refid="classid_str_1af4cc155ff9fdf9ca30070eeb84b37b76" prot="public" virt="non-virtual"><scope>idStr</scope><name>StripTrailing</name></member>
      <member refid="classid_str_1a374fc1039b9b47a628432e06e8d475db" prot="public" virt="non-virtual"><scope>idStr</scope><name>StripTrailing</name></member>
      <member refid="classid_str_1a2141672d95ca255c51935c18577dfd0b" prot="public" virt="non-virtual"><scope>idStr</scope><name>StripTrailingOnce</name></member>
      <member refid="classid_str_1a32309ec6adfd74b7cedb9a520975ea78" prot="public" virt="non-virtual"><scope>idStr</scope><name>StripTrailingWhitespace</name></member>
      <member refid="classid_str_1a511be29dd894e7ce44506d470a0b707f" prot="public" virt="non-virtual"><scope>idStr</scope><name>ToLower</name></member>
      <member refid="classid_str_1a30b37203b49853669185ea7cafa16d00" prot="public" virt="non-virtual"><scope>idStr</scope><name>ToLower</name></member>
      <member refid="classid_str_1a9b00ac7b09be3f2606729113e059f24a" prot="public" virt="non-virtual"><scope>idStr</scope><name>ToLower</name></member>
      <member refid="classid_str_1a5fb7f19a7180cdb7a0553a6a4e1b1b13" prot="public" virt="non-virtual"><scope>idStr</scope><name>ToUpper</name></member>
      <member refid="classid_str_1a098248c59368cad5e88a1c6272042f5d" prot="public" virt="non-virtual"><scope>idStr</scope><name>ToUpper</name></member>
      <member refid="classid_str_1a7231bf64eedc50499679505d60a9e08e" prot="public" virt="non-virtual"><scope>idStr</scope><name>ToUpper</name></member>
      <member refid="classid_str_1afce071949cb3e150ce3c157c360d1294" prot="public" virt="non-virtual"><scope>idStr</scope><name>vsnPrintf</name></member>
      <member refid="classid_str_1a5944d61ba1a39daa7b504af71b41461c" prot="public" virt="non-virtual"><scope>idStr</scope><name>vsprintf</name></member>
      <member refid="classid_str_1a17afaa385ff9fcc71064a41f9ddcd4c3" prot="public" virt="non-virtual"><scope>idStr</scope><name>~idStr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
