<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_surface" kind="class" prot="public">
    <compoundname>idSurface</compoundname>
    <derivedcompoundref refid="classid_surface___patch" prot="public" virt="non-virtual">idSurface_Patch</derivedcompoundref>
    <derivedcompoundref refid="classid_surface___polytope" prot="public" virt="non-virtual">idSurface_Polytope</derivedcompoundref>
    <derivedcompoundref refid="classid_surface___swept_spline" prot="public" virt="non-virtual">idSurface_SweptSpline</derivedcompoundref>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classid_surface_1a83507b368bd25efb97e7cfe4b33aea82" prot="protected" static="no" mutable="no">
        <type><ref refid="classid_list" kindref="compound">idList</ref>&lt; <ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref> &gt;</type>
        <definition>idList&lt;idDrawVert&gt; idSurface::verts</definition>
        <argsstring></argsstring>
        <name>verts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="96" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_surface_1a80fdb6e880d74be0f9c1d2bc4a042f25" prot="protected" static="no" mutable="no">
        <type><ref refid="classid_list" kindref="compound">idList</ref>&lt; int &gt;</type>
        <definition>idList&lt;int&gt; idSurface::indexes</definition>
        <argsstring></argsstring>
        <name>indexes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="97" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_surface_1aa1353d8b0b9040af403e29ac1b472830" prot="protected" static="no" mutable="no">
        <type><ref refid="classid_list" kindref="compound">idList</ref>&lt; <ref refid="structsurface_edge__s" kindref="compound">surfaceEdge_t</ref> &gt;</type>
        <definition>idList&lt;surfaceEdge_t&gt; idSurface::edges</definition>
        <argsstring></argsstring>
        <name>edges</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="98" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_surface_1a507e4bf0a552e5ca5b66b9b9e336581e" prot="protected" static="no" mutable="no">
        <type><ref refid="classid_list" kindref="compound">idList</ref>&lt; int &gt;</type>
        <definition>idList&lt;int&gt; idSurface::edgeIndexes</definition>
        <argsstring></argsstring>
        <name>edgeIndexes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="99" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_surface_1af70f3a93d19b43cca75dda061259bd86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idSurface::idSurface</definition>
        <argsstring>(void)</argsstring>
        <name>idSurface</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="51" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" bodystart="111" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classid_surface_1a21f5bec0dfa5d8c10f9bd18c02d9d4e1" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idSurface::idSurface</definition>
        <argsstring>(const idSurface &amp;surf)</argsstring>
        <name>idSurface</name>
        <param>
          <type>const <ref refid="classid_surface" kindref="compound">idSurface</ref> &amp;</type>
          <declname>surf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="52" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" bodystart="133" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classid_surface_1a56b3731e463aea221b9f2062782f6add" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idSurface::idSurface</definition>
        <argsstring>(const idDrawVert *verts, const int numVerts, const int *indexes, const int numIndexes)</argsstring>
        <name>idSurface</name>
        <param>
          <type>const <ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref> *</type>
          <declname>verts</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numVerts</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>indexes</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numIndexes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="53" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" bodystart="119" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classid_surface_1ac7aaf60f00afdf7c858abdbe7ea22b0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idSurface::~idSurface</definition>
        <argsstring>(void)</argsstring>
        <name>~idSurface</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="54" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" bodystart="145" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classid_surface_1a9e5a84b5e1f31a942774c821612d94a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref> &amp;</type>
        <definition>ID_INLINE const idDrawVert &amp; idSurface::operator[]</definition>
        <argsstring>(const int index) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>const int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="56" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" bodystart="153" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classid_surface_1a857cc7e7f6887d6a7ef772dcf3eacb61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref> &amp;</type>
        <definition>ID_INLINE idDrawVert &amp; idSurface::operator[]</definition>
        <argsstring>(const int index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="57" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" bodystart="162" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classid_surface_1a1fd22b90d0644194b245fced7a1b648d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_surface" kindref="compound">idSurface</ref> &amp;</type>
        <definition>ID_INLINE idSurface &amp; idSurface::operator+=</definition>
        <argsstring>(const idSurface &amp;surf)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classid_surface" kindref="compound">idSurface</ref> &amp;</type>
          <declname>surf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="58" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" bodystart="171" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classid_surface_1a6ffcbff5c33422ff4c14e72d16b9c96c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int idSurface::GetNumIndexes</definition>
        <argsstring>(void) const </argsstring>
        <name>GetNumIndexes</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="60" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classid_surface_1aad67e58bc1243249bfaf66ca8294b437" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const int *</type>
        <definition>const int* idSurface::GetIndexes</definition>
        <argsstring>(void) const </argsstring>
        <name>GetIndexes</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="61" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classid_surface_1a1c035cab76ffd296cc8849394e658596" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int idSurface::GetNumVertices</definition>
        <argsstring>(void) const </argsstring>
        <name>GetNumVertices</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="62" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classid_surface_1a95f3f690d5c74b08d62bf00908f796f9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref> *</type>
        <definition>const idDrawVert* idSurface::GetVertices</definition>
        <argsstring>(void) const </argsstring>
        <name>GetVertices</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="63" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classid_surface_1a651eb3174822aea9370c34e64baec448" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const int *</type>
        <definition>const int* idSurface::GetEdgeIndexes</definition>
        <argsstring>(void) const </argsstring>
        <name>GetEdgeIndexes</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="64" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classid_surface_1a865786349ec34fd6e48dba0cafd67a73" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structsurface_edge__s" kindref="compound">surfaceEdge_t</ref> *</type>
        <definition>const surfaceEdge_t* idSurface::GetEdges</definition>
        <argsstring>(void) const </argsstring>
        <name>GetEdges</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="65" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classid_surface_1a014e512baef31614d7869240c80730ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idSurface::Clear</definition>
        <argsstring>(void)</argsstring>
        <name>Clear</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="67" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" bodystart="189" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classid_surface_1ae933dbdf072a7e493e03d6a42f54ace1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idSurface::SwapTriangles</definition>
        <argsstring>(idSurface &amp;surf)</argsstring>
        <name>SwapTriangles</name>
        <param>
          <type><ref refid="classid_surface" kindref="compound">idSurface</ref> &amp;</type>
          <declname>surf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="68" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" bodystart="201" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classid_surface_1ab5b1e255353e573acfbc3cba65910c52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idSurface::TranslateSelf</definition>
        <argsstring>(const idVec3 &amp;translation)</argsstring>
        <name>TranslateSelf</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>translation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="69" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" bodystart="213" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classid_surface_1a042e945eebec4eab657d7eb6c2eb5d5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idSurface::RotateSelf</definition>
        <argsstring>(const idMat3 &amp;rotation)</argsstring>
        <name>RotateSelf</name>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="70" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" bodystart="224" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classid_surface_1a6603efd0f29346fc18b72395e780a2a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idSurface::Split</definition>
        <argsstring>(const idPlane &amp;plane, const float epsilon, idSurface **front, idSurface **back, int *frontOnPlaneEdges=NULL, int *backOnPlaneEdges=NULL) const </argsstring>
        <name>Split</name>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>plane</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
        </param>
        <param>
          <type><ref refid="classid_surface" kindref="compound">idSurface</ref> **</type>
          <declname>front</declname>
        </param>
        <param>
          <type><ref refid="classid_surface" kindref="compound">idSurface</ref> **</type>
          <declname>back</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>frontOnPlaneEdges</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>int *</type>
          <declname>backOnPlaneEdges</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="75" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.cpp" bodystart="52" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="classid_surface_1aa76440a7aa19983abdd4f7131c8f9b42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idSurface::ClipInPlace</definition>
        <argsstring>(const idPlane &amp;plane, const float epsilon=ON_EPSILON, const bool keepOn=false)</argsstring>
        <name>ClipInPlace</name>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>plane</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
          <defval>ON_EPSILON</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>keepOn</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="78" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.cpp" bodystart="370" bodyend="595"/>
      </memberdef>
      <memberdef kind="function" id="classid_surface_1ad9174785e97b0caa2844cbde5e4d26c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idSurface::IsConnected</definition>
        <argsstring>(void) const </argsstring>
        <name>IsConnected</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="81" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.cpp" bodystart="602" bodyend="653"/>
      </memberdef>
      <memberdef kind="function" id="classid_surface_1a73c63b309a668e3e31b05ba5ef362b2e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idSurface::IsClosed</definition>
        <argsstring>(void) const </argsstring>
        <name>IsClosed</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="83" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.cpp" bodystart="660" bodyend="667"/>
      </memberdef>
      <memberdef kind="function" id="classid_surface_1a11c7c893ce9ed650bf629c232c56b090" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idSurface::IsPolytope</definition>
        <argsstring>(const float epsilon=0.1f) const </argsstring>
        <name>IsPolytope</name>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
          <defval>0.1f</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="85" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.cpp" bodystart="674" bodyend="692"/>
      </memberdef>
      <memberdef kind="function" id="classid_surface_1a9e72d038b956d79ce1092474b18f2d0b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float idSurface::PlaneDistance</definition>
        <argsstring>(const idPlane &amp;plane) const </argsstring>
        <name>PlaneDistance</name>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>plane</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="87" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.cpp" bodystart="699" bodyend="727"/>
      </memberdef>
      <memberdef kind="function" id="classid_surface_1adaba27e47307b3136ddd708d802e5297" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idSurface::PlaneSide</definition>
        <argsstring>(const idPlane &amp;plane, const float epsilon=ON_EPSILON) const </argsstring>
        <name>PlaneSide</name>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>plane</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
          <defval>ON_EPSILON</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="88" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.cpp" bodystart="734" bodyend="766"/>
      </memberdef>
      <memberdef kind="function" id="classid_surface_1a4c61c8265eed7fd428b291eea3c4542a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idSurface::LineIntersection</definition>
        <argsstring>(const idVec3 &amp;start, const idVec3 &amp;end, bool backFaceCull=false) const </argsstring>
        <name>LineIntersection</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>backFaceCull</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="91" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.cpp" bodystart="773" bodyend="778"/>
      </memberdef>
      <memberdef kind="function" id="classid_surface_1a648a06560d34a17767b38a76bfff1f69" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idSurface::RayIntersection</definition>
        <argsstring>(const idVec3 &amp;start, const idVec3 &amp;dir, float &amp;scale, bool backFaceCull=false) const </argsstring>
        <name>RayIntersection</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>backFaceCull</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="93" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.cpp" bodystart="785" bodyend="832"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classid_surface_1a1aa8ef596836cdb89cabdaf05b7e94ca" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idSurface::GenerateEdgeIndexes</definition>
        <argsstring>(void)</argsstring>
        <name>GenerateEdgeIndexes</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="102" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.cpp" bodystart="841" bodyend="902"/>
      </memberdef>
      <memberdef kind="function" id="classid_surface_1a6a4c2cf80dc7954071b257b21b72f65b" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idSurface::FindEdge</definition>
        <argsstring>(int v1, int v2) const </argsstring>
        <name>FindEdge</name>
        <param>
          <type>int</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="103" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.cpp" bodystart="909" bodyend="930"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="27974">
        <label>idMapPatch</label>
        <link refid="classid_map_patch"/>
        <childnode refid="27973" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27976">
        <label>idSurface_SweptSpline</label>
        <link refid="classid_surface___swept_spline"/>
        <childnode refid="27972" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27975">
        <label>idSurface_Polytope</label>
        <link refid="classid_surface___polytope"/>
        <childnode refid="27972" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27973">
        <label>idSurface_Patch</label>
        <link refid="classid_surface___patch"/>
        <childnode refid="27972" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27972">
        <label>idSurface</label>
        <link refid="classid_surface"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="27978">
        <label>idList&lt; surfaceEdge_s &gt;</label>
        <link refid="classid_list"/>
      </node>
      <node id="27977">
        <label>idSurface</label>
        <link refid="classid_surface"/>
        <childnode refid="27978" relation="usage">
          <edgelabel>edges</edgelabel>
        </childnode>
        <childnode refid="27979" relation="usage">
          <edgelabel>indexes</edgelabel>
          <edgelabel>edgeIndexes</edgelabel>
        </childnode>
        <childnode refid="27980" relation="usage">
          <edgelabel>verts</edgelabel>
        </childnode>
      </node>
      <node id="27979">
        <label>idList&lt; int &gt;</label>
        <link refid="classid_list"/>
      </node>
      <node id="27980">
        <label>idList&lt; idDrawVert &gt;</label>
        <link refid="classid_list"/>
      </node>
    </collaborationgraph>
    <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" line="49" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Surface.h" bodystart="49" bodyend="104"/>
    <listofallmembers>
      <member refid="classid_surface_1a014e512baef31614d7869240c80730ae" prot="public" virt="non-virtual"><scope>idSurface</scope><name>Clear</name></member>
      <member refid="classid_surface_1aa76440a7aa19983abdd4f7131c8f9b42" prot="public" virt="non-virtual"><scope>idSurface</scope><name>ClipInPlace</name></member>
      <member refid="classid_surface_1a507e4bf0a552e5ca5b66b9b9e336581e" prot="protected" virt="non-virtual"><scope>idSurface</scope><name>edgeIndexes</name></member>
      <member refid="classid_surface_1aa1353d8b0b9040af403e29ac1b472830" prot="protected" virt="non-virtual"><scope>idSurface</scope><name>edges</name></member>
      <member refid="classid_surface_1a6a4c2cf80dc7954071b257b21b72f65b" prot="protected" virt="non-virtual"><scope>idSurface</scope><name>FindEdge</name></member>
      <member refid="classid_surface_1a1aa8ef596836cdb89cabdaf05b7e94ca" prot="protected" virt="non-virtual"><scope>idSurface</scope><name>GenerateEdgeIndexes</name></member>
      <member refid="classid_surface_1a651eb3174822aea9370c34e64baec448" prot="public" virt="non-virtual"><scope>idSurface</scope><name>GetEdgeIndexes</name></member>
      <member refid="classid_surface_1a865786349ec34fd6e48dba0cafd67a73" prot="public" virt="non-virtual"><scope>idSurface</scope><name>GetEdges</name></member>
      <member refid="classid_surface_1aad67e58bc1243249bfaf66ca8294b437" prot="public" virt="non-virtual"><scope>idSurface</scope><name>GetIndexes</name></member>
      <member refid="classid_surface_1a6ffcbff5c33422ff4c14e72d16b9c96c" prot="public" virt="non-virtual"><scope>idSurface</scope><name>GetNumIndexes</name></member>
      <member refid="classid_surface_1a1c035cab76ffd296cc8849394e658596" prot="public" virt="non-virtual"><scope>idSurface</scope><name>GetNumVertices</name></member>
      <member refid="classid_surface_1a95f3f690d5c74b08d62bf00908f796f9" prot="public" virt="non-virtual"><scope>idSurface</scope><name>GetVertices</name></member>
      <member refid="classid_surface_1af70f3a93d19b43cca75dda061259bd86" prot="public" virt="non-virtual"><scope>idSurface</scope><name>idSurface</name></member>
      <member refid="classid_surface_1a21f5bec0dfa5d8c10f9bd18c02d9d4e1" prot="public" virt="non-virtual"><scope>idSurface</scope><name>idSurface</name></member>
      <member refid="classid_surface_1a56b3731e463aea221b9f2062782f6add" prot="public" virt="non-virtual"><scope>idSurface</scope><name>idSurface</name></member>
      <member refid="classid_surface_1a80fdb6e880d74be0f9c1d2bc4a042f25" prot="protected" virt="non-virtual"><scope>idSurface</scope><name>indexes</name></member>
      <member refid="classid_surface_1a73c63b309a668e3e31b05ba5ef362b2e" prot="public" virt="non-virtual"><scope>idSurface</scope><name>IsClosed</name></member>
      <member refid="classid_surface_1ad9174785e97b0caa2844cbde5e4d26c3" prot="public" virt="non-virtual"><scope>idSurface</scope><name>IsConnected</name></member>
      <member refid="classid_surface_1a11c7c893ce9ed650bf629c232c56b090" prot="public" virt="non-virtual"><scope>idSurface</scope><name>IsPolytope</name></member>
      <member refid="classid_surface_1a4c61c8265eed7fd428b291eea3c4542a" prot="public" virt="non-virtual"><scope>idSurface</scope><name>LineIntersection</name></member>
      <member refid="classid_surface_1a1fd22b90d0644194b245fced7a1b648d" prot="public" virt="non-virtual"><scope>idSurface</scope><name>operator+=</name></member>
      <member refid="classid_surface_1a9e5a84b5e1f31a942774c821612d94a4" prot="public" virt="non-virtual"><scope>idSurface</scope><name>operator[]</name></member>
      <member refid="classid_surface_1a857cc7e7f6887d6a7ef772dcf3eacb61" prot="public" virt="non-virtual"><scope>idSurface</scope><name>operator[]</name></member>
      <member refid="classid_surface_1a9e72d038b956d79ce1092474b18f2d0b" prot="public" virt="non-virtual"><scope>idSurface</scope><name>PlaneDistance</name></member>
      <member refid="classid_surface_1adaba27e47307b3136ddd708d802e5297" prot="public" virt="non-virtual"><scope>idSurface</scope><name>PlaneSide</name></member>
      <member refid="classid_surface_1a648a06560d34a17767b38a76bfff1f69" prot="public" virt="non-virtual"><scope>idSurface</scope><name>RayIntersection</name></member>
      <member refid="classid_surface_1a042e945eebec4eab657d7eb6c2eb5d5d" prot="public" virt="non-virtual"><scope>idSurface</scope><name>RotateSelf</name></member>
      <member refid="classid_surface_1a6603efd0f29346fc18b72395e780a2a8" prot="public" virt="non-virtual"><scope>idSurface</scope><name>Split</name></member>
      <member refid="classid_surface_1ae933dbdf072a7e493e03d6a42f54ace1" prot="public" virt="non-virtual"><scope>idSurface</scope><name>SwapTriangles</name></member>
      <member refid="classid_surface_1ab5b1e255353e573acfbc3cba65910c52" prot="public" virt="non-virtual"><scope>idSurface</scope><name>TranslateSelf</name></member>
      <member refid="classid_surface_1a83507b368bd25efb97e7cfe4b33aea82" prot="protected" virt="non-virtual"><scope>idSurface</scope><name>verts</name></member>
      <member refid="classid_surface_1ac7aaf60f00afdf7c858abdbe7ea22b0a" prot="public" virt="non-virtual"><scope>idSurface</scope><name>~idSurface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
