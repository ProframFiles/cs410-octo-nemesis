<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_sys" kind="class" prot="public" abstract="yes">
    <compoundname>idSys</compoundname>
    <derivedcompoundref refid="classid_sys_local" prot="public" virt="non-virtual">idSysLocal</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_sys_1ae681641af44fd0bd491bdb90ab3a088b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idSys::DebugPrintf</definition>
        <argsstring>(const char *fmt,...)=0</argsstring>
        <name>DebugPrintf</name>
        <reimplementedby refid="classid_sys_local_1a6779000b641d019e17f242b4ff7b33e1">DebugPrintf</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/sys_public.h" line="539" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_sys_1a9ec9aecfcdc042a110f05addcbe77436" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idSys::DebugVPrintf</definition>
        <argsstring>(const char *fmt, va_list arg)=0</argsstring>
        <name>DebugVPrintf</name>
        <reimplementedby refid="classid_sys_local_1a6d1ac874e7205f34080eddd272916ff4">DebugVPrintf</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/sys_public.h" line="540" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_sys_1afa95c90fe4839ff0c38b1636eacfbb28" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double idSys::GetClockTicks</definition>
        <argsstring>(void)=0</argsstring>
        <name>GetClockTicks</name>
        <reimplementedby refid="classid_sys_local_1a24557fddf4a3fd5969afb314c0cacd1d">GetClockTicks</reimplementedby>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/sys_public.h" line="542" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_sys_1a1f51d9717bde3ca81e2fa182609e4db7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double idSys::ClockTicksPerSecond</definition>
        <argsstring>(void)=0</argsstring>
        <name>ClockTicksPerSecond</name>
        <reimplementedby refid="classid_sys_local_1accbe40258f051c608cbd4dd4706af3e9">ClockTicksPerSecond</reimplementedby>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/sys_public.h" line="543" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_sys_1a83aba6f145b6dffa2a270f4f0cd1ed1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>cpuid_t</type>
        <definition>virtual cpuid_t idSys::GetProcessorId</definition>
        <argsstring>(void)=0</argsstring>
        <name>GetProcessorId</name>
        <reimplementedby refid="classid_sys_local_1a4b0797041d0f0a1aff08cc23ed24e910">GetProcessorId</reimplementedby>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/sys_public.h" line="544" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_sys_1a2dd7ee2579427b1695fe7cf6a01c1242" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>const char *</type>
        <definition>virtual const char* idSys::GetProcessorString</definition>
        <argsstring>(void)=0</argsstring>
        <name>GetProcessorString</name>
        <reimplementedby refid="classid_sys_local_1a2b32eba82ae00698e5f1602c75ff79ac">GetProcessorString</reimplementedby>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/sys_public.h" line="545" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_sys_1add8fab119cbd1950f1eaa42278800fd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>const char *</type>
        <definition>virtual const char* idSys::FPU_GetState</definition>
        <argsstring>(void)=0</argsstring>
        <name>FPU_GetState</name>
        <reimplementedby refid="classid_sys_local_1aac95e6dc11d138688717e43c746983d7">FPU_GetState</reimplementedby>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/sys_public.h" line="546" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_sys_1ae15a2ba20dc2bced096bf2a343147350" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool idSys::FPU_StackIsEmpty</definition>
        <argsstring>(void)=0</argsstring>
        <name>FPU_StackIsEmpty</name>
        <reimplementedby refid="classid_sys_local_1a8ad19795187712dbcb87f22cab534081">FPU_StackIsEmpty</reimplementedby>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/sys_public.h" line="547" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_sys_1a06896527087d5767121ce0e01164f951" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idSys::FPU_SetFTZ</definition>
        <argsstring>(bool enable)=0</argsstring>
        <name>FPU_SetFTZ</name>
        <reimplementedby refid="classid_sys_local_1ad1fdbbaf74be77b5419dc427ab389334">FPU_SetFTZ</reimplementedby>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/sys_public.h" line="548" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_sys_1ab5fc29ac9b82a140bb34dfe69cc9b42b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idSys::FPU_SetDAZ</definition>
        <argsstring>(bool enable)=0</argsstring>
        <name>FPU_SetDAZ</name>
        <reimplementedby refid="classid_sys_local_1a554b218a8f06c76e57115ae02bd7442c">FPU_SetDAZ</reimplementedby>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/sys_public.h" line="549" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_sys_1a9f69fe0f29ed13e63ffbec5c2d447333" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idSys::FPU_EnableExceptions</definition>
        <argsstring>(int exceptions)=0</argsstring>
        <name>FPU_EnableExceptions</name>
        <reimplementedby refid="classid_sys_local_1a0b0bc9bff5f2187669ac0d9dfb0dc0d2">FPU_EnableExceptions</reimplementedby>
        <param>
          <type>int</type>
          <declname>exceptions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/sys_public.h" line="551" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_sys_1a9e0d713ba689226022facc26678fc426" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool idSys::LockMemory</definition>
        <argsstring>(void *ptr, int bytes)=0</argsstring>
        <name>LockMemory</name>
        <reimplementedby refid="classid_sys_local_1a956e69b8855d344b91e1b9daea44985a">LockMemory</reimplementedby>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/sys_public.h" line="553" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_sys_1ad52e580d4f576ef770cae5046e8dab8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool idSys::UnlockMemory</definition>
        <argsstring>(void *ptr, int bytes)=0</argsstring>
        <name>UnlockMemory</name>
        <reimplementedby refid="classid_sys_local_1aeeac7c1cf2e024bb4165eab09e95a4c6">UnlockMemory</reimplementedby>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/sys_public.h" line="554" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_sys_1aae7ecd728e4b3f85e80f013d8d8cdc5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idSys::GetCallStack</definition>
        <argsstring>(address_t *callStack, const int callStackSize)=0</argsstring>
        <name>GetCallStack</name>
        <reimplementedby refid="classid_sys_local_1adef38aabe84a59af530290677980007d">GetCallStack</reimplementedby>
        <param>
          <type>address_t *</type>
          <declname>callStack</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>callStackSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/sys_public.h" line="556" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_sys_1a0b50db82298f855b015a37aaf38b4ec8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>const char *</type>
        <definition>virtual const char* idSys::GetCallStackStr</definition>
        <argsstring>(const address_t *callStack, const int callStackSize)=0</argsstring>
        <name>GetCallStackStr</name>
        <reimplementedby refid="classid_sys_local_1ad5bb31c302b876e2be014c2613d279a7">GetCallStackStr</reimplementedby>
        <param>
          <type>const address_t *</type>
          <declname>callStack</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>callStackSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/sys_public.h" line="557" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_sys_1a971d93c2654e6bafd9739e33c5fd07fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>const char *</type>
        <definition>virtual const char* idSys::GetCallStackCurStr</definition>
        <argsstring>(int depth)=0</argsstring>
        <name>GetCallStackCurStr</name>
        <reimplementedby refid="classid_sys_local_1a4443b42297126d09ea7d4e3c1d54c949">GetCallStackCurStr</reimplementedby>
        <param>
          <type>int</type>
          <declname>depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/sys_public.h" line="558" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_sys_1a3331fb098d0d56731806316f738f6bcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idSys::ShutdownSymbols</definition>
        <argsstring>(void)=0</argsstring>
        <name>ShutdownSymbols</name>
        <reimplementedby refid="classid_sys_local_1a4ccd8744c0958ef89e74b8890c189e8a">ShutdownSymbols</reimplementedby>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/sys_public.h" line="559" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_sys_1a295c9ae0e2e7e874b5ab9bd86c99252a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int idSys::DLL_Load</definition>
        <argsstring>(const char *dllName)=0</argsstring>
        <name>DLL_Load</name>
        <reimplementedby refid="classid_sys_local_1a854b5a593067f15d64fd31c83c3240c6">DLL_Load</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>dllName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/sys_public.h" line="561" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_sys_1aee465e053399b91cb23146ad46da4e17" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void *</type>
        <definition>virtual void* idSys::DLL_GetProcAddress</definition>
        <argsstring>(int dllHandle, const char *procName)=0</argsstring>
        <name>DLL_GetProcAddress</name>
        <reimplementedby refid="classid_sys_local_1a144c60689c5b26ffbcbcf56d8addfd2c">DLL_GetProcAddress</reimplementedby>
        <param>
          <type>int</type>
          <declname>dllHandle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>procName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/sys_public.h" line="562" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_sys_1ae703e18328e7dd4e7ceed7e00bcfd218" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idSys::DLL_Unload</definition>
        <argsstring>(int dllHandle)=0</argsstring>
        <name>DLL_Unload</name>
        <reimplementedby refid="classid_sys_local_1a2e9be56aae167ca46bdc873e1484172d">DLL_Unload</reimplementedby>
        <param>
          <type>int</type>
          <declname>dllHandle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/sys_public.h" line="563" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_sys_1afe51504e2b92b9c2e900be44bfabecd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idSys::DLL_GetFileName</definition>
        <argsstring>(const char *baseName, char *dllName, int maxLength)=0</argsstring>
        <name>DLL_GetFileName</name>
        <reimplementedby refid="classid_sys_local_1a2583af53cea60fafab7390a52ae1e66b">DLL_GetFileName</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>baseName</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dllName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxLength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/sys_public.h" line="564" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_sys_1a3b1fa2dd251b3d5e6204bb2cf94c09ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="structsys_event__s" kindref="compound">sysEvent_t</ref></type>
        <definition>virtual sysEvent_t idSys::GenerateMouseButtonEvent</definition>
        <argsstring>(int button, bool down)=0</argsstring>
        <name>GenerateMouseButtonEvent</name>
        <reimplementedby refid="classid_sys_local_1a9579b39dc548103eeafdb8af7697cb78">GenerateMouseButtonEvent</reimplementedby>
        <param>
          <type>int</type>
          <declname>button</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/sys_public.h" line="566" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_sys_1a0c1c634d11fcf2e99689d82573c087ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="structsys_event__s" kindref="compound">sysEvent_t</ref></type>
        <definition>virtual sysEvent_t idSys::GenerateMouseMoveEvent</definition>
        <argsstring>(int deltax, int deltay)=0</argsstring>
        <name>GenerateMouseMoveEvent</name>
        <reimplementedby refid="classid_sys_local_1a82ae8f6e5378b9733e1b3a4dd50bd8b4">GenerateMouseMoveEvent</reimplementedby>
        <param>
          <type>int</type>
          <declname>deltax</declname>
        </param>
        <param>
          <type>int</type>
          <declname>deltay</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/sys_public.h" line="567" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_sys_1a2863df8623e7552cf00fc0667543e380" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idSys::OpenURL</definition>
        <argsstring>(const char *url, bool quit)=0</argsstring>
        <name>OpenURL</name>
        <reimplementedby refid="classid_sys_local_1a431a4a76aeda0ec75c52155b537d5b61">OpenURL</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>url</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>quit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/sys_public.h" line="569" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_sys_1a3d95d42b58ffe45bf23fbc4c496b7038" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void idSys::StartProcess</definition>
        <argsstring>(const char *exePath, bool quit)=0</argsstring>
        <name>StartProcess</name>
        <reimplementedby refid="classid_sys_local_1a74f18fb165ebb89de296e9b60c2b5883">StartProcess</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>exePath</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>quit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/sys_public.h" line="570" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="28008">
        <label>idSysLocal</label>
        <link refid="classid_sys_local"/>
        <childnode refid="28007" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28007">
        <label>idSys</label>
        <link refid="classid_sys"/>
      </node>
    </inheritancegraph>
    <location file="E:/sources/3rd_party/DOOM/neo/sys/sys_public.h" line="537" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/sys_public.h" bodystart="537" bodyend="571"/>
    <listofallmembers>
      <member refid="classid_sys_1a1f51d9717bde3ca81e2fa182609e4db7" prot="public" virt="pure-virtual"><scope>idSys</scope><name>ClockTicksPerSecond</name></member>
      <member refid="classid_sys_1ae681641af44fd0bd491bdb90ab3a088b" prot="public" virt="pure-virtual"><scope>idSys</scope><name>DebugPrintf</name></member>
      <member refid="classid_sys_1a9ec9aecfcdc042a110f05addcbe77436" prot="public" virt="pure-virtual"><scope>idSys</scope><name>DebugVPrintf</name></member>
      <member refid="classid_sys_1afe51504e2b92b9c2e900be44bfabecd2" prot="public" virt="pure-virtual"><scope>idSys</scope><name>DLL_GetFileName</name></member>
      <member refid="classid_sys_1aee465e053399b91cb23146ad46da4e17" prot="public" virt="pure-virtual"><scope>idSys</scope><name>DLL_GetProcAddress</name></member>
      <member refid="classid_sys_1a295c9ae0e2e7e874b5ab9bd86c99252a" prot="public" virt="pure-virtual"><scope>idSys</scope><name>DLL_Load</name></member>
      <member refid="classid_sys_1ae703e18328e7dd4e7ceed7e00bcfd218" prot="public" virt="pure-virtual"><scope>idSys</scope><name>DLL_Unload</name></member>
      <member refid="classid_sys_1a9f69fe0f29ed13e63ffbec5c2d447333" prot="public" virt="pure-virtual"><scope>idSys</scope><name>FPU_EnableExceptions</name></member>
      <member refid="classid_sys_1add8fab119cbd1950f1eaa42278800fd3" prot="public" virt="pure-virtual"><scope>idSys</scope><name>FPU_GetState</name></member>
      <member refid="classid_sys_1ab5fc29ac9b82a140bb34dfe69cc9b42b" prot="public" virt="pure-virtual"><scope>idSys</scope><name>FPU_SetDAZ</name></member>
      <member refid="classid_sys_1a06896527087d5767121ce0e01164f951" prot="public" virt="pure-virtual"><scope>idSys</scope><name>FPU_SetFTZ</name></member>
      <member refid="classid_sys_1ae15a2ba20dc2bced096bf2a343147350" prot="public" virt="pure-virtual"><scope>idSys</scope><name>FPU_StackIsEmpty</name></member>
      <member refid="classid_sys_1a3b1fa2dd251b3d5e6204bb2cf94c09ab" prot="public" virt="pure-virtual"><scope>idSys</scope><name>GenerateMouseButtonEvent</name></member>
      <member refid="classid_sys_1a0c1c634d11fcf2e99689d82573c087ff" prot="public" virt="pure-virtual"><scope>idSys</scope><name>GenerateMouseMoveEvent</name></member>
      <member refid="classid_sys_1aae7ecd728e4b3f85e80f013d8d8cdc5a" prot="public" virt="pure-virtual"><scope>idSys</scope><name>GetCallStack</name></member>
      <member refid="classid_sys_1a971d93c2654e6bafd9739e33c5fd07fb" prot="public" virt="pure-virtual"><scope>idSys</scope><name>GetCallStackCurStr</name></member>
      <member refid="classid_sys_1a0b50db82298f855b015a37aaf38b4ec8" prot="public" virt="pure-virtual"><scope>idSys</scope><name>GetCallStackStr</name></member>
      <member refid="classid_sys_1afa95c90fe4839ff0c38b1636eacfbb28" prot="public" virt="pure-virtual"><scope>idSys</scope><name>GetClockTicks</name></member>
      <member refid="classid_sys_1a83aba6f145b6dffa2a270f4f0cd1ed1f" prot="public" virt="pure-virtual"><scope>idSys</scope><name>GetProcessorId</name></member>
      <member refid="classid_sys_1a2dd7ee2579427b1695fe7cf6a01c1242" prot="public" virt="pure-virtual"><scope>idSys</scope><name>GetProcessorString</name></member>
      <member refid="classid_sys_1a9e0d713ba689226022facc26678fc426" prot="public" virt="pure-virtual"><scope>idSys</scope><name>LockMemory</name></member>
      <member refid="classid_sys_1a2863df8623e7552cf00fc0667543e380" prot="public" virt="pure-virtual"><scope>idSys</scope><name>OpenURL</name></member>
      <member refid="classid_sys_1a3331fb098d0d56731806316f738f6bcd" prot="public" virt="pure-virtual"><scope>idSys</scope><name>ShutdownSymbols</name></member>
      <member refid="classid_sys_1a3d95d42b58ffe45bf23fbc4c496b7038" prot="public" virt="pure-virtual"><scope>idSys</scope><name>StartProcess</name></member>
      <member refid="classid_sys_1ad52e580d4f576ef770cae5046e8dab8b" prot="public" virt="pure-virtual"><scope>idSys</scope><name>UnlockMemory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
