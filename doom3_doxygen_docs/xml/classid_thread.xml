<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_thread" kind="class" prot="public">
    <compoundname>idThread</compoundname>
    <basecompoundref refid="classid_class" prot="public" virt="non-virtual">idClass</basecompoundref>
    <basecompoundref refid="classid_class" prot="public" virt="non-virtual">idClass</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classid_thread_1a2d1e71da856cd900e818890d7cbae2c9" prot="private" static="yes" mutable="no">
        <type><ref refid="classid_thread" kindref="compound">idThread</ref> *</type>
        <definition>static idThread * idThread::currentThread</definition>
        <argsstring></argsstring>
        <name>currentThread</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="79" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_thread_1adc63dccf06da9fc052a3bca1e8f090a8" prot="private" static="yes" mutable="no">
        <type>int</type>
        <definition>static int idThread::threadIndex</definition>
        <argsstring></argsstring>
        <name>threadIndex</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="96" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_thread_1ae99d9db98b4885d7920a3cac068d6bc3" prot="private" static="yes" mutable="no">
        <type><ref refid="classid_list" kindref="compound">idList</ref>&lt; <ref refid="classid_thread" kindref="compound">idThread</ref> * &gt;</type>
        <definition>static idList&lt; idThread * &gt; idThread::threadList</definition>
        <argsstring></argsstring>
        <name>threadList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="97" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_thread_1a08115f0d1bfecb29efd41237e5f251fa" prot="private" static="yes" mutable="no">
        <type><ref refid="structtrace__s" kindref="compound">trace_t</ref></type>
        <definition>static trace_t idThread::trace</definition>
        <argsstring></argsstring>
        <name>trace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="99" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classid_thread_1a8955b548cfd98c038638affbdcd4c34b" prot="private" static="no" mutable="no">
        <type><ref refid="classid_thread" kindref="compound">idThread</ref> *</type>
        <definition>idThread * idThread::waitingForThread</definition>
        <argsstring></argsstring>
        <name>waitingForThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="81" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_thread_1acdd5605f6d60091f3fbc7f6d5b076a07" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idThread::waitingFor</definition>
        <argsstring></argsstring>
        <name>waitingFor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="82" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_thread_1a773a83a3c86345a51a4f0128a430d3bb" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idThread::waitingUntil</definition>
        <argsstring></argsstring>
        <name>waitingUntil</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="83" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_thread_1afc98c915bef79643ff7df08e797312e7" prot="private" static="no" mutable="no">
        <type><ref refid="classid_interpreter" kindref="compound">idInterpreter</ref></type>
        <definition>idInterpreter idThread::interpreter</definition>
        <argsstring></argsstring>
        <name>interpreter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="84" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_thread_1ad3f1dd7ef30dc4ab7b896f8bfdd94431" prot="private" static="no" mutable="no">
        <type><ref refid="classid_dict" kindref="compound">idDict</ref></type>
        <definition>idDict idThread::spawnArgs</definition>
        <argsstring></argsstring>
        <name>spawnArgs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="86" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_thread_1a3de692d4302d720c136e58003c593b2a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idThread::threadNum</definition>
        <argsstring></argsstring>
        <name>threadNum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="88" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_thread_1ac0867cab5ea02d4b0423a00207f8155e" prot="private" static="no" mutable="no">
        <type><ref refid="classid_str" kindref="compound">idStr</ref></type>
        <definition>idStr idThread::threadName</definition>
        <argsstring></argsstring>
        <name>threadName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="89" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_thread_1a5ad638a63040ff9bc5ac4931bd036502" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idThread::lastExecuteTime</definition>
        <argsstring></argsstring>
        <name>lastExecuteTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="91" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_thread_1a929f1654ea66d987670f3733f55a7b11" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idThread::creationTime</definition>
        <argsstring></argsstring>
        <name>creationTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="92" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_thread_1acd43729f75f35865a889788fa697dbda" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool idThread::manualControl</definition>
        <argsstring></argsstring>
        <name>manualControl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="94" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classid_thread_1a6ff433ee5a141fc0a263e3caac5062ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Init</definition>
        <argsstring>(void)</argsstring>
        <name>Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="101" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="432" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a8d4c6c6cd57f70578b1a83303d83788b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Pause</definition>
        <argsstring>(void)</argsstring>
        <name>Pause</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="102" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="897" bodyend="900"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a01c919daa8d08724b52554d6c8525f00" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_Execute</definition>
        <argsstring>(void)</argsstring>
        <name>Event_Execute</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="104" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="888" bodyend="890"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aaeebfa1e4b23e98f2e0d694426814d3f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_SetThreadName</definition>
        <argsstring>(const char *name)</argsstring>
        <name>Event_SetThreadName</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="105" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="800" bodyend="802"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a839483b6c37ec5d1bd2d757548290300" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_TerminateThread</definition>
        <argsstring>(int num)</argsstring>
        <name>Event_TerminateThread</name>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="110" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="947" bodyend="952"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a08ed35891c7fa9cde777737fcf752e6e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_Pause</definition>
        <argsstring>(void)</argsstring>
        <name>Event_Pause</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="111" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="959" bodyend="961"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1acfa822875c1c6ccc669ee7d2b40995df" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_Wait</definition>
        <argsstring>(float time)</argsstring>
        <name>Event_Wait</name>
        <param>
          <type>float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="112" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="968" bodyend="970"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a72d489dad4e86da18831143ab0b6ccc4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_WaitFrame</definition>
        <argsstring>(void)</argsstring>
        <name>Event_WaitFrame</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="113" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="977" bodyend="979"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aadffa01ee40744cd88ded2ff82ba50a5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_WaitFor</definition>
        <argsstring>(idEntity *ent)</argsstring>
        <name>Event_WaitFor</name>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="114" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="986" bodyend="994"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1af9771d76191781b0f7488816d660df39" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_WaitForThread</definition>
        <argsstring>(int num)</argsstring>
        <name>Event_WaitForThread</name>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="115" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1001" bodyend="1014"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a4e73a2421059a9f8f8b5f7b8258fb881" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_Print</definition>
        <argsstring>(const char *text)</argsstring>
        <name>Event_Print</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="116" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1021" bodyend="1023"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1afa05106b28248a0ad0bb8580ea07ee8b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_PrintLn</definition>
        <argsstring>(const char *text)</argsstring>
        <name>Event_PrintLn</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="117" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1030" bodyend="1032"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a4e5ae0e1dfd469cebdc9026e6b440fcc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_Say</definition>
        <argsstring>(const char *text)</argsstring>
        <name>Event_Say</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="118" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1039" bodyend="1041"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a4b79fcbc92b41b65e7420c30eb837899" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_Assert</definition>
        <argsstring>(float value)</argsstring>
        <name>Event_Assert</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="119" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1048" bodyend="1050"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ab460172c241fa2043df0fde4c23c58a9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_Trigger</definition>
        <argsstring>(idEntity *ent)</argsstring>
        <name>Event_Trigger</name>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="120" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1057" bodyend="1063"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a64c2bc6ca77ebe39f16acab7a60bfe7a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_SetCvar</definition>
        <argsstring>(const char *name, const char *value) const </argsstring>
        <name>Event_SetCvar</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="121" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1070" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ae72c20ff9cf4e37379aef84598b2359b" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetCvar</definition>
        <argsstring>(const char *name) const </argsstring>
        <name>Event_GetCvar</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="122" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1079" bodyend="1081"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1acbcb210702f9c5270a1b138656114598" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_Random</definition>
        <argsstring>(float range) const </argsstring>
        <name>Event_Random</name>
        <param>
          <type>float</type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="123" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1088" bodyend="1093"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aa0beaa972acfae3b59db24331ee00cc8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetTime</definition>
        <argsstring>(void)</argsstring>
        <name>Event_GetTime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="127" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1110" bodyend="1112"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a19655da05743abb0e55a9bf29bffc279" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_KillThread</definition>
        <argsstring>(const char *name)</argsstring>
        <name>Event_KillThread</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="128" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1119" bodyend="1121"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a5d54cf63fd296ad1a64ca21db7a16b59" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetEntity</definition>
        <argsstring>(const char *name)</argsstring>
        <name>Event_GetEntity</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="129" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1128" bodyend="1144"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a08167db75444246e012645a4571f041d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_Spawn</definition>
        <argsstring>(const char *classname)</argsstring>
        <name>Event_Spawn</name>
        <param>
          <type>const char *</type>
          <declname>classname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="130" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1151" bodyend="1158"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ab027d043ffa68b4102c0808f04d5ae73" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_CopySpawnArgs</definition>
        <argsstring>(idEntity *ent)</argsstring>
        <name>Event_CopySpawnArgs</name>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="131" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1165" bodyend="1167"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a577138e147a53ea67f7a28bc0d170e74" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_SetSpawnArg</definition>
        <argsstring>(const char *key, const char *value)</argsstring>
        <name>Event_SetSpawnArg</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="132" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1174" bodyend="1176"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a23d16f275ef6a6d3427c7d4f3ab663d7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_SpawnString</definition>
        <argsstring>(const char *key, const char *defaultvalue)</argsstring>
        <name>Event_SpawnString</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>defaultvalue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="133" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1183" bodyend="1188"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aad519069b8fa6bd83be3deada405505b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_SpawnFloat</definition>
        <argsstring>(const char *key, float defaultvalue)</argsstring>
        <name>Event_SpawnFloat</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>float</type>
          <declname>defaultvalue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="134" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1195" bodyend="1200"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a902fd410abc1c462e58227568fc93fe5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_SpawnVector</definition>
        <argsstring>(const char *key, idVec3 &amp;defaultvalue)</argsstring>
        <name>Event_SpawnVector</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>defaultvalue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="135" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1207" bodyend="1212"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aae036a6d7702de4bece62f42a33b87a4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_ClearPersistantArgs</definition>
        <argsstring>(void)</argsstring>
        <name>Event_ClearPersistantArgs</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="136" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1219" bodyend="1221"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a3dac371f870c2ca05e07aa7051191e92" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_SetPersistantArg</definition>
        <argsstring>(const char *key, const char *value)</argsstring>
        <name>Event_SetPersistantArg</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="137" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1229" bodyend="1231"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a59bba51b027168a516e1be4cb8752b79" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetPersistantString</definition>
        <argsstring>(const char *key)</argsstring>
        <name>Event_GetPersistantString</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="138" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1238" bodyend="1243"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a9e0a5cc86e6b0ff5fdc4a98421db2a68" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetPersistantFloat</definition>
        <argsstring>(const char *key)</argsstring>
        <name>Event_GetPersistantFloat</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="139" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1250" bodyend="1255"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aa959e3fe96d369f41b36f8f2274acff6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetPersistantVector</definition>
        <argsstring>(const char *key)</argsstring>
        <name>Event_GetPersistantVector</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="140" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1262" bodyend="1267"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ab34a25b30e9d214d3ef44775c0e74807" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_AngToForward</definition>
        <argsstring>(idAngles &amp;ang)</argsstring>
        <name>Event_AngToForward</name>
        <param>
          <type><ref refid="classid_angles" kindref="compound">idAngles</ref> &amp;</type>
          <declname>ang</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="141" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1274" bodyend="1276"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1afe5dd3036854fbf099d8392025e49dcc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_AngToRight</definition>
        <argsstring>(idAngles &amp;ang)</argsstring>
        <name>Event_AngToRight</name>
        <param>
          <type><ref refid="classid_angles" kindref="compound">idAngles</ref> &amp;</type>
          <declname>ang</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="142" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1283" bodyend="1288"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a71004880ff3f7ab2c88e7786477dd538" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_AngToUp</definition>
        <argsstring>(idAngles &amp;ang)</argsstring>
        <name>Event_AngToUp</name>
        <param>
          <type><ref refid="classid_angles" kindref="compound">idAngles</ref> &amp;</type>
          <declname>ang</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="143" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1295" bodyend="1300"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a919af33fcfe103f993093362523613d2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetSine</definition>
        <argsstring>(float angle)</argsstring>
        <name>Event_GetSine</name>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="144" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1307" bodyend="1309"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1af44f7a8b7825626fb4d0f434a84c66ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetCosine</definition>
        <argsstring>(float angle)</argsstring>
        <name>Event_GetCosine</name>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="145" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1316" bodyend="1318"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1af00c5f2146fcd0e7b4611a316a89b50a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetSquareRoot</definition>
        <argsstring>(float theSquare)</argsstring>
        <name>Event_GetSquareRoot</name>
        <param>
          <type>float</type>
          <declname>theSquare</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="150" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1345" bodyend="1347"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1afa748cbc0d883e645dbd74558a7c68d5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_VecNormalize</definition>
        <argsstring>(idVec3 &amp;vec)</argsstring>
        <name>Event_VecNormalize</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="151" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1354" bodyend="1360"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a1a5f4cb884b6e262a471bf7ee329f58d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_VecLength</definition>
        <argsstring>(idVec3 &amp;vec)</argsstring>
        <name>Event_VecLength</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="152" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1367" bodyend="1369"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aaae3fa3b8ec9cde970ed148de5a3f3d5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_VecDotProduct</definition>
        <argsstring>(idVec3 &amp;vec1, idVec3 &amp;vec2)</argsstring>
        <name>Event_VecDotProduct</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>vec1</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>vec2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="153" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1376" bodyend="1378"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a2f6de6b383664bacf497fb1a69e2ce85" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_VecCrossProduct</definition>
        <argsstring>(idVec3 &amp;vec1, idVec3 &amp;vec2)</argsstring>
        <name>Event_VecCrossProduct</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>vec1</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>vec2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="154" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1385" bodyend="1387"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1af25a8173f0798a13d2a7afb105e0bd8c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_VecToAngles</definition>
        <argsstring>(idVec3 &amp;vec)</argsstring>
        <name>Event_VecToAngles</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="155" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1394" bodyend="1397"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a1550a768937551b6552ae92d347db8ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_OnSignal</definition>
        <argsstring>(int signal, idEntity *ent, const char *func)</argsstring>
        <name>Event_OnSignal</name>
        <param>
          <type>int</type>
          <declname>signal</declname>
        </param>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>ent</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="160" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1432" bodyend="1451"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ae9d152d4a2274a0b1b0deec8017720df" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_ClearSignalThread</definition>
        <argsstring>(int signal, idEntity *ent)</argsstring>
        <name>Event_ClearSignalThread</name>
        <param>
          <type>int</type>
          <declname>signal</declname>
        </param>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="161" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1458" bodyend="1468"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ab316bc7784e62a5b0aaa2f704758691d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_SetCamera</definition>
        <argsstring>(idEntity *ent)</argsstring>
        <name>Event_SetCamera</name>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="162" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1475" bodyend="1487"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a33aa88ec0924e6480b5931550896f31c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_FirstPerson</definition>
        <argsstring>(void)</argsstring>
        <name>Event_FirstPerson</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="163" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1494" bodyend="1496"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aac4da14ef512c5cfdb7219f5c0e668e5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_Trace</definition>
        <argsstring>(const idVec3 &amp;start, const idVec3 &amp;end, const idVec3 &amp;mins, const idVec3 &amp;maxs, int contents_mask, idEntity *passEntity)</argsstring>
        <name>Event_Trace</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>mins</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>maxs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contents_mask</declname>
        </param>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>passEntity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="164" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1503" bodyend="1510"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a467b7096f4c2bcb669a1dee432f569c1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_TracePoint</definition>
        <argsstring>(const idVec3 &amp;start, const idVec3 &amp;end, int contents_mask, idEntity *passEntity)</argsstring>
        <name>Event_TracePoint</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contents_mask</declname>
        </param>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>passEntity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="165" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1517" bodyend="1520"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1af30441f1cf1ce30514fb3e9749446111" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetTraceFraction</definition>
        <argsstring>(void)</argsstring>
        <name>Event_GetTraceFraction</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="166" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1527" bodyend="1529"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a0a7686fa49cb2827f3362ef54fbbd1ae" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetTraceEndPos</definition>
        <argsstring>(void)</argsstring>
        <name>Event_GetTraceEndPos</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="167" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1536" bodyend="1538"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1af15646d6f59ffde1556ee294cd20f5c5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetTraceNormal</definition>
        <argsstring>(void)</argsstring>
        <name>Event_GetTraceNormal</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="168" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1545" bodyend="1551"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a8943beb8dca1daa152b783cd9a09edea" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetTraceEntity</definition>
        <argsstring>(void)</argsstring>
        <name>Event_GetTraceEntity</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="169" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1558" bodyend="1564"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a2e588536c1d197280227bf843dad9d1f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetTraceJoint</definition>
        <argsstring>(void)</argsstring>
        <name>Event_GetTraceJoint</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="170" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1571" bodyend="1580"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a28b75d64fa1ab57f94b0b0b971e77fe0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetTraceBody</definition>
        <argsstring>(void)</argsstring>
        <name>Event_GetTraceBody</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="171" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1587" bodyend="1600"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a09e485b5e64cbbcc58ffd3c8aee1f675" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_FadeIn</definition>
        <argsstring>(idVec3 &amp;color, float time)</argsstring>
        <name>Event_FadeIn</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="172" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1607" bodyend="1616"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aae7af0f18217814d98514d3eced8a8f1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_FadeOut</definition>
        <argsstring>(idVec3 &amp;color, float time)</argsstring>
        <name>Event_FadeOut</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="173" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1623" bodyend="1632"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ad072d294c9238ce37a1d18a4bd1a9848" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_FadeTo</definition>
        <argsstring>(idVec3 &amp;color, float alpha, float time)</argsstring>
        <name>Event_FadeTo</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>float</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="174" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1639" bodyend="1648"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a5d55a398e18bd02943791daf81a7ebc9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_SetShaderParm</definition>
        <argsstring>(int parmnum, float value)</argsstring>
        <name>Event_SetShaderParm</name>
        <param>
          <type>int</type>
          <declname>parmnum</declname>
        </param>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="175" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1655" bodyend="1661"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1acb6144cafd24db9b98c59f893ff073df" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_StartMusic</definition>
        <argsstring>(const char *name)</argsstring>
        <name>Event_StartMusic</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="176" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1668" bodyend="1670"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a779727bfef652b674f2dc7dd5cfac761" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_Warning</definition>
        <argsstring>(const char *text)</argsstring>
        <name>Event_Warning</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="177" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1677" bodyend="1679"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aa3eb652decf949a5ce9c781012aa470c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_Error</definition>
        <argsstring>(const char *text)</argsstring>
        <name>Event_Error</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="178" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1686" bodyend="1688"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ab9449f03d5329d01d93101a376a0fabb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_StrLen</definition>
        <argsstring>(const char *string)</argsstring>
        <name>Event_StrLen</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="179" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1695" bodyend="1700"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a08b32c214c3d2d195408f10740fd811b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_StrLeft</definition>
        <argsstring>(const char *string, int num)</argsstring>
        <name>Event_StrLeft</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="180" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1707" bodyend="1723"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a44205b67b3721a364c563cf74b4e39ed" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_StrRight</definition>
        <argsstring>(const char *string, int num)</argsstring>
        <name>Event_StrRight</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="181" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1730" bodyend="1745"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a3a6c2d0fd24dd56c5bd0627e1730ff9b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_StrSkip</definition>
        <argsstring>(const char *string, int num)</argsstring>
        <name>Event_StrSkip</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="182" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1752" bodyend="1767"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ac860633017ee0b4b51159d8752bd3c6e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_StrMid</definition>
        <argsstring>(const char *string, int start, int num)</argsstring>
        <name>Event_StrMid</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="183" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1774" bodyend="1796"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aba995d6b2017e262b344631eed8a25c1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_StrToFloat</definition>
        <argsstring>(const char *string)</argsstring>
        <name>Event_StrToFloat</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="184" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1803" bodyend="1808"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ac189a0b729239bb811d9fcae7dc6dba6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_RadiusDamage</definition>
        <argsstring>(const idVec3 &amp;origin, idEntity *inflictor, idEntity *attacker, idEntity *ignore, const char *damageDefName, float dmgPower)</argsstring>
        <name>Event_RadiusDamage</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>inflictor</declname>
        </param>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>attacker</declname>
        </param>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>ignore</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>damageDefName</declname>
        </param>
        <param>
          <type>float</type>
          <declname>dmgPower</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="185" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1815" bodyend="1817"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a1d3cdc7b22d61fae541de68f2029449b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_IsClient</definition>
        <argsstring>(void)</argsstring>
        <name>Event_IsClient</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="186" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1824" bodyend="1826"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aea0f802b3fb6c66a35e83c3bd6216d53" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_IsMultiplayer</definition>
        <argsstring>(void)</argsstring>
        <name>Event_IsMultiplayer</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="187" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1833" bodyend="1835"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a5730caf9f0fdcf2afdcac3eeb652be5e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetFrameTime</definition>
        <argsstring>(void)</argsstring>
        <name>Event_GetFrameTime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="188" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1842" bodyend="1844"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a529ca771b9aa13d36e346bd7a6bb4b0e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetTicsPerSecond</definition>
        <argsstring>(void)</argsstring>
        <name>Event_GetTicsPerSecond</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="189" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1851" bodyend="1853"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a07fbcef89376e1c317e95d6285c5b5f2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_CacheSoundShader</definition>
        <argsstring>(const char *soundName)</argsstring>
        <name>Event_CacheSoundShader</name>
        <param>
          <type>const char *</type>
          <declname>soundName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="190" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1860" bodyend="1862"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a3be616e9c59d29a610edd062e54225c7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_DebugLine</definition>
        <argsstring>(const idVec3 &amp;color, const idVec3 &amp;start, const idVec3 &amp;end, const float lifetime)</argsstring>
        <name>Event_DebugLine</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>lifetime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="191" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1869" bodyend="1871"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a2f2f880eec5ba31fa0c44ab50c966cef" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_DebugArrow</definition>
        <argsstring>(const idVec3 &amp;color, const idVec3 &amp;start, const idVec3 &amp;end, const int size, const float lifetime)</argsstring>
        <name>Event_DebugArrow</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>lifetime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="192" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1878" bodyend="1880"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a9c45e554e066078a0b4922d7c556dea1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_DebugCircle</definition>
        <argsstring>(const idVec3 &amp;color, const idVec3 &amp;origin, const idVec3 &amp;dir, const float radius, const int numSteps, const float lifetime)</argsstring>
        <name>Event_DebugCircle</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numSteps</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>lifetime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="193" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1887" bodyend="1889"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a3dfdd81b971e5d8139041087681ef92a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_DebugBounds</definition>
        <argsstring>(const idVec3 &amp;color, const idVec3 &amp;mins, const idVec3 &amp;maxs, const float lifetime)</argsstring>
        <name>Event_DebugBounds</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>mins</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>maxs</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>lifetime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="194" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1896" bodyend="1898"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a53b186a6386a7e7d7003913e00e72ea6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_DrawText</definition>
        <argsstring>(const char *text, const idVec3 &amp;origin, float scale, const idVec3 &amp;color, const int align, const float lifetime)</argsstring>
        <name>Event_DrawText</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>align</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>lifetime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="195" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1905" bodyend="1907"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a5a7fe29e690c639260cfc05b33eca682" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_InfluenceActive</definition>
        <argsstring>(void)</argsstring>
        <name>Event_InfluenceActive</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="196" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="1914" bodyend="1923"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a6ff433ee5a141fc0a263e3caac5062ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Init</definition>
        <argsstring>(void)</argsstring>
        <name>Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a8d4c6c6cd57f70578b1a83303d83788b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Pause</definition>
        <argsstring>(void)</argsstring>
        <name>Pause</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a01c919daa8d08724b52554d6c8525f00" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_Execute</definition>
        <argsstring>(void)</argsstring>
        <name>Event_Execute</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aaeebfa1e4b23e98f2e0d694426814d3f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_SetThreadName</definition>
        <argsstring>(const char *name)</argsstring>
        <name>Event_SetThreadName</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a839483b6c37ec5d1bd2d757548290300" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_TerminateThread</definition>
        <argsstring>(int num)</argsstring>
        <name>Event_TerminateThread</name>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a08ed35891c7fa9cde777737fcf752e6e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_Pause</definition>
        <argsstring>(void)</argsstring>
        <name>Event_Pause</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1acfa822875c1c6ccc669ee7d2b40995df" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_Wait</definition>
        <argsstring>(float time)</argsstring>
        <name>Event_Wait</name>
        <param>
          <type>float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a72d489dad4e86da18831143ab0b6ccc4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_WaitFrame</definition>
        <argsstring>(void)</argsstring>
        <name>Event_WaitFrame</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aadffa01ee40744cd88ded2ff82ba50a5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_WaitFor</definition>
        <argsstring>(idEntity *ent)</argsstring>
        <name>Event_WaitFor</name>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1af9771d76191781b0f7488816d660df39" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_WaitForThread</definition>
        <argsstring>(int num)</argsstring>
        <name>Event_WaitForThread</name>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a4e73a2421059a9f8f8b5f7b8258fb881" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_Print</definition>
        <argsstring>(const char *text)</argsstring>
        <name>Event_Print</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1afa05106b28248a0ad0bb8580ea07ee8b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_PrintLn</definition>
        <argsstring>(const char *text)</argsstring>
        <name>Event_PrintLn</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a4e5ae0e1dfd469cebdc9026e6b440fcc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_Say</definition>
        <argsstring>(const char *text)</argsstring>
        <name>Event_Say</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a4b79fcbc92b41b65e7420c30eb837899" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_Assert</definition>
        <argsstring>(float value)</argsstring>
        <name>Event_Assert</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ab460172c241fa2043df0fde4c23c58a9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_Trigger</definition>
        <argsstring>(idEntity *ent)</argsstring>
        <name>Event_Trigger</name>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a64c2bc6ca77ebe39f16acab7a60bfe7a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_SetCvar</definition>
        <argsstring>(const char *name, const char *value) const </argsstring>
        <name>Event_SetCvar</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ae72c20ff9cf4e37379aef84598b2359b" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetCvar</definition>
        <argsstring>(const char *name) const </argsstring>
        <name>Event_GetCvar</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1acbcb210702f9c5270a1b138656114598" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_Random</definition>
        <argsstring>(float range) const </argsstring>
        <name>Event_Random</name>
        <param>
          <type>float</type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aa0beaa972acfae3b59db24331ee00cc8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetTime</definition>
        <argsstring>(void)</argsstring>
        <name>Event_GetTime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a19655da05743abb0e55a9bf29bffc279" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_KillThread</definition>
        <argsstring>(const char *name)</argsstring>
        <name>Event_KillThread</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a5d54cf63fd296ad1a64ca21db7a16b59" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetEntity</definition>
        <argsstring>(const char *name)</argsstring>
        <name>Event_GetEntity</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a08167db75444246e012645a4571f041d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_Spawn</definition>
        <argsstring>(const char *classname)</argsstring>
        <name>Event_Spawn</name>
        <param>
          <type>const char *</type>
          <declname>classname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ab027d043ffa68b4102c0808f04d5ae73" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_CopySpawnArgs</definition>
        <argsstring>(idEntity *ent)</argsstring>
        <name>Event_CopySpawnArgs</name>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a577138e147a53ea67f7a28bc0d170e74" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_SetSpawnArg</definition>
        <argsstring>(const char *key, const char *value)</argsstring>
        <name>Event_SetSpawnArg</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a23d16f275ef6a6d3427c7d4f3ab663d7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_SpawnString</definition>
        <argsstring>(const char *key, const char *defaultvalue)</argsstring>
        <name>Event_SpawnString</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>defaultvalue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aad519069b8fa6bd83be3deada405505b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_SpawnFloat</definition>
        <argsstring>(const char *key, float defaultvalue)</argsstring>
        <name>Event_SpawnFloat</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>float</type>
          <declname>defaultvalue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a902fd410abc1c462e58227568fc93fe5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_SpawnVector</definition>
        <argsstring>(const char *key, idVec3 &amp;defaultvalue)</argsstring>
        <name>Event_SpawnVector</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>defaultvalue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aae036a6d7702de4bece62f42a33b87a4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_ClearPersistantArgs</definition>
        <argsstring>(void)</argsstring>
        <name>Event_ClearPersistantArgs</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a3dac371f870c2ca05e07aa7051191e92" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_SetPersistantArg</definition>
        <argsstring>(const char *key, const char *value)</argsstring>
        <name>Event_SetPersistantArg</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a59bba51b027168a516e1be4cb8752b79" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetPersistantString</definition>
        <argsstring>(const char *key)</argsstring>
        <name>Event_GetPersistantString</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a9e0a5cc86e6b0ff5fdc4a98421db2a68" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetPersistantFloat</definition>
        <argsstring>(const char *key)</argsstring>
        <name>Event_GetPersistantFloat</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aa959e3fe96d369f41b36f8f2274acff6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetPersistantVector</definition>
        <argsstring>(const char *key)</argsstring>
        <name>Event_GetPersistantVector</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ab34a25b30e9d214d3ef44775c0e74807" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_AngToForward</definition>
        <argsstring>(idAngles &amp;ang)</argsstring>
        <name>Event_AngToForward</name>
        <param>
          <type><ref refid="classid_angles" kindref="compound">idAngles</ref> &amp;</type>
          <declname>ang</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1afe5dd3036854fbf099d8392025e49dcc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_AngToRight</definition>
        <argsstring>(idAngles &amp;ang)</argsstring>
        <name>Event_AngToRight</name>
        <param>
          <type><ref refid="classid_angles" kindref="compound">idAngles</ref> &amp;</type>
          <declname>ang</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a71004880ff3f7ab2c88e7786477dd538" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_AngToUp</definition>
        <argsstring>(idAngles &amp;ang)</argsstring>
        <name>Event_AngToUp</name>
        <param>
          <type><ref refid="classid_angles" kindref="compound">idAngles</ref> &amp;</type>
          <declname>ang</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a919af33fcfe103f993093362523613d2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetSine</definition>
        <argsstring>(float angle)</argsstring>
        <name>Event_GetSine</name>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1af44f7a8b7825626fb4d0f434a84c66ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetCosine</definition>
        <argsstring>(float angle)</argsstring>
        <name>Event_GetCosine</name>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1af00c5f2146fcd0e7b4611a316a89b50a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetSquareRoot</definition>
        <argsstring>(float theSquare)</argsstring>
        <name>Event_GetSquareRoot</name>
        <param>
          <type>float</type>
          <declname>theSquare</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1afa748cbc0d883e645dbd74558a7c68d5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_VecNormalize</definition>
        <argsstring>(idVec3 &amp;vec)</argsstring>
        <name>Event_VecNormalize</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a1a5f4cb884b6e262a471bf7ee329f58d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_VecLength</definition>
        <argsstring>(idVec3 &amp;vec)</argsstring>
        <name>Event_VecLength</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aaae3fa3b8ec9cde970ed148de5a3f3d5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_VecDotProduct</definition>
        <argsstring>(idVec3 &amp;vec1, idVec3 &amp;vec2)</argsstring>
        <name>Event_VecDotProduct</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>vec1</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>vec2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="146" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a2f6de6b383664bacf497fb1a69e2ce85" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_VecCrossProduct</definition>
        <argsstring>(idVec3 &amp;vec1, idVec3 &amp;vec2)</argsstring>
        <name>Event_VecCrossProduct</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>vec1</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>vec2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1af25a8173f0798a13d2a7afb105e0bd8c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_VecToAngles</definition>
        <argsstring>(idVec3 &amp;vec)</argsstring>
        <name>Event_VecToAngles</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a1550a768937551b6552ae92d347db8ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_OnSignal</definition>
        <argsstring>(int signal, idEntity *ent, const char *func)</argsstring>
        <name>Event_OnSignal</name>
        <param>
          <type>int</type>
          <declname>signal</declname>
        </param>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>ent</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ae9d152d4a2274a0b1b0deec8017720df" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_ClearSignalThread</definition>
        <argsstring>(int signal, idEntity *ent)</argsstring>
        <name>Event_ClearSignalThread</name>
        <param>
          <type>int</type>
          <declname>signal</declname>
        </param>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ab316bc7784e62a5b0aaa2f704758691d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_SetCamera</definition>
        <argsstring>(idEntity *ent)</argsstring>
        <name>Event_SetCamera</name>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a33aa88ec0924e6480b5931550896f31c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_FirstPerson</definition>
        <argsstring>(void)</argsstring>
        <name>Event_FirstPerson</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aac4da14ef512c5cfdb7219f5c0e668e5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_Trace</definition>
        <argsstring>(const idVec3 &amp;start, const idVec3 &amp;end, const idVec3 &amp;mins, const idVec3 &amp;maxs, int contents_mask, idEntity *passEntity)</argsstring>
        <name>Event_Trace</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>mins</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>maxs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contents_mask</declname>
        </param>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>passEntity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a467b7096f4c2bcb669a1dee432f569c1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_TracePoint</definition>
        <argsstring>(const idVec3 &amp;start, const idVec3 &amp;end, int contents_mask, idEntity *passEntity)</argsstring>
        <name>Event_TracePoint</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contents_mask</declname>
        </param>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>passEntity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1af30441f1cf1ce30514fb3e9749446111" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetTraceFraction</definition>
        <argsstring>(void)</argsstring>
        <name>Event_GetTraceFraction</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a0a7686fa49cb2827f3362ef54fbbd1ae" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetTraceEndPos</definition>
        <argsstring>(void)</argsstring>
        <name>Event_GetTraceEndPos</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1af15646d6f59ffde1556ee294cd20f5c5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetTraceNormal</definition>
        <argsstring>(void)</argsstring>
        <name>Event_GetTraceNormal</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a8943beb8dca1daa152b783cd9a09edea" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetTraceEntity</definition>
        <argsstring>(void)</argsstring>
        <name>Event_GetTraceEntity</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a2e588536c1d197280227bf843dad9d1f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetTraceJoint</definition>
        <argsstring>(void)</argsstring>
        <name>Event_GetTraceJoint</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a28b75d64fa1ab57f94b0b0b971e77fe0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetTraceBody</definition>
        <argsstring>(void)</argsstring>
        <name>Event_GetTraceBody</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a09e485b5e64cbbcc58ffd3c8aee1f675" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_FadeIn</definition>
        <argsstring>(idVec3 &amp;color, float time)</argsstring>
        <name>Event_FadeIn</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aae7af0f18217814d98514d3eced8a8f1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_FadeOut</definition>
        <argsstring>(idVec3 &amp;color, float time)</argsstring>
        <name>Event_FadeOut</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ad072d294c9238ce37a1d18a4bd1a9848" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_FadeTo</definition>
        <argsstring>(idVec3 &amp;color, float alpha, float time)</argsstring>
        <name>Event_FadeTo</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>float</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="163" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a5d55a398e18bd02943791daf81a7ebc9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_SetShaderParm</definition>
        <argsstring>(int parmnum, float value)</argsstring>
        <name>Event_SetShaderParm</name>
        <param>
          <type>int</type>
          <declname>parmnum</declname>
        </param>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1acb6144cafd24db9b98c59f893ff073df" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_StartMusic</definition>
        <argsstring>(const char *name)</argsstring>
        <name>Event_StartMusic</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a779727bfef652b674f2dc7dd5cfac761" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_Warning</definition>
        <argsstring>(const char *text)</argsstring>
        <name>Event_Warning</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aa3eb652decf949a5ce9c781012aa470c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_Error</definition>
        <argsstring>(const char *text)</argsstring>
        <name>Event_Error</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ab9449f03d5329d01d93101a376a0fabb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_StrLen</definition>
        <argsstring>(const char *string)</argsstring>
        <name>Event_StrLen</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a08b32c214c3d2d195408f10740fd811b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_StrLeft</definition>
        <argsstring>(const char *string, int num)</argsstring>
        <name>Event_StrLeft</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a44205b67b3721a364c563cf74b4e39ed" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_StrRight</definition>
        <argsstring>(const char *string, int num)</argsstring>
        <name>Event_StrRight</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="170" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a3a6c2d0fd24dd56c5bd0627e1730ff9b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_StrSkip</definition>
        <argsstring>(const char *string, int num)</argsstring>
        <name>Event_StrSkip</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="171" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ac860633017ee0b4b51159d8752bd3c6e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_StrMid</definition>
        <argsstring>(const char *string, int start, int num)</argsstring>
        <name>Event_StrMid</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aba995d6b2017e262b344631eed8a25c1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_StrToFloat</definition>
        <argsstring>(const char *string)</argsstring>
        <name>Event_StrToFloat</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ac189a0b729239bb811d9fcae7dc6dba6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_RadiusDamage</definition>
        <argsstring>(const idVec3 &amp;origin, idEntity *inflictor, idEntity *attacker, idEntity *ignore, const char *damageDefName, float dmgPower)</argsstring>
        <name>Event_RadiusDamage</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>inflictor</declname>
        </param>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>attacker</declname>
        </param>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>ignore</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>damageDefName</declname>
        </param>
        <param>
          <type>float</type>
          <declname>dmgPower</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="174" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a1d3cdc7b22d61fae541de68f2029449b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_IsClient</definition>
        <argsstring>(void)</argsstring>
        <name>Event_IsClient</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aea0f802b3fb6c66a35e83c3bd6216d53" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_IsMultiplayer</definition>
        <argsstring>(void)</argsstring>
        <name>Event_IsMultiplayer</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a5730caf9f0fdcf2afdcac3eeb652be5e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetFrameTime</definition>
        <argsstring>(void)</argsstring>
        <name>Event_GetFrameTime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="177" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a529ca771b9aa13d36e346bd7a6bb4b0e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_GetTicsPerSecond</definition>
        <argsstring>(void)</argsstring>
        <name>Event_GetTicsPerSecond</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="178" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a07fbcef89376e1c317e95d6285c5b5f2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_CacheSoundShader</definition>
        <argsstring>(const char *soundName)</argsstring>
        <name>Event_CacheSoundShader</name>
        <param>
          <type>const char *</type>
          <declname>soundName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="179" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a3be616e9c59d29a610edd062e54225c7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_DebugLine</definition>
        <argsstring>(const idVec3 &amp;color, const idVec3 &amp;start, const idVec3 &amp;end, const float lifetime)</argsstring>
        <name>Event_DebugLine</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>lifetime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a2f2f880eec5ba31fa0c44ab50c966cef" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_DebugArrow</definition>
        <argsstring>(const idVec3 &amp;color, const idVec3 &amp;start, const idVec3 &amp;end, const int size, const float lifetime)</argsstring>
        <name>Event_DebugArrow</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>lifetime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="181" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a9c45e554e066078a0b4922d7c556dea1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_DebugCircle</definition>
        <argsstring>(const idVec3 &amp;color, const idVec3 &amp;origin, const idVec3 &amp;dir, const float radius, const int numSteps, const float lifetime)</argsstring>
        <name>Event_DebugCircle</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numSteps</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>lifetime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="182" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a3dfdd81b971e5d8139041087681ef92a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_DebugBounds</definition>
        <argsstring>(const idVec3 &amp;color, const idVec3 &amp;mins, const idVec3 &amp;maxs, const float lifetime)</argsstring>
        <name>Event_DebugBounds</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>mins</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>maxs</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>lifetime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="183" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a53b186a6386a7e7d7003913e00e72ea6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_DrawText</definition>
        <argsstring>(const char *text, const idVec3 &amp;origin, float scale, const idVec3 &amp;color, const int align, const float lifetime)</argsstring>
        <name>Event_DrawText</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>align</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>lifetime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="184" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a5a7fe29e690c639260cfc05b33eca682" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Event_InfluenceActive</definition>
        <argsstring>(void)</argsstring>
        <name>Event_InfluenceActive</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="185" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_thread_1a6fe39cbd25bdbef125836ee2ce149074" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idThread::CLASS_PROTOTYPE</definition>
        <argsstring>(idThread)</argsstring>
        <name>CLASS_PROTOTYPE</name>
        <param>
          <type><ref refid="classid_thread" kindref="compound">idThread</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="199" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a9c679835a7590df1478cb6b05b3253ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idThread::idThread</definition>
        <argsstring>()</argsstring>
        <name>idThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="201" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="273" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a08a8d6ca2cefb0f41927f57f696b1f8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idThread::idThread</definition>
        <argsstring>(idEntity *self, const function_t *func)</argsstring>
        <name>idThread</name>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="classfunction__t" kindref="compound">function_t</ref> *</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="202" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="286" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a29a382b3cda109395ffb1cda6d6e4b07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idThread::idThread</definition>
        <argsstring>(const function_t *func)</argsstring>
        <name>idThread</name>
        <param>
          <type>const <ref refid="classfunction__t" kindref="compound">function_t</ref> *</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="203" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="302" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a9577bcf3bf62dcb53de9f7219fe0ded5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idThread::idThread</definition>
        <argsstring>(idInterpreter *source, const function_t *func, int args)</argsstring>
        <name>idThread</name>
        <param>
          <type><ref refid="classid_interpreter" kindref="compound">idInterpreter</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const <ref refid="classfunction__t" kindref="compound">function_t</ref> *</type>
          <declname>func</declname>
        </param>
        <param>
          <type>int</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="204" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="318" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a1c19e2093f594c9c904bb46f0f999647" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idThread::idThread</definition>
        <argsstring>(idInterpreter *source, idEntity *self, const function_t *func, int args)</argsstring>
        <name>idThread</name>
        <param>
          <type><ref refid="classid_interpreter" kindref="compound">idInterpreter</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="classfunction__t" kindref="compound">function_t</ref> *</type>
          <declname>func</declname>
        </param>
        <param>
          <type>int</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="205" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="331" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a69ee98101b504035902aa64ec37e5947" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>idThread::~idThread</definition>
        <argsstring>()</argsstring>
        <name>~idThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="207" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="347" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a5c1e49c5d4c6aa82772c89a7bf4dc49c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::ManualDelete</definition>
        <argsstring>(void)</argsstring>
        <name>ManualDelete</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="210" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="374" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1af5d0d10166f8ef17710f35654701b957" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Save</definition>
        <argsstring>(idSaveGame *savefile) const </argsstring>
        <name>Save</name>
        <param>
          <type><ref refid="classid_save_game" kindref="compound">idSaveGame</ref> *</type>
          <declname>savefile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="213" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="383" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1abdac64ed57708a6f2ed2220cab209d96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Restore</definition>
        <argsstring>(idRestoreGame *savefile)</argsstring>
        <name>Restore</name>
        <param>
          <type><ref refid="classid_restore_game" kindref="compound">idRestoreGame</ref> *</type>
          <declname>savefile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="214" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="409" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a3d731f25b41e826c58263f830fc55922" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::EnableDebugInfo</definition>
        <argsstring>(void)</argsstring>
        <name>EnableDebugInfo</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="216" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" bodystart="216" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a78955af668fdd6705ba95d6767d6a2d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::DisableDebugInfo</definition>
        <argsstring>(void)</argsstring>
        <name>DisableDebugInfo</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="217" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" bodystart="217" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a4d89c0aad91615d52ad4e6cbfaa16c29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::WaitMS</definition>
        <argsstring>(int time)</argsstring>
        <name>WaitMS</name>
        <param>
          <type>int</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="219" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="907" bodyend="910"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a9bb460d1b2453a0f7af4e19d3699d2be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::WaitSec</definition>
        <argsstring>(float time)</argsstring>
        <name>WaitSec</name>
        <param>
          <type>float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="220" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="917" bodyend="919"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a39ee434e32deb3ca6a4c1b8bcfe3a7cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::WaitFrame</definition>
        <argsstring>(void)</argsstring>
        <name>WaitFrame</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="221" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="926" bodyend="934"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ad6825f237ea7b3f8c76c2ac9a2cc9222" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::CallFunction</definition>
        <argsstring>(const function_t *func, bool clearStack)</argsstring>
        <name>CallFunction</name>
        <param>
          <type>const <ref refid="classfunction__t" kindref="compound">function_t</ref> *</type>
          <declname>func</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clearStack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="224" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="726" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a07d67c0df0f054274801cf80a786c8c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::CallFunction</definition>
        <argsstring>(idEntity *obj, const function_t *func, bool clearStack)</argsstring>
        <name>CallFunction</name>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const <ref refid="classfunction__t" kindref="compound">function_t</ref> *</type>
          <declname>func</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clearStack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="227" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="738" bodyend="742"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1abef01ff4cf4290ffdcb35bf9270b755b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::DisplayInfo</definition>
        <argsstring>()</argsstring>
        <name>DisplayInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="229" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="479" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ac85001e99ba3054fb83e0d5833ea76d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idThread::IsDoneProcessing</definition>
        <argsstring>(void)</argsstring>
        <name>IsDoneProcessing</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="237" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" bodystart="327" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ae03d6b49ef0cd08d91b45426685d00f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idThread::IsDying</definition>
        <argsstring>(void)</argsstring>
        <name>IsDying</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="238" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" bodystart="336" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a150ed3c5c01f2d8bad7a3ae79bd89cb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::End</definition>
        <argsstring>(void)</argsstring>
        <name>End</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="240" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="612" bodyend="616"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a58828d13cfcaae3b2a3b1c2b032529bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idThread::Execute</definition>
        <argsstring>(void)</argsstring>
        <name>Execute</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="243" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="668" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1acfcce64f10878acc69edba7a8a97090c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::ManualControl</definition>
        <argsstring>(void)</argsstring>
        <name>ManualControl</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="244" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" bodystart="244" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a0f90aa47d851a3907115d44a0454fcc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::DoneProcessing</definition>
        <argsstring>(void)</argsstring>
        <name>DoneProcessing</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="245" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" bodystart="245" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a44ffdb54df1178ebade21d80af142e61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::ContinueProcessing</definition>
        <argsstring>(void)</argsstring>
        <name>ContinueProcessing</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="246" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" bodystart="246" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a4e9e1ba5dae49314283fe15ba7a6b911" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idThread::ThreadDying</definition>
        <argsstring>(void)</argsstring>
        <name>ThreadDying</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="247" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" bodystart="247" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a681525d5d461f262667a0304bce0b40e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::EndThread</definition>
        <argsstring>(void)</argsstring>
        <name>EndThread</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="248" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" bodystart="248" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a24efd21be10a64e50dc88786602ac119" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idThread::IsWaiting</definition>
        <argsstring>(void)</argsstring>
        <name>IsWaiting</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="249" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="707" bodyend="717"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ad5810c16bf9d9ee9377c89274f0ec787" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::ClearWaitFor</definition>
        <argsstring>(void)</argsstring>
        <name>ClearWaitFor</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="250" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="749" bodyend="753"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aa5ba7c62168dd1bfae5684bb620849bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idThread::IsWaitingFor</definition>
        <argsstring>(idEntity *obj)</argsstring>
        <name>IsWaitingFor</name>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="251" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="760" bodyend="763"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a5195521e549e69ea7af0d36d3cc15832" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::ObjectMoveDone</definition>
        <argsstring>(idEntity *obj)</argsstring>
        <name>ObjectMoveDone</name>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="252" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="770" bodyend="777"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a6cfdafb6c3cf5619c451cbd601c26e75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::ThreadCallback</definition>
        <argsstring>(idThread *thread)</argsstring>
        <name>ThreadCallback</name>
        <param>
          <type><ref refid="classid_thread" kindref="compound">idThread</ref> *</type>
          <declname>thread</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="253" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="784" bodyend="793"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ab4f467aac7459741d5d667573067a9e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::DelayedStart</definition>
        <argsstring>(int delay)</argsstring>
        <name>DelayedStart</name>
        <param>
          <type>int</type>
          <declname>delay</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="254" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="558" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ae823dfbf5c953e7baeca3411150b56bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idThread::Start</definition>
        <argsstring>(void)</argsstring>
        <name>Start</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="255" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="571" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1abedc5f3b03a0a35a241a01cd588804ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_thread" kindref="compound">idThread</ref> *</type>
        <definition>ID_INLINE idThread * idThread::WaitingOnThread</definition>
        <argsstring>(void)</argsstring>
        <name>WaitingOnThread</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="256" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" bodystart="282" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a898f2780eee066e3ca019472ca519785" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idThread::SetThreadNum</definition>
        <argsstring>(int num)</argsstring>
        <name>SetThreadNum</name>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="257" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" bodystart="291" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a2512968509db669e6d32310d443fff3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idThread::GetThreadNum</definition>
        <argsstring>(void)</argsstring>
        <name>GetThreadNum</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="258" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" bodystart="300" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a11e79a2e342c5938e243867f313fcdfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::SetThreadName</definition>
        <argsstring>(const char *name)</argsstring>
        <name>SetThreadName</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="259" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="585" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aeb0733f33e8998fe0a337641390225df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>ID_INLINE const char * idThread::GetThreadName</definition>
        <argsstring>(void)</argsstring>
        <name>GetThreadName</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="260" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" bodystart="309" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a6908f58f7e0336d49d6d0f0b692c9d15" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Error</definition>
        <argsstring>(const char *fmt,...) const id_attribute((format(printf</argsstring>
        <name>Error</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="262" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="809" bodyend="818"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ad959257936bbb6ca51494cdc5edddcae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void void</type>
        <definition>void idThread::Warning</definition>
        <argsstring>(const char *fmt,...) const id_attribute((format(printf</argsstring>
        <name>Warning</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="263" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="825" bodyend="834"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a6fe39cbd25bdbef125836ee2ce149074" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idThread::CLASS_PROTOTYPE</definition>
        <argsstring>(idThread)</argsstring>
        <name>CLASS_PROTOTYPE</name>
        <param>
          <type><ref refid="classid_thread" kindref="compound">idThread</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="188" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a9c679835a7590df1478cb6b05b3253ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idThread::idThread</definition>
        <argsstring>()</argsstring>
        <name>idThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a08a8d6ca2cefb0f41927f57f696b1f8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idThread::idThread</definition>
        <argsstring>(idEntity *self, const function_t *func)</argsstring>
        <name>idThread</name>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="classfunction__t" kindref="compound">function_t</ref> *</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a29a382b3cda109395ffb1cda6d6e4b07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idThread::idThread</definition>
        <argsstring>(const function_t *func)</argsstring>
        <name>idThread</name>
        <param>
          <type>const <ref refid="classfunction__t" kindref="compound">function_t</ref> *</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a9577bcf3bf62dcb53de9f7219fe0ded5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idThread::idThread</definition>
        <argsstring>(idInterpreter *source, const function_t *func, int args)</argsstring>
        <name>idThread</name>
        <param>
          <type><ref refid="classid_interpreter" kindref="compound">idInterpreter</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const <ref refid="classfunction__t" kindref="compound">function_t</ref> *</type>
          <declname>func</declname>
        </param>
        <param>
          <type>int</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="193" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a1c19e2093f594c9c904bb46f0f999647" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>idThread::idThread</definition>
        <argsstring>(idInterpreter *source, idEntity *self, const function_t *func, int args)</argsstring>
        <name>idThread</name>
        <param>
          <type><ref refid="classid_interpreter" kindref="compound">idInterpreter</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="classfunction__t" kindref="compound">function_t</ref> *</type>
          <declname>func</declname>
        </param>
        <param>
          <type>int</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a79d6df08324b673fd2fd79cb90409db0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual idThread::~idThread</definition>
        <argsstring>()</argsstring>
        <name>~idThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="196" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a5c1e49c5d4c6aa82772c89a7bf4dc49c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::ManualDelete</definition>
        <argsstring>(void)</argsstring>
        <name>ManualDelete</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="199" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1af5d0d10166f8ef17710f35654701b957" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Save</definition>
        <argsstring>(idSaveGame *savefile) const </argsstring>
        <name>Save</name>
        <param>
          <type><ref refid="classid_save_game" kindref="compound">idSaveGame</ref> *</type>
          <declname>savefile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="202" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1abdac64ed57708a6f2ed2220cab209d96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Restore</definition>
        <argsstring>(idRestoreGame *savefile)</argsstring>
        <name>Restore</name>
        <param>
          <type><ref refid="classid_restore_game" kindref="compound">idRestoreGame</ref> *</type>
          <declname>savefile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a3d731f25b41e826c58263f830fc55922" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::EnableDebugInfo</definition>
        <argsstring>(void)</argsstring>
        <name>EnableDebugInfo</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="205" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" bodystart="205" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a78955af668fdd6705ba95d6767d6a2d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::DisableDebugInfo</definition>
        <argsstring>(void)</argsstring>
        <name>DisableDebugInfo</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="206" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" bodystart="206" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a4d89c0aad91615d52ad4e6cbfaa16c29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::WaitMS</definition>
        <argsstring>(int time)</argsstring>
        <name>WaitMS</name>
        <param>
          <type>int</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="208" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a9bb460d1b2453a0f7af4e19d3699d2be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::WaitSec</definition>
        <argsstring>(float time)</argsstring>
        <name>WaitSec</name>
        <param>
          <type>float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="209" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a39ee434e32deb3ca6a4c1b8bcfe3a7cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::WaitFrame</definition>
        <argsstring>(void)</argsstring>
        <name>WaitFrame</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ad6825f237ea7b3f8c76c2ac9a2cc9222" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::CallFunction</definition>
        <argsstring>(const function_t *func, bool clearStack)</argsstring>
        <name>CallFunction</name>
        <param>
          <type>const <ref refid="classfunction__t" kindref="compound">function_t</ref> *</type>
          <declname>func</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clearStack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a07d67c0df0f054274801cf80a786c8c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::CallFunction</definition>
        <argsstring>(idEntity *obj, const function_t *func, bool clearStack)</argsstring>
        <name>CallFunction</name>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const <ref refid="classfunction__t" kindref="compound">function_t</ref> *</type>
          <declname>func</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clearStack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="216" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1abef01ff4cf4290ffdcb35bf9270b755b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::DisplayInfo</definition>
        <argsstring>()</argsstring>
        <name>DisplayInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="218" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1acca9f7f7b173bf557fa50749ee3ce530" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idThread::IsDoneProcessing</definition>
        <argsstring>(void)</argsstring>
        <name>IsDoneProcessing</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="226" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a02c16240e37c215f29ce26083ce829ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idThread::IsDying</definition>
        <argsstring>(void)</argsstring>
        <name>IsDying</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="227" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a150ed3c5c01f2d8bad7a3ae79bd89cb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::End</definition>
        <argsstring>(void)</argsstring>
        <name>End</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="229" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a58828d13cfcaae3b2a3b1c2b032529bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idThread::Execute</definition>
        <argsstring>(void)</argsstring>
        <name>Execute</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="232" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1acfcce64f10878acc69edba7a8a97090c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::ManualControl</definition>
        <argsstring>(void)</argsstring>
        <name>ManualControl</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="233" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" bodystart="233" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a0f90aa47d851a3907115d44a0454fcc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::DoneProcessing</definition>
        <argsstring>(void)</argsstring>
        <name>DoneProcessing</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="234" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" bodystart="234" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a44ffdb54df1178ebade21d80af142e61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::ContinueProcessing</definition>
        <argsstring>(void)</argsstring>
        <name>ContinueProcessing</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="235" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" bodystart="235" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a4e9e1ba5dae49314283fe15ba7a6b911" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool idThread::ThreadDying</definition>
        <argsstring>(void)</argsstring>
        <name>ThreadDying</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="236" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" bodystart="236" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a681525d5d461f262667a0304bce0b40e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::EndThread</definition>
        <argsstring>(void)</argsstring>
        <name>EndThread</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="237" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" bodystart="237" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a24efd21be10a64e50dc88786602ac119" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idThread::IsWaiting</definition>
        <argsstring>(void)</argsstring>
        <name>IsWaiting</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="238" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ad5810c16bf9d9ee9377c89274f0ec787" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::ClearWaitFor</definition>
        <argsstring>(void)</argsstring>
        <name>ClearWaitFor</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="239" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aa5ba7c62168dd1bfae5684bb620849bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idThread::IsWaitingFor</definition>
        <argsstring>(idEntity *obj)</argsstring>
        <name>IsWaitingFor</name>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="240" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a5195521e549e69ea7af0d36d3cc15832" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::ObjectMoveDone</definition>
        <argsstring>(idEntity *obj)</argsstring>
        <name>ObjectMoveDone</name>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="241" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a6cfdafb6c3cf5619c451cbd601c26e75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::ThreadCallback</definition>
        <argsstring>(idThread *thread)</argsstring>
        <name>ThreadCallback</name>
        <param>
          <type><ref refid="classid_thread" kindref="compound">idThread</ref> *</type>
          <declname>thread</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="242" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ab4f467aac7459741d5d667573067a9e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::DelayedStart</definition>
        <argsstring>(int delay)</argsstring>
        <name>DelayedStart</name>
        <param>
          <type>int</type>
          <declname>delay</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="243" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ae823dfbf5c953e7baeca3411150b56bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idThread::Start</definition>
        <argsstring>(void)</argsstring>
        <name>Start</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="244" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ae9e1b9df156101f74749aa75d82a461c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_thread" kindref="compound">idThread</ref> *</type>
        <definition>idThread* idThread::WaitingOnThread</definition>
        <argsstring>(void)</argsstring>
        <name>WaitingOnThread</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="245" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a70f1697c4326e76861d1d93fcf3e92b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::SetThreadNum</definition>
        <argsstring>(int num)</argsstring>
        <name>SetThreadNum</name>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="246" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a68cffe0e338729cdcadb879cd163b910" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idThread::GetThreadNum</definition>
        <argsstring>(void)</argsstring>
        <name>GetThreadNum</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="247" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a11e79a2e342c5938e243867f313fcdfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::SetThreadName</definition>
        <argsstring>(const char *name)</argsstring>
        <name>SetThreadName</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="248" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a4a0a6670a888e02757198f433334ef30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* idThread::GetThreadName</definition>
        <argsstring>(void)</argsstring>
        <name>GetThreadName</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="249" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a6908f58f7e0336d49d6d0f0b692c9d15" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Error</definition>
        <argsstring>(const char *fmt,...) const id_attribute((format(printf</argsstring>
        <name>Error</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="251" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a882b54298866f12d694efb5b9675159f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void void</type>
        <definition>void void idThread::Warning</definition>
        <argsstring>(const char *fmt,...) const id_attribute((format(printf</argsstring>
        <name>Warning</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="252" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classid_thread_1a0b0c11d401a7a33285b9a37024a93f69" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_thread" kindref="compound">idThread</ref> *</type>
        <definition>idThread * idThread::GetThread</definition>
        <argsstring>(int num)</argsstring>
        <name>GetThread</name>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="230" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="458" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1af836d1ed35c2a0b16b4c31422a69e18b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::ListThreads_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>ListThreads_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="231" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="518" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a44f1e6dcc16e47e5becf1a4838d595b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::Restart</definition>
        <argsstring>(void)</argsstring>
        <name>Restart</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="232" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="535" bodyend="551"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a73a306e7106ae79c07dc79fc558d6547" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::ObjectMoveDone</definition>
        <argsstring>(int threadnum, idEntity *obj)</argsstring>
        <name>ObjectMoveDone</name>
        <param>
          <type>int</type>
          <declname>threadnum</declname>
        </param>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="233" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="594" bodyend="605"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a9e54fd212c49b5988a2b891d59638971" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_list" kindref="compound">idList</ref>&lt; <ref refid="classid_thread" kindref="compound">idThread</ref> * &gt; &amp;</type>
        <definition>ID_INLINE idList&lt; idThread * &gt; &amp; idThread::GetThreads</definition>
        <argsstring>(void)</argsstring>
        <name>GetThreads</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="235" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" bodystart="318" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a38412dafcda10d9a4717cd98a59a6cfa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::KillThread</definition>
        <argsstring>(const char *name)</argsstring>
        <name>KillThread</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="241" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="623" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1afbadffa2ca8fa5a53c6c6cfb5d3b11f4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::KillThread</definition>
        <argsstring>(int num)</argsstring>
        <name>KillThread</name>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="242" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="653" bodyend="661"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ac9f1ef4dea7f61eec576c034f5635f4d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void void static <ref refid="classid_thread" kindref="compound">idThread</ref> *</type>
        <definition>idThread * idThread::CurrentThread</definition>
        <argsstring>(void)</argsstring>
        <name>CurrentThread</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="265" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="227" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a075926f470d7bfdb9e880ec8e87ea24b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idThread::CurrentThreadNum</definition>
        <argsstring>(void)</argsstring>
        <name>CurrentThreadNum</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="266" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="236" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a4e03db5abd6935586f2872c085ca377c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idThread::BeginMultiFrameEvent</definition>
        <argsstring>(idEntity *ent, const idEventDef *event)</argsstring>
        <name>BeginMultiFrameEvent</name>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>ent</declname>
        </param>
        <param>
          <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="267" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="249" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a0e0fe154d3e619e92b73f77f4cdc6407" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::EndMultiFrameEvent</definition>
        <argsstring>(idEntity *ent, const idEventDef *event)</argsstring>
        <name>EndMultiFrameEvent</name>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>ent</declname>
        </param>
        <param>
          <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="268" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="261" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a19a32d7370b8fdedd579f64f088b2020" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::ReturnString</definition>
        <argsstring>(const char *text)</argsstring>
        <name>ReturnString</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="270" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="841" bodyend="843"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ae948cc5da78d1f28215d999e82e8cbe7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::ReturnFloat</definition>
        <argsstring>(float value)</argsstring>
        <name>ReturnFloat</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="271" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="850" bodyend="852"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ab819277575d4be5f96cfa6888352748f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::ReturnInt</definition>
        <argsstring>(int value)</argsstring>
        <name>ReturnInt</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="272" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="859" bodyend="863"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a8a018969f0980a32811ea8a51e9c3369" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::ReturnVector</definition>
        <argsstring>(idVec3 const &amp;vec)</argsstring>
        <name>ReturnVector</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> const &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="273" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="870" bodyend="872"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aaadc05b96f51e8595a0aa7a061704659" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idThread::ReturnEntity</definition>
        <argsstring>(idEntity *ent)</argsstring>
        <name>ReturnEntity</name>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="274" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.cpp" bodystart="879" bodyend="881"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a4c0ccf9230805b0349135c98ae62dddd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_thread" kindref="compound">idThread</ref> *</type>
        <definition>static idThread* idThread::GetThread</definition>
        <argsstring>(int num)</argsstring>
        <name>GetThread</name>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="219" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a7106a1caa093d1a0b61d1f838ecf247a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void idThread::ListThreads_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>ListThreads_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a891208a447d8e059d1238f6b99bec962" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void idThread::Restart</definition>
        <argsstring>(void)</argsstring>
        <name>Restart</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="221" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a32af557d50acd681c31f5d0ac9f79e88" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void idThread::ObjectMoveDone</definition>
        <argsstring>(int threadnum, idEntity *obj)</argsstring>
        <name>ObjectMoveDone</name>
        <param>
          <type>int</type>
          <declname>threadnum</declname>
        </param>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="222" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aef20201b4d27fc3c98ac9074a56c473f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_list" kindref="compound">idList</ref>&lt; <ref refid="classid_thread" kindref="compound">idThread</ref> * &gt; &amp;</type>
        <definition>static idList&lt;idThread*&gt;&amp; idThread::GetThreads</definition>
        <argsstring>(void)</argsstring>
        <name>GetThreads</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a08f808ed65e5a2b920ff7f4de20ddf15" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void idThread::KillThread</definition>
        <argsstring>(const char *name)</argsstring>
        <name>KillThread</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ac7b9b3f2318e8f682d892b5de4e8963c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void idThread::KillThread</definition>
        <argsstring>(int num)</argsstring>
        <name>KillThread</name>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="231" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ae0b688fa173c5b30e07f6f1f45a3e27f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void void static <ref refid="classid_thread" kindref="compound">idThread</ref> *</type>
        <definition>void void static idThread* idThread::CurrentThread</definition>
        <argsstring>(void)</argsstring>
        <name>CurrentThread</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="254" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aed1d47a202ec0e5be15a2281012f23db" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int idThread::CurrentThreadNum</definition>
        <argsstring>(void)</argsstring>
        <name>CurrentThreadNum</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="255" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1af71c4351837803a40ddf7b59278cc9ef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool idThread::BeginMultiFrameEvent</definition>
        <argsstring>(idEntity *ent, const idEventDef *event)</argsstring>
        <name>BeginMultiFrameEvent</name>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>ent</declname>
        </param>
        <param>
          <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="256" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1ac5b5719535d167eaa8fc53429b75ab8d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void idThread::EndMultiFrameEvent</definition>
        <argsstring>(idEntity *ent, const idEventDef *event)</argsstring>
        <name>EndMultiFrameEvent</name>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>ent</declname>
        </param>
        <param>
          <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="257" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a0cab62af322f674175685df26361cd38" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void idThread::ReturnString</definition>
        <argsstring>(const char *text)</argsstring>
        <name>ReturnString</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="259" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a2dafce1250149f490c927c0e9d2222ee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void idThread::ReturnFloat</definition>
        <argsstring>(float value)</argsstring>
        <name>ReturnFloat</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="260" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1a060a1b357b05e2385d4a8af541ecc36b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void idThread::ReturnInt</definition>
        <argsstring>(int value)</argsstring>
        <name>ReturnInt</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="261" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aecc54bf9cd85aeadba40a3a91a9fc203" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void idThread::ReturnVector</definition>
        <argsstring>(idVec3 const &amp;vec)</argsstring>
        <name>ReturnVector</name>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> const &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="262" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_thread_1aa009bc99dc88a7205cdcf8ff6c2bb1b1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void idThread::ReturnEntity</definition>
        <argsstring>(idEntity *ent)</argsstring>
        <name>ReturnEntity</name>
        <param>
          <type><ref refid="classid_entity" kindref="compound">idEntity</ref> *</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/script/Script_Thread.h" line="263" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="29151">
        <label>idClass</label>
        <link refid="classid_class"/>
      </node>
      <node id="29150">
        <label>idThread</label>
        <link refid="classid_thread"/>
        <childnode refid="29151" relation="public-inheritance">
        </childnode>
        <childnode refid="29151" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="29153">
        <label>idClass</label>
        <link refid="classid_class"/>
        <childnode refid="29154" relation="usage">
          <edgelabel>Type</edgelabel>
        </childnode>
        <childnode refid="29156" relation="usage">
          <edgelabel>eventCallbacks</edgelabel>
        </childnode>
      </node>
      <node id="29156">
        <label>idEventFunc&lt; idClass &gt;</label>
        <link refid="structid_event_func"/>
        <childnode refid="29157" relation="usage">
          <edgelabel>event</edgelabel>
        </childnode>
      </node>
      <node id="29157">
        <label>idEventDef</label>
        <link refid="classid_event_def"/>
      </node>
      <node id="29152">
        <label>idThread</label>
        <link refid="classid_thread"/>
        <childnode refid="29153" relation="public-inheritance">
        </childnode>
        <childnode refid="29153" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29155">
        <label>idHierarchy&lt; idTypeInfo &gt;</label>
        <link refid="classid_hierarchy"/>
      </node>
      <node id="29154">
        <label>idTypeInfo</label>
        <link refid="classid_type_info"/>
        <childnode refid="29154" relation="usage">
          <edgelabel>next</edgelabel>
          <edgelabel>super</edgelabel>
        </childnode>
        <childnode refid="29155" relation="usage">
          <edgelabel>node</edgelabel>
        </childnode>
        <childnode refid="29156" relation="usage">
          <edgelabel>eventCallbacks</edgelabel>
        </childnode>
        <childnode refid="29153" relation="usage">
          <edgelabel>CreateInstance</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" line="77" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/script/Script_Thread.h" bodystart="77" bodyend="275"/>
    <listofallmembers>
      <member refid="classid_thread_1a4e03db5abd6935586f2872c085ca377c" prot="public" virt="non-virtual"><scope>idThread</scope><name>BeginMultiFrameEvent</name></member>
      <member refid="classid_thread_1af71c4351837803a40ddf7b59278cc9ef" prot="public" virt="non-virtual"><scope>idThread</scope><name>BeginMultiFrameEvent</name></member>
      <member refid="classid_thread_1ad6825f237ea7b3f8c76c2ac9a2cc9222" prot="public" virt="non-virtual"><scope>idThread</scope><name>CallFunction</name></member>
      <member refid="classid_thread_1a07d67c0df0f054274801cf80a786c8c1" prot="public" virt="non-virtual"><scope>idThread</scope><name>CallFunction</name></member>
      <member refid="classid_thread_1ad6825f237ea7b3f8c76c2ac9a2cc9222" prot="public" virt="non-virtual"><scope>idThread</scope><name>CallFunction</name></member>
      <member refid="classid_thread_1a07d67c0df0f054274801cf80a786c8c1" prot="public" virt="non-virtual"><scope>idThread</scope><name>CallFunction</name></member>
      <member refid="classid_class_1a39284ab290b3303f923cb647fefb0443" prot="public" virt="non-virtual"><scope>idThread</scope><name>CallSpawn</name></member>
      <member refid="classid_class_1a39284ab290b3303f923cb647fefb0443" prot="public" virt="non-virtual"><scope>idThread</scope><name>CallSpawn</name></member>
      <member refid="classid_class_1a7cf590c676b38adea6ff199b72c4e46f" prot="public" virt="non-virtual"><scope>idThread</scope><name>CancelEvents</name></member>
      <member refid="classid_class_1a7cf590c676b38adea6ff199b72c4e46f" prot="public" virt="non-virtual"><scope>idThread</scope><name>CancelEvents</name></member>
      <member refid="classid_thread_1a6fe39cbd25bdbef125836ee2ce149074" prot="public" virt="non-virtual"><scope>idThread</scope><name>CLASS_PROTOTYPE</name></member>
      <member refid="classid_thread_1a6fe39cbd25bdbef125836ee2ce149074" prot="public" virt="non-virtual"><scope>idThread</scope><name>CLASS_PROTOTYPE</name></member>
      <member refid="classid_thread_1ad5810c16bf9d9ee9377c89274f0ec787" prot="public" virt="non-virtual"><scope>idThread</scope><name>ClearWaitFor</name></member>
      <member refid="classid_thread_1ad5810c16bf9d9ee9377c89274f0ec787" prot="public" virt="non-virtual"><scope>idThread</scope><name>ClearWaitFor</name></member>
      <member refid="classid_thread_1a44ffdb54df1178ebade21d80af142e61" prot="public" virt="non-virtual"><scope>idThread</scope><name>ContinueProcessing</name></member>
      <member refid="classid_thread_1a44ffdb54df1178ebade21d80af142e61" prot="public" virt="non-virtual"><scope>idThread</scope><name>ContinueProcessing</name></member>
      <member refid="classid_class_1aef9a17d3847d8cc27174e618a9e63fec" prot="public" virt="non-virtual"><scope>idThread</scope><name>CreateInstance</name></member>
      <member refid="classid_class_1af15da9143dfb04760e1ad309d0a739c8" prot="public" virt="non-virtual"><scope>idThread</scope><name>CreateInstance</name></member>
      <member refid="classid_class_1a90a0350a49f5aec1b7944630e9635f60" prot="public" virt="non-virtual"><scope>idThread</scope><name>CreateInstance</name></member>
      <member refid="classid_class_1af0beb6afc6c719fcc5d6d596c0b5dbce" prot="public" virt="non-virtual"><scope>idThread</scope><name>CreateInstance</name></member>
      <member refid="classid_thread_1a929f1654ea66d987670f3733f55a7b11" prot="private" virt="non-virtual"><scope>idThread</scope><name>creationTime</name></member>
      <member refid="classid_thread_1ac9f1ef4dea7f61eec576c034f5635f4d" prot="public" virt="non-virtual"><scope>idThread</scope><name>CurrentThread</name></member>
      <member refid="classid_thread_1ae0b688fa173c5b30e07f6f1f45a3e27f" prot="public" virt="non-virtual"><scope>idThread</scope><name>CurrentThread</name></member>
      <member refid="classid_thread_1a2d1e71da856cd900e818890d7cbae2c9" prot="private" virt="non-virtual"><scope>idThread</scope><name>currentThread</name></member>
      <member refid="classid_thread_1a075926f470d7bfdb9e880ec8e87ea24b" prot="public" virt="non-virtual"><scope>idThread</scope><name>CurrentThreadNum</name></member>
      <member refid="classid_thread_1aed1d47a202ec0e5be15a2281012f23db" prot="public" virt="non-virtual"><scope>idThread</scope><name>CurrentThreadNum</name></member>
      <member refid="classid_thread_1ab4f467aac7459741d5d667573067a9e5" prot="public" virt="non-virtual"><scope>idThread</scope><name>DelayedStart</name></member>
      <member refid="classid_thread_1ab4f467aac7459741d5d667573067a9e5" prot="public" virt="non-virtual"><scope>idThread</scope><name>DelayedStart</name></member>
      <member refid="classid_thread_1a78955af668fdd6705ba95d6767d6a2d1" prot="public" virt="non-virtual"><scope>idThread</scope><name>DisableDebugInfo</name></member>
      <member refid="classid_thread_1a78955af668fdd6705ba95d6767d6a2d1" prot="public" virt="non-virtual"><scope>idThread</scope><name>DisableDebugInfo</name></member>
      <member refid="classid_thread_1abef01ff4cf4290ffdcb35bf9270b755b" prot="public" virt="non-virtual"><scope>idThread</scope><name>DisplayInfo</name></member>
      <member refid="classid_thread_1abef01ff4cf4290ffdcb35bf9270b755b" prot="public" virt="non-virtual"><scope>idThread</scope><name>DisplayInfo</name></member>
      <member refid="classid_class_1a1e808d0b267750a5eb6def058921988e" prot="public" virt="non-virtual"><scope>idThread</scope><name>DisplayInfo_f</name></member>
      <member refid="classid_class_1abcc05dad3a0a605c2f34454a2a200a6e" prot="public" virt="non-virtual"><scope>idThread</scope><name>DisplayInfo_f</name></member>
      <member refid="classid_thread_1a0f90aa47d851a3907115d44a0454fcc1" prot="public" virt="non-virtual"><scope>idThread</scope><name>DoneProcessing</name></member>
      <member refid="classid_thread_1a0f90aa47d851a3907115d44a0454fcc1" prot="public" virt="non-virtual"><scope>idThread</scope><name>DoneProcessing</name></member>
      <member refid="classid_thread_1a3d731f25b41e826c58263f830fc55922" prot="public" virt="non-virtual"><scope>idThread</scope><name>EnableDebugInfo</name></member>
      <member refid="classid_thread_1a3d731f25b41e826c58263f830fc55922" prot="public" virt="non-virtual"><scope>idThread</scope><name>EnableDebugInfo</name></member>
      <member refid="classid_thread_1a150ed3c5c01f2d8bad7a3ae79bd89cb5" prot="public" virt="non-virtual"><scope>idThread</scope><name>End</name></member>
      <member refid="classid_thread_1a150ed3c5c01f2d8bad7a3ae79bd89cb5" prot="public" virt="non-virtual"><scope>idThread</scope><name>End</name></member>
      <member refid="classid_thread_1a0e0fe154d3e619e92b73f77f4cdc6407" prot="public" virt="non-virtual"><scope>idThread</scope><name>EndMultiFrameEvent</name></member>
      <member refid="classid_thread_1ac5b5719535d167eaa8fc53429b75ab8d" prot="public" virt="non-virtual"><scope>idThread</scope><name>EndMultiFrameEvent</name></member>
      <member refid="classid_thread_1a681525d5d461f262667a0304bce0b40e" prot="public" virt="non-virtual"><scope>idThread</scope><name>EndThread</name></member>
      <member refid="classid_thread_1a681525d5d461f262667a0304bce0b40e" prot="public" virt="non-virtual"><scope>idThread</scope><name>EndThread</name></member>
      <member refid="classid_thread_1a6908f58f7e0336d49d6d0f0b692c9d15" prot="public" virt="non-virtual"><scope>idThread</scope><name>Error</name></member>
      <member refid="classid_thread_1a6908f58f7e0336d49d6d0f0b692c9d15" prot="public" virt="non-virtual"><scope>idThread</scope><name>Error</name></member>
      <member refid="classid_thread_1ab34a25b30e9d214d3ef44775c0e74807" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_AngToForward</name></member>
      <member refid="classid_thread_1ab34a25b30e9d214d3ef44775c0e74807" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_AngToForward</name></member>
      <member refid="classid_thread_1afe5dd3036854fbf099d8392025e49dcc" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_AngToRight</name></member>
      <member refid="classid_thread_1afe5dd3036854fbf099d8392025e49dcc" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_AngToRight</name></member>
      <member refid="classid_thread_1a71004880ff3f7ab2c88e7786477dd538" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_AngToUp</name></member>
      <member refid="classid_thread_1a71004880ff3f7ab2c88e7786477dd538" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_AngToUp</name></member>
      <member refid="classid_thread_1a4b79fcbc92b41b65e7420c30eb837899" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_Assert</name></member>
      <member refid="classid_thread_1a4b79fcbc92b41b65e7420c30eb837899" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_Assert</name></member>
      <member refid="classid_thread_1a07fbcef89376e1c317e95d6285c5b5f2" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_CacheSoundShader</name></member>
      <member refid="classid_thread_1a07fbcef89376e1c317e95d6285c5b5f2" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_CacheSoundShader</name></member>
      <member refid="classid_thread_1aae036a6d7702de4bece62f42a33b87a4" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_ClearPersistantArgs</name></member>
      <member refid="classid_thread_1aae036a6d7702de4bece62f42a33b87a4" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_ClearPersistantArgs</name></member>
      <member refid="classid_thread_1ae9d152d4a2274a0b1b0deec8017720df" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_ClearSignalThread</name></member>
      <member refid="classid_thread_1ae9d152d4a2274a0b1b0deec8017720df" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_ClearSignalThread</name></member>
      <member refid="classid_thread_1ab027d043ffa68b4102c0808f04d5ae73" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_CopySpawnArgs</name></member>
      <member refid="classid_thread_1ab027d043ffa68b4102c0808f04d5ae73" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_CopySpawnArgs</name></member>
      <member refid="classid_thread_1a2f2f880eec5ba31fa0c44ab50c966cef" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_DebugArrow</name></member>
      <member refid="classid_thread_1a2f2f880eec5ba31fa0c44ab50c966cef" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_DebugArrow</name></member>
      <member refid="classid_thread_1a3dfdd81b971e5d8139041087681ef92a" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_DebugBounds</name></member>
      <member refid="classid_thread_1a3dfdd81b971e5d8139041087681ef92a" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_DebugBounds</name></member>
      <member refid="classid_thread_1a9c45e554e066078a0b4922d7c556dea1" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_DebugCircle</name></member>
      <member refid="classid_thread_1a9c45e554e066078a0b4922d7c556dea1" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_DebugCircle</name></member>
      <member refid="classid_thread_1a3be616e9c59d29a610edd062e54225c7" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_DebugLine</name></member>
      <member refid="classid_thread_1a3be616e9c59d29a610edd062e54225c7" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_DebugLine</name></member>
      <member refid="classid_thread_1a53b186a6386a7e7d7003913e00e72ea6" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_DrawText</name></member>
      <member refid="classid_thread_1a53b186a6386a7e7d7003913e00e72ea6" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_DrawText</name></member>
      <member refid="classid_thread_1aa3eb652decf949a5ce9c781012aa470c" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_Error</name></member>
      <member refid="classid_thread_1aa3eb652decf949a5ce9c781012aa470c" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_Error</name></member>
      <member refid="classid_thread_1a01c919daa8d08724b52554d6c8525f00" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_Execute</name></member>
      <member refid="classid_thread_1a01c919daa8d08724b52554d6c8525f00" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_Execute</name></member>
      <member refid="classid_thread_1a09e485b5e64cbbcc58ffd3c8aee1f675" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_FadeIn</name></member>
      <member refid="classid_thread_1a09e485b5e64cbbcc58ffd3c8aee1f675" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_FadeIn</name></member>
      <member refid="classid_thread_1aae7af0f18217814d98514d3eced8a8f1" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_FadeOut</name></member>
      <member refid="classid_thread_1aae7af0f18217814d98514d3eced8a8f1" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_FadeOut</name></member>
      <member refid="classid_thread_1ad072d294c9238ce37a1d18a4bd1a9848" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_FadeTo</name></member>
      <member refid="classid_thread_1ad072d294c9238ce37a1d18a4bd1a9848" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_FadeTo</name></member>
      <member refid="classid_thread_1a33aa88ec0924e6480b5931550896f31c" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_FirstPerson</name></member>
      <member refid="classid_thread_1a33aa88ec0924e6480b5931550896f31c" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_FirstPerson</name></member>
      <member refid="classid_thread_1af44f7a8b7825626fb4d0f434a84c66ec" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetCosine</name></member>
      <member refid="classid_thread_1af44f7a8b7825626fb4d0f434a84c66ec" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetCosine</name></member>
      <member refid="classid_thread_1ae72c20ff9cf4e37379aef84598b2359b" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetCvar</name></member>
      <member refid="classid_thread_1ae72c20ff9cf4e37379aef84598b2359b" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetCvar</name></member>
      <member refid="classid_thread_1a5d54cf63fd296ad1a64ca21db7a16b59" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetEntity</name></member>
      <member refid="classid_thread_1a5d54cf63fd296ad1a64ca21db7a16b59" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetEntity</name></member>
      <member refid="classid_thread_1a5730caf9f0fdcf2afdcac3eeb652be5e" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetFrameTime</name></member>
      <member refid="classid_thread_1a5730caf9f0fdcf2afdcac3eeb652be5e" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetFrameTime</name></member>
      <member refid="classid_thread_1a9e0a5cc86e6b0ff5fdc4a98421db2a68" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetPersistantFloat</name></member>
      <member refid="classid_thread_1a9e0a5cc86e6b0ff5fdc4a98421db2a68" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetPersistantFloat</name></member>
      <member refid="classid_thread_1a59bba51b027168a516e1be4cb8752b79" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetPersistantString</name></member>
      <member refid="classid_thread_1a59bba51b027168a516e1be4cb8752b79" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetPersistantString</name></member>
      <member refid="classid_thread_1aa959e3fe96d369f41b36f8f2274acff6" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetPersistantVector</name></member>
      <member refid="classid_thread_1aa959e3fe96d369f41b36f8f2274acff6" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetPersistantVector</name></member>
      <member refid="classid_thread_1a919af33fcfe103f993093362523613d2" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetSine</name></member>
      <member refid="classid_thread_1a919af33fcfe103f993093362523613d2" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetSine</name></member>
      <member refid="classid_thread_1af00c5f2146fcd0e7b4611a316a89b50a" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetSquareRoot</name></member>
      <member refid="classid_thread_1af00c5f2146fcd0e7b4611a316a89b50a" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetSquareRoot</name></member>
      <member refid="classid_thread_1a529ca771b9aa13d36e346bd7a6bb4b0e" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetTicsPerSecond</name></member>
      <member refid="classid_thread_1a529ca771b9aa13d36e346bd7a6bb4b0e" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetTicsPerSecond</name></member>
      <member refid="classid_thread_1aa0beaa972acfae3b59db24331ee00cc8" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetTime</name></member>
      <member refid="classid_thread_1aa0beaa972acfae3b59db24331ee00cc8" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetTime</name></member>
      <member refid="classid_thread_1a28b75d64fa1ab57f94b0b0b971e77fe0" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetTraceBody</name></member>
      <member refid="classid_thread_1a28b75d64fa1ab57f94b0b0b971e77fe0" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetTraceBody</name></member>
      <member refid="classid_thread_1a0a7686fa49cb2827f3362ef54fbbd1ae" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetTraceEndPos</name></member>
      <member refid="classid_thread_1a0a7686fa49cb2827f3362ef54fbbd1ae" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetTraceEndPos</name></member>
      <member refid="classid_thread_1a8943beb8dca1daa152b783cd9a09edea" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetTraceEntity</name></member>
      <member refid="classid_thread_1a8943beb8dca1daa152b783cd9a09edea" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetTraceEntity</name></member>
      <member refid="classid_thread_1af30441f1cf1ce30514fb3e9749446111" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetTraceFraction</name></member>
      <member refid="classid_thread_1af30441f1cf1ce30514fb3e9749446111" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetTraceFraction</name></member>
      <member refid="classid_thread_1a2e588536c1d197280227bf843dad9d1f" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetTraceJoint</name></member>
      <member refid="classid_thread_1a2e588536c1d197280227bf843dad9d1f" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetTraceJoint</name></member>
      <member refid="classid_thread_1af15646d6f59ffde1556ee294cd20f5c5" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetTraceNormal</name></member>
      <member refid="classid_thread_1af15646d6f59ffde1556ee294cd20f5c5" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_GetTraceNormal</name></member>
      <member refid="classid_thread_1a5a7fe29e690c639260cfc05b33eca682" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_InfluenceActive</name></member>
      <member refid="classid_thread_1a5a7fe29e690c639260cfc05b33eca682" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_InfluenceActive</name></member>
      <member refid="classid_thread_1a1d3cdc7b22d61fae541de68f2029449b" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_IsClient</name></member>
      <member refid="classid_thread_1a1d3cdc7b22d61fae541de68f2029449b" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_IsClient</name></member>
      <member refid="classid_thread_1aea0f802b3fb6c66a35e83c3bd6216d53" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_IsMultiplayer</name></member>
      <member refid="classid_thread_1aea0f802b3fb6c66a35e83c3bd6216d53" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_IsMultiplayer</name></member>
      <member refid="classid_thread_1a19655da05743abb0e55a9bf29bffc279" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_KillThread</name></member>
      <member refid="classid_thread_1a19655da05743abb0e55a9bf29bffc279" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_KillThread</name></member>
      <member refid="classid_thread_1a1550a768937551b6552ae92d347db8ec" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_OnSignal</name></member>
      <member refid="classid_thread_1a1550a768937551b6552ae92d347db8ec" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_OnSignal</name></member>
      <member refid="classid_thread_1a08ed35891c7fa9cde777737fcf752e6e" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_Pause</name></member>
      <member refid="classid_thread_1a08ed35891c7fa9cde777737fcf752e6e" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_Pause</name></member>
      <member refid="classid_thread_1a4e73a2421059a9f8f8b5f7b8258fb881" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_Print</name></member>
      <member refid="classid_thread_1a4e73a2421059a9f8f8b5f7b8258fb881" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_Print</name></member>
      <member refid="classid_thread_1afa05106b28248a0ad0bb8580ea07ee8b" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_PrintLn</name></member>
      <member refid="classid_thread_1afa05106b28248a0ad0bb8580ea07ee8b" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_PrintLn</name></member>
      <member refid="classid_thread_1ac189a0b729239bb811d9fcae7dc6dba6" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_RadiusDamage</name></member>
      <member refid="classid_thread_1ac189a0b729239bb811d9fcae7dc6dba6" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_RadiusDamage</name></member>
      <member refid="classid_thread_1acbcb210702f9c5270a1b138656114598" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_Random</name></member>
      <member refid="classid_thread_1acbcb210702f9c5270a1b138656114598" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_Random</name></member>
      <member refid="classid_class_1a746516c6f1ce54dfb6d046ae8517863b" prot="public" virt="non-virtual"><scope>idThread</scope><name>Event_Remove</name></member>
      <member refid="classid_class_1a746516c6f1ce54dfb6d046ae8517863b" prot="public" virt="non-virtual"><scope>idThread</scope><name>Event_Remove</name></member>
      <member refid="classid_thread_1a4e5ae0e1dfd469cebdc9026e6b440fcc" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_Say</name></member>
      <member refid="classid_thread_1a4e5ae0e1dfd469cebdc9026e6b440fcc" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_Say</name></member>
      <member refid="classid_thread_1ab316bc7784e62a5b0aaa2f704758691d" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_SetCamera</name></member>
      <member refid="classid_thread_1ab316bc7784e62a5b0aaa2f704758691d" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_SetCamera</name></member>
      <member refid="classid_thread_1a64c2bc6ca77ebe39f16acab7a60bfe7a" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_SetCvar</name></member>
      <member refid="classid_thread_1a64c2bc6ca77ebe39f16acab7a60bfe7a" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_SetCvar</name></member>
      <member refid="classid_thread_1a3dac371f870c2ca05e07aa7051191e92" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_SetPersistantArg</name></member>
      <member refid="classid_thread_1a3dac371f870c2ca05e07aa7051191e92" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_SetPersistantArg</name></member>
      <member refid="classid_thread_1a5d55a398e18bd02943791daf81a7ebc9" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_SetShaderParm</name></member>
      <member refid="classid_thread_1a5d55a398e18bd02943791daf81a7ebc9" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_SetShaderParm</name></member>
      <member refid="classid_thread_1a577138e147a53ea67f7a28bc0d170e74" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_SetSpawnArg</name></member>
      <member refid="classid_thread_1a577138e147a53ea67f7a28bc0d170e74" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_SetSpawnArg</name></member>
      <member refid="classid_thread_1aaeebfa1e4b23e98f2e0d694426814d3f" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_SetThreadName</name></member>
      <member refid="classid_thread_1aaeebfa1e4b23e98f2e0d694426814d3f" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_SetThreadName</name></member>
      <member refid="classid_thread_1a08167db75444246e012645a4571f041d" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_Spawn</name></member>
      <member refid="classid_thread_1a08167db75444246e012645a4571f041d" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_Spawn</name></member>
      <member refid="classid_thread_1aad519069b8fa6bd83be3deada405505b" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_SpawnFloat</name></member>
      <member refid="classid_thread_1aad519069b8fa6bd83be3deada405505b" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_SpawnFloat</name></member>
      <member refid="classid_thread_1a23d16f275ef6a6d3427c7d4f3ab663d7" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_SpawnString</name></member>
      <member refid="classid_thread_1a23d16f275ef6a6d3427c7d4f3ab663d7" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_SpawnString</name></member>
      <member refid="classid_thread_1a902fd410abc1c462e58227568fc93fe5" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_SpawnVector</name></member>
      <member refid="classid_thread_1a902fd410abc1c462e58227568fc93fe5" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_SpawnVector</name></member>
      <member refid="classid_thread_1acb6144cafd24db9b98c59f893ff073df" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_StartMusic</name></member>
      <member refid="classid_thread_1acb6144cafd24db9b98c59f893ff073df" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_StartMusic</name></member>
      <member refid="classid_thread_1a08b32c214c3d2d195408f10740fd811b" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_StrLeft</name></member>
      <member refid="classid_thread_1a08b32c214c3d2d195408f10740fd811b" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_StrLeft</name></member>
      <member refid="classid_thread_1ab9449f03d5329d01d93101a376a0fabb" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_StrLen</name></member>
      <member refid="classid_thread_1ab9449f03d5329d01d93101a376a0fabb" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_StrLen</name></member>
      <member refid="classid_thread_1ac860633017ee0b4b51159d8752bd3c6e" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_StrMid</name></member>
      <member refid="classid_thread_1ac860633017ee0b4b51159d8752bd3c6e" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_StrMid</name></member>
      <member refid="classid_thread_1a44205b67b3721a364c563cf74b4e39ed" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_StrRight</name></member>
      <member refid="classid_thread_1a44205b67b3721a364c563cf74b4e39ed" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_StrRight</name></member>
      <member refid="classid_thread_1a3a6c2d0fd24dd56c5bd0627e1730ff9b" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_StrSkip</name></member>
      <member refid="classid_thread_1a3a6c2d0fd24dd56c5bd0627e1730ff9b" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_StrSkip</name></member>
      <member refid="classid_thread_1aba995d6b2017e262b344631eed8a25c1" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_StrToFloat</name></member>
      <member refid="classid_thread_1aba995d6b2017e262b344631eed8a25c1" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_StrToFloat</name></member>
      <member refid="classid_thread_1a839483b6c37ec5d1bd2d757548290300" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_TerminateThread</name></member>
      <member refid="classid_thread_1a839483b6c37ec5d1bd2d757548290300" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_TerminateThread</name></member>
      <member refid="classid_thread_1aac4da14ef512c5cfdb7219f5c0e668e5" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_Trace</name></member>
      <member refid="classid_thread_1aac4da14ef512c5cfdb7219f5c0e668e5" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_Trace</name></member>
      <member refid="classid_thread_1a467b7096f4c2bcb669a1dee432f569c1" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_TracePoint</name></member>
      <member refid="classid_thread_1a467b7096f4c2bcb669a1dee432f569c1" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_TracePoint</name></member>
      <member refid="classid_thread_1ab460172c241fa2043df0fde4c23c58a9" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_Trigger</name></member>
      <member refid="classid_thread_1ab460172c241fa2043df0fde4c23c58a9" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_Trigger</name></member>
      <member refid="classid_thread_1a2f6de6b383664bacf497fb1a69e2ce85" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_VecCrossProduct</name></member>
      <member refid="classid_thread_1a2f6de6b383664bacf497fb1a69e2ce85" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_VecCrossProduct</name></member>
      <member refid="classid_thread_1aaae3fa3b8ec9cde970ed148de5a3f3d5" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_VecDotProduct</name></member>
      <member refid="classid_thread_1aaae3fa3b8ec9cde970ed148de5a3f3d5" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_VecDotProduct</name></member>
      <member refid="classid_thread_1a1a5f4cb884b6e262a471bf7ee329f58d" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_VecLength</name></member>
      <member refid="classid_thread_1a1a5f4cb884b6e262a471bf7ee329f58d" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_VecLength</name></member>
      <member refid="classid_thread_1afa748cbc0d883e645dbd74558a7c68d5" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_VecNormalize</name></member>
      <member refid="classid_thread_1afa748cbc0d883e645dbd74558a7c68d5" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_VecNormalize</name></member>
      <member refid="classid_thread_1af25a8173f0798a13d2a7afb105e0bd8c" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_VecToAngles</name></member>
      <member refid="classid_thread_1af25a8173f0798a13d2a7afb105e0bd8c" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_VecToAngles</name></member>
      <member refid="classid_thread_1acfa822875c1c6ccc669ee7d2b40995df" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_Wait</name></member>
      <member refid="classid_thread_1acfa822875c1c6ccc669ee7d2b40995df" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_Wait</name></member>
      <member refid="classid_thread_1aadffa01ee40744cd88ded2ff82ba50a5" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_WaitFor</name></member>
      <member refid="classid_thread_1aadffa01ee40744cd88ded2ff82ba50a5" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_WaitFor</name></member>
      <member refid="classid_thread_1af9771d76191781b0f7488816d660df39" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_WaitForThread</name></member>
      <member refid="classid_thread_1af9771d76191781b0f7488816d660df39" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_WaitForThread</name></member>
      <member refid="classid_thread_1a72d489dad4e86da18831143ab0b6ccc4" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_WaitFrame</name></member>
      <member refid="classid_thread_1a72d489dad4e86da18831143ab0b6ccc4" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_WaitFrame</name></member>
      <member refid="classid_thread_1a779727bfef652b674f2dc7dd5cfac761" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_Warning</name></member>
      <member refid="classid_thread_1a779727bfef652b674f2dc7dd5cfac761" prot="private" virt="non-virtual"><scope>idThread</scope><name>Event_Warning</name></member>
      <member refid="classid_class_1a7873f9bca2ac9b04d44764e4daa70ad5" prot="public" virt="non-virtual"><scope>idThread</scope><name>eventCallbacks</name></member>
      <member refid="classid_thread_1a58828d13cfcaae3b2a3b1c2b032529bd" prot="public" virt="non-virtual"><scope>idThread</scope><name>Execute</name></member>
      <member refid="classid_thread_1a58828d13cfcaae3b2a3b1c2b032529bd" prot="public" virt="non-virtual"><scope>idThread</scope><name>Execute</name></member>
      <member refid="classid_class_1acd5d3a153b040060c1d79a7bc441ecfa" prot="public" virt="non-virtual"><scope>idThread</scope><name>FindUninitializedMemory</name></member>
      <member refid="classid_class_1acd5d3a153b040060c1d79a7bc441ecfa" prot="public" virt="non-virtual"><scope>idThread</scope><name>FindUninitializedMemory</name></member>
      <member refid="classid_class_1a9ac01fd82cb27d90e065151dad7b3f57" prot="public" virt="non-virtual"><scope>idThread</scope><name>GetClass</name></member>
      <member refid="classid_class_1a2fd37bdd12da7a6405bbe4fa985d8a90" prot="public" virt="non-virtual"><scope>idThread</scope><name>GetClass</name></member>
      <member refid="classid_class_1aaf010933354d3ab55c938d09beaefb70" prot="public" virt="non-virtual"><scope>idThread</scope><name>GetClassname</name></member>
      <member refid="classid_class_1a1b3ea8a396a4642e0d523b8e0cb9f090" prot="public" virt="non-virtual"><scope>idThread</scope><name>GetClassname</name></member>
      <member refid="classid_class_1a0b1f5ff97e7101384e1ca978fbde9878" prot="public" virt="non-virtual"><scope>idThread</scope><name>GetNumTypes</name></member>
      <member refid="classid_class_1a0b1f5ff97e7101384e1ca978fbde9878" prot="public" virt="non-virtual"><scope>idThread</scope><name>GetNumTypes</name></member>
      <member refid="classid_class_1a272cbc9f1eeb09ec9f524b2d9948945a" prot="public" virt="non-virtual"><scope>idThread</scope><name>GetSuperclass</name></member>
      <member refid="classid_class_1a250ad44de415ebe4c6ee6af859978e98" prot="public" virt="non-virtual"><scope>idThread</scope><name>GetSuperclass</name></member>
      <member refid="classid_thread_1a0b0c11d401a7a33285b9a37024a93f69" prot="public" virt="non-virtual"><scope>idThread</scope><name>GetThread</name></member>
      <member refid="classid_thread_1a4c0ccf9230805b0349135c98ae62dddd" prot="public" virt="non-virtual"><scope>idThread</scope><name>GetThread</name></member>
      <member refid="classid_thread_1aeb0733f33e8998fe0a337641390225df" prot="public" virt="non-virtual"><scope>idThread</scope><name>GetThreadName</name></member>
      <member refid="classid_thread_1a4a0a6670a888e02757198f433334ef30" prot="public" virt="non-virtual"><scope>idThread</scope><name>GetThreadName</name></member>
      <member refid="classid_thread_1a2512968509db669e6d32310d443fff3c" prot="public" virt="non-virtual"><scope>idThread</scope><name>GetThreadNum</name></member>
      <member refid="classid_thread_1a68cffe0e338729cdcadb879cd163b910" prot="public" virt="non-virtual"><scope>idThread</scope><name>GetThreadNum</name></member>
      <member refid="classid_thread_1a9e54fd212c49b5988a2b891d59638971" prot="public" virt="non-virtual"><scope>idThread</scope><name>GetThreads</name></member>
      <member refid="classid_thread_1aef20201b4d27fc3c98ac9074a56c473f" prot="public" virt="non-virtual"><scope>idThread</scope><name>GetThreads</name></member>
      <member refid="classid_class_1ae1e4a1553a64224e101467819ceb5086" prot="public" virt="virtual"><scope>idThread</scope><name>GetType</name></member>
      <member refid="classid_class_1a4581fc61c1e64c22928a4c4096c5a47b" prot="public" virt="non-virtual"><scope>idThread</scope><name>GetType</name></member>
      <member refid="classid_class_1a68f8759cc5b307eee3dca1dc38402b2d" prot="public" virt="virtual"><scope>idThread</scope><name>GetType</name></member>
      <member refid="classid_class_1a3662d6404c00a84bee44be1d4d0d3b42" prot="public" virt="non-virtual"><scope>idThread</scope><name>GetType</name></member>
      <member refid="classid_class_1a6981e636da3bb171b209f773ff5c579f" prot="public" virt="non-virtual"><scope>idThread</scope><name>GetTypeNumBits</name></member>
      <member refid="classid_class_1a6981e636da3bb171b209f773ff5c579f" prot="public" virt="non-virtual"><scope>idThread</scope><name>GetTypeNumBits</name></member>
      <member refid="classid_thread_1a9c679835a7590df1478cb6b05b3253ce" prot="public" virt="non-virtual"><scope>idThread</scope><name>idThread</name></member>
      <member refid="classid_thread_1a08a8d6ca2cefb0f41927f57f696b1f8c" prot="public" virt="non-virtual"><scope>idThread</scope><name>idThread</name></member>
      <member refid="classid_thread_1a29a382b3cda109395ffb1cda6d6e4b07" prot="public" virt="non-virtual"><scope>idThread</scope><name>idThread</name></member>
      <member refid="classid_thread_1a9577bcf3bf62dcb53de9f7219fe0ded5" prot="public" virt="non-virtual"><scope>idThread</scope><name>idThread</name></member>
      <member refid="classid_thread_1a1c19e2093f594c9c904bb46f0f999647" prot="public" virt="non-virtual"><scope>idThread</scope><name>idThread</name></member>
      <member refid="classid_thread_1a9c679835a7590df1478cb6b05b3253ce" prot="public" virt="non-virtual"><scope>idThread</scope><name>idThread</name></member>
      <member refid="classid_thread_1a08a8d6ca2cefb0f41927f57f696b1f8c" prot="public" virt="non-virtual"><scope>idThread</scope><name>idThread</name></member>
      <member refid="classid_thread_1a29a382b3cda109395ffb1cda6d6e4b07" prot="public" virt="non-virtual"><scope>idThread</scope><name>idThread</name></member>
      <member refid="classid_thread_1a9577bcf3bf62dcb53de9f7219fe0ded5" prot="public" virt="non-virtual"><scope>idThread</scope><name>idThread</name></member>
      <member refid="classid_thread_1a1c19e2093f594c9c904bb46f0f999647" prot="public" virt="non-virtual"><scope>idThread</scope><name>idThread</name></member>
      <member refid="classid_thread_1a6ff433ee5a141fc0a263e3caac5062ec" prot="private" virt="non-virtual"><scope>idThread</scope><name>Init</name></member>
      <member refid="classid_thread_1a6ff433ee5a141fc0a263e3caac5062ec" prot="private" virt="non-virtual"><scope>idThread</scope><name>Init</name></member>
      <member refid="classid_thread_1afc98c915bef79643ff7df08e797312e7" prot="private" virt="non-virtual"><scope>idThread</scope><name>interpreter</name></member>
      <member refid="classid_thread_1ac85001e99ba3054fb83e0d5833ea76d4" prot="public" virt="non-virtual"><scope>idThread</scope><name>IsDoneProcessing</name></member>
      <member refid="classid_thread_1acca9f7f7b173bf557fa50749ee3ce530" prot="public" virt="non-virtual"><scope>idThread</scope><name>IsDoneProcessing</name></member>
      <member refid="classid_thread_1ae03d6b49ef0cd08d91b45426685d00f7" prot="public" virt="non-virtual"><scope>idThread</scope><name>IsDying</name></member>
      <member refid="classid_thread_1a02c16240e37c215f29ce26083ce829ef" prot="public" virt="non-virtual"><scope>idThread</scope><name>IsDying</name></member>
      <member refid="classid_class_1a3514bbccebcac499ac15083bb2a67487" prot="public" virt="non-virtual"><scope>idThread</scope><name>IsType</name></member>
      <member refid="classid_class_1a44af143b246636c3e6f43aebad05b6d6" prot="public" virt="non-virtual"><scope>idThread</scope><name>IsType</name></member>
      <member refid="classid_thread_1a24efd21be10a64e50dc88786602ac119" prot="public" virt="non-virtual"><scope>idThread</scope><name>IsWaiting</name></member>
      <member refid="classid_thread_1a24efd21be10a64e50dc88786602ac119" prot="public" virt="non-virtual"><scope>idThread</scope><name>IsWaiting</name></member>
      <member refid="classid_thread_1aa5ba7c62168dd1bfae5684bb620849bb" prot="public" virt="non-virtual"><scope>idThread</scope><name>IsWaitingFor</name></member>
      <member refid="classid_thread_1aa5ba7c62168dd1bfae5684bb620849bb" prot="public" virt="non-virtual"><scope>idThread</scope><name>IsWaitingFor</name></member>
      <member refid="classid_thread_1a38412dafcda10d9a4717cd98a59a6cfa" prot="public" virt="non-virtual"><scope>idThread</scope><name>KillThread</name></member>
      <member refid="classid_thread_1afbadffa2ca8fa5a53c6c6cfb5d3b11f4" prot="public" virt="non-virtual"><scope>idThread</scope><name>KillThread</name></member>
      <member refid="classid_thread_1a08f808ed65e5a2b920ff7f4de20ddf15" prot="public" virt="non-virtual"><scope>idThread</scope><name>KillThread</name></member>
      <member refid="classid_thread_1ac7b9b3f2318e8f682d892b5de4e8963c" prot="public" virt="non-virtual"><scope>idThread</scope><name>KillThread</name></member>
      <member refid="classid_thread_1a5ad638a63040ff9bc5ac4931bd036502" prot="private" virt="non-virtual"><scope>idThread</scope><name>lastExecuteTime</name></member>
      <member refid="classid_class_1a4bae32c6569ee5b7f27e5cd5a4c93eab" prot="public" virt="non-virtual"><scope>idThread</scope><name>ListClasses_f</name></member>
      <member refid="classid_class_1ad5f3b0730c302ad9f74e35d94274ad34" prot="public" virt="non-virtual"><scope>idThread</scope><name>ListClasses_f</name></member>
      <member refid="classid_thread_1af836d1ed35c2a0b16b4c31422a69e18b" prot="public" virt="non-virtual"><scope>idThread</scope><name>ListThreads_f</name></member>
      <member refid="classid_thread_1a7106a1caa093d1a0b61d1f838ecf247a" prot="public" virt="non-virtual"><scope>idThread</scope><name>ListThreads_f</name></member>
      <member refid="classid_thread_1acd43729f75f35865a889788fa697dbda" prot="private" virt="non-virtual"><scope>idThread</scope><name>manualControl</name></member>
      <member refid="classid_thread_1acfcce64f10878acc69edba7a8a97090c" prot="public" virt="non-virtual"><scope>idThread</scope><name>ManualControl</name></member>
      <member refid="classid_thread_1acfcce64f10878acc69edba7a8a97090c" prot="public" virt="non-virtual"><scope>idThread</scope><name>ManualControl</name></member>
      <member refid="classid_thread_1a5c1e49c5d4c6aa82772c89a7bf4dc49c" prot="public" virt="non-virtual"><scope>idThread</scope><name>ManualDelete</name></member>
      <member refid="classid_thread_1a5c1e49c5d4c6aa82772c89a7bf4dc49c" prot="public" virt="non-virtual"><scope>idThread</scope><name>ManualDelete</name></member>
      <member refid="classid_thread_1a73a306e7106ae79c07dc79fc558d6547" prot="public" virt="non-virtual"><scope>idThread</scope><name>ObjectMoveDone</name></member>
      <member refid="classid_thread_1a5195521e549e69ea7af0d36d3cc15832" prot="public" virt="non-virtual"><scope>idThread</scope><name>ObjectMoveDone</name></member>
      <member refid="classid_thread_1a32af557d50acd681c31f5d0ac9f79e88" prot="public" virt="non-virtual"><scope>idThread</scope><name>ObjectMoveDone</name></member>
      <member refid="classid_thread_1a5195521e549e69ea7af0d36d3cc15832" prot="public" virt="non-virtual"><scope>idThread</scope><name>ObjectMoveDone</name></member>
      <member refid="classid_class_1a039b8531aa3f54ab164066361aa51bac" prot="public" virt="non-virtual"><scope>idThread</scope><name>operator delete</name></member>
      <member refid="classid_class_1a9154911c956031443c4a177434a7c951" prot="public" virt="non-virtual"><scope>idThread</scope><name>operator delete</name></member>
      <member refid="classid_class_1a039b8531aa3f54ab164066361aa51bac" prot="public" virt="non-virtual"><scope>idThread</scope><name>operator delete</name></member>
      <member refid="classid_class_1a9154911c956031443c4a177434a7c951" prot="public" virt="non-virtual"><scope>idThread</scope><name>operator delete</name></member>
      <member refid="classid_class_1aa56d622a26b2984a1507446905237a5e" prot="public" virt="non-virtual"><scope>idThread</scope><name>operator new</name></member>
      <member refid="classid_class_1a72f2d16d9ac043833e32bc734e1e8173" prot="public" virt="non-virtual"><scope>idThread</scope><name>operator new</name></member>
      <member refid="classid_class_1a11843e3263fac01b39f2e738a08d885e" prot="public" virt="non-virtual"><scope>idThread</scope><name>operator new</name></member>
      <member refid="classid_class_1a3dbb763aa8a408c7dc80beab9edaadd5" prot="public" virt="non-virtual"><scope>idThread</scope><name>operator new</name></member>
      <member refid="classid_thread_1a8d4c6c6cd57f70578b1a83303d83788b" prot="private" virt="non-virtual"><scope>idThread</scope><name>Pause</name></member>
      <member refid="classid_thread_1a8d4c6c6cd57f70578b1a83303d83788b" prot="private" virt="non-virtual"><scope>idThread</scope><name>Pause</name></member>
      <member refid="classid_class_1a4e1bee4c8c95b22799f58284785ea45d" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a79ff2ce28802016d22c52b575732468c" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a4d532e97b9b8c8528107509486f399aa" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1aeabbc3155ac6c991b288f874a313f4c6" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1af489f280656236ffda55cf31e28a1458" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a3bf07e2d8d295cf61856d9fd26f5ba0b" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1ab1c59135543538e7507590761864c054" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a269276b4a60c83e6678b4308b3b72afe" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a2cdfe8eb844ec5a8881f6e5861dff198" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a4e1bee4c8c95b22799f58284785ea45d" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a79ff2ce28802016d22c52b575732468c" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a4d532e97b9b8c8528107509486f399aa" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1aeabbc3155ac6c991b288f874a313f4c6" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1af489f280656236ffda55cf31e28a1458" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a3bf07e2d8d295cf61856d9fd26f5ba0b" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1ab1c59135543538e7507590761864c054" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a269276b4a60c83e6678b4308b3b72afe" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a2cdfe8eb844ec5a8881f6e5861dff198" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventMS</name></member>
      <member refid="classid_class_1a44dd1c98e3a3067301cccd467424e1fb" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a6aa307dcafd72a277e1b0ba7e7e86313" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a06dfecc610d58cfa6c9a714b41f5e500" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a57d88fe874e7fce62ab80de4e9bac4d1" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a90d5e0e78a3f2ab541f2de7842fbd25c" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a78e7ad3f071bca22b371033e074dcb95" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a66d99ca51730aaf6151aa65e6e891dad" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a8251d21ac61b4b5bf71865c5daedecb3" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a0f023d36142f56c506f3de44bcb88a60" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a44dd1c98e3a3067301cccd467424e1fb" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a6aa307dcafd72a277e1b0ba7e7e86313" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a06dfecc610d58cfa6c9a714b41f5e500" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a57d88fe874e7fce62ab80de4e9bac4d1" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a90d5e0e78a3f2ab541f2de7842fbd25c" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a78e7ad3f071bca22b371033e074dcb95" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a66d99ca51730aaf6151aa65e6e891dad" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a8251d21ac61b4b5bf71865c5daedecb3" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a0f023d36142f56c506f3de44bcb88a60" prot="public" virt="non-virtual"><scope>idThread</scope><name>PostEventSec</name></member>
      <member refid="classid_class_1a2730cf06c2248d033d3331393690d465" prot="public" virt="non-virtual"><scope>idThread</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a41ebdd2ed60bad555b8040af1468dd5e" prot="public" virt="non-virtual"><scope>idThread</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1ae1688cd389fea365f91310fd8f0fbdc1" prot="public" virt="non-virtual"><scope>idThread</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a682126d778da71c1d61c350ef1383cb8" prot="public" virt="non-virtual"><scope>idThread</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1aacfd744269d9a43b3055d4403674a261" prot="public" virt="non-virtual"><scope>idThread</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1abd8938dad93fdc7aa9cb90d84f81541b" prot="public" virt="non-virtual"><scope>idThread</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a804fc083a766317b62978b9f4f1de2f3" prot="public" virt="non-virtual"><scope>idThread</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1af3a58075c898bc5018cce41a6840a3eb" prot="public" virt="non-virtual"><scope>idThread</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a925bdbdc9aa6d61b6c74a0e17393007b" prot="public" virt="non-virtual"><scope>idThread</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a2730cf06c2248d033d3331393690d465" prot="public" virt="non-virtual"><scope>idThread</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a41ebdd2ed60bad555b8040af1468dd5e" prot="public" virt="non-virtual"><scope>idThread</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1ae1688cd389fea365f91310fd8f0fbdc1" prot="public" virt="non-virtual"><scope>idThread</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a682126d778da71c1d61c350ef1383cb8" prot="public" virt="non-virtual"><scope>idThread</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1aacfd744269d9a43b3055d4403674a261" prot="public" virt="non-virtual"><scope>idThread</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1abd8938dad93fdc7aa9cb90d84f81541b" prot="public" virt="non-virtual"><scope>idThread</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a804fc083a766317b62978b9f4f1de2f3" prot="public" virt="non-virtual"><scope>idThread</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1af3a58075c898bc5018cce41a6840a3eb" prot="public" virt="non-virtual"><scope>idThread</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a925bdbdc9aa6d61b6c74a0e17393007b" prot="public" virt="non-virtual"><scope>idThread</scope><name>ProcessEvent</name></member>
      <member refid="classid_class_1a913781fd6276d5d821999c206c784505" prot="public" virt="non-virtual"><scope>idThread</scope><name>ProcessEventArgPtr</name></member>
      <member refid="classid_class_1a913781fd6276d5d821999c206c784505" prot="public" virt="non-virtual"><scope>idThread</scope><name>ProcessEventArgPtr</name></member>
      <member refid="classid_class_1ab8459ec829b2e016db6d2b13d184917d" prot="public" virt="non-virtual"><scope>idThread</scope><name>RespondsTo</name></member>
      <member refid="classid_class_1ab135cc5b1099727aeb0710d169ee641f" prot="public" virt="non-virtual"><scope>idThread</scope><name>RespondsTo</name></member>
      <member refid="classid_thread_1a44f1e6dcc16e47e5becf1a4838d595b5" prot="public" virt="non-virtual"><scope>idThread</scope><name>Restart</name></member>
      <member refid="classid_thread_1a891208a447d8e059d1238f6b99bec962" prot="public" virt="non-virtual"><scope>idThread</scope><name>Restart</name></member>
      <member refid="classid_thread_1abdac64ed57708a6f2ed2220cab209d96" prot="public" virt="non-virtual"><scope>idThread</scope><name>Restore</name></member>
      <member refid="classid_thread_1abdac64ed57708a6f2ed2220cab209d96" prot="public" virt="non-virtual"><scope>idThread</scope><name>Restore</name></member>
      <member refid="classid_thread_1aaadc05b96f51e8595a0aa7a061704659" prot="public" virt="non-virtual"><scope>idThread</scope><name>ReturnEntity</name></member>
      <member refid="classid_thread_1aa009bc99dc88a7205cdcf8ff6c2bb1b1" prot="public" virt="non-virtual"><scope>idThread</scope><name>ReturnEntity</name></member>
      <member refid="classid_thread_1ae948cc5da78d1f28215d999e82e8cbe7" prot="public" virt="non-virtual"><scope>idThread</scope><name>ReturnFloat</name></member>
      <member refid="classid_thread_1a2dafce1250149f490c927c0e9d2222ee" prot="public" virt="non-virtual"><scope>idThread</scope><name>ReturnFloat</name></member>
      <member refid="classid_thread_1ab819277575d4be5f96cfa6888352748f" prot="public" virt="non-virtual"><scope>idThread</scope><name>ReturnInt</name></member>
      <member refid="classid_thread_1a060a1b357b05e2385d4a8af541ecc36b" prot="public" virt="non-virtual"><scope>idThread</scope><name>ReturnInt</name></member>
      <member refid="classid_thread_1a19a32d7370b8fdedd579f64f088b2020" prot="public" virt="non-virtual"><scope>idThread</scope><name>ReturnString</name></member>
      <member refid="classid_thread_1a0cab62af322f674175685df26361cd38" prot="public" virt="non-virtual"><scope>idThread</scope><name>ReturnString</name></member>
      <member refid="classid_thread_1a8a018969f0980a32811ea8a51e9c3369" prot="public" virt="non-virtual"><scope>idThread</scope><name>ReturnVector</name></member>
      <member refid="classid_thread_1aecc54bf9cd85aeadba40a3a91a9fc203" prot="public" virt="non-virtual"><scope>idThread</scope><name>ReturnVector</name></member>
      <member refid="classid_thread_1af5d0d10166f8ef17710f35654701b957" prot="public" virt="non-virtual"><scope>idThread</scope><name>Save</name></member>
      <member refid="classid_thread_1af5d0d10166f8ef17710f35654701b957" prot="public" virt="non-virtual"><scope>idThread</scope><name>Save</name></member>
      <member refid="classid_thread_1a11e79a2e342c5938e243867f313fcdfa" prot="public" virt="non-virtual"><scope>idThread</scope><name>SetThreadName</name></member>
      <member refid="classid_thread_1a11e79a2e342c5938e243867f313fcdfa" prot="public" virt="non-virtual"><scope>idThread</scope><name>SetThreadName</name></member>
      <member refid="classid_thread_1a898f2780eee066e3ca019472ca519785" prot="public" virt="non-virtual"><scope>idThread</scope><name>SetThreadNum</name></member>
      <member refid="classid_thread_1a70f1697c4326e76861d1d93fcf3e92b4" prot="public" virt="non-virtual"><scope>idThread</scope><name>SetThreadNum</name></member>
      <member refid="classid_class_1aa20c883a28509e2b4997ee91ae0b8eae" prot="public" virt="non-virtual"><scope>idThread</scope><name>Shutdown</name></member>
      <member refid="classid_class_1a42b60ee435e4d84ad914d828a4f7f82f" prot="public" virt="non-virtual"><scope>idThread</scope><name>Shutdown</name></member>
      <member refid="classid_class_1a7b8213ff8dd347c24657306603a3ef8e" prot="public" virt="non-virtual"><scope>idThread</scope><name>Spawn</name></member>
      <member refid="classid_class_1a7b8213ff8dd347c24657306603a3ef8e" prot="public" virt="non-virtual"><scope>idThread</scope><name>Spawn</name></member>
      <member refid="classid_thread_1ad3f1dd7ef30dc4ab7b896f8bfdd94431" prot="private" virt="non-virtual"><scope>idThread</scope><name>spawnArgs</name></member>
      <member refid="classid_thread_1ae823dfbf5c953e7baeca3411150b56bd" prot="public" virt="non-virtual"><scope>idThread</scope><name>Start</name></member>
      <member refid="classid_thread_1ae823dfbf5c953e7baeca3411150b56bd" prot="public" virt="non-virtual"><scope>idThread</scope><name>Start</name></member>
      <member refid="classid_thread_1a6cfdafb6c3cf5619c451cbd601c26e75" prot="public" virt="non-virtual"><scope>idThread</scope><name>ThreadCallback</name></member>
      <member refid="classid_thread_1a6cfdafb6c3cf5619c451cbd601c26e75" prot="public" virt="non-virtual"><scope>idThread</scope><name>ThreadCallback</name></member>
      <member refid="classid_thread_1a4e9e1ba5dae49314283fe15ba7a6b911" prot="public" virt="non-virtual"><scope>idThread</scope><name>ThreadDying</name></member>
      <member refid="classid_thread_1a4e9e1ba5dae49314283fe15ba7a6b911" prot="public" virt="non-virtual"><scope>idThread</scope><name>ThreadDying</name></member>
      <member refid="classid_thread_1adc63dccf06da9fc052a3bca1e8f090a8" prot="private" virt="non-virtual"><scope>idThread</scope><name>threadIndex</name></member>
      <member refid="classid_thread_1ae99d9db98b4885d7920a3cac068d6bc3" prot="private" virt="non-virtual"><scope>idThread</scope><name>threadList</name></member>
      <member refid="classid_thread_1ac0867cab5ea02d4b0423a00207f8155e" prot="private" virt="non-virtual"><scope>idThread</scope><name>threadName</name></member>
      <member refid="classid_thread_1a3de692d4302d720c136e58003c593b2a" prot="private" virt="non-virtual"><scope>idThread</scope><name>threadNum</name></member>
      <member refid="classid_thread_1a08115f0d1bfecb29efd41237e5f251fa" prot="private" virt="non-virtual"><scope>idThread</scope><name>trace</name></member>
      <member refid="classid_class_1ae391af31676f812ccd2dc7b0c8f921b1" prot="public" virt="non-virtual"><scope>idThread</scope><name>Type</name></member>
      <member refid="classid_thread_1a39ee434e32deb3ca6a4c1b8bcfe3a7cc" prot="public" virt="non-virtual"><scope>idThread</scope><name>WaitFrame</name></member>
      <member refid="classid_thread_1a39ee434e32deb3ca6a4c1b8bcfe3a7cc" prot="public" virt="non-virtual"><scope>idThread</scope><name>WaitFrame</name></member>
      <member refid="classid_thread_1acdd5605f6d60091f3fbc7f6d5b076a07" prot="private" virt="non-virtual"><scope>idThread</scope><name>waitingFor</name></member>
      <member refid="classid_thread_1a8955b548cfd98c038638affbdcd4c34b" prot="private" virt="non-virtual"><scope>idThread</scope><name>waitingForThread</name></member>
      <member refid="classid_thread_1abedc5f3b03a0a35a241a01cd588804ec" prot="public" virt="non-virtual"><scope>idThread</scope><name>WaitingOnThread</name></member>
      <member refid="classid_thread_1ae9e1b9df156101f74749aa75d82a461c" prot="public" virt="non-virtual"><scope>idThread</scope><name>WaitingOnThread</name></member>
      <member refid="classid_thread_1a773a83a3c86345a51a4f0128a430d3bb" prot="private" virt="non-virtual"><scope>idThread</scope><name>waitingUntil</name></member>
      <member refid="classid_thread_1a4d89c0aad91615d52ad4e6cbfaa16c29" prot="public" virt="non-virtual"><scope>idThread</scope><name>WaitMS</name></member>
      <member refid="classid_thread_1a4d89c0aad91615d52ad4e6cbfaa16c29" prot="public" virt="non-virtual"><scope>idThread</scope><name>WaitMS</name></member>
      <member refid="classid_thread_1a9bb460d1b2453a0f7af4e19d3699d2be" prot="public" virt="non-virtual"><scope>idThread</scope><name>WaitSec</name></member>
      <member refid="classid_thread_1a9bb460d1b2453a0f7af4e19d3699d2be" prot="public" virt="non-virtual"><scope>idThread</scope><name>WaitSec</name></member>
      <member refid="classid_thread_1ad959257936bbb6ca51494cdc5edddcae" prot="public" virt="non-virtual"><scope>idThread</scope><name>Warning</name></member>
      <member refid="classid_thread_1a882b54298866f12d694efb5b9675159f" prot="public" virt="non-virtual"><scope>idThread</scope><name>Warning</name></member>
      <member refid="classid_class_1a252055b84ce9dd64e15482a0a083bd92" prot="public" virt="virtual"><scope>idThread</scope><name>~idClass</name></member>
      <member refid="classid_class_1adc7282c1b9d17b7b852bc7e0086e256d" prot="public" virt="virtual"><scope>idThread</scope><name>~idClass</name></member>
      <member refid="classid_thread_1a69ee98101b504035902aa64ec37e5947" prot="public" virt="virtual"><scope>idThread</scope><name>~idThread</name></member>
      <member refid="classid_thread_1a79d6df08324b673fd2fd79cb90409db0" prot="public" virt="virtual"><scope>idThread</scope><name>~idThread</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
