<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_type_info_tools" kind="class" prot="public">
    <compoundname>idTypeInfoTools</compoundname>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classid_type_info_tools_1a550ba0d36812661c5f917639f42cccfa" prot="public" static="yes" mutable="no">
        <type><ref refid="classid_file" kindref="compound">idFile</ref> *</type>
        <definition>idFile * idTypeInfoTools::fp</definition>
        <argsstring></argsstring>
        <name>fp</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" line="63" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_type_info_tools_1a7a748d8600b83adc6694596804a7a498" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int idTypeInfoTools::initValue</definition>
        <argsstring></argsstring>
        <name>initValue</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" line="64" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_type_info_tools_1a270fde170caa7a9a1bd18aaaa3c83c47" prot="public" static="yes" mutable="no">
        <type>WriteVariableType_t</type>
        <definition>WriteVariableType_t idTypeInfoTools::Write</definition>
        <argsstring></argsstring>
        <name>Write</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" line="65" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_type_info_tools_1a523633b10909fcb24ebe6d20a04e1f38" prot="public" static="yes" mutable="no">
        <type><ref refid="classid_lexer" kindref="compound">idLexer</ref> *</type>
        <definition>idLexer * idTypeInfoTools::src</definition>
        <argsstring></argsstring>
        <name>src</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" line="66" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_type_info_tools_1aaa47cadd7aa1af89b27d83e448c4c827" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool idTypeInfoTools::typeError</definition>
        <argsstring></argsstring>
        <name>typeError</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" line="67" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classid_type_info_tools_1ae22982ce1418975c2f20eb3ee29a0f20" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structclass_type_info__t" kindref="compound">classTypeInfo_t</ref> *</type>
        <definition>const classTypeInfo_t * idTypeInfoTools::FindClassInfo</definition>
        <argsstring>(const char *typeName)</argsstring>
        <name>FindClassInfo</name>
        <param>
          <type>const char *</type>
          <declname>typeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" line="53" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" bodystart="129" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1af484cbbb2b4d02fbaf1e7b93f2067a00" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structenum_type_info__t" kindref="compound">enumTypeInfo_t</ref> *</type>
        <definition>const enumTypeInfo_t * idTypeInfoTools::FindEnumInfo</definition>
        <argsstring>(const char *typeName)</argsstring>
        <name>FindEnumInfo</name>
        <param>
          <type>const char *</type>
          <declname>typeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" line="54" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" bodystart="145" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1aa4af2bae2163fa546df581fc60ef6b98" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idTypeInfoTools::IsSubclassOf</definition>
        <argsstring>(const char *typeName, const char *superType)</argsstring>
        <name>IsSubclassOf</name>
        <param>
          <type>const char *</type>
          <declname>typeName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>superType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" line="55" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" bodystart="161" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1a5e4adf6a024813238b2296768d7a3a12" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idTypeInfoTools::PrintType</definition>
        <argsstring>(const void *typePtr, const char *typeName)</argsstring>
        <name>PrintType</name>
        <param>
          <type>const void *</type>
          <declname>typePtr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>typeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" line="56" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" bodystart="255" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1ab3793b4994a92cb3524829de6e51dd0f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idTypeInfoTools::WriteTypeToFile</definition>
        <argsstring>(idFile *fp, const void *typePtr, const char *typeName)</argsstring>
        <name>WriteTypeToFile</name>
        <param>
          <type><ref refid="classid_file" kindref="compound">idFile</ref> *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>typePtr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>typeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" line="57" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" bodystart="267" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1acfaf85283064742e50926b4b31c97b73" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idTypeInfoTools::InitTypeVariables</definition>
        <argsstring>(const void *typePtr, const char *typeName, int value)</argsstring>
        <name>InitTypeVariables</name>
        <param>
          <type>const void *</type>
          <declname>typePtr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>typeName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" line="58" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" bodystart="279" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1aa83a81378c8990961a1715cb3cc3dd0f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idTypeInfoTools::WriteGameState</definition>
        <argsstring>(const char *fileName)</argsstring>
        <name>WriteGameState</name>
        <param>
          <type>const char *</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" line="59" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" bodystart="1174" bodyend="1209"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1a99a102f8073c592894cacf1c7b6e2cff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idTypeInfoTools::CompareGameState</definition>
        <argsstring>(const char *fileName)</argsstring>
        <name>CompareGameState</name>
        <param>
          <type>const char *</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" line="60" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" bodystart="1216" bodyend="1300"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1a7d82825993578473e8d1d172c882b195" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * idTypeInfoTools::OutputString</definition>
        <argsstring>(const char *string)</argsstring>
        <name>OutputString</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" line="69" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" bodystart="187" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1a41b795c34a476eaa28db57099a867e2d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idTypeInfoTools::ParseTemplateArguments</definition>
        <argsstring>(idLexer &amp;src, idStr &amp;arguments)</argsstring>
        <name>ParseTemplateArguments</name>
        <param>
          <type><ref refid="classid_lexer" kindref="compound">idLexer</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>arguments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" line="70" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" bodystart="221" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1ab5d4f5087383d157f52d2854d9361d3f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idTypeInfoTools::PrintVariable</definition>
        <argsstring>(const char *varName, const char *varType, const char *scope, const char *prefix, const char *postfix, const char *value, const void *varPtr, int varSize)</argsstring>
        <name>PrintVariable</name>
        <param>
          <type>const char *</type>
          <declname>varName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>varType</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>scope</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>postfix</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>varPtr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>varSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" line="71" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" bodystart="420" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1a39e41fd836e98000ce3dae47b5056c46" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idTypeInfoTools::WriteVariable</definition>
        <argsstring>(const char *varName, const char *varType, const char *scope, const char *prefix, const char *postfix, const char *value, const void *varPtr, int varSize)</argsstring>
        <name>WriteVariable</name>
        <param>
          <type>const char *</type>
          <declname>varName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>varType</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>scope</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>postfix</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>varPtr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>varSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" line="72" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" bodystart="429" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1ad1c0c9fc3200ac483c42ac6231fea6e3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idTypeInfoTools::WriteGameStateVariable</definition>
        <argsstring>(const char *varName, const char *varType, const char *scope, const char *prefix, const char *postfix, const char *value, const void *varPtr, int varSize)</argsstring>
        <name>WriteGameStateVariable</name>
        <param>
          <type>const char *</type>
          <declname>varName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>varType</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>scope</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>postfix</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>varPtr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>varSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" line="73" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" bodystart="449" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1a2d2ee92e77c79a4353d72ad22b9191bf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idTypeInfoTools::InitVariable</definition>
        <argsstring>(const char *varName, const char *varType, const char *scope, const char *prefix, const char *postfix, const char *value, const void *varPtr, int varSize)</argsstring>
        <name>InitVariable</name>
        <param>
          <type>const char *</type>
          <declname>varName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>varType</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>scope</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>postfix</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>varPtr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>varSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" line="74" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" bodystart="478" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1a74114093934d3bb049560125dc48004a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idTypeInfoTools::VerifyVariable</definition>
        <argsstring>(const char *varName, const char *varType, const char *scope, const char *prefix, const char *postfix, const char *value, const void *varPtr, int varSize)</argsstring>
        <name>VerifyVariable</name>
        <param>
          <type>const char *</type>
          <declname>varName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>varType</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>scope</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>postfix</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>varPtr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>varSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" line="75" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" bodystart="493" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1a3412615fab3d2abf973930e00adb90a6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idTypeInfoTools::WriteVariable_r</definition>
        <argsstring>(const void *varPtr, const char *varName, const char *varType, const char *scope, const char *prefix, const int pointerDepth)</argsstring>
        <name>WriteVariable_r</name>
        <param>
          <type>const void *</type>
          <declname>varPtr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>varName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>varType</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>scope</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>pointerDepth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" line="76" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" bodystart="524" bodyend="1142"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1af0cd65d3abae17084e768850783b6790" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idTypeInfoTools::WriteClass_r</definition>
        <argsstring>(const void *classPtr, const char *className, const char *classType, const char *scope, const char *prefix, const int pointerDepth)</argsstring>
        <name>WriteClass_r</name>
        <param>
          <type>const void *</type>
          <declname>classPtr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>className</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>classType</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>scope</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>pointerDepth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" line="77" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" bodystart="1149" bodyend="1167"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1a74ea54fd332eadcb2071df3d9e7e69e0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structclass_type_info__t" kindref="compound">classTypeInfo_t</ref> *</type>
        <definition>static const classTypeInfo_t* idTypeInfoTools::FindClassInfo</definition>
        <argsstring>(const char *typeName)</argsstring>
        <name>FindClassInfo</name>
        <param>
          <type>const char *</type>
          <declname>typeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/gamesys/TypeInfo.cpp" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1a5485b854223a17830b3d07da8fcbcbae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structenum_type_info__t" kindref="compound">enumTypeInfo_t</ref> *</type>
        <definition>static const enumTypeInfo_t* idTypeInfoTools::FindEnumInfo</definition>
        <argsstring>(const char *typeName)</argsstring>
        <name>FindEnumInfo</name>
        <param>
          <type>const char *</type>
          <declname>typeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/gamesys/TypeInfo.cpp" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1af0530b83524b762e5aa6f54564a55378" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool idTypeInfoTools::IsSubclassOf</definition>
        <argsstring>(const char *typeName, const char *superType)</argsstring>
        <name>IsSubclassOf</name>
        <param>
          <type>const char *</type>
          <declname>typeName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>superType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/gamesys/TypeInfo.cpp" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1abeb4ab946c411a922cde658ec289622a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void idTypeInfoTools::PrintType</definition>
        <argsstring>(const void *typePtr, const char *typeName)</argsstring>
        <name>PrintType</name>
        <param>
          <type>const void *</type>
          <declname>typePtr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>typeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/gamesys/TypeInfo.cpp" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1a963a90fd3ba57fca2f85f9df46bdcf3a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void idTypeInfoTools::WriteTypeToFile</definition>
        <argsstring>(idFile *fp, const void *typePtr, const char *typeName)</argsstring>
        <name>WriteTypeToFile</name>
        <param>
          <type><ref refid="classid_file" kindref="compound">idFile</ref> *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>typePtr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>typeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/gamesys/TypeInfo.cpp" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1a3620b11c51728e4585c1f5d26b0797cc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void idTypeInfoTools::InitTypeVariables</definition>
        <argsstring>(const void *typePtr, const char *typeName, int value)</argsstring>
        <name>InitTypeVariables</name>
        <param>
          <type>const void *</type>
          <declname>typePtr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>typeName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/gamesys/TypeInfo.cpp" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1a16d71d48f2f399925850ae5af11ef7f5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void idTypeInfoTools::WriteGameState</definition>
        <argsstring>(const char *fileName)</argsstring>
        <name>WriteGameState</name>
        <param>
          <type>const char *</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/gamesys/TypeInfo.cpp" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1a49a88a7b40b6ee9d34fd39934dbb3fb1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void idTypeInfoTools::CompareGameState</definition>
        <argsstring>(const char *fileName)</argsstring>
        <name>CompareGameState</name>
        <param>
          <type>const char *</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/gamesys/TypeInfo.cpp" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1aab14063ff0b70dd817a989de49b45b97" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char* idTypeInfoTools::OutputString</definition>
        <argsstring>(const char *string)</argsstring>
        <name>OutputString</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/gamesys/TypeInfo.cpp" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1ac98a91bd21f611adae11707d71f66d77" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool idTypeInfoTools::ParseTemplateArguments</definition>
        <argsstring>(idLexer &amp;src, idStr &amp;arguments)</argsstring>
        <name>ParseTemplateArguments</name>
        <param>
          <type><ref refid="classid_lexer" kindref="compound">idLexer</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="classid_str" kindref="compound">idStr</ref> &amp;</type>
          <declname>arguments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/gamesys/TypeInfo.cpp" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1a6bbe00b025043c7f1203c6f1369c168a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void idTypeInfoTools::PrintVariable</definition>
        <argsstring>(const char *varName, const char *varType, const char *scope, const char *prefix, const char *postfix, const char *value, const void *varPtr, int varSize)</argsstring>
        <name>PrintVariable</name>
        <param>
          <type>const char *</type>
          <declname>varName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>varType</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>scope</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>postfix</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>varPtr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>varSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/gamesys/TypeInfo.cpp" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1ade49ab7465caee224bd35b910796a9c8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void idTypeInfoTools::WriteVariable</definition>
        <argsstring>(const char *varName, const char *varType, const char *scope, const char *prefix, const char *postfix, const char *value, const void *varPtr, int varSize)</argsstring>
        <name>WriteVariable</name>
        <param>
          <type>const char *</type>
          <declname>varName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>varType</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>scope</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>postfix</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>varPtr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>varSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/gamesys/TypeInfo.cpp" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1affa47303e0606fd67470c16a44e7b54d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void idTypeInfoTools::WriteGameStateVariable</definition>
        <argsstring>(const char *varName, const char *varType, const char *scope, const char *prefix, const char *postfix, const char *value, const void *varPtr, int varSize)</argsstring>
        <name>WriteGameStateVariable</name>
        <param>
          <type>const char *</type>
          <declname>varName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>varType</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>scope</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>postfix</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>varPtr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>varSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/gamesys/TypeInfo.cpp" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1afa12693c6071f7e6a82a235b92959aa8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void idTypeInfoTools::InitVariable</definition>
        <argsstring>(const char *varName, const char *varType, const char *scope, const char *prefix, const char *postfix, const char *value, const void *varPtr, int varSize)</argsstring>
        <name>InitVariable</name>
        <param>
          <type>const char *</type>
          <declname>varName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>varType</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>scope</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>postfix</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>varPtr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>varSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/gamesys/TypeInfo.cpp" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1a5c18251075fa3ba8d15686b3544fabfd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void idTypeInfoTools::VerifyVariable</definition>
        <argsstring>(const char *varName, const char *varType, const char *scope, const char *prefix, const char *postfix, const char *value, const void *varPtr, int varSize)</argsstring>
        <name>VerifyVariable</name>
        <param>
          <type>const char *</type>
          <declname>varName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>varType</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>scope</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>postfix</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>varPtr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>varSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/gamesys/TypeInfo.cpp" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1a7bebf600c0d85c53a1cfdea8f766b002" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int idTypeInfoTools::WriteVariable_r</definition>
        <argsstring>(const void *varPtr, const char *varName, const char *varType, const char *scope, const char *prefix, const int pointerDepth)</argsstring>
        <name>WriteVariable_r</name>
        <param>
          <type>const void *</type>
          <declname>varPtr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>varName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>varType</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>scope</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>pointerDepth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/gamesys/TypeInfo.cpp" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classid_type_info_tools_1a3d6087d3127d69db75c289dbedb19d56" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void idTypeInfoTools::WriteClass_r</definition>
        <argsstring>(const void *classPtr, const char *className, const char *classType, const char *scope, const char *prefix, const int pointerDepth)</argsstring>
        <name>WriteClass_r</name>
        <param>
          <type>const void *</type>
          <declname>classPtr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>className</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>classType</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>scope</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>pointerDepth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/gamesys/TypeInfo.cpp" line="77" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="29519">
        <label>idFile</label>
        <link refid="classid_file"/>
      </node>
      <node id="29518">
        <label>idLexer</label>
        <link refid="classid_lexer"/>
      </node>
      <node id="29517">
        <label>idTypeInfoTools</label>
        <link refid="classid_type_info_tools"/>
        <childnode refid="29518" relation="usage">
          <edgelabel>src</edgelabel>
        </childnode>
        <childnode refid="29519" relation="usage">
          <edgelabel>fp</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" line="51" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/d3xp/gamesys/TypeInfo.cpp" bodystart="51" bodyend="78"/>
    <listofallmembers>
      <member refid="classid_type_info_tools_1a99a102f8073c592894cacf1c7b6e2cff" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>CompareGameState</name></member>
      <member refid="classid_type_info_tools_1a49a88a7b40b6ee9d34fd39934dbb3fb1" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>CompareGameState</name></member>
      <member refid="classid_type_info_tools_1ae22982ce1418975c2f20eb3ee29a0f20" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>FindClassInfo</name></member>
      <member refid="classid_type_info_tools_1a74ea54fd332eadcb2071df3d9e7e69e0" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>FindClassInfo</name></member>
      <member refid="classid_type_info_tools_1af484cbbb2b4d02fbaf1e7b93f2067a00" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>FindEnumInfo</name></member>
      <member refid="classid_type_info_tools_1a5485b854223a17830b3d07da8fcbcbae" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>FindEnumInfo</name></member>
      <member refid="classid_type_info_tools_1a550ba0d36812661c5f917639f42cccfa" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>fp</name></member>
      <member refid="classid_type_info_tools_1acfaf85283064742e50926b4b31c97b73" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>InitTypeVariables</name></member>
      <member refid="classid_type_info_tools_1a3620b11c51728e4585c1f5d26b0797cc" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>InitTypeVariables</name></member>
      <member refid="classid_type_info_tools_1a7a748d8600b83adc6694596804a7a498" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>initValue</name></member>
      <member refid="classid_type_info_tools_1a2d2ee92e77c79a4353d72ad22b9191bf" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>InitVariable</name></member>
      <member refid="classid_type_info_tools_1afa12693c6071f7e6a82a235b92959aa8" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>InitVariable</name></member>
      <member refid="classid_type_info_tools_1aa4af2bae2163fa546df581fc60ef6b98" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>IsSubclassOf</name></member>
      <member refid="classid_type_info_tools_1af0530b83524b762e5aa6f54564a55378" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>IsSubclassOf</name></member>
      <member refid="classid_type_info_tools_1a7d82825993578473e8d1d172c882b195" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>OutputString</name></member>
      <member refid="classid_type_info_tools_1aab14063ff0b70dd817a989de49b45b97" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>OutputString</name></member>
      <member refid="classid_type_info_tools_1a41b795c34a476eaa28db57099a867e2d" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>ParseTemplateArguments</name></member>
      <member refid="classid_type_info_tools_1ac98a91bd21f611adae11707d71f66d77" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>ParseTemplateArguments</name></member>
      <member refid="classid_type_info_tools_1a5e4adf6a024813238b2296768d7a3a12" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>PrintType</name></member>
      <member refid="classid_type_info_tools_1abeb4ab946c411a922cde658ec289622a" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>PrintType</name></member>
      <member refid="classid_type_info_tools_1ab5d4f5087383d157f52d2854d9361d3f" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>PrintVariable</name></member>
      <member refid="classid_type_info_tools_1a6bbe00b025043c7f1203c6f1369c168a" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>PrintVariable</name></member>
      <member refid="classid_type_info_tools_1a523633b10909fcb24ebe6d20a04e1f38" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>src</name></member>
      <member refid="classid_type_info_tools_1aaa47cadd7aa1af89b27d83e448c4c827" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>typeError</name></member>
      <member refid="classid_type_info_tools_1a74114093934d3bb049560125dc48004a" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>VerifyVariable</name></member>
      <member refid="classid_type_info_tools_1a5c18251075fa3ba8d15686b3544fabfd" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>VerifyVariable</name></member>
      <member refid="classid_type_info_tools_1a270fde170caa7a9a1bd18aaaa3c83c47" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>Write</name></member>
      <member refid="classid_type_info_tools_1af0cd65d3abae17084e768850783b6790" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>WriteClass_r</name></member>
      <member refid="classid_type_info_tools_1a3d6087d3127d69db75c289dbedb19d56" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>WriteClass_r</name></member>
      <member refid="classid_type_info_tools_1aa83a81378c8990961a1715cb3cc3dd0f" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>WriteGameState</name></member>
      <member refid="classid_type_info_tools_1a16d71d48f2f399925850ae5af11ef7f5" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>WriteGameState</name></member>
      <member refid="classid_type_info_tools_1ad1c0c9fc3200ac483c42ac6231fea6e3" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>WriteGameStateVariable</name></member>
      <member refid="classid_type_info_tools_1affa47303e0606fd67470c16a44e7b54d" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>WriteGameStateVariable</name></member>
      <member refid="classid_type_info_tools_1ab3793b4994a92cb3524829de6e51dd0f" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>WriteTypeToFile</name></member>
      <member refid="classid_type_info_tools_1a963a90fd3ba57fca2f85f9df46bdcf3a" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>WriteTypeToFile</name></member>
      <member refid="classid_type_info_tools_1a39e41fd836e98000ce3dae47b5056c46" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>WriteVariable</name></member>
      <member refid="classid_type_info_tools_1ade49ab7465caee224bd35b910796a9c8" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>WriteVariable</name></member>
      <member refid="classid_type_info_tools_1a3412615fab3d2abf973930e00adb90a6" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>WriteVariable_r</name></member>
      <member refid="classid_type_info_tools_1a7bebf600c0d85c53a1cfdea8f766b002" prot="public" virt="non-virtual"><scope>idTypeInfoTools</scope><name>WriteVariable_r</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
