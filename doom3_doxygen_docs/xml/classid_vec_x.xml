<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_vec_x" kind="class" prot="public">
    <compoundname>idVecX</compoundname>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classid_vec_x_1a173f5022dd088bbaed2a3a9cf7be1550" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class idMatX</definition>
        <argsstring></argsstring>
        <name>idMatX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1436" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classid_vec_x_1af35b47695a6458e277ee6a2893855c38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
        <definition>idVecX operator*</definition>
        <argsstring>(const float a, const idVecX b)</argsstring>
        <name>operator*</name>
        <param>
          <type>const float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1458" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1660" bodyend="1662"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classid_vec_x_1ab4cdc0519f08c7af929cc151db9f7964" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idVecX::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1493" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1493" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_vec_x_1a829a86a8da8eb4d83fbab9edfb881837" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idVecX::alloced</definition>
        <argsstring></argsstring>
        <name>alloced</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1494" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_vec_x_1a22c8bdd52fee5fd57e26d031026a703b" prot="private" static="no" mutable="no">
        <type>float *</type>
        <definition>float* idVecX::p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1495" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1495" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classid_vec_x_1aa2fb88dc3d908c18304056c87d672e23" prot="private" static="yes" mutable="no">
        <type>float</type>
        <definition>float idVecX::temp</definition>
        <argsstring>[1024+4]</argsstring>
        <name>temp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1497" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1497" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_vec_x_1a863780b577dbf9677d47f5beaa15a445" prot="private" static="yes" mutable="no">
        <type>float *</type>
        <definition>float * idVecX::tempPtr</definition>
        <argsstring></argsstring>
        <name>tempPtr</name>
        <initializer>= (float *) ( ( (int) idVecX::temp + 15 ) &amp; ~15 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1498" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_vec_x_1a6a8ee6dab6b870c15789fa8bfaff2fdb" prot="private" static="yes" mutable="no">
        <type>int</type>
        <definition>int idVecX::tempIndex</definition>
        <argsstring></argsstring>
        <name>tempIndex</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1499" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1499" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_vec_x_1ad8e8a6f05e900bef7407bc244969d90b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idVecX::idVecX</definition>
        <argsstring>(void)</argsstring>
        <name>idVecX</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1439" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1506" bodyend="1509"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1ab1139611196099968d73ceac6d30410e" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idVecX::idVecX</definition>
        <argsstring>(int length)</argsstring>
        <name>idVecX</name>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1440" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1511" bodyend="1515"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1ab1098cc2d9a55ce0629243134e162afd" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idVecX::idVecX</definition>
        <argsstring>(int length, float *data)</argsstring>
        <name>idVecX</name>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1441" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1517" bodyend="1521"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1aede2fd97acb476fe86a17c245208cf1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idVecX::~idVecX</definition>
        <argsstring>(void)</argsstring>
        <name>~idVecX</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1442" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1523" bodyend="1528"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1a0aa1ac3ca6c7f1768fa407d560937979" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>ID_INLINE float idVecX::operator[]</definition>
        <argsstring>(const int index) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>const int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1444" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1530" bodyend="1533"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1abef85b6249c2368615a3937ab715534e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float &amp;</type>
        <definition>ID_INLINE float &amp; idVecX::operator[]</definition>
        <argsstring>(const int index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1445" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1535" bodyend="1538"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1a87b1e68a2d2dbc9da0baaae36c85b64e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
        <definition>ID_INLINE idVecX idVecX::operator-</definition>
        <argsstring>() const </argsstring>
        <name>operator-</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1446" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1540" bodyend="1549"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1aa6e41da715bb2368994d09b440410e4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
        <definition>ID_INLINE idVecX &amp; idVecX::operator=</definition>
        <argsstring>(const idVecX &amp;a)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1447" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1551" bodyend="1560"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1af53ded12008ca55a26a4c0bb9e2b7290" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
        <definition>ID_INLINE idVecX idVecX::operator*</definition>
        <argsstring>(const float a) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const float</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1448" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1622" bodyend="1635"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1aee1dd58b0b13e8a1811439e42fe0b1da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
        <definition>ID_INLINE idVecX idVecX::operator/</definition>
        <argsstring>(const float a) const </argsstring>
        <name>operator/</name>
        <param>
          <type>const float</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1449" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1649" bodyend="1652"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1a045037534c5d30556f203553fcdb248d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>ID_INLINE float idVecX::operator*</definition>
        <argsstring>(const idVecX &amp;a) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1450" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1664" bodyend="1673"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1af044650bff64a036c691d5dbdbab8ad7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
        <definition>ID_INLINE idVecX idVecX::operator-</definition>
        <argsstring>(const idVecX &amp;a) const </argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1451" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1578" bodyend="1592"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1acf46ef376f07244fba6cdc36c94effdd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
        <definition>ID_INLINE idVecX idVecX::operator+</definition>
        <argsstring>(const idVecX &amp;a) const </argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1452" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1562" bodyend="1576"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1a36c64c85f33880d9db43f04f52a7e37b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
        <definition>ID_INLINE idVecX &amp; idVecX::operator*=</definition>
        <argsstring>(const float a)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const float</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1453" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1637" bodyend="1647"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1a357fcf0cb054706def2a4534048e2da3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
        <definition>ID_INLINE idVecX &amp; idVecX::operator/=</definition>
        <argsstring>(const float a)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const float</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1454" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1654" bodyend="1658"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1af85be077ee93e22a10dca4efd6d475dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
        <definition>ID_INLINE idVecX &amp; idVecX::operator+=</definition>
        <argsstring>(const idVecX &amp;a)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1455" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1594" bodyend="1606"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1a85ed42c114d54eee9f26541e84ef8c6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
        <definition>ID_INLINE idVecX &amp; idVecX::operator-=</definition>
        <argsstring>(const idVecX &amp;a)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1456" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1608" bodyend="1620"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1a91f27c91fcc822ba92b004a06f423d1a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idVecX::Compare</definition>
        <argsstring>(const idVecX &amp;a) const </argsstring>
        <name>Compare</name>
        <param>
          <type>const <ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1460" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1675" bodyend="1685"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1aeb00c39f98eec9a24286f0a953cfda44" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idVecX::Compare</definition>
        <argsstring>(const idVecX &amp;a, const float epsilon) const </argsstring>
        <name>Compare</name>
        <param>
          <type>const <ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1461" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1687" bodyend="1697"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1a3d9254dc1fd404c82a19b69711af0037" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idVecX::operator==</definition>
        <argsstring>(const idVecX &amp;a) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1462" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1699" bodyend="1701"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1aa6f84d9b47e9ca7cee44b1a0bfd72ee1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idVecX::operator!=</definition>
        <argsstring>(const idVecX &amp;a) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1463" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1703" bodyend="1705"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1a42fea5a0e8426516451ac7613a94cab7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idVecX::SetSize</definition>
        <argsstring>(int size)</argsstring>
        <name>SetSize</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1465" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1707" bodyend="1718"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1a2a5ee3e055d1ad44e28c1f56ba074d64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idVecX::ChangeSize</definition>
        <argsstring>(int size, bool makeZero=false)</argsstring>
        <name>ChangeSize</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>makeZero</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1466" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1720" bodyend="1741"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1a97cc246e9258835634f639b1ffe2bb1f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int idVecX::GetSize</definition>
        <argsstring>(void) const </argsstring>
        <name>GetSize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1467" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1467" bodyend="1467"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1a28f113883e3549ed2f4680eda6b587c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idVecX::SetData</definition>
        <argsstring>(int length, float *data)</argsstring>
        <name>SetData</name>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1468" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1756" bodyend="1765"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1acb42e3a60894479794e14ae331b2d0d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idVecX::Zero</definition>
        <argsstring>(void)</argsstring>
        <name>Zero</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1469" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1767" bodyend="1773"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1ab64f1e6d361d7815bb395fe345ff84ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idVecX::Zero</definition>
        <argsstring>(int length)</argsstring>
        <name>Zero</name>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1470" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1775" bodyend="1782"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1accd4f4795b8a26048ff9110a8014185b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idVecX::Random</definition>
        <argsstring>(int seed, float l=0.0f, float u=1.0f)</argsstring>
        <name>Random</name>
        <param>
          <type>int</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>float</type>
          <declname>l</declname>
          <defval>0.0f</defval>
        </param>
        <param>
          <type>float</type>
          <declname>u</declname>
          <defval>1.0f</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1471" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1784" bodyend="1793"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1aec997c5d54f9043380a4277f9512a68f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idVecX::Random</definition>
        <argsstring>(int length, int seed, float l=0.0f, float u=1.0f)</argsstring>
        <name>Random</name>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>float</type>
          <declname>l</declname>
          <defval>0.0f</defval>
        </param>
        <param>
          <type>float</type>
          <declname>u</declname>
          <defval>1.0f</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1472" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1795" bodyend="1805"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1aa4cda44454045f213d8877d6f64fa89b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idVecX::Negate</definition>
        <argsstring>(void)</argsstring>
        <name>Negate</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1473" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1807" bodyend="1816"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1a360e30b172a0fe6b72c76a149f415413" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idVecX::Clamp</definition>
        <argsstring>(float min, float max)</argsstring>
        <name>Clamp</name>
        <param>
          <type>float</type>
          <declname>min</declname>
        </param>
        <param>
          <type>float</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1474" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1818" bodyend="1827"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1a5f3afbe669a667f9f191df83b043661c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref> &amp;</type>
        <definition>ID_INLINE idVecX &amp; idVecX::SwapElements</definition>
        <argsstring>(int e1, int e2)</argsstring>
        <name>SwapElements</name>
        <param>
          <type>int</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>e2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1475" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1829" bodyend="1835"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1a307258540aa1a5d54ef2aa69c77b7c6c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>ID_INLINE float idVecX::Length</definition>
        <argsstring>(void) const </argsstring>
        <name>Length</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1477" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1837" bodyend="1845"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1a82c090d469bbc3c60ff64562ecdf9687" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>ID_INLINE float idVecX::LengthSqr</definition>
        <argsstring>(void) const </argsstring>
        <name>LengthSqr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1478" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1847" bodyend="1855"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1a508ecc48614d7934cf621208355b0d8b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec_x" kindref="compound">idVecX</ref></type>
        <definition>ID_INLINE idVecX idVecX::Normalize</definition>
        <argsstring>(void) const </argsstring>
        <name>Normalize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1479" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1857" bodyend="1871"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1a04d1d418391ae3b1c23c5c64e8d0026c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>ID_INLINE float idVecX::NormalizeSelf</definition>
        <argsstring>(void)</argsstring>
        <name>NormalizeSelf</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1480" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1873" bodyend="1884"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1ada43abb88599e163834c4d2feabc3576" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idVecX::GetDimension</definition>
        <argsstring>(void) const </argsstring>
        <name>GetDimension</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1482" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1886" bodyend="1888"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1ab3182d5b720192b16abafe7c734333e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>ID_INLINE const idVec3 &amp; idVecX::SubVec3</definition>
        <argsstring>(int index) const </argsstring>
        <name>SubVec3</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1484" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1895" bodyend="1898"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1a03cd35bb39514fe701b8f9b29eb7fb22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
        <definition>ID_INLINE idVec3 &amp; idVecX::SubVec3</definition>
        <argsstring>(int index)</argsstring>
        <name>SubVec3</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1485" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1890" bodyend="1893"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1a0c1ac3d4c258ee6ee9fe18ed49c862cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_vec6" kindref="compound">idVec6</ref> &amp;</type>
        <definition>ID_INLINE const idVec6 &amp; idVecX::SubVec6</definition>
        <argsstring>(int index) const </argsstring>
        <name>SubVec6</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1486" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1905" bodyend="1908"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1a3eba2283d061b316ba9df11bc422946f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec6" kindref="compound">idVec6</ref> &amp;</type>
        <definition>ID_INLINE idVec6 &amp; idVecX::SubVec6</definition>
        <argsstring>(int index)</argsstring>
        <name>SubVec6</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1487" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1900" bodyend="1903"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1a49be920245e28221b7fb9c30aa0d2ecb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float *</type>
        <definition>ID_INLINE const float * idVecX::ToFloatPtr</definition>
        <argsstring>(void) const </argsstring>
        <name>ToFloatPtr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1488" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1910" bodyend="1912"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1a21fda28dc361e78c2212f3be528dbf93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float *</type>
        <definition>ID_INLINE float * idVecX::ToFloatPtr</definition>
        <argsstring>(void)</argsstring>
        <name>ToFloatPtr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1489" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1914" bodyend="1916"/>
      </memberdef>
      <memberdef kind="function" id="classid_vec_x_1a9b4646f9e0464c283cf3a0af5cd02423" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * idVecX::ToString</definition>
        <argsstring>(int precision=2) const </argsstring>
        <name>ToString</name>
        <param>
          <type>int</type>
          <declname>precision</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1490" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.cpp" bodystart="395" bodyend="397"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classid_vec_x_1a954113ee3ed1171dd55cf94df24f0f0f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idVecX::SetTempSize</definition>
        <argsstring>(int size)</argsstring>
        <name>SetTempSize</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1502" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1743" bodyend="1754"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" line="1435" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/math/Vector.h" bodystart="1435" bodyend="1503"/>
    <listofallmembers>
      <member refid="classid_vec_x_1a829a86a8da8eb4d83fbab9edfb881837" prot="private" virt="non-virtual"><scope>idVecX</scope><name>alloced</name></member>
      <member refid="classid_vec_x_1a2a5ee3e055d1ad44e28c1f56ba074d64" prot="public" virt="non-virtual"><scope>idVecX</scope><name>ChangeSize</name></member>
      <member refid="classid_vec_x_1a360e30b172a0fe6b72c76a149f415413" prot="public" virt="non-virtual"><scope>idVecX</scope><name>Clamp</name></member>
      <member refid="classid_vec_x_1a91f27c91fcc822ba92b004a06f423d1a" prot="public" virt="non-virtual"><scope>idVecX</scope><name>Compare</name></member>
      <member refid="classid_vec_x_1aeb00c39f98eec9a24286f0a953cfda44" prot="public" virt="non-virtual"><scope>idVecX</scope><name>Compare</name></member>
      <member refid="classid_vec_x_1ada43abb88599e163834c4d2feabc3576" prot="public" virt="non-virtual"><scope>idVecX</scope><name>GetDimension</name></member>
      <member refid="classid_vec_x_1a97cc246e9258835634f639b1ffe2bb1f" prot="public" virt="non-virtual"><scope>idVecX</scope><name>GetSize</name></member>
      <member refid="classid_vec_x_1a173f5022dd088bbaed2a3a9cf7be1550" prot="private" virt="non-virtual"><scope>idVecX</scope><name>idMatX</name></member>
      <member refid="classid_vec_x_1ad8e8a6f05e900bef7407bc244969d90b" prot="public" virt="non-virtual"><scope>idVecX</scope><name>idVecX</name></member>
      <member refid="classid_vec_x_1ab1139611196099968d73ceac6d30410e" prot="public" virt="non-virtual"><scope>idVecX</scope><name>idVecX</name></member>
      <member refid="classid_vec_x_1ab1098cc2d9a55ce0629243134e162afd" prot="public" virt="non-virtual"><scope>idVecX</scope><name>idVecX</name></member>
      <member refid="classid_vec_x_1a307258540aa1a5d54ef2aa69c77b7c6c" prot="public" virt="non-virtual"><scope>idVecX</scope><name>Length</name></member>
      <member refid="classid_vec_x_1a82c090d469bbc3c60ff64562ecdf9687" prot="public" virt="non-virtual"><scope>idVecX</scope><name>LengthSqr</name></member>
      <member refid="classid_vec_x_1aa4cda44454045f213d8877d6f64fa89b" prot="public" virt="non-virtual"><scope>idVecX</scope><name>Negate</name></member>
      <member refid="classid_vec_x_1a508ecc48614d7934cf621208355b0d8b" prot="public" virt="non-virtual"><scope>idVecX</scope><name>Normalize</name></member>
      <member refid="classid_vec_x_1a04d1d418391ae3b1c23c5c64e8d0026c" prot="public" virt="non-virtual"><scope>idVecX</scope><name>NormalizeSelf</name></member>
      <member refid="classid_vec_x_1aa6f84d9b47e9ca7cee44b1a0bfd72ee1" prot="public" virt="non-virtual"><scope>idVecX</scope><name>operator!=</name></member>
      <member refid="classid_vec_x_1af53ded12008ca55a26a4c0bb9e2b7290" prot="public" virt="non-virtual"><scope>idVecX</scope><name>operator*</name></member>
      <member refid="classid_vec_x_1a045037534c5d30556f203553fcdb248d" prot="public" virt="non-virtual"><scope>idVecX</scope><name>operator*</name></member>
      <member refid="classid_vec_x_1af35b47695a6458e277ee6a2893855c38" prot="public" virt="non-virtual"><scope>idVecX</scope><name>operator*</name></member>
      <member refid="classid_vec_x_1a36c64c85f33880d9db43f04f52a7e37b" prot="public" virt="non-virtual"><scope>idVecX</scope><name>operator*=</name></member>
      <member refid="classid_vec_x_1acf46ef376f07244fba6cdc36c94effdd" prot="public" virt="non-virtual"><scope>idVecX</scope><name>operator+</name></member>
      <member refid="classid_vec_x_1af85be077ee93e22a10dca4efd6d475dd" prot="public" virt="non-virtual"><scope>idVecX</scope><name>operator+=</name></member>
      <member refid="classid_vec_x_1a87b1e68a2d2dbc9da0baaae36c85b64e" prot="public" virt="non-virtual"><scope>idVecX</scope><name>operator-</name></member>
      <member refid="classid_vec_x_1af044650bff64a036c691d5dbdbab8ad7" prot="public" virt="non-virtual"><scope>idVecX</scope><name>operator-</name></member>
      <member refid="classid_vec_x_1a85ed42c114d54eee9f26541e84ef8c6c" prot="public" virt="non-virtual"><scope>idVecX</scope><name>operator-=</name></member>
      <member refid="classid_vec_x_1aee1dd58b0b13e8a1811439e42fe0b1da" prot="public" virt="non-virtual"><scope>idVecX</scope><name>operator/</name></member>
      <member refid="classid_vec_x_1a357fcf0cb054706def2a4534048e2da3" prot="public" virt="non-virtual"><scope>idVecX</scope><name>operator/=</name></member>
      <member refid="classid_vec_x_1aa6e41da715bb2368994d09b440410e4c" prot="public" virt="non-virtual"><scope>idVecX</scope><name>operator=</name></member>
      <member refid="classid_vec_x_1a3d9254dc1fd404c82a19b69711af0037" prot="public" virt="non-virtual"><scope>idVecX</scope><name>operator==</name></member>
      <member refid="classid_vec_x_1a0aa1ac3ca6c7f1768fa407d560937979" prot="public" virt="non-virtual"><scope>idVecX</scope><name>operator[]</name></member>
      <member refid="classid_vec_x_1abef85b6249c2368615a3937ab715534e" prot="public" virt="non-virtual"><scope>idVecX</scope><name>operator[]</name></member>
      <member refid="classid_vec_x_1a22c8bdd52fee5fd57e26d031026a703b" prot="private" virt="non-virtual"><scope>idVecX</scope><name>p</name></member>
      <member refid="classid_vec_x_1accd4f4795b8a26048ff9110a8014185b" prot="public" virt="non-virtual"><scope>idVecX</scope><name>Random</name></member>
      <member refid="classid_vec_x_1aec997c5d54f9043380a4277f9512a68f" prot="public" virt="non-virtual"><scope>idVecX</scope><name>Random</name></member>
      <member refid="classid_vec_x_1a28f113883e3549ed2f4680eda6b587c5" prot="public" virt="non-virtual"><scope>idVecX</scope><name>SetData</name></member>
      <member refid="classid_vec_x_1a42fea5a0e8426516451ac7613a94cab7" prot="public" virt="non-virtual"><scope>idVecX</scope><name>SetSize</name></member>
      <member refid="classid_vec_x_1a954113ee3ed1171dd55cf94df24f0f0f" prot="private" virt="non-virtual"><scope>idVecX</scope><name>SetTempSize</name></member>
      <member refid="classid_vec_x_1ab4cdc0519f08c7af929cc151db9f7964" prot="private" virt="non-virtual"><scope>idVecX</scope><name>size</name></member>
      <member refid="classid_vec_x_1ab3182d5b720192b16abafe7c734333e3" prot="public" virt="non-virtual"><scope>idVecX</scope><name>SubVec3</name></member>
      <member refid="classid_vec_x_1a03cd35bb39514fe701b8f9b29eb7fb22" prot="public" virt="non-virtual"><scope>idVecX</scope><name>SubVec3</name></member>
      <member refid="classid_vec_x_1a0c1ac3d4c258ee6ee9fe18ed49c862cb" prot="public" virt="non-virtual"><scope>idVecX</scope><name>SubVec6</name></member>
      <member refid="classid_vec_x_1a3eba2283d061b316ba9df11bc422946f" prot="public" virt="non-virtual"><scope>idVecX</scope><name>SubVec6</name></member>
      <member refid="classid_vec_x_1a5f3afbe669a667f9f191df83b043661c" prot="public" virt="non-virtual"><scope>idVecX</scope><name>SwapElements</name></member>
      <member refid="classid_vec_x_1aa2fb88dc3d908c18304056c87d672e23" prot="private" virt="non-virtual"><scope>idVecX</scope><name>temp</name></member>
      <member refid="classid_vec_x_1a6a8ee6dab6b870c15789fa8bfaff2fdb" prot="private" virt="non-virtual"><scope>idVecX</scope><name>tempIndex</name></member>
      <member refid="classid_vec_x_1a863780b577dbf9677d47f5beaa15a445" prot="private" virt="non-virtual"><scope>idVecX</scope><name>tempPtr</name></member>
      <member refid="classid_vec_x_1a49be920245e28221b7fb9c30aa0d2ecb" prot="public" virt="non-virtual"><scope>idVecX</scope><name>ToFloatPtr</name></member>
      <member refid="classid_vec_x_1a21fda28dc361e78c2212f3be528dbf93" prot="public" virt="non-virtual"><scope>idVecX</scope><name>ToFloatPtr</name></member>
      <member refid="classid_vec_x_1a9b4646f9e0464c283cf3a0af5cd02423" prot="public" virt="non-virtual"><scope>idVecX</scope><name>ToString</name></member>
      <member refid="classid_vec_x_1acb42e3a60894479794e14ae331b2d0d6" prot="public" virt="non-virtual"><scope>idVecX</scope><name>Zero</name></member>
      <member refid="classid_vec_x_1ab64f1e6d361d7815bb395fe345ff84ae" prot="public" virt="non-virtual"><scope>idVecX</scope><name>Zero</name></member>
      <member refid="classid_vec_x_1aede2fd97acb476fe86a17c245208cf1d" prot="public" virt="non-virtual"><scope>idVecX</scope><name>~idVecX</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
