<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classid_winding2_d" kind="class" prot="public">
    <compoundname>idWinding2D</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classid_winding2_d_1aacb3efa83720eed566585a030bf35b2d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int idWinding2D::numPoints</definition>
        <argsstring></argsstring>
        <name>numPoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="89" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classid_winding2_d_1a99da7094b476fbe0cbf6269228f46da6" prot="private" static="no" mutable="no">
        <type><ref refid="classid_vec2" kindref="compound">idVec2</ref></type>
        <definition>idVec2 idWinding2D::p[16]</definition>
        <argsstring>[16]</argsstring>
        <name>p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="90" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classid_winding2_d_1aa57c0ec35bed6fb0374057c95c524366" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ID_INLINE idWinding2D::idWinding2D</definition>
        <argsstring>(void)</argsstring>
        <name>idWinding2D</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="45" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classid_winding2_d_1a968a4ce628d59683b559076829e1967f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_winding2_d" kindref="compound">idWinding2D</ref> &amp;</type>
        <definition>ID_INLINE idWinding2D &amp; idWinding2D::operator=</definition>
        <argsstring>(const idWinding2D &amp;winding)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classid_winding2_d" kindref="compound">idWinding2D</ref> &amp;</type>
          <declname>winding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="47" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" bodystart="97" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classid_winding2_d_1a8509eb62f147f7a76e452fb8fa5d702a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_vec2" kindref="compound">idVec2</ref> &amp;</type>
        <definition>ID_INLINE const idVec2 &amp; idWinding2D::operator[]</definition>
        <argsstring>(const int index) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>const int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="48" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" bodystart="107" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classid_winding2_d_1a8e9af3e6eb65aaef4bab4788c25f6307" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec2" kindref="compound">idVec2</ref> &amp;</type>
        <definition>ID_INLINE idVec2 &amp; idWinding2D::operator[]</definition>
        <argsstring>(const int index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="49" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classid_winding2_d_1a0170841eb6e05f981c31e674687880a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idWinding2D::Clear</definition>
        <argsstring>(void)</argsstring>
        <name>Clear</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="51" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" bodystart="115" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classid_winding2_d_1a2441c50bf26b725d1d15f8d590ed54be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ID_INLINE void idWinding2D::AddPoint</definition>
        <argsstring>(const idVec2 &amp;point)</argsstring>
        <name>AddPoint</name>
        <param>
          <type>const <ref refid="classid_vec2" kindref="compound">idVec2</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="52" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" bodystart="119" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classid_winding2_d_1a2f0fe83cec1efcee4c41bacb2af646c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>ID_INLINE int idWinding2D::GetNumPoints</definition>
        <argsstring>(void) const </argsstring>
        <name>GetNumPoints</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="53" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" bodystart="123" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classid_winding2_d_1abfcb2910624fc981089bf61739b6633b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idWinding2D::Expand</definition>
        <argsstring>(const float d)</argsstring>
        <name>Expand</name>
        <param>
          <type>const float</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="55" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.cpp" bodystart="119" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classid_winding2_d_1abecfb801f02286c14a9899aaab8923c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idWinding2D::ExpandForAxialBox</definition>
        <argsstring>(const idVec2 bounds[2])</argsstring>
        <name>ExpandForAxialBox</name>
        <param>
          <type>const <ref refid="classid_vec2" kindref="compound">idVec2</ref></type>
          <declname>bounds</declname>
          <array>[2]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="56" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.cpp" bodystart="75" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classid_winding2_d_1a5d1fb45d769e0f23e7a32dd18874b3aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idWinding2D::Split</definition>
        <argsstring>(const idVec3 &amp;plane, const float epsilon, idWinding2D **front, idWinding2D **back) const </argsstring>
        <name>Split</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>plane</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
        </param>
        <param>
          <type><ref refid="classid_winding2_d" kindref="compound">idWinding2D</ref> **</type>
          <declname>front</declname>
        </param>
        <param>
          <type><ref refid="classid_winding2_d" kindref="compound">idWinding2D</ref> **</type>
          <declname>back</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="60" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.cpp" bodystart="142" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classid_winding2_d_1a0271e5480024c11614e4613d1577b8c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idWinding2D::ClipInPlace</definition>
        <argsstring>(const idVec3 &amp;plane, const float epsilon=ON_EPSILON, const bool keepOn=false)</argsstring>
        <name>ClipInPlace</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>plane</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
          <defval>ON_EPSILON</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>keepOn</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="63" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.cpp" bodystart="259" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="classid_winding2_d_1a38c9fa439f45431224b401a58a5776dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_winding2_d" kindref="compound">idWinding2D</ref> *</type>
        <definition>idWinding2D * idWinding2D::Copy</definition>
        <argsstring>(void) const </argsstring>
        <name>Copy</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="65" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.cpp" bodystart="356" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="classid_winding2_d_1aa162a6fafe51eea74315a95f96d1ff8f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_winding2_d" kindref="compound">idWinding2D</ref> *</type>
        <definition>idWinding2D * idWinding2D::Reverse</definition>
        <argsstring>(void) const </argsstring>
        <name>Reverse</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="66" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.cpp" bodystart="370" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="classid_winding2_d_1a5209f26ad39c6785dd3623d8fa949972" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float idWinding2D::GetArea</definition>
        <argsstring>(void) const </argsstring>
        <name>GetArea</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="68" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.cpp" bodystart="387" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="classid_winding2_d_1a7fa51b159e2239ec52bf2842c5c99057" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec2" kindref="compound">idVec2</ref></type>
        <definition>idVec2 idWinding2D::GetCenter</definition>
        <argsstring>(void) const </argsstring>
        <name>GetCenter</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="69" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.cpp" bodystart="406" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="classid_winding2_d_1a6ff4bcd9b9b836914c05ca76e9d7dd3d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float idWinding2D::GetRadius</definition>
        <argsstring>(const idVec2 &amp;center) const </argsstring>
        <name>GetRadius</name>
        <param>
          <type>const <ref refid="classid_vec2" kindref="compound">idVec2</ref> &amp;</type>
          <declname>center</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="70" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.cpp" bodystart="423" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="classid_winding2_d_1a3b486b7d762eb0d63165633332417461" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idWinding2D::GetBounds</definition>
        <argsstring>(idVec2 bounds[2]) const </argsstring>
        <name>GetBounds</name>
        <param>
          <type><ref refid="classid_vec2" kindref="compound">idVec2</ref></type>
          <declname>bounds</declname>
          <array>[2]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="71" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.cpp" bodystart="444" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="classid_winding2_d_1a201ec0b34fa729b8fbb797c4e0323d3d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idWinding2D::IsTiny</definition>
        <argsstring>(void) const </argsstring>
        <name>IsTiny</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="73" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.cpp" bodystart="474" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="classid_winding2_d_1a37eded5c3c1e67e8170160f9e7226b6c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idWinding2D::IsHuge</definition>
        <argsstring>(void) const </argsstring>
        <name>IsHuge</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="74" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.cpp" bodystart="498" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="classid_winding2_d_1a39e4ede8ee0f89289fef390f77db3136" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idWinding2D::Print</definition>
        <argsstring>(void) const </argsstring>
        <name>Print</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="75" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.cpp" bodystart="516" bodyend="522"/>
      </memberdef>
      <memberdef kind="function" id="classid_winding2_d_1a07c6c39bf19269e4c5246999b680b4bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float idWinding2D::PlaneDistance</definition>
        <argsstring>(const idVec3 &amp;plane) const </argsstring>
        <name>PlaneDistance</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>plane</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="77" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.cpp" bodystart="529" bodyend="557"/>
      </memberdef>
      <memberdef kind="function" id="classid_winding2_d_1a24dd1b4ea6358b9b87b822004686dae3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idWinding2D::PlaneSide</definition>
        <argsstring>(const idVec3 &amp;plane, const float epsilon=ON_EPSILON) const </argsstring>
        <name>PlaneSide</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>plane</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
          <defval>ON_EPSILON</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="78" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.cpp" bodystart="564" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="classid_winding2_d_1a693d8e15523d0244bf8f13eb471d0d14" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idWinding2D::PointInside</definition>
        <argsstring>(const idVec2 &amp;point, const float epsilon) const </argsstring>
        <name>PointInside</name>
        <param>
          <type>const <ref refid="classid_vec2" kindref="compound">idVec2</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="80" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.cpp" bodystart="603" bodyend="616"/>
      </memberdef>
      <memberdef kind="function" id="classid_winding2_d_1a72c945e108a184eb1ea591a3ad45a9fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idWinding2D::LineIntersection</definition>
        <argsstring>(const idVec2 &amp;start, const idVec2 &amp;end) const </argsstring>
        <name>LineIntersection</name>
        <param>
          <type>const <ref refid="classid_vec2" kindref="compound">idVec2</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec2" kindref="compound">idVec2</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="81" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.cpp" bodystart="623" bodyend="678"/>
      </memberdef>
      <memberdef kind="function" id="classid_winding2_d_1a8c54e78bc3c2e67fa1438a5a299203f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool idWinding2D::RayIntersection</definition>
        <argsstring>(const idVec2 &amp;start, const idVec2 &amp;dir, float &amp;scale1, float &amp;scale2, int *edgeNums=NULL) const </argsstring>
        <name>RayIntersection</name>
        <param>
          <type>const <ref refid="classid_vec2" kindref="compound">idVec2</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec2" kindref="compound">idVec2</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>scale1</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>scale2</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>edgeNums</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="82" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.cpp" bodystart="685" bodyend="754"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classid_winding2_d_1a3df3627c760ac534be785af116d68303" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>ID_INLINE idVec3 idWinding2D::Plane2DFromPoints</definition>
        <argsstring>(const idVec2 &amp;start, const idVec2 &amp;end, const bool normalize=false)</argsstring>
        <name>Plane2DFromPoints</name>
        <param>
          <type>const <ref refid="classid_vec2" kindref="compound">idVec2</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec2" kindref="compound">idVec2</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>normalize</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="84" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" bodystart="127" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classid_winding2_d_1a7ccd6d01367cfeb8a88b296a18367526" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
        <definition>ID_INLINE idVec3 idWinding2D::Plane2DFromVecs</definition>
        <argsstring>(const idVec2 &amp;start, const idVec2 &amp;dir, const bool normalize=false)</argsstring>
        <name>Plane2DFromVecs</name>
        <param>
          <type>const <ref refid="classid_vec2" kindref="compound">idVec2</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec2" kindref="compound">idVec2</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>normalize</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="85" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" bodystart="138" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classid_winding2_d_1a29722b8e5aeaf2df434bb3e28971234f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>ID_INLINE bool idWinding2D::Plane2DIntersection</definition>
        <argsstring>(const idVec3 &amp;plane1, const idVec3 &amp;plane2, idVec2 &amp;point)</argsstring>
        <name>Plane2DIntersection</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>plane1</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>plane2</declname>
        </param>
        <param>
          <type><ref refid="classid_vec2" kindref="compound">idVec2</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="86" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" bodystart="149" bodyend="167"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" line="43" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/idlib/geometry/Winding2D.h" bodystart="43" bodyend="91"/>
    <listofallmembers>
      <member refid="classid_winding2_d_1a2441c50bf26b725d1d15f8d590ed54be" prot="public" virt="non-virtual"><scope>idWinding2D</scope><name>AddPoint</name></member>
      <member refid="classid_winding2_d_1a0170841eb6e05f981c31e674687880a1" prot="public" virt="non-virtual"><scope>idWinding2D</scope><name>Clear</name></member>
      <member refid="classid_winding2_d_1a0271e5480024c11614e4613d1577b8c4" prot="public" virt="non-virtual"><scope>idWinding2D</scope><name>ClipInPlace</name></member>
      <member refid="classid_winding2_d_1a38c9fa439f45431224b401a58a5776dd" prot="public" virt="non-virtual"><scope>idWinding2D</scope><name>Copy</name></member>
      <member refid="classid_winding2_d_1abfcb2910624fc981089bf61739b6633b" prot="public" virt="non-virtual"><scope>idWinding2D</scope><name>Expand</name></member>
      <member refid="classid_winding2_d_1abecfb801f02286c14a9899aaab8923c0" prot="public" virt="non-virtual"><scope>idWinding2D</scope><name>ExpandForAxialBox</name></member>
      <member refid="classid_winding2_d_1a5209f26ad39c6785dd3623d8fa949972" prot="public" virt="non-virtual"><scope>idWinding2D</scope><name>GetArea</name></member>
      <member refid="classid_winding2_d_1a3b486b7d762eb0d63165633332417461" prot="public" virt="non-virtual"><scope>idWinding2D</scope><name>GetBounds</name></member>
      <member refid="classid_winding2_d_1a7fa51b159e2239ec52bf2842c5c99057" prot="public" virt="non-virtual"><scope>idWinding2D</scope><name>GetCenter</name></member>
      <member refid="classid_winding2_d_1a2f0fe83cec1efcee4c41bacb2af646c3" prot="public" virt="non-virtual"><scope>idWinding2D</scope><name>GetNumPoints</name></member>
      <member refid="classid_winding2_d_1a6ff4bcd9b9b836914c05ca76e9d7dd3d" prot="public" virt="non-virtual"><scope>idWinding2D</scope><name>GetRadius</name></member>
      <member refid="classid_winding2_d_1aa57c0ec35bed6fb0374057c95c524366" prot="public" virt="non-virtual"><scope>idWinding2D</scope><name>idWinding2D</name></member>
      <member refid="classid_winding2_d_1a37eded5c3c1e67e8170160f9e7226b6c" prot="public" virt="non-virtual"><scope>idWinding2D</scope><name>IsHuge</name></member>
      <member refid="classid_winding2_d_1a201ec0b34fa729b8fbb797c4e0323d3d" prot="public" virt="non-virtual"><scope>idWinding2D</scope><name>IsTiny</name></member>
      <member refid="classid_winding2_d_1a72c945e108a184eb1ea591a3ad45a9fa" prot="public" virt="non-virtual"><scope>idWinding2D</scope><name>LineIntersection</name></member>
      <member refid="classid_winding2_d_1aacb3efa83720eed566585a030bf35b2d" prot="private" virt="non-virtual"><scope>idWinding2D</scope><name>numPoints</name></member>
      <member refid="classid_winding2_d_1a968a4ce628d59683b559076829e1967f" prot="public" virt="non-virtual"><scope>idWinding2D</scope><name>operator=</name></member>
      <member refid="classid_winding2_d_1a8509eb62f147f7a76e452fb8fa5d702a" prot="public" virt="non-virtual"><scope>idWinding2D</scope><name>operator[]</name></member>
      <member refid="classid_winding2_d_1a8e9af3e6eb65aaef4bab4788c25f6307" prot="public" virt="non-virtual"><scope>idWinding2D</scope><name>operator[]</name></member>
      <member refid="classid_winding2_d_1a99da7094b476fbe0cbf6269228f46da6" prot="private" virt="non-virtual"><scope>idWinding2D</scope><name>p</name></member>
      <member refid="classid_winding2_d_1a3df3627c760ac534be785af116d68303" prot="public" virt="non-virtual"><scope>idWinding2D</scope><name>Plane2DFromPoints</name></member>
      <member refid="classid_winding2_d_1a7ccd6d01367cfeb8a88b296a18367526" prot="public" virt="non-virtual"><scope>idWinding2D</scope><name>Plane2DFromVecs</name></member>
      <member refid="classid_winding2_d_1a29722b8e5aeaf2df434bb3e28971234f" prot="public" virt="non-virtual"><scope>idWinding2D</scope><name>Plane2DIntersection</name></member>
      <member refid="classid_winding2_d_1a07c6c39bf19269e4c5246999b680b4bd" prot="public" virt="non-virtual"><scope>idWinding2D</scope><name>PlaneDistance</name></member>
      <member refid="classid_winding2_d_1a24dd1b4ea6358b9b87b822004686dae3" prot="public" virt="non-virtual"><scope>idWinding2D</scope><name>PlaneSide</name></member>
      <member refid="classid_winding2_d_1a693d8e15523d0244bf8f13eb471d0d14" prot="public" virt="non-virtual"><scope>idWinding2D</scope><name>PointInside</name></member>
      <member refid="classid_winding2_d_1a39e4ede8ee0f89289fef390f77db3136" prot="public" virt="non-virtual"><scope>idWinding2D</scope><name>Print</name></member>
      <member refid="classid_winding2_d_1a8c54e78bc3c2e67fa1438a5a299203f9" prot="public" virt="non-virtual"><scope>idWinding2D</scope><name>RayIntersection</name></member>
      <member refid="classid_winding2_d_1aa162a6fafe51eea74315a95f96d1ff8f" prot="public" virt="non-virtual"><scope>idWinding2D</scope><name>Reverse</name></member>
      <member refid="classid_winding2_d_1a5d1fb45d769e0f23e7a32dd18874b3aa" prot="public" virt="non-virtual"><scope>idWinding2D</scope><name>Split</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
