<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="d3xp_2_item_8cpp" kind="file">
    <compoundname>Item.cpp</compoundname>
    <includes refid="precompiled_8h" local="yes">../idlib/precompiled.h</includes>
    <includes refid="d3xp_2_game__local_8h" local="yes">Game_local.h</includes>
      <sectiondef kind="var">
      <memberdef kind="variable" id="d3xp_2_item_8cpp_1a1217543f7b7c785a6781275301382c66" prot="public" static="no" mutable="no">
        <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref></type>
        <definition>const idEventDef EV_DropToFloor(&quot;&lt;dropToFloor&gt;&quot;)</definition>
        <argsstring>(&quot;&lt;dropToFloor&gt;&quot;)</argsstring>
        <name>EV_DropToFloor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/Item.cpp" line="43" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="d3xp_2_item_8cpp_1ab23d19ba288207353bd23d4c7fdb4cd4" prot="public" static="no" mutable="no">
        <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref></type>
        <definition>const idEventDef EV_RespawnItem(&quot;respawn&quot;)</definition>
        <argsstring>(&quot;respawn&quot;)</argsstring>
        <name>EV_RespawnItem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/Item.cpp" line="44" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="d3xp_2_item_8cpp_1a7a98a8cdc2b52ddcba7c72f059530757" prot="public" static="no" mutable="no">
        <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref></type>
        <definition>const idEventDef EV_RespawnFx(&quot;&lt;respawnFx&gt;&quot;)</definition>
        <argsstring>(&quot;&lt;respawnFx&gt;&quot;)</argsstring>
        <name>EV_RespawnFx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/Item.cpp" line="45" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="d3xp_2_item_8cpp_1ad50f8fc49740d1a1fabd4eb9932815aa" prot="public" static="no" mutable="no">
        <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref></type>
        <definition>const idEventDef EV_GetPlayerPos(&quot;&lt;getplayerpos&gt;&quot;)</definition>
        <argsstring>(&quot;&lt;getplayerpos&gt;&quot;)</argsstring>
        <name>EV_GetPlayerPos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/Item.cpp" line="46" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="d3xp_2_item_8cpp_1ad983ed4aaf742b505a862dc285e1ecb3" prot="public" static="no" mutable="no">
        <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref></type>
        <definition>const idEventDef EV_HideObjective(&quot;&lt;hideobjective&gt;&quot;,&quot;e&quot;)</definition>
        <argsstring>(&quot;&lt;hideobjective&gt;&quot;,&quot;e&quot;)</argsstring>
        <name>EV_HideObjective</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/Item.cpp" line="47" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="d3xp_2_item_8cpp_1afbc85926f220c3bf1ed4a108976d9549" prot="public" static="no" mutable="no">
        <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref></type>
        <definition>const idEventDef EV_CamShot(&quot;&lt;camshot&gt;&quot;)</definition>
        <argsstring>(&quot;&lt;camshot&gt;&quot;)</argsstring>
        <name>EV_CamShot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/d3xp/Item.cpp" line="48" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../idlib/precompiled.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>hdrstop</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Game_local.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="36"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="37"><highlight class="comment"></highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/>idItem</highlight></codeline>
<codeline lineno="39"><highlight class="comment"></highlight></codeline>
<codeline lineno="40"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="41"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_DropToFloor(<sp/></highlight><highlight class="stringliteral">&quot;&lt;dropToFloor&gt;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_RespawnItem(<sp/></highlight><highlight class="stringliteral">&quot;respawn&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_RespawnFx(<sp/></highlight><highlight class="stringliteral">&quot;&lt;respawnFx&gt;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_GetPlayerPos(<sp/></highlight><highlight class="stringliteral">&quot;&lt;getplayerpos&gt;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_HideObjective(<sp/></highlight><highlight class="stringliteral">&quot;&lt;hideobjective&gt;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_CamShot(<sp/></highlight><highlight class="stringliteral">&quot;&lt;camshot&gt;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">CLASS_DECLARATION(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref>,<sp/><ref refid="classid_item" kindref="compound">idItem</ref><sp/>)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_DropToFloor,<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_item" kindref="compound">idItem</ref>::Event_DropToFloor<sp/>)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Touch,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_item" kindref="compound">idItem</ref>::Event_Touch<sp/>)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Activate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_item" kindref="compound">idItem</ref>::Event_Trigger<sp/>)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_RespawnItem,<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_item" kindref="compound">idItem</ref>::Event_Respawn<sp/>)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_RespawnFx,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_item" kindref="compound">idItem</ref>::Event_RespawnFx<sp/>)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">END_CLASS</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="60"><highlight class="comment">================</highlight></codeline>
<codeline lineno="61"><highlight class="comment">idItem::idItem</highlight></codeline>
<codeline lineno="62"><highlight class="comment">================</highlight></codeline>
<codeline lineno="63"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="classid_item" kindref="compound">idItem</ref>::<ref refid="classid_item" kindref="compound">idItem</ref>()<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>spin<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>inView<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>inViewTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>lastCycle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>lastRenderViewTime<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>itemShellHandle<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>shellMaterial<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>orgOrigin.Zero();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>canPickUp<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>fl.networkSync<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="78"><highlight class="comment">================</highlight></codeline>
<codeline lineno="79"><highlight class="comment">idItem::~idItem</highlight></codeline>
<codeline lineno="80"><highlight class="comment">================</highlight></codeline>
<codeline lineno="81"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">idItem::~idItem()<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>the<sp/>highlight<sp/>shell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>itemShellHandle<sp/>!=<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameRenderWorld-&gt;FreeEntityDef(<sp/>itemShellHandle<sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="90"><highlight class="comment">================</highlight></codeline>
<codeline lineno="91"><highlight class="comment">idItem::Save</highlight></codeline>
<codeline lineno="92"><highlight class="comment">================</highlight></codeline>
<codeline lineno="93"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItem::Save(<sp/><ref refid="classid_save_game" kindref="compound">idSaveGame</ref><sp/>*savefile<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteVec3(<sp/>orgOrigin<sp/>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>spin<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>pulse<sp/>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>canPickUp<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteMaterial(<sp/>shellMaterial<sp/>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>inView<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>inViewTime<sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>lastCycle<sp/>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>lastRenderViewTime<sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="110"><highlight class="comment">================</highlight></codeline>
<codeline lineno="111"><highlight class="comment">idItem::Restore</highlight></codeline>
<codeline lineno="112"><highlight class="comment">================</highlight></codeline>
<codeline lineno="113"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItem::Restore(<sp/><ref refid="classid_restore_game" kindref="compound">idRestoreGame</ref><sp/>*savefile<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadVec3(<sp/>orgOrigin<sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>spin<sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>pulse<sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>canPickUp<sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadMaterial(<sp/>shellMaterial<sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>inView<sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>inViewTime<sp/>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>lastCycle<sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>lastRenderViewTime<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>itemShellHandle<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="132"><highlight class="comment">================</highlight></codeline>
<codeline lineno="133"><highlight class="comment">idItem::UpdateRenderEntity</highlight></codeline>
<codeline lineno="134"><highlight class="comment">================</highlight></codeline>
<codeline lineno="135"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idItem::UpdateRenderEntity(<sp/><ref refid="structrender_entity__s" kindref="compound">renderEntity_s</ref><sp/>*renderEntity,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structrender_view__s" kindref="compound">renderView_t</ref><sp/>*renderView<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>lastRenderViewTime<sp/>==<sp/>renderView-&gt;time<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>lastRenderViewTime<sp/>=<sp/>renderView-&gt;time;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>glow<sp/>highlighting<sp/>if<sp/>near<sp/>the<sp/>center<sp/>of<sp/>the<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>dir<sp/>=<sp/>renderEntity-&gt;origin<sp/>-<sp/>renderView-&gt;vieworg;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>dir.Normalize();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>dir<sp/>*<sp/>renderView-&gt;viewaxis[0];</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>two<sp/>second<sp/>pulse<sp/>cycle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cycle<sp/>=<sp/>(<sp/>renderView-&gt;time<sp/>-<sp/>inViewTime<sp/>)<sp/>/<sp/>2000.0f;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>d<sp/>&gt;<sp/>0.94f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!inView<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inView<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>cycle<sp/>&gt;<sp/>lastCycle<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>restart<sp/>at<sp/>the<sp/>beginning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inViewTime<sp/>=<sp/>renderView-&gt;time;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cycle<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>inView<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inView<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastCycle<sp/>=<sp/>ceil(<sp/>cycle<sp/>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fade<sp/>down<sp/>after<sp/>the<sp/>last<sp/>pulse<sp/>finishes<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!inView<sp/>&amp;&amp;<sp/>cycle<sp/>&gt;<sp/>lastCycle<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderEntity-&gt;shaderParms[4]<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pulse<sp/>up<sp/>in<sp/>1/4<sp/>second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cycle<sp/>-=<sp/>(int)cycle;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>cycle<sp/>&lt;<sp/>0.1f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderEntity-&gt;shaderParms[4]<sp/>=<sp/>cycle<sp/>*<sp/>10.0f;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>cycle<sp/>&lt;<sp/>0.2f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderEntity-&gt;shaderParms[4]<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>cycle<sp/>&lt;<sp/>0.3f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderEntity-&gt;shaderParms[4]<sp/>=<sp/>1.0f<sp/>-<sp/>(<sp/>cycle<sp/>-<sp/>0.2f<sp/>)<sp/>*<sp/>10.0f;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stay<sp/>off<sp/>between<sp/>pulses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderEntity-&gt;shaderParms[4]<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>every<sp/>single<sp/>time<sp/>this<sp/>is<sp/>in<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="191"><highlight class="comment">================</highlight></codeline>
<codeline lineno="192"><highlight class="comment">idItem::ModelCallback</highlight></codeline>
<codeline lineno="193"><highlight class="comment">================</highlight></codeline>
<codeline lineno="194"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idItem::ModelCallback(<sp/><ref refid="structrender_entity__s" kindref="compound">renderEntity_t</ref><sp/>*renderEntity,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structrender_view__s" kindref="compound">renderView_t</ref><sp/>*renderView<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idItem<sp/>*ent;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>may<sp/>be<sp/>triggered<sp/>by<sp/>a<sp/>model<sp/>trace<sp/>or<sp/>other<sp/>non-view<sp/>related<sp/>source</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!renderView<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>ent<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">idItem<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(gameLocal.entities[<sp/>renderEntity-&gt;entityNum<sp/>]);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!ent<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Error(<sp/></highlight><highlight class="stringliteral">&quot;idItem::ModelCallback:<sp/>callback<sp/>with<sp/>NULL<sp/>game<sp/>entity&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ent-&gt;UpdateRenderEntity(<sp/>renderEntity,<sp/>renderView<sp/>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="212"><highlight class="comment">================</highlight></codeline>
<codeline lineno="213"><highlight class="comment">idItem::Think</highlight></codeline>
<codeline lineno="214"><highlight class="comment">================</highlight></codeline>
<codeline lineno="215"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItem::Think(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>thinkFlags<sp/>&amp;<sp/>TH_THINK<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spin<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_angles" kindref="compound">idAngles</ref><sp/><sp/><sp/><sp/>ang;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/><sp/><sp/><sp/><sp/>org;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ang.pitch<sp/>=<sp/>ang.roll<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ang.yaw<sp/>=<sp/>(<sp/>gameLocal.time<sp/>&amp;<sp/>4095<sp/>)<sp/>*<sp/>360.0f<sp/>/<sp/>-4096.0f;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetAngles(<sp/>ang<sp/>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>0.005f<sp/>+<sp/>entityNumber<sp/>*<sp/>0.00001f;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>org<sp/>=<sp/>orgOrigin;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>org.z<sp/>+=<sp/>4.0f<sp/>+<sp/>cos(<sp/>(<sp/>gameLocal.time<sp/>+<sp/>2000<sp/>)<sp/>*<sp/>scale<sp/>)<sp/>*<sp/>4.0f;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetOrigin(<sp/>org<sp/>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>Present();</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="238"><highlight class="comment">================</highlight></codeline>
<codeline lineno="239"><highlight class="comment">idItem::Present</highlight></codeline>
<codeline lineno="240"><highlight class="comment">================</highlight></codeline>
<codeline lineno="241"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItem::Present(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>idEntity::Present();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!fl.hidden<sp/>&amp;&amp;<sp/>pulse<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>also<sp/>add<sp/>a<sp/>highlight<sp/>shell<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structrender_entity__s" kindref="compound">renderEntity_t</ref><sp/><sp/>shell;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shell<sp/>=<sp/>renderEntity;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>will<sp/>mess<sp/>with<sp/>shader<sp/>parms<sp/>when<sp/>the<sp/>item<sp/>is<sp/>in<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>give<sp/>the<sp/>&quot;item<sp/>pulse&quot;<sp/>effect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shell.callback<sp/>=<sp/>idItem::ModelCallback;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shell.entityNum<sp/>=<sp/>entityNumber;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shell.customShader<sp/>=<sp/>shellMaterial;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>itemShellHandle<sp/>==<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itemShellHandle<sp/>=<sp/>gameRenderWorld-&gt;AddEntityDef(<sp/>&amp;shell<sp/>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameRenderWorld-&gt;UpdateEntityDef(<sp/>itemShellHandle,<sp/>&amp;shell<sp/>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="266"><highlight class="comment">================</highlight></codeline>
<codeline lineno="267"><highlight class="comment">idItem::Spawn</highlight></codeline>
<codeline lineno="268"><highlight class="comment">================</highlight></codeline>
<codeline lineno="269"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItem::Spawn(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>giveTo;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*<sp/><sp/>ent;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tsize;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;dropToFloor&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventMS(<sp/>&amp;EV_DropToFloor,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spawnArgs.GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;triggersize&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>tsize<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetPhysics()-&gt;GetClipModel()-&gt;LoadModel(<sp/><ref refid="classid_trace_model" kindref="compound">idTraceModel</ref>(<sp/><ref refid="classid_bounds" kindref="compound">idBounds</ref>(<sp/>vec3_origin<sp/>).Expand(<sp/>tsize<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetPhysics()-&gt;GetClipModel()-&gt;Link(<sp/>gameLocal.clip<sp/>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;start_off&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetPhysics()-&gt;SetContents(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hide();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetPhysics()-&gt;SetContents(<sp/>CONTENTS_TRIGGER<sp/>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>giveTo<sp/>=<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>giveTo.Length()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent<sp/>=<sp/>gameLocal.FindEntity(<sp/>giveTo<sp/>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!ent<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Error(<sp/></highlight><highlight class="stringliteral">&quot;Item<sp/>couldn&apos;t<sp/>find<sp/>owner<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/>giveTo.c_str()<sp/>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventMS(<sp/>&amp;EV_Touch,<sp/>0,<sp/>ent,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CTF</highlight></codeline>
<codeline lineno="301"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>idItemTeam<sp/>does<sp/>not<sp/>rotate<sp/>and<sp/>bob</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;spin&quot;</highlight><highlight class="normal"><sp/>)<sp/>||<sp/>(gameLocal.isMultiplayer<sp/>&amp;&amp;<sp/>!this-&gt;IsType(<sp/>idItemTeam::Type<sp/>)<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spin<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BecomeActive(<sp/>TH_THINK<sp/>);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="307"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;spin&quot;</highlight><highlight class="normal"><sp/>)<sp/>||<sp/>gameLocal.isMultiplayer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spin<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BecomeActive(<sp/>TH_THINK<sp/>);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="312"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pulse<sp/>=<sp/>!spawnArgs.GetBool(<sp/>&quot;nopulse&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//temp<sp/>hack<sp/>for<sp/>tim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>pulse<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>orgOrigin<sp/>=<sp/>GetPhysics()-&gt;GetOrigin();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>canPickUp<sp/>=<sp/>!(<sp/>spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;triggerFirst&quot;</highlight><highlight class="normal"><sp/>)<sp/>||<sp/>spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;no_touch&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>inViewTime<sp/>=<sp/>-1000;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>lastCycle<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>itemShellHandle<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>shellMaterial<sp/>=<sp/>declManager-&gt;FindMaterial(<sp/></highlight><highlight class="stringliteral">&quot;itemHighlightShell&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="327"><highlight class="comment">================</highlight></codeline>
<codeline lineno="328"><highlight class="comment">idItem::GetAttributes</highlight></codeline>
<codeline lineno="329"><highlight class="comment">================</highlight></codeline>
<codeline lineno="330"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItem::GetAttributes(<sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/>&amp;attributes<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_key_value" kindref="compound">idKeyValue</ref><sp/><sp/><sp/><sp/>*arg;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>spawnArgs.GetNumKeyVals();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg<sp/>=<sp/>spawnArgs.GetKeyVal(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>arg-&gt;GetKey().Left(<sp/>4<sp/>)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;inv_&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attributes.Set(<sp/>arg-&gt;GetKey().Right(<sp/>arg-&gt;GetKey().Length()<sp/>-<sp/>4<sp/>),<sp/>arg-&gt;GetValue()<sp/>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="344"><highlight class="comment">================</highlight></codeline>
<codeline lineno="345"><highlight class="comment">idItem::GiveToPlayer</highlight></codeline>
<codeline lineno="346"><highlight class="comment">================</highlight></codeline>
<codeline lineno="347"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idItem::GiveToPlayer(<sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*player<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>player<sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;inv_carry&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>player-&gt;GiveInventoryItem(<sp/>&amp;spawnArgs<sp/>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>player-&gt;GiveItem(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="361"><highlight class="comment">================</highlight></codeline>
<codeline lineno="362"><highlight class="comment">idItem::Pickup</highlight></codeline>
<codeline lineno="363"><highlight class="comment">================</highlight></codeline>
<codeline lineno="364"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idItem::Pickup(<sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*player<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!GiveToPlayer(<sp/>player<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isServer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ServerSendEvent(<sp/>EVENT_PICKUP,<sp/>NULL,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>-1<sp/>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>play<sp/>pickup<sp/>sound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>StartSound(<sp/></highlight><highlight class="stringliteral">&quot;snd_acquire&quot;</highlight><highlight class="normal">,<sp/>SND_CHANNEL_ITEM,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>trigger<sp/>our<sp/>targets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>ActivateTargets(<sp/>player<sp/>);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>our<sp/>contents<sp/>so<sp/>the<sp/>object<sp/>isn&apos;t<sp/>picked<sp/>up<sp/>twice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>GetPhysics()-&gt;SetContents(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hide<sp/>the<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>Hide();</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>the<sp/>highlight<sp/>shell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>itemShellHandle<sp/>!=<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameRenderWorld-&gt;FreeEntityDef(<sp/>itemShellHandle<sp/>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itemShellHandle<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>respawn<sp/>=<sp/>spawnArgs.GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;respawn&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dropped<sp/>=<sp/>spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;dropped&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>no_respawn<sp/>=<sp/>spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;no_respawn&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isMultiplayer<sp/>&amp;&amp;<sp/>respawn<sp/>==<sp/>0.0f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>respawn<sp/>=<sp/>20.0f;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>respawn<sp/>&amp;&amp;<sp/>!dropped<sp/>&amp;&amp;<sp/>!no_respawn<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sfx<sp/>=<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;fxRespawn&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>sfx<sp/>&amp;&amp;<sp/>*sfx<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventSec(<sp/>&amp;EV_RespawnFx,<sp/>respawn<sp/>-<sp/>0.5f<sp/>);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventSec(<sp/>&amp;EV_RespawnItem,<sp/>respawn<sp/>);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;inv_objective&quot;</highlight><highlight class="normal"><sp/>)<sp/>&amp;&amp;<sp/>!no_respawn<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>give<sp/>some<sp/>time<sp/>for<sp/>the<sp/>pickup<sp/>sound<sp/>to<sp/>play</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Play<sp/>on<sp/>the<sp/>owner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;inv_carry&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventMS(<sp/>&amp;EV_Remove,<sp/>5000<sp/>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>BecomeInactive(<sp/>TH_THINK<sp/>);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="420"><highlight class="comment">================</highlight></codeline>
<codeline lineno="421"><highlight class="comment">idItem::ClientPredictionThink</highlight></codeline>
<codeline lineno="422"><highlight class="comment">================</highlight></codeline>
<codeline lineno="423"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItem::ClientPredictionThink(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>think<sp/>forward<sp/>because<sp/>the<sp/>state<sp/>is<sp/>not<sp/>synced<sp/>through<sp/>snapshots</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.isNewFrame<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>Think();</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="433"><highlight class="comment">================</highlight></codeline>
<codeline lineno="434"><highlight class="comment">idItem::WriteFromSnapshot</highlight></codeline>
<codeline lineno="435"><highlight class="comment">================</highlight></codeline>
<codeline lineno="436"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItem::WriteToSnapshot(<sp/><ref refid="classid_bit_msg_delta" kindref="compound">idBitMsgDelta</ref><sp/>&amp;msg<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.WriteBits(<sp/>IsHidden(),<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="442"><highlight class="comment">================</highlight></codeline>
<codeline lineno="443"><highlight class="comment">idItem::ReadFromSnapshot</highlight></codeline>
<codeline lineno="444"><highlight class="comment">================</highlight></codeline>
<codeline lineno="445"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItem::ReadFromSnapshot(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_bit_msg_delta" kindref="compound">idBitMsgDelta</ref><sp/>&amp;msg<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>msg.ReadBits(<sp/>1<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hide();</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Show();</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="455"><highlight class="comment">================</highlight></codeline>
<codeline lineno="456"><highlight class="comment">idItem::ClientReceiveEvent</highlight></codeline>
<codeline lineno="457"><highlight class="comment">================</highlight></codeline>
<codeline lineno="458"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idItem::ClientReceiveEvent(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>event,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_bit_msg" kindref="compound">idBitMsg</ref><sp/>&amp;msg<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>event<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EVENT_PICKUP:<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>play<sp/>pickup<sp/>sound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartSound(<sp/></highlight><highlight class="stringliteral">&quot;snd_acquire&quot;</highlight><highlight class="normal">,<sp/>SND_CHANNEL_ITEM,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hide<sp/>the<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hide();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>the<sp/>highlight<sp/>shell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>itemShellHandle<sp/>!=<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameRenderWorld-&gt;FreeEntityDef(<sp/>itemShellHandle<sp/>);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itemShellHandle<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EVENT_RESPAWN:<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event_Respawn();</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EVENT_RESPAWNFX:<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event_RespawnFx();</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>idEntity::ClientReceiveEvent(<sp/>event,<sp/>time,<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="493"><highlight class="comment">================</highlight></codeline>
<codeline lineno="494"><highlight class="comment">idItem::Event_DropToFloor</highlight></codeline>
<codeline lineno="495"><highlight class="comment">================</highlight></codeline>
<codeline lineno="496"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItem::Event_DropToFloor(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtrace__s" kindref="compound">trace_t</ref><sp/>trace;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>drop<sp/>the<sp/>floor<sp/>if<sp/>bound<sp/>to<sp/>another<sp/>entity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>GetBindMaster()<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>GetBindMaster()<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>gameLocal.clip.TraceBounds(<sp/>trace,<sp/>renderEntity.origin,<sp/>renderEntity.origin<sp/>-<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(<sp/>0,<sp/>0,<sp/>64<sp/>),<sp/>renderEntity.bounds,<sp/>MASK_SOLID<sp/>|<sp/>CONTENTS_CORPSE,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>SetOrigin(<sp/>trace.endpos<sp/>);</highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="510"><highlight class="comment">================</highlight></codeline>
<codeline lineno="511"><highlight class="comment">idItem::Event_Touch</highlight></codeline>
<codeline lineno="512"><highlight class="comment">================</highlight></codeline>
<codeline lineno="513"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItem::Event_Touch(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*other,<sp/><ref refid="structtrace__s" kindref="compound">trace_t</ref><sp/>*trace<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!other-&gt;IsType(<sp/>idPlayer::Type<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!canPickUp<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>Pickup(<sp/>static_cast&lt;idPlayer<sp/>*&gt;(other)<sp/>);</highlight></codeline>
<codeline lineno="524"><highlight class="normal">}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="527"><highlight class="comment">================</highlight></codeline>
<codeline lineno="528"><highlight class="comment">idItem::Event_Trigger</highlight></codeline>
<codeline lineno="529"><highlight class="comment">================</highlight></codeline>
<codeline lineno="530"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItem::Event_Trigger(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*activator<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!canPickUp<sp/>&amp;&amp;<sp/>spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;triggerFirst&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>canPickUp<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>activator<sp/>&amp;&amp;<sp/>activator-&gt;IsType(<sp/>idPlayer::Type<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pickup(<sp/>static_cast&lt;idPlayer<sp/>*&gt;(<sp/>activator<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="544"><highlight class="comment">================</highlight></codeline>
<codeline lineno="545"><highlight class="comment">idItem::Event_Respawn</highlight></codeline>
<codeline lineno="546"><highlight class="comment">================</highlight></codeline>
<codeline lineno="547"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItem::Event_Respawn(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isServer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ServerSendEvent(<sp/>EVENT_RESPAWN,<sp/>NULL,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>-1<sp/>);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>BecomeActive(<sp/>TH_THINK<sp/>);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>Show();</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>inViewTime<sp/>=<sp/>-1000;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>lastCycle<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>GetPhysics()-&gt;SetContents(<sp/>CONTENTS_TRIGGER<sp/>);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>SetOrigin(<sp/>orgOrigin<sp/>);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>StartSound(<sp/></highlight><highlight class="stringliteral">&quot;snd_respawn&quot;</highlight><highlight class="normal">,<sp/>SND_CHANNEL_ITEM,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>CancelEvents(<sp/>&amp;EV_RespawnItem<sp/>);<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>double<sp/>respawn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="563"><highlight class="comment">================</highlight></codeline>
<codeline lineno="564"><highlight class="comment">idItem::Event_RespawnFx</highlight></codeline>
<codeline lineno="565"><highlight class="comment">================</highlight></codeline>
<codeline lineno="566"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItem::Event_RespawnFx(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isServer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ServerSendEvent(<sp/>EVENT_RESPAWNFX,<sp/>NULL,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>-1<sp/>);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sfx<sp/>=<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;fxRespawn&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>sfx<sp/>&amp;&amp;<sp/>*sfx<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idEntityFx::StartFx(<sp/>sfx,<sp/>NULL,<sp/>NULL,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="578"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="579"><highlight class="comment"></highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/><sp/>idItemPowerup</highlight></codeline>
<codeline lineno="581"><highlight class="comment"></highlight></codeline>
<codeline lineno="582"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="583"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="586"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="587"><highlight class="comment">idItemPowerup</highlight></codeline>
<codeline lineno="588"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="589"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal">CLASS_DECLARATION(<sp/>idItem,<sp/><ref refid="classid_item_powerup" kindref="compound">idItemPowerup</ref><sp/>)</highlight></codeline>
<codeline lineno="592"><highlight class="normal">END_CLASS</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="595"><highlight class="comment">================</highlight></codeline>
<codeline lineno="596"><highlight class="comment">idItemPowerup::idItemPowerup</highlight></codeline>
<codeline lineno="597"><highlight class="comment">================</highlight></codeline>
<codeline lineno="598"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><ref refid="classid_item_powerup" kindref="compound">idItemPowerup</ref>::<ref refid="classid_item_powerup" kindref="compound">idItemPowerup</ref>()<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>type<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="605"><highlight class="comment">================</highlight></codeline>
<codeline lineno="606"><highlight class="comment">idItemPowerup::Save</highlight></codeline>
<codeline lineno="607"><highlight class="comment">================</highlight></codeline>
<codeline lineno="608"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItemPowerup::Save(<sp/><ref refid="classid_save_game" kindref="compound">idSaveGame</ref><sp/>*savefile<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>time<sp/>);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>type<sp/>);</highlight></codeline>
<codeline lineno="612"><highlight class="normal">}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="615"><highlight class="comment">================</highlight></codeline>
<codeline lineno="616"><highlight class="comment">idItemPowerup::Restore</highlight></codeline>
<codeline lineno="617"><highlight class="comment">================</highlight></codeline>
<codeline lineno="618"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItemPowerup::Restore(<sp/><ref refid="classid_restore_game" kindref="compound">idRestoreGame</ref><sp/>*savefile<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>time<sp/>);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>type<sp/>);</highlight></codeline>
<codeline lineno="622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="625"><highlight class="comment">================</highlight></codeline>
<codeline lineno="626"><highlight class="comment">idItemPowerup::Spawn</highlight></codeline>
<codeline lineno="627"><highlight class="comment">================</highlight></codeline>
<codeline lineno="628"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItemPowerup::Spawn(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>time<sp/>=<sp/>spawnArgs.GetInt(<sp/></highlight><highlight class="stringliteral">&quot;time&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;30&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>type<sp/>=<sp/>spawnArgs.GetInt(<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="635"><highlight class="comment">================</highlight></codeline>
<codeline lineno="636"><highlight class="comment">idItemPowerup::GiveToPlayer</highlight></codeline>
<codeline lineno="637"><highlight class="comment">================</highlight></codeline>
<codeline lineno="638"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idItemPowerup::GiveToPlayer(<sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*player<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>player-&gt;spectating<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>player-&gt;GivePowerUp(<sp/>type,<sp/>time<sp/>*<sp/>1000<sp/>);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CTF</highlight></codeline>
<codeline lineno="648"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="651"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="652"><highlight class="comment"></highlight></codeline>
<codeline lineno="653"><highlight class="comment"><sp/><sp/>idItemTeam</highlight></codeline>
<codeline lineno="654"><highlight class="comment"></highlight></codeline>
<codeline lineno="655"><highlight class="comment"><sp/><sp/>Used<sp/>for<sp/>flags<sp/>in<sp/>Capture<sp/>the<sp/>Flag</highlight></codeline>
<codeline lineno="656"><highlight class="comment"></highlight></codeline>
<codeline lineno="657"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="658"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="comment">//<sp/>temporarely<sp/>removed<sp/>these<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_FlagReturn(<sp/></highlight><highlight class="stringliteral">&quot;flagreturn&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_TakeFlag(<sp/></highlight><highlight class="stringliteral">&quot;takeflag&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_DropFlag(<sp/></highlight><highlight class="stringliteral">&quot;dropflag&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_FlagCapture(<sp/></highlight><highlight class="stringliteral">&quot;flagcapture&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal">CLASS_DECLARATION(<sp/>idItem,<sp/>idItemTeam<sp/>)</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_FlagReturn,<sp/><sp/>idItemTeam::Event_FlagReturn<sp/>)</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_TakeFlag,<sp/><sp/><sp/><sp/>idItemTeam::Event_TakeFlag<sp/>)</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_DropFlag,<sp/><sp/><sp/><sp/>idItemTeam::Event_DropFlag<sp/>)</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_FlagCapture,<sp/>idItemTeam::Event_FlagCapture<sp/>)</highlight></codeline>
<codeline lineno="672"><highlight class="normal">END_CLASS</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="675"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="676"><highlight class="comment">idItemTeam::idItemTeam</highlight></codeline>
<codeline lineno="677"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="678"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal">idItemTeam::idItemTeam()<sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>team<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>carried<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>dropped<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>lastDrop<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>itemGlowHandle<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>skinDefault<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>skinCarried<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>scriptTaken<sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>scriptDropped<sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>scriptReturned<sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>scriptCaptured<sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>lastNuggetDrop<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>nuggetName<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="700"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="701"><highlight class="comment">idItemTeam::~idItemTeam</highlight></codeline>
<codeline lineno="702"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="703"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal">idItemTeam::~idItemTeam()<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>FreeLightDef();</highlight></codeline>
<codeline lineno="706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="708"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="709"><highlight class="comment">idItemTeam::Spawn</highlight></codeline>
<codeline lineno="710"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="711"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItemTeam::Spawn(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>team<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>spawnArgs.GetInt(<sp/></highlight><highlight class="stringliteral">&quot;team&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>returnOrigin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>GetPhysics()-&gt;GetOrigin()<sp/>+<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(<sp/>0,<sp/>0,<sp/>20<sp/>);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>returnAxis<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>GetPhysics()-&gt;GetAxis();</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>BecomeActive(<sp/>TH_THINK<sp/>);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>skinName;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>skinName<sp/>=<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;skin&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>skinName[0]<sp/>)</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skinDefault<sp/>=<sp/>declManager-&gt;FindSkin(<sp/>skinName<sp/>);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>skinName<sp/>=<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;skin_carried&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>skinName[0]<sp/>)</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skinCarried<sp/>=<sp/>declManager-&gt;FindSkin(<sp/>skinName<sp/>);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>nuggetName<sp/>=<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;nugget_name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!nuggetName[0]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nuggetName<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>scriptTaken<sp/><sp/><sp/><sp/><sp/>=<sp/>LoadScript(<sp/></highlight><highlight class="stringliteral">&quot;script_taken&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>scriptDropped<sp/><sp/><sp/>=<sp/>LoadScript(<sp/></highlight><highlight class="stringliteral">&quot;script_dropped&quot;</highlight><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>scriptReturned<sp/><sp/>=<sp/>LoadScript(<sp/></highlight><highlight class="stringliteral">&quot;script_returned&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>scriptCaptured<sp/><sp/>=<sp/>LoadScript(<sp/></highlight><highlight class="stringliteral">&quot;script_captured&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Spawn<sp/>attached<sp/>dlight<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="740"><highlight class="comment"><sp/><sp/><sp/><sp/>idDict<sp/>args;</highlight></codeline>
<codeline lineno="741"><highlight class="comment"><sp/><sp/><sp/><sp/>idVec3<sp/>lightOffset(<sp/>0.0f,<sp/>20.0f,<sp/>0.0f<sp/>);</highlight></codeline>
<codeline lineno="742"><highlight class="comment"></highlight></codeline>
<codeline lineno="743"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Set<sp/>up<sp/>the<sp/>flag&apos;s<sp/>dynamic<sp/>light</highlight></codeline>
<codeline lineno="744"><highlight class="comment"><sp/><sp/><sp/><sp/>memset(<sp/>&amp;itemGlow,<sp/>0,<sp/>sizeof(<sp/>itemGlow<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="745"><highlight class="comment"><sp/><sp/><sp/><sp/>itemGlow.axis<sp/>=<sp/>mat3_identity;</highlight></codeline>
<codeline lineno="746"><highlight class="comment"><sp/><sp/><sp/><sp/>itemGlow.lightRadius.x<sp/>=<sp/>128.0f;</highlight></codeline>
<codeline lineno="747"><highlight class="comment"><sp/><sp/><sp/><sp/>itemGlow.lightRadius.y<sp/>=<sp/>itemGlow.lightRadius.z<sp/>=<sp/>itemGlow.lightRadius.x;</highlight></codeline>
<codeline lineno="748"><highlight class="comment"><sp/><sp/><sp/><sp/>itemGlow.noShadows<sp/><sp/>=<sp/>true;</highlight></codeline>
<codeline lineno="749"><highlight class="comment"><sp/><sp/><sp/><sp/>itemGlow.pointLight<sp/>=<sp/>true;</highlight></codeline>
<codeline lineno="750"><highlight class="comment"><sp/><sp/><sp/><sp/>itemGlow.shaderParms[<sp/>SHADERPARM_RED<sp/>]<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="751"><highlight class="comment"><sp/><sp/><sp/><sp/>itemGlow.shaderParms[<sp/>SHADERPARM_GREEN<sp/>]<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="752"><highlight class="comment"><sp/><sp/><sp/><sp/>itemGlow.shaderParms[<sp/>SHADERPARM_BLUE<sp/>]<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="753"><highlight class="comment"><sp/><sp/><sp/><sp/>itemGlow.shaderParms[<sp/>SHADERPARM_ALPHA<sp/>]<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="754"><highlight class="comment"></highlight></codeline>
<codeline lineno="755"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Select<sp/>a<sp/>shader<sp/>based<sp/>on<sp/>the<sp/>team</highlight></codeline>
<codeline lineno="756"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(<sp/>team<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="757"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itemGlow.shader<sp/>=<sp/>declManager-&gt;FindMaterial(<sp/>&quot;lights/redflag&quot;<sp/>);</highlight></codeline>
<codeline lineno="758"><highlight class="comment"><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="759"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itemGlow.shader<sp/>=<sp/>declManager-&gt;FindMaterial(<sp/>&quot;lights/blueflag&quot;<sp/>);</highlight></codeline>
<codeline lineno="760"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>idMoveableItem::Spawn();</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.SetContents(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.SetClipMask(<sp/>MASK_SOLID<sp/>|<sp/>CONTENTS_MOVEABLECLIP<sp/>);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.SetGravity(<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(<sp/>0,<sp/>0,<sp/>spawnArgs.GetInt(</highlight><highlight class="stringliteral">&quot;gravity&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-30&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="767"><highlight class="normal">}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="771"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="772"><highlight class="comment">idItemTeam::LoadScript</highlight></codeline>
<codeline lineno="773"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="774"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><ref refid="classfunction__t" kindref="compound">function_t</ref><sp/>*<sp/>idItemTeam::LoadScript(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>script<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classfunction__t" kindref="compound">function_t</ref><sp/>*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>funcname<sp/>=<sp/>spawnArgs.GetString(<sp/>script,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>funcname.Length()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>=<sp/>gameLocal.program.FindFunction(<sp/>funcname<sp/>);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG</highlight></codeline>
<codeline lineno="782"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Warning(<sp/></highlight><highlight class="stringliteral">&quot;idItemTeam<sp/>&apos;%s&apos;<sp/>at<sp/>(%s)<sp/>calls<sp/>unknown<sp/>function<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/>name.c_str(),<sp/>GetPhysics()-&gt;GetOrigin().ToString(0),<sp/>funcname.c_str()<sp/>);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="784"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="791"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="792"><highlight class="comment">idItemTeam::Think</highlight></codeline>
<codeline lineno="793"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="794"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItemTeam::Think(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>idMoveableItem::Think();</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>TouchTriggers();</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>:<sp/>only<sp/>update<sp/>on<sp/>updatevisuals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*idVec3<sp/>offset(<sp/>0.0f,<sp/>0.0f,<sp/>20.0f<sp/>);</highlight></codeline>
<codeline lineno="802"><highlight class="comment"><sp/><sp/><sp/><sp/>itemGlow.origin<sp/>=<sp/>GetPhysics()-&gt;GetOrigin()<sp/>+<sp/>offset;</highlight></codeline>
<codeline lineno="803"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(<sp/>itemGlowHandle<sp/>==<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="804"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itemGlowHandle<sp/>=<sp/>gameRenderWorld-&gt;AddLightDef(<sp/>&amp;itemGlow<sp/>);</highlight></codeline>
<codeline lineno="805"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameRenderWorld-&gt;UpdateLightDef(<sp/>itemGlowHandle,<sp/>&amp;itemGlow<sp/>);</highlight></codeline>
<codeline lineno="807"><highlight class="comment"><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>1</highlight></codeline>
<codeline lineno="810"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>only<sp/>the<sp/>server<sp/>do<sp/>this?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isServer<sp/>&amp;&amp;<sp/>nuggetName<sp/>&amp;&amp;<sp/>carried<sp/>&amp;&amp;<sp/>(<sp/>!lastNuggetDrop<sp/>||<sp/>(gameLocal.time<sp/>-<sp/>lastNuggetDrop)<sp/>&gt;<sp/><sp/>spawnArgs.GetInt(</highlight><highlight class="stringliteral">&quot;nugget_frequency&quot;</highlight><highlight class="normal">)<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SpawnNugget(<sp/>GetPhysics()-&gt;GetOrigin()<sp/>);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastNuggetDrop<sp/>=<sp/>gameLocal.time;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="817"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>dropped<sp/>flag<sp/>after<sp/>si_flagDropTimeLimit<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dropped<sp/>&amp;&amp;<sp/>!carried<sp/>&amp;&amp;<sp/>lastDrop<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>(gameLocal.time<sp/>-<sp/>lastDrop)<sp/>&gt;<sp/>(<sp/>si_flagDropTimeLimit.GetInteger()*1000<sp/>)<sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Return();<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>flag<sp/>after<sp/>30<sp/>seconds<sp/>on<sp/>ground</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal">}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="827"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="828"><highlight class="comment">idItemTeam::Pickup</highlight></codeline>
<codeline lineno="829"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="830"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idItemTeam::Pickup(<sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*player<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.mpGame.IsGametypeFlagBased()<sp/>)<sp/></highlight><highlight class="comment">/*<sp/>CTF<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.mpGame.GetGameState()<sp/>==<sp/>idMultiplayerGame::WARMUP<sp/>||</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.GetGameState()<sp/>==<sp/>idMultiplayerGame::COUNTDOWN<sp/>)</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wait<sp/>2<sp/>seconds<sp/>after<sp/>drop<sp/>before<sp/>beeing<sp/>picked<sp/>up<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>lastDrop<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>(gameLocal.time<sp/>-<sp/>lastDrop)<sp/>&lt;<sp/>spawnArgs.GetInt(</highlight><highlight class="stringliteral">&quot;pickupDelay&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;500&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>carried<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>player-&gt;team<sp/>!=<sp/>this-&gt;team<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventMS(<sp/>&amp;EV_TakeFlag,<sp/>0,<sp/>player<sp/>);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>carried<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>dropped<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>player-&gt;team<sp/>==<sp/>this-&gt;team<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.PlayerScoreCTF(<sp/>player-&gt;entityNumber,<sp/>5<sp/>);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventMS(<sp/>&amp;EV_FlagReturn,<sp/>0,<sp/>player<sp/>);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="859"><highlight class="normal">}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="862"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="863"><highlight class="comment">idItemTeam::ClientReceiveEvent</highlight></codeline>
<codeline lineno="864"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="865"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idItemTeam::ClientReceiveEvent(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>event,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_bit_msg" kindref="compound">idBitMsg</ref><sp/>&amp;msg<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>gameLocal.DPrintf(</highlight><highlight class="stringliteral">&quot;ClientRecieveEvent:<sp/>%i\n&quot;</highlight><highlight class="normal">,<sp/>event<sp/>);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>event<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EVENT_TAKEFLAG:<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*<sp/>player<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(gameLocal.entities[<sp/>msg.ReadBits(<sp/>GENTITYNUM_BITS<sp/>)<sp/>]);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>player<sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Warning(<sp/></highlight><highlight class="stringliteral">&quot;NULL<sp/>player<sp/>takes<sp/>flag?\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event_TakeFlag(<sp/>player<sp/>);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EVENT_DROPFLAG<sp/>:<sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>death<sp/>=<sp/>bool(<sp/>msg.ReadBits(<sp/>1<sp/>)<sp/>==<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event_DropFlag(<sp/>death<sp/>);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EVENT_FLAGRETURN<sp/>:<sp/>{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hide();</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FreeModelDef();</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FreeLightDef();</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event_FlagReturn();</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EVENT_FLAGCAPTURE<sp/>:<sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hide();</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FreeModelDef();</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FreeLightDef();</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event_FlagCapture();</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="909"><highlight class="normal">}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="912"><highlight class="comment">================</highlight></codeline>
<codeline lineno="913"><highlight class="comment">idItemTeam::Drop</highlight></codeline>
<codeline lineno="914"><highlight class="comment">================</highlight></codeline>
<codeline lineno="915"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItemTeam::Drop(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>death<sp/>)</highlight></codeline>
<codeline lineno="917"><highlight class="normal">{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>PostEventMS(<sp/>&amp;EV_DropFlag,<sp/>0,<sp/>int(death<sp/>==<sp/>true)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight><highlight class="comment">//<sp/>had<sp/>to<sp/>remove<sp/>the<sp/>delayed<sp/>drop<sp/>because<sp/>of<sp/>drop<sp/>flag<sp/>on<sp/>disconnect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>Event_DropFlag(<sp/>death<sp/>);</highlight></codeline>
<codeline lineno="921"><highlight class="normal">}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="924"><highlight class="comment">================</highlight></codeline>
<codeline lineno="925"><highlight class="comment">idItemTeam::Return</highlight></codeline>
<codeline lineno="926"><highlight class="comment">================</highlight></codeline>
<codeline lineno="927"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItemTeam::Return(<sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*<sp/>player<sp/>)</highlight></codeline>
<codeline lineno="929"><highlight class="normal">{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>team<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>team<sp/>!=<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>PostEventMS(<sp/>&amp;EV_FlagReturn,<sp/>0<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>Event_FlagReturn();</highlight></codeline>
<codeline lineno="935"><highlight class="normal">}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="938"><highlight class="comment">================</highlight></codeline>
<codeline lineno="939"><highlight class="comment">idItemTeam::Capture</highlight></codeline>
<codeline lineno="940"><highlight class="comment">================</highlight></codeline>
<codeline lineno="941"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItemTeam::Capture(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="943"><highlight class="normal">{</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>team<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>team<sp/>!=<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>PostEventMS(<sp/>&amp;EV_FlagCapture,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="948"><highlight class="normal">}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="951"><highlight class="comment">================</highlight></codeline>
<codeline lineno="952"><highlight class="comment">idItemTeam::PrivateReturn</highlight></codeline>
<codeline lineno="953"><highlight class="comment">================</highlight></codeline>
<codeline lineno="954"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItemTeam::PrivateReturn(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="956"><highlight class="normal">{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>Unbind();</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isServer<sp/>&amp;&amp;<sp/>carried<sp/>&amp;&amp;<sp/>!dropped<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>playerIdx<sp/>=<sp/>gameLocal.mpGame.GetFlagCarrier(<sp/>1-team<sp/>);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>playerIdx<sp/>!=<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*<sp/>player<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classid_player" kindref="compound">idPlayer</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>gameLocal.entities[<sp/>playerIdx<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player-&gt;carryingFlag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Warning(<sp/></highlight><highlight class="stringliteral">&quot;BUG:<sp/>carried<sp/>flag<sp/>has<sp/>no<sp/>carrier<sp/>before<sp/>return&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>dropped<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>carried<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>SetOrigin(<sp/>returnOrigin<sp/>);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>SetAxis(<sp/>returnAxis<sp/>);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>trigger-&gt;Link(<sp/>gameLocal.clip,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/>GetPhysics()-&gt;GetOrigin(),<sp/>mat3_identity<sp/>);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>SetSkin(<sp/>skinDefault<sp/>);</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Turn<sp/>off<sp/>the<sp/>light</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*itemGlow.shaderParms[<sp/>SHADERPARM_RED<sp/>]<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="981"><highlight class="comment"><sp/><sp/><sp/><sp/>itemGlow.shaderParms[<sp/>SHADERPARM_GREEN<sp/>]<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="982"><highlight class="comment"><sp/><sp/><sp/><sp/>itemGlow.shaderParms[<sp/>SHADERPARM_BLUE<sp/>]<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="983"><highlight class="comment"><sp/><sp/><sp/><sp/>itemGlow.shaderParms[<sp/>SHADERPARM_ALPHA<sp/>]<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="984"><highlight class="comment"></highlight></codeline>
<codeline lineno="985"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(<sp/>itemGlowHandle<sp/>!=<sp/>-1<sp/>)<sp/></highlight></codeline>
<codeline lineno="986"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameRenderWorld-&gt;UpdateLightDef(<sp/>itemGlowHandle,<sp/>&amp;itemGlow<sp/>);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>GetPhysics()-&gt;SetLinearVelocity(<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(0,<sp/>0,<sp/>0)<sp/>);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>GetPhysics()-&gt;SetAngularVelocity(<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(0,<sp/>0,<sp/>0)<sp/>);</highlight></codeline>
<codeline lineno="990"><highlight class="normal">}</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="993"><highlight class="comment">================</highlight></codeline>
<codeline lineno="994"><highlight class="comment">idItemTeam::Event_TakeFlag</highlight></codeline>
<codeline lineno="995"><highlight class="comment">================</highlight></codeline>
<codeline lineno="996"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItemTeam::Event_TakeFlag(<sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*<sp/>player<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>gameLocal.DPrintf(</highlight><highlight class="stringliteral">&quot;Event_TakeFlag()!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isServer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_bit_msg" kindref="compound">idBitMsg</ref><sp/>msg;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte<sp/>msgBuf[MAX_EVENT_PARAM_SIZE];</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.Init(<sp/>msgBuf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>msgBuf<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.BeginWriting();</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.WriteBits(<sp/>player-&gt;entityNumber,<sp/>GENTITYNUM_BITS<sp/>);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ServerSendEvent(<sp/>EVENT_TAKEFLAG,<sp/>&amp;msg,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>-1<sp/>);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.PlayTeamSound(<sp/>player-&gt;team,<sp/>SND_FLAG_TAKEN_THEIRS<sp/>);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.PlayTeamSound(<sp/>team,<sp/>SND_FLAG_TAKEN_YOURS<sp/>);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.PrintMessageEvent(<sp/>-1,<sp/>idMultiplayerGame::MSG_FLAGTAKEN,<sp/>team,<sp/>player-&gt;entityNumber<sp/>);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dont<sp/>drop<sp/>a<sp/>nugget<sp/>RIGHT<sp/>away</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastNuggetDrop<sp/>=<sp/>gameLocal.time<sp/>-<sp/>gameLocal.random.RandomInt(<sp/>1000<sp/>);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>BindToJoint(<sp/>player,<sp/>g_flagAttachJoint.GetString(),<sp/>true<sp/>);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>origin(<sp/>g_flagAttachOffsetX.GetFloat(),<sp/>g_flagAttachOffsetY.GetFloat(),<sp/>g_flagAttachOffsetZ.GetFloat()<sp/>);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_angles" kindref="compound">idAngles</ref><sp/>angle(<sp/>g_flagAttachAngleX.GetFloat(),<sp/>g_flagAttachAngleY.GetFloat(),<sp/>g_flagAttachAngleZ.GetFloat()<sp/>);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>SetAngles(<sp/>angle<sp/>);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>SetOrigin(<sp/>origin<sp/>);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Turn<sp/>the<sp/>light<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*itemGlow.shaderParms[<sp/>SHADERPARM_RED<sp/>]<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="1027"><highlight class="comment"><sp/><sp/><sp/><sp/>itemGlow.shaderParms[<sp/>SHADERPARM_GREEN<sp/>]<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="1028"><highlight class="comment"><sp/><sp/><sp/><sp/>itemGlow.shaderParms[<sp/>SHADERPARM_BLUE<sp/>]<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="1029"><highlight class="comment"><sp/><sp/><sp/><sp/>itemGlow.shaderParms[<sp/>SHADERPARM_ALPHA<sp/>]<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="1030"><highlight class="comment"></highlight></codeline>
<codeline lineno="1031"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(<sp/>itemGlowHandle<sp/>!=<sp/>-1<sp/>)</highlight></codeline>
<codeline lineno="1032"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameRenderWorld-&gt;UpdateLightDef(<sp/>itemGlowHandle,<sp/>&amp;itemGlow<sp/>);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>scriptTaken<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_thread" kindref="compound">idThread</ref><sp/>*thread<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classid_thread" kindref="compound">idThread</ref>();</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread-&gt;CallFunction(<sp/>scriptTaken,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread-&gt;DelayedStart(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>dropped<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>carried<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>player-&gt;carryingFlag<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>SetSkin(<sp/>skinCarried<sp/>);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateVisuals();</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateGuis();</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isServer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>team<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.player_red_flag<sp/>=<sp/>player-&gt;entityNumber;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.player_blue_flag<sp/>=<sp/>player-&gt;entityNumber;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1058"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1059"><highlight class="comment">idItemTeam::Event_DropFlag</highlight></codeline>
<codeline lineno="1060"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1061"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItemTeam::Event_DropFlag(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>death<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>gameLocal.DPrintf(</highlight><highlight class="stringliteral">&quot;Event_DropFlag()!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isServer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_bit_msg" kindref="compound">idBitMsg</ref><sp/>msg;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte<sp/>msgBuf[MAX_EVENT_PARAM_SIZE];</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.Init(<sp/>msgBuf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>msgBuf<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.BeginWriting();</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.WriteBits(<sp/>death,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ServerSendEvent(<sp/>EVENT_DROPFLAG,<sp/>&amp;msg,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>-1<sp/>);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.mpGame.IsFlagMsgOn()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.PlayTeamSound(<sp/>1-team,<sp/>SND_FLAG_DROPPED_THEIRS<sp/>);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.PlayTeamSound(<sp/>team,<sp/><sp/><sp/>SND_FLAG_DROPPED_YOURS<sp/>);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.PrintMessageEvent(<sp/>-1,<sp/>idMultiplayerGame::MSG_FLAGDROP,<sp/>team<sp/>);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>lastDrop<sp/>=<sp/>gameLocal.time;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>BecomeActive(<sp/>TH_THINK<sp/>);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>Show();</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>death<sp/>)</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetPhysics()-&gt;SetLinearVelocity(<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(0,<sp/>0,<sp/>0)<sp/>);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetPhysics()-&gt;SetLinearVelocity(<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(0,<sp/>0,<sp/>20)<sp/>);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>GetPhysics()-&gt;SetAngularVelocity(<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(0,<sp/>0,<sp/>0)<sp/>);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>GetPhysics()-&gt;SetLinearVelocity(<sp/>(<sp/>GetPhysics()-&gt;GetLinearVelocity()<sp/>*<sp/>GetBindMaster()-&gt;GetPhysics()-&gt;GetAxis()<sp/>)<sp/>+<sp/>GetBindMaster()-&gt;GetPhysics()-&gt;GetLinearVelocity()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>GetBindMaster()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_bounds" kindref="compound">idBounds</ref><sp/>bounds<sp/>=<sp/>GetPhysics()-&gt;GetBounds();<sp/></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>origin<sp/>=<sp/>GetBindMaster()-&gt;GetPhysics()-&gt;GetOrigin()<sp/>+<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(0,<sp/>0,<sp/>(<sp/>bounds[1].z-bounds[0].z<sp/>)*0.6f<sp/>);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Unbind();</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetOrigin(<sp/>origin<sp/>);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_angles" kindref="compound">idAngles</ref><sp/>angle<sp/>=<sp/>GetPhysics()-&gt;GetAxis().ToAngles();</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>angle.roll<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>angle.pitch<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>SetAxis(<sp/>angle.ToMat3()<sp/>);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/>dropped<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>carried<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>scriptDropped<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_thread" kindref="compound">idThread</ref><sp/>*thread<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classid_thread" kindref="compound">idThread</ref>();</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread-&gt;CallFunction(<sp/>scriptDropped,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread-&gt;DelayedStart(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>SetSkin(<sp/>skinDefault<sp/>);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateVisuals();</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateGuis();</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isServer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>team<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.player_red_flag<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.player_blue_flag<sp/>=<sp/>-1;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1134"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1135"><highlight class="comment">idItemTeam::Event_FlagReturn</highlight></codeline>
<codeline lineno="1136"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1137"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItemTeam::Event_FlagReturn(<sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*<sp/>player<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/>gameLocal.DPrintf(</highlight><highlight class="stringliteral">&quot;Event_FlagReturn()!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isServer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ServerSendEvent(<sp/>EVENT_FLAGRETURN,<sp/>NULL,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>-1<sp/>);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.mpGame.IsFlagMsgOn()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.PlayTeamSound(<sp/>1-team,<sp/>SND_FLAG_RETURN<sp/>);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.PlayTeamSound(<sp/>team,<sp/><sp/><sp/>SND_FLAG_RETURN<sp/>);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entitynum<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>player<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entitynum<sp/>=<sp/>player-&gt;entityNumber;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.PrintMessageEvent(<sp/>-1,<sp/>idMultiplayerGame::MSG_FLAGRETURN,<sp/>team,<sp/>entitynum<sp/>);</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/>BecomeActive(<sp/>TH_THINK<sp/>);</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/>Show();</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/>PrivateReturn();</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>scriptReturned<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_thread" kindref="compound">idThread</ref><sp/>*thread<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classid_thread" kindref="compound">idThread</ref>();</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread-&gt;CallFunction(<sp/>scriptReturned,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread-&gt;DelayedStart(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateVisuals();</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateGuis();</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Present();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isServer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>team<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.player_red_flag<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.player_blue_flag<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1181"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1182"><highlight class="comment">idItemTeam::Event_FlagCapture</highlight></codeline>
<codeline lineno="1183"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1184"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItemTeam::Event_FlagCapture(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>gameLocal.DPrintf(</highlight><highlight class="stringliteral">&quot;Event_FlagCapture()!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isServer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ServerSendEvent(<sp/>EVENT_FLAGCAPTURE,<sp/>NULL,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>-1<sp/>);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.PlayTeamSound(<sp/>1-team,<sp/>SND_FLAG_CAPTURED_THEIRS<sp/>);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.PlayTeamSound(<sp/>team,<sp/><sp/><sp/>SND_FLAG_CAPTURED_YOURS<sp/>);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.TeamScoreCTF(<sp/>1-team,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>playerIdx<sp/>=<sp/>gameLocal.mpGame.GetFlagCarrier(<sp/>1-team<sp/>);</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>playerIdx<sp/>!=<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.PlayerScoreCTF(<sp/>playerIdx,<sp/>10<sp/>);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>playerIdx<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.PrintMessageEvent(<sp/>-1,<sp/>idMultiplayerGame::MSG_FLAGCAPTURE,<sp/>team,<sp/>playerIdx<sp/>);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/>BecomeActive(<sp/>TH_THINK<sp/>);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/>Show();</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/>PrivateReturn();</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>scriptCaptured<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_thread" kindref="compound">idThread</ref><sp/>*thread<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classid_thread" kindref="compound">idThread</ref>();</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread-&gt;CallFunction(<sp/>scriptCaptured,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread-&gt;DelayedStart(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateVisuals();</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateGuis();</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isServer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>team<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.player_red_flag<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.player_blue_flag<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1231"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1232"><highlight class="comment">idItemTeam::FreeLightDef</highlight></codeline>
<codeline lineno="1233"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1234"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItemTeam::FreeLightDef(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>itemGlowHandle<sp/>!=<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameRenderWorld-&gt;FreeLightDef(<sp/>itemGlowHandle<sp/>);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itemGlowHandle<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1243"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1244"><highlight class="comment">idItemTeam::SpawnNugget</highlight></codeline>
<codeline lineno="1245"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1246"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItemTeam::SpawnNugget(<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>pos<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_angles" kindref="compound">idAngles</ref><sp/>angle(<sp/>gameLocal.random.RandomInt(spawnArgs.GetInt(</highlight><highlight class="stringliteral">&quot;nugget_pitch&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;30&quot;</highlight><highlight class="normal">)),<sp/>gameLocal.random.RandomInt(spawnArgs.GetInt(</highlight><highlight class="stringliteral">&quot;nugget_yaw&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;360&quot;</highlight><highlight class="normal"><sp/>)),<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>velocity<sp/>=<sp/>float(gameLocal.random.RandomInt(<sp/>40<sp/>)+15);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/>velocity<sp/>*=<sp/>spawnArgs.GetFloat(</highlight><highlight class="stringliteral">&quot;nugget_velocity&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*<sp/>ent<sp/>=<sp/>idMoveableItem::DropItem(<sp/>nuggetName,<sp/>pos,<sp/>GetPhysics()-&gt;GetAxis(),<sp/>angle.ToMat3()*<ref refid="classid_vec3" kindref="compound">idVec3</ref>(velocity,<sp/>velocity,<sp/>velocity),<sp/>0,<sp/>spawnArgs.GetInt(</highlight><highlight class="stringliteral">&quot;nugget_removedelay&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_physics___rigid_body" kindref="compound">idPhysics_RigidBody</ref><sp/>*<sp/>physics<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classid_physics___rigid_body" kindref="compound">idPhysics_RigidBody</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>ent-&gt;GetPhysics()<sp/>);</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>physics<sp/>&amp;&amp;<sp/>physics-&gt;IsType(<sp/>idPhysics_RigidBody::Type<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physics-&gt;DisableImpact();</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1265"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1266"><highlight class="comment">idItemTeam::Event_FlagCapture</highlight></codeline>
<codeline lineno="1267"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1268"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItemTeam::WriteToSnapshot(<sp/><ref refid="classid_bit_msg_delta" kindref="compound">idBitMsgDelta</ref><sp/>&amp;msg<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.WriteBits(<sp/>carried,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.WriteBits(<sp/>dropped,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/>WriteBindToSnapshot(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/>idMoveableItem::WriteToSnapshot(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1280"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1281"><highlight class="comment">idItemTeam::ReadFromSnapshot</highlight></codeline>
<codeline lineno="1282"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1283"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItemTeam::ReadFromSnapshot(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_bit_msg_delta" kindref="compound">idBitMsgDelta</ref><sp/>&amp;msg<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/>carried<sp/>=<sp/>msg.ReadBits(<sp/>1<sp/>)<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>dropped<sp/>=<sp/>msg.ReadBits(<sp/>1<sp/>)<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>ReadBindFromSnapshot(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>msg.HasChanged()<sp/>)</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateGuis();</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>carried<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSkin(<sp/>skinCarried<sp/>);</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSkin(<sp/>skinDefault<sp/>);</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/>idMoveableItem::ReadFromSnapshot(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1304"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1305"><highlight class="comment">idItemTeam::UpdateGuis</highlight></codeline>
<codeline lineno="1306"><highlight class="comment"></highlight></codeline>
<codeline lineno="1307"><highlight class="comment">Update<sp/>all<sp/>client&apos;s<sp/>huds<sp/>wrt<sp/>the<sp/>flag<sp/>status.</highlight></codeline>
<codeline lineno="1308"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1309"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItemTeam::UpdateGuis(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*player;</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>gameLocal.numClients;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>gameLocal.entities[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>player<sp/>==<sp/>NULL<sp/>||<sp/>player-&gt;hud<sp/>==<sp/>NULL<sp/>)<sp/></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player-&gt;hud-&gt;SetStateInt(<sp/></highlight><highlight class="stringliteral">&quot;red_flagstatus&quot;</highlight><highlight class="normal">,<sp/>gameLocal.mpGame.GetFlagStatus(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player-&gt;hud-&gt;SetStateInt(<sp/></highlight><highlight class="stringliteral">&quot;blue_flagstatus&quot;</highlight><highlight class="normal">,<sp/>gameLocal.mpGame.GetFlagStatus(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player-&gt;hud-&gt;SetStateInt(<sp/></highlight><highlight class="stringliteral">&quot;red_team_score&quot;</highlight><highlight class="normal">,<sp/><sp/>gameLocal.mpGame.GetFlagPoints(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player-&gt;hud-&gt;SetStateInt(<sp/></highlight><highlight class="stringliteral">&quot;blue_team_score&quot;</highlight><highlight class="normal">,<sp/>gameLocal.mpGame.GetFlagPoints(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1330"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1331"><highlight class="comment">idItemTeam::Present</highlight></codeline>
<codeline lineno="1332"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1333"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItemTeam::Present(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hide<sp/>the<sp/>flag<sp/>for<sp/>localplayer<sp/>if<sp/>in<sp/>first<sp/>person</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>carried<sp/>&amp;&amp;<sp/>GetBindMaster()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*<sp/>player<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>GetBindMaster()<sp/>);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>player<sp/>==<sp/>gameLocal.GetLocalPlayer()<sp/>&amp;&amp;<sp/>!pm_thirdPerson.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FreeModelDef();</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BecomeActive(<sp/>TH_UPDATEVISUALS<sp/>);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>idEntity::Present();</highlight></codeline>
<codeline lineno="1346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1349"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1351"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="1352"><highlight class="comment"></highlight></codeline>
<codeline lineno="1353"><highlight class="comment"><sp/><sp/>idObjective</highlight></codeline>
<codeline lineno="1354"><highlight class="comment"></highlight></codeline>
<codeline lineno="1355"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="1356"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal">CLASS_DECLARATION(<sp/>idItem,<sp/><ref refid="classid_objective" kindref="compound">idObjective</ref><sp/>)</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Activate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_objective" kindref="compound">idObjective</ref>::Event_Trigger<sp/>)</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_HideObjective,<sp/><sp/><sp/><sp/><ref refid="classid_objective" kindref="compound">idObjective</ref>::Event_HideObjective<sp/>)</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_GetPlayerPos,<sp/><sp/><sp/><sp/><sp/><ref refid="classid_objective" kindref="compound">idObjective</ref>::Event_GetPlayerPos<sp/>)</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_CamShot,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_objective" kindref="compound">idObjective</ref>::Event_CamShot<sp/>)</highlight></codeline>
<codeline lineno="1363"><highlight class="normal">END_CLASS</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1366"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1367"><highlight class="comment">idObjective::idObjective</highlight></codeline>
<codeline lineno="1368"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1369"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><ref refid="classid_objective" kindref="compound">idObjective</ref>::<ref refid="classid_objective" kindref="compound">idObjective</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/>playerPos.Zero();</highlight></codeline>
<codeline lineno="1372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1375"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1376"><highlight class="comment">idObjective::Save</highlight></codeline>
<codeline lineno="1377"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1378"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idObjective::Save(<sp/><ref refid="classid_save_game" kindref="compound">idSaveGame</ref><sp/>*savefile<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteVec3(<sp/>playerPos<sp/>);</highlight></codeline>
<codeline lineno="1381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1384"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1385"><highlight class="comment">idObjective::Restore</highlight></codeline>
<codeline lineno="1386"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1387"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idObjective::Restore(<sp/><ref refid="classid_restore_game" kindref="compound">idRestoreGame</ref><sp/>*savefile<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadVec3(<sp/>playerPos<sp/>);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1393"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1394"><highlight class="comment">idObjective::Spawn</highlight></codeline>
<codeline lineno="1395"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1396"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idObjective::Spawn(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/>Hide();</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>cvarSystem-&gt;GetCVarBool(<sp/></highlight><highlight class="stringliteral">&quot;com_makingBuild&quot;</highlight><highlight class="normal">)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventMS(<sp/>&amp;EV_CamShot,<sp/>250<sp/>);</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1405"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1406"><highlight class="comment">idObjective::Event_Screenshot</highlight></codeline>
<codeline lineno="1407"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1408"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idObjective::Event_CamShot(<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*camName;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>shotName<sp/>=<sp/>gameLocal.GetMapName();</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/>shotName.StripFileExtension();</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/>shotName<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/>shotName<sp/>+=<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;screenshot&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/>shotName.SetFileExtension(<sp/></highlight><highlight class="stringliteral">&quot;.tga&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;camShot&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>&amp;camName<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*ent<sp/>=<sp/>gameLocal.FindEntity(<sp/>camName<sp/>);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ent<sp/>&amp;&amp;<sp/>ent-&gt;cameraTarget<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structrender_view__s" kindref="compound">renderView_t</ref><sp/>*view<sp/>=<sp/>ent-&gt;cameraTarget-&gt;GetRenderView();</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structrender_view__s" kindref="compound">renderView_t</ref><sp/>fullView<sp/>=<sp/>*view;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fullView.width<sp/>=<sp/>SCREEN_WIDTH;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fullView.height<sp/>=<sp/>SCREEN_HEIGHT;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_D3XP</highlight></codeline>
<codeline lineno="1425"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HACK<sp/>:<sp/>always<sp/>draw<sp/>sky-portal<sp/>view<sp/>if<sp/>there<sp/>is<sp/>one<sp/>in<sp/>the<sp/>map,<sp/>this<sp/>isn&apos;t<sp/>real-time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.portalSkyEnt.GetEntity()<sp/>&amp;&amp;<sp/>g_enablePortalSky.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structrender_view__s" kindref="compound">renderView_t</ref><sp/><sp/><sp/><sp/>portalView<sp/>=<sp/>fullView;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>portalView.vieworg<sp/>=<sp/>gameLocal.portalSkyEnt.GetEntity()-&gt;GetPhysics()-&gt;GetOrigin();</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setup<sp/>global<sp/>fixup<sp/>projection<sp/>vars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vidWidth,<sp/>vidHeight;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_vec2" kindref="compound">idVec2</ref><sp/>shiftScale;</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderSystem-&gt;GetGLSettings(<sp/>vidWidth,<sp/>vidHeight<sp/>);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pot;</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>w<sp/>=<sp/>vidWidth;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(temp<sp/>=<sp/>1<sp/>;<sp/>temp<sp/>&lt;<sp/>w<sp/>;<sp/>temp&lt;&lt;=1)<sp/>{</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pot<sp/>=<sp/>(float)temp;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shiftScale.x<sp/>=<sp/>(float)w<sp/>/<sp/>pot;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>h<sp/>=<sp/>vidHeight;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(temp<sp/>=<sp/>1<sp/>;<sp/>temp<sp/>&lt;<sp/>h<sp/>;<sp/>temp&lt;&lt;=1)<sp/>{</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pot<sp/>=<sp/>(float)temp;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shiftScale.y<sp/>=<sp/>(float)h<sp/>/<sp/>pot;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fullView.shaderParms[4]<sp/>=<sp/>shiftScale.x;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fullView.shaderParms[5]<sp/>=<sp/>shiftScale.y;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameRenderWorld-&gt;RenderScene(<sp/>&amp;portalView<sp/>);</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderSystem-&gt;CaptureRenderToImage(<sp/></highlight><highlight class="stringliteral">&quot;_currentRender&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1460"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>a<sp/>view<sp/>to<sp/>a<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderSystem-&gt;CropRenderSize(<sp/>256,<sp/>256,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameRenderWorld-&gt;RenderScene(<sp/>&amp;fullView<sp/>);</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderSystem-&gt;CaptureRenderToFile(<sp/>shotName<sp/>);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderSystem-&gt;UnCrop();</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1471"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1472"><highlight class="comment">idObjective::Event_Trigger</highlight></codeline>
<codeline lineno="1473"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1474"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idObjective::Event_Trigger(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*activator<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*player<sp/>=<sp/>gameLocal.GetLocalPlayer();</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>player<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Pickup(<sp/>player<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;inv_objective&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>player<sp/>&amp;&amp;<sp/>player-&gt;hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>shotName<sp/>=<sp/>gameLocal.GetMapName();</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shotName.StripFileExtension();</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shotName<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shotName<sp/>+=<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;screenshot&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shotName.SetFileExtension(<sp/></highlight><highlight class="stringliteral">&quot;.tga&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player-&gt;hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;screenshot&quot;</highlight><highlight class="normal">,<sp/>shotName<sp/>);</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player-&gt;hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;objective&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player-&gt;hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;objectivetext&quot;</highlight><highlight class="normal">,<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;objectivetext&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player-&gt;hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;objectivetitle&quot;</highlight><highlight class="normal">,<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;objectivetitle&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player-&gt;GiveObjective(<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;objectivetitle&quot;</highlight><highlight class="normal"><sp/>),<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;objectivetext&quot;</highlight><highlight class="normal"><sp/>),<sp/>shotName<sp/>);</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>tad<sp/>slow<sp/>but<sp/>keeps<sp/>from<sp/>having<sp/>to<sp/>update<sp/>all<sp/>objectives<sp/>in<sp/>all<sp/>maps<sp/>with<sp/>a<sp/>name<sp/>ptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>gameLocal.num_entities;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.entities[<sp/>i<sp/>]<sp/>&amp;&amp;<sp/>gameLocal.entities[<sp/>i<sp/>]-&gt;IsType(<sp/>idObjectiveComplete::Type<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>idStr::Icmp(<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;objectivetitle&quot;</highlight><highlight class="normal"><sp/>),<sp/>gameLocal.entities[<sp/>i<sp/>]-&gt;spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;objectivetitle&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>==<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.entities[<sp/>i<sp/>]-&gt;spawnArgs.SetBool(<sp/></highlight><highlight class="stringliteral">&quot;objEnabled&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventMS(<sp/>&amp;EV_GetPlayerPos,<sp/>2000<sp/>);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1508"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1511"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1512"><highlight class="comment">idObjective::Event_GetPlayerPos</highlight></codeline>
<codeline lineno="1513"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1514"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idObjective::Event_GetPlayerPos()<sp/>{</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*player<sp/>=<sp/>gameLocal.GetLocalPlayer();</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>player<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>playerPos<sp/>=<sp/>player-&gt;GetPhysics()-&gt;GetOrigin();</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventMS(<sp/>&amp;EV_HideObjective,<sp/>100,<sp/>player<sp/>);</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1524"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1525"><highlight class="comment">idObjective::Event_HideObjective</highlight></codeline>
<codeline lineno="1526"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1527"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idObjective::Event_HideObjective(<ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*player<sp/>=<sp/>gameLocal.GetLocalPlayer();</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>player<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>v<sp/>=<sp/>player-&gt;GetPhysics()-&gt;GetOrigin()<sp/>-<sp/>playerPos;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>v.Length()<sp/>&gt;<sp/>64.0f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player-&gt;HideObjective();</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventMS(<sp/>&amp;EV_Remove,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventMS(<sp/>&amp;EV_HideObjective,<sp/>100,<sp/>player<sp/>);</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1542"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="1543"><highlight class="comment"></highlight></codeline>
<codeline lineno="1544"><highlight class="comment"><sp/><sp/>idVideoCDItem</highlight></codeline>
<codeline lineno="1545"><highlight class="comment"></highlight></codeline>
<codeline lineno="1546"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="1547"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal">CLASS_DECLARATION(<sp/>idItem,<sp/><ref refid="classid_video_c_d_item" kindref="compound">idVideoCDItem</ref><sp/>)</highlight></codeline>
<codeline lineno="1550"><highlight class="normal">END_CLASS</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1553"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1554"><highlight class="comment">idVideoCDItem::Spawn</highlight></codeline>
<codeline lineno="1555"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1556"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classid_video_c_d_item" kindref="compound">idVideoCDItem</ref>::Spawn(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1561"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1562"><highlight class="comment">idVideoCDItem::GiveToPlayer</highlight></codeline>
<codeline lineno="1563"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1564"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idVideoCDItem::GiveToPlayer(<sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*player<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>str<sp/>=<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;video&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>player<sp/>&amp;&amp;<sp/>str.Length()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player-&gt;GiveVideo(<sp/>str,<sp/>&amp;spawnArgs<sp/>);</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1574"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="1575"><highlight class="comment"></highlight></codeline>
<codeline lineno="1576"><highlight class="comment"><sp/><sp/>idPDAItem</highlight></codeline>
<codeline lineno="1577"><highlight class="comment"></highlight></codeline>
<codeline lineno="1578"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="1579"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal">CLASS_DECLARATION(<sp/>idItem,<sp/><ref refid="classid_p_d_a_item" kindref="compound">idPDAItem</ref><sp/>)</highlight></codeline>
<codeline lineno="1582"><highlight class="normal">END_CLASS</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1585"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1586"><highlight class="comment">idPDAItem::GiveToPlayer</highlight></codeline>
<codeline lineno="1587"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1588"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classid_p_d_a_item" kindref="compound">idPDAItem</ref>::GiveToPlayer(<ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*player)<sp/>{</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str<sp/>=<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;pda_name&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>player<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player-&gt;GivePDA(<sp/>str,<sp/>&amp;spawnArgs<sp/>);</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1598"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="1599"><highlight class="comment"></highlight></codeline>
<codeline lineno="1600"><highlight class="comment"><sp/><sp/>idMoveableItem</highlight></codeline>
<codeline lineno="1601"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1602"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="1603"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal">CLASS_DECLARATION(<sp/>idItem,<sp/><ref refid="classid_moveable_item" kindref="compound">idMoveableItem</ref><sp/>)</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_DropToFloor,<sp/><sp/><ref refid="classid_moveable_item" kindref="compound">idMoveableItem</ref>::Event_DropToFloor<sp/>)</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Gib,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_moveable_item" kindref="compound">idMoveableItem</ref>::Event_Gib<sp/>)</highlight></codeline>
<codeline lineno="1608"><highlight class="normal">END_CLASS</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1611"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1612"><highlight class="comment">idMoveableItem::idMoveableItem</highlight></codeline>
<codeline lineno="1613"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1614"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><ref refid="classid_moveable_item" kindref="compound">idMoveableItem</ref>::<ref refid="classid_moveable_item" kindref="compound">idMoveableItem</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/>trigger<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/>smoke<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/>smokeTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_D3XP</highlight></codeline>
<codeline lineno="1620"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>nextSoundTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1622"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>CTF</highlight></codeline>
<codeline lineno="1623"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>repeatSmoke<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1625"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1628"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1629"><highlight class="comment">idMoveableItem::~idMoveableItem</highlight></codeline>
<codeline lineno="1630"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1631"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal">idMoveableItem::~idMoveableItem()<sp/>{</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>trigger<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>trigger;</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1639"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1640"><highlight class="comment">idMoveableItem::Save</highlight></codeline>
<codeline lineno="1641"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1642"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idMoveableItem::Save(<sp/><ref refid="classid_save_game" kindref="compound">idSaveGame</ref><sp/>*savefile<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteStaticObject(<sp/>physicsObj<sp/>);</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteClipModel(<sp/>trigger<sp/>);</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteParticle(<sp/>smoke<sp/>);</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>smokeTime<sp/>);</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_D3XP</highlight></codeline>
<codeline lineno="1651"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>nextSoundTime<sp/>);</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1653"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1656"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1657"><highlight class="comment">idMoveableItem::Restore</highlight></codeline>
<codeline lineno="1658"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1659"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idMoveableItem::Restore(<sp/><ref refid="classid_restore_game" kindref="compound">idRestoreGame</ref><sp/>*savefile<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadStaticObject(<sp/>physicsObj<sp/>);</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/>RestorePhysics(<sp/>&amp;physicsObj<sp/>);</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadClipModel(<sp/>trigger<sp/>);</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadParticle(<sp/>smoke<sp/>);</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>smokeTime<sp/>);</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_D3XP</highlight></codeline>
<codeline lineno="1669"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>nextSoundTime<sp/>);</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1671"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1674"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1675"><highlight class="comment">idMoveableItem::Spawn</highlight></codeline>
<codeline lineno="1676"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1677"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idMoveableItem::Spawn(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_trace_model" kindref="compound">idTraceModel</ref><sp/>trm;</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>density,<sp/>friction,<sp/>bouncyness,<sp/>tsize;</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>clipModelName;</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_bounds" kindref="compound">idBounds</ref><sp/>bounds;</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_D3XP</highlight></codeline>
<codeline lineno="1684"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>SetTimeState<sp/>ts(<sp/>timeGroup<sp/>);</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1686"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>trigger<sp/>for<sp/>item<sp/>pickup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnArgs.GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;triggersize&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;16.0&quot;</highlight><highlight class="normal">,<sp/>tsize<sp/>);</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/>trigger<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classid_clip_model" kindref="compound">idClipModel</ref>(<sp/><ref refid="classid_trace_model" kindref="compound">idTraceModel</ref>(<sp/><ref refid="classid_bounds" kindref="compound">idBounds</ref>(<sp/>vec3_origin<sp/>).Expand(<sp/>tsize<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/>trigger-&gt;Link(<sp/>gameLocal.clip,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/>GetPhysics()-&gt;GetOrigin(),<sp/>GetPhysics()-&gt;GetAxis()<sp/>);</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/>trigger-&gt;SetContents(<sp/>CONTENTS_TRIGGER<sp/>);</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>a<sp/>clip<sp/>model<sp/>is<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;clipmodel&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>clipModelName<sp/>);</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!clipModelName[0]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipModelName<sp/>=<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;model&quot;</highlight><highlight class="normal"><sp/>);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>the<sp/>visual<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>the<sp/>trace<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!collisionModelManager-&gt;TrmFromModel(<sp/>clipModelName,<sp/>trm<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Error(<sp/></highlight><highlight class="stringliteral">&quot;idMoveableItem<sp/>&apos;%s&apos;:<sp/>cannot<sp/>load<sp/>collision<sp/>model<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>name.c_str(),<sp/>clipModelName.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"></highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>model<sp/>should<sp/>be<sp/>shrinked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;clipshrink&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trm.Shrink(<sp/>CM_CLIP_EPSILON<sp/>);</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>rigid<sp/>body<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnArgs.GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;density&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0.5&quot;</highlight><highlight class="normal">,<sp/>density<sp/>);</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/>density<sp/>=<sp/>idMath::ClampFloat(<sp/>0.001f,<sp/>1000.0f,<sp/>density<sp/>);</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnArgs.GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;friction&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0.05&quot;</highlight><highlight class="normal">,<sp/>friction<sp/>);</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/>friction<sp/>=<sp/>idMath::ClampFloat(<sp/>0.0f,<sp/>1.0f,<sp/>friction<sp/>);</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnArgs.GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;bouncyness&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0.6&quot;</highlight><highlight class="normal">,<sp/>bouncyness<sp/>);</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/>bouncyness<sp/>=<sp/>idMath::ClampFloat(<sp/>0.0f,<sp/>1.0f,<sp/>bouncyness<sp/>);</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setup<sp/>the<sp/>physics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.SetSelf(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.SetClipModel(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classid_clip_model" kindref="compound">idClipModel</ref>(<sp/>trm<sp/>),<sp/>density<sp/>);</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.SetOrigin(<sp/>GetPhysics()-&gt;GetOrigin()<sp/>);</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.SetAxis(<sp/>GetPhysics()-&gt;GetAxis()<sp/>);</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.SetBouncyness(<sp/>bouncyness<sp/>);</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.SetFriction(<sp/>0.6f,<sp/>0.6f,<sp/>friction<sp/>);</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.SetGravity(<sp/>gameLocal.GetGravity()<sp/>);</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.SetContents(<sp/>CONTENTS_RENDERMODEL<sp/>);</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.SetClipMask(<sp/>MASK_SOLID<sp/>|<sp/>CONTENTS_MOVEABLECLIP<sp/>);</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPhysics(<sp/>&amp;physicsObj<sp/>);</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/>smoke<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/>smokeTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_D3XP</highlight></codeline>
<codeline lineno="1733"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>nextSoundTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1735"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*smokeName<sp/>=<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;smoke_trail&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>*smokeName<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smoke<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classid_decl_particle" kindref="compound">idDeclParticle</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>declManager-&gt;FindType(<sp/>DECL_PARTICLE,<sp/>smokeName<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smokeTime<sp/>=<sp/>gameLocal.time;</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BecomeActive(<sp/>TH_UPDATEPARTICLES<sp/>);</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CTF</highlight></codeline>
<codeline lineno="1743"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>repeatSmoke<sp/>=<sp/>spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;repeatSmoke&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1745"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1748"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1749"><highlight class="comment">idMoveableItem::Think</highlight></codeline>
<codeline lineno="1750"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1751"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idMoveableItem::Think(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/>RunPhysics();</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>thinkFlags<sp/>&amp;<sp/>TH_PHYSICS<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>trigger<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trigger-&gt;Link(<sp/>gameLocal.clip,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>0,<sp/>GetPhysics()-&gt;GetOrigin(),<sp/>mat3_identity<sp/>);</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>thinkFlags<sp/>&amp;<sp/>TH_UPDATEPARTICLES<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.smokeParticles-&gt;EmitSmoke(<sp/>smoke,<sp/>smokeTime,<sp/>gameLocal.random.CRandomFloat(),<sp/>GetPhysics()-&gt;GetOrigin(),<sp/>GetPhysics()-&gt;GetAxis(),<sp/>timeGroup<sp/></highlight><highlight class="comment">/*_D3XP*/</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CTF</highlight></codeline>
<codeline lineno="1764"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!repeatSmoke<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smokeTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BecomeInactive(<sp/>TH_UPDATEPARTICLES<sp/>);</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smokeTime<sp/>=<sp/>gameLocal.time;</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1771"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smokeTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BecomeInactive(<sp/>TH_UPDATEPARTICLES<sp/>);</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1774"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"></highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/>Present();</highlight></codeline>
<codeline lineno="1778"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_D3XP</highlight></codeline>
<codeline lineno="1781"><highlight class="preprocessor"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1782"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="1783"><highlight class="comment">idMoveableItem::Collide</highlight></codeline>
<codeline lineno="1784"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="1785"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idMoveableItem::Collide(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtrace__s" kindref="compound">trace_t</ref><sp/>&amp;collision,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;velocity<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v,<sp/>f;</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/>-(<sp/>velocity<sp/>*<sp/>collision.c.normal<sp/>);</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>v<sp/>&gt;<sp/>80<sp/>&amp;&amp;<sp/>gameLocal.time<sp/>&gt;<sp/>nextSoundTime<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>v<sp/>&gt;<sp/>200<sp/>?<sp/>1.0f<sp/>:<sp/>idMath::Sqrt(<sp/>v<sp/>-<sp/>80<sp/>)<sp/>*<sp/>0.091f;</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>StartSound(<sp/></highlight><highlight class="stringliteral">&quot;snd_bounce&quot;</highlight><highlight class="normal">,<sp/>SND_CHANNEL_ANY,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>set<sp/>the<sp/>volume<sp/>unless<sp/>there<sp/>is<sp/>a<sp/>bounce<sp/>sound<sp/>as<sp/>it<sp/>overrides<sp/>the<sp/>entire<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>causes<sp/>footsteps<sp/>on<sp/>ai&apos;s<sp/>to<sp/>not<sp/>honor<sp/>their<sp/>shader<sp/>parms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSoundVolume(<sp/>f<sp/>);</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextSoundTime<sp/>=<sp/>gameLocal.time<sp/>+<sp/>500;</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1801"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1803"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1805"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1806"><highlight class="comment">idMoveableItem::Pickup</highlight></codeline>
<codeline lineno="1807"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1808"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idMoveableItem::Pickup(<sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*player<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>idItem::Pickup(<sp/>player<sp/>);</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trigger-&gt;SetContents(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1818"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1819"><highlight class="comment">idMoveableItem::DropItem</highlight></codeline>
<codeline lineno="1820"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1821"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*idMoveableItem::DropItem(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*classname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;origin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/>&amp;axis,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;velocity,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>activateDelay,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>removeDelay<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/>args;</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*item;</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/>args.Set(<sp/></highlight><highlight class="stringliteral">&quot;classname&quot;</highlight><highlight class="normal">,<sp/>classname<sp/>);</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/>args.Set(<sp/></highlight><highlight class="stringliteral">&quot;dropped&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>sometimes<sp/>drop<sp/>idMoveables<sp/>here,<sp/>so<sp/>set<sp/>&apos;nodrop&apos;<sp/>to<sp/>1<sp/>so<sp/>that<sp/>it<sp/>doesn&apos;t<sp/>get<sp/>put<sp/>on<sp/>the<sp/>floor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/>args.Set(<sp/></highlight><highlight class="stringliteral">&quot;nodrop&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>activateDelay<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.SetBool(<sp/></highlight><highlight class="stringliteral">&quot;triggerFirst&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/>gameLocal.SpawnEntityDef(<sp/>args,<sp/>&amp;item<sp/>);</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>item<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>item<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item-&gt;GetPhysics()-&gt;SetOrigin(<sp/>origin<sp/>);</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item-&gt;GetPhysics()-&gt;SetAxis(<sp/>axis<sp/>);</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item-&gt;GetPhysics()-&gt;SetLinearVelocity(<sp/>velocity<sp/>);</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item-&gt;UpdateVisuals();</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>activateDelay<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item-&gt;PostEventMS(<sp/>&amp;EV_Activate,<sp/>activateDelay,<sp/>item<sp/>);</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!removeDelay<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>removeDelay<sp/>=<sp/>5<sp/>*<sp/>60<sp/>*<sp/>1000;</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>always<sp/>remove<sp/>a<sp/>dropped<sp/>item<sp/>after<sp/>5<sp/>minutes<sp/>in<sp/>case<sp/>it<sp/>dropped<sp/>to<sp/>an<sp/>unreachable<sp/>location</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item-&gt;PostEventMS(<sp/>&amp;EV_Remove,<sp/>removeDelay<sp/>);</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item;</highlight></codeline>
<codeline lineno="1853"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1856"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1857"><highlight class="comment">idMoveableItem::DropItems</highlight></codeline>
<codeline lineno="1858"><highlight class="comment"></highlight></codeline>
<codeline lineno="1859"><highlight class="comment"><sp/><sp/>The<sp/>entity<sp/>should<sp/>have<sp/>the<sp/>following<sp/>key/value<sp/>pairs<sp/>set:</highlight></codeline>
<codeline lineno="1860"><highlight class="comment"><sp/><sp/><sp/><sp/>&quot;def_drop&lt;type&gt;Item&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;item<sp/>def&quot;</highlight></codeline>
<codeline lineno="1861"><highlight class="comment"><sp/><sp/><sp/><sp/>&quot;drop&lt;type&gt;ItemJoint&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;joint<sp/>name&quot;</highlight></codeline>
<codeline lineno="1862"><highlight class="comment"><sp/><sp/><sp/><sp/>&quot;drop&lt;type&gt;ItemRotation&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;pitch<sp/>yaw<sp/>roll&quot;</highlight></codeline>
<codeline lineno="1863"><highlight class="comment"><sp/><sp/><sp/><sp/>&quot;drop&lt;type&gt;ItemOffset&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;x<sp/>y<sp/>z&quot;</highlight></codeline>
<codeline lineno="1864"><highlight class="comment"><sp/><sp/><sp/><sp/>&quot;skin_drop&lt;type&gt;&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;skin<sp/>name&quot;</highlight></codeline>
<codeline lineno="1865"><highlight class="comment"><sp/><sp/>To<sp/>drop<sp/>multiple<sp/>items<sp/>the<sp/>following<sp/>key/value<sp/>pairs<sp/>can<sp/>be<sp/>used:</highlight></codeline>
<codeline lineno="1866"><highlight class="comment"><sp/><sp/><sp/><sp/>&quot;def_drop&lt;type&gt;Item&lt;X&gt;&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;item<sp/>def&quot;</highlight></codeline>
<codeline lineno="1867"><highlight class="comment"><sp/><sp/><sp/><sp/>&quot;drop&lt;type&gt;Item&lt;X&gt;Joint&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;joint<sp/>name&quot;</highlight></codeline>
<codeline lineno="1868"><highlight class="comment"><sp/><sp/><sp/><sp/>&quot;drop&lt;type&gt;Item&lt;X&gt;Rotation&quot;<sp/><sp/><sp/><sp/><sp/>&quot;pitch<sp/>yaw<sp/>roll&quot;</highlight></codeline>
<codeline lineno="1869"><highlight class="comment"><sp/><sp/><sp/><sp/>&quot;drop&lt;type&gt;Item&lt;X&gt;Offset&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;x<sp/>y<sp/>z&quot;</highlight></codeline>
<codeline lineno="1870"><highlight class="comment"><sp/><sp/>where<sp/>&lt;X&gt;<sp/>is<sp/>an<sp/>aribtrary<sp/>string.</highlight></codeline>
<codeline lineno="1871"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1872"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1873"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idMoveableItem::DropItems(<sp/><ref refid="classid_animated_entity" kindref="compound">idAnimatedEntity</ref><sp/><sp/>*ent,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*type,<sp/><ref refid="classid_list" kindref="compound">idList&lt;idEntity *&gt;</ref><sp/>*list<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_key_value" kindref="compound">idKeyValue</ref><sp/>*kv;</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*skinName,<sp/>*c,<sp/>*jointName;</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>key,<sp/>key2;</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>origin;</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/>axis;</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_angles" kindref="compound">idAngles</ref><sp/>angles;</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_decl_skin" kindref="compound">idDeclSkin</ref><sp/>*skin;</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/>jointHandle_t<sp/>joint;</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*item;</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drop<sp/>all<sp/>items</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/>kv<sp/>=<sp/>ent-&gt;spawnArgs.MatchPrefix(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;def_drop%sItem&quot;</highlight><highlight class="normal">,<sp/>type<sp/>),<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>kv<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>kv-&gt;GetKey().c_str()<sp/>+<sp/>kv-&gt;GetKey().Length();</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>idStr::Icmp(<sp/>c<sp/>-<sp/>5,<sp/></highlight><highlight class="stringliteral">&quot;Joint&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>idStr::Icmp(<sp/>c<sp/>-<sp/>8,<sp/></highlight><highlight class="stringliteral">&quot;Rotation&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>kv-&gt;GetKey().c_str()<sp/>+<sp/>4;</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key2<sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Joint&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key2<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Offset&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jointName<sp/>=<sp/>ent-&gt;spawnArgs.GetString(<sp/>key<sp/>);</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>joint<sp/>=<sp/>ent-&gt;GetAnimator()-&gt;GetJointHandle(<sp/>jointName<sp/>);</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!ent-&gt;GetJointWorldTransform(<sp/>joint,<sp/>gameLocal.time,<sp/>origin,<sp/>axis<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Warning(<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>refers<sp/>to<sp/>invalid<sp/>joint<sp/>&apos;%s&apos;<sp/>on<sp/>entity<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>key.c_str(),<sp/>jointName,<sp/>ent-&gt;name.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>origin<sp/>=<sp/>ent-&gt;GetPhysics()-&gt;GetOrigin();</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axis<sp/>=<sp/>ent-&gt;GetPhysics()-&gt;GetAxis();</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>g_dropItemRotation.GetString()[0]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angles.Zero();</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(<sp/>g_dropItemRotation.GetString(),<sp/></highlight><highlight class="stringliteral">&quot;%f<sp/>%f<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>&amp;angles.pitch,<sp/>&amp;angles.yaw,<sp/>&amp;angles.roll<sp/>);</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>kv-&gt;GetKey().c_str()<sp/>+<sp/>4;</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Rotation&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;spawnArgs.GetAngles(<sp/>key,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>0<sp/>0&quot;</highlight><highlight class="normal">,<sp/>angles<sp/>);</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axis<sp/>=<sp/>angles.ToMat3()<sp/>*<sp/>axis;</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>origin<sp/>+=<sp/>ent-&gt;spawnArgs.GetVector(<sp/>key2,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>0<sp/>0&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>DropItem(<sp/>kv-&gt;GetValue(),<sp/>origin,<sp/>axis,<sp/>vec3_origin,<sp/>0,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>list<sp/>&amp;&amp;<sp/>item<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list-&gt;Append(<sp/>item<sp/>);</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kv<sp/>=<sp/>ent-&gt;spawnArgs.MatchPrefix(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;def_drop%sItem&quot;</highlight><highlight class="normal">,<sp/>type<sp/>),<sp/>kv<sp/>);</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"></highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>change<sp/>the<sp/>skin<sp/>to<sp/>hide<sp/>all<sp/>items</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/>skinName<sp/>=<sp/>ent-&gt;spawnArgs.GetString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;skin_drop%s&quot;</highlight><highlight class="normal">,<sp/>type<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>skinName[0]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skin<sp/>=<sp/>declManager-&gt;FindSkin(<sp/>skinName<sp/>);</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;SetSkin(<sp/>skin<sp/>);</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1929"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1932"><highlight class="comment">======================</highlight></codeline>
<codeline lineno="1933"><highlight class="comment">idMoveableItem::WriteToSnapshot</highlight></codeline>
<codeline lineno="1934"><highlight class="comment">======================</highlight></codeline>
<codeline lineno="1935"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idMoveableItem::WriteToSnapshot(<sp/><ref refid="classid_bit_msg_delta" kindref="compound">idBitMsgDelta</ref><sp/>&amp;msg<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.WriteToSnapshot(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="1938"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1941"><highlight class="comment">======================</highlight></codeline>
<codeline lineno="1942"><highlight class="comment">idMoveableItem::ReadFromSnapshot</highlight></codeline>
<codeline lineno="1943"><highlight class="comment">======================</highlight></codeline>
<codeline lineno="1944"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idMoveableItem::ReadFromSnapshot(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_bit_msg_delta" kindref="compound">idBitMsgDelta</ref><sp/>&amp;msg<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.ReadFromSnapshot(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>msg.HasChanged()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateVisuals();</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1953"><highlight class="comment">============</highlight></codeline>
<codeline lineno="1954"><highlight class="comment">idMoveableItem::Gib</highlight></codeline>
<codeline lineno="1955"><highlight class="comment">============</highlight></codeline>
<codeline lineno="1956"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idMoveableItem::Gib(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;dir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*damageDefName<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>spawn<sp/>smoke<sp/>puff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*smokeName<sp/>=<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;smoke_gib&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>*smokeName<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_decl_particle" kindref="compound">idDeclParticle</ref><sp/>*smoke<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classid_decl_particle" kindref="compound">idDeclParticle</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>declManager-&gt;FindType(<sp/>DECL_PARTICLE,<sp/>smokeName<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.smokeParticles-&gt;EmitSmoke(<sp/>smoke,<sp/>gameLocal.time,<sp/>gameLocal.random.CRandomFloat(),<sp/>renderEntity.origin,<sp/>renderEntity.axis,<sp/>timeGroup<sp/></highlight><highlight class="comment">/*_D3XP*/</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>the<sp/>entity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/>PostEventMS(<sp/>&amp;EV_Remove,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1966"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"></highlight></codeline>
<codeline lineno="1968"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1969"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1970"><highlight class="comment">idMoveableItem::Event_DropToFloor</highlight></codeline>
<codeline lineno="1971"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1972"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1973"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idMoveableItem::Event_DropToFloor(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>physics<sp/>will<sp/>drop<sp/>the<sp/>moveable<sp/>to<sp/>the<sp/>floor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1975"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"></highlight></codeline>
<codeline lineno="1977"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1978"><highlight class="comment">============</highlight></codeline>
<codeline lineno="1979"><highlight class="comment">idMoveableItem::Event_Gib</highlight></codeline>
<codeline lineno="1980"><highlight class="comment">============</highlight></codeline>
<codeline lineno="1981"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1982"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idMoveableItem::Event_Gib(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*damageDefName<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/>Gib(<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(<sp/>0,<sp/>0,<sp/>1<sp/>),<sp/>damageDefName<sp/>);</highlight></codeline>
<codeline lineno="1984"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1987"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="1988"><highlight class="comment"></highlight></codeline>
<codeline lineno="1989"><highlight class="comment"><sp/><sp/>idMoveablePDAItem</highlight></codeline>
<codeline lineno="1990"><highlight class="comment"></highlight></codeline>
<codeline lineno="1991"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="1992"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1993"><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal">CLASS_DECLARATION(<sp/><ref refid="classid_moveable_item" kindref="compound">idMoveableItem</ref>,<sp/><ref refid="classid_moveable_p_d_a_item" kindref="compound">idMoveablePDAItem</ref><sp/>)</highlight></codeline>
<codeline lineno="1995"><highlight class="normal">END_CLASS</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"></highlight></codeline>
<codeline lineno="1997"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1998"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1999"><highlight class="comment">idMoveablePDAItem::GiveToPlayer</highlight></codeline>
<codeline lineno="2000"><highlight class="comment">================</highlight></codeline>
<codeline lineno="2001"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2002"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classid_moveable_p_d_a_item" kindref="compound">idMoveablePDAItem</ref>::GiveToPlayer(<ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*player)<sp/>{</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str<sp/>=<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;pda_name&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>player<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player-&gt;GivePDA(<sp/>str,<sp/>&amp;spawnArgs<sp/>);</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2008"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"></highlight></codeline>
<codeline lineno="2010"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2011"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="2012"><highlight class="comment"></highlight></codeline>
<codeline lineno="2013"><highlight class="comment"><sp/><sp/>idItemRemover</highlight></codeline>
<codeline lineno="2014"><highlight class="comment"></highlight></codeline>
<codeline lineno="2015"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="2016"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2017"><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="normal">CLASS_DECLARATION(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref>,<sp/><ref refid="classid_item_remover" kindref="compound">idItemRemover</ref><sp/>)</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Activate,<sp/><sp/><sp/><sp/><sp/><ref refid="classid_item_remover" kindref="compound">idItemRemover</ref>::Event_Trigger<sp/>)</highlight></codeline>
<codeline lineno="2020"><highlight class="normal">END_CLASS</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"></highlight></codeline>
<codeline lineno="2022"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2023"><highlight class="comment">================</highlight></codeline>
<codeline lineno="2024"><highlight class="comment">idItemRemover::Spawn</highlight></codeline>
<codeline lineno="2025"><highlight class="comment">================</highlight></codeline>
<codeline lineno="2026"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classid_item_remover" kindref="compound">idItemRemover</ref>::Spawn(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2028"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2031"><highlight class="comment">================</highlight></codeline>
<codeline lineno="2032"><highlight class="comment">idItemRemover::RemoveItem</highlight></codeline>
<codeline lineno="2033"><highlight class="comment">================</highlight></codeline>
<codeline lineno="2034"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2035"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItemRemover::RemoveItem(<sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*player<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">remove</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal"><sp/>=<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;remove&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/>player-&gt;RemoveInventoryItem(<sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2040"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2043"><highlight class="comment">================</highlight></codeline>
<codeline lineno="2044"><highlight class="comment">idItemRemover::Event_Trigger</highlight></codeline>
<codeline lineno="2045"><highlight class="comment">================</highlight></codeline>
<codeline lineno="2046"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idItemRemover::Event_Trigger(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*activator<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>activator-&gt;IsType(<sp/>idPlayer::Type<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RemoveItem(<sp/>static_cast&lt;idPlayer<sp/>*&gt;(activator)<sp/>);</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2051"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"></highlight></codeline>
<codeline lineno="2053"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2054"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="2055"><highlight class="comment"></highlight></codeline>
<codeline lineno="2056"><highlight class="comment"><sp/><sp/>idObjectiveComplete</highlight></codeline>
<codeline lineno="2057"><highlight class="comment"></highlight></codeline>
<codeline lineno="2058"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="2059"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"></highlight></codeline>
<codeline lineno="2061"><highlight class="normal">CLASS_DECLARATION(<sp/><ref refid="classid_item_remover" kindref="compound">idItemRemover</ref>,<sp/><ref refid="classid_objective_complete" kindref="compound">idObjectiveComplete</ref><sp/>)</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Activate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_objective_complete" kindref="compound">idObjectiveComplete</ref>::Event_Trigger<sp/>)</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_HideObjective,<sp/><sp/><sp/><sp/><ref refid="classid_objective_complete" kindref="compound">idObjectiveComplete</ref>::Event_HideObjective<sp/>)</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_GetPlayerPos,<sp/><sp/><sp/><sp/><sp/><ref refid="classid_objective_complete" kindref="compound">idObjectiveComplete</ref>::Event_GetPlayerPos<sp/>)</highlight></codeline>
<codeline lineno="2065"><highlight class="normal">END_CLASS</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"></highlight></codeline>
<codeline lineno="2067"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2068"><highlight class="comment">================</highlight></codeline>
<codeline lineno="2069"><highlight class="comment">idObjectiveComplete::idObjectiveComplete</highlight></codeline>
<codeline lineno="2070"><highlight class="comment">================</highlight></codeline>
<codeline lineno="2071"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><ref refid="classid_objective_complete" kindref="compound">idObjectiveComplete</ref>::<ref refid="classid_objective_complete" kindref="compound">idObjectiveComplete</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/>playerPos.Zero();</highlight></codeline>
<codeline lineno="2074"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"></highlight></codeline>
<codeline lineno="2076"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2077"><highlight class="comment">================</highlight></codeline>
<codeline lineno="2078"><highlight class="comment">idObjectiveComplete::Save</highlight></codeline>
<codeline lineno="2079"><highlight class="comment">================</highlight></codeline>
<codeline lineno="2080"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idObjectiveComplete::Save(<sp/><ref refid="classid_save_game" kindref="compound">idSaveGame</ref><sp/>*savefile<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteVec3(<sp/>playerPos<sp/>);</highlight></codeline>
<codeline lineno="2083"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2086"><highlight class="comment">================</highlight></codeline>
<codeline lineno="2087"><highlight class="comment">idObjectiveComplete::Restore</highlight></codeline>
<codeline lineno="2088"><highlight class="comment">================</highlight></codeline>
<codeline lineno="2089"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2090"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idObjectiveComplete::Restore(<sp/><ref refid="classid_restore_game" kindref="compound">idRestoreGame</ref><sp/>*savefile<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadVec3(<sp/>playerPos<sp/>);</highlight></codeline>
<codeline lineno="2092"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"></highlight></codeline>
<codeline lineno="2094"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2095"><highlight class="comment">================</highlight></codeline>
<codeline lineno="2096"><highlight class="comment">idObjectiveComplete::Spawn</highlight></codeline>
<codeline lineno="2097"><highlight class="comment">================</highlight></codeline>
<codeline lineno="2098"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2099"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idObjectiveComplete::Spawn(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnArgs.SetBool(<sp/></highlight><highlight class="stringliteral">&quot;objEnabled&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/>Hide();</highlight></codeline>
<codeline lineno="2102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"></highlight></codeline>
<codeline lineno="2104"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2105"><highlight class="comment">================</highlight></codeline>
<codeline lineno="2106"><highlight class="comment">idObjectiveComplete::Event_Trigger</highlight></codeline>
<codeline lineno="2107"><highlight class="comment">================</highlight></codeline>
<codeline lineno="2108"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idObjectiveComplete::Event_Trigger(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*activator<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;objEnabled&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*player<sp/>=<sp/>gameLocal.GetLocalPlayer();</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>player<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RemoveItem(<sp/>player<sp/>);</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"></highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;inv_objective&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>player-&gt;hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player-&gt;hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;objective&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"></highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player-&gt;hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;objectivetext&quot;</highlight><highlight class="normal">,<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;objectivetext&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_D3XP</highlight></codeline>
<codeline lineno="2123"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player-&gt;hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;objectivecompletetitle&quot;</highlight><highlight class="normal">,<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;objectivetitle&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="2125"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player-&gt;hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;objectivetitle&quot;</highlight><highlight class="normal">,<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;objectivetitle&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2127"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player-&gt;CompleteObjective(<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;objectivetitle&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventMS(<sp/>&amp;EV_GetPlayerPos,<sp/>2000<sp/>);</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"></highlight></codeline>
<codeline lineno="2134"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2135"><highlight class="comment">================</highlight></codeline>
<codeline lineno="2136"><highlight class="comment">idObjectiveComplete::Event_GetPlayerPos</highlight></codeline>
<codeline lineno="2137"><highlight class="comment">================</highlight></codeline>
<codeline lineno="2138"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2139"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idObjectiveComplete::Event_GetPlayerPos()<sp/>{</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*player<sp/>=<sp/>gameLocal.GetLocalPlayer();</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>player<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>playerPos<sp/>=<sp/>player-&gt;GetPhysics()-&gt;GetOrigin();</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventMS(<sp/>&amp;EV_HideObjective,<sp/>100,<sp/>player<sp/>);</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"></highlight></codeline>
<codeline lineno="2147"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2148"><highlight class="comment">================</highlight></codeline>
<codeline lineno="2149"><highlight class="comment">idObjectiveComplete::Event_HideObjective</highlight></codeline>
<codeline lineno="2150"><highlight class="comment">================</highlight></codeline>
<codeline lineno="2151"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2152"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idObjectiveComplete::Event_HideObjective(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*e<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*player<sp/>=<sp/>gameLocal.GetLocalPlayer();</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>player<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>v<sp/>=<sp/>player-&gt;GetPhysics()-&gt;GetOrigin();</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>-=<sp/>playerPos;</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>v.Length()<sp/>&gt;<sp/>64.0f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player-&gt;hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;closeObjective&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventMS(<sp/>&amp;EV_Remove,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventMS(<sp/>&amp;EV_HideObjective,<sp/>100,<sp/>player<sp/>);</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2164"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/d3xp/Item.cpp"/>
  </compounddef>
</doxygen>
