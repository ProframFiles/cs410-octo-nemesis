<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="debugger_8cpp" kind="file">
    <compoundname>debugger.cpp</compoundname>
    <includes refid="precompiled_8h" local="yes">../../idlib/precompiled.h</includes>
    <includes refid="_debugger__resource_8h" local="yes">../../sys/win32/rc/debugger_resource.h</includes>
    <includes refid="_debugger_app_8h" local="yes">DebuggerApp.h</includes>
    <includes refid="_debugger_server_8h" local="yes">DebuggerServer.h</includes>
      <sectiondef kind="var">
      <memberdef kind="variable" id="debugger_8cpp_1a591681b7520b57a63722a1d7b431356f" prot="public" static="no" mutable="no">
        <type><ref refid="classrv_debugger_app" kindref="compound">rvDebuggerApp</ref></type>
        <definition>rvDebuggerApp gDebuggerApp</definition>
        <argsstring></argsstring>
        <name>gDebuggerApp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" line="38" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="debugger_8cpp_1a53296533434a6e4f4b167c12fd3575e8" prot="public" static="no" mutable="no">
        <type>HWND</type>
        <definition>HWND gDebuggerWindow</definition>
        <argsstring></argsstring>
        <name>gDebuggerWindow</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" line="39" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="debugger_8cpp_1a33fcc29cf1f284904bb7745cdd91b205" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool gDebuggerSuspend</definition>
        <argsstring></argsstring>
        <name>gDebuggerSuspend</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" line="40" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="debugger_8cpp_1ac1436ba9fe1ee7a35b03cc1e00845a9c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool gDebuggerConnnected</definition>
        <argsstring></argsstring>
        <name>gDebuggerConnnected</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" line="41" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="debugger_8cpp_1ac62040c7c480a2bf58b5633d26a5bf36" prot="public" static="no" mutable="no">
        <type>HANDLE</type>
        <definition>HANDLE gDebuggerGameThread</definition>
        <argsstring></argsstring>
        <name>gDebuggerGameThread</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" line="42" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="debugger_8cpp_1a73feb02fe79f927bdbb259c81d9af64b" prot="public" static="no" mutable="no">
        <type><ref refid="classrv_debugger_server" kindref="compound">rvDebuggerServer</ref> *</type>
        <definition>rvDebuggerServer* gDebuggerServer</definition>
        <argsstring></argsstring>
        <name>gDebuggerServer</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" line="44" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="debugger_8cpp_1ad3bd7d2acbedcd0fe4f6bf9576ecc69c" prot="public" static="no" mutable="no">
        <type>HANDLE</type>
        <definition>HANDLE gDebuggerServerThread</definition>
        <argsstring></argsstring>
        <name>gDebuggerServerThread</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" line="45" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="debugger_8cpp_1adc89c04ea86844b749a0bf1171b3ba9a" prot="public" static="no" mutable="no">
        <type>DWORD</type>
        <definition>DWORD gDebuggerServerThreadID</definition>
        <argsstring></argsstring>
        <name>gDebuggerServerThreadID</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" line="46" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="debugger_8cpp_1af4fcc529d3c79d2ced008c2f82df2f08" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool gDebuggerServerQuit</definition>
        <argsstring></argsstring>
        <name>gDebuggerServerQuit</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" line="47" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="debugger_8cpp_1a8e8d78e54123c0333bc8644464c8754c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DWORD CALLBACK</type>
        <definition>DWORD CALLBACK DebuggerThread</definition>
        <argsstring>(LPVOID param)</argsstring>
        <name>DebuggerThread</name>
        <param>
          <type>LPVOID</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="debugger_8cpp_1ad8818d271af6d59ed518cd67f2bc1a6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DebuggerClientInit</definition>
        <argsstring>(const char *cmdline)</argsstring>
        <name>DebuggerClientInit</name>
        <param>
          <type>const char *</type>
          <declname>cmdline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" line="56" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" bodystart="56" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="debugger_8cpp_1a9c323d0f6d528bc72c5de893108eabab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DebuggerClientLaunch</definition>
        <argsstring>(void)</argsstring>
        <name>DebuggerClientLaunch</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" line="84" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" bodystart="84" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="debugger_8cpp_1a04881609b354bc436e9c443d96ab776e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DWORD CALLBACK</type>
        <definition>DWORD CALLBACK DebuggerServerThread</definition>
        <argsstring>(LPVOID param)</argsstring>
        <name>DebuggerServerThread</name>
        <param>
          <type>LPVOID</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" line="124" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" bodystart="124" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="debugger_8cpp_1a09e1b42bb590f24aa74ac9e0c19d5d6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DebuggerServerInit</definition>
        <argsstring>(void)</argsstring>
        <name>DebuggerServerInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" line="144" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" bodystart="144" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="debugger_8cpp_1a48edfac2e222b9839206895412abb304" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DebuggerServerShutdown</definition>
        <argsstring>(void)</argsstring>
        <name>DebuggerServerShutdown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" line="180" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" bodystart="180" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="debugger_8cpp_1a211f541535764d1fa80a3722024db1b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DebuggerServerCheckBreakpoint</definition>
        <argsstring>(idInterpreter *interpreter, idProgram *program, int instructionPointer)</argsstring>
        <name>DebuggerServerCheckBreakpoint</name>
        <param>
          <type><ref refid="classid_interpreter" kindref="compound">idInterpreter</ref> *</type>
          <declname>interpreter</declname>
        </param>
        <param>
          <type><ref refid="classid_program" kindref="compound">idProgram</ref> *</type>
          <declname>program</declname>
        </param>
        <param>
          <type>int</type>
          <declname>instructionPointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" line="209" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" bodystart="209" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="debugger_8cpp_1a48f51b53fd1874ec138bd7abe4387cdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DebuggerServerPrint</definition>
        <argsstring>(const char *text)</argsstring>
        <name>DebuggerServerPrint</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" line="226" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp" bodystart="226" bodyend="234"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../idlib/precompiled.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>hdrstop</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../sys/win32/rc/debugger_resource.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;DebuggerApp.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;DebuggerServer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">DWORD<sp/>CALLBACK<sp/>DebuggerThread<sp/>(<sp/>LPVOID<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><ref refid="classrv_debugger_app" kindref="compound">rvDebuggerApp</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gDebuggerApp;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">HWND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gDebuggerWindow<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gDebuggerSuspend<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gDebuggerConnnected<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">HANDLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gDebuggerGameThread<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="classrv_debugger_server" kindref="compound">rvDebuggerServer</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gDebuggerServer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">HANDLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gDebuggerServerThread<sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">DWORD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gDebuggerServerThreadID<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gDebuggerServerQuit<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="50"><highlight class="comment">================</highlight></codeline>
<codeline lineno="51"><highlight class="comment">DebuggerMain</highlight></codeline>
<codeline lineno="52"><highlight class="comment"></highlight></codeline>
<codeline lineno="53"><highlight class="comment">Main<sp/>entry<sp/>point<sp/>for<sp/>the<sp/>debugger<sp/>application</highlight></codeline>
<codeline lineno="54"><highlight class="comment">================</highlight></codeline>
<codeline lineno="55"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DebuggerClientInit(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cmdline<sp/>)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>if<sp/>the<sp/>debugger<sp/>is<sp/>already<sp/>running</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>rvDebuggerWindow::Activate<sp/>(<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>DebuggerClientInitDone;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gDebuggerApp.Initialize<sp/>(<sp/>win32.hInstance<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>DebuggerClientInitDone;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>gDebuggerApp.Run<sp/>(<sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">DebuggerClientInitDone:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Quit();</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="77"><highlight class="comment">================</highlight></codeline>
<codeline lineno="78"><highlight class="comment">DebuggerLaunch</highlight></codeline>
<codeline lineno="79"><highlight class="comment"></highlight></codeline>
<codeline lineno="80"><highlight class="comment">Launches<sp/>another<sp/>instance<sp/>of<sp/>the<sp/>running<sp/>executable<sp/>with<sp/>+debugger<sp/>appended</highlight></codeline>
<codeline lineno="81"><highlight class="comment">to<sp/>the<sp/>end<sp/>to<sp/>indicate<sp/>that<sp/>the<sp/>debugger<sp/>should<sp/>start<sp/>up.</highlight></codeline>
<codeline lineno="82"><highlight class="comment">================</highlight></codeline>
<codeline lineno="83"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DebuggerClientLaunch<sp/>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>renderSystem-&gt;IsFullScreen()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>run<sp/>the<sp/>script<sp/>debugger<sp/>in<sp/>fullscreen<sp/>mode.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Set<sp/>r_fullscreen<sp/>to<sp/>0<sp/>and<sp/>vid_restart.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>if<sp/>the<sp/>debugger<sp/>is<sp/>already<sp/>running</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>rvDebuggerWindow::Activate<sp/>(<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>exeFile[MAX_PATH];</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>curDir[MAX_PATH];</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>STARTUPINFO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startup;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>PROCESS_INFORMATION<sp/>process;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>ZeroMemory<sp/>(<sp/>&amp;startup,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(startup)<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>startup.cb<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(startup);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>GetCurrentDirectory<sp/>(<sp/>MAX_PATH,<sp/>curDir<sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>GetModuleFileName<sp/>(<sp/>NULL,<sp/>exeFile,<sp/>MAX_PATH<sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s<sp/>=<sp/>va(</highlight><highlight class="stringliteral">&quot;%s<sp/>+set<sp/>fs_game<sp/>%s<sp/>+set<sp/>fs_cdpath<sp/>%s<sp/>+debugger&quot;</highlight><highlight class="normal">,<sp/>exeFile,<sp/>cvarSystem-&gt;GetCVarString(<sp/></highlight><highlight class="stringliteral">&quot;fs_game&quot;</highlight><highlight class="normal"><sp/>),<sp/>cvarSystem-&gt;GetCVarString(<sp/></highlight><highlight class="stringliteral">&quot;fs_cdpath&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>CreateProcess<sp/>(<sp/>NULL,<sp/>(LPSTR)s,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>FALSE,<sp/>0,<sp/>NULL,<sp/>curDir,<sp/>&amp;startup,<sp/>&amp;process<sp/>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>CloseHandle<sp/>(<sp/>process.hThread<sp/>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>CloseHandle<sp/>(<sp/>process.hProcess<sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="118"><highlight class="comment">================</highlight></codeline>
<codeline lineno="119"><highlight class="comment">DebuggerServerThread</highlight></codeline>
<codeline lineno="120"><highlight class="comment"></highlight></codeline>
<codeline lineno="121"><highlight class="comment">Thread<sp/>proc<sp/>for<sp/>the<sp/>debugger<sp/>server</highlight></codeline>
<codeline lineno="122"><highlight class="comment">================</highlight></codeline>
<codeline lineno="123"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">DWORD<sp/>CALLBACK<sp/>DebuggerServerThread<sp/>(<sp/>LPVOID<sp/>param<sp/>)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>assert<sp/>(<sp/>gDebuggerServer<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>!gDebuggerServerQuit<sp/>)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gDebuggerServer-&gt;ProcessMessages<sp/>(<sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sleep<sp/>(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="138"><highlight class="comment">================</highlight></codeline>
<codeline lineno="139"><highlight class="comment">DebuggerServerInit</highlight></codeline>
<codeline lineno="140"><highlight class="comment"></highlight></codeline>
<codeline lineno="141"><highlight class="comment">Starts<sp/>up<sp/>the<sp/>debugger<sp/>server</highlight></codeline>
<codeline lineno="142"><highlight class="comment">================</highlight></codeline>
<codeline lineno="143"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>DebuggerServerInit<sp/>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dont<sp/>do<sp/>this<sp/>if<sp/>we<sp/>are<sp/>in<sp/>the<sp/>debugger<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>com_editors<sp/>&amp;<sp/>EDITOR_DEBUGGER<sp/>)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>the<sp/>new<sp/>debugger<sp/>server</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>gDebuggerServer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classrv_debugger_server" kindref="compound">rvDebuggerServer</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gDebuggerServer<sp/>)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>debugger<sp/>server</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gDebuggerServer-&gt;Initialize<sp/>(<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>gDebuggerServer;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gDebuggerServer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>the<sp/>debugger<sp/>server<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>gDebuggerServerThread<sp/>=<sp/>CreateThread<sp/>(<sp/>NULL,<sp/>0,<sp/>DebuggerServerThread,<sp/>0,<sp/>0,<sp/>&amp;gDebuggerServerThreadID<sp/>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="174"><highlight class="comment">================</highlight></codeline>
<codeline lineno="175"><highlight class="comment">DebuggerServerShutdown</highlight></codeline>
<codeline lineno="176"><highlight class="comment"></highlight></codeline>
<codeline lineno="177"><highlight class="comment">Shuts<sp/>down<sp/>the<sp/>debugger<sp/>server</highlight></codeline>
<codeline lineno="178"><highlight class="comment">================</highlight></codeline>
<codeline lineno="179"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DebuggerServerShutdown<sp/>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gDebuggerServerThread<sp/>)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Signal<sp/>the<sp/>debugger<sp/>server<sp/>to<sp/>quit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gDebuggerServerQuit<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>the<sp/>thread<sp/>to<sp/>finish</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WaitForSingleObject<sp/>(<sp/>gDebuggerServerThread,<sp/>INFINITE<sp/>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shutdown<sp/>the<sp/>server<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gDebuggerServer-&gt;Shutdown();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>gDebuggerServer;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gDebuggerServer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cleanup<sp/>the<sp/>thread<sp/>handle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CloseHandle<sp/>(<sp/>gDebuggerServerThread<sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gDebuggerServerThread<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="203"><highlight class="comment">================</highlight></codeline>
<codeline lineno="204"><highlight class="comment">DebuggerServerCheckBreakpoint</highlight></codeline>
<codeline lineno="205"><highlight class="comment"></highlight></codeline>
<codeline lineno="206"><highlight class="comment">Check<sp/>to<sp/>see<sp/>if<sp/>there<sp/>is<sp/>a<sp/>breakpoint<sp/>associtated<sp/>with<sp/>this<sp/>statement</highlight></codeline>
<codeline lineno="207"><highlight class="comment">================</highlight></codeline>
<codeline lineno="208"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DebuggerServerCheckBreakpoint<sp/>(<sp/><ref refid="classid_interpreter" kindref="compound">idInterpreter</ref>*<sp/>interpreter,<sp/><ref refid="classid_program" kindref="compound">idProgram</ref>*<sp/>program,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>instructionPointer<sp/>)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gDebuggerServer<sp/>)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>gDebuggerServer-&gt;CheckBreakpoints<sp/>(<sp/>interpreter,<sp/>program,<sp/>instructionPointer<sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="220"><highlight class="comment">================</highlight></codeline>
<codeline lineno="221"><highlight class="comment">DebuggerServerPrint</highlight></codeline>
<codeline lineno="222"><highlight class="comment"></highlight></codeline>
<codeline lineno="223"><highlight class="comment">Sends<sp/>a<sp/>print<sp/>message<sp/>to<sp/>the<sp/>debugger<sp/>client</highlight></codeline>
<codeline lineno="224"><highlight class="comment">================</highlight></codeline>
<codeline lineno="225"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DebuggerServerPrint<sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text<sp/>)</highlight></codeline>
<codeline lineno="227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gDebuggerServer<sp/>)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>gDebuggerServer-&gt;Print<sp/>(<sp/>text<sp/>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/tools/debugger/debugger.cpp"/>
  </compounddef>
</doxygen>
