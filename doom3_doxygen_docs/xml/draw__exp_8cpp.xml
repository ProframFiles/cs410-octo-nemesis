<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="draw__exp_8cpp" kind="file">
    <compoundname>draw_exp.cpp</compoundname>
    <includes refid="precompiled_8h" local="yes">../idlib/precompiled.h</includes>
    <includes refid="tr__local_8h" local="yes">tr_local.h</includes>
    <includes refid="win__local_8h" local="yes">../sys/win32/win_local.h</includes>
    <innerclass refid="structwgl_string__t" prot="public">wglString_t</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="draw__exp_8cpp_1aedeffc7d23da25d52b9a50045189fe2b" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool initialized</definition>
        <argsstring></argsstring>
        <name>initialized</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="59" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a8f3db9cc9cbc902cb5bccb8e751d76bf" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int lightBufferSize</definition>
        <argsstring></argsstring>
        <name>lightBufferSize</name>
        <initializer>= 1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="61" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a1dce0d5ed789b3d7f49d5e56373b185d" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int maxLightBufferSize</definition>
        <argsstring></argsstring>
        <name>maxLightBufferSize</name>
        <initializer>= 1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="62" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a3b1c4441223097cc038150c45dde2c6d" prot="public" static="yes" mutable="no">
        <type>float</type>
        <definition>float lightBufferSizeFraction</definition>
        <argsstring></argsstring>
        <name>lightBufferSizeFraction</name>
        <initializer>= 0.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="63" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1ab4e21b66958a3e5425aac2229cc7a728" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int viewBufferSize</definition>
        <argsstring></argsstring>
        <name>viewBufferSize</name>
        <initializer>= 1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="65" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1abdc77173c80c2c47c95c49d0e7bac721" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int viewBufferHeight</definition>
        <argsstring></argsstring>
        <name>viewBufferHeight</name>
        <initializer>= 768</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="66" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1adb963f2550b7ff73cc454697b1c14341" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int maxViewBufferSize</definition>
        <argsstring></argsstring>
        <name>maxViewBufferSize</name>
        <initializer>= 1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="67" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a3c68e1b72c7580ebe1ee62ae05bcfe54" prot="public" static="yes" mutable="no">
        <type>float</type>
        <definition>float viewBufferSizeFraction</definition>
        <argsstring></argsstring>
        <name>viewBufferSizeFraction</name>
        <initializer>= 0.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="68" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a381da877521601fe7e73b5fd5206ebb4" prot="public" static="yes" mutable="no">
        <type>float</type>
        <definition>float viewBufferHeightFraction</definition>
        <argsstring></argsstring>
        <name>viewBufferHeightFraction</name>
        <initializer>= 0.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="69" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a33fb25c9639ea481699502d589707d3e" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool nativeViewBuffer</definition>
        <argsstring></argsstring>
        <name>nativeViewBuffer</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="70" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a45262e68b1e0415a45c9e50607ebfe45" prot="public" static="yes" mutable="no">
        <type>HPBUFFERARB</type>
        <definition>HPBUFFERARB floatPbuffer</definition>
        <argsstring></argsstring>
        <name>floatPbuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="72" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a6c945f709e0fba2624864688b9bc2bd4" prot="public" static="yes" mutable="no">
        <type>HDC</type>
        <definition>HDC floatPbufferDC</definition>
        <argsstring></argsstring>
        <name>floatPbufferDC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="73" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a419c98361fe358b80cf36adf188860cc" prot="public" static="yes" mutable="no">
        <type><ref refid="classid_image" kindref="compound">idImage</ref> *</type>
        <definition>idImage* floatPbufferImage</definition>
        <argsstring></argsstring>
        <name>floatPbufferImage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="74" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1ad776cd267850ac56d377862d3bbd1861" prot="public" static="yes" mutable="no">
        <type>HPBUFFERARB</type>
        <definition>HPBUFFERARB floatPbuffer2</definition>
        <argsstring></argsstring>
        <name>floatPbuffer2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="76" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a15c6da7ffb5da4f0a27f2c3be7fe834e" prot="public" static="yes" mutable="no">
        <type>HDC</type>
        <definition>HDC floatPbuffer2DC</definition>
        <argsstring></argsstring>
        <name>floatPbuffer2DC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="77" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a18fe976334c723f559bec441c80a19e7" prot="public" static="yes" mutable="no">
        <type><ref refid="classid_image" kindref="compound">idImage</ref> *</type>
        <definition>idImage* floatPbuffer2Image</definition>
        <argsstring></argsstring>
        <name>floatPbuffer2Image</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="78" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1adb5f5a6f51efd75bf7b1a830613aa126" prot="public" static="yes" mutable="no">
        <type>HPBUFFERARB</type>
        <definition>HPBUFFERARB floatPbufferQuarter</definition>
        <argsstring></argsstring>
        <name>floatPbufferQuarter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="80" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1ad79045f44921047376cf933891c0e449" prot="public" static="yes" mutable="no">
        <type>HDC</type>
        <definition>HDC floatPbufferQuarterDC</definition>
        <argsstring></argsstring>
        <name>floatPbufferQuarterDC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="81" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a597d679aaf23666fa1c3c9776fac3e55" prot="public" static="yes" mutable="no">
        <type><ref refid="classid_image" kindref="compound">idImage</ref> *</type>
        <definition>idImage* floatPbufferQuarterImage</definition>
        <argsstring></argsstring>
        <name>floatPbufferQuarterImage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="82" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1ad61a70dba4b6f88d1cd9a5fc573a2b9d" prot="public" static="yes" mutable="no">
        <type>HGLRC</type>
        <definition>HGLRC floatContext</definition>
        <argsstring></argsstring>
        <name>floatContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="84" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a8ab9230d332c47e1f865178fab05b4a1" prot="public" static="yes" mutable="no">
        <type>HPBUFFERARB</type>
        <definition>HPBUFFERARB shadowPbuffer</definition>
        <argsstring></argsstring>
        <name>shadowPbuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="86" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a53e878dcc93547aa51f3b5e41bc7fd5a" prot="public" static="yes" mutable="no">
        <type>HDC</type>
        <definition>HDC shadowPbufferDC</definition>
        <argsstring></argsstring>
        <name>shadowPbufferDC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="87" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a59d685b7dce27eaae8baae8d44a961e8" prot="public" static="yes" mutable="no">
        <type>HPBUFFERARB</type>
        <definition>HPBUFFERARB viewPbuffer</definition>
        <argsstring></argsstring>
        <name>viewPbuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="89" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a77eccdc2f724b431633eec1263a137f4" prot="public" static="yes" mutable="no">
        <type>HDC</type>
        <definition>HDC viewPbufferDC</definition>
        <argsstring></argsstring>
        <name>viewPbufferDC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="90" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a32dedfa33b056379a151735347f63517" prot="public" static="yes" mutable="no">
        <type><ref refid="classid_image" kindref="compound">idImage</ref> *</type>
        <definition>idImage* shadowImage[3]</definition>
        <argsstring>[3]</argsstring>
        <name>shadowImage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="92" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1ae7fb5f4e776e9f05ddc4f9e60839111c" prot="public" static="yes" mutable="no">
        <type><ref refid="classid_image" kindref="compound">idImage</ref> *</type>
        <definition>idImage* viewDepthImage</definition>
        <argsstring></argsstring>
        <name>viewDepthImage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="94" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a6286cab1a792909155b176762a4fe3d4" prot="public" static="yes" mutable="no">
        <type><ref refid="classid_image" kindref="compound">idImage</ref> *</type>
        <definition>idImage* viewAlphaImage</definition>
        <argsstring></argsstring>
        <name>viewAlphaImage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="95" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a1081e4f83e01d1424763e06240fcfe16" prot="public" static="yes" mutable="no">
        <type><ref refid="classid_image" kindref="compound">idImage</ref> *</type>
        <definition>idImage* viewShadowImage</definition>
        <argsstring></argsstring>
        <name>viewShadowImage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="97" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a2ee3645005aa32b6fe4374a1ae739188" prot="public" static="yes" mutable="no">
        <type><ref refid="classid_image" kindref="compound">idImage</ref> *</type>
        <definition>idImage* jitterImage16</definition>
        <argsstring></argsstring>
        <name>jitterImage16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="99" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a9d9de9932a15214dd53571a6bea645b6" prot="public" static="yes" mutable="no">
        <type><ref refid="classid_image" kindref="compound">idImage</ref> *</type>
        <definition>idImage* jitterImage4</definition>
        <argsstring></argsstring>
        <name>jitterImage4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="100" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1ab5e4214ebdd86c7c93fd7acdd1dc55a9" prot="public" static="yes" mutable="no">
        <type><ref refid="classid_image" kindref="compound">idImage</ref> *</type>
        <definition>idImage* jitterImage1</definition>
        <argsstring></argsstring>
        <name>jitterImage1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="101" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1aa1a842573645c91986a0453aaf11ee98" prot="public" static="yes" mutable="no">
        <type><ref refid="classid_image" kindref="compound">idImage</ref> *</type>
        <definition>idImage* random256Image</definition>
        <argsstring></argsstring>
        <name>random256Image</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="103" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1ae720b27cf1395a27389a2b6204a35361" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int shadowVertexProgram</definition>
        <argsstring></argsstring>
        <name>shadowVertexProgram</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="105" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a0a9fec15a10bb75d2a6bebf46d38c757" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int shadowFragmentProgram16</definition>
        <argsstring></argsstring>
        <name>shadowFragmentProgram16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="106" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1aa82f3d39ae16669d8799bf4db4deae90" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int shadowFragmentProgram4</definition>
        <argsstring></argsstring>
        <name>shadowFragmentProgram4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="107" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a8e627afa61ab913c6c9531cb6b92d6f7" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int shadowFragmentProgram1</definition>
        <argsstring></argsstring>
        <name>shadowFragmentProgram1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="108" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1afa0b70df70c74c21dda4c81551e4a20c" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int shadowFragmentProgram0</definition>
        <argsstring></argsstring>
        <name>shadowFragmentProgram0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="109" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1ad976301aa01edbe4c2193b599faa9714" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int screenSpaceShadowVertexProgram</definition>
        <argsstring></argsstring>
        <name>screenSpaceShadowVertexProgram</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="111" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a1e007a726f5d3db0619bc2983ae23da3" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int screenSpaceShadowFragmentProgram16</definition>
        <argsstring></argsstring>
        <name>screenSpaceShadowFragmentProgram16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="112" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a1196432e70542e0d9b540257098e6eeb" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int screenSpaceShadowFragmentProgram4</definition>
        <argsstring></argsstring>
        <name>screenSpaceShadowFragmentProgram4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="113" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a47bf82d6bfe9b7a2c7eb3f3f12e0b0e9" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int screenSpaceShadowFragmentProgram1</definition>
        <argsstring></argsstring>
        <name>screenSpaceShadowFragmentProgram1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="114" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1afbdac0414d0f94b0c87059f14b488cef" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int screenSpaceShadowFragmentProgram0</definition>
        <argsstring></argsstring>
        <name>screenSpaceShadowFragmentProgram0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="115" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a4fb402631318c7eae8a43139e25b94b5" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int depthMidpointVertexProgram</definition>
        <argsstring></argsstring>
        <name>depthMidpointVertexProgram</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="117" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a9cdeab1f1e35c63a4c0b2084b83a7dfc" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int depthMidpointFragmentProgram</definition>
        <argsstring></argsstring>
        <name>depthMidpointFragmentProgram</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="118" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a36bf094859808b1ac7003ec7358a4891" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int shadowResampleVertexProgram</definition>
        <argsstring></argsstring>
        <name>shadowResampleVertexProgram</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="120" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1ab7b9435a63a684795e3e2b917b63d1ca" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int shadowResampleFragmentProgram</definition>
        <argsstring></argsstring>
        <name>shadowResampleFragmentProgram</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="121" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1ad8fd085127d871bc64039727e49cc4e3" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int gammaDitherVertexProgram</definition>
        <argsstring></argsstring>
        <name>gammaDitherVertexProgram</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="123" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a7048d6e9de2b459976e3557eab0adaca" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int gammaDitherFragmentProgram</definition>
        <argsstring></argsstring>
        <name>gammaDitherFragmentProgram</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="124" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1ab4ff06d73fd8823701f14c03edca9741" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int downSampleVertexProgram</definition>
        <argsstring></argsstring>
        <name>downSampleVertexProgram</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="126" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a8a38f02013a460288a9229724ce75e13" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int downSampleFragmentProgram</definition>
        <argsstring></argsstring>
        <name>downSampleFragmentProgram</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="127" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a7f2280b46372018c179932c98ad46bf4" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int bloomVertexProgram</definition>
        <argsstring></argsstring>
        <name>bloomVertexProgram</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="129" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a925f12ef39d05262fc1c5fd4bb734472" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int bloomFragmentProgram</definition>
        <argsstring></argsstring>
        <name>bloomFragmentProgram</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="130" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a05f9957cec9a2030cac934d42f99558d" prot="public" static="yes" mutable="no">
        <type>float</type>
        <definition>float viewLightAxialSize</definition>
        <argsstring></argsstring>
        <name>viewLightAxialSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="132" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a2d075a817ca27ce65ba1f03f581d3328" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_sb_lightResolution(&quot;r_sb_lightResolution&quot;,&quot;1024&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;Pixel dimensions for each shadow buffer, 64 - 2048&quot;)</definition>
        <argsstring>(&quot;r_sb_lightResolution&quot;,&quot;1024&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;Pixel dimensions for each shadow buffer, 64 - 2048&quot;)</argsstring>
        <name>r_sb_lightResolution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="134" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1acd0a8ec756c2ce5112d247c1e622ff85" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_sb_viewResolution(&quot;r_sb_viewResolution&quot;,&quot;1024&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;Width of screen space shadow sampling&quot;)</definition>
        <argsstring>(&quot;r_sb_viewResolution&quot;,&quot;1024&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;Width of screen space shadow sampling&quot;)</argsstring>
        <name>r_sb_viewResolution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="135" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a3c596417c85613206ee9508b5eeccd93" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_sb_noShadows(&quot;r_sb_noShadows&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;don&apos;t draw any occluders&quot;)</definition>
        <argsstring>(&quot;r_sb_noShadows&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;don&apos;t draw any occluders&quot;)</argsstring>
        <name>r_sb_noShadows</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="136" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a7e70dccc065a5116a9f6719ef9aedc05" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_sb_usePbuffer(&quot;r_sb_usePbuffer&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;draw offscreen&quot;)</definition>
        <argsstring>(&quot;r_sb_usePbuffer&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;draw offscreen&quot;)</argsstring>
        <name>r_sb_usePbuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="137" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1ae14ee29963808962b716c7b06eb518a6" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_sb_jitterScale(&quot;r_sb_jitterScale&quot;,&quot;0.006&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;scale factor for jitter offset&quot;)</definition>
        <argsstring>(&quot;r_sb_jitterScale&quot;,&quot;0.006&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;scale factor for jitter offset&quot;)</argsstring>
        <name>r_sb_jitterScale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="138" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1ad1719a7e9bc469b98b31fa4977d685ff" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_sb_biasScale(&quot;r_sb_biasScale&quot;,&quot;0.0001&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;scale factor for jitter bias&quot;)</definition>
        <argsstring>(&quot;r_sb_biasScale&quot;,&quot;0.0001&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;scale factor for jitter bias&quot;)</argsstring>
        <name>r_sb_biasScale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="139" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a546a4eb5c110c3511fc807f4ee44cba3" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_sb_samples(&quot;r_sb_samples&quot;,&quot;4&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;0, 1, 4, or 16&quot;)</definition>
        <argsstring>(&quot;r_sb_samples&quot;,&quot;4&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;0, 1, 4, or 16&quot;)</argsstring>
        <name>r_sb_samples</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="140" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a87762e3ea9c5414006203039bcd57d20" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_sb_randomize(&quot;r_sb_randomize&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;randomly offset jitter texture each draw&quot;)</definition>
        <argsstring>(&quot;r_sb_randomize&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;randomly offset jitter texture each draw&quot;)</argsstring>
        <name>r_sb_randomize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="141" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1ae7615314b429ebc2ec244af5ba0299fa" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_sb_polyOfsFactor(&quot;r_sb_polyOfsFactor&quot;,&quot;2&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;polygonOffset factor for drawing shadow buffer&quot;)</definition>
        <argsstring>(&quot;r_sb_polyOfsFactor&quot;,&quot;2&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;polygonOffset factor for drawing shadow buffer&quot;)</argsstring>
        <name>r_sb_polyOfsFactor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="143" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a0d6507946dab8a7467b8cb7b6107e5b7" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_sb_polyOfsUnits(&quot;r_sb_polyOfsUnits&quot;,&quot;3000&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;polygonOffset units for drawing shadow buffer&quot;)</definition>
        <argsstring>(&quot;r_sb_polyOfsUnits&quot;,&quot;3000&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;polygonOffset units for drawing shadow buffer&quot;)</argsstring>
        <name>r_sb_polyOfsUnits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="144" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1ab3e21b155d001a26384a3f625e2323a2" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_sb_occluderFacing(&quot;r_sb_occluderFacing&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;0 = front faces, 1 = back faces, 2 = midway between&quot;)</definition>
        <argsstring>(&quot;r_sb_occluderFacing&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;0 = front faces, 1 = back faces, 2 = midway between&quot;)</argsstring>
        <name>r_sb_occluderFacing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="145" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1afcf3e7e3eefe773f8d54385a6263ee0f" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_sb_frustomFOV(&quot;r_sb_frustomFOV&quot;,&quot;92&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;oversize FOV for point light side matching&quot;)</definition>
        <argsstring>(&quot;r_sb_frustomFOV&quot;,&quot;92&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;oversize FOV for point light side matching&quot;)</argsstring>
        <name>r_sb_frustomFOV</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="148" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1ac5af5103f3368ccb360a35df73122f82" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_sb_showFrustumPixels(&quot;r_sb_showFrustumPixels&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;color the pixels contained in the frustum&quot;)</definition>
        <argsstring>(&quot;r_sb_showFrustumPixels&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;color the pixels contained in the frustum&quot;)</argsstring>
        <name>r_sb_showFrustumPixels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="149" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a2a4455ebb732c44e544e5ea1a491826b" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_sb_singleSide(&quot;r_sb_singleSide&quot;,&quot;-1&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;only draw a single side (0-5) of point lights&quot;)</definition>
        <argsstring>(&quot;r_sb_singleSide&quot;,&quot;-1&quot;, CVAR_RENDERER|CVAR_INTEGER,&quot;only draw a single side (0-5) of point lights&quot;)</argsstring>
        <name>r_sb_singleSide</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="150" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a87d0f454100aca6d16e63846d0900b8f" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_sb_useCulling(&quot;r_sb_useCulling&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;cull geometry to individual side frustums&quot;)</definition>
        <argsstring>(&quot;r_sb_useCulling&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;cull geometry to individual side frustums&quot;)</argsstring>
        <name>r_sb_useCulling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="151" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1afc0e84b3b70bd8c11c357de1e38f9b3d" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_sb_linearFilter(&quot;r_sb_linearFilter&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;use GL_LINEAR instead of GL_NEAREST on shadow maps&quot;)</definition>
        <argsstring>(&quot;r_sb_linearFilter&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;use GL_LINEAR instead of GL_NEAREST on shadow maps&quot;)</argsstring>
        <name>r_sb_linearFilter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="152" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a89eeced1a9331e2f0a7367254418274b" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_sb_screenSpaceShadow(&quot;r_sb_screenSpaceShadow&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;build shadows in screen space instead of on surfaces&quot;)</definition>
        <argsstring>(&quot;r_sb_screenSpaceShadow&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;build shadows in screen space instead of on surfaces&quot;)</argsstring>
        <name>r_sb_screenSpaceShadow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="154" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a4d39f3fe7229530fad37ace3f928f239" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_hdr_useFloats(&quot;r_hdr_useFloats&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;use a floating point rendering buffer&quot;)</definition>
        <argsstring>(&quot;r_hdr_useFloats&quot;,&quot;0&quot;, CVAR_RENDERER|CVAR_BOOL,&quot;use a floating point rendering buffer&quot;)</argsstring>
        <name>r_hdr_useFloats</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="156" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1abac3b812bb952df547b48f54b47984c2" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_hdr_exposure(&quot;r_hdr_exposure&quot;,&quot;1.0&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;maximum light scale&quot;)</definition>
        <argsstring>(&quot;r_hdr_exposure&quot;,&quot;1.0&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;maximum light scale&quot;)</argsstring>
        <name>r_hdr_exposure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="157" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a92531e3a430d937c959a03a28650fa04" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_hdr_bloomFraction(&quot;r_hdr_bloomFraction&quot;,&quot;0.1&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;fraction to smear across neighbors&quot;)</definition>
        <argsstring>(&quot;r_hdr_bloomFraction&quot;,&quot;0.1&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;fraction to smear across neighbors&quot;)</argsstring>
        <name>r_hdr_bloomFraction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="158" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a60a26bcf3ce01f374058281e21aea2bf" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_hdr_gamma(&quot;r_hdr_gamma&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;monitor gamma power&quot;)</definition>
        <argsstring>(&quot;r_hdr_gamma&quot;,&quot;1&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;monitor gamma power&quot;)</argsstring>
        <name>r_hdr_gamma</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="159" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1aa21dc59d6cf61135f56bdb9f4809ad72" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_hdr_monitorDither(&quot;r_hdr_monitorDither&quot;,&quot;0.01&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;random dither in monitor space&quot;)</definition>
        <argsstring>(&quot;r_hdr_monitorDither&quot;,&quot;0.01&quot;, CVAR_RENDERER|CVAR_FLOAT,&quot;random dither in monitor space&quot;)</argsstring>
        <name>r_hdr_monitorDither</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="160" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a2080314cbdb2bb94c061b1f5577b9e12" prot="public" static="yes" mutable="no">
        <type>float</type>
        <definition>float unflippedLightMatrix[16]</definition>
        <argsstring>[16]</argsstring>
        <name>unflippedLightMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="163" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a9132e26e57b865e6455a7e076ef3de6e" prot="public" static="yes" mutable="no">
        <type>float</type>
        <definition>float lightMatrix[16]</definition>
        <argsstring>[16]</argsstring>
        <name>lightMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="166" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a5ec5b4dcd5a21e4e51adb29f7c9efcc7" prot="public" static="yes" mutable="no">
        <type>float</type>
        <definition>float lightProjectionMatrix[16]</definition>
        <argsstring>[16]</argsstring>
        <name>lightProjectionMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="169" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a2e32ad1fc1584bda63ef6d8530538ac8" prot="public" static="no" mutable="no">
        <type><ref refid="structwgl_string__t" kindref="compound">wglString_t</ref></type>
        <definition>wglString_t wglString[]</definition>
        <argsstring>[]</argsstring>
        <name>wglString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="179" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1af896f5ace37d230a40aac374c0b38295" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int NUM_WGL_STRINGS</definition>
        <argsstring></argsstring>
        <name>NUM_WGL_STRINGS</name>
        <initializer>= sizeof( wglString ) / sizeof( wglString[0] )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="234" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1ab6cb4d6baf59b16dc5228d384b4ff5bd" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int BLOOM_RADIUS</definition>
        <argsstring></argsstring>
        <name>BLOOM_RADIUS</name>
        <initializer>= 8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="299" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1ae0c54906c4041df30688e7d63ee179ad" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int JITTER_SIZE</definition>
        <argsstring></argsstring>
        <name>JITTER_SIZE</name>
        <initializer>= 128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="398" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1ae31c5c4155e4d8c8789129420bd01b7b" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int CULL_RECEIVER</definition>
        <argsstring></argsstring>
        <name>CULL_RECEIVER</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="706" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="706" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="draw__exp_8cpp_1a3b3ac425d021e6aa4aa1590343625d67" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int CULL_OCCLUDER_AND_RECEIVER</definition>
        <argsstring></argsstring>
        <name>CULL_OCCLUDER_AND_RECEIVER</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="707" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="707" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="draw__exp_8cpp_1a75dbb92a1045e926c52a14ae184876f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_ARB2_DrawInteraction</definition>
        <argsstring>(const drawInteraction_t *din)</argsstring>
        <name>RB_ARB2_DrawInteraction</name>
        <param>
          <type>const <ref refid="structdraw_interaction__t" kindref="compound">drawInteraction_t</ref> *</type>
          <declname>din</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="172" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_arb2.cpp" bodystart="67" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1ab1e39c3d647571a3ca00eacad0429c71" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void R_CheckWglErrors</definition>
        <argsstring>(void)</argsstring>
        <name>R_CheckWglErrors</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="236" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="236" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1a8faa356b8f0b4fa9d2a30e922914315a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void R_MakeCurrent</definition>
        <argsstring>(HDC dc, HGLRC context, HPBUFFERARB pbuffer)</argsstring>
        <name>R_MakeCurrent</name>
        <param>
          <type>HDC</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>HGLRC</type>
          <declname>context</declname>
        </param>
        <param>
          <type>HPBUFFERARB</type>
          <declname>pbuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="262" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="262" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1a933bbdd74e74d57e2212d43517dfa2dc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void R_BindTexImage</definition>
        <argsstring>(HPBUFFERARB pbuffer)</argsstring>
        <name>R_BindTexImage</name>
        <param>
          <type>HPBUFFERARB</type>
          <declname>pbuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="275" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="275" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1a7139fa67125ae3290ba023c8bc0b073c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void R_ReportTextureParms</definition>
        <argsstring>(void)</argsstring>
        <name>R_ReportTextureParms</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="286" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="286" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1a18c56b06f64960f10b936de85d4a5ed8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void RB_CreateBloomTable</definition>
        <argsstring>(void)</argsstring>
        <name>RB_CreateBloomTable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="300" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="300" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1ad008d0797d1f5b5386232271f6a773e2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void GL_SelectTextureNoClient</definition>
        <argsstring>(int unit)</argsstring>
        <name>GL_SelectTextureNoClient</name>
        <param>
          <type>int</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="327" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="327" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1a49cff30a6cc8878d74e4a1eb9fce0221" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void R_CreateShadowBufferImage</definition>
        <argsstring>(idImage *image)</argsstring>
        <name>R_CreateShadowBufferImage</name>
        <param>
          <type><ref refid="classid_image" kindref="compound">idImage</ref> *</type>
          <declname>image</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="340" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="340" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1a26543dd734c16cd92c01823bed9a6510" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void R_CreateViewAlphaImage</definition>
        <argsstring>(idImage *image)</argsstring>
        <name>R_CreateViewAlphaImage</name>
        <param>
          <type><ref refid="classid_image" kindref="compound">idImage</ref> *</type>
          <declname>image</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="368" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="368" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1a049884393070e7bbe906384f8bad1c89" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void R_CreateStubImage</definition>
        <argsstring>(idImage *image)</argsstring>
        <name>R_CreateStubImage</name>
        <param>
          <type><ref refid="classid_image" kindref="compound">idImage</ref> *</type>
          <declname>image</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="382" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="382" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1aaad1b2bc082c3b2a86916c5d6e85599a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void R_CreateJitterImage16</definition>
        <argsstring>(idImage *image)</argsstring>
        <name>R_CreateJitterImage16</name>
        <param>
          <type><ref refid="classid_image" kindref="compound">idImage</ref> *</type>
          <declname>image</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="399" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="399" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1a083127c86f53eced1fd9af336b1a4e38" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void R_CreateJitterImage4</definition>
        <argsstring>(idImage *image)</argsstring>
        <name>R_CreateJitterImage4</name>
        <param>
          <type><ref refid="classid_image" kindref="compound">idImage</ref> *</type>
          <declname>image</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="420" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="420" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1a6e29e4012278f76d0167128c8f2405fb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void R_CreateJitterImage1</definition>
        <argsstring>(idImage *image)</argsstring>
        <name>R_CreateJitterImage1</name>
        <param>
          <type><ref refid="classid_image" kindref="compound">idImage</ref> *</type>
          <declname>image</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="441" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="441" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1a0bca67bdd2c8015207de9e076054619b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void R_CreateRandom256Image</definition>
        <argsstring>(idImage *image)</argsstring>
        <name>R_CreateRandom256Image</name>
        <param>
          <type><ref refid="classid_image" kindref="compound">idImage</ref> *</type>
          <declname>image</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="457" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="457" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1a41d75737b7419793bd2f02e0967a84e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_PrintPixelFormat</definition>
        <argsstring>(int pixelFormat)</argsstring>
        <name>R_PrintPixelFormat</name>
        <param>
          <type>int</type>
          <declname>pixelFormat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="479" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="479" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1a686ea23f5f617afe7ecd7e741d70626d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_Exp_Allocate</definition>
        <argsstring>(void)</argsstring>
        <name>R_Exp_Allocate</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="501" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="501" bodyend="702"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1ab55491d8e0553a28a9b780b4a8ee10db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_EXP_CullInteractions</definition>
        <argsstring>(viewLight_t *vLight, idPlane frustumPlanes[6])</argsstring>
        <name>RB_EXP_CullInteractions</name>
        <param>
          <type><ref refid="structview_light__s" kindref="compound">viewLight_t</ref> *</type>
          <declname>vLight</declname>
        </param>
        <param>
          <type><ref refid="classid_plane" kindref="compound">idPlane</ref></type>
          <declname>frustumPlanes</declname>
          <array>[6]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="716" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="716" bodyend="773"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1a4407d04beeeb6d6ad53364fa9676eb80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_EXP_RenderOccluders</definition>
        <argsstring>(viewLight_t *vLight)</argsstring>
        <name>RB_EXP_RenderOccluders</name>
        <param>
          <type><ref refid="structview_light__s" kindref="compound">viewLight_t</ref> *</type>
          <declname>vLight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="780" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="780" bodyend="826"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1a79f31e4f80840547f8c3b6e3735bb723" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_RenderShadowBuffer</definition>
        <argsstring>(viewLight_t *vLight, int side)</argsstring>
        <name>RB_RenderShadowBuffer</name>
        <param>
          <type><ref refid="structview_light__s" kindref="compound">viewLight_t</ref> *</type>
          <declname>vLight</declname>
        </param>
        <param>
          <type>int</type>
          <declname>side</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="833" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="833" bodyend="1119"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1af1ddaedf910f6a365d31a471e19dae16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_EXP_DrawInteraction</definition>
        <argsstring>(const drawInteraction_t *din)</argsstring>
        <name>RB_EXP_DrawInteraction</name>
        <param>
          <type>const <ref refid="structdraw_interaction__t" kindref="compound">drawInteraction_t</ref> *</type>
          <declname>din</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="1126" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="1126" bodyend="1257"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1a729c421d4e0731d5fcc3ce006981a027" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_EXP_CreateDrawInteractions</definition>
        <argsstring>(const drawSurf_t *surf)</argsstring>
        <name>RB_EXP_CreateDrawInteractions</name>
        <param>
          <type>const <ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref> *</type>
          <declname>surf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para># </para>        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="1265" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="1265" bodyend="1403"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1a35a46960ddf75a798bb368955dc23c82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InvertByTranspose</definition>
        <argsstring>(const float a[16], float r[16])</argsstring>
        <name>InvertByTranspose</name>
        <param>
          <type>const float</type>
          <declname>a</declname>
          <array>[16]</array>
        </param>
        <param>
          <type>float</type>
          <declname>r</declname>
          <array>[16]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="1405" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="1405" bodyend="1422"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1a52839bba9b76b3d407b7a15871332afe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FullInvert</definition>
        <argsstring>(const float a[16], float r[16])</argsstring>
        <name>FullInvert</name>
        <param>
          <type>const float</type>
          <declname>a</declname>
          <array>[16]</array>
        </param>
        <param>
          <type>float</type>
          <declname>r</declname>
          <array>[16]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="1424" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="1424" bodyend="1447"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1a9d9f5e1b5d50c3392849c1f35a15b74f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
        <definition>const srfTriangles_t* RB_Exp_TrianglesForFrustum</definition>
        <argsstring>(viewLight_t *vLight, int side)</argsstring>
        <name>RB_Exp_TrianglesForFrustum</name>
        <param>
          <type><ref refid="structview_light__s" kindref="compound">viewLight_t</ref> *</type>
          <declname>vLight</declname>
        </param>
        <param>
          <type>int</type>
          <declname>side</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="1454" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="1454" bodyend="1571"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1afb94061361948491a3eaebe4388f223f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_Exp_SelectFrustum</definition>
        <argsstring>(viewLight_t *vLight, int side)</argsstring>
        <name>RB_Exp_SelectFrustum</name>
        <param>
          <type><ref refid="structview_light__s" kindref="compound">viewLight_t</ref> *</type>
          <declname>vLight</declname>
        </param>
        <param>
          <type>int</type>
          <declname>side</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="1579" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="1579" bodyend="1809"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1a65a1b6779f073410526e99aa75fb51bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float R_EXP_CalcLightAxialSize</definition>
        <argsstring>(viewLight_t *vLight)</argsstring>
        <name>R_EXP_CalcLightAxialSize</name>
        <param>
          <type><ref refid="structview_light__s" kindref="compound">viewLight_t</ref> *</type>
          <declname>vLight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="1819" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="1819" bodyend="1836"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1a8925e217681835ac380bc2f769bb311d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_T_FillDepthBuffer</definition>
        <argsstring>(const drawSurf_t *surf)</argsstring>
        <name>RB_T_FillDepthBuffer</name>
        <param>
          <type>const <ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref> *</type>
          <declname>surf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="1846" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_common.cpp" bodystart="350" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1a00e333546319ab4fb7a4f047d67db6a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_EXP_RenderViewDepthImage</definition>
        <argsstring>(void)</argsstring>
        <name>R_EXP_RenderViewDepthImage</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="1848" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="1848" bodyend="1915"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1a8b22375ccf61e51d993bb92f3d680c6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_EXP_SetNativeBuffer</definition>
        <argsstring>(void)</argsstring>
        <name>RB_EXP_SetNativeBuffer</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="1924" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="1924" bodyend="1940"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1aba5ca07374c644f793d1226a41c2870c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_EXP_SetRenderBuffer</definition>
        <argsstring>(viewLight_t *vLight)</argsstring>
        <name>RB_EXP_SetRenderBuffer</name>
        <param>
          <type><ref refid="structview_light__s" kindref="compound">viewLight_t</ref> *</type>
          <declname>vLight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="1949" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="1949" bodyend="1975"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1abcfde504c0716076f1509a445f473b30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_shadowResampleAlpha</definition>
        <argsstring>(void)</argsstring>
        <name>RB_shadowResampleAlpha</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="1983" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="1983" bodyend="2069"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1a3d77c62966084a71bb12e63996c3d7ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_EXP_CoverScreen</definition>
        <argsstring>(void)</argsstring>
        <name>RB_EXP_CoverScreen</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="2077" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="2077" bodyend="2091"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1af6d1bd0cf498e1b176d93027b08ad1c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_EXP_ReadFloatBuffer</definition>
        <argsstring>(void)</argsstring>
        <name>RB_EXP_ReadFloatBuffer</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="2098" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="2098" bodyend="2135"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1a68adc19af656ecaecf4fb15ee3a59ce0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_TestGamma</definition>
        <argsstring>(void)</argsstring>
        <name>RB_TestGamma</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="2138" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_rendertools.cpp" bodystart="2121" bodyend="2204"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1aecd2c2ce7184f2ebae4afa59e8869218" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_EXP_GammaDither</definition>
        <argsstring>(void)</argsstring>
        <name>RB_EXP_GammaDither</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="2145" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="2145" bodyend="2238"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1ad1c9de2f91ef5f26bffee27ae01c6d54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_EXP_Bloom</definition>
        <argsstring>(void)</argsstring>
        <name>RB_EXP_Bloom</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="2245" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="2245" bodyend="2357"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1a0ec94fb502893cff47cd943426576a08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_Exp_DrawInteractions</definition>
        <argsstring>(void)</argsstring>
        <name>RB_Exp_DrawInteractions</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>#</para><para># </para>        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="2364" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="2364" bodyend="2574"/>
      </memberdef>
      <memberdef kind="function" id="draw__exp_8cpp_1ad057734eed7f28db8659f50bb7e65477" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_Exp_Init</definition>
        <argsstring>(void)</argsstring>
        <name>R_Exp_Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" line="2583" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp" bodystart="2583" bodyend="2618"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../idlib/precompiled.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>hdrstop</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tr_local.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../sys/win32/win_local.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"></highlight></codeline>
<codeline lineno="37"><highlight class="comment">strictly<sp/>experimental<sp/>/<sp/>research<sp/>codepaths</highlight></codeline>
<codeline lineno="38"><highlight class="comment"></highlight></codeline>
<codeline lineno="39"><highlight class="comment">!!!if<sp/>we<sp/>use<sp/>front<sp/>facing<sp/>occluders,<sp/>we<sp/>can<sp/>portal<sp/>flow<sp/>from<sp/>light<sp/>centers</highlight></codeline>
<codeline lineno="40"><highlight class="comment"></highlight></codeline>
<codeline lineno="41"><highlight class="comment">try<sp/>depth_component_16<sp/>rendering</highlight></codeline>
<codeline lineno="42"><highlight class="comment"></highlight></codeline>
<codeline lineno="43"><highlight class="comment">do<sp/>we<sp/>care<sp/>about<sp/>portals<sp/>from<sp/>light<sp/>perspective?<sp/>back<sp/>/<sp/>front<sp/>face<sp/>issues.</highlight></codeline>
<codeline lineno="44"><highlight class="comment"></highlight></codeline>
<codeline lineno="45"><highlight class="comment">how<sp/>do<sp/>we<sp/>do<sp/>weapon<sp/>depth<sp/>hacks<sp/>with<sp/>shadow<sp/>buffers?</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/><sp/>distort<sp/>their<sp/>world<sp/>space<sp/>vertexes<sp/>instead<sp/>of<sp/>offsetting<sp/>their<sp/>depth?</highlight></codeline>
<codeline lineno="47"><highlight class="comment"></highlight></codeline>
<codeline lineno="48"><highlight class="comment">jittering<sp/>off<sp/>the<sp/>side<sp/>of<sp/>a<sp/>projection<sp/>will<sp/>give<sp/>wrong<sp/>shadows</highlight></codeline>
<codeline lineno="49"><highlight class="comment"></highlight></codeline>
<codeline lineno="50"><highlight class="comment">really<sp/>huge<sp/>lights,<sp/>like<sp/>sunlight,<sp/>are<sp/>going<sp/>to<sp/>be<sp/>problematic<sp/>with<sp/>fixed<sp/>projections</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/><sp/>we<sp/>could<sp/>tile<sp/>the<sp/>projections<sp/>and<sp/>let<sp/>the<sp/>auto-resize<sp/>cut<sp/>them<sp/>down<sp/>as<sp/>necessary</highlight></codeline>
<codeline lineno="52"><highlight class="comment"></highlight></codeline>
<codeline lineno="53"><highlight class="comment">It<sp/>sucks<sp/>that<sp/>depth<sp/>buffers<sp/>are<sp/>non-linear,<sp/>because<sp/>the<sp/>bias<sp/>and<sp/>compares<sp/>change<sp/>with<sp/>distance</highlight></codeline>
<codeline lineno="54"><highlight class="comment"></highlight></codeline>
<codeline lineno="55"><highlight class="comment">polygon<sp/>offset<sp/>factor<sp/>causes<sp/>occasional<sp/>texture<sp/>holes<sp/>from<sp/>highly<sp/>angled<sp/>textures</highlight></codeline>
<codeline lineno="56"><highlight class="comment"></highlight></codeline>
<codeline lineno="57"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialized;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lightBufferSize<sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxLightBufferSize<sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lightBufferSizeFraction<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>viewBufferSize<sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>viewBufferHeight<sp/>=<sp/>768;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxViewBufferSize<sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>viewBufferSizeFraction<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>viewBufferHeightFraction<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>nativeViewBuffer<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>true<sp/>if<sp/>viewBufferSize<sp/>is<sp/>the<sp/>viewport<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/>HPBUFFERARB<sp/>floatPbuffer;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/>HDC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>floatPbufferDC;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/><sp/><sp/><sp/><sp/>*floatPbufferImage;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/>HPBUFFERARB<sp/>floatPbuffer2;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/>HDC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>floatPbuffer2DC;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/><sp/><sp/><sp/><sp/>*floatPbuffer2Image;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/>HPBUFFERARB<sp/>floatPbufferQuarter;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/>HDC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>floatPbufferQuarterDC;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/><sp/><sp/><sp/><sp/>*floatPbufferQuarterImage;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/>HGLRC<sp/><sp/><sp/><sp/><sp/><sp/><sp/>floatContext;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/>HPBUFFERARB<sp/>shadowPbuffer;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/>HDC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shadowPbufferDC;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/>HPBUFFERARB<sp/>viewPbuffer;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/>HDC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewPbufferDC;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/><sp/><sp/><sp/><sp/>*shadowImage[3];</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/><sp/><sp/><sp/><sp/>*viewDepthImage;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/><sp/><sp/><sp/><sp/>*viewAlphaImage;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/><sp/><sp/><sp/><sp/>*viewShadowImage;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/><sp/><sp/><sp/><sp/>*jitterImage16;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/><sp/><sp/><sp/><sp/>*jitterImage4;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/><sp/><sp/><sp/><sp/>*jitterImage1;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/><sp/><sp/><sp/><sp/>*random256Image;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shadowVertexProgram;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shadowFragmentProgram16;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shadowFragmentProgram4;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shadowFragmentProgram1;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shadowFragmentProgram0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>screenSpaceShadowVertexProgram;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>screenSpaceShadowFragmentProgram16;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>screenSpaceShadowFragmentProgram4;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>screenSpaceShadowFragmentProgram1;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>screenSpaceShadowFragmentProgram0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>depthMidpointVertexProgram;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>depthMidpointFragmentProgram;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shadowResampleVertexProgram;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shadowResampleFragmentProgram;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gammaDitherVertexProgram;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gammaDitherFragmentProgram;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>downSampleVertexProgram;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>downSampleFragmentProgram;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bloomVertexProgram;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bloomFragmentProgram;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewLightAxialSize;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_sb_lightResolution(<sp/></highlight><highlight class="stringliteral">&quot;r_sb_lightResolution&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1024&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;Pixel<sp/>dimensions<sp/>for<sp/>each<sp/>shadow<sp/>buffer,<sp/>64<sp/>-<sp/>2048&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_sb_viewResolution(<sp/></highlight><highlight class="stringliteral">&quot;r_sb_viewResolution&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1024&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;Width<sp/>of<sp/>screen<sp/>space<sp/>shadow<sp/>sampling&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_sb_noShadows(<sp/></highlight><highlight class="stringliteral">&quot;r_sb_noShadows&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;don&apos;t<sp/>draw<sp/>any<sp/>occluders&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_sb_usePbuffer(<sp/></highlight><highlight class="stringliteral">&quot;r_sb_usePbuffer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;draw<sp/>offscreen&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_sb_jitterScale(<sp/></highlight><highlight class="stringliteral">&quot;r_sb_jitterScale&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0.006&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_FLOAT,<sp/></highlight><highlight class="stringliteral">&quot;scale<sp/>factor<sp/>for<sp/>jitter<sp/>offset&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_sb_biasScale(<sp/></highlight><highlight class="stringliteral">&quot;r_sb_biasScale&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0.0001&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_FLOAT,<sp/></highlight><highlight class="stringliteral">&quot;scale<sp/>factor<sp/>for<sp/>jitter<sp/>bias&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_sb_samples(<sp/></highlight><highlight class="stringliteral">&quot;r_sb_samples&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;4&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;0,<sp/>1,<sp/>4,<sp/>or<sp/>16&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_sb_randomize(<sp/></highlight><highlight class="stringliteral">&quot;r_sb_randomize&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;randomly<sp/>offset<sp/>jitter<sp/>texture<sp/>each<sp/>draw&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/>polyOfsFactor<sp/>causes<sp/>holes<sp/>in<sp/>low<sp/>res<sp/>images</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_sb_polyOfsFactor(<sp/></highlight><highlight class="stringliteral">&quot;r_sb_polyOfsFactor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_FLOAT,<sp/></highlight><highlight class="stringliteral">&quot;polygonOffset<sp/>factor<sp/>for<sp/>drawing<sp/>shadow<sp/>buffer&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_sb_polyOfsUnits(<sp/></highlight><highlight class="stringliteral">&quot;r_sb_polyOfsUnits&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;3000&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_FLOAT,<sp/></highlight><highlight class="stringliteral">&quot;polygonOffset<sp/>units<sp/>for<sp/>drawing<sp/>shadow<sp/>buffer&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_sb_occluderFacing(<sp/></highlight><highlight class="stringliteral">&quot;r_sb_occluderFacing&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>=<sp/>front<sp/>faces,<sp/>1<sp/>=<sp/>back<sp/>faces,<sp/>2<sp/>=<sp/>midway<sp/>between&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/>r_sb_randomizeBufferOrientation?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_sb_frustomFOV(<sp/></highlight><highlight class="stringliteral">&quot;r_sb_frustomFOV&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;92&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_FLOAT,<sp/></highlight><highlight class="stringliteral">&quot;oversize<sp/>FOV<sp/>for<sp/>point<sp/>light<sp/>side<sp/>matching&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_sb_showFrustumPixels(<sp/></highlight><highlight class="stringliteral">&quot;r_sb_showFrustumPixels&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;color<sp/>the<sp/>pixels<sp/>contained<sp/>in<sp/>the<sp/>frustum&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_sb_singleSide(<sp/></highlight><highlight class="stringliteral">&quot;r_sb_singleSide&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_INTEGER,<sp/></highlight><highlight class="stringliteral">&quot;only<sp/>draw<sp/>a<sp/>single<sp/>side<sp/>(0-5)<sp/>of<sp/>point<sp/>lights&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_sb_useCulling(<sp/></highlight><highlight class="stringliteral">&quot;r_sb_useCulling&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;cull<sp/>geometry<sp/>to<sp/>individual<sp/>side<sp/>frustums&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_sb_linearFilter(<sp/></highlight><highlight class="stringliteral">&quot;r_sb_linearFilter&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;use<sp/>GL_LINEAR<sp/>instead<sp/>of<sp/>GL_NEAREST<sp/>on<sp/>shadow<sp/>maps&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_sb_screenSpaceShadow(<sp/></highlight><highlight class="stringliteral">&quot;r_sb_screenSpaceShadow&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;build<sp/>shadows<sp/>in<sp/>screen<sp/>space<sp/>instead<sp/>of<sp/>on<sp/>surfaces&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_hdr_useFloats(<sp/></highlight><highlight class="stringliteral">&quot;r_hdr_useFloats&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_BOOL,<sp/></highlight><highlight class="stringliteral">&quot;use<sp/>a<sp/>floating<sp/>point<sp/>rendering<sp/>buffer&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_hdr_exposure(<sp/></highlight><highlight class="stringliteral">&quot;r_hdr_exposure&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1.0&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_FLOAT,<sp/></highlight><highlight class="stringliteral">&quot;maximum<sp/>light<sp/>scale&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_hdr_bloomFraction(<sp/></highlight><highlight class="stringliteral">&quot;r_hdr_bloomFraction&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0.1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_FLOAT,<sp/></highlight><highlight class="stringliteral">&quot;fraction<sp/>to<sp/>smear<sp/>across<sp/>neighbors&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_hdr_gamma(<sp/></highlight><highlight class="stringliteral">&quot;r_hdr_gamma&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_FLOAT,<sp/></highlight><highlight class="stringliteral">&quot;monitor<sp/>gamma<sp/>power&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_hdr_monitorDither(<sp/></highlight><highlight class="stringliteral">&quot;r_hdr_monitorDither&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0.01&quot;</highlight><highlight class="normal">,<sp/>CVAR_RENDERER<sp/>|<sp/>CVAR_FLOAT,<sp/></highlight><highlight class="stringliteral">&quot;random<sp/>dither<sp/>in<sp/>monitor<sp/>space&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//<sp/>from<sp/>world<sp/>space<sp/>to<sp/>light<sp/>origin,<sp/>looking<sp/>down<sp/>the<sp/>X<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>unflippedLightMatrix[16];</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/>from<sp/>world<sp/>space<sp/>to<sp/>OpenGL<sp/>view<sp/>space,<sp/>looking<sp/>down<sp/>the<sp/>negative<sp/>Z<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>lightMatrix[16];</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/>from<sp/>OpenGL<sp/>view<sp/>space<sp/>to<sp/>OpenGL<sp/>NDC<sp/>(<sp/>-1<sp/>:<sp/>1<sp/>in<sp/>XYZ<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>lightProjectionMatrix[16];</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>RB_ARB2_DrawInteraction(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdraw_interaction__t" kindref="compound">drawInteraction_t</ref><sp/>*din<sp/>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="structwgl_string__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*name;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}<sp/><ref refid="structwgl_string__t" kindref="compound">wglString_t</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><ref refid="structwgl_string__t" kindref="compound">wglString_t</ref><sp/>wglString[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_NUMBER_PIXEL_FORMATS_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2000<sp/>},</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_DRAW_TO_WINDOW_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2001<sp/>},</highlight></codeline>
<codeline lineno="182"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_DRAW_TO_BITMAP_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2002<sp/>},</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_ACCELERATION_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2003<sp/>},</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_NEED_PALETTE_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2004<sp/>},</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_NEED_SYSTEM_PALETTE_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2005<sp/>},</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_SWAP_LAYER_BUFFERS_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>0x2006<sp/>},</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_SWAP_METHOD_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2007<sp/>},</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_NUMBER_OVERLAYS_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2008<sp/>},</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_NUMBER_UNDERLAYS_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2009<sp/>},</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_TRANSPARENT_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x200A<sp/>},</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_TRANSPARENT_RED_VALUE_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>0x2037<sp/>},</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_TRANSPARENT_GREEN_VALUE_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2038<sp/>},</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_TRANSPARENT_BLUE_VALUE_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>0x2039<sp/>},</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_TRANSPARENT_ALPHA_VALUE_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x203A<sp/>},</highlight></codeline>
<codeline lineno="195"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_TRANSPARENT_INDEX_VALUE_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x203B<sp/>},</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_SHARE_DEPTH_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x200C<sp/>},</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_SHARE_STENCIL_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x200D<sp/>},</highlight></codeline>
<codeline lineno="198"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_SHARE_ACCUM_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x200E<sp/>},</highlight></codeline>
<codeline lineno="199"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_SUPPORT_GDI_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x200F<sp/>},</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_SUPPORT_OPENGL_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2010<sp/>},</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_DOUBLE_BUFFER_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2011<sp/>},</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_STEREO_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2012<sp/>},</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_PIXEL_TYPE_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2013<sp/>},</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_COLOR_BITS_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2014<sp/>},</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_RED_BITS_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2015<sp/>},</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_RED_SHIFT_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2016<sp/>},</highlight></codeline>
<codeline lineno="207"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_GREEN_BITS_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2017<sp/>},</highlight></codeline>
<codeline lineno="208"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_GREEN_SHIFT_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2018<sp/>},</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_BLUE_BITS_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2019<sp/>},</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_BLUE_SHIFT_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x201A<sp/>},</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_ALPHA_BITS_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x201B<sp/>},</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_ALPHA_SHIFT_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x201C<sp/>},</highlight></codeline>
<codeline lineno="213"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_ACCUM_BITS_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x201D<sp/>},</highlight></codeline>
<codeline lineno="214"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_ACCUM_RED_BITS_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x201E<sp/>},</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_ACCUM_GREEN_BITS_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x201F<sp/>},</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_ACCUM_BLUE_BITS_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2020<sp/>},</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_ACCUM_ALPHA_BITS_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2021<sp/>},</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_DEPTH_BITS_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2022<sp/>},</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_STENCIL_BITS_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2023<sp/>},</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_AUX_BUFFERS_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2024<sp/>},</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_NO_ACCELERATION_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2025<sp/>},</highlight></codeline>
<codeline lineno="223"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_GENERIC_ACCELERATION_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2026<sp/>},</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_FULL_ACCELERATION_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>0x2027<sp/>},</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_SWAP_EXCHANGE_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2028<sp/>},</highlight></codeline>
<codeline lineno="227"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_SWAP_COPY_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2029<sp/>},</highlight></codeline>
<codeline lineno="228"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_SWAP_UNDEFINED_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x202A<sp/>},</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_TYPE_RGBA_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x202B<sp/>},</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;WGL_TYPE_COLORINDEX_ARB&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x202C<sp/>},</highlight></codeline>
<codeline lineno="232"><highlight class="normal">};</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NUM_WGL_STRINGS<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>wglString<sp/>)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>wglString[0]<sp/>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_CheckWglErrors(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>GetLastError();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*name;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="241"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>LPVOID<sp/>lpMsgBuf;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>FormatMessage(<sp/>FORMAT_MESSAGE_ALLOCATE_BUFFER<sp/>|<sp/>FORMAT_MESSAGE_FROM_SYSTEM<sp/>|<sp/>FORMAT_MESSAGE_IGNORE_INSERTS,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAKELANGID(LANG_NEUTRAL,<sp/>SUBLANG_DEFAULT),<sp/></highlight><highlight class="comment">//<sp/>Default<sp/>language</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(LPTSTR)<sp/>&amp;lpMsgBuf,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL<sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="251"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>&amp;=<sp/>0xffff;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>err<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>13:<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ERROR_INVALID_DATA&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ERROR_INVALID_HANDLE&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4317:<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ERROR_INVALID_OPERATION&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>name<sp/>=<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;code<sp/>%i&quot;</highlight><highlight class="normal">,<sp/>err<sp/>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;GetLastError:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>name<sp/>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_MakeCurrent(<sp/>HDC<sp/>dc,<sp/>HGLRC<sp/>context,<sp/>HPBUFFERARB<sp/>pbuffer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pbuffer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!wglReleaseTexImageARB(<sp/>pbuffer,<sp/>WGL_FRONT_LEFT_ARB<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_CheckWglErrors();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Error(<sp/></highlight><highlight class="stringliteral">&quot;wglReleaseTexImageARB<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!qwglMakeCurrent(<sp/>dc,<sp/>context<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_CheckWglErrors();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;FatalError(<sp/></highlight><highlight class="stringliteral">&quot;qwglMakeCurrent<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_BindTexImage(<sp/>HPBUFFERARB<sp/>pbuffer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!wglReleaseTexImageARB(<sp/>pbuffer,<sp/>WGL_FRONT_LEFT_ARB<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_CheckWglErrors();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Error(<sp/></highlight><highlight class="stringliteral">&quot;wglReleaseTexImageARB<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!wglBindTexImageARB(<sp/>pbuffer,<sp/>WGL_FRONT_LEFT_ARB<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_CheckWglErrors();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Error(<sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>wglBindTexImageARB&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_ReportTextureParms(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parms[8];</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>q<sp/>glGetTexParameteriv(<sp/>GL_TEXTURE_RECTANGLE_NV,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>qglGetIntegerv(<sp/>GL_TEXTURE_BINDING_RECTANGLE_NV,<sp/>parms<sp/>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="295"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="296"><highlight class="comment">RB_CreateBloomTable</highlight></codeline>
<codeline lineno="297"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="298"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>BLOOM_RADIUS<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_CreateBloomTable(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>bloom[BLOOM_RADIUS];</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>total<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gaussian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>stdDev<sp/>=<sp/>2.0;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>BLOOM_RADIUS<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>f<sp/>=<sp/>(float)i<sp/>/<sp/>stdDev;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bloom[i]<sp/>=<sp/>exp(<sp/>-0.5<sp/>*<sp/>f<sp/>*<sp/>f<sp/>);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>+=<sp/>bloom[i];</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>total<sp/>=<sp/>(<sp/>total<sp/>-<sp/>bloom[0]<sp/>)<sp/>*<sp/>2<sp/>+<sp/>bloom[0];</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>normalize<sp/>to<sp/>1.0<sp/>contribution,<sp/>so<sp/>a<sp/>full<sp/>row<sp/>or<sp/>column<sp/>will<sp/>equal<sp/>1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>BLOOM_RADIUS<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bloom[i]<sp/>*=<sp/>1.0<sp/>/<sp/>total;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;PARAM<sp/>bloom%i<sp/>=<sp/>{<sp/>%f<sp/>};\n&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>bloom[i]<sp/>);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="323"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="324"><highlight class="comment">GL_SelectTextureNoClient</highlight></codeline>
<codeline lineno="325"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="326"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GL_SelectTextureNoClient(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unit<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>backEnd.glState.currenttmu<sp/>=<sp/>unit;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>qglActiveTextureARB(<sp/>GL_TEXTURE0_ARB<sp/>+<sp/>unit<sp/>);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>RB_LogComment(<sp/></highlight><highlight class="stringliteral">&quot;glActiveTextureARB(<sp/>%i<sp/>)\n&quot;</highlight><highlight class="normal">,<sp/>unit<sp/>);</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="335"><highlight class="comment">================</highlight></codeline>
<codeline lineno="336"><highlight class="comment">R_CreateShadowBufferImage</highlight></codeline>
<codeline lineno="337"><highlight class="comment"></highlight></codeline>
<codeline lineno="338"><highlight class="comment">================</highlight></codeline>
<codeline lineno="339"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_CreateShadowBufferImage(<sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/>*image<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/><sp/>*data<sp/>=<sp/>(byte<sp/>*)Mem_Alloc(<sp/>lightBufferSize*lightBufferSize<sp/>);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>data,<sp/>0,<sp/>lightBufferSize*lightBufferSize<sp/>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>image-&gt;GenerateImage(<sp/>(byte<sp/>*)data,<sp/>4,<sp/>4,<sp/></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TF_LINEAR,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>TR_CLAMP_TO_BORDER,<sp/>TD_HIGH_QUALITY<sp/>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>reset<sp/>it<sp/>to<sp/>a<sp/>shadow<sp/>depth<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_CheckErrors();</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>image-&gt;uploadWidth<sp/>=<sp/>image-&gt;uploadHeight<sp/>=<sp/>lightBufferSize;<sp/></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>qglTexImage2D(<sp/>GL_TEXTURE_2D,<sp/>0,<sp/>GL_DEPTH_COMPONENT24_ARB,<sp/>lightBufferSize,<sp/>lightBufferSize,<sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>GL_DEPTH_COMPONENT,<sp/>GL_UNSIGNED_BYTE,<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>qglTexParameteri(<sp/>GL_TEXTURE_2D,<sp/>GL_TEXTURE_COMPARE_MODE_ARB,<sp/>GL_COMPARE_R_TO_TEXTURE<sp/>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>qglTexParameteri(<sp/>GL_TEXTURE_2D,<sp/>GL_TEXTURE_COMPARE_MODE_ARB,<sp/>GL_NONE<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>qglTexParameteri(<sp/>GL_TEXTURE_2D,<sp/>GL_TEXTURE_COMPARE_FUNC_ARB,<sp/>GL_LEQUAL<sp/>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>explicit<sp/>zero<sp/>depth<sp/>border</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>color[4];</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>color[0]<sp/>=<sp/>color[1]<sp/>=<sp/>color[2]<sp/>=<sp/>color[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>qglTexParameterfv(<sp/>GL_TEXTURE_2D,<sp/>GL_TEXTURE_BORDER_COLOR,<sp/>color<sp/>);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_CheckErrors();</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>Mem_Free(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_CreateViewAlphaImage(<sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/>*image<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>viewBufferSize*viewBufferSize*4;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/><sp/>*data<sp/>=<sp/>(byte<sp/>*)Mem_Alloc(<sp/>c<sp/>);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>let<sp/>it<sp/>pick<sp/>an<sp/>intensity<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>c<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[i]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>data,<sp/>0,<sp/>viewBufferSize*viewBufferSize<sp/>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>image-&gt;GenerateImage(<sp/>(byte<sp/>*)data,<sp/>viewBufferSize,<sp/>viewBufferSize,<sp/></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TF_LINEAR,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>TR_CLAMP,<sp/>TD_HIGH_QUALITY<sp/>);</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_CreateStubImage(<sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/>*image<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>data[3][4][4];</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>generate<sp/>the<sp/>texture<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>qglGenTextures(<sp/>1,<sp/>&amp;image-&gt;texnum<sp/>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>qglBindTexture(<sp/>GL_TEXTURE_RECTANGLE_NV,<sp/>image-&gt;texnum<sp/>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>data,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>data<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>glTexImage2D(<sp/>GL_TEXTURE_RECTANGLE_NV,<sp/>0,<sp/>GL_FLOAT_RGBA16_NV,<sp/>4,<sp/>3,<sp/>0,<sp/>GL_RGBA,<sp/>GL_FLOAT,<sp/>&amp;data<sp/>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="393"><highlight class="comment">================</highlight></codeline>
<codeline lineno="394"><highlight class="comment">R_CreateJitterImage</highlight></codeline>
<codeline lineno="395"><highlight class="comment"></highlight></codeline>
<codeline lineno="396"><highlight class="comment">================</highlight></codeline>
<codeline lineno="397"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>JITTER_SIZE<sp/>=<sp/>128;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_CreateJitterImage16(<sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/>*image<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/><sp/>data[JITTER_SIZE][JITTER_SIZE*16][4];</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>JITTER_SIZE<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>0<sp/>;<sp/>s<sp/>&lt;<sp/>16<sp/>;<sp/>s++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sOfs<sp/>=<sp/>64<sp/>*<sp/>(<sp/>s<sp/>&amp;<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tOfs<sp/>=<sp/>64<sp/>*<sp/>(<sp/>(<sp/>s<sp/>&gt;&gt;<sp/>2<sp/>)<sp/>&amp;<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0<sp/>;<sp/>j<sp/>&lt;<sp/>JITTER_SIZE<sp/>;<sp/>j++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[i][s*JITTER_SIZE+j][0]<sp/>=<sp/>(rand()<sp/>&amp;<sp/>63<sp/>)<sp/>|<sp/>sOfs;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[i][s*JITTER_SIZE+j][1]<sp/>=<sp/>(rand()<sp/>&amp;<sp/>63<sp/>)<sp/>|<sp/>tOfs;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[i][s*JITTER_SIZE+j][2]<sp/>=<sp/>rand();</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[i][s*JITTER_SIZE+j][3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>image-&gt;GenerateImage(<sp/>(byte<sp/>*)data,<sp/>JITTER_SIZE*16,<sp/>JITTER_SIZE,<sp/></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TF_NEAREST,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>TR_REPEAT,<sp/>TD_HIGH_QUALITY<sp/>);</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_CreateJitterImage4(<sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/>*image<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/><sp/>data[JITTER_SIZE][JITTER_SIZE*4][4];</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>JITTER_SIZE<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>0<sp/>;<sp/>s<sp/>&lt;<sp/>4<sp/>;<sp/>s++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sOfs<sp/>=<sp/>128<sp/>*<sp/>(<sp/>s<sp/>&amp;<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tOfs<sp/>=<sp/>128<sp/>*<sp/>(<sp/>(<sp/>s<sp/>&gt;&gt;<sp/>1<sp/>)<sp/>&amp;<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0<sp/>;<sp/>j<sp/>&lt;<sp/>JITTER_SIZE<sp/>;<sp/>j++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[i][s*JITTER_SIZE+j][0]<sp/>=<sp/>(rand()<sp/>&amp;<sp/>127<sp/>)<sp/>|<sp/>sOfs;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[i][s*JITTER_SIZE+j][1]<sp/>=<sp/>(rand()<sp/>&amp;<sp/>127<sp/>)<sp/>|<sp/>tOfs;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[i][s*JITTER_SIZE+j][2]<sp/>=<sp/>rand();</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[i][s*JITTER_SIZE+j][3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>image-&gt;GenerateImage(<sp/>(byte<sp/>*)data,<sp/>JITTER_SIZE*4,<sp/>JITTER_SIZE,<sp/></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TF_NEAREST,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>TR_REPEAT,<sp/>TD_HIGH_QUALITY<sp/>);</highlight></codeline>
<codeline lineno="439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_CreateJitterImage1(<sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/>*image<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/><sp/>data[JITTER_SIZE][JITTER_SIZE][4];</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>JITTER_SIZE<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0<sp/>;<sp/>j<sp/>&lt;<sp/>JITTER_SIZE<sp/>;<sp/>j++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[i][j][0]<sp/>=<sp/>rand();</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[i][j][1]<sp/>=<sp/>rand();</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[i][j][2]<sp/>=<sp/>rand();</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[i][j][3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>image-&gt;GenerateImage(<sp/>(byte<sp/>*)data,<sp/>JITTER_SIZE,<sp/>JITTER_SIZE,<sp/></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TF_NEAREST,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>TR_REPEAT,<sp/>TD_HIGH_QUALITY<sp/>);</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_CreateRandom256Image(<sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/>*image<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/><sp/>data[256][256][4];</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>256<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0<sp/>;<sp/>j<sp/>&lt;<sp/>256<sp/>;<sp/>j++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[i][j][0]<sp/>=<sp/>rand();</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[i][j][1]<sp/>=<sp/>rand();</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[i][j][2]<sp/>=<sp/>rand();</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[i][j][3]<sp/>=<sp/>rand();</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>image-&gt;GenerateImage(<sp/>(byte<sp/>*)data,<sp/>256,<sp/>256,<sp/></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TF_NEAREST,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>TR_REPEAT,<sp/>TD_HIGH_QUALITY<sp/>);</highlight></codeline>
<codeline lineno="471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="475"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="476"><highlight class="comment">R_PrintPixelFormat</highlight></codeline>
<codeline lineno="477"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="478"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_PrintPixelFormat(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pixelFormat<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>res;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>iAttribute;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iValue;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;-----<sp/>pixelFormat<sp/>%i<sp/>-----\n&quot;</highlight><highlight class="normal">,<sp/>pixelFormat<sp/>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1<sp/>;<sp/>i<sp/>&lt;<sp/>NUM_WGL_STRINGS<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iAttribute<sp/>=<sp/>wglString[i].num;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>wglGetPixelFormatAttribivARB(<sp/>win32.hDC,<sp/>pixelFormat,<sp/>0,<sp/>1,<sp/>&amp;iAttribute,<sp/>&amp;iValue<sp/>);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>res<sp/>&amp;&amp;<sp/>iValue<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>:<sp/>%i\n&quot;</highlight><highlight class="normal">,<sp/>wglString[i].name,<sp/>iValue<sp/>);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="497"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="498"><highlight class="comment">R_Exp_Allocate</highlight></codeline>
<codeline lineno="499"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="500"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_Exp_Allocate(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>a<sp/>pixel<sp/>format<sp/>for<sp/>our<sp/>floating<sp/>point<sp/>pbuffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>iAttributes[NUM_WGL_STRINGS*2],<sp/>*atr_p;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>FLOAT<sp/><sp/><sp/>fAttributes[]<sp/>=<sp/>{0,<sp/>0};</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>UINT<sp/><sp/><sp/><sp/>numFormats;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>pixelformats[1024];</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ret;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pbiAttributes[]<sp/>=<sp/>{0,<sp/>0};</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>initialized<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>1</highlight></codeline>
<codeline lineno="513"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>the<sp/>floating<sp/>point<sp/>rendering<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>atr_p<sp/>=<sp/>iAttributes;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>*atr_p++<sp/>=<sp/>WGL_DRAW_TO_PBUFFER_ARB;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>*atr_p++<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>*atr_p++<sp/>=<sp/>WGL_FLOAT_COMPONENTS_NV;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>*atr_p++<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>*atr_p++<sp/>=<sp/>WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>*atr_p++<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*atr_p++<sp/>=<sp/>WGL_BIND_TO_TEXTURE_RGBA_ARB;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*atr_p++<sp/>=<sp/>TRUE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>*atr_p++<sp/>=<sp/>WGL_DEPTH_BITS_ARB;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>*atr_p++<sp/>=<sp/>24;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>*atr_p++<sp/>=<sp/>WGL_STENCIL_BITS_ARB;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>*atr_p++<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>*atr_p++<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>*atr_p++<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>wglChoosePixelFormatARB(<sp/>win32.hDC,<sp/>iAttributes,<sp/>fAttributes,<sp/></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>pixelformats<sp/>)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>pixelformats[0]<sp/>),<sp/>pixelformats,<sp/>&amp;numFormats<sp/>);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="537"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>(int)numFormats<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_PrintPixelFormat(<sp/>pixelformats[i]<sp/>);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="541"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;\nfloatPbuffer:\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>R_PrintPixelFormat(<sp/>pixelformats[0]<sp/>);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>a<sp/>pbuffer<sp/>with<sp/>this<sp/>pixel<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pbiAttributesTexture[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WGL_TEXTURE_FORMAT_ARB,<sp/>WGL_TEXTURE_FLOAT_RGBA_NV,<sp/></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WGL_TEXTURE_TARGET_ARB,<sp/>WGL_TEXTURE_RECTANGLE_NV,<sp/></highlight><highlight class="comment">//<sp/>WGL_TEXTURE_2D_ARB,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>floatPbuffer<sp/>=<sp/>wglCreatePbufferARB(<sp/>win32.hDC,<sp/>pixelformats[0],<sp/>glConfig.vidWidth,</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glConfig.vidHeight,<sp/>pbiAttributesTexture<sp/>);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!floatPbuffer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>create<sp/>floatPbuffer.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_CheckErrors();</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>floatPbufferDC<sp/>=<sp/>wglGetPbufferDCARB(<sp/>floatPbuffer<sp/>);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>floatPbufferImage<sp/>=<sp/>globalImages-&gt;ImageFromFunction(<sp/></highlight><highlight class="stringliteral">&quot;_floatPbuffer&quot;</highlight><highlight class="normal">,<sp/>R_CreateStubImage<sp/>);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>second<sp/>buffer<sp/>for<sp/>ping-pong<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>floatPbuffer2<sp/>=<sp/>wglCreatePbufferARB(<sp/>win32.hDC,<sp/>pixelformats[0],<sp/>glConfig.vidWidth,</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glConfig.vidHeight,<sp/>pbiAttributesTexture<sp/>);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!floatPbuffer2<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>create<sp/>floatPbuffer.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_CheckErrors();</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>floatPbuffer2DC<sp/>=<sp/>wglGetPbufferDCARB(<sp/>floatPbuffer2<sp/>);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>floatPbuffer2Image<sp/>=<sp/>globalImages-&gt;ImageFromFunction(<sp/></highlight><highlight class="stringliteral">&quot;_floatPbuffer2&quot;</highlight><highlight class="normal">,<sp/>R_CreateStubImage<sp/>);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>third<sp/>buffer<sp/>for<sp/>down<sp/>sampling<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>floatPbufferQuarter<sp/>=<sp/>wglCreatePbufferARB(<sp/>win32.hDC,<sp/>pixelformats[0],<sp/>glConfig.vidWidth<sp/>/<sp/>4,</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glConfig.vidHeight<sp/>/<sp/>4,<sp/>pbiAttributesTexture<sp/>);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!floatPbufferQuarter<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>create<sp/>floatPbuffer.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_CheckErrors();</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>floatPbufferQuarterDC<sp/>=<sp/>wglGetPbufferDCARB(<sp/>floatPbufferQuarter<sp/>);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>floatPbufferQuarterImage<sp/>=<sp/>globalImages-&gt;ImageFromFunction(<sp/></highlight><highlight class="stringliteral">&quot;floatPbufferQuarter&quot;</highlight><highlight class="normal">,<sp/>R_CreateStubImage<sp/>);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>new<sp/>GL<sp/>context<sp/>for<sp/>this<sp/>pixel<sp/>format<sp/>and<sp/>share<sp/>textures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>floatContext<sp/>=<sp/>wglCreateContext(<sp/>floatPbufferDC<sp/>);<sp/></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!floatContext<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>create<sp/>context<sp/>for<sp/>floatPbufferDC.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_CheckErrors();</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!wglShareLists(<sp/>floatContext,<sp/>win32.hGLRC<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>share<sp/>lists.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>rendering<sp/>context<sp/>for<sp/>this<sp/>pixel<sp/>format<sp/>and<sp/>share<sp/>textures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>a<sp/>texture<sp/>for<sp/>the<sp/>rendering<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="595"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//=================================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>the<sp/>shadow<sp/>pbuffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>atr_p<sp/>=<sp/>iAttributes;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>*atr_p++<sp/>=<sp/>WGL_DRAW_TO_PBUFFER_ARB;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>*atr_p++<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>*atr_p++<sp/>=<sp/>WGL_RED_BITS_ARB;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>*atr_p++<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>*atr_p++<sp/>=<sp/>WGL_GREEN_BITS_ARB;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>*atr_p++<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>*atr_p++<sp/>=<sp/>WGL_BLUE_BITS_ARB;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>*atr_p++<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>*atr_p++<sp/>=<sp/>WGL_ALPHA_BITS_ARB;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>*atr_p++<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>*atr_p++<sp/>=<sp/>WGL_DEPTH_BITS_ARB;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>*atr_p++<sp/>=<sp/>24;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>*atr_p++<sp/>=<sp/>WGL_STENCIL_BITS_ARB;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>*atr_p++<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>*atr_p++<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>*atr_p++<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>wglChoosePixelFormatARB(<sp/>win32.hDC,<sp/>iAttributes,<sp/>fAttributes,<sp/></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>pixelformats<sp/>)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>pixelformats[0]<sp/>),<sp/>pixelformats,<sp/>&amp;numFormats<sp/>);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="623"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>(int)numFormats<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_PrintPixelFormat(<sp/>pixelformats[i]<sp/>);<sp/><sp/></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="627"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;\nshadowPbuffer:\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>R_PrintPixelFormat(<sp/>pixelformats[0]<sp/>);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal">pixelformats[0]<sp/>=<sp/>win32.pixelformat;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>forced<sp/>to<sp/>do<sp/>this<sp/>by<sp/>wgl...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>lightBufferSize<sp/>=<sp/>maxLightBufferSize;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>a<sp/>pbuffer<sp/>with<sp/>this<sp/>pixel<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>shadowPbuffer<sp/>=<sp/>wglCreatePbufferARB(<sp/>win32.hDC,<sp/>pixelformats[0],<sp/>lightBufferSize,</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lightBufferSize,<sp/>pbiAttributes<sp/>);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>a<sp/>rendering<sp/>context<sp/>for<sp/>the<sp/>pbuffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>shadowPbufferDC<sp/>=<sp/>wglGetPbufferDCARB(<sp/>shadowPbuffer<sp/>);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>generate<sp/>the<sp/>texture<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>shadowImage[0]<sp/>=<sp/>globalImages-&gt;ImageFromFunction(<sp/>va(</highlight><highlight class="stringliteral">&quot;_shadowBuffer%i_0&quot;</highlight><highlight class="normal">,lightBufferSize),<sp/>R_CreateShadowBufferImage<sp/>);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>shadowImage[1]<sp/>=<sp/>globalImages-&gt;ImageFromFunction(<sp/>va(</highlight><highlight class="stringliteral">&quot;_shadowBuffer%i_1&quot;</highlight><highlight class="normal">,lightBufferSize),<sp/>R_CreateShadowBufferImage<sp/>);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>shadowImage[2]<sp/>=<sp/>globalImages-&gt;ImageFromFunction(<sp/>va(</highlight><highlight class="stringliteral">&quot;_shadowBuffer%i_2&quot;</highlight><highlight class="normal">,lightBufferSize),<sp/>R_CreateShadowBufferImage<sp/>);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>lightBufferSize<sp/>=<sp/>maxViewBufferSize;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>a<sp/>pbuffer<sp/>with<sp/>this<sp/>pixel<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>viewPbuffer<sp/>=<sp/>wglCreatePbufferARB(<sp/>win32.hDC,<sp/>pixelformats[0],<sp/>maxViewBufferSize,</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxViewBufferSize,<sp/>pbiAttributes<sp/>);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>a<sp/>rendering<sp/>context<sp/>for<sp/>the<sp/>pbuffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>viewPbufferDC<sp/>=<sp/>wglGetPbufferDCARB(<sp/>viewPbuffer<sp/>);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>image<sp/>space<sp/>depth<sp/>buffer<sp/>for<sp/>image-space<sp/>shadow<sp/>trnasforms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>viewDepthImage<sp/>=<sp/>globalImages-&gt;ImageFromFunction(</highlight><highlight class="stringliteral">&quot;_viewDepth&quot;</highlight><highlight class="normal">,<sp/>R_CreateShadowBufferImage<sp/>);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>image<sp/>space<sp/>shadow<sp/>alpha<sp/>buffer<sp/>for<sp/>subsampling<sp/>the<sp/>shadow<sp/>calculation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>viewAlphaImage<sp/>=<sp/>globalImages-&gt;ImageFromFunction(</highlight><highlight class="stringliteral">&quot;_viewAlpha&quot;</highlight><highlight class="normal">,<sp/>R_CreateViewAlphaImage<sp/>);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>generate<sp/>the<sp/>jitter<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>jitterImage16<sp/>=<sp/>globalImages-&gt;ImageFromFunction(<sp/></highlight><highlight class="stringliteral">&quot;_jitter16&quot;</highlight><highlight class="normal">,<sp/>R_CreateJitterImage16<sp/>);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>jitterImage4<sp/>=<sp/>globalImages-&gt;ImageFromFunction(<sp/></highlight><highlight class="stringliteral">&quot;_jitter4&quot;</highlight><highlight class="normal">,<sp/>R_CreateJitterImage4<sp/>);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>jitterImage1<sp/>=<sp/>globalImages-&gt;ImageFromFunction(<sp/></highlight><highlight class="stringliteral">&quot;_jitter1&quot;</highlight><highlight class="normal">,<sp/>R_CreateJitterImage1<sp/>);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>depthMidpointVertexProgram<sp/>=<sp/>R_FindARBProgram(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/></highlight><highlight class="stringliteral">&quot;depthMidpoint.vfp&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>depthMidpointFragmentProgram<sp/>=<sp/>R_FindARBProgram(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/></highlight><highlight class="stringliteral">&quot;depthMidpoint.vfp&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>shadowResampleVertexProgram<sp/>=<sp/>R_FindARBProgram(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/></highlight><highlight class="stringliteral">&quot;shadowResample.vfp&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>shadowResampleFragmentProgram<sp/>=<sp/>R_FindARBProgram(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/></highlight><highlight class="stringliteral">&quot;shadowResample.vfp&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>screenSpaceShadowVertexProgram<sp/>=<sp/>R_FindARBProgram(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/></highlight><highlight class="stringliteral">&quot;screenSpaceShadow1.vfp&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>screenSpaceShadowFragmentProgram0<sp/>=<sp/>R_FindARBProgram(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/></highlight><highlight class="stringliteral">&quot;screenSpaceShadow0.vfp&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>screenSpaceShadowFragmentProgram1<sp/>=<sp/>R_FindARBProgram(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/></highlight><highlight class="stringliteral">&quot;screenSpaceShadow1.vfp&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>screenSpaceShadowFragmentProgram4<sp/>=<sp/>R_FindARBProgram(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/></highlight><highlight class="stringliteral">&quot;screenSpaceShadow4.vfp&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>screenSpaceShadowFragmentProgram16<sp/>=<sp/>R_FindARBProgram(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/></highlight><highlight class="stringliteral">&quot;screenSpaceShadow16.vfp&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>shadowVertexProgram<sp/>=<sp/>R_FindARBProgram(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/></highlight><highlight class="stringliteral">&quot;shadowBufferInteraction1.vfp&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>shadowFragmentProgram0<sp/>=<sp/>R_FindARBProgram(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/></highlight><highlight class="stringliteral">&quot;shadowBufferInteraction0.vfp&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>shadowFragmentProgram1<sp/>=<sp/>R_FindARBProgram(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/></highlight><highlight class="stringliteral">&quot;shadowBufferInteraction1.vfp&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>shadowFragmentProgram4<sp/>=<sp/>R_FindARBProgram(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/></highlight><highlight class="stringliteral">&quot;shadowBufferInteraction4.vfp&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>shadowFragmentProgram16<sp/>=<sp/>R_FindARBProgram(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/></highlight><highlight class="stringliteral">&quot;shadowBufferInteraction16.vfp&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>gammaDitherVertexProgram<sp/>=<sp/>R_FindARBProgram(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/></highlight><highlight class="stringliteral">&quot;gammaDither.vfp&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>gammaDitherFragmentProgram<sp/>=<sp/>R_FindARBProgram(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/></highlight><highlight class="stringliteral">&quot;gammaDither.vfp&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>downSampleVertexProgram<sp/>=<sp/>R_FindARBProgram(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/></highlight><highlight class="stringliteral">&quot;downSample.vfp&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>downSampleFragmentProgram<sp/>=<sp/>R_FindARBProgram(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/></highlight><highlight class="stringliteral">&quot;downSample.vfp&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>bloomVertexProgram<sp/>=<sp/>R_FindARBProgram(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/></highlight><highlight class="stringliteral">&quot;bloom.vfp&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>bloomFragmentProgram<sp/>=<sp/>R_FindARBProgram(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/></highlight><highlight class="stringliteral">&quot;bloom.vfp&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>random256Image<sp/>=<sp/>globalImages-&gt;ImageFromFunction(<sp/></highlight><highlight class="stringliteral">&quot;_random256&quot;</highlight><highlight class="normal">,<sp/>R_CreateRandom256Image<sp/>);</highlight></codeline>
<codeline lineno="702"><highlight class="normal">}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="comment">//===========================================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CULL_RECEIVER<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>still<sp/>draw<sp/>occluder,<sp/>but<sp/>it<sp/>is<sp/>out<sp/>of<sp/>the<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CULL_OCCLUDER_AND_RECEIVER<sp/>=<sp/>2;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>surface<sp/>doesn&apos;t<sp/>effect<sp/>the<sp/>view<sp/>at<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="710"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="711"><highlight class="comment">RB_EXP_CullInteractions</highlight></codeline>
<codeline lineno="712"><highlight class="comment"></highlight></codeline>
<codeline lineno="713"><highlight class="comment">Sets<sp/>surfaceInteraction_t-&gt;cullBits</highlight></codeline>
<codeline lineno="714"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="715"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_EXP_CullInteractions(<sp/><ref refid="structview_light__s" kindref="compound">viewLight_t</ref><sp/>*vLight,<sp/><ref refid="classid_plane" kindref="compound">idPlane</ref><sp/>frustumPlanes[6]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classid_interaction" kindref="compound">idInteraction</ref><sp/>*inter<sp/>=<sp/>vLight-&gt;lightDef-&gt;firstInteraction<sp/>;<sp/>inter<sp/>;<sp/>inter<sp/>=<sp/>inter-&gt;lightNext<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref><sp/>*entityDef<sp/>=<sp/>inter-&gt;entityDef;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!entityDef<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>inter-&gt;numSurfaces<sp/>&lt;<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>culled<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_sb_useCulling.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>transform<sp/>light<sp/>frustum<sp/>into<sp/>object<sp/>space,<sp/>positive<sp/>side<sp/>points<sp/>outside<sp/>the<sp/>light</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_plane" kindref="compound">idPlane</ref><sp/>localPlanes[6];</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>plane;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>plane<sp/>=<sp/>0<sp/>;<sp/>plane<sp/>&lt;<sp/>6<sp/>;<sp/>plane++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_GlobalPlaneToLocal(<sp/>entityDef-&gt;modelMatrix,<sp/>frustumPlanes[plane],<sp/>localPlanes[plane]<sp/>);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cull<sp/>the<sp/>entire<sp/>entity<sp/>bounding<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>has<sp/>referenceBounds<sp/>been<sp/>tightened<sp/>to<sp/>the<sp/>actual<sp/>model<sp/>bounds?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/>corners[8];</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>8<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>corners[i][0]<sp/>=<sp/>entityDef-&gt;referenceBounds[i&amp;1][0];</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>corners[i][1]<sp/>=<sp/>entityDef-&gt;referenceBounds[(i&gt;&gt;1)&amp;1][1];</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>corners[i][2]<sp/>=<sp/>entityDef-&gt;referenceBounds[(i&gt;&gt;2)&amp;1][2];</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>plane<sp/>=<sp/>0<sp/>;<sp/>plane<sp/>&lt;<sp/>6<sp/>;<sp/>plane++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>j;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>j<sp/>=<sp/>0<sp/>;<sp/>j<sp/>&lt;<sp/>8<sp/>;<sp/>j++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>a<sp/>corner<sp/>is<sp/>on<sp/>the<sp/>negative<sp/>side<sp/>(inside)<sp/>of<sp/>the<sp/>frustum,<sp/>the<sp/>surface<sp/>is<sp/>not<sp/>culled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>this<sp/>plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>corners[j]<sp/>*<sp/>localPlanes[plane].ToVec4().ToVec3()<sp/>+<sp/>localPlanes[plane][3]<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>j<sp/>==<sp/>8<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>points<sp/>outside<sp/>the<sp/>light</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>plane<sp/>&lt;<sp/>6<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>culled<sp/>=<sp/>CULL_OCCLUDER_AND_RECEIVER;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>inter-&gt;numSurfaces<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface_interaction__t" kindref="compound">surfaceInteraction_t</ref><sp/><sp/><sp/><sp/>*surfInt<sp/>=<sp/>&amp;inter-&gt;surfaces[i];</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!surfInt-&gt;ambientTris<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surfInt-&gt;expCulled<sp/>=<sp/>culled;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="776"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="777"><highlight class="comment">RB_EXP_RenderOccluders</highlight></codeline>
<codeline lineno="778"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="779"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_EXP_RenderOccluders(<sp/><ref refid="structview_light__s" kindref="compound">viewLight_t</ref><sp/>*vLight<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classid_interaction" kindref="compound">idInteraction</ref><sp/>*inter<sp/>=<sp/>vLight-&gt;lightDef-&gt;firstInteraction<sp/>;<sp/>inter<sp/>;<sp/>inter<sp/>=<sp/>inter-&gt;lightNext<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref><sp/>*entityDef<sp/>=<sp/>inter-&gt;entityDef;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!entityDef<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>inter-&gt;numSurfaces<sp/>&lt;<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>need<sp/>to<sp/>check<sp/>for<sp/>current<sp/>on<sp/>this,<sp/>because<sp/>each<sp/>interaction<sp/>is<sp/>always</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>different<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>matrix[16];</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>myGlMultMatrix(<sp/>inter-&gt;entityDef-&gt;modelMatrix,<sp/>lightMatrix,<sp/>matrix<sp/>);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglLoadMatrixf(<sp/>matrix<sp/>);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>each<sp/>surface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>inter-&gt;numSurfaces<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsurface_interaction__t" kindref="compound">surfaceInteraction_t</ref><sp/><sp/><sp/><sp/>*surfInt<sp/>=<sp/>&amp;inter-&gt;surfaces[i];</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!surfInt-&gt;ambientTris<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>surfInt-&gt;shader<sp/>&amp;&amp;<sp/>!surfInt-&gt;shader-&gt;SurfaceCastsShadow()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cull<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>surfInt-&gt;expCulled<sp/>==<sp/>CULL_OCCLUDER_AND_RECEIVER<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>render<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri<sp/>=<sp/>surfInt-&gt;ambientTris;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!tri-&gt;ambientCache<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_CreateAmbientCache(<sp/>const_cast&lt;srfTriangles_t<sp/>*&gt;(tri),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);<sp/></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref><sp/>*ac<sp/>=<sp/>(<ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref><sp/>*)vertexCache.Position(<sp/>tri-&gt;ambientCache<sp/>);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglVertexPointer(<sp/>3,<sp/>GL_FLOAT,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref><sp/>),<sp/>ac-&gt;xyz.ToFloatPtr()<sp/>);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>qglTexCoordPointer(<sp/>2,<sp/>GL_FLOAT,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref><sp/>),<sp/>ac-&gt;st.ToFloatPtr()<sp/>);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>surfInt-&gt;shader<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surfInt-&gt;shader-&gt;GetEditorImage()-&gt;Bind();</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_DrawElementsWithCounters(<sp/>tri<sp/>);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="829"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="830"><highlight class="comment">RB_RenderShadowBuffer</highlight></codeline>
<codeline lineno="831"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="832"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>RB_RenderShadowBuffer(<sp/><ref refid="structview_light__s" kindref="compound">viewLight_t</ref><sp/><sp/>*vLight,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>side<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>xmin,<sp/>xmax,<sp/>ymin,<sp/>ymax;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>width,<sp/>height;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>zNear;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>fov<sp/>=<sp/>r_sb_frustomFOV.GetFloat();</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>90<sp/>degree<sp/>projection<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>zNear<sp/><sp/><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>ymax<sp/>=<sp/>zNear<sp/>*<sp/>tan(<sp/>fov<sp/>*<sp/>idMath::PI<sp/>/<sp/>360.0f<sp/>);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>ymin<sp/>=<sp/>-ymax;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>xmax<sp/>=<sp/>zNear<sp/>*<sp/>tan(<sp/>fov<sp/>*<sp/>idMath::PI<sp/>/<sp/>360.0f<sp/>);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>xmin<sp/>=<sp/>-xmax;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>width<sp/>=<sp/>xmax<sp/>-<sp/>xmin;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>height<sp/>=<sp/>ymax<sp/>-<sp/>ymin;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>lightProjectionMatrix[0]<sp/>=<sp/>2<sp/>*<sp/>zNear<sp/>/<sp/>width;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>lightProjectionMatrix[4]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>lightProjectionMatrix[8]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>lightProjectionMatrix[12]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>lightProjectionMatrix[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>lightProjectionMatrix[5]<sp/>=<sp/>2<sp/>*<sp/>zNear<sp/>/<sp/>height;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>lightProjectionMatrix[9]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>lightProjectionMatrix[13]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>the<sp/>far-plane-at-infinity<sp/>formulation,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>crunches<sp/>the<sp/>Z<sp/>range<sp/>slightly<sp/>so<sp/>w=0<sp/>vertexes<sp/>do<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rasterize<sp/>right<sp/>at<sp/>the<sp/>wraparound<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>lightProjectionMatrix[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>lightProjectionMatrix[6]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>lightProjectionMatrix[10]<sp/>=<sp/>-0.999f;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>lightProjectionMatrix[14]<sp/>=<sp/>-2.0f<sp/>*<sp/>zNear;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>lightProjectionMatrix[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>lightProjectionMatrix[7]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>lightProjectionMatrix[11]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>lightProjectionMatrix[15]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_sb_usePbuffer.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>current<sp/>openGL<sp/>drawable<sp/>to<sp/>the<sp/>shadow<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_MakeCurrent(<sp/>shadowPbufferDC,<sp/>win32.hGLRC,<sp/>NULL<sp/></highlight><highlight class="comment">/*<sp/>!@#<sp/>shadowPbuffer<sp/>*/</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>qglMatrixMode(<sp/>GL_PROJECTION<sp/>);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>qglLoadMatrixf(<sp/>lightProjectionMatrix<sp/>);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>qglMatrixMode(<sp/>GL_MODELVIEW<sp/>);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>qglViewport(<sp/>0,<sp/>0,<sp/>lightBufferSize,<sp/>lightBufferSize<sp/>);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>qglScissor(<sp/>0,<sp/>0,<sp/>lightBufferSize,<sp/>lightBufferSize<sp/>);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>qglStencilFunc(<sp/>GL_ALWAYS,<sp/>0,<sp/>255<sp/>);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal">qglClearColor(<sp/>0,<sp/>1,<sp/>0,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="892"><highlight class="normal">GL_State(<sp/>GLS_DEPTHFUNC_LESS<sp/>|<sp/>GLS_SRCBLEND_ONE<sp/>|<sp/>GLS_DSTBLEND_ZERO<sp/>);<sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>depth<sp/>mask<sp/>is<sp/>off<sp/>before<sp/>clear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal">qglClear(<sp/>GL_COLOR_BUFFER_BIT<sp/>|<sp/>GL_DEPTH_BUFFER_BIT<sp/>);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight><highlight class="comment">//<sp/>draw<sp/>all<sp/>the<sp/>occluders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal">qglColor3f(<sp/>1,<sp/>1,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="897"><highlight class="normal">GL_SelectTexture(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="898"><highlight class="normal">qglEnableClientState(<sp/>GL_TEXTURE_COORD_ARRAY<sp/>);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>backEnd.currentSpace<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>s_flipMatrix[16]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>from<sp/>our<sp/>coordinate<sp/>system<sp/>(looking<sp/>down<sp/>X)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>OpenGL&apos;s<sp/>coordinate<sp/>system<sp/>(looking<sp/>down<sp/>-Z)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>-1,<sp/>0,</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1,<sp/>0,<sp/>0,<sp/>0,</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>1,<sp/>0,<sp/>0,</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>0,<sp/>1</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>viewMatrix[16];</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/>vec;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/>origin<sp/>=<sp/>vLight-&gt;lightDef-&gt;globalLightOrigin;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>side<sp/>==<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>projected<sp/>light</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec<sp/>=<sp/>vLight-&gt;lightDef-&gt;parms.target;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec.Normalize();</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewMatrix[0]<sp/>=<sp/>vec[0];</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewMatrix[4]<sp/>=<sp/>vec[1];</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewMatrix[8]<sp/>=<sp/>vec[2];</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec<sp/>=<sp/>vLight-&gt;lightDef-&gt;parms.right;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec.Normalize();</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewMatrix[1]<sp/>=<sp/>-vec[0];</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewMatrix[5]<sp/>=<sp/>-vec[1];</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewMatrix[9]<sp/>=<sp/>-vec[2];</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec<sp/>=<sp/>vLight-&gt;lightDef-&gt;parms.up;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec.Normalize();</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewMatrix[2]<sp/>=<sp/>vec[0];</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewMatrix[6]<sp/>=<sp/>vec[1];</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewMatrix[10]<sp/>=<sp/>vec[2];</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>side<sp/>of<sp/>a<sp/>point<sp/>light</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<sp/>viewMatrix,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>viewMatrix<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>side<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewMatrix[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewMatrix[9]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewMatrix[6]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewMatrix[0]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewMatrix[9]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewMatrix[6]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewMatrix[4]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewMatrix[1]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewMatrix[10]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewMatrix[4]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewMatrix[1]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewMatrix[10]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewMatrix[8]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewMatrix[1]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewMatrix[6]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewMatrix[8]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewMatrix[1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewMatrix[6]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>viewMatrix[12]<sp/>=<sp/>-origin[0]<sp/>*<sp/>viewMatrix[0]<sp/>+<sp/>-origin[1]<sp/>*<sp/>viewMatrix[4]<sp/>+<sp/>-origin[2]<sp/>*<sp/>viewMatrix[8];</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>viewMatrix[13]<sp/>=<sp/>-origin[0]<sp/>*<sp/>viewMatrix[1]<sp/>+<sp/>-origin[1]<sp/>*<sp/>viewMatrix[5]<sp/>+<sp/>-origin[2]<sp/>*<sp/>viewMatrix[9];</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>viewMatrix[14]<sp/>=<sp/>-origin[0]<sp/>*<sp/>viewMatrix[2]<sp/>+<sp/>-origin[1]<sp/>*<sp/>viewMatrix[6]<sp/>+<sp/>-origin[2]<sp/>*<sp/>viewMatrix[10];</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>viewMatrix[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>viewMatrix[7]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>viewMatrix[11]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/>viewMatrix[15]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(<sp/>unflippedLightMatrix,<sp/>viewMatrix,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>unflippedLightMatrix<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>myGlMultMatrix(<sp/>viewMatrix,<sp/>s_flipMatrix,lightMatrix);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>frustum<sp/>planes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_plane" kindref="compound">idPlane</ref><sp/>globalFrustum[6];</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>near<sp/>clip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>globalFrustum[0][0]<sp/>=<sp/>-viewMatrix[0];</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>globalFrustum[0][1]<sp/>=<sp/>-viewMatrix[4];</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>globalFrustum[0][2]<sp/>=<sp/>-viewMatrix[8];</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>globalFrustum[0][3]<sp/>=<sp/>-(origin[0]<sp/>*<sp/>globalFrustum[0][0]<sp/>+<sp/>origin[1]<sp/>*<sp/>globalFrustum[0][1]<sp/>+<sp/>origin[2]<sp/>*<sp/>globalFrustum[0][2]);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>far<sp/>clip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/>globalFrustum[1][0]<sp/>=<sp/>viewMatrix[0];</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>globalFrustum[1][1]<sp/>=<sp/>viewMatrix[4];</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>globalFrustum[1][2]<sp/>=<sp/>viewMatrix[8];</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>globalFrustum[1][3]<sp/>=<sp/>-globalFrustum[0][3]<sp/>-<sp/>viewLightAxialSize;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>side<sp/>clips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>globalFrustum[2][0]<sp/>=<sp/>-viewMatrix[0]<sp/>+<sp/>viewMatrix[1];</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>globalFrustum[2][1]<sp/>=<sp/>-viewMatrix[4]<sp/>+<sp/>viewMatrix[5];</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>globalFrustum[2][2]<sp/>=<sp/>-viewMatrix[8]<sp/>+<sp/>viewMatrix[9];</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>globalFrustum[3][0]<sp/>=<sp/>-viewMatrix[0]<sp/>-<sp/>viewMatrix[1];</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>globalFrustum[3][1]<sp/>=<sp/>-viewMatrix[4]<sp/>-<sp/>viewMatrix[5];</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>globalFrustum[3][2]<sp/>=<sp/>-viewMatrix[8]<sp/>-<sp/>viewMatrix[9];</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>globalFrustum[4][0]<sp/>=<sp/>-viewMatrix[0]<sp/>+<sp/>viewMatrix[2];</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/>globalFrustum[4][1]<sp/>=<sp/>-viewMatrix[4]<sp/>+<sp/>viewMatrix[6];</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>globalFrustum[4][2]<sp/>=<sp/>-viewMatrix[8]<sp/>+<sp/>viewMatrix[10];</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/>globalFrustum[5][0]<sp/>=<sp/>-viewMatrix[0]<sp/>-<sp/>viewMatrix[2];</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>globalFrustum[5][1]<sp/>=<sp/>-viewMatrix[4]<sp/>-<sp/>viewMatrix[6];</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>globalFrustum[5][2]<sp/>=<sp/>-viewMatrix[8]<sp/>-<sp/>viewMatrix[10];</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>this<sp/>nromalization<sp/>necessary?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>6<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalFrustum[i].ToVec4().ToVec3().Normalize();</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>2<sp/>;<sp/>i<sp/>&lt;<sp/>6<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalFrustum[i][3]<sp/>=<sp/>-<sp/>(origin<sp/>*<sp/>globalFrustum[i].ToVec4().ToVec3()<sp/>);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>RB_EXP_CullInteractions(<sp/>vLight,<sp/>globalFrustum<sp/>);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>we<sp/>want<sp/>to<sp/>skip<sp/>the<sp/>sampling<sp/>as<sp/>well<sp/>as<sp/>the<sp/>generation<sp/>when<sp/>not<sp/>casting<sp/>shadows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!r_sb_noShadows.GetBool()<sp/>&amp;&amp;<sp/>vLight-&gt;lightShader-&gt;LightCastsShadows()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>polygon<sp/>offset<sp/>for<sp/>the<sp/>rendering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>r_sb_occluderFacing.GetInteger()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>front<sp/>sides</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglPolygonOffset(<sp/>r_sb_polyOfsFactor.GetFloat(),<sp/>r_sb_polyOfsUnits.GetFloat()<sp/>);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglEnable(<sp/>GL_POLYGON_OFFSET_FILL<sp/>);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_EXP_RenderOccluders(<sp/>vLight<sp/>);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglDisable(<sp/>GL_POLYGON_OFFSET_FILL<sp/>);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>back<sp/>sides</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglPolygonOffset(<sp/>-r_sb_polyOfsFactor.GetFloat(),<sp/>-r_sb_polyOfsUnits.GetFloat()<sp/>);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglEnable(<sp/>GL_POLYGON_OFFSET_FILL<sp/>);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_Cull(<sp/>CT_BACK_SIDED<sp/>);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_EXP_RenderOccluders(<sp/>vLight<sp/>);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_Cull(<sp/>CT_FRONT_SIDED<sp/>);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglDisable(<sp/>GL_POLYGON_OFFSET_FILL<sp/>);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>both<sp/>sides</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_Cull(<sp/>CT_BACK_SIDED<sp/>);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_EXP_RenderOccluders(<sp/>vLight<sp/>);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_Cull(<sp/>CT_FRONT_SIDED<sp/>);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shadowImage[2]-&gt;Bind();</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglCopyTexSubImage2D(<sp/>GL_TEXTURE_2D,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>lightBufferSize,<sp/>lightBufferSize<sp/>);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_EXP_RenderOccluders(<sp/>vLight<sp/>);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shadowImage[1]-&gt;Bind();</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglCopyTexSubImage2D(<sp/>GL_TEXTURE_2D,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>lightBufferSize,<sp/>lightBufferSize<sp/>);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fragment<sp/>program<sp/>to<sp/>combine<sp/>the<sp/>two<sp/>depth<sp/>images</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBindProgramARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>depthMidpointVertexProgram<sp/>);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBindProgramARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>depthMidpointFragmentProgram<sp/>);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglEnable(GL_VERTEX_PROGRAM_ARB);</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglEnable(GL_FRAGMENT_PROGRAM_ARB);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_SelectTextureNoClient(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shadowImage[1]-&gt;Bind();</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglTexParameteri(<sp/>GL_TEXTURE_2D,<sp/>GL_TEXTURE_COMPARE_MODE_ARB,<sp/>GL_NONE<sp/>);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglTexParameterf(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MIN_FILTER,<sp/>GL_NEAREST<sp/>);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglTexParameterf(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MAG_FILTER,<sp/>GL_NEAREST<sp/>);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_SelectTextureNoClient(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shadowImage[2]-&gt;Bind();</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglTexParameteri(<sp/>GL_TEXTURE_2D,<sp/>GL_TEXTURE_COMPARE_MODE_ARB,<sp/>GL_NONE<sp/>);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglTexParameterf(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MIN_FILTER,<sp/>GL_NEAREST<sp/>);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglTexParameterf(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MAG_FILTER,<sp/>GL_NEAREST<sp/>);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>a<sp/>full<sp/>screen<sp/>quad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglMatrixMode(<sp/>GL_PROJECTION<sp/>);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglLoadIdentity();<sp/></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglOrtho(<sp/>0,<sp/>1,<sp/>0,<sp/>1,<sp/>-1,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglMatrixMode(<sp/>GL_MODELVIEW<sp/>);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglLoadIdentity();</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_State(<sp/>GLS_DEPTHFUNC_ALWAYS<sp/>);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBegin(<sp/>GL_TRIANGLE_FAN<sp/>);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglTexCoord2f(<sp/>0,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglVertex2f(<sp/>0,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglTexCoord2f(<sp/>0,<sp/>lightBufferSizeFraction<sp/>);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglVertex2f(<sp/>0,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglTexCoord2f(<sp/>lightBufferSizeFraction,<sp/>lightBufferSizeFraction<sp/>);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglVertex2f(<sp/>1,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglTexCoord2f(<sp/>lightBufferSizeFraction,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglVertex2f(<sp/>1,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglEnd();</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglDisable(<sp/>GL_VERTEX_PROGRAM_ARB<sp/>);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglDisable(<sp/>GL_FRAGMENT_PROGRAM_ARB<sp/>);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>to<sp/>the<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>shadowImage[0]-&gt;Bind();</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>qglCopyTexSubImage2D(<sp/>GL_TEXTURE_2D,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>lightBufferSize,<sp/>lightBufferSize<sp/>);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal">qglDisableClientState(<sp/>GL_TEXTURE_COORD_ARRAY<sp/>);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>the<sp/>normal<sp/>view<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>qglMatrixMode(<sp/>GL_PROJECTION<sp/>);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>qglLoadMatrixf(<sp/>backEnd.viewDef-&gt;projectionMatrix<sp/>);</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/>qglMatrixMode(<sp/>GL_MODELVIEW<sp/>);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>current<sp/>modelView<sp/>matrix<sp/>is<sp/>not<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/>backEnd.currentSpace<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1122"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="1123"><highlight class="comment">RB_EXP_DrawInteraction</highlight></codeline>
<codeline lineno="1124"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="1125"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>RB_EXP_DrawInteraction(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdraw_interaction__t" kindref="compound">drawInteraction_t</ref><sp/>*din<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>all<sp/>the<sp/>vertex<sp/>program<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramEnvParameter4fvARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>PP_LIGHT_ORIGIN,<sp/>din-&gt;localLightOrigin.ToFloatPtr()<sp/>);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramEnvParameter4fvARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>PP_VIEW_ORIGIN,<sp/>din-&gt;localViewOrigin.ToFloatPtr()<sp/>);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramEnvParameter4fvARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>PP_LIGHT_PROJECT_S,<sp/>din-&gt;lightProjection[0].ToFloatPtr()<sp/>);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramEnvParameter4fvARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>PP_LIGHT_PROJECT_T,<sp/>din-&gt;lightProjection[1].ToFloatPtr()<sp/>);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramEnvParameter4fvARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>PP_LIGHT_PROJECT_Q,<sp/>din-&gt;lightProjection[2].ToFloatPtr()<sp/>);</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramEnvParameter4fvARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>PP_LIGHT_FALLOFF_S,<sp/>din-&gt;lightProjection[3].ToFloatPtr()<sp/>);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramEnvParameter4fvARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>PP_BUMP_MATRIX_S,<sp/>din-&gt;bumpMatrix[0].ToFloatPtr()<sp/>);</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramEnvParameter4fvARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>PP_BUMP_MATRIX_T,<sp/>din-&gt;bumpMatrix[1].ToFloatPtr()<sp/>);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramEnvParameter4fvARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>PP_DIFFUSE_MATRIX_S,<sp/>din-&gt;diffuseMatrix[0].ToFloatPtr()<sp/>);</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramEnvParameter4fvARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>PP_DIFFUSE_MATRIX_T,<sp/>din-&gt;diffuseMatrix[1].ToFloatPtr()<sp/>);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramEnvParameter4fvARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>PP_SPECULAR_MATRIX_S,<sp/>din-&gt;specularMatrix[0].ToFloatPtr()<sp/>);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramEnvParameter4fvARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>PP_SPECULAR_MATRIX_T,<sp/>din-&gt;specularMatrix[1].ToFloatPtr()<sp/>);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight><highlight class="comment">//<sp/>calculate<sp/>depth<sp/>projection<sp/>for<sp/>shadow<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>sRow[4];</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>tRow[4];</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>rRow[4];</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>qRow[4];</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>matrix[16];</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>matrix2[16];</highlight></codeline>
<codeline lineno="1149"><highlight class="normal">myGlMultMatrix(<sp/>din-&gt;surf-&gt;space-&gt;modelMatrix,<sp/>lightMatrix,<sp/>matrix<sp/>);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal">myGlMultMatrix(<sp/>matrix,<sp/>lightProjectionMatrix,<sp/>matrix2<sp/>);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>final<sp/>values<sp/>need<sp/>to<sp/>be<sp/>in<sp/>0.0<sp/>:<sp/>1.0<sp/>range<sp/>instead<sp/>of<sp/>-1<sp/>:<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal">sRow[0]<sp/>=<sp/>0.5<sp/>*<sp/>lightBufferSizeFraction<sp/>*<sp/>(<sp/>matrix2[0]<sp/>+<sp/>matrix2[3]<sp/>);</highlight></codeline>
<codeline lineno="1154"><highlight class="normal">sRow[1]<sp/>=<sp/>0.5<sp/>*<sp/>lightBufferSizeFraction<sp/>*<sp/>(<sp/>matrix2[4]<sp/>+<sp/>matrix2[7]<sp/>);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal">sRow[2]<sp/>=<sp/>0.5<sp/>*<sp/>lightBufferSizeFraction<sp/>*<sp/>(<sp/>matrix2[8]<sp/>+<sp/>matrix2[11]<sp/>);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal">sRow[3]<sp/>=<sp/>0.5<sp/>*<sp/>lightBufferSizeFraction<sp/>*<sp/>(<sp/>matrix2[12]<sp/>+<sp/>matrix2[15]<sp/>);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal">qglProgramEnvParameter4fvARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>18,<sp/>sRow<sp/>);</highlight></codeline>
<codeline lineno="1158"><highlight class="normal">tRow[0]<sp/>=<sp/>0.5<sp/>*<sp/>lightBufferSizeFraction<sp/>*<sp/>(<sp/>matrix2[1]<sp/>+<sp/>matrix2[3]<sp/>);</highlight></codeline>
<codeline lineno="1159"><highlight class="normal">tRow[1]<sp/>=<sp/>0.5<sp/>*<sp/>lightBufferSizeFraction<sp/>*<sp/>(<sp/>matrix2[5]<sp/>+<sp/>matrix2[7]<sp/>);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal">tRow[2]<sp/>=<sp/>0.5<sp/>*<sp/>lightBufferSizeFraction<sp/>*<sp/>(<sp/>matrix2[9]<sp/>+<sp/>matrix2[11]<sp/>);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal">tRow[3]<sp/>=<sp/>0.5<sp/>*<sp/>lightBufferSizeFraction<sp/>*<sp/>(<sp/>matrix2[13]<sp/>+<sp/>matrix2[15]<sp/>);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal">qglProgramEnvParameter4fvARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>19,<sp/>tRow<sp/>);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal">rRow[0]<sp/>=<sp/>0.5<sp/>*<sp/>(<sp/>matrix2[2]<sp/>+<sp/>matrix2[3]<sp/>);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal">rRow[1]<sp/>=<sp/>0.5<sp/>*<sp/>(<sp/>matrix2[6]<sp/>+<sp/>matrix2[7]<sp/>);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal">rRow[2]<sp/>=<sp/>0.5<sp/>*<sp/>(<sp/>matrix2[10]<sp/>+<sp/>matrix2[11]<sp/>);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal">rRow[3]<sp/>=<sp/>0.5<sp/>*<sp/>(<sp/>matrix2[14]<sp/>+<sp/>matrix2[15]<sp/>);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal">qglProgramEnvParameter4fvARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>20,<sp/>rRow<sp/>);</highlight></codeline>
<codeline lineno="1168"><highlight class="normal">qRow[0]<sp/>=<sp/>matrix2[3];</highlight></codeline>
<codeline lineno="1169"><highlight class="normal">qRow[1]<sp/>=<sp/>matrix2[7];</highlight></codeline>
<codeline lineno="1170"><highlight class="normal">qRow[2]<sp/>=<sp/>matrix2[11];</highlight></codeline>
<codeline lineno="1171"><highlight class="normal">qRow[3]<sp/>=<sp/>matrix2[15];</highlight></codeline>
<codeline lineno="1172"><highlight class="normal">qglProgramEnvParameter4fvARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>21,<sp/>qRow<sp/>);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>testing<sp/>fragment<sp/>based<sp/>normal<sp/>mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_testARBProgram.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglProgramEnvParameter4fvARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>2,<sp/>din-&gt;localLightOrigin.ToFloatPtr()<sp/>);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglProgramEnvParameter4fvARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>3,<sp/>din-&gt;localViewOrigin.ToFloatPtr()<sp/>);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zero[4]<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>one[4]<sp/>=<sp/>{<sp/>1,<sp/>1,<sp/>1,<sp/>1<sp/>};</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>negOne[4]<sp/>=<sp/>{<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1<sp/>};</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>din-&gt;vertexColor<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SVC_IGNORE:</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglProgramEnvParameter4fvARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>PP_COLOR_MODULATE,<sp/>zero<sp/>);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglProgramEnvParameter4fvARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>PP_COLOR_ADD,<sp/>one<sp/>);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SVC_MODULATE:</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglProgramEnvParameter4fvARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>PP_COLOR_MODULATE,<sp/>one<sp/>);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglProgramEnvParameter4fvARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>PP_COLOR_ADD,<sp/>zero<sp/>);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SVC_INVERSE_MODULATE:</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglProgramEnvParameter4fvARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>PP_COLOR_MODULATE,<sp/>negOne<sp/>);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglProgramEnvParameter4fvARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>PP_COLOR_ADD,<sp/>one<sp/>);</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>constant<sp/>colors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramEnvParameter4fvARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>0,<sp/>din-&gt;diffuseColor.ToFloatPtr()<sp/>);</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramEnvParameter4fvARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>1,<sp/>din-&gt;specularColor.ToFloatPtr()<sp/>);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>screen<sp/>power<sp/>of<sp/>two<sp/>correction<sp/>factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>parm[4];</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[0]<sp/>=<sp/>1.0<sp/>/<sp/>(<sp/>JITTER_SIZE<sp/>*<sp/>r_sb_samples.GetInteger()<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[1]<sp/>=<sp/>1.0<sp/>/<sp/>JITTER_SIZE;</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[3]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramLocalParameter4fvARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>2,<sp/>parm<sp/>);</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>jitter<sp/>tex<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[0]<sp/>=<sp/></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[1]<sp/>=<sp/>r_sb_jitterScale.GetFloat()<sp/>*<sp/>lightBufferSizeFraction;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[2]<sp/>=<sp/>-r_sb_biasScale.GetFloat();</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramLocalParameter4fvARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>3,<sp/>parm<sp/>);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>jitter<sp/>tex<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_sb_randomize.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parm[0]<sp/>=<sp/>(rand()&amp;255)<sp/>/<sp/>255.0;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parm[1]<sp/>=<sp/>(rand()&amp;255)<sp/>/<sp/>255.0;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parm[0]<sp/>=<sp/>parm[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramLocalParameter4fvARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>4,<sp/>parm<sp/>);</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>textures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>texture<sp/>1<sp/>will<sp/>be<sp/>the<sp/>per-surface<sp/>bump<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_SelectTextureNoClient(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/>din-&gt;bumpImage-&gt;Bind();</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>texture<sp/>2<sp/>will<sp/>be<sp/>the<sp/>light<sp/>falloff<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_SelectTextureNoClient(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>din-&gt;lightFalloffImage-&gt;Bind();</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>texture<sp/>3<sp/>will<sp/>be<sp/>the<sp/>light<sp/>projection<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_SelectTextureNoClient(<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/>din-&gt;lightImage-&gt;Bind();</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>texture<sp/>4<sp/>is<sp/>the<sp/>per-surface<sp/>diffuse<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_SelectTextureNoClient(<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>din-&gt;diffuseImage-&gt;Bind();</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>texture<sp/>5<sp/>is<sp/>the<sp/>per-surface<sp/>specular<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_SelectTextureNoClient(<sp/>5<sp/>);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/>din-&gt;specularImage-&gt;Bind();</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/>RB_DrawElementsWithCounters(<sp/>din-&gt;surf-&gt;geo<sp/>);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1260"><highlight class="comment">=============</highlight></codeline>
<codeline lineno="1261"><highlight class="comment">RB_EXP_CreateDrawInteractions</highlight></codeline>
<codeline lineno="1262"><highlight class="comment"></highlight></codeline>
<codeline lineno="1263"><highlight class="comment">=============</highlight></codeline>
<codeline lineno="1264"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_EXP_CreateDrawInteractions(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref><sp/>*surf<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!surf<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_sb_screenSpaceShadow.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>perform<sp/>setup<sp/>here<sp/>that<sp/>will<sp/>be<sp/>constant<sp/>for<sp/>all<sp/>interactions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_State(<sp/>GLS_SRCBLEND_DST_ALPHA<sp/>|<sp/>GLS_DSTBLEND_ONE<sp/>|<sp/>GLS_DEPTHMASK<sp/>|<sp/>backEnd.depthFunc<sp/>);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_testARBProgram.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBindProgramARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>VPROG_TEST<sp/>);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBindProgramARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>FPROG_TEST<sp/>);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBindProgramARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>VPROG_INTERACTION<sp/>);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBindProgramARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>FPROG_INTERACTION<sp/>);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>perform<sp/>setup<sp/>here<sp/>that<sp/>will<sp/>be<sp/>constant<sp/>for<sp/>all<sp/>interactions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_State(<sp/>GLS_SRCBLEND_ONE<sp/>|<sp/>GLS_DSTBLEND_ONE<sp/>|<sp/>GLS_DEPTHMASK<sp/>|<sp/>backEnd.depthFunc<sp/>);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal">GL_State(<sp/>GLS_DEPTHMASK<sp/>|<sp/>GLS_DEPTHFUNC_ALWAYS<sp/>);</highlight><highlight class="comment">//!@#</highlight></codeline>
<codeline lineno="1284"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bind<sp/>the<sp/>vertex<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBindProgramARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>shadowVertexProgram<sp/>);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_sb_samples.GetInteger()<sp/>==<sp/>16<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBindProgramARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>shadowFragmentProgram16<sp/>);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_sb_samples.GetInteger()<sp/>==<sp/>4<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBindProgramARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>shadowFragmentProgram4<sp/>);</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_sb_samples.GetInteger()<sp/>==<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBindProgramARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>shadowFragmentProgram1<sp/>);</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBindProgramARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>shadowFragmentProgram0<sp/>);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/>qglEnable(GL_VERTEX_PROGRAM_ARB);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/>qglEnable(GL_FRAGMENT_PROGRAM_ARB);</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enable<sp/>the<sp/>vertex<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/>qglEnableVertexAttribArrayARB(<sp/>8<sp/>);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/>qglEnableVertexAttribArrayARB(<sp/>9<sp/>);</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/>qglEnableVertexAttribArrayARB(<sp/>10<sp/>);</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/>qglEnableVertexAttribArrayARB(<sp/>11<sp/>);</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/>qglEnableClientState(<sp/>GL_COLOR_ARRAY<sp/>);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>texture<sp/>0<sp/>is<sp/>the<sp/>normalization<sp/>cube<sp/>map<sp/>for<sp/>the<sp/>vector<sp/>towards<sp/>the<sp/>light</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_SelectTextureNoClient(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>backEnd.vLight-&gt;lightShader-&gt;IsAmbientLight()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalImages-&gt;normalCubeMapImage-&gt;Bind();</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBindProgramARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>VPROG_AMBIENT);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBindProgramARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>FPROG_AMBIENT);</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalImages-&gt;normalCubeMapImage-&gt;Bind();</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>texture<sp/>6<sp/>is<sp/>the<sp/>specular<sp/>lookup<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_SelectTextureNoClient(<sp/>6<sp/>);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_testARBProgram.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalImages-&gt;specular2DTableImage-&gt;Bind();<sp/></highlight><highlight class="comment">//<sp/>variable<sp/>specularity<sp/>in<sp/>alpha<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalImages-&gt;specularTableImage-&gt;Bind();</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>surf<sp/>;<sp/>surf=surf-&gt;nextOnLight<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>perform<sp/>setup<sp/>here<sp/>that<sp/>will<sp/>not<sp/>change<sp/>over<sp/>multiple<sp/>interaction<sp/>passes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>backEnd.vLight-&gt;lightShader-&gt;IsAmbientLight()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>parm[4];</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parm[0]<sp/>=<sp/>surf-&gt;space-&gt;modelMatrix[0];</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parm[1]<sp/>=<sp/>surf-&gt;space-&gt;modelMatrix[4];</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parm[2]<sp/>=<sp/>surf-&gt;space-&gt;modelMatrix[8];</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parm[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglProgramEnvParameter4fvARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>20,<sp/>parm<sp/>);</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parm[0]<sp/>=<sp/>surf-&gt;space-&gt;modelMatrix[1];</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parm[1]<sp/>=<sp/>surf-&gt;space-&gt;modelMatrix[5];</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parm[2]<sp/>=<sp/>surf-&gt;space-&gt;modelMatrix[9];</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parm[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglProgramEnvParameter4fvARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>21,<sp/>parm<sp/>);</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parm[0]<sp/>=<sp/>surf-&gt;space-&gt;modelMatrix[2];</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parm[1]<sp/>=<sp/>surf-&gt;space-&gt;modelMatrix[6];</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parm[2]<sp/>=<sp/>surf-&gt;space-&gt;modelMatrix[10];</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parm[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglProgramEnvParameter4fvARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>22,<sp/>parm<sp/>);</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_SelectTextureNoClient(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshader_stage__t" kindref="compound">shaderStage_t</ref><sp/>*stage<sp/>=<sp/>backEnd.vLight-&gt;lightShader-&gt;GetStage(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>stage-&gt;newStage<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stage-&gt;newStage-&gt;fragmentProgramImages[7]-&gt;BindFragment();</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>vertex<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref><sp/><sp/>*ac<sp/>=<sp/>(<ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref><sp/>*)vertexCache.Position(<sp/>surf-&gt;geo-&gt;ambientCache<sp/>);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglColorPointer(<sp/>4,<sp/>GL_UNSIGNED_BYTE,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref><sp/>),<sp/>ac-&gt;color<sp/>);</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglVertexAttribPointerARB(<sp/>11,<sp/>3,<sp/>GL_FLOAT,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref><sp/>),<sp/>ac-&gt;normal.ToFloatPtr()<sp/>);</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglVertexAttribPointerARB(<sp/>10,<sp/>3,<sp/>GL_FLOAT,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref><sp/>),<sp/>ac-&gt;tangents[1].ToFloatPtr()<sp/>);</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglVertexAttribPointerARB(<sp/>9,<sp/>3,<sp/>GL_FLOAT,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref><sp/>),<sp/>ac-&gt;tangents[0].ToFloatPtr()<sp/>);</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglVertexAttribPointerARB(<sp/>8,<sp/>2,<sp/>GL_FLOAT,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref><sp/>),<sp/>ac-&gt;st.ToFloatPtr()<sp/>);</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglVertexPointer(<sp/>3,<sp/>GL_FLOAT,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref><sp/>),<sp/>ac-&gt;xyz.ToFloatPtr()<sp/>);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>may<sp/>cause<sp/>RB_ARB2_DrawInteraction<sp/>to<sp/>be<sp/>exacuted<sp/>multiple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>times<sp/>with<sp/>different<sp/>colors<sp/>and<sp/>images<sp/>if<sp/>the<sp/>surface<sp/>or<sp/>light<sp/>have<sp/>multiple<sp/>layers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_sb_screenSpaceShadow.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_CreateSingleDrawInteractions(<sp/>surf,<sp/>RB_ARB2_DrawInteraction<sp/>);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_CreateSingleDrawInteractions(<sp/>surf,<sp/>RB_EXP_DrawInteraction<sp/>);</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/>qglDisableVertexAttribArrayARB(<sp/>8<sp/>);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/>qglDisableVertexAttribArrayARB(<sp/>9<sp/>);</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/>qglDisableVertexAttribArrayARB(<sp/>10<sp/>);</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/>qglDisableVertexAttribArrayARB(<sp/>11<sp/>);</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/>qglDisableClientState(<sp/>GL_COLOR_ARRAY<sp/>);</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disable<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_SelectTextureNoClient(<sp/>6<sp/>);</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/>globalImages-&gt;BindNull();</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_SelectTextureNoClient(<sp/>5<sp/>);</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/>globalImages-&gt;BindNull();</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_SelectTextureNoClient(<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/>globalImages-&gt;BindNull();</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_SelectTextureNoClient(<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/>globalImages-&gt;BindNull();</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_SelectTextureNoClient(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/>globalImages-&gt;BindNull();</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_SelectTextureNoClient(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/>globalImages-&gt;BindNull();</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/>backEnd.glState.currenttmu<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_SelectTexture(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/>qglDisable(GL_VERTEX_PROGRAM_ARB);</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/>qglDisable(GL_FRAGMENT_PROGRAM_ARB);</highlight></codeline>
<codeline lineno="1403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InvertByTranspose(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a[16],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>r[16]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/>r[<sp/>0]<sp/>=<sp/>a[<sp/>0];</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/>r[<sp/>1]<sp/>=<sp/>a[<sp/>4];</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/>r[<sp/>2]<sp/>=<sp/>a[<sp/>8];</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/>r[<sp/>3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/>r[<sp/>4]<sp/>=<sp/>a[<sp/>1];</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/>r[<sp/>5]<sp/>=<sp/>a[<sp/>5];</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/>r[<sp/>6]<sp/>=<sp/>a[<sp/>9];</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/>r[<sp/>7]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/>r[<sp/>8]<sp/>=<sp/>a[<sp/>2];</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/>r[<sp/>9]<sp/>=<sp/>a[<sp/>6];</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/>r[10]<sp/>=<sp/>a[10];</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/>r[11]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/>r[12]<sp/>=<sp/>-(r[<sp/>0]*a[12]<sp/>+<sp/>r[<sp/>4]*a[13]<sp/>+<sp/>r[<sp/>8]*a[14]);</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/>r[13]<sp/>=<sp/>-(r[<sp/>1]*a[12]<sp/>+<sp/>r[<sp/>5]*a[13]<sp/>+<sp/>r[<sp/>9]*a[14]);</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/>r[14]<sp/>=<sp/>-(r[<sp/>2]*a[12]<sp/>+<sp/>r[<sp/>6]*a[13]<sp/>+<sp/>r[10]*a[14]);</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/>r[15]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FullInvert(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a[16],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>r[16]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_mat4" kindref="compound">idMat4</ref><sp/><sp/>am;</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>4<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0<sp/>;<sp/>j<sp/>&lt;<sp/>4<sp/>;<sp/>j++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>am[i][j]<sp/>=<sp/>a[j*4+i];</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>idVec4<sp/>test(<sp/>100,<sp/>100,<sp/>100,<sp/>1<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>idVec4<sp/><sp/>transformed,<sp/>inverted;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>transformed<sp/>=<sp/>test<sp/>*<sp/>am;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!am.InverseSelf()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Error(<sp/></highlight><highlight class="stringliteral">&quot;Invert<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>inverted<sp/>=<sp/>transformed<sp/>*<sp/>am;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>4<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0<sp/>;<sp/>j<sp/>&lt;<sp/>4<sp/>;<sp/>j++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[j*4+i]<sp/>=<sp/>am[i][j];</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1450"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="1451"><highlight class="comment">RB_Exp_TrianglesForFrustum</highlight></codeline>
<codeline lineno="1452"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="1453"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/><sp/><sp/><sp/>*RB_Exp_TrianglesForFrustum(<sp/><ref refid="structview_light__s" kindref="compound">viewLight_t</ref><sp/>*vLight,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>side<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/><sp/><sp/>frustumTri;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[5];</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>glIndex_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indexes[18]<sp/>=<sp/>{<sp/>0,<sp/>1,<sp/>2,<sp/><sp/><sp/><sp/>0,<sp/>2,<sp/>3,<sp/><sp/><sp/><sp/>0,<sp/>3,<sp/>4,<sp/><sp/><sp/><sp/>0,<sp/>4,<sp/>1,<sp/><sp/><sp/><sp/>2,<sp/>1,<sp/>4,<sp/><sp/><sp/><sp/>2,<sp/>4,<sp/>3<sp/>};</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>side<sp/>==<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tri<sp/>=<sp/>vLight-&gt;frustumTris;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<sp/>verts,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>verts<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>5<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[i].xyz<sp/>=<sp/>vLight-&gt;globalLightOrigin;</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<sp/>&amp;frustumTri,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>frustumTri<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frustumTri.indexes<sp/>=<sp/>indexes;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frustumTri.verts<sp/>=<sp/>verts;</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frustumTri.numIndexes<sp/>=<sp/>18;</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frustumTri.numVerts<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tri<sp/>=<sp/>&amp;frustumTri;</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>size<sp/>=<sp/>viewLightAxialSize;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>side<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[1].xyz[0]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[2].xyz[0]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[3].xyz[0]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[4].xyz[0]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[1].xyz[1]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[1].xyz[2]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[2].xyz[1]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[2].xyz[2]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[3].xyz[1]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[3].xyz[2]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[4].xyz[1]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[4].xyz[2]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[1].xyz[0]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[2].xyz[0]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[3].xyz[0]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[4].xyz[0]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[1].xyz[1]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[1].xyz[2]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[2].xyz[1]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[2].xyz[2]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[3].xyz[1]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[3].xyz[2]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[4].xyz[1]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[4].xyz[2]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[1].xyz[1]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[2].xyz[1]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[3].xyz[1]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[4].xyz[1]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[1].xyz[0]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[1].xyz[2]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[2].xyz[0]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[2].xyz[2]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[3].xyz[0]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[3].xyz[2]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[4].xyz[0]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[4].xyz[2]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[1].xyz[1]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[2].xyz[1]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[3].xyz[1]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[4].xyz[1]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[1].xyz[0]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[1].xyz[2]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[2].xyz[0]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[2].xyz[2]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[3].xyz[0]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[3].xyz[2]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[4].xyz[0]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[4].xyz[2]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[1].xyz[2]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[2].xyz[2]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[3].xyz[2]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[4].xyz[2]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[1].xyz[0]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[1].xyz[1]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[2].xyz[0]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[2].xyz[1]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[3].xyz[0]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[3].xyz[1]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[4].xyz[0]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[4].xyz[1]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[1].xyz[2]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[2].xyz[2]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[3].xyz[2]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[4].xyz[2]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[1].xyz[0]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[1].xyz[1]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[2].xyz[0]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[2].xyz[1]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[3].xyz[0]<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[3].xyz[1]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[4].xyz[0]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[4].xyz[1]<sp/>-=<sp/>size;</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frustumTri.ambientCache<sp/>=<sp/>vertexCache.AllocFrameTemp(<sp/>verts,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>verts<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tri;</highlight></codeline>
<codeline lineno="1571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1575"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="1576"><highlight class="comment">RB_Exp_SelectFrustum</highlight></codeline>
<codeline lineno="1577"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="1578"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>RB_Exp_SelectFrustum(<sp/><ref refid="structview_light__s" kindref="compound">viewLight_t</ref><sp/>*vLight,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>side<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/>qglLoadMatrixf(<sp/>backEnd.viewDef-&gt;worldSpace.modelViewMatrix<sp/>);</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri<sp/>=<sp/>RB_Exp_TrianglesForFrustum(<sp/>vLight,<sp/>side<sp/>);</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref><sp/>*ac<sp/>=<sp/>(<ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref><sp/>*)vertexCache.Position(<sp/>tri-&gt;ambientCache<sp/>);</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/>qglVertexPointer(<sp/>3,<sp/>GL_FLOAT,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref><sp/>),<sp/>ac-&gt;xyz.ToFloatPtr()<sp/>);</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/>qglDisable(<sp/>GL_TEXTURE_2D<sp/>);</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/>qglDisableClientState(<sp/>GL_TEXTURE_COORD_ARRAY<sp/>);</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>stencil<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/>qglEnable(<sp/>GL_SCISSOR_TEST<sp/>);</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/>qglEnable(<sp/>GL_STENCIL_TEST<sp/>);</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/>qglClearStencil(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/>qglClear(<sp/>GL_STENCIL_BUFFER_BIT<sp/>);</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>front<sp/>faces<sp/>of<sp/>the<sp/>light<sp/>frustum,<sp/>incrementing<sp/>the<sp/>stencil<sp/>buffer<sp/>on<sp/>depth<sp/>fail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>we<sp/>can&apos;t<sp/>draw<sp/>on<sp/>those<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_State(<sp/>GLS_COLORMASK<sp/>|<sp/>GLS_ALPHAMASK<sp/>|<sp/>GLS_DEPTHMASK<sp/>|<sp/>GLS_DEPTHFUNC_LESS<sp/>);</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/>qglStencilFunc(<sp/>GL_ALWAYS,<sp/>0,<sp/>255<sp/>);</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/>qglStencilOp(<sp/>GL_KEEP,<sp/>GL_INCR,<sp/>GL_KEEP<sp/>);</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_Cull(<sp/>CT_FRONT_SIDED<sp/>);</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/>RB_DrawElementsWithCounters(<sp/>tri<sp/>);</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>back<sp/>faces<sp/>of<sp/>the<sp/>light<sp/>frustum<sp/>with<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>depth<sp/>test<sp/>greater</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stencil<sp/>test<sp/>of<sp/>equal<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>zero<sp/>stencil<sp/>stencil<sp/>when<sp/>depth<sp/>test<sp/>passes,<sp/>so<sp/>subsequent<sp/>surface<sp/>drawing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>occur<sp/>on<sp/>those<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>pass<sp/>does<sp/>all<sp/>the<sp/>shadow<sp/>filtering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/>qglStencilFunc(<sp/>GL_EQUAL,<sp/>1,<sp/>255<sp/>);</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/>qglStencilOp(<sp/>GL_KEEP,<sp/>GL_KEEP,<sp/>GL_ZERO<sp/>);</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_Cull(<sp/>CT_BACK_SIDED<sp/>);</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/>qglDepthFunc(<sp/>GL_GREATER<sp/>);</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>to<sp/>destination<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_sb_showFrustumPixels.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_State(<sp/>GLS_SRCBLEND_ONE<sp/>|<sp/>GLS_DSTBLEND_ONE<sp/>|<sp/>GLS_DEPTHMASK<sp/>|<sp/>GLS_DEPTHFUNC_LESS<sp/>);</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglDisable(<sp/>GL_TEXTURE_2D<sp/>);</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglColor4f(<sp/>0,<sp/>0.25,<sp/>0,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_State(<sp/>GLS_COLORMASK<sp/>|<sp/>GLS_DEPTHMASK<sp/>|<sp/>GLS_DEPTHFUNC_LESS<sp/>);</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglEnable(GL_VERTEX_PROGRAM_ARB);</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglEnable(GL_FRAGMENT_PROGRAM_ARB);</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBindProgramARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>screenSpaceShadowVertexProgram<sp/>);</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>r_sb_samples.GetInteger()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBindProgramARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>screenSpaceShadowFragmentProgram0<sp/>);</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBindProgramARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>screenSpaceShadowFragmentProgram1<sp/>);</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBindProgramARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>screenSpaceShadowFragmentProgram4<sp/>);</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>16:</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBindProgramARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>screenSpaceShadowFragmentProgram16<sp/>);</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1644"><highlight class="comment">texture[0]<sp/>=<sp/>view<sp/>depth<sp/>texture</highlight></codeline>
<codeline lineno="1645"><highlight class="comment">texture[1]<sp/>=<sp/>jitter<sp/>texture</highlight></codeline>
<codeline lineno="1646"><highlight class="comment">texture[2]<sp/>=<sp/>light<sp/>depth<sp/>texture</highlight></codeline>
<codeline lineno="1647"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_SelectTextureNoClient(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/>shadowImage[0]-&gt;Bind();</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_SelectTextureNoClient(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_sb_samples.GetInteger()<sp/>==<sp/>16<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jitterImage16-&gt;Bind();</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_sb_samples.GetInteger()<sp/>==<sp/>4<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jitterImage4-&gt;Bind();</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jitterImage1-&gt;Bind();</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_SelectTextureNoClient(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/>viewDepthImage-&gt;Bind();</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1664"><highlight class="comment">PARAM<sp/><sp/><sp/>positionToDepthTexScale<sp/><sp/><sp/><sp/><sp/>=<sp/>program.local[0];<sp/>#<sp/>fragment.position<sp/>to<sp/>screen<sp/>depth<sp/>texture<sp/>transformation</highlight></codeline>
<codeline lineno="1665"><highlight class="comment">PARAM<sp/><sp/><sp/>zProject<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>program.local[1];<sp/>#<sp/>projection[10],<sp/>projection[14],<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="1666"><highlight class="comment">PARAM<sp/><sp/><sp/>positionToViewSpace<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>program.local[2];<sp/>#<sp/>X<sp/>add,<sp/>Y<sp/>add,<sp/>X<sp/>mul,<sp/>Y<sp/>mul</highlight></codeline>
<codeline lineno="1667"><highlight class="comment">PARAM<sp/><sp/><sp/>viewToLightS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>program.local[3];</highlight></codeline>
<codeline lineno="1668"><highlight class="comment">PARAM<sp/><sp/><sp/>viewToLightT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>program.local[4];</highlight></codeline>
<codeline lineno="1669"><highlight class="comment">PARAM<sp/><sp/><sp/>viewToLightR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>program.local[5];</highlight></codeline>
<codeline lineno="1670"><highlight class="comment">PARAM<sp/><sp/><sp/>viewToLightQ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>program.local[6];</highlight></codeline>
<codeline lineno="1671"><highlight class="comment">PARAM<sp/><sp/><sp/>positionToJitterTexScale<sp/><sp/><sp/><sp/>=<sp/>program.local[7];<sp/>#<sp/>fragment.position<sp/>to<sp/>jitter<sp/>texture</highlight></codeline>
<codeline lineno="1672"><highlight class="comment">PARAM<sp/><sp/><sp/>jitterTexScale<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>program.local[8];</highlight></codeline>
<codeline lineno="1673"><highlight class="comment">PARAM<sp/><sp/><sp/>jitterTexOffset<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>program.local[9];</highlight></codeline>
<codeline lineno="1674"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>parm[4];</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>pot;</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>depth<sp/>projection<sp/>for<sp/>shadow<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>sRow[4];</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>tRow[4];</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>rRow[4];</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>qRow[4];</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>invertedView[16];</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>invertedProjection[16];</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>matrix[16];</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>matrix2[16];</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>the<sp/>inverse<sp/>of<sp/>the<sp/>projection<sp/>matrix<sp/>to<sp/>go<sp/>from<sp/>NDC<sp/>to<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/>FullInvert(<sp/>backEnd.viewDef-&gt;projectionMatrix,<sp/>invertedProjection<sp/>);</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1692"><highlight class="comment"><sp/><sp/><sp/><sp/>from<sp/>window<sp/>to<sp/>NDC:</highlight></codeline>
<codeline lineno="1693"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>x<sp/>-<sp/>xMid<sp/>)<sp/>*<sp/>1.0<sp/>/<sp/>xMid</highlight></codeline>
<codeline lineno="1694"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>y<sp/>-<sp/>yMid<sp/>)<sp/>*<sp/>1.0<sp/>/<sp/>yMid</highlight></codeline>
<codeline lineno="1695"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>z<sp/>-<sp/>0.5<sp/>)<sp/>*<sp/>2</highlight></codeline>
<codeline lineno="1696"><highlight class="comment"></highlight></codeline>
<codeline lineno="1697"><highlight class="comment"><sp/><sp/><sp/><sp/>from<sp/>NDC<sp/>to<sp/>clip<sp/>coordinates:</highlight></codeline>
<codeline lineno="1698"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rcp(1/w)</highlight></codeline>
<codeline lineno="1699"><highlight class="comment"></highlight></codeline>
<codeline lineno="1700"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>the<sp/>inverse<sp/>of<sp/>the<sp/>viewMatrix<sp/>to<sp/>go<sp/>from<sp/>view<sp/>(looking<sp/>down<sp/>negative<sp/>Z)<sp/>to<sp/>world</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/>InvertByTranspose(<sp/>backEnd.viewDef-&gt;worldSpace.modelViewMatrix,<sp/>invertedView<sp/>);</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"></highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>we<sp/>go<sp/>from<sp/>world<sp/>to<sp/>light<sp/>view<sp/>space<sp/>(looking<sp/>down<sp/>negative<sp/>Z)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/>myGlMultMatrix(<sp/>invertedView,<sp/>lightMatrix,<sp/>matrix<sp/>);</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>to<sp/>light<sp/>projection,<sp/>giving<sp/>X/w,<sp/>Y/w,<sp/>Z/w<sp/>in<sp/>the<sp/>-1<sp/>:<sp/>1<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/>myGlMultMatrix(<sp/>matrix,<sp/>lightProjectionMatrix,<sp/>matrix2<sp/>);</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>final<sp/>values<sp/>need<sp/>to<sp/>be<sp/>in<sp/>0.0<sp/>:<sp/>1.0<sp/>range<sp/>instead<sp/>of<sp/>-1<sp/>:<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/>sRow[0]<sp/>=<sp/>0.5<sp/>*<sp/>(<sp/>matrix2[0]<sp/>+<sp/>matrix2[3]<sp/>)<sp/>*<sp/>lightBufferSizeFraction;</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/>sRow[1]<sp/>=<sp/>0.5<sp/>*<sp/>(<sp/>matrix2[4]<sp/>+<sp/>matrix2[7]<sp/>)<sp/>*<sp/>lightBufferSizeFraction;</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/>sRow[2]<sp/>=<sp/>0.5<sp/>*<sp/>(<sp/>matrix2[8]<sp/>+<sp/>matrix2[11]<sp/>)<sp/>*<sp/>lightBufferSizeFraction;</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/>sRow[3]<sp/>=<sp/>0.5<sp/>*<sp/>(<sp/>matrix2[12]<sp/>+<sp/>matrix2[15]<sp/>)<sp/>*<sp/>lightBufferSizeFraction;</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramLocalParameter4fvARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>3,<sp/>sRow<sp/>);</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/>tRow[0]<sp/>=<sp/>0.5<sp/>*<sp/>(<sp/>matrix2[1]<sp/>+<sp/>matrix2[3]<sp/>)<sp/>*<sp/>lightBufferSizeFraction;</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/>tRow[1]<sp/>=<sp/>0.5<sp/>*<sp/>(<sp/>matrix2[5]<sp/>+<sp/>matrix2[7]<sp/>)<sp/>*<sp/>lightBufferSizeFraction;</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/>tRow[2]<sp/>=<sp/>0.5<sp/>*<sp/>(<sp/>matrix2[9]<sp/>+<sp/>matrix2[11]<sp/>)<sp/>*<sp/>lightBufferSizeFraction;</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/>tRow[3]<sp/>=<sp/>0.5<sp/>*<sp/>(<sp/>matrix2[13]<sp/>+<sp/>matrix2[15]<sp/>)<sp/>*<sp/>lightBufferSizeFraction;</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramLocalParameter4fvARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>4,<sp/>tRow<sp/>);</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/>rRow[0]<sp/>=<sp/>0.5<sp/>*<sp/>(<sp/>matrix2[2]<sp/>+<sp/>matrix2[3]<sp/>);</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/>rRow[1]<sp/>=<sp/>0.5<sp/>*<sp/>(<sp/>matrix2[6]<sp/>+<sp/>matrix2[7]<sp/>);</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/>rRow[2]<sp/>=<sp/>0.5<sp/>*<sp/>(<sp/>matrix2[10]<sp/>+<sp/>matrix2[11]<sp/>);</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/>rRow[3]<sp/>=<sp/>0.5<sp/>*<sp/>(<sp/>matrix2[14]<sp/>+<sp/>matrix2[15]<sp/>);</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramLocalParameter4fvARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>5,<sp/>rRow<sp/>);</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/>qRow[0]<sp/>=<sp/>matrix2[3];</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/>qRow[1]<sp/>=<sp/>matrix2[7];</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/>qRow[2]<sp/>=<sp/>matrix2[11];</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/>qRow[3]<sp/>=<sp/>matrix2[15];</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramLocalParameter4fvARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>6,<sp/>qRow<sp/>);</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>should<sp/>be<sp/>constant<sp/>for<sp/>the<sp/>entire<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>0..viewport-1<sp/>sizes<sp/>to<sp/>fractions<sp/>inside<sp/>the<sp/>POT<sp/>screen<sp/>depth<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>w<sp/>=<sp/>viewBufferSize;</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/>pot<sp/>=<sp/>MakePowerOfTwo(<sp/>w<sp/>);</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[0]<sp/>=<sp/>1.0<sp/>/<sp/>maxViewBufferSize;<sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*<sp/>(<sp/>(float)viewBufferSize<sp/>/<sp/>w<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>h<sp/>=<sp/>viewBufferHeight;</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/>pot<sp/>=<sp/>MakePowerOfTwo(<sp/>h<sp/>);</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[1]<sp/>=<sp/>parm[0];<sp/></highlight><highlight class="comment">//<sp/>1.0<sp/>/<sp/>pot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[3]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramLocalParameter4fvARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>0,<sp/>parm<sp/>);</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>zProject<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[0]<sp/>=<sp/>backEnd.viewDef-&gt;projectionMatrix[10];</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[1]<sp/>=<sp/>backEnd.viewDef-&gt;projectionMatrix[14];</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramLocalParameter4fvARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>1,<sp/>parm<sp/>);</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>positionToViewSpace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[0]<sp/>=<sp/>-1.0<sp/>/<sp/>backEnd.viewDef-&gt;projectionMatrix[0];</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[1]<sp/>=<sp/>-1.0<sp/>/<sp/>backEnd.viewDef-&gt;projectionMatrix[5];</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[2]<sp/>=<sp/>2.0/viewBufferSize;</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[3]<sp/>=<sp/>2.0/viewBufferSize;</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramLocalParameter4fvARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>2,<sp/>parm<sp/>);</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>positionToJitterTexScale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[0]<sp/>=<sp/>1.0<sp/>/<sp/>(<sp/>JITTER_SIZE<sp/>*<sp/>r_sb_samples.GetInteger()<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[1]<sp/>=<sp/>1.0<sp/>/<sp/>JITTER_SIZE;</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[3]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramLocalParameter4fvARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>7,<sp/>parm<sp/>);</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>jitter<sp/>tex<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[0]<sp/>=<sp/></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[1]<sp/>=<sp/>r_sb_jitterScale.GetFloat()<sp/>*<sp/>lightBufferSizeFraction;</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[2]<sp/>=<sp/>-r_sb_biasScale.GetFloat();</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramLocalParameter4fvARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>8,<sp/>parm<sp/>);</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>jitter<sp/>tex<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_sb_randomize.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parm[0]<sp/>=<sp/>(rand()&amp;255)<sp/>/<sp/>255.0;</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parm[1]<sp/>=<sp/>(rand()&amp;255)<sp/>/<sp/>255.0;</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parm[0]<sp/>=<sp/>parm[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramLocalParameter4fvARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>9,<sp/>parm<sp/>);</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/>RB_DrawElementsWithCounters(<sp/>tri<sp/>);</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/>qglDisable(GL_VERTEX_PROGRAM_ARB);</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/>qglDisable(GL_FRAGMENT_PROGRAM_ARB);</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_Cull(<sp/>CT_FRONT_SIDED<sp/>);</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>qglEnableClientState(<sp/>GL_TEXTURE_COORD_ARRAY<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"></highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/>qglDepthFunc(<sp/>GL_LEQUAL<sp/>);</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_sb_showFrustumPixels.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglEnable(<sp/>GL_TEXTURE_2D<sp/>);</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglColor3f(<sp/>1,<sp/>1,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>after<sp/>all<sp/>the<sp/>frustums<sp/>have<sp/>been<sp/>drawn,<sp/>the<sp/>surfaces<sp/>that<sp/>have<sp/>been<sp/>drawn<sp/>on<sp/>will<sp/>get<sp/>interactions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scissor<sp/>may<sp/>still<sp/>be<sp/>a<sp/>win<sp/>even<sp/>with<sp/>the<sp/>stencil<sp/>test<sp/>for<sp/>very<sp/>fast<sp/>rejects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/>qglStencilFunc(<sp/>GL_EQUAL,<sp/>0,<sp/>255<sp/>);</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/>qglStencilOp(<sp/>GL_KEEP,<sp/>GL_KEEP,<sp/>GL_KEEP<sp/>);</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can<sp/>avoid<sp/>clearing<sp/>the<sp/>stencil<sp/>buffer<sp/>by<sp/>changing<sp/>the<sp/>hasLight<sp/>value<sp/>for<sp/>each<sp/>light</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"></highlight></codeline>
<codeline lineno="1811"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1812"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="1813"><highlight class="comment">R_EXP_CalcLightAxialSize</highlight></codeline>
<codeline lineno="1814"><highlight class="comment"></highlight></codeline>
<codeline lineno="1815"><highlight class="comment">all<sp/>light<sp/>side<sp/>projections<sp/>must<sp/>currently<sp/>match,<sp/>so<sp/>non-centered</highlight></codeline>
<codeline lineno="1816"><highlight class="comment">and<sp/>non-cubic<sp/>lights<sp/>must<sp/>take<sp/>the<sp/>largest<sp/>length</highlight></codeline>
<codeline lineno="1817"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="1818"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>R_EXP_CalcLightAxialSize(<sp/><ref refid="structview_light__s" kindref="compound">viewLight_t</ref><sp/>*vLight<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>max<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!vLight-&gt;lightDef-&gt;parms.pointLight<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/>dir<sp/>=<sp/>vLight-&gt;lightDef-&gt;parms.target<sp/>-<sp/>vLight-&gt;lightDef-&gt;parms.origin;</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>dir.Length();</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max;</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>3<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>dist<sp/>=<sp/>fabs(vLight-&gt;lightDef-&gt;parms.lightCenter[i]<sp/>);</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist<sp/>+=<sp/>vLight-&gt;lightDef-&gt;parms.lightRadius[i];</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dist<sp/>&gt;<sp/>max<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>dist;</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max;</highlight></codeline>
<codeline lineno="1836"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1839"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="1840"><highlight class="comment">R_EXP_RenderViewDepthImage</highlight></codeline>
<codeline lineno="1841"><highlight class="comment"></highlight></codeline>
<codeline lineno="1842"><highlight class="comment">This<sp/>could<sp/>be<sp/>avoided<sp/>by<sp/>drop<sp/>sampling<sp/>the<sp/>native<sp/>view<sp/>depth<sp/>buffer<sp/>with<sp/>render<sp/>to<sp/>texture</highlight></codeline>
<codeline lineno="1843"><highlight class="comment">Bilerp<sp/>might<sp/>even<sp/>be<sp/>aprorpiate,<sp/>although<sp/>it<sp/>would<sp/>cause<sp/>issues<sp/>at<sp/>edges</highlight></codeline>
<codeline lineno="1844"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="1845"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_T_FillDepthBuffer(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref><sp/>*surf<sp/>);</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_EXP_RenderViewDepthImage(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!r_sb_screenSpaceShadow.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>screen<sp/>resolution<sp/>is<sp/>exactly<sp/>the<sp/>window<sp/>width,<sp/>we<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>the<sp/>depth<sp/>buffer<sp/>we<sp/>already<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>0<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>nativeViewBuffer<sp/>)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewDepthImage-&gt;CopyDepthbuffer(<sp/>backEnd.viewDef-&gt;viewport.x1,</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backEnd.viewDef-&gt;viewport.y1,<sp/><sp/>backEnd.viewDef-&gt;viewport.x2<sp/>-<sp/><sp/>backEnd.viewDef-&gt;viewport.x1<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backEnd.viewDef-&gt;viewport.y2<sp/>-<sp/><sp/>backEnd.viewDef-&gt;viewport.y1<sp/>+<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_LogComment(<sp/></highlight><highlight class="stringliteral">&quot;----------<sp/>R_EXP_RenderViewDepthImage<sp/>----------\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_sb_usePbuffer.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_CheckErrors();</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>current<sp/>openGL<sp/>drawable<sp/>to<sp/>the<sp/>shadow<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_MakeCurrent(<sp/>viewPbufferDC,<sp/>win32.hGLRC,<sp/>NULL<sp/></highlight><highlight class="comment">/*<sp/>!@#<sp/>viewPbuffer<sp/>*/</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>render<sp/>the<sp/>depth<sp/>to<sp/>the<sp/>new<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglViewport(<sp/>0,<sp/>0,<sp/>viewBufferSize,<sp/>viewBufferHeight<sp/>);</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglScissor(<sp/>0,<sp/>0,<sp/>viewBufferSize,<sp/>viewBufferHeight<sp/>);</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglClear(<sp/>GL_DEPTH_BUFFER_BIT<sp/>);</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglStencilFunc(<sp/>GL_ALWAYS,<sp/>0,<sp/>255<sp/>);</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>first<sp/>texture<sp/>will<sp/>be<sp/>used<sp/>for<sp/>alpha<sp/>tested<sp/>surfaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_SelectTexture(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglEnableClientState(<sp/>GL_TEXTURE_COORD_ARRAY<sp/>);</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_State(<sp/>GLS_DEPTHFUNC_LESS<sp/>);</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_RenderDrawSurfListWithFunction(<sp/>backEnd.viewDef-&gt;drawSurfs,<sp/>backEnd.viewDef-&gt;numDrawSurfs,<sp/>RB_T_FillDepthBuffer<sp/>);</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>it<sp/>to<sp/>a<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewDepthImage-&gt;Bind();</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglCopyTexSubImage2D(<sp/>GL_TEXTURE_2D,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>viewBufferSize,<sp/>viewBufferHeight<sp/>);</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_sb_usePbuffer.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>normal<sp/>screen<sp/>drawable<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_MakeCurrent(<sp/>win32.hDC,<sp/>win32.hGLRC,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>the<sp/>window<sp/>clipping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglMatrixMode(<sp/>GL_PROJECTION<sp/>);</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglLoadMatrixf(<sp/>backEnd.viewDef-&gt;projectionMatrix<sp/>);</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglMatrixMode(<sp/>GL_MODELVIEW<sp/>);</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglViewport(<sp/>tr.viewportOffset[0]<sp/>+<sp/>backEnd.viewDef-&gt;viewport.x1,<sp/></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr.viewportOffset[1]<sp/>+<sp/>backEnd.viewDef-&gt;viewport.y1,<sp/></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backEnd.viewDef-&gt;viewport.x2<sp/>+<sp/>1<sp/>-<sp/>backEnd.viewDef-&gt;viewport.x1,</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backEnd.viewDef-&gt;viewport.y2<sp/>+<sp/>1<sp/>-<sp/>backEnd.viewDef-&gt;viewport.y1<sp/>);</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglScissor(<sp/>tr.viewportOffset[0]<sp/>+<sp/>backEnd.viewDef-&gt;viewport.x1,<sp/></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr.viewportOffset[1]<sp/>+<sp/>backEnd.viewDef-&gt;viewport.y1,<sp/></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backEnd.viewDef-&gt;viewport.x2<sp/>+<sp/>1<sp/>-<sp/>backEnd.viewDef-&gt;viewport.x1,</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backEnd.viewDef-&gt;viewport.y2<sp/>+<sp/>1<sp/>-<sp/>backEnd.viewDef-&gt;viewport.y1<sp/>);</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"></highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>current<sp/>modelView<sp/>matrix<sp/>is<sp/>not<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backEnd.currentSpace<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/>qglTexParameteri(<sp/>GL_TEXTURE_2D,<sp/>GL_TEXTURE_COMPARE_MODE_ARB,<sp/>GL_NONE<sp/>);</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/>qglTexParameteri(<sp/>GL_TEXTURE_2D,<sp/>GL_TEXTURE_COMPARE_MODE_ARB,<sp/>GL_NONE<sp/>);</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/>qglTexParameterf(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MIN_FILTER,<sp/>GL_NEAREST<sp/>);</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/>qglTexParameterf(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MAG_FILTER,<sp/>GL_NEAREST<sp/>);</highlight></codeline>
<codeline lineno="1915"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"></highlight></codeline>
<codeline lineno="1917"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1918"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="1919"><highlight class="comment">RB_EXP_SetNativeBuffer</highlight></codeline>
<codeline lineno="1920"><highlight class="comment"></highlight></codeline>
<codeline lineno="1921"><highlight class="comment">This<sp/>is<sp/>always<sp/>the<sp/>back<sp/>buffer,<sp/>and<sp/>scissor<sp/>is<sp/>set<sp/>full<sp/>screen</highlight></codeline>
<codeline lineno="1922"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="1923"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_EXP_SetNativeBuffer(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>normal<sp/>screen<sp/>drawable<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/>R_MakeCurrent(<sp/>win32.hDC,<sp/>win32.hGLRC,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/>qglViewport(<sp/>tr.viewportOffset[0]<sp/>+<sp/>backEnd.viewDef-&gt;viewport.x1,<sp/></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr.viewportOffset[1]<sp/>+<sp/>backEnd.viewDef-&gt;viewport.y1,<sp/></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backEnd.viewDef-&gt;viewport.x2<sp/>+<sp/>1<sp/>-<sp/>backEnd.viewDef-&gt;viewport.x1,</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backEnd.viewDef-&gt;viewport.y2<sp/>+<sp/>1<sp/>-<sp/>backEnd.viewDef-&gt;viewport.y1<sp/>);</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"></highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/>backEnd.currentScissor<sp/>=<sp/>backEnd.viewDef-&gt;viewport;</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_useScissor.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglScissor(<sp/>backEnd.viewDef-&gt;viewport.x1<sp/>+<sp/>backEnd.currentScissor.x1,<sp/></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backEnd.viewDef-&gt;viewport.y1<sp/>+<sp/>backEnd.currentScissor.y1,</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backEnd.currentScissor.x2<sp/>+<sp/>1<sp/>-<sp/>backEnd.currentScissor.x1,</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backEnd.currentScissor.y2<sp/>+<sp/>1<sp/>-<sp/>backEnd.currentScissor.y1<sp/>);</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1940"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1943"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="1944"><highlight class="comment">RB_EXP_SetRenderBuffer</highlight></codeline>
<codeline lineno="1945"><highlight class="comment"></highlight></codeline>
<codeline lineno="1946"><highlight class="comment">This<sp/>may<sp/>be<sp/>to<sp/>a<sp/>float<sp/>pBuffer,<sp/>and<sp/>scissor<sp/>is<sp/>set<sp/>to<sp/>cover<sp/>only<sp/>the<sp/>light</highlight></codeline>
<codeline lineno="1947"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="1948"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_EXP_SetRenderBuffer(<sp/><ref refid="structview_light__s" kindref="compound">viewLight_t</ref><sp/>*vLight<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_hdr_useFloats.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_MakeCurrent(<sp/>floatPbufferDC,<sp/>floatContext,<sp/>floatPbuffer<sp/>);</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!qwglMakeCurrent(<sp/>win32.hDC,<sp/>win32.hGLRC<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_CheckErrors();</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;FatalError(<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>return<sp/>to<sp/>normal<sp/>drawing<sp/>context&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/>qglViewport(<sp/>tr.viewportOffset[0]<sp/>+<sp/>backEnd.viewDef-&gt;viewport.x1,<sp/></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr.viewportOffset[1]<sp/>+<sp/>backEnd.viewDef-&gt;viewport.y1,<sp/></highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backEnd.viewDef-&gt;viewport.x2<sp/>+<sp/>1<sp/>-<sp/>backEnd.viewDef-&gt;viewport.x1,</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backEnd.viewDef-&gt;viewport.y2<sp/>+<sp/>1<sp/>-<sp/>backEnd.viewDef-&gt;viewport.y1<sp/>);</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"></highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!vLight<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backEnd.currentScissor<sp/>=<sp/>backEnd.viewDef-&gt;viewport;</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backEnd.currentScissor<sp/>=<sp/>vLight-&gt;scissorRect;</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_useScissor.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglScissor(<sp/>backEnd.viewDef-&gt;viewport.x1<sp/>+<sp/>backEnd.currentScissor.x1,<sp/></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backEnd.viewDef-&gt;viewport.y1<sp/>+<sp/>backEnd.currentScissor.y1,</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backEnd.currentScissor.x2<sp/>+<sp/>1<sp/>-<sp/>backEnd.currentScissor.x1,</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backEnd.currentScissor.y2<sp/>+<sp/>1<sp/>-<sp/>backEnd.currentScissor.y1<sp/>);</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1975"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"></highlight></codeline>
<codeline lineno="1977"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1978"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="1979"><highlight class="comment">RB_shadowResampleAlpha</highlight></codeline>
<codeline lineno="1980"><highlight class="comment"></highlight></codeline>
<codeline lineno="1981"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="1982"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>RB_shadowResampleAlpha(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/>viewAlphaImage-&gt;Bind();</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>could<sp/>make<sp/>this<sp/>a<sp/>subimage,<sp/>but<sp/>it<sp/>isn&apos;t<sp/>relevent<sp/>once<sp/>we<sp/>have<sp/>render-to-texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/>qglCopyTexSubImage2D(<sp/>GL_TEXTURE_2D,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>viewBufferSize,<sp/>viewBufferHeight<sp/>);</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"></highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/>RB_EXP_SetRenderBuffer(<sp/>backEnd.vLight<sp/>);</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"></highlight></codeline>
<codeline lineno="1990"><highlight class="normal"></highlight><highlight class="comment">//=====================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1991"><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/>qglLoadMatrixf(<sp/>backEnd.viewDef-&gt;worldSpace.modelViewMatrix<sp/>);</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>uses<sp/>the<sp/>full<sp/>light,<sp/>not<sp/>side<sp/>frustums</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri<sp/>=<sp/>backEnd.vLight-&gt;frustumTris;</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"></highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref><sp/>*ac<sp/>=<sp/>(<ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref><sp/>*)vertexCache.Position(<sp/>tri-&gt;ambientCache<sp/>);</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/>qglVertexPointer(<sp/>3,<sp/>GL_FLOAT,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref><sp/>),<sp/>ac-&gt;xyz.ToFloatPtr()<sp/>);</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"></highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>stencil<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/>qglEnable(<sp/>GL_SCISSOR_TEST<sp/>);</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/>qglEnable(<sp/>GL_STENCIL_TEST<sp/>);</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/>qglClearStencil(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/>qglClear(<sp/>GL_STENCIL_BUFFER_BIT<sp/>);</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"></highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>front<sp/>faces<sp/>of<sp/>the<sp/>light<sp/>frustum,<sp/>incrementing<sp/>the<sp/>stencil<sp/>buffer<sp/>on<sp/>depth<sp/>fail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>we<sp/>can&apos;t<sp/>draw<sp/>on<sp/>those<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_State(<sp/>GLS_COLORMASK<sp/>|<sp/>GLS_ALPHAMASK<sp/>|<sp/>GLS_DEPTHMASK<sp/>|<sp/>GLS_DEPTHFUNC_LESS<sp/>);</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/>qglStencilFunc(<sp/>GL_ALWAYS,<sp/>0,<sp/>255<sp/>);</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/>qglStencilOp(<sp/>GL_KEEP,<sp/>GL_INCR,<sp/>GL_KEEP<sp/>);</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_Cull(<sp/>CT_FRONT_SIDED<sp/>);</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>fragment<sp/>/<sp/>vertex<sp/>program?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2014"><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/>RB_DrawElementsWithCounters(<sp/>tri<sp/>);</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>back<sp/>faces<sp/>of<sp/>the<sp/>light<sp/>frustum<sp/>with<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>depth<sp/>test<sp/>greater</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stencil<sp/>test<sp/>of<sp/>equal<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>zero<sp/>stencil<sp/>stencil<sp/>when<sp/>depth<sp/>test<sp/>passes,<sp/>so<sp/>subsequent<sp/>interaction<sp/>drawing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>occur<sp/>on<sp/>those<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2022"><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>pass<sp/>does<sp/>all<sp/>the<sp/>shadow<sp/>filtering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/>qglStencilFunc(<sp/>GL_EQUAL,<sp/>1,<sp/>255<sp/>);</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/>qglStencilOp(<sp/>GL_KEEP,<sp/>GL_KEEP,<sp/>GL_ZERO<sp/>);</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>to<sp/>destination<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_sb_showFrustumPixels.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_State(<sp/>GLS_SRCBLEND_ONE<sp/>|<sp/>GLS_DSTBLEND_ONE<sp/>|<sp/>GLS_DEPTHMASK<sp/>|<sp/>GLS_DEPTHFUNC_LESS<sp/>);</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglDisable(<sp/>GL_TEXTURE_2D<sp/>);</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglColor4f(<sp/>0,<sp/>0.25,<sp/>0,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_State(<sp/>GLS_COLORMASK<sp/>|<sp/>GLS_DEPTHMASK<sp/>|<sp/>GLS_DEPTHFUNC_LESS<sp/>);</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglEnable(GL_VERTEX_PROGRAM_ARB);</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglEnable(GL_FRAGMENT_PROGRAM_ARB);</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBindProgramARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>shadowResampleVertexProgram<sp/>);</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBindProgramARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>shadowResampleFragmentProgram<sp/>);</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"></highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>0..viewport-1<sp/>sizes<sp/>to<sp/>fractions<sp/>inside<sp/>the<sp/>POT<sp/>screen<sp/>depth<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shrink<sp/>by<sp/>one<sp/>unit<sp/>for<sp/>bilerp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>parm[4];</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parm[0]<sp/>=<sp/>1.0<sp/>/<sp/>(maxViewBufferSize+1)<sp/>*<sp/>viewBufferSize<sp/>/<sp/>maxViewBufferSize;</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parm[1]<sp/>=<sp/>parm[0];</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parm[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parm[3]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglProgramLocalParameter4fvARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>0,<sp/>parm<sp/>);</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"></highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_Cull(<sp/>CT_BACK_SIDED<sp/>);</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/>qglDepthFunc(<sp/>GL_GREATER<sp/>);</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"></highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/>RB_DrawElementsWithCounters(<sp/>tri<sp/>);</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"></highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/>qglDisable(GL_VERTEX_PROGRAM_ARB);</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/>qglDisable(GL_FRAGMENT_PROGRAM_ARB);</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_Cull(<sp/>CT_FRONT_SIDED<sp/>);</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/>qglDepthFunc(<sp/>GL_LEQUAL<sp/>);</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_sb_showFrustumPixels.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglEnable(<sp/>GL_TEXTURE_2D<sp/>);</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglColor3f(<sp/>1,<sp/>1,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>after<sp/>all<sp/>the<sp/>frustums<sp/>have<sp/>been<sp/>drawn,<sp/>the<sp/>surfaces<sp/>that<sp/>have<sp/>been<sp/>drawn<sp/>on<sp/>will<sp/>get<sp/>interactions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scissor<sp/>may<sp/>still<sp/>be<sp/>a<sp/>win<sp/>even<sp/>with<sp/>the<sp/>stencil<sp/>test<sp/>for<sp/>very<sp/>fast<sp/>rejects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/>qglStencilFunc(<sp/>GL_EQUAL,<sp/>0,<sp/>255<sp/>);</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/>qglStencilOp(<sp/>GL_KEEP,<sp/>GL_KEEP,<sp/>GL_KEEP<sp/>);</highlight></codeline>
<codeline lineno="2069"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"></highlight></codeline>
<codeline lineno="2072"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2073"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="2074"><highlight class="comment">RB_EXP_CoverScreen</highlight></codeline>
<codeline lineno="2075"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="2076"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_EXP_CoverScreen(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>a<sp/>full<sp/>screen<sp/>quad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/>qglMatrixMode(<sp/>GL_PROJECTION<sp/>);</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/>qglLoadIdentity();<sp/></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/>qglOrtho(<sp/>0,<sp/>1,<sp/>0,<sp/>1,<sp/>-1,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/>qglMatrixMode(<sp/>GL_MODELVIEW<sp/>);</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/>qglLoadIdentity();</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/>qglBegin(<sp/>GL_TRIANGLE_FAN<sp/>);</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/>qglVertex2f(<sp/>0,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/>qglVertex2f(<sp/>0,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/>qglVertex2f(<sp/>1,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/>qglVertex2f(<sp/>1,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/>qglEnd();</highlight></codeline>
<codeline lineno="2091"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2094"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="2095"><highlight class="comment">RB_EXP_ReadFloatBuffer</highlight></codeline>
<codeline lineno="2096"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="2097"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_EXP_ReadFloatBuffer(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>pixels<sp/>=<sp/>glConfig.vidWidth<sp/>*<sp/>glConfig.vidHeight;</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>*buf<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)R_StaticAlloc(<sp/>pixels<sp/>*<sp/>4<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/>qglReadPixels(<sp/>0,<sp/>0,<sp/>glConfig.vidWidth,<sp/>glConfig.vidHeight,<sp/>GL_RGBA,<sp/>GL_FLOAT,<sp/>buf<sp/>);</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"></highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>mins[4]<sp/>=<sp/>{<sp/>9999,<sp/>9999,<sp/>9999,<sp/>9999<sp/>};</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>maxs[4]<sp/>=<sp/>{<sp/>-9999,<sp/>-9999,<sp/>-9999,<sp/>-9999<sp/>};</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>pixels<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0<sp/>;<sp/>j<sp/>&lt;<sp/>4<sp/>;<sp/>j++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>v<sp/>=<sp/>buf[<sp/>i*4<sp/>+<sp/>j<sp/>];</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>v<sp/>&lt;<sp/>mins[j]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mins[j]<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>v<sp/>&gt;<sp/>maxs[j]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxs[j]<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/>RB_EXP_SetNativeBuffer();</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"></highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/>qglLoadIdentity();</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/>qglMatrixMode(<sp/>GL_PROJECTION<sp/>);</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_State(<sp/>GLS_DEPTHFUNC_ALWAYS<sp/>);</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/>qglColor3f(<sp/>1,<sp/>1,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/>qglPushMatrix();</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/>qglLoadIdentity();<sp/></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/>qglDisable(<sp/>GL_TEXTURE_2D<sp/>);</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/>qglOrtho(<sp/>0,<sp/>1,<sp/>0,<sp/>1,<sp/>-1,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/>qglRasterPos2f(<sp/>0.01f,<sp/>0.01f<sp/>);</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/>qglDrawPixels(<sp/>glConfig.vidWidth,<sp/>glConfig.vidHeight,<sp/>GL_RGBA,<sp/>GL_FLOAT,<sp/>buf<sp/>);</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/>qglPopMatrix();</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/>qglEnable(<sp/>GL_TEXTURE_2D<sp/>);</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/>qglMatrixMode(<sp/>GL_MODELVIEW<sp/>);</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"></highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/>R_StaticFree(<sp/>buf<sp/>);</highlight></codeline>
<codeline lineno="2135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"></highlight></codeline>
<codeline lineno="2137"><highlight class="normal"></highlight></codeline>
<codeline lineno="2138"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_TestGamma(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"></highlight></codeline>
<codeline lineno="2140"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2141"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="2142"><highlight class="comment">RB_EXP_GammaDither</highlight></codeline>
<codeline lineno="2143"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="2144"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>RB_EXP_GammaDither(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!r_hdr_useFloats.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"></highlight></codeline>
<codeline lineno="2150"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="2151"><highlight class="preprocessor"></highlight><highlight class="normal">r_testGamma.SetBool(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2152"><highlight class="normal">RB_TestGamma();</highlight></codeline>
<codeline lineno="2153"><highlight class="normal">r_testGamma.SetBool(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2155"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/>RB_EXP_SetNativeBuffer();</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"></highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2159"><highlight class="comment">#<sp/>texture<sp/>0<sp/>is<sp/>the<sp/>high<sp/>dynamic<sp/>range<sp/>buffer</highlight></codeline>
<codeline lineno="2160"><highlight class="comment">#<sp/>texture<sp/>1<sp/>is<sp/>the<sp/>random<sp/>dither<sp/>texture</highlight></codeline>
<codeline lineno="2161"><highlight class="comment">#<sp/>texture<sp/>2<sp/>is<sp/>the<sp/>light<sp/>bloom<sp/>texture</highlight></codeline>
<codeline lineno="2162"><highlight class="comment"></highlight></codeline>
<codeline lineno="2163"><highlight class="comment">#<sp/>writes<sp/>result.color<sp/>as<sp/>the<sp/>32<sp/>bit<sp/>dithered<sp/>and<sp/>gamma<sp/>corrected<sp/>values</highlight></codeline>
<codeline lineno="2164"><highlight class="comment"></highlight></codeline>
<codeline lineno="2165"><highlight class="comment">PARAM<sp/><sp/><sp/>exposure<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>program.local[0];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>multiply<sp/>HDR<sp/>value<sp/>by<sp/>this<sp/>to<sp/>get<sp/>screen<sp/>pixels</highlight></codeline>
<codeline lineno="2166"><highlight class="comment">PARAM<sp/><sp/><sp/>gammaPower<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>program.local[1];</highlight></codeline>
<codeline lineno="2167"><highlight class="comment">PARAM<sp/><sp/><sp/>monitorDither<sp/>=<sp/><sp/><sp/><sp/><sp/>program.local[2];</highlight></codeline>
<codeline lineno="2168"><highlight class="comment">PARAM<sp/><sp/><sp/>positionToDitherScale<sp/>=<sp/><sp/><sp/><sp/><sp/>program.local[3];</highlight></codeline>
<codeline lineno="2169"><highlight class="comment">PARAM<sp/><sp/><sp/>bloomFraction<sp/>=<sp/><sp/><sp/><sp/><sp/>program.local[4];</highlight></codeline>
<codeline lineno="2170"><highlight class="comment">PARAM<sp/><sp/><sp/>positionToBloomScale<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/>program.local[5];</highlight></codeline>
<codeline lineno="2171"><highlight class="comment"></highlight></codeline>
<codeline lineno="2172"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2173"><highlight class="normal"></highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/>qglBindProgramARB(<sp/>GL_VERTEX_PROGRAM_ARB,gammaDitherVertexProgram<sp/>);</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/>qglBindProgramARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>gammaDitherFragmentProgram<sp/>);</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/>qglEnable(GL_VERTEX_PROGRAM_ARB);</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/>qglEnable(GL_FRAGMENT_PROGRAM_ARB);</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"></highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/>qglActiveTextureARB(<sp/>GL_TEXTURE2_ARB<sp/>);</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/>qglBindTexture(<sp/>GL_TEXTURE_RECTANGLE_NV,<sp/>floatPbufferQuarterImage-&gt;texnum<sp/>);</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/>R_BindTexImage(<sp/>floatPbufferQuarter<sp/>);</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/>qglActiveTextureARB(<sp/>GL_TEXTURE1_ARB<sp/>);</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/>random256Image-&gt;BindFragment();</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"></highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/>qglActiveTextureARB(<sp/>GL_TEXTURE0_ARB<sp/>);</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/>qglBindTexture(<sp/>GL_TEXTURE_RECTANGLE_NV,<sp/>floatPbufferImage-&gt;texnum<sp/>);</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/>R_BindTexImage(<sp/>floatPbuffer<sp/>);</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>parm[4];</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"></highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[0]<sp/>=<sp/>r_hdr_exposure.GetFloat();</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramLocalParameter4fvARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>0,<sp/>parm<sp/>);</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"></highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[0]<sp/>=<sp/>r_hdr_gamma.GetFloat();</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramLocalParameter4fvARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>1,<sp/>parm<sp/>);</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"></highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[0]<sp/>=<sp/>r_hdr_monitorDither.GetFloat();</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramLocalParameter4fvARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>2,<sp/>parm<sp/>);</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[0]<sp/>=<sp/>1.0<sp/>/<sp/>256;</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[1]<sp/>=<sp/>parm[0];</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[2]<sp/>=<sp/>rand()/65535.0;</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[3]<sp/>=<sp/>rand()/65535.0;</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramLocalParameter4fvARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>3,<sp/>parm<sp/>);</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"></highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[0]<sp/>=<sp/>1.0<sp/>-<sp/>r_hdr_bloomFraction.GetFloat();</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[1]<sp/>=<sp/>r_hdr_bloomFraction.GetFloat();</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramLocalParameter4fvARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>4,<sp/>parm<sp/>);</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"></highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[0]<sp/>=<sp/>0.25;</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[1]<sp/>=<sp/>0.25;</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramLocalParameter4fvARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>5,<sp/>parm<sp/>);</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/>qglDisable(<sp/>GL_STENCIL_TEST<sp/>);</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/>qglDisable(<sp/>GL_SCISSOR_TEST<sp/>);</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/>qglDisable(<sp/>GL_DEPTH_TEST<sp/>);</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"></highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/>RB_EXP_CoverScreen();</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"></highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/>qglEnable(<sp/>GL_DEPTH_TEST<sp/>);</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/>qglDisable(GL_VERTEX_PROGRAM_ARB);</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/>qglDisable(GL_FRAGMENT_PROGRAM_ARB);</highlight></codeline>
<codeline lineno="2238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"></highlight></codeline>
<codeline lineno="2240"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2241"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="2242"><highlight class="comment">RB_EXP_Bloom</highlight></codeline>
<codeline lineno="2243"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="2244"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2245"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>RB_EXP_Bloom(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!r_hdr_useFloats.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_hdr_bloomFraction.GetFloat()<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"></highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_CheckErrors();</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"></highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mip<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2259"><highlight class="normal"></highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>to<sp/>the<sp/>second<sp/>floatPbuffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/>R_MakeCurrent(<sp/>floatPbuffer2DC,<sp/>floatContext,<sp/>floatPbuffer2<sp/>);</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"></highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_State(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/>qglDisable(<sp/>GL_DEPTH_TEST<sp/>);</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/>qglDisable(<sp/>GL_SCISSOR_TEST<sp/>);</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"></highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/>qglEnable(GL_VERTEX_PROGRAM_ARB);</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/>qglEnable(GL_FRAGMENT_PROGRAM_ARB);</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"></highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/>qglClearColor(<sp/>1.0,<sp/>0.5,<sp/>0,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/>qglClear(<sp/>GL_COLOR_BUFFER_BIT<sp/>);</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/>qglViewport(<sp/>0,<sp/>0,<sp/>glConfig.vidWidth&gt;&gt;1,<sp/>glConfig.vidHeight&gt;&gt;1<sp/>);</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"></highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>from<sp/>the<sp/>original<sp/>floatPbuffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/>qglActiveTextureARB(<sp/>GL_TEXTURE0_ARB<sp/>);</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/>qglBindTexture(<sp/>GL_TEXTURE_RECTANGLE_NV,<sp/>floatPbufferImage-&gt;texnum<sp/>);</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/>R_BindTexImage(<sp/>floatPbuffer<sp/>);</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"></highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/>qglBindProgramARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>downSampleVertexProgram<sp/>);</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/>qglBindProgramARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>downSampleFragmentProgram<sp/>);</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"></highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/>RB_EXP_CoverScreen();</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mip<sp/>map<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/>qglViewport(<sp/>0,<sp/>0,<sp/>glConfig.vidWidth&gt;&gt;2,<sp/>glConfig.vidHeight&gt;&gt;2<sp/>);</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"></highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>to<sp/>the<sp/>second<sp/>floatPbuffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/>R_MakeCurrent(<sp/>floatPbufferQuarterDC,<sp/>floatContext,<sp/>floatPbufferQuarter<sp/>);</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"></highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>from<sp/>the<sp/>original<sp/>floatPbuffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/>qglBindTexture(<sp/>GL_TEXTURE_RECTANGLE_NV,<sp/>floatPbuffer2Image-&gt;texnum<sp/>);</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/>R_BindTexImage(<sp/>floatPbuffer2<sp/>);</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"></highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/>RB_EXP_CoverScreen();</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"></highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>blur<sp/>horizontally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2302"><highlight class="comment">#<sp/>texture<sp/>0<sp/>is<sp/>the<sp/>high<sp/>dynamic<sp/>range<sp/>buffer</highlight></codeline>
<codeline lineno="2303"><highlight class="comment">#<sp/>writes<sp/>result.color<sp/>as<sp/>the<sp/>fp16<sp/>result<sp/>of<sp/>a<sp/>smeared<sp/>bloom</highlight></codeline>
<codeline lineno="2304"><highlight class="comment"></highlight></codeline>
<codeline lineno="2305"><highlight class="comment">PARAM<sp/><sp/><sp/>step<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/>program.local[0];<sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>{<sp/>1,<sp/>0<sp/>}<sp/>or<sp/>{<sp/>0,<sp/>1<sp/>}<sp/>for<sp/>horizontal<sp/>/<sp/>vertical<sp/>separation</highlight></codeline>
<codeline lineno="2306"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2307"><highlight class="normal"></highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>to<sp/>the<sp/>second<sp/>floatPbuffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/>R_MakeCurrent(<sp/>floatPbuffer2DC,<sp/>floatContext,<sp/>floatPbuffer2<sp/>);</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"></highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/>qglBindProgramARB(<sp/>GL_VERTEX_PROGRAM_ARB,<sp/>bloomVertexProgram<sp/>);</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/>qglBindProgramARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>bloomFragmentProgram<sp/>);</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/>qglEnable(GL_VERTEX_PROGRAM_ARB);</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/>qglEnable(GL_FRAGMENT_PROGRAM_ARB);</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"></highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_SelectTextureNoClient(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"></highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>blur<sp/>horizontally<sp/>first<sp/>to<sp/>the<sp/>second<sp/>floatPbuffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/>qglBindTexture(<sp/>GL_TEXTURE_RECTANGLE_NV,<sp/>floatPbufferQuarterImage-&gt;texnum<sp/>);</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/>R_BindTexImage(<sp/>floatPbufferQuarter<sp/>);</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"></highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>parm[4];</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"></highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramLocalParameter4fvARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>0,<sp/>parm<sp/>);</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/>RB_EXP_CoverScreen();</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"></highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>blur<sp/>vertically<sp/>back<sp/>to<sp/>the<sp/>quarter<sp/>pbuffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/>R_MakeCurrent(<sp/>floatPbufferQuarterDC,<sp/>floatContext,<sp/>floatPbufferQuarter<sp/>);</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"></highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/>qglBindTexture(<sp/>GL_TEXTURE_RECTANGLE_NV,<sp/>floatPbuffer2Image-&gt;texnum<sp/>);</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/>R_BindTexImage(<sp/>floatPbuffer2<sp/>);</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"></highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/>parm[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/>qglProgramLocalParameter4fvARB(<sp/>GL_FRAGMENT_PROGRAM_ARB,<sp/>0,<sp/>parm<sp/>);</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/>RB_EXP_CoverScreen();</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//========================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2349"><highlight class="normal"></highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/>qglEnable(<sp/>GL_DEPTH_TEST<sp/>);</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/>qglEnable(<sp/>GL_SCISSOR_TEST<sp/>);</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"></highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/>qglDisable(GL_VERTEX_PROGRAM_ARB);</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/>qglDisable(GL_FRAGMENT_PROGRAM_ARB);</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"></highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_CheckErrors();</highlight></codeline>
<codeline lineno="2357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"></highlight></codeline>
<codeline lineno="2359"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2360"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="2361"><highlight class="comment">RB_Exp_DrawInteractions</highlight></codeline>
<codeline lineno="2362"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="2363"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2364"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>RB_Exp_DrawInteractions(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!initialized<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_Exp_Allocate();</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"></highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!backEnd.viewDef-&gt;viewLights<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"></highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>validate<sp/>the<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_sb_samples.GetInteger()<sp/>!=<sp/>16<sp/>&amp;&amp;<sp/>r_sb_samples.GetInteger()<sp/>!=<sp/>4<sp/>&amp;&amp;<sp/>r_sb_samples.GetInteger()<sp/>!=<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_sb_samples.SetInteger(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"></highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>validate<sp/>the<sp/>light<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_sb_lightResolution.GetInteger()<sp/>&lt;<sp/>64<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_sb_lightResolution.SetInteger(<sp/>64<sp/>);</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_sb_lightResolution.GetInteger()<sp/>&gt;<sp/>maxLightBufferSize<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_sb_lightResolution.SetInteger(<sp/>maxLightBufferSize<sp/>);</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/>lightBufferSize<sp/>=<sp/>r_sb_lightResolution.GetInteger();</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/>lightBufferSizeFraction<sp/>=<sp/>(float)lightBufferSize<sp/>/<sp/>maxLightBufferSize;</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"></highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>validate<sp/>the<sp/>view<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_sb_viewResolution.GetInteger()<sp/>&lt;<sp/>64<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_sb_viewResolution.SetInteger(<sp/>64<sp/>);</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_sb_viewResolution.GetInteger()<sp/>&gt;<sp/>maxViewBufferSize<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_sb_viewResolution.SetInteger(<sp/>maxViewBufferSize<sp/>);</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/>viewBufferSize<sp/>=<sp/>r_sb_viewResolution.GetInteger();</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/>viewBufferHeight<sp/>=<sp/>viewBufferSize<sp/>*<sp/>3<sp/>/<sp/>4;</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/>viewBufferSizeFraction<sp/>=<sp/>(float)viewBufferSize<sp/>/<sp/>maxViewBufferSize;</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/>viewBufferHeightFraction<sp/>=<sp/>(float)viewBufferHeight<sp/>/<sp/>maxViewBufferSize;</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><sp/>viewBufferSize<sp/>==<sp/>backEnd.viewDef-&gt;viewport.x2<sp/>-<sp/><sp/>backEnd.viewDef-&gt;viewport.x1<sp/>+<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nativeViewBuffer<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nativeViewBuffer<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>for<sp/>either<sp/>point<sp/>sampled<sp/>or<sp/>percentage-closer<sp/>filtering<sp/>for<sp/>the<sp/>shadow<sp/>sampling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/>shadowImage[0]-&gt;BindFragment();</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_sb_linearFilter.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglTexParameterf(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MIN_FILTER,<sp/>GL_LINEAR<sp/>);</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglTexParameterf(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MAG_FILTER,<sp/>GL_LINEAR<sp/>);</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglTexParameterf(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MIN_FILTER,<sp/>GL_NEAREST<sp/>);</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglTexParameterf(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MAG_FILTER,<sp/>GL_NEAREST<sp/>);</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/>qglTexParameteri(<sp/>GL_TEXTURE_2D,<sp/>GL_TEXTURE_COMPARE_MODE_ARB,<sp/>GL_COMPARE_R_TO_TEXTURE<sp/>);</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"></highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/>globalImages-&gt;BindNull();</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"></highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>the<sp/>current<sp/>depth<sp/>buffer<sp/>to<sp/>a<sp/>texture<sp/>for<sp/>image-space<sp/>shadowing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>re-render<sp/>at<sp/>a<sp/>lower<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/>R_EXP_RenderViewDepthImage();</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"></highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_SelectTexture(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/>qglDisableClientState(<sp/>GL_TEXTURE_COORD_ARRAY<sp/>);</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"></highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disable<sp/>stencil<sp/>shadow<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/>qglStencilFunc(<sp/>GL_ALWAYS,<sp/>128,<sp/>255<sp/>);</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"></highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>jitter<sp/>image<sp/>will<sp/>be<sp/>used<sp/>to<sp/>offset<sp/>sample<sp/>centers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_SelectTextureNoClient(<sp/>8<sp/>);</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_sb_samples.GetInteger()<sp/>==<sp/>16<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jitterImage16-&gt;BindFragment();</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_sb_samples.GetInteger()<sp/>==<sp/>4<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jitterImage4-&gt;BindFragment();</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jitterImage1-&gt;BindFragment();</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"></highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>are<sp/>using<sp/>a<sp/>float<sp/>buffer,<sp/>clear<sp/>it<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_hdr_useFloats.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_EXP_SetRenderBuffer(<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>to<sp/>set<sp/>a<sp/>lot<sp/>of<sp/>things,<sp/>because<sp/>this<sp/>is<sp/>a<sp/>completely<sp/>different<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_SetDefaultGLState();</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglClearColor(<sp/>0.001f,<sp/>1.0f,<sp/>0.01f,<sp/>0.1f<sp/>);</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglClear(<sp/>GL_COLOR_BUFFER_BIT<sp/>|<sp/>GL_DEPTH_BUFFER_BIT<sp/>);</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>the<sp/>z<sp/>buffer,<sp/>set<sp/>the<sp/>projection<sp/>matrix,<sp/>etc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_BeginDrawingView();</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_STD_FillDepthBuffer(<sp/>(<ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref><sp/>**)&amp;backEnd.viewDef-&gt;drawSurfs[0],<sp/>backEnd.viewDef-&gt;numDrawSurfs<sp/>);</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"></highlight></codeline>
<codeline lineno="2448"><highlight class="normal"></highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>each<sp/>light,<sp/>perform<sp/>adding<sp/>and<sp/>shadowing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="structview_light__s" kindref="compound">viewLight_t</ref><sp/>*vLight<sp/>=<sp/>backEnd.viewDef-&gt;viewLights<sp/>;<sp/>vLight<sp/>;<sp/>vLight<sp/>=<sp/>vLight-&gt;next<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backEnd.vLight<sp/>=<sp/>vLight;</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"></highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_material" kindref="compound">idMaterial</ref><sp/><sp/><sp/><sp/>*lightShader<sp/>=<sp/>vLight-&gt;lightShader;</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"></highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>fogging<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>lightShader-&gt;IsFogLight()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>lightShader-&gt;IsBlendLight()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"></highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!vLight-&gt;localInteractions<sp/>&amp;&amp;<sp/>!vLight-&gt;globalInteractions</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!vLight-&gt;translucentInteractions<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"></highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!vLight-&gt;frustumTris-&gt;ambientCache<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_CreateAmbientCache(<sp/>const_cast&lt;srfTriangles_t<sp/>*&gt;(vLight-&gt;frustumTris),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);<sp/></highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"></highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>light<sp/>side<sp/>projections<sp/>must<sp/>currently<sp/>match,<sp/>so<sp/>non-centered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>non-cubic<sp/>lights<sp/>must<sp/>take<sp/>the<sp/>largest<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewLightAxialSize<sp/>=<sp/>R_EXP_CalcLightAxialSize(<sp/>vLight<sp/>);</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"></highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>side,<sp/>sideStop;</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"></highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>vLight-&gt;lightDef-&gt;parms.pointLight<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_sb_singleSide.GetInteger()<sp/>!=<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>side<sp/>=<sp/>r_sb_singleSide.GetInteger();</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sideStop<sp/>=<sp/>side+1;</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>side<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sideStop<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>side<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sideStop<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"></highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><sp/>;<sp/>side<sp/>&lt;<sp/>sideStop<sp/>;<sp/>side++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>check<sp/>for<sp/>frustums<sp/>completely<sp/>off<sp/>the<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2495"><highlight class="normal"></highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>render<sp/>a<sp/>shadow<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_RenderShadowBuffer(<sp/>vLight,<sp/>side<sp/>);</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"></highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>back<sp/>to<sp/>view<sp/>rendering,<sp/>possibly<sp/>in<sp/>the<sp/>off-screen<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>nativeViewBuffer<sp/>||<sp/>!r_sb_screenSpaceShadow.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>directly<sp/>to<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_EXP_SetRenderBuffer(<sp/>vLight<sp/>);</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>off<sp/>screen<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_sb_usePbuffer.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_CheckErrors();</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>current<sp/>openGL<sp/>drawable<sp/>to<sp/>the<sp/>shadow<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_MakeCurrent(<sp/>viewPbufferDC,<sp/>win32.hGLRC,<sp/>viewPbuffer<sp/>);</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglViewport(<sp/>0,<sp/>0,<sp/>viewBufferSize,<sp/>viewBufferHeight<sp/>);</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglScissor(<sp/>0,<sp/>0,<sp/>viewBufferSize,<sp/>viewBufferHeight<sp/>);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>!@#<sp/>FIXME:<sp/>scale<sp/>light<sp/>scissor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"></highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>render<sp/>the<sp/>shadows<sp/>into<sp/>destination<sp/>alpha<sp/>on<sp/>the<sp/>included<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_Exp_SelectFrustum(<sp/>vLight,<sp/>side<sp/>);</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"></highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!r_sb_screenSpaceShadow.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bind<sp/>shadow<sp/>buffer<sp/>to<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_SelectTextureNoClient(<sp/>7<sp/>);</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shadowImage[0]-&gt;BindFragment();</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"></highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_EXP_CreateDrawInteractions(<sp/>vLight-&gt;localInteractions<sp/>);</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_EXP_CreateDrawInteractions(<sp/>vLight-&gt;globalInteractions<sp/>);</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backEnd.depthFunc<sp/>=<sp/>GLS_DEPTHFUNC_LESS;</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_EXP_CreateDrawInteractions(<sp/>vLight-&gt;translucentInteractions<sp/>);</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backEnd.depthFunc<sp/>=<sp/>GLS_DEPTHFUNC_EQUAL;</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"></highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>render<sp/>the<sp/>native<sp/>window<sp/>coordinates<sp/>interactions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_sb_screenSpaceShadow.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!nativeViewBuffer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_shadowResampleAlpha();</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglEnable(<sp/>GL_STENCIL_TEST<sp/>);</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_EXP_SetRenderBuffer(<sp/>vLight<sp/>);</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_ignore.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2538"><highlight class="normal">qglEnable(<sp/>GL_STENCIL_TEST<sp/>);<sp/><sp/><sp/></highlight><highlight class="comment">//!@#</highlight></codeline>
<codeline lineno="2539"><highlight class="comment"></highlight><highlight class="normal">}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2540"><highlight class="normal">qglDisable(<sp/>GL_STENCIL_TEST<sp/>);<sp/><sp/></highlight><highlight class="comment">//!@#</highlight></codeline>
<codeline lineno="2541"><highlight class="comment"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_EXP_CreateDrawInteractions(<sp/>vLight-&gt;localInteractions<sp/>);</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_EXP_CreateDrawInteractions(<sp/>vLight-&gt;globalInteractions<sp/>);</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backEnd.depthFunc<sp/>=<sp/>GLS_DEPTHFUNC_LESS;</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_EXP_CreateDrawInteractions(<sp/>vLight-&gt;translucentInteractions<sp/>);</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backEnd.depthFunc<sp/>=<sp/>GLS_DEPTHFUNC_EQUAL;</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"></highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_SelectTexture(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/>qglEnableClientState(<sp/>GL_TEXTURE_COORD_ARRAY<sp/>);</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"></highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>experimental<sp/>transfer<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>7<sp/>;<sp/>i<sp/>&gt;=<sp/>0<sp/>;<sp/>i--<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_SelectTextureNoClient(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalImages-&gt;BindNull();</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/>GL_State(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"></highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/>RB_EXP_Bloom();</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/>RB_EXP_GammaDither();</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"></highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>haven&apos;t<sp/>been<sp/>state<sp/>saved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>8<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backEnd.glState.tmu[i].current2DMap<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"></highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>take<sp/>it<sp/>out<sp/>of<sp/>texture<sp/>compare<sp/>mode<sp/>so<sp/>I<sp/>can<sp/>testImage<sp/>it<sp/>for<sp/>debugging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/>shadowImage[0]-&gt;BindFragment();</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/>qglTexParameteri(<sp/>GL_TEXTURE_2D,<sp/>GL_TEXTURE_COMPARE_MODE_ARB,<sp/>GL_NONE<sp/>);</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"></highlight></codeline>
<codeline lineno="2573"><highlight class="normal"></highlight></codeline>
<codeline lineno="2574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"></highlight></codeline>
<codeline lineno="2576"><highlight class="normal"></highlight></codeline>
<codeline lineno="2577"><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2579"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="2580"><highlight class="comment">R_Exp_Init</highlight></codeline>
<codeline lineno="2581"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="2582"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2583"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_Exp_Init(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.allowExpPath<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"></highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;----------<sp/>R_Exp_Init<sp/>----------\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"></highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!glConfig.ARBVertexProgramAvailable<sp/>||<sp/>!glConfig.ARBFragmentProgramAvailable<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>available.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2592"><highlight class="normal">RB_CreateBloomTable();</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="2594"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!R_CheckExtension(<sp/></highlight><highlight class="stringliteral">&quot;GL_NV_float_buffer&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>available.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!R_CheckExtension(<sp/></highlight><highlight class="stringliteral">&quot;GL_NV_texture_rectangle&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>available.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2603"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2604"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="2605"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>qglCombinerParameterfvNV<sp/>=<sp/>(void<sp/>(APIENTRY<sp/>*)(<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*params<sp/>))</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;glCombinerParameterfvNV&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2608"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;Available.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"></highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!idStr::Icmp(<sp/>r_renderer.GetString(),<sp/></highlight><highlight class="stringliteral">&quot;exp&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_Exp_Allocate();</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"></highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;--------------------------------------------\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"></highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.allowExpPath<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2618"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp"/>
  </compounddef>
</doxygen>
