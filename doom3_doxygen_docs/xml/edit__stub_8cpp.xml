<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="edit__stub_8cpp" kind="file">
    <compoundname>edit_stub.cpp</compoundname>
    <includes refid="precompiled_8h" local="yes">../idlib/precompiled.h</includes>
      <sectiondef kind="func">
      <memberdef kind="function" id="edit__stub_8cpp_1a2eed2dd0d9cc4a93c4e7146846911801" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RadiantInit</definition>
        <argsstring>(void)</argsstring>
        <name>RadiantInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="32" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1aab9d543edec81e18a1e80ef6f2617f73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RadiantShutdown</definition>
        <argsstring>(void)</argsstring>
        <name>RadiantShutdown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="33" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1a3b541679732955debe915b9ecebcf887" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RadiantRun</definition>
        <argsstring>(void)</argsstring>
        <name>RadiantRun</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="34" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1aec07a01383255d0de667fb2836429704" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RadiantPrint</definition>
        <argsstring>(const char *text)</argsstring>
        <name>RadiantPrint</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="35" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1ad9625bcea90f4053be4a28b6b4e4a55e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RadiantSync</definition>
        <argsstring>(const char *mapName, const idVec3 &amp;viewOrg, const idAngles &amp;viewAngles)</argsstring>
        <name>RadiantSync</name>
        <param>
          <type>const char *</type>
          <declname>mapName</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>viewOrg</declname>
        </param>
        <param>
          <type>const <ref refid="classid_angles" kindref="compound">idAngles</ref> &amp;</type>
          <declname>viewAngles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="36" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1a087f2d408fe839fe00d0e17a38b48b22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LightEditorInit</definition>
        <argsstring>(const idDict *spawnArgs)</argsstring>
        <name>LightEditorInit</name>
        <param>
          <type>const <ref refid="classid_dict" kindref="compound">idDict</ref> *</type>
          <declname>spawnArgs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="38" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1a96ae547cc44001ecda5808da74c511a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LightEditorShutdown</definition>
        <argsstring>(void)</argsstring>
        <name>LightEditorShutdown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="39" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1af1f434e96d8b7360de060c85d767f152" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LightEditorRun</definition>
        <argsstring>(void)</argsstring>
        <name>LightEditorRun</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="40" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1a62d48fb19182e9423a00d7fa653c7425" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SoundEditorInit</definition>
        <argsstring>(const idDict *spawnArgs)</argsstring>
        <name>SoundEditorInit</name>
        <param>
          <type>const <ref refid="classid_dict" kindref="compound">idDict</ref> *</type>
          <declname>spawnArgs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="42" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1a5055feec03b4400c6c8445ad62ea6ce3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SoundEditorShutdown</definition>
        <argsstring>(void)</argsstring>
        <name>SoundEditorShutdown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="43" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1ac018ea48961de0de172b4ad89d40a217" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SoundEditorRun</definition>
        <argsstring>(void)</argsstring>
        <name>SoundEditorRun</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="44" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1a2e912d27bcb6de9e24baac3841cbd4f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AFEditorInit</definition>
        <argsstring>(const idDict *spawnArgs)</argsstring>
        <name>AFEditorInit</name>
        <param>
          <type>const <ref refid="classid_dict" kindref="compound">idDict</ref> *</type>
          <declname>spawnArgs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="46" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1a4b78429c4ea3b8eee9fa6bb43cbdeaf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AFEditorShutdown</definition>
        <argsstring>(void)</argsstring>
        <name>AFEditorShutdown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="47" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1ac48b12fb01b3d21db5f2c8123420cea9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AFEditorRun</definition>
        <argsstring>(void)</argsstring>
        <name>AFEditorRun</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="48" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1a587a5c12ce88518d72592d06e0b9cae5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ParticleEditorInit</definition>
        <argsstring>(const idDict *spawnArgs)</argsstring>
        <name>ParticleEditorInit</name>
        <param>
          <type>const <ref refid="classid_dict" kindref="compound">idDict</ref> *</type>
          <declname>spawnArgs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="50" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1a9a4b6bf1b45fda8c29e049af0f9a3c9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ParticleEditorShutdown</definition>
        <argsstring>(void)</argsstring>
        <name>ParticleEditorShutdown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="51" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1ad7796a0dd29f8469b8d7d8bffa9bfca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ParticleEditorRun</definition>
        <argsstring>(void)</argsstring>
        <name>ParticleEditorRun</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="52" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1a43c9d4dd86367e5ad5634e11dbf1d602" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ScriptEditorInit</definition>
        <argsstring>(const idDict *spawnArgs)</argsstring>
        <name>ScriptEditorInit</name>
        <param>
          <type>const <ref refid="classid_dict" kindref="compound">idDict</ref> *</type>
          <declname>spawnArgs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="54" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1a62350247784645d952a98f710a39b10c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ScriptEditorShutdown</definition>
        <argsstring>(void)</argsstring>
        <name>ScriptEditorShutdown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="55" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1af6c136a66a60aab7fb6523f2813ad296" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ScriptEditorRun</definition>
        <argsstring>(void)</argsstring>
        <name>ScriptEditorRun</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="56" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1a402ddc20ff49360b39b153a88f6588d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DeclBrowserInit</definition>
        <argsstring>(const idDict *spawnArgs)</argsstring>
        <name>DeclBrowserInit</name>
        <param>
          <type>const <ref refid="classid_dict" kindref="compound">idDict</ref> *</type>
          <declname>spawnArgs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="58" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1a3342a1467e2b3d5f389eef6985802587" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DeclBrowserShutdown</definition>
        <argsstring>(void)</argsstring>
        <name>DeclBrowserShutdown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="59" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1a32ad49ee452bae2df28a80eb780c2542" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DeclBrowserRun</definition>
        <argsstring>(void)</argsstring>
        <name>DeclBrowserRun</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="60" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1a0168aad8a9b2b4977e528c0df192d23e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DeclBrowserReloadDeclarations</definition>
        <argsstring>(void)</argsstring>
        <name>DeclBrowserReloadDeclarations</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="61" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1a06576787403815c587544cfc5ab71abe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GUIEditorInit</definition>
        <argsstring>(void)</argsstring>
        <name>GUIEditorInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="63" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1a151c415b6e56a77e8cfc54242d2c50f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GUIEditorShutdown</definition>
        <argsstring>(void)</argsstring>
        <name>GUIEditorShutdown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="64" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1a72d11fbcb482b97c3a03f8c60b27e5b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GUIEditorRun</definition>
        <argsstring>(void)</argsstring>
        <name>GUIEditorRun</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="65" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1adeaa970a128d69783de4ccd81b76e798" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GUIEditorHandleMessage</definition>
        <argsstring>(void *msg)</argsstring>
        <name>GUIEditorHandleMessage</name>
        <param>
          <type>void *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="66" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1a9c323d0f6d528bc72c5de893108eabab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DebuggerClientLaunch</definition>
        <argsstring>(void)</argsstring>
        <name>DebuggerClientLaunch</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="68" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1ad8818d271af6d59ed518cd67f2bc1a6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DebuggerClientInit</definition>
        <argsstring>(const char *cmdline)</argsstring>
        <name>DebuggerClientInit</name>
        <param>
          <type>const char *</type>
          <declname>cmdline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="69" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1a09e1b42bb590f24aa74ac9e0c19d5d6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DebuggerServerInit</definition>
        <argsstring>(void)</argsstring>
        <name>DebuggerServerInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="70" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1a48edfac2e222b9839206895412abb304" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DebuggerServerShutdown</definition>
        <argsstring>(void)</argsstring>
        <name>DebuggerServerShutdown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="71" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1a48f51b53fd1874ec138bd7abe4387cdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DebuggerServerPrint</definition>
        <argsstring>(const char *text)</argsstring>
        <name>DebuggerServerPrint</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="72" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1a211f541535764d1fa80a3722024db1b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DebuggerServerCheckBreakpoint</definition>
        <argsstring>(idInterpreter *interpreter, idProgram *program, int instructionPointer)</argsstring>
        <name>DebuggerServerCheckBreakpoint</name>
        <param>
          <type><ref refid="classid_interpreter" kindref="compound">idInterpreter</ref> *</type>
          <declname>interpreter</declname>
        </param>
        <param>
          <type><ref refid="classid_program" kindref="compound">idProgram</ref> *</type>
          <declname>program</declname>
        </param>
        <param>
          <type>int</type>
          <declname>instructionPointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="73" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1ad8542c3f8b27ff3b015a8699d8325972" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PDAEditorInit</definition>
        <argsstring>(const idDict *spawnArgs)</argsstring>
        <name>PDAEditorInit</name>
        <param>
          <type>const <ref refid="classid_dict" kindref="compound">idDict</ref> *</type>
          <declname>spawnArgs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="75" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1a93d79628c1f18714154a3bf3673300c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MaterialEditorInit</definition>
        <argsstring>()</argsstring>
        <name>MaterialEditorInit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="77" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="edit__stub_8cpp_1a74333a4c9b43924b2af8f1548081aa9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MaterialEditorPrintConsole</definition>
        <argsstring>(const char *text)</argsstring>
        <name>MaterialEditorPrintConsole</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" line="78" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp" bodystart="78" bodyend="78"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../idlib/precompiled.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>hdrstop</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>RadiantInit(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{<sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>level<sp/>editor<sp/>Radiant<sp/>only<sp/>runs<sp/>on<sp/>Win32\n&quot;</highlight><highlight class="normal"><sp/>);<sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>RadiantShutdown(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>RadiantRun(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>RadiantPrint(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text<sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>RadiantSync(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mapName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;viewOrg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_angles" kindref="compound">idAngles</ref><sp/>&amp;viewAngles<sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>LightEditorInit(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/>*spawnArgs<sp/>)<sp/>{<sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>Light<sp/>Editor<sp/>only<sp/>runs<sp/>on<sp/>Win32\n&quot;</highlight><highlight class="normal"><sp/>);<sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>LightEditorShutdown(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>LightEditorRun(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>SoundEditorInit(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/>*spawnArgs<sp/>)<sp/>{<sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>Sound<sp/>Editor<sp/>only<sp/>runs<sp/>on<sp/>Win32\n&quot;</highlight><highlight class="normal"><sp/>);<sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>SoundEditorShutdown(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>SoundEditorRun(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>AFEditorInit(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/>*spawnArgs<sp/>)<sp/>{<sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>Articulated<sp/>Figure<sp/>Editor<sp/>only<sp/>runs<sp/>on<sp/>Win32\n&quot;</highlight><highlight class="normal"><sp/>);<sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>AFEditorShutdown(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>AFEditorRun(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ParticleEditorInit(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/>*spawnArgs<sp/>)<sp/>{<sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>Particle<sp/>Editor<sp/>only<sp/>runs<sp/>on<sp/>Win32\n&quot;</highlight><highlight class="normal"><sp/>);<sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ParticleEditorShutdown(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ParticleEditorRun(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptEditorInit(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/>*spawnArgs<sp/>)<sp/>{<sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>Script<sp/>Editor<sp/>only<sp/>runs<sp/>on<sp/>Win32\n&quot;</highlight><highlight class="normal"><sp/>);<sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptEditorShutdown(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptEditorRun(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>DeclBrowserInit(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/>*spawnArgs<sp/>)<sp/>{<sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>Declaration<sp/>Browser<sp/>only<sp/>runs<sp/>on<sp/>Win32\n&quot;</highlight><highlight class="normal"><sp/>);<sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>DeclBrowserShutdown(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>DeclBrowserRun(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>DeclBrowserReloadDeclarations(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>GUIEditorInit(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{<sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>GUI<sp/>Editor<sp/>only<sp/>runs<sp/>on<sp/>Win32\n&quot;</highlight><highlight class="normal"><sp/>);<sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>GUIEditorShutdown(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>GUIEditorRun(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>GUIEditorHandleMessage(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*msg<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>DebuggerClientLaunch(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>DebuggerClientInit(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cmdline<sp/>)<sp/>{<sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>Script<sp/>Debugger<sp/>Client<sp/>only<sp/>runs<sp/>on<sp/>Win32\n&quot;</highlight><highlight class="normal"><sp/>);<sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>DebuggerServerInit(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>DebuggerServerShutdown(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>DebuggerServerPrint(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text<sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>DebuggerServerCheckBreakpoint(<sp/><ref refid="classid_interpreter" kindref="compound">idInterpreter</ref><sp/>*interpreter,<sp/><ref refid="classid_program" kindref="compound">idProgram</ref><sp/>*program,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>instructionPointer<sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>PDAEditorInit(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/>*spawnArgs<sp/>)<sp/>{<sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>PDA<sp/>editor<sp/>only<sp/>runs<sp/>on<sp/>Win32\n&quot;</highlight><highlight class="normal"><sp/>);<sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>MaterialEditorInit()<sp/>{<sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>Material<sp/>editor<sp/>only<sp/>runs<sp/>on<sp/>Win32\n&quot;</highlight><highlight class="normal"><sp/>);<sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>MaterialEditorPrintConsole(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text<sp/>)<sp/>{}</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/tools/edit_stub.cpp"/>
  </compounddef>
</doxygen>
