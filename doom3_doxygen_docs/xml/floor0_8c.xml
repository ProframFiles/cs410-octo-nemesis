<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="floor0_8c" kind="file">
    <compoundname>floor0.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="_math_8h" local="no">math.h</includes>
    <includes refid="ogg_8h" local="yes">../ogg/ogg.h</includes>
    <includes refid="sound_2_ogg_vorbis_2vorbis_2codec_8h" local="yes">../vorbis/codec.h</includes>
    <includes refid="codec__internal_8h" local="yes">codec_internal.h</includes>
    <includes refid="registry_8h" local="yes">registry.h</includes>
    <includes refid="lpc_8h" local="yes">lpc.h</includes>
    <includes refid="lsp_8h" local="yes">lsp.h</includes>
    <includes refid="codebook_8h" local="yes">codebook.h</includes>
    <includes refid="scales_8h" local="yes">scales.h</includes>
    <includes refid="sound_2_ogg_vorbis_2vorbissrc_2_misc_8h" local="yes">misc.h</includes>
    <includes refid="os_8h" local="yes">os.h</includes>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="2038">
        <label>stdlib.h</label>
      </node>
      <node id="2037">
        <label>E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/floor0.c</label>
        <link refid="floor0.c"/>
        <childnode refid="2038" relation="include">
        </childnode>
        <childnode refid="2039" relation="include">
        </childnode>
        <childnode refid="2040" relation="include">
        </childnode>
      </node>
      <node id="2039">
        <label>string.h</label>
      </node>
      <node id="2040">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structvorbis__look__floor0" prot="public">vorbis_look_floor0</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="floor0_8c_1ab9842c82b13ab5612028a9809e2f7b48" prot="public" static="no" mutable="no">
        <type><ref refid="structvorbis__func__floor" kindref="compound">vorbis_func_floor</ref></type>
        <definition>vorbis_func_floor floor0_exportbundle</definition>
        <argsstring></argsstring>
        <name>floor0_exportbundle</name>
        <initializer>={
  NULL,&amp;floor0_unpack,&amp;floor0_look,&amp;floor0_free_info,
  &amp;floor0_free_look,&amp;floor0_inverse1,&amp;floor0_inverse2
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/floor0.c" line="217" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/floor0.c" bodystart="217" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="floor0_8c_1acc1c20e5adc56be38741da68afe8793b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void floor0_free_info</definition>
        <argsstring>(vorbis_info_floor *i)</argsstring>
        <name>floor0_free_info</name>
        <param>
          <type>vorbis_info_floor *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/floor0.c" line="50" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/floor0.c" bodystart="50" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="floor0_8c_1af86752a9e4d65117f836719f6b4fdfad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void floor0_free_look</definition>
        <argsstring>(vorbis_look_floor *i)</argsstring>
        <name>floor0_free_look</name>
        <param>
          <type>vorbis_look_floor *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/floor0.c" line="58" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/floor0.c" bodystart="58" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="floor0_8c_1a61c98cc111ef0442f5760d7ce5270a9d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vorbis_info_floor *</type>
        <definition>static vorbis_info_floor* floor0_unpack</definition>
        <argsstring>(vorbis_info *vi, oggpack_buffer *opb)</argsstring>
        <name>floor0_unpack</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>opb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/floor0.c" line="74" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/floor0.c" bodystart="74" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="floor0_8c_1ac5ef1d65bd8ff92b975849e8266b0b9b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void floor0_map_lazy_init</definition>
        <argsstring>(vorbis_block *vb, vorbis_info_floor *infoX, vorbis_look_floor0 *look)</argsstring>
        <name>floor0_map_lazy_init</name>
        <param>
          <type><ref refid="structvorbis__block" kindref="compound">vorbis_block</ref> *</type>
          <declname>vb</declname>
        </param>
        <param>
          <type>vorbis_info_floor *</type>
          <declname>infoX</declname>
        </param>
        <param>
          <type><ref refid="structvorbis__look__floor0" kindref="compound">vorbis_look_floor0</ref> *</type>
          <declname>look</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/floor0.c" line="110" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/floor0.c" bodystart="110" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="floor0_8c_1a53001b032a213cdab6d397b92d90a4be" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vorbis_look_floor *</type>
        <definition>static vorbis_look_floor* floor0_look</definition>
        <argsstring>(vorbis_dsp_state *vd, vorbis_info_floor *i)</argsstring>
        <name>floor0_look</name>
        <param>
          <type><ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref> *</type>
          <declname>vd</declname>
        </param>
        <param>
          <type>vorbis_info_floor *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/floor0.c" line="144" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/floor0.c" bodystart="144" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="floor0_8c_1ad56474d59350c3960bc9a8bac099f53b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>static void* floor0_inverse1</definition>
        <argsstring>(vorbis_block *vb, vorbis_look_floor *i)</argsstring>
        <name>floor0_inverse1</name>
        <param>
          <type><ref refid="structvorbis__block" kindref="compound">vorbis_block</ref> *</type>
          <declname>vb</declname>
        </param>
        <param>
          <type>vorbis_look_floor *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/floor0.c" line="157" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/floor0.c" bodystart="157" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="floor0_8c_1a1efa6f2494b045f534c27c08047c6e0d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int floor0_inverse2</definition>
        <argsstring>(vorbis_block *vb, vorbis_look_floor *i, void *memo, float *out)</argsstring>
        <name>floor0_inverse2</name>
        <param>
          <type><ref refid="structvorbis__block" kindref="compound">vorbis_block</ref> *</type>
          <declname>vb</declname>
        </param>
        <param>
          <type>vorbis_look_floor *</type>
          <declname>i</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>memo</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/floor0.c" line="193" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/floor0.c" bodystart="193" bodyend="214"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>THIS<sp/>FILE<sp/>IS<sp/>PART<sp/>OF<sp/>THE<sp/>OggVorbis<sp/>SOFTWARE<sp/>CODEC<sp/>SOURCE<sp/>CODE.<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>USE,<sp/>DISTRIBUTION<sp/>AND<sp/>REPRODUCTION<sp/>OF<sp/>THIS<sp/>LIBRARY<sp/>SOURCE<sp/>IS<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>GOVERNED<sp/>BY<sp/>A<sp/>BSD-STYLE<sp/>SOURCE<sp/>LICENSE<sp/>INCLUDED<sp/>WITH<sp/>THIS<sp/>SOURCE<sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>IN<sp/>&apos;COPYING&apos;.<sp/>PLEASE<sp/>READ<sp/>THESE<sp/>TERMS<sp/>BEFORE<sp/>DISTRIBUTING.<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>THE<sp/>OggVorbis<sp/>SOURCE<sp/>CODE<sp/>IS<sp/>(C)<sp/>COPYRIGHT<sp/>1994-2002<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>by<sp/>the<sp/>XIPHOPHORUS<sp/>Company<sp/>http://www.xiph.org/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>********************************************************************</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>function:<sp/>floor<sp/>backend<sp/>0<sp/>implementation</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>last<sp/>mod:<sp/>$Id:<sp/>floor0.c,v<sp/>1.55<sp/>2003/09/05<sp/>23:17:49<sp/>giles<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../ogg/ogg.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../vorbis/codec.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;codec_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;registry.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lpc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lsp.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;codebook.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;scales.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;misc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;os.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;misc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="structvorbis__look__floor0" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ln;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>m;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**linearmap;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>n[2];</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info__floor0" kindref="compound">vorbis_info_floor0</ref><sp/>*vi;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>bits;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frames;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}<sp/><ref refid="structvorbis__look__floor0" kindref="compound">vorbis_look_floor0</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/***********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>floor0_free_info(vorbis_info_floor<sp/>*i){</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info__floor0" kindref="compound">vorbis_info_floor0</ref><sp/>*info=(<ref refid="structvorbis__info__floor0" kindref="compound">vorbis_info_floor0</ref><sp/>*)i;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(info){</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(info,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*info));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>_ogg_free(info);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>floor0_free_look(vorbis_look_floor<sp/>*i){</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__look__floor0" kindref="compound">vorbis_look_floor0</ref><sp/>*look=(<ref refid="structvorbis__look__floor0" kindref="compound">vorbis_look_floor0</ref><sp/>*)i;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(look){</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(look-&gt;linearmap){</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(look-&gt;linearmap[0])_ogg_free(look-&gt;linearmap[0]);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(look-&gt;linearmap[1])_ogg_free(look-&gt;linearmap[1]);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_ogg_free(look-&gt;linearmap);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(look,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*look));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>_ogg_free(look);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>vorbis_info_floor<sp/>*floor0_unpack<sp/>(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi,<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*opb){</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/><sp/><sp/><sp/><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info__floor0" kindref="compound">vorbis_info_floor0</ref><sp/>*info=_ogg_malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*info));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>info-&gt;order=oggpack_read(opb,8);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>info-&gt;rate=oggpack_read(opb,16);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>info-&gt;barkmap=oggpack_read(opb,16);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>info-&gt;ampbits=oggpack_read(opb,6);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>info-&gt;ampdB=oggpack_read(opb,8);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>info-&gt;numbooks=oggpack_read(opb,4)+1;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(info-&gt;order&lt;1)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(info-&gt;rate&lt;1)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(info-&gt;barkmap&lt;1)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(info-&gt;numbooks&lt;1)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;info-&gt;numbooks;j++){</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;books[j]=oggpack_read(opb,8);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(info-&gt;books[j]&lt;0<sp/>||<sp/>info-&gt;books[j]&gt;=ci-&gt;books)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(info);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/>err_out:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>floor0_free_info(info);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(NULL);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>initialize<sp/>Bark<sp/>scale<sp/>and<sp/>normalization<sp/>lookups.<sp/><sp/>We<sp/>could<sp/>do<sp/>this</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/>with<sp/>static<sp/>tables,<sp/>but<sp/>Vorbis<sp/>allows<sp/>a<sp/>number<sp/>of<sp/>possible</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/>combinations,<sp/>so<sp/>it&apos;s<sp/>best<sp/>to<sp/>do<sp/>it<sp/>computationally.</highlight></codeline>
<codeline lineno="105"><highlight class="comment"></highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/>The<sp/>below<sp/>is<sp/>authoritative<sp/>in<sp/>terms<sp/>of<sp/>defining<sp/>scale<sp/>mapping.</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/>Note<sp/>that<sp/>the<sp/>scale<sp/>depends<sp/>on<sp/>the<sp/>sampling<sp/>rate<sp/>as<sp/>well<sp/>as<sp/>the</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/>linear<sp/>block<sp/>and<sp/>mapping<sp/>sizes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>floor0_map_lazy_init(<ref refid="structvorbis__block" kindref="compound">vorbis_block</ref><sp/><sp/><sp/><sp/><sp/><sp/>*vb,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vorbis_info_floor<sp/>*infoX,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvorbis__look__floor0" kindref="compound">vorbis_look_floor0</ref><sp/>*look){</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!look-&gt;linearmap[vb-&gt;W]){</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref><sp/><sp/><sp/>*vd=vb-&gt;vd;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*vi=vd-&gt;vi;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/><sp/><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvorbis__info__floor0" kindref="compound">vorbis_info_floor0</ref><sp/>*info=(<ref refid="structvorbis__info__floor0" kindref="compound">vorbis_info_floor0</ref><sp/>*)infoX;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>W=vb-&gt;W;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n=ci-&gt;blocksizes[W]/2,j;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>choose<sp/>a<sp/>scaling<sp/>constant<sp/>so<sp/>that:</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>floor(bark(rate/2-1)*C)=mapped-1</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>floor(bark(rate/2)*C)=mapped<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale=look-&gt;ln/toBARK(info-&gt;rate/2.f);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>mapping<sp/>from<sp/>a<sp/>linear<sp/>scale<sp/>to<sp/>a<sp/>smaller<sp/>bark<sp/>scale<sp/>is</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>straightforward.<sp/><sp/>We<sp/>do<sp/>*not*<sp/>make<sp/>sure<sp/>that<sp/>the<sp/>linear<sp/>mapping</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>does<sp/>not<sp/>skip<sp/>bark-scale<sp/>bins;<sp/>the<sp/>decoder<sp/>simply<sp/>skips<sp/>them<sp/>and</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>encoder<sp/>may<sp/>do<sp/>what<sp/>it<sp/>wishes<sp/>in<sp/>filling<sp/>them.<sp/><sp/>They&apos;re</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>necessary<sp/>in<sp/>some<sp/>mapping<sp/>combinations<sp/>to<sp/>keep<sp/>the<sp/>scale<sp/>spacing</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accurate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>look-&gt;linearmap[W]=_ogg_malloc((n+1)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**look-&gt;linearmap));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;n;j++){</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val=floor(<sp/>toBARK((info-&gt;rate/2.f)/n*j)<sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*scale);<sp/></highlight><highlight class="comment">/*<sp/>bark<sp/>numbers<sp/>represent<sp/>band<sp/>edges<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(val&gt;=look-&gt;ln)val=look-&gt;ln-1;<sp/></highlight><highlight class="comment">/*<sp/>guard<sp/>against<sp/>the<sp/>approximation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>look-&gt;linearmap[W][j]=val;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>look-&gt;linearmap[W][j]=-1;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>look-&gt;n[W]=n;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>vorbis_look_floor<sp/>*floor0_look(<ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref><sp/>*vd,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vorbis_info_floor<sp/>*i){</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info__floor0" kindref="compound">vorbis_info_floor0</ref><sp/>*info=(<ref refid="structvorbis__info__floor0" kindref="compound">vorbis_info_floor0</ref><sp/>*)i;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__look__floor0" kindref="compound">vorbis_look_floor0</ref><sp/>*look=_ogg_calloc(1,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*look));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>look-&gt;m=info-&gt;order;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>look-&gt;ln=info-&gt;barkmap;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>look-&gt;vi=info;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>look-&gt;linearmap=_ogg_calloc(2,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*look-&gt;linearmap));</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>look;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*floor0_inverse1(<ref refid="structvorbis__block" kindref="compound">vorbis_block</ref><sp/>*vb,vorbis_look_floor<sp/>*i){</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__look__floor0" kindref="compound">vorbis_look_floor0</ref><sp/>*look=(<ref refid="structvorbis__look__floor0" kindref="compound">vorbis_look_floor0</ref><sp/>*)i;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info__floor0" kindref="compound">vorbis_info_floor0</ref><sp/>*info=look-&gt;vi;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,k;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ampraw=oggpack_read(&amp;vb-&gt;opb,info-&gt;ampbits);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ampraw&gt;0){<sp/></highlight><highlight class="comment">/*<sp/>also<sp/>handles<sp/>the<sp/>-1<sp/>out<sp/>of<sp/>data<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>maxval=(1&lt;&lt;info-&gt;ampbits)-1;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>amp=(float)ampraw/maxval*info-&gt;ampdB;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>booknum=oggpack_read(&amp;vb-&gt;opb,_ilog(info-&gt;numbooks));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(booknum!=-1<sp/>&amp;&amp;<sp/>booknum&lt;info-&gt;numbooks){<sp/></highlight><highlight class="comment">/*<sp/>be<sp/>paranoid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/><sp/>*ci=vb-&gt;vd-&gt;vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcodebook" kindref="compound">codebook</ref><sp/>*b=ci-&gt;fullbooks+info-&gt;books[booknum];</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>last=0.f;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>additional<sp/>b-&gt;dim<sp/>is<sp/>a<sp/>guard<sp/>against<sp/>any<sp/>possible<sp/>stack</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smash;<sp/>b-&gt;dim<sp/>is<sp/>provably<sp/>more<sp/>than<sp/>we<sp/>can<sp/>overflow<sp/>the</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*lsp=_vorbis_block_alloc(vb,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*lsp)*(look-&gt;m+b-&gt;dim+1));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;look-&gt;m;j+=b-&gt;dim)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vorbis_book_decodev_set(b,lsp+j,&amp;vb-&gt;opb,b-&gt;dim)==-1)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>eop;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;look-&gt;m;){</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;b-&gt;dim;k++,j++)lsp[j]+=last;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>last=lsp[j-1];</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lsp[look-&gt;m]=amp;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(lsp);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/>eop:</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(NULL);</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>floor0_inverse2(<ref refid="structvorbis__block" kindref="compound">vorbis_block</ref><sp/>*vb,vorbis_look_floor<sp/>*i,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*memo,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*out){</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__look__floor0" kindref="compound">vorbis_look_floor0</ref><sp/>*look=(<ref refid="structvorbis__look__floor0" kindref="compound">vorbis_look_floor0</ref><sp/>*)i;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info__floor0" kindref="compound">vorbis_info_floor0</ref><sp/>*info=look-&gt;vi;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>floor0_map_lazy_init(vb,info,look);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(memo){</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*lsp=(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)memo;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>amp=lsp[look-&gt;m];</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>take<sp/>the<sp/>coefficients<sp/>back<sp/>to<sp/>a<sp/>spectral<sp/>envelope<sp/>curve<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_lsp_to_curve(out,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>look-&gt;linearmap[vb-&gt;W],</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>look-&gt;n[vb-&gt;W],</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>look-&gt;ln,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsp,look-&gt;m,amp,(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)info-&gt;ampdB);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(1);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>memset(out,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*out)*look-&gt;n[vb-&gt;W]);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>export<sp/>hooks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><ref refid="structvorbis__func__floor" kindref="compound">vorbis_func_floor</ref><sp/>floor0_exportbundle={</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>NULL,&amp;floor0_unpack,&amp;floor0_look,&amp;floor0_free_info,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>&amp;floor0_free_look,&amp;floor0_inverse1,&amp;floor0_inverse2</highlight></codeline>
<codeline lineno="220"><highlight class="normal">};</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/floor0.c"/>
  </compounddef>
</doxygen>
