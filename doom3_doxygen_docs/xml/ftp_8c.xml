<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="ftp_8c" kind="file">
    <compoundname>ftp.c</compoundname>
    <includes refid="lib_2setup_8h" local="yes">setup.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">errno.h</includes>
    <includes refid="curl_8h" local="no">curl/curl.h</includes>
    <includes refid="urldata_8h" local="yes">urldata.h</includes>
    <includes refid="sendf_8h" local="yes">sendf.h</includes>
    <includes refid="if2ip_8h" local="yes">if2ip.h</includes>
    <includes refid="hostip_8h" local="yes">hostip.h</includes>
    <includes refid="progress_8h" local="yes">progress.h</includes>
    <includes refid="transfer_8h" local="yes">transfer.h</includes>
    <includes refid="escape_8h" local="yes">escape.h</includes>
    <includes refid="http_8h" local="yes">http.h</includes>
    <includes refid="ftp_8h" local="yes">ftp.h</includes>
    <includes refid="strtoofft_8h" local="yes">strtoofft.h</includes>
    <includes refid="strequal_8h" local="yes">strequal.h</includes>
    <includes refid="ssluse_8h" local="yes">ssluse.h</includes>
    <includes refid="connect_8h" local="yes">connect.h</includes>
    <includes refid="mprintf_8h" local="no">curl/mprintf.h</includes>
    <incdepgraph>
      <node id="277">
        <label>stdarg.h</label>
      </node>
      <node id="276">
        <label>stdlib.h</label>
      </node>
      <node id="279">
        <label>errno.h</label>
      </node>
      <node id="275">
        <label>string.h</label>
      </node>
      <node id="278">
        <label>ctype.h</label>
      </node>
      <node id="274">
        <label>stdio.h</label>
      </node>
      <node id="273">
        <label>E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c</label>
        <link refid="ftp.c"/>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
        <childnode refid="276" relation="include">
        </childnode>
        <childnode refid="277" relation="include">
        </childnode>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="ftp_8c_1ad0c1862ea86ace30c84408d669a3fc7e" prot="public" static="no">
        <name>_MPRINTF_REPLACE</name>
        <initializer>/* use our functions only */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" line="99" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftp_8c_1a9717d09f6bdd9d336146eb66c2fa6fba" prot="public" static="no">
        <name>FTPSENDF</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>if((result = Curl_ftpsendf(x,y,z))) return result</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" line="115" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ftp_8c_1a0c70d8c27777046bbfa2ab91b58aec9c" prot="public" static="no">
        <name>lastline</name>
        <param><defname>line</defname></param>
        <initializer>(isdigit((int)line[0]) &amp;&amp; isdigit((int)line[1]) &amp;&amp; \
			isdigit((int)line[2]) &amp;&amp; (&apos; &apos; == line[3]))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" line="363" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ftp_8c_1ab8ae7775c00222ca88867fd5766dc1f8" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* ftpauth[]</definition>
        <argsstring>[]</argsstring>
        <name>ftpauth</name>
        <initializer>= {
  &quot;SSL&quot;, &quot;TLS&quot;, NULL
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" line="433" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" bodystart="433" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ftp_8c_1a6921e52da9ee178d7b1a27b7cc7ed487" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>static CURLcode ftp_sendquote</definition>
        <argsstring>(struct connectdata *conn, struct curl_slist *quote)</argsstring>
        <name>ftp_sendquote</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>struct <ref refid="structcurl__slist" kindref="compound">curl_slist</ref> *</type>
          <declname>quote</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" line="108" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" bodystart="825" bodyend="851"/>
      </memberdef>
      <memberdef kind="function" id="ftp_8c_1ac6f685e86ed30c77f84c6b82a4b201d2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>static CURLcode ftp_cwd</definition>
        <argsstring>(struct connectdata *conn, char *path)</argsstring>
        <name>ftp_cwd</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" line="110" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" bodystart="2568" bodyend="2585"/>
      </memberdef>
      <memberdef kind="function" id="ftp_8c_1a26c7ceb96058ec8be88795fbad5f90a4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode ftp_mkd</definition>
        <argsstring>(struct connectdata *conn, char *path)</argsstring>
        <name>ftp_mkd</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" line="111" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" bodystart="2527" bodyend="2555"/>
      </memberdef>
      <memberdef kind="function" id="ftp_8c_1ade9497ce9c50a5975ad8bc253507a3f4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>static CURLcode ftp_cwd_and_mkd</definition>
        <argsstring>(struct connectdata *conn, char *path)</argsstring>
        <name>ftp_cwd_and_mkd</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" line="112" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" bodystart="2595" bodyend="2612"/>
      </memberdef>
      <memberdef kind="function" id="ftp_8c_1a76f1b66577e273793626c22e74e9bf58" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void freedirs</definition>
        <argsstring>(struct FTP *ftp)</argsstring>
        <name>freedirs</name>
        <param>
          <type>struct <ref refid="struct_f_t_p" kindref="compound">FTP</ref> *</type>
          <declname>ftp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" line="117" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" bodystart="117" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="ftp_8c_1aa1cd58afe16470b9e7362643aae21981" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>static CURLcode AllowServerConnect</definition>
        <argsstring>(struct connectdata *conn)</argsstring>
        <name>AllowServerConnect</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" line="135" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" bodystart="135" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="ftp_8c_1a159772d4d45e4bc1c4a616281a92c853" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode Curl_GetFTPResponse</definition>
        <argsstring>(int *nreadp, struct connectdata *conn, int *ftpcode)</argsstring>
        <name>Curl_GetFTPResponse</name>
        <param>
          <type>int *</type>
          <declname>nreadp</declname>
        </param>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ftpcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>BANG </para>        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" line="208" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" bodystart="208" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="ftp_8c_1a0b8f40efe53db280cd0ec368a5ce9378" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode Curl_ftp_connect</definition>
        <argsstring>(struct connectdata *conn)</argsstring>
        <name>Curl_ftp_connect</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" line="441" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" bodystart="441" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="ftp_8c_1ac7e3f7c9dc72dfec88fe265871345e8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode Curl_ftp_done</definition>
        <argsstring>(struct connectdata *conn)</argsstring>
        <name>Curl_ftp_done</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" line="720" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" bodystart="720" bodyend="814"/>
      </memberdef>
      <memberdef kind="function" id="ftp_8c_1aa120d293ecf495ab6bc25f41ea84315b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>static CURLcode ftp_getfiletime</definition>
        <argsstring>(struct connectdata *conn, char *file)</argsstring>
        <name>ftp_getfiletime</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" line="860" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" bodystart="860" bodyend="901"/>
      </memberdef>
      <memberdef kind="function" id="ftp_8c_1a8995eff6ce4e7530bcff18402050c961" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>static CURLcode ftp_transfertype</definition>
        <argsstring>(struct connectdata *conn, bool ascii)</argsstring>
        <name>ftp_transfertype</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ascii</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" line="910" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" bodystart="910" bodyend="931"/>
      </memberdef>
      <memberdef kind="function" id="ftp_8c_1a3ee7e18e5d0ea2ca8029c09e4ecd6b7f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>static CURLcode ftp_getsize</definition>
        <argsstring>(struct connectdata *conn, char *file, curl_off_t *size)</argsstring>
        <name>ftp_getsize</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>curl_off_t *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" line="941" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" bodystart="941" bodyend="963"/>
      </memberdef>
      <memberdef kind="function" id="ftp_8c_1a768346df53f50182278e4ae5aa835d6c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ftp_pasv_verbose</definition>
        <argsstring>(struct connectdata *conn, Curl_ipconnect *addr, char *newhost, int port)</argsstring>
        <name>ftp_pasv_verbose</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>Curl_ipconnect *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>newhost</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" line="975" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" bodystart="975" bodyend="1096"/>
      </memberdef>
      <memberdef kind="function" id="ftp_8c_1a8dfaee8506bf5a2dcd4f75a7adb0fcba" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>static CURLcode ftp_use_port</definition>
        <argsstring>(struct connectdata *conn)</argsstring>
        <name>ftp_use_port</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" line="1108" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" bodystart="1108" bodyend="1480"/>
      </memberdef>
      <memberdef kind="function" id="ftp_8c_1aab987744210432240f66099e5b279fe3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>static CURLcode ftp_use_pasv</definition>
        <argsstring>(struct connectdata *conn, bool *connected)</argsstring>
        <name>ftp_use_pasv</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>connected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" line="1492" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" bodystart="1492" bodyend="1679"/>
      </memberdef>
      <memberdef kind="function" id="ftp_8c_1a761981f607a446ff13d033fecbbe5a68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode Curl_ftp_nextconnect</definition>
        <argsstring>(struct connectdata *conn)</argsstring>
        <name>Curl_ftp_nextconnect</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" line="1688" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" bodystart="1688" bodyend="2120"/>
      </memberdef>
      <memberdef kind="function" id="ftp_8c_1a5f5ea0d638e62a5cdacb2e957be88dd9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>static CURLcode ftp_perform</definition>
        <argsstring>(struct connectdata *conn, bool *connected)</argsstring>
        <name>ftp_perform</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>connected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" line="2131" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" bodystart="2131" bodyend="2292"/>
      </memberdef>
      <memberdef kind="function" id="ftp_8c_1ae007fcdbf6f2ac2faa0f223e433c5c3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode Curl_ftp</definition>
        <argsstring>(struct connectdata *conn)</argsstring>
        <name>Curl_ftp</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" line="2306" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" bodystart="2306" bodyend="2405"/>
      </memberdef>
      <memberdef kind="function" id="ftp_8c_1adb4208411cb0fc9b81869403ffeb3fdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode Curl_ftpsendf</definition>
        <argsstring>(struct connectdata *conn, const char *fmt,...)</argsstring>
        <name>Curl_ftpsendf</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" line="2416" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" bodystart="2416" bodyend="2454"/>
      </memberdef>
      <memberdef kind="function" id="ftp_8c_1ab1e8e3ee2c65b1bc9a61f4879873e0f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode Curl_ftp_quit</definition>
        <argsstring>(struct connectdata *conn)</argsstring>
        <name>Curl_ftp_quit</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" line="2466" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" bodystart="2466" bodyend="2479"/>
      </memberdef>
      <memberdef kind="function" id="ftp_8c_1a2ff4aa3eaf0621155f623db527a24bc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode Curl_ftp_disconnect</definition>
        <argsstring>(struct connectdata *conn)</argsstring>
        <name>Curl_ftp_disconnect</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" line="2488" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c" bodystart="2488" bodyend="2517"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_<sp/><sp/><sp/>_<sp/>____<sp/><sp/>_<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>Project<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>___|<sp/>|<sp/>|<sp/>|<sp/><sp/>_<sp/>\|<sp/>|<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>__|<sp/>|<sp/>|<sp/>|<sp/>|_)<sp/>|<sp/>|<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(__|<sp/>|_|<sp/>|<sp/><sp/>_<sp/>&lt;|<sp/>|___<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\___|\___/|_|<sp/>\_\_____|</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1998<sp/>-<sp/>2004,<sp/>Daniel<sp/>Stenberg,<sp/>&lt;daniel@haxx.se&gt;,<sp/>et<sp/>al.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>is<sp/>licensed<sp/>as<sp/>described<sp/>in<sp/>the<sp/>file<sp/>COPYING,<sp/>which</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>you<sp/>should<sp/>have<sp/>received<sp/>as<sp/>part<sp/>of<sp/>this<sp/>distribution.<sp/>The<sp/>terms</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>are<sp/>also<sp/>available<sp/>at<sp/>http://curl.haxx.se/docs/copyright.html.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>opt<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>COPYING<sp/>file.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>basis,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>$Id:<sp/>ftp.c,v<sp/>1.240<sp/>2004/03/17<sp/>12:46:45<sp/>bagder<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;setup.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CURL_DISABLE_FTP</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNISTD_H</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SYS_SELECT_H</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/select.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(WIN32)<sp/>&amp;&amp;<sp/>!defined(__GNUC__)<sp/>||<sp/>defined(__MINGW32__)</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>some<sp/>kind<sp/>of<sp/>unix<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SYS_SOCKET_H</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/socket.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_NETINET_IN_H</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;netinet/in.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_ARPA_INET_H</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;arpa/inet.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/utsname.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_NETDB_H</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;netdb.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>VMS</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;in.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;inet.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(WIN32)<sp/>&amp;&amp;<sp/>defined(__GNUC__)<sp/>||<sp/>defined(__MINGW32__)</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(NETWARE)<sp/>&amp;&amp;<sp/>defined(__NOVELL_LIBC__))</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>in_addr_t</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>in_addr_t<sp/>unsigned<sp/>long</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;curl/curl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;urldata.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sendf.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;if2ip.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hostip.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;progress.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;transfer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;escape.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;http.h&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>HTTP<sp/>proxy<sp/>tunnel<sp/>stuff<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ftp.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_KRB4</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;security.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;krb4.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;strtoofft.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;strequal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ssluse.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;connect.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HAVE_INET_NTOA_R)<sp/>&amp;&amp;<sp/>!defined(HAVE_INET_NTOA_R_DECL)</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;inet_ntoa_r.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_MPRINTF_REPLACE<sp/></highlight><highlight class="comment">/*<sp/>use<sp/>our<sp/>functions<sp/>only<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;curl/mprintf.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>last<sp/>#include<sp/>file<sp/>should<sp/>be:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CURLDEBUG</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;memdebug.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Local<sp/>API<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CURLcode<sp/>ftp_sendquote(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcurl__slist" kindref="compound">curl_slist</ref><sp/>*quote);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CURLcode<sp/>ftp_cwd(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CURLcode<sp/>ftp_mkd(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CURLcode<sp/>ftp_cwd_and_mkd(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>easy-to-use<sp/>macro:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FTPSENDF(x,y,z)<sp/>if((result<sp/>=<sp/>Curl_ftpsendf(x,y,z)))<sp/>return<sp/>result</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freedirs(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_f_t_p" kindref="compound">FTP</ref><sp/>*ftp)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>ftp-&gt;dirs[i];<sp/>i++){</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>free(ftp-&gt;dirs[i]);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>ftp-&gt;dirs[i]=NULL;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/>AllowServerConnect()</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*<sp/>When<sp/>we&apos;ve<sp/>issue<sp/>the<sp/>PORT<sp/>command,<sp/>we<sp/>have<sp/>told<sp/>the<sp/>server<sp/>to<sp/>connect</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/>to<sp/>us.<sp/>This<sp/>function<sp/>will<sp/>sit<sp/>and<sp/>wait<sp/>here<sp/>until<sp/>the<sp/>server<sp/>has</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/>connected.</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CURLcode<sp/>AllowServerConnect(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn)</highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>fd_set<sp/>rdset;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtimeval" kindref="compound">timeval</ref><sp/>dt;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data<sp/>=<sp/>conn-&gt;data;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>curl_socket_t<sp/>sock<sp/>=<sp/>conn-&gt;sock[SECONDARYSOCKET];</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtimeval" kindref="compound">timeval</ref><sp/>now<sp/>=<sp/>Curl_tvnow();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>timespent<sp/>=<sp/>Curl_tvdiff(Curl_tvnow(),<sp/>now)/1000;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>timeout<sp/>=<sp/>data-&gt;set.connecttimeout?data-&gt;set.connecttimeout:</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>(data-&gt;set.timeout?data-&gt;set.timeout:<sp/>0);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>FD_ZERO(&amp;rdset);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>FD_SET(sock,<sp/>&amp;rdset);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(timeout)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>timeout<sp/>-=<sp/>timespent;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(timeout&lt;=0)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;Timed<sp/>out<sp/>before<sp/>server<sp/>could<sp/>connect<sp/>to<sp/>us&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OPERATION_TIMEDOUT;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>give<sp/>the<sp/>server<sp/>60<sp/>seconds<sp/>to<sp/>connect<sp/>to<sp/>us,<sp/>or<sp/>a<sp/>custom<sp/>timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>dt.tv_sec<sp/>=<sp/>(int)(timeout?timeout:60);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>dt.tv_usec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(select(sock+1,<sp/>&amp;rdset,<sp/>NULL,<sp/>NULL,<sp/>&amp;dt))<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-1:<sp/></highlight><highlight class="comment">/*<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>let&apos;s<sp/>die<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>while<sp/>waiting<sp/>for<sp/>server<sp/>connect&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_PORT_FAILED;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/><sp/></highlight><highlight class="comment">/*<sp/>timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>let&apos;s<sp/>die<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;Timeout<sp/>while<sp/>waiting<sp/>for<sp/>server<sp/>connect&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_PORT_FAILED;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>have<sp/>received<sp/>data<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>curl_socket_t<sp/>s;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>add;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getsockname(sock,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)<sp/>&amp;add,<sp/>(socklen_t<sp/>*)&amp;size);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s=accept(sock,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)<sp/>&amp;add,<sp/>(socklen_t<sp/>*)&amp;size);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sclose(sock);<sp/></highlight><highlight class="comment">/*<sp/>close<sp/>the<sp/>first<sp/>socket<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CURL_SOCKET_BAD<sp/>==<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DIE!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>accept()ing<sp/>server<sp/>connect&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_PORT_FAILED;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;Connection<sp/>accepted<sp/>from<sp/>server\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;sock[SECONDARYSOCKET]<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Curl_nonblock(s,<sp/>TRUE);<sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>non-blocking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---<sp/>parse<sp/>FTP<sp/>server<sp/>responses<sp/>---<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*<sp/>Curl_GetFTPResponse()<sp/>is<sp/>supposed<sp/>to<sp/>be<sp/>invoked<sp/>after<sp/>each<sp/>command<sp/>sent<sp/>to</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/>a<sp/>remote<sp/>FTP<sp/>server.<sp/>This<sp/>function<sp/>will<sp/>wait<sp/>and<sp/>read<sp/>all<sp/>lines<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*<sp/>response<sp/>and<sp/>extract<sp/>the<sp/>relevant<sp/>return<sp/>code<sp/>for<sp/>the<sp/>invoking<sp/>function.</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal">CURLcode<sp/>Curl_GetFTPResponse(ssize_t<sp/>*nreadp,<sp/></highlight><highlight class="comment">/*<sp/>return<sp/>number<sp/>of<sp/>bytes<sp/>read<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ftpcode)<sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>ftp-code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Brand<sp/>new<sp/>implementation.</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/>*<sp/>We<sp/>cannot<sp/>read<sp/>just<sp/>one<sp/>byte<sp/>per<sp/>read()<sp/>and<sp/>then<sp/>go<sp/>back<sp/>to<sp/>select()</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/>*<sp/>as<sp/>it<sp/>seems<sp/>that<sp/>the<sp/>OpenSSL<sp/>read()<sp/>stuff<sp/>doesn&apos;t<sp/>grok<sp/>that<sp/>properly.</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Alas,<sp/>read<sp/>as<sp/>much<sp/>as<sp/>possible,<sp/>split<sp/>up<sp/>into<sp/>lines,<sp/>use<sp/>the<sp/>ending</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/>*<sp/>line<sp/>in<sp/>a<sp/>response<sp/>or<sp/>continue<sp/>reading.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>curl_socket_t<sp/>sockfd<sp/>=<sp/>conn-&gt;sock[FIRSTSOCKET];</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>perline;<sp/></highlight><highlight class="comment">/*<sp/>count<sp/>bytes<sp/>per<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keepon=TRUE;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>ssize_t<sp/>gotbytes;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>timeout;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>timeout<sp/>in<sp/>seconds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtimeval" kindref="compound">timeval</ref><sp/>interval;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>fd_set<sp/>rkeepfd;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>fd_set<sp/>readfd;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data<sp/>=<sp/>conn-&gt;data;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*line_start;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code=0;<sp/></highlight><highlight class="comment">/*<sp/>default<sp/>ftp<sp/>&quot;error<sp/>code&quot;<sp/>to<sp/>return<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf<sp/>=<sp/>data-&gt;state.buffer;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>CURLcode<sp/>result<sp/>=<sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_f_t_p" kindref="compound">FTP</ref><sp/>*ftp<sp/>=<sp/>conn-&gt;proto.ftp;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtimeval" kindref="compound">timeval</ref><sp/>now<sp/>=<sp/>Curl_tvnow();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ftpcode)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>*ftpcode<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>0<sp/>for<sp/>errors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>FD_ZERO<sp/>(&amp;readfd);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>FD_SET<sp/>(sockfd,<sp/>&amp;readfd);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>socket<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>this<sp/>in<sp/>a<sp/>backup<sp/>variable<sp/>to<sp/>be<sp/>able<sp/>to<sp/>restore<sp/>it<sp/>on<sp/>each<sp/>lap<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>select()<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>rkeepfd<sp/>=<sp/>readfd;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>ptr=buf;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>line_start<sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>*nreadp=0;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>perline=0;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>keepon=TRUE;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((*nreadp&lt;BUFSIZE)<sp/>&amp;&amp;<sp/>(keepon<sp/>&amp;&amp;<sp/>!result))<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>and<sp/>reset<sp/>timeout<sp/>value<sp/>every<sp/>lap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.ftp_response_timeout<sp/>)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>CURLOPT_FTP_RESPONSE_TIMEOUT<sp/>is<sp/>set,<sp/>use<sp/>that<sp/>to<sp/>determine</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remaining<sp/>time.<sp/><sp/>Also,<sp/>use<sp/>&quot;now&quot;<sp/>as<sp/>opposed<sp/>to<sp/>&quot;conn-&gt;now&quot;</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>because<sp/>ftp_response_timeout<sp/>is<sp/>only<sp/>supposed<sp/>to<sp/>govern</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>response<sp/>for<sp/>any<sp/>given<sp/>ftp<sp/>response,<sp/>not<sp/>for<sp/>the<sp/>time</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>connect<sp/>to<sp/>the<sp/>given<sp/>ftp<sp/>response.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/>data-&gt;set.ftp_response_timeout<sp/>-<sp/></highlight><highlight class="comment">/*<sp/>timeout<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Curl_tvdiff(Curl_tvnow(),<sp/>now)/1000;<sp/></highlight><highlight class="comment">/*<sp/>spent<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.timeout)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>timeout<sp/>is<sp/>requested,<sp/>find<sp/>out<sp/>how<sp/>much<sp/>remaining<sp/>time<sp/>we<sp/>have<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/>data-&gt;set.timeout<sp/>-<sp/></highlight><highlight class="comment">/*<sp/>timeout<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Curl_tvdiff(Curl_tvnow(),<sp/>conn-&gt;now)/1000;<sp/></highlight><highlight class="comment">/*<sp/>spent<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Even<sp/>without<sp/>a<sp/>requested<sp/>timeout,<sp/>we<sp/>only<sp/>wait<sp/>response_time</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seconds<sp/>for<sp/>the<sp/>full<sp/>response<sp/>to<sp/>arrive<sp/>before<sp/>we<sp/>bail<sp/>out<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/>ftp-&gt;response_time<sp/>-</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Curl_tvdiff(Curl_tvnow(),<sp/>now)/1000;<sp/></highlight><highlight class="comment">/*<sp/>spent<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(timeout<sp/>&lt;=0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;FTP<sp/>response<sp/>timeout&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OPERATION_TIMEDOUT;<sp/></highlight><highlight class="comment">/*<sp/>already<sp/>too<sp/>little<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ftp-&gt;cache)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readfd<sp/>=<sp/>rkeepfd;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>every<sp/>lap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>interval.tv_sec<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>use<sp/>1<sp/>second<sp/>timeout<sp/>intervals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>interval.tv_usec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(select<sp/>(sockfd+1,<sp/>&amp;readfd,<sp/>NULL,<sp/>NULL,<sp/>&amp;interval))<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-1:<sp/></highlight><highlight class="comment">/*<sp/>select()<sp/>error,<sp/>stop<sp/>reading<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>CURLE_RECV_ERROR;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;FTP<sp/>response<sp/>aborted<sp/>due<sp/>to<sp/>select()<sp/>error:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>errno);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/></highlight><highlight class="comment">/*<sp/>timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Curl_pgrsUpdate(conn))</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_ABORTED_BY_CALLBACK;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>just<sp/>continue<sp/>in<sp/>our<sp/>loop<sp/>for<sp/>the<sp/>timeout<sp/>duration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CURLE_OK<sp/>==<sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>code<sp/>previously<sp/>didn&apos;t<sp/>use<sp/>the<sp/>kerberos<sp/>sec_read()<sp/>code</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>read,<sp/>but<sp/>when<sp/>we<sp/>use<sp/>Curl_read()<sp/>it<sp/>may<sp/>do<sp/>so.<sp/>Do<sp/>confirm</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>that<sp/>this<sp/>is<sp/>still<sp/>ok<sp/>and<sp/>then<sp/>remove<sp/>this<sp/>comment!</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ftp-&gt;cache)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>had<sp/>data<sp/>in<sp/>the<sp/>&quot;cache&quot;,<sp/>copy<sp/>that<sp/>instead<sp/>of<sp/>doing<sp/>an<sp/>actual</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>read</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Dave<sp/>Meyer,<sp/>December<sp/>2003:</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>ftp-&gt;cache_size<sp/>is<sp/>cast<sp/>to<sp/>int<sp/>here.<sp/><sp/>This<sp/>should<sp/>be<sp/>safe,</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>because<sp/>it<sp/>would<sp/>have<sp/>been<sp/>populated<sp/>with<sp/>something<sp/>of<sp/>size</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>int<sp/>to<sp/>begin<sp/>with,<sp/>even<sp/>though<sp/>its<sp/>datatype<sp/>may<sp/>be<sp/>larger</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>than<sp/>an<sp/>int.</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(ptr,<sp/>ftp-&gt;cache,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ftp-&gt;cache_size);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gotbytes<sp/>=<sp/>(int)ftp-&gt;cache_size;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(ftp-&gt;cache);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>the<sp/>cache<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ftp-&gt;cache<sp/>=<sp/>NULL;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>the<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ftp-&gt;cache_size<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>zero<sp/>the<sp/>size<sp/>just<sp/>in<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>Curl_read(conn,<sp/>sockfd,<sp/>ptr,<sp/>BUFSIZE-*nreadp,<sp/>&amp;gotbytes);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(res<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>EWOULDBLOCK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>go<sp/>looping<sp/>again<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CURLE_OK<sp/>!=<sp/>res)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keepon<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!keepon)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(gotbytes<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keepon<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>CURLE_RECV_ERROR;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;FTP<sp/>response<sp/>reading<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>got<sp/>a<sp/>whole<sp/>chunk<sp/>of<sp/>data,<sp/>which<sp/>can<sp/>be<sp/>anything<sp/>from<sp/>one</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>byte<sp/>to<sp/>a<sp/>set<sp/>of<sp/>lines<sp/>and<sp/>possible<sp/>just<sp/>a<sp/>piece<sp/>of<sp/>the<sp/>last</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*nreadp<sp/>+=<sp/>gotbytes;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>gotbytes;<sp/>ptr++,<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perline++;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*ptr==</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>a<sp/>newline<sp/>is<sp/>CRLF<sp/>in<sp/>ftp-talk,<sp/>so<sp/>the<sp/>CR<sp/>is<sp/>ignored<sp/>as</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>line<sp/>isn&apos;t<sp/>really<sp/>terminated<sp/>until<sp/>the<sp/>LF<sp/>comes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>output<sp/>debug<sp/>output<sp/>if<sp/>that<sp/>is<sp/>requested<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.verbose)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Curl_debug(data,<sp/>CURLINFO_HEADER_IN,<sp/>line_start,<sp/>perline);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>We<sp/>pass<sp/>all<sp/>response-lines<sp/>to<sp/>the<sp/>callback<sp/>function<sp/>registered</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>for<sp/>&quot;headers&quot;.<sp/>The<sp/>response<sp/>lines<sp/>can<sp/>be<sp/>seen<sp/>as<sp/>a<sp/>kind<sp/>of</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>headers.</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_client_write(data,<sp/>CLIENTWRITE_HEADER,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_start,<sp/>perline);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>lastline(line)<sp/>(isdigit((int)line[0])<sp/>&amp;&amp;<sp/>isdigit((int)line[1])<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="364"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isdigit((int)line[2])<sp/>&amp;&amp;<sp/>(&apos;<sp/>&apos;<sp/>==<sp/>line[3]))</highlight></codeline>
<codeline lineno="365"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(perline&gt;3<sp/>&amp;&amp;<sp/>lastline(line_start))<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>the<sp/>end<sp/>of<sp/>the<sp/>last<sp/>line,<sp/>copy<sp/>the<sp/>last</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>line<sp/>to<sp/>the<sp/>start<sp/>of<sp/>the<sp/>buffer<sp/>and<sp/>zero<sp/>terminate,</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>for<sp/>old<sp/>times<sp/>sake<sp/>(and<sp/>krb4)!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*meow;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(meow=line_start,<sp/>n=0;<sp/>meow&lt;ptr;<sp/>meow++,<sp/>n++)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[n]<sp/>=<sp/>*meow;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*meow=0;<sp/></highlight><highlight class="comment">/*<sp/>zero<sp/>terminate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keepon=FALSE;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_start<sp/>=<sp/>ptr+1;<sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;<sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>this<sp/>before<sp/>getting<sp/>out<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perline=0;<sp/></highlight><highlight class="comment">/*<sp/>line<sp/>starts<sp/>over<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_start<sp/>=<sp/>ptr+1;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!keepon<sp/>&amp;&amp;<sp/>(i<sp/>!=<sp/>gotbytes))<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>found<sp/>the<sp/>end<sp/>of<sp/>the<sp/>response<sp/>lines,<sp/>but<sp/>we<sp/>didn&apos;t<sp/>parse<sp/>the</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>full<sp/>chunk<sp/>of<sp/>data<sp/>we<sp/>have<sp/>read<sp/>from<sp/>the<sp/>server.<sp/>We<sp/>therefore</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>need<sp/>to<sp/>store<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>data<sp/>to<sp/>be<sp/>checked<sp/>on<sp/>the<sp/>next</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invoke<sp/>as<sp/>it<sp/>may<sp/>actually<sp/>contain<sp/>another<sp/>end<sp/>of<sp/>response</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>already!<sp/><sp/>Cleverly<sp/>figured<sp/>out<sp/>by<sp/>Eric<sp/>Lavigne<sp/>in<sp/>December</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2001.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ftp-&gt;cache_size<sp/>=<sp/>gotbytes<sp/>-<sp/>i;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ftp-&gt;cache<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)malloc((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ftp-&gt;cache_size);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ftp-&gt;cache)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(ftp-&gt;cache,<sp/>line_start,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ftp-&gt;cache_size);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OUT_OF_MEMORY;<sp/></highlight><highlight class="comment">/**BANG**/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>there<sp/>was<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>if(no<sp/>error)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>while<sp/>there&apos;s<sp/>buffer<sp/>left<sp/>and<sp/>loop<sp/>is<sp/>requested<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!result)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>code<sp/>=<sp/>atoi(buf);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_KRB4</highlight></codeline>
<codeline lineno="406"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>handle<sp/>the<sp/>security-oriented<sp/>responses<sp/>6xx<sp/>***/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>some<sp/>errorchecking<sp/>perhaps...<sp/>***/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(code)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>631:</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>Curl_sec_read_msg(conn,<sp/>buf,<sp/>prot_safe);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>632:</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>Curl_sec_read_msg(conn,<sp/>buf,<sp/>prot_private);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>633:</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>Curl_sec_read_msg(conn,<sp/>buf,<sp/>prot_confidential);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>normal<sp/>ftp<sp/>stuff<sp/>we<sp/>pass<sp/>through!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="423"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ftpcode)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>*ftpcode=code;<sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>initial<sp/>number<sp/>like<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>store<sp/>the<sp/>latest<sp/>code<sp/>for<sp/>later<sp/>retrieval<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>conn-&gt;data-&gt;info.httpcode=code;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ftpauth[]=<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;SSL&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;TLS&quot;</highlight><highlight class="normal">,<sp/>NULL</highlight></codeline>
<codeline lineno="435"><highlight class="normal">};</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/>*<sp/>Curl_ftp_connect()<sp/>should<sp/>do<sp/>everything<sp/>that<sp/>is<sp/>to<sp/>be<sp/>considered<sp/>a<sp/>part<sp/>of</highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/>*<sp/>the<sp/>connection<sp/>phase.</highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal">CURLcode<sp/>Curl_ftp_connect(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn)</highlight></codeline>
<codeline lineno="442"><highlight class="normal">{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>FTP<sp/>and<sp/>no<sp/>proxy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>ssize_t<sp/>nread;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data=conn-&gt;data;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf<sp/>=<sp/>data-&gt;state.buffer;<sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>our<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_f_t_p" kindref="compound">FTP</ref><sp/>*ftp;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>CURLcode<sp/>result;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ftpcode,<sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>ftp<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_f_t_p" kindref="compound">FTP</ref><sp/>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_f_t_p" kindref="compound">FTP</ref>));</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ftp)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OUT_OF_MEMORY;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>memset(ftp,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_f_t_p" kindref="compound">FTP</ref>));</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>conn-&gt;proto.ftp<sp/>=<sp/>ftp;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>always<sp/>support<sp/>persistant<sp/>connections<sp/>on<sp/>ftp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>conn-&gt;bits.close<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>some<sp/>initial<sp/>data<sp/>into<sp/>the<sp/>ftp<sp/>struct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>ftp-&gt;bytecountp<sp/>=<sp/>&amp;conn-&gt;bytecount;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>need<sp/>to<sp/>duplicate<sp/>them,<sp/>this<sp/>connectdata<sp/>struct<sp/>won&apos;t<sp/>change<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>ftp-&gt;user<sp/>=<sp/>conn-&gt;user;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>ftp-&gt;passwd<sp/>=<sp/>conn-&gt;passwd;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>ftp-&gt;response_time<sp/>=<sp/>3600;<sp/></highlight><highlight class="comment">/*<sp/>set<sp/>default<sp/>response<sp/>time-out<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data-&gt;set.tunnel_thru_httpproxy)<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>want<sp/>&quot;seamless&quot;<sp/>FTP<sp/>operations<sp/>through<sp/>HTTP<sp/>proxy<sp/>tunnel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_ConnectHTTPProxyTunnel(conn,<sp/>FIRSTSOCKET,</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;hostname,<sp/>conn-&gt;remote_port);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CURLE_OK<sp/>!=<sp/>result)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;protocol<sp/>&amp;<sp/>PROT_FTPS)<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FTPS<sp/>is<sp/>simply<sp/>ftp<sp/>with<sp/>SSL<sp/>for<sp/>the<sp/>control<sp/>channel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now,<sp/>perform<sp/>the<sp/>SSL<sp/>initialization<sp/>for<sp/>this<sp/>socket<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_SSLConnect(conn,<sp/>FIRSTSOCKET);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>first<sp/>thing<sp/>we<sp/>do<sp/>is<sp/>wait<sp/>for<sp/>the<sp/>&quot;220*&quot;<sp/>line:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>Curl_GetFTPResponse(&amp;nread,<sp/>conn,<sp/>&amp;ftpcode);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ftpcode<sp/>!=<sp/>220)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>doesn&apos;t<sp/>seem<sp/>like<sp/>a<sp/>nice<sp/>ftp-server<sp/>response&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_WEIRD_SERVER_REPLY;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_KRB4</highlight></codeline>
<codeline lineno="496"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>not<sp/>anonymous<sp/>login,<sp/>try<sp/>a<sp/>secure<sp/>login<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.krb4)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>request<sp/>data<sp/>protection<sp/>level<sp/>(default<sp/>is<sp/>&apos;clear&apos;)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>Curl_sec_request_prot(conn,<sp/></highlight><highlight class="stringliteral">&quot;private&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>set<sp/>private<sp/>first<sp/>as<sp/>default,<sp/>in<sp/>case<sp/>the<sp/>line<sp/>below<sp/>fails<sp/>to</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set<sp/>a<sp/>valid<sp/>level<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>Curl_sec_request_prot(conn,<sp/>data-&gt;set.krb4_level);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Curl_sec_login(conn)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;Logging<sp/>in<sp/>with<sp/>password<sp/>in<sp/>cleartext!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;Authentication<sp/>successful\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="512"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.ftp_ssl<sp/>&amp;&amp;<sp/>!conn-&gt;ssl[FIRSTSOCKET].use)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>don&apos;t<sp/>have<sp/>a<sp/>SSL/TLS<sp/>connection,<sp/>try<sp/>a<sp/>FTPS<sp/>connection<sp/>now<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>=<sp/>0;<sp/>ftpauth[</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">];<sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">++)<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FTPSENDF(conn,<sp/></highlight><highlight class="stringliteral">&quot;AUTH<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>ftpauth[</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_GetFTPResponse(&amp;nread,<sp/>conn,<sp/>&amp;ftpcode);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>RFC2228<sp/>(page<sp/>5)<sp/>says:</highlight></codeline>
<codeline lineno="526"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>the<sp/>server<sp/>is<sp/>willing<sp/>to<sp/>accept<sp/>the<sp/>named<sp/>security<sp/>mechanism,<sp/>and</highlight></codeline>
<codeline lineno="528"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>does<sp/>not<sp/>require<sp/>any<sp/>security<sp/>data,<sp/>it<sp/>must<sp/>respond<sp/>with<sp/>reply<sp/>code</highlight></codeline>
<codeline lineno="529"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>234/334.</highlight></codeline>
<codeline lineno="530"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((ftpcode<sp/>==<sp/>234)<sp/>||<sp/>(ftpcode<sp/>==<sp/>334))<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_SSLConnect(conn,<sp/>FIRSTSOCKET);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;protocol<sp/>|=<sp/>PROT_FTPS;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;ssl[SECONDARYSOCKET].use<sp/>=<sp/>FALSE;<sp/></highlight><highlight class="comment">/*<sp/>clear-text<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>send<sp/>USER<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>FTPSENDF(conn,<sp/></highlight><highlight class="stringliteral">&quot;USER<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>ftp-&gt;user?ftp-&gt;user:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>wait<sp/>for<sp/>feedback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>Curl_GetFTPResponse(&amp;nread,<sp/>conn,<sp/>&amp;ftpcode);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ftpcode<sp/>==<sp/>530)<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>530<sp/>User<sp/>...<sp/>access<sp/>denied</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(the<sp/>server<sp/>denies<sp/>to<sp/>log<sp/>the<sp/>specified<sp/>user)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;Access<sp/>denied:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>&amp;buf[4]);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_ACCESS_DENIED;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ftpcode<sp/>==<sp/>331)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>331<sp/>Password<sp/>required<sp/>for<sp/>...</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(the<sp/>server<sp/>requires<sp/>to<sp/>send<sp/>the<sp/>user&apos;s<sp/>password<sp/>too)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>FTPSENDF(conn,<sp/></highlight><highlight class="stringliteral">&quot;PASS<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>ftp-&gt;passwd?ftp-&gt;passwd:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_GetFTPResponse(&amp;nread,<sp/>conn,<sp/>&amp;ftpcode);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ftpcode<sp/>==<sp/>530)<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>530<sp/>Login<sp/>incorrect.</highlight></codeline>
<codeline lineno="567"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(the<sp/>username<sp/>and/or<sp/>the<sp/>password<sp/>are<sp/>incorrect)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;the<sp/>username<sp/>and/or<sp/>the<sp/>password<sp/>are<sp/>incorrect&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_USER_PASSWORD_INCORRECT;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ftpcode<sp/>==<sp/>230)<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>230<sp/>User<sp/>...<sp/>logged<sp/>in.</highlight></codeline>
<codeline lineno="573"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(user<sp/>successfully<sp/>logged<sp/>in)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;We<sp/>have<sp/>successfully<sp/>logged<sp/>in\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;Odd<sp/>return<sp/>code<sp/>after<sp/>PASS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_WEIRD_PASS_REPLY;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(buf[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;2&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>230<sp/>User<sp/>...<sp/>logged<sp/>in.</highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(the<sp/>user<sp/>logged<sp/>in<sp/>without<sp/>password)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;We<sp/>have<sp/>successfully<sp/>logged<sp/>in\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(conn-&gt;ssl[FIRSTSOCKET].use)<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_KRB4</highlight></codeline>
<codeline lineno="588"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>are<sp/>logged<sp/>in<sp/>(with<sp/>Kerberos)</highlight></codeline>
<codeline lineno="589"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>now<sp/>set<sp/>the<sp/>requested<sp/>protection<sp/>level</highlight></codeline>
<codeline lineno="590"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;sec_complete)</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Curl_sec_set_protection_level(conn);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>may<sp/>need<sp/>to<sp/>issue<sp/>a<sp/>KAUTH<sp/>here<sp/>to<sp/>have<sp/>access<sp/>to<sp/>the<sp/>files</highlight></codeline>
<codeline lineno="595"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>do<sp/>it<sp/>if<sp/>user<sp/>supplied<sp/>a<sp/>password</highlight></codeline>
<codeline lineno="596"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;passwd<sp/>&amp;&amp;<sp/>*conn-&gt;passwd)<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_krb_kauth(conn);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="603"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;Odd<sp/>return<sp/>code<sp/>after<sp/>USER&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_WEIRD_USER_REPLY;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;ssl[FIRSTSOCKET].use)<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PBSZ<sp/>=<sp/>PROTECTION<sp/>BUFFER<sp/>SIZE.</highlight></codeline>
<codeline lineno="612"><highlight class="comment"></highlight></codeline>
<codeline lineno="613"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>&apos;draft-murray-auth-ftp-ssl&apos;<sp/>(draft<sp/>12,<sp/>page<sp/>7)<sp/>says:</highlight></codeline>
<codeline lineno="614"><highlight class="comment"></highlight></codeline>
<codeline lineno="615"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Specifically,<sp/>the<sp/>PROT<sp/>command<sp/>MUST<sp/>be<sp/>preceded<sp/>by<sp/>a<sp/>PBSZ<sp/>command</highlight></codeline>
<codeline lineno="616"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>a<sp/>PBSZ<sp/>command<sp/>MUST<sp/>be<sp/>preceded<sp/>by<sp/>a<sp/>successful<sp/>security<sp/>data</highlight></codeline>
<codeline lineno="617"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exchange<sp/>(the<sp/>TLS<sp/>negotiation<sp/>in<sp/>this<sp/>case)</highlight></codeline>
<codeline lineno="618"><highlight class="comment"></highlight></codeline>
<codeline lineno="619"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...<sp/>(and<sp/>on<sp/>page<sp/>8):</highlight></codeline>
<codeline lineno="620"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="621"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Thus<sp/>the<sp/>PBSZ<sp/>command<sp/>must<sp/>still<sp/>be<sp/>issued,<sp/>but<sp/>must<sp/>have<sp/>a<sp/>parameter</highlight></codeline>
<codeline lineno="622"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>&apos;0&apos;<sp/>to<sp/>indicate<sp/>that<sp/>no<sp/>buffering<sp/>is<sp/>taking<sp/>place<sp/>and<sp/>the<sp/>data</highlight></codeline>
<codeline lineno="623"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connection<sp/>should<sp/>not<sp/>be<sp/>encapsulated.</highlight></codeline>
<codeline lineno="624"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>FTPSENDF(conn,<sp/></highlight><highlight class="stringliteral">&quot;PBSZ<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_GetFTPResponse(&amp;nread,<sp/>conn,<sp/>&amp;ftpcode);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>TLS,<sp/>the<sp/>data<sp/>connection<sp/>can<sp/>have<sp/>one<sp/>of<sp/>two<sp/>security<sp/>levels.</highlight></codeline>
<codeline lineno="631"><highlight class="comment"></highlight></codeline>
<codeline lineno="632"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1)Clear<sp/>(requested<sp/>by<sp/>&apos;PROT<sp/>C&apos;)</highlight></codeline>
<codeline lineno="633"><highlight class="comment"></highlight></codeline>
<codeline lineno="634"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2)Private<sp/>(requested<sp/>by<sp/>&apos;PROT<sp/>P&apos;)</highlight></codeline>
<codeline lineno="635"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!conn-&gt;ssl[SECONDARYSOCKET].use)<sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FTPSENDF(conn,<sp/></highlight><highlight class="stringliteral">&quot;PROT<sp/>%c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;P&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_GetFTPResponse(&amp;nread,<sp/>conn,<sp/>&amp;ftpcode);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ftpcode<sp/>==<sp/>200)</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>have<sp/>enabled<sp/>SSL<sp/>for<sp/>the<sp/>data<sp/>connection!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;ssl[SECONDARYSOCKET].use<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FTP<sp/>servers<sp/>typically<sp/>responds<sp/>with<sp/>500<sp/>if<sp/>they<sp/>decide<sp/>to<sp/>reject</highlight></codeline>
<codeline lineno="647"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>our<sp/>&apos;P&apos;<sp/>request<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>send<sp/>PWD<sp/>to<sp/>discover<sp/>our<sp/>entry<sp/>point<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/>FTPSENDF(conn,<sp/></highlight><highlight class="stringliteral">&quot;PWD&quot;</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>wait<sp/>for<sp/>feedback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>Curl_GetFTPResponse(&amp;nread,<sp/>conn,<sp/>&amp;ftpcode);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ftpcode<sp/>==<sp/>257)<sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dir<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)malloc(nread+1);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*store=dir;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr=&amp;buf[4];<sp/></highlight><highlight class="comment">/*<sp/>start<sp/>on<sp/>the<sp/>first<sp/>letter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!dir)</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OUT_OF_MEMORY;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reply<sp/>format<sp/>is<sp/>like</highlight></codeline>
<codeline lineno="668"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>257&lt;space&gt;&quot;&lt;directory-name&gt;&quot;&lt;space&gt;&lt;commentary&gt;<sp/>and<sp/>the<sp/>RFC959<sp/>says</highlight></codeline>
<codeline lineno="669"><highlight class="comment"></highlight></codeline>
<codeline lineno="670"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>directory<sp/>name<sp/>can<sp/>contain<sp/>any<sp/>character;<sp/>embedded<sp/>double-quotes</highlight></codeline>
<codeline lineno="671"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should<sp/>be<sp/>escaped<sp/>by<sp/>double-quotes<sp/>(the<sp/>&quot;quote-doubling&quot;<sp/>convention).</highlight></codeline>
<codeline lineno="672"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal"><sp/>==<sp/>*ptr)<sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>it<sp/>started<sp/>good<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(ptr<sp/>&amp;&amp;<sp/>*ptr)<sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal"><sp/>==<sp/>*ptr)<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal"><sp/>==<sp/>ptr[1])<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;quote-doubling&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*store<sp/>=<sp/>ptr[1];</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>path<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*store<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>zero<sp/>terminate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>out<sp/>of<sp/>this<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*store<sp/>=<sp/>*ptr;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>store++;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ftp-&gt;entrypath<sp/>=dir;<sp/></highlight><highlight class="comment">/*<sp/>remember<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;Entry<sp/>path<sp/>is<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>ftp-&gt;entrypath);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>couldn&apos;t<sp/>get<sp/>the<sp/>path<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(dir);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>figure<sp/>out<sp/>path\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>couldn&apos;t<sp/>read<sp/>the<sp/>PWD<sp/>response!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="712"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="713"><highlight class="comment"><sp/>*<sp/>Curl_ftp_done()</highlight></codeline>
<codeline lineno="714"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="715"><highlight class="comment"><sp/>*<sp/>The<sp/>DONE<sp/>function.<sp/>This<sp/>does<sp/>what<sp/>needs<sp/>to<sp/>be<sp/>done<sp/>after<sp/>a<sp/>single<sp/>DO<sp/>has</highlight></codeline>
<codeline lineno="716"><highlight class="comment"><sp/>*<sp/>performed.</highlight></codeline>
<codeline lineno="717"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="718"><highlight class="comment"><sp/>*<sp/>Input<sp/>argument<sp/>is<sp/>already<sp/>checked<sp/>for<sp/>validity.</highlight></codeline>
<codeline lineno="719"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal">CURLcode<sp/>Curl_ftp_done(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn)</highlight></codeline>
<codeline lineno="721"><highlight class="normal">{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data<sp/>=<sp/>conn-&gt;data;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_f_t_p" kindref="compound">FTP</ref><sp/>*ftp<sp/>=<sp/>conn-&gt;proto.ftp;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/>ssize_t<sp/>nread;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ftpcode;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>CURLcode<sp/>result=CURLE_OK;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>the<sp/>dir<sp/>tree<sp/>parts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/>freedirs(ftp);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ftp-&gt;file)<sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>free(ftp-&gt;file);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>ftp-&gt;file<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.upload)<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((-1<sp/>!=<sp/>data-&gt;set.infilesize)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(data-&gt;set.infilesize<sp/>!=<sp/>*ftp-&gt;bytecountp)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!data-&gt;set.crlf)<sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;Uploaded<sp/>unaligned<sp/>file<sp/>size<sp/>(%&quot;</highlight><highlight class="normal"><sp/>FORMAT_OFF_T</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>out<sp/>of<sp/>%&quot;</highlight><highlight class="normal"><sp/>FORMAT_OFF_T<sp/></highlight><highlight class="stringliteral">&quot;<sp/>bytes)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ftp-&gt;bytecountp,<sp/>data-&gt;set.infilesize);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;bits.close<sp/>=<sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>close<sp/>this<sp/>connection<sp/>since<sp/>we<sp/>don&apos;t</highlight></codeline>
<codeline lineno="744"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>know<sp/>what<sp/>state<sp/>this<sp/>error<sp/>leaves<sp/>us<sp/>in<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_PARTIAL_FILE;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((-1<sp/>!=<sp/>conn-&gt;size)<sp/>&amp;&amp;<sp/>(conn-&gt;size<sp/>!=<sp/>*ftp-&gt;bytecountp)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(conn-&gt;maxdownload<sp/>!=<sp/>*ftp-&gt;bytecountp))<sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;Received<sp/>only<sp/>partial<sp/>file:<sp/>%&quot;</highlight><highlight class="normal"><sp/>FORMAT_OFF_T<sp/></highlight><highlight class="stringliteral">&quot;<sp/>bytes&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ftp-&gt;bytecountp);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;bits.close<sp/>=<sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>close<sp/>this<sp/>connection<sp/>since<sp/>we<sp/>don&apos;t</highlight></codeline>
<codeline lineno="754"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>know<sp/>what<sp/>state<sp/>this<sp/>error<sp/>leaves<sp/>us<sp/>in<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_PARTIAL_FILE;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ftp-&gt;dont_check<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!*ftp-&gt;bytecountp<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(conn-&gt;size&gt;0))<sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>consider<sp/>this<sp/>an<sp/>error,<sp/>but<sp/>there&apos;s<sp/>no<sp/>true<sp/>FTP<sp/>error<sp/>received</highlight></codeline>
<codeline lineno="761"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>why<sp/>we<sp/>need<sp/>to<sp/>continue<sp/>to<sp/>&quot;read<sp/>out&quot;<sp/>the<sp/>server<sp/>response<sp/>too.</highlight></codeline>
<codeline lineno="762"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>We<sp/>don&apos;t<sp/>want<sp/>to<sp/>leave<sp/>a<sp/>&quot;waiting&quot;<sp/>server<sp/>reply<sp/>if<sp/>we&apos;ll<sp/>get<sp/>told</highlight></codeline>
<codeline lineno="763"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>make<sp/>a<sp/>second<sp/>request<sp/>on<sp/>this<sp/>same<sp/>connection!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>data<sp/>was<sp/>received!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>CURLE_FTP_COULDNT_RETR_FILE;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_KRB4</highlight></codeline>
<codeline lineno="770"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>Curl_sec_fflush_fd(conn,<sp/>conn-&gt;sock[SECONDARYSOCKET]);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="772"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>shut<sp/>down<sp/>the<sp/>socket<sp/>to<sp/>inform<sp/>the<sp/>server<sp/>we&apos;re<sp/>done<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/>sclose(conn-&gt;sock[SECONDARYSOCKET]);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/>conn-&gt;sock[SECONDARYSOCKET]<sp/>=<sp/>CURL_SOCKET_BAD;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ftp-&gt;no_transfer)<sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Let&apos;s<sp/>see<sp/>what<sp/>the<sp/>server<sp/>says<sp/>about<sp/>the<sp/>transfer<sp/>we<sp/>just<sp/>performed,</highlight></codeline>
<codeline lineno="778"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>but<sp/>lower<sp/>the<sp/>timeout<sp/>as<sp/>sometimes<sp/>this<sp/>connection<sp/>has<sp/>died<sp/>while<sp/></highlight></codeline>
<codeline lineno="779"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>data<sp/>has<sp/>been<sp/>transfered.<sp/>This<sp/>happens<sp/>when<sp/>doing<sp/>through<sp/>NATs</highlight></codeline>
<codeline lineno="780"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>etc<sp/>that<sp/>abandon<sp/>old<sp/>silent<sp/>connections.</highlight></codeline>
<codeline lineno="781"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>ftp-&gt;response_time<sp/>=<sp/>60;<sp/></highlight><highlight class="comment">/*<sp/>give<sp/>it<sp/>only<sp/>a<sp/>minute<sp/>for<sp/>now<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_GetFTPResponse(&amp;nread,<sp/>conn,<sp/>&amp;ftpcode);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>ftp-&gt;response_time<sp/>=<sp/>3600;<sp/></highlight><highlight class="comment">/*<sp/>set<sp/>this<sp/>back<sp/>to<sp/>one<sp/>hour<sp/>waits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!nread<sp/>&amp;&amp;<sp/>(CURLE_OPERATION_TIMEDOUT<sp/>==<sp/>result))<sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;control<sp/>connection<sp/>looks<sp/>dead&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ftp-&gt;dont_check)<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>226<sp/>Transfer<sp/>complete,<sp/>250<sp/>Requested<sp/>file<sp/>action<sp/>okay,<sp/>completed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((ftpcode<sp/>!=<sp/>226)<sp/>&amp;&amp;<sp/>(ftpcode<sp/>!=<sp/>250))<sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;server<sp/>did<sp/>not<sp/>report<sp/>OK,<sp/>got<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>ftpcode);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_WRITE_ERROR;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>these<sp/>for<sp/>next<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/>ftp-&gt;no_transfer<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/>ftp-&gt;dont_check<sp/>=<sp/>FALSE;<sp/></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>any<sp/>post-transfer<sp/>QUOTE<sp/>strings?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!result<sp/>&amp;&amp;<sp/>data-&gt;set.postquote)</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>ftp_sendquote(conn,<sp/>data-&gt;set.postquote);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="814"><highlight class="normal">}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="817"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="818"><highlight class="comment"><sp/>*<sp/>ftp_sendquote()</highlight></codeline>
<codeline lineno="819"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="820"><highlight class="comment"><sp/>*<sp/>Where<sp/>a<sp/>&apos;quote&apos;<sp/>means<sp/>a<sp/>list<sp/>of<sp/>custom<sp/>commands<sp/>to<sp/>send<sp/>to<sp/>the<sp/>server.</highlight></codeline>
<codeline lineno="821"><highlight class="comment"><sp/>*<sp/>The<sp/>quote<sp/>list<sp/>is<sp/>passed<sp/>as<sp/>an<sp/>argument.</highlight></codeline>
<codeline lineno="822"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="825"><highlight class="normal">CURLcode<sp/>ftp_sendquote(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcurl__slist" kindref="compound">curl_slist</ref><sp/>*quote)</highlight></codeline>
<codeline lineno="826"><highlight class="normal">{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcurl__slist" kindref="compound">curl_slist</ref><sp/>*item;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/>ssize_t<sp/>nread;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ftpcode;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/>CURLcode<sp/>result;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/>item<sp/>=<sp/>quote;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(item)<sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item-&gt;data)<sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FTPSENDF(conn,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>item-&gt;data);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_GetFTPResponse(&amp;nread,<sp/>conn,<sp/>&amp;ftpcode);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result)</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ftpcode<sp/>&gt;=<sp/>400)<sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failf(conn-&gt;data,<sp/></highlight><highlight class="stringliteral">&quot;QUOT<sp/>string<sp/>not<sp/>accepted:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>item-&gt;data);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_QUOTE_ERROR;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>item<sp/>=<sp/>item-&gt;next;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="851"><highlight class="normal">}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="854"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="855"><highlight class="comment"><sp/>*<sp/>ftp_getfiletime()</highlight></codeline>
<codeline lineno="856"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="857"><highlight class="comment"><sp/>*<sp/>Get<sp/>the<sp/>timestamp<sp/>of<sp/>the<sp/>given<sp/>file.</highlight></codeline>
<codeline lineno="858"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal">CURLcode<sp/>ftp_getfiletime(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file)</highlight></codeline>
<codeline lineno="861"><highlight class="normal">{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/>CURLcode<sp/>result=CURLE_OK;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ftpcode;<sp/></highlight><highlight class="comment">/*<sp/>for<sp/>ftp<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/>ssize_t<sp/>nread;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf<sp/>=<sp/>conn-&gt;data-&gt;state.buffer;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>have<sp/>requested<sp/>to<sp/>get<sp/>the<sp/>modified-time<sp/>of<sp/>the<sp/>file,<sp/>this<sp/>is<sp/>yet</highlight></codeline>
<codeline lineno="868"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>again<sp/>a<sp/>grey<sp/>area<sp/>as<sp/>the<sp/>MDTM<sp/>is<sp/>not<sp/>kosher<sp/>RFC959<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/>FTPSENDF(conn,<sp/></highlight><highlight class="stringliteral">&quot;MDTM<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>file);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>Curl_GetFTPResponse(&amp;nread,<sp/>conn,<sp/>&amp;ftpcode);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(ftpcode)<sp/>{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>213:</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>got<sp/>a<sp/>time.<sp/>Format<sp/>should<sp/>be:<sp/>&quot;YYYYMMDDHHMMSS[.sss]&quot;<sp/>where<sp/>the</highlight></codeline>
<codeline lineno="879"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>.sss<sp/>part<sp/>is<sp/>optional<sp/>and<sp/>means<sp/>fractions<sp/>of<sp/>a<sp/>second<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>year,<sp/>month,<sp/>day,<sp/>hour,<sp/>minute,<sp/>second;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(6<sp/>==<sp/>sscanf(buf+4,<sp/></highlight><highlight class="stringliteral">&quot;%04d%02d%02d%02d%02d%02d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;year,<sp/>&amp;month,<sp/>&amp;day,<sp/>&amp;hour,<sp/>&amp;minute,<sp/>&amp;second))<sp/>{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>have<sp/>a<sp/>time,<sp/>reformat<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_t<sp/>secs=time(NULL);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;%04d%02d%02d<sp/>%02d:%02d:%02d<sp/>GMT&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>year,<sp/>month,<sp/>day,<sp/>hour,<sp/>minute,<sp/>second);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now,<sp/>convert<sp/>this<sp/>into<sp/>a<sp/>time()<sp/>value:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;data-&gt;info.filetime<sp/>=<sp/>curl_getdate(buf,<sp/>&amp;secs);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>infof(conn-&gt;data,<sp/></highlight><highlight class="stringliteral">&quot;unsupported<sp/>MDTM<sp/>reply<sp/>format\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>550:<sp/></highlight><highlight class="comment">/*<sp/>&quot;No<sp/>such<sp/>file<sp/>or<sp/>directory&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>failf(conn-&gt;data,<sp/></highlight><highlight class="stringliteral">&quot;Given<sp/>file<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>CURLE_FTP_COULDNT_RETR_FILE;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>result;</highlight></codeline>
<codeline lineno="901"><highlight class="normal">}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="904"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="905"><highlight class="comment"><sp/>*<sp/>ftp_transfertype()</highlight></codeline>
<codeline lineno="906"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="907"><highlight class="comment"><sp/>*<sp/>Set<sp/>transfer<sp/>type.<sp/>We<sp/>only<sp/>deal<sp/>with<sp/>ASCII<sp/>or<sp/>BINARY<sp/>so<sp/>this<sp/>function</highlight></codeline>
<codeline lineno="908"><highlight class="comment"><sp/>*<sp/>sets<sp/>one<sp/>of<sp/>them.</highlight></codeline>
<codeline lineno="909"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CURLcode<sp/>ftp_transfertype(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn,</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ascii)</highlight></codeline>
<codeline lineno="912"><highlight class="normal">{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data<sp/>=<sp/>conn-&gt;data;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ftpcode;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/>ssize_t<sp/>nread;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/>CURLcode<sp/>result;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/>FTPSENDF(conn,<sp/></highlight><highlight class="stringliteral">&quot;TYPE<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>ascii?</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;I&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>Curl_GetFTPResponse(&amp;nread,<sp/>conn,<sp/>&amp;ftpcode);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ftpcode<sp/>!=<sp/>200)<sp/>{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>set<sp/>%s<sp/>mode&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ascii?</highlight><highlight class="stringliteral">&quot;ASCII&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;binary&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ascii?<sp/>CURLE_FTP_COULDNT_SET_ASCII:CURLE_FTP_COULDNT_SET_BINARY;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="931"><highlight class="normal">}</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="934"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="935"><highlight class="comment"><sp/>*<sp/>ftp_getsize()</highlight></codeline>
<codeline lineno="936"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="937"><highlight class="comment"><sp/>*<sp/>Returns<sp/>the<sp/>file<sp/>size<sp/>(in<sp/>bytes)<sp/>of<sp/>the<sp/>given<sp/>remote<sp/>file.</highlight></codeline>
<codeline lineno="938"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal">CURLcode<sp/>ftp_getsize(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curl_off_t<sp/>*size)</highlight></codeline>
<codeline lineno="943"><highlight class="normal">{</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data<sp/>=<sp/>conn-&gt;data;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ftpcode;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/>ssize_t<sp/>nread;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf=data-&gt;state.buffer;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/>CURLcode<sp/>result;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/>FTPSENDF(conn,<sp/></highlight><highlight class="stringliteral">&quot;SIZE<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>file);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>Curl_GetFTPResponse(&amp;nread,<sp/>conn,<sp/>&amp;ftpcode);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ftpcode<sp/>==<sp/>213)<sp/>{</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>size<sp/>from<sp/>the<sp/>ascii<sp/>string:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>*size<sp/>=<sp/>strtoofft(buf+4,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_COULDNT_GET_SIZE;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="963"><highlight class="normal">}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="966"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="967"><highlight class="comment"><sp/>*<sp/>ftp_pasv_verbose()</highlight></codeline>
<codeline lineno="968"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="969"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>only<sp/>outputs<sp/>some<sp/>informationals<sp/>about<sp/>this<sp/>second<sp/>connection</highlight></codeline>
<codeline lineno="970"><highlight class="comment"><sp/>*<sp/>when<sp/>we&apos;ve<sp/>issued<sp/>a<sp/>PASV<sp/>command<sp/>before<sp/>and<sp/>thus<sp/>we<sp/>have<sp/>connected<sp/>to<sp/>a</highlight></codeline>
<codeline lineno="971"><highlight class="comment"><sp/>*<sp/>possibly<sp/>new<sp/>IP<sp/>address.</highlight></codeline>
<codeline lineno="972"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="973"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal">ftp_pasv_verbose(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn,</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Curl_ipconnect<sp/>*addr,</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*newhost,<sp/></highlight><highlight class="comment">/*<sp/>ascii<sp/>version<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port)</highlight></codeline>
<codeline lineno="979"><highlight class="normal">{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ENABLE_IPV6</highlight></codeline>
<codeline lineno="981"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*****************************************************************</highlight></codeline>
<codeline lineno="982"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="983"><highlight class="comment"><sp/><sp/><sp/>*<sp/>IPv4-only<sp/>code<sp/>section</highlight></codeline>
<codeline lineno="984"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">in_addr<sp/>in;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">hostent<sp/>*<sp/>answer;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_INET_NTOA_R</highlight></codeline>
<codeline lineno="990"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ntoa_buf[64];</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="992"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>array<sp/>size<sp/>trick<sp/>below<sp/>is<sp/>to<sp/>make<sp/>this<sp/>a<sp/>large<sp/>chunk<sp/>of<sp/>memory</highlight></codeline>
<codeline lineno="993"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>suitably<sp/>8-byte<sp/>aligned<sp/>on<sp/>64-bit<sp/>platforms.<sp/>This<sp/>was<sp/>thoughtfully</highlight></codeline>
<codeline lineno="994"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>suggested<sp/>by<sp/>Philip<sp/>Gladstone.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>bigbuf[9000<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long)];</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HAVE_INET_ADDR)</highlight></codeline>
<codeline lineno="998"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>in_addr_t<sp/>address;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(HAVE_GETHOSTBYADDR_R)</highlight></codeline>
<codeline lineno="1000"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h_errnop;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="1002"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hostent_buf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)bigbuf;<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>a<sp/>char<sp/>*<sp/>to<sp/>the<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/>address<sp/>=<sp/>inet_addr(newhost);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifdef<sp/>HAVE_GETHOSTBYADDR_R</highlight></codeline>
<codeline lineno="1006"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>HAVE_GETHOSTBYADDR_R_5</highlight></codeline>
<codeline lineno="1008"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>AIX,<sp/>Digital<sp/>Unix<sp/>(OSF1,<sp/>Tru64)<sp/>style:</highlight></codeline>
<codeline lineno="1009"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>extern<sp/>int<sp/>gethostbyaddr_r(char<sp/>*addr,<sp/>size_t<sp/>len,<sp/>int<sp/>type,</highlight></codeline>
<codeline lineno="1010"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>struct<sp/>hostent<sp/>*htent,<sp/>struct<sp/>hostent_data<sp/>*ht_data);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fred<sp/>Noz<sp/>helped<sp/>me<sp/>try<sp/>this<sp/>out,<sp/>now<sp/>it<sp/>at<sp/>least<sp/>compiles!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bjorn<sp/>Reese<sp/>(November<sp/>28<sp/>2001):</highlight></codeline>
<codeline lineno="1015"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>The<sp/>Tru64<sp/>man<sp/>page<sp/>on<sp/>gethostbyaddr_r()<sp/>says<sp/>that</highlight></codeline>
<codeline lineno="1016"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>the<sp/>hostent<sp/>struct<sp/>must<sp/>be<sp/>filled<sp/>with<sp/>zeroes<sp/>before<sp/>the<sp/>call<sp/>to</highlight></codeline>
<codeline lineno="1017"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>gethostbyaddr_r().<sp/></highlight></codeline>
<codeline lineno="1018"><highlight class="comment"></highlight></codeline>
<codeline lineno="1019"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>...<sp/>as<sp/>must<sp/>be<sp/>struct<sp/>hostent_data<sp/>Craig<sp/>Markwardt<sp/>19<sp/>Sep<sp/>2002.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/>memset(hostent_buf,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>hostent)+</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>hostent_data));</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(gethostbyaddr_r((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;address,</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(address),<sp/>AF_INET,</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>hostent<sp/>*)hostent_buf,</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>hostent_data<sp/>*)(hostent_buf<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*answer))))</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>answer=NULL;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>answer=(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">hostent<sp/>*)hostent_buf;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="1032"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>HAVE_GETHOSTBYADDR_R_7</highlight></codeline>
<codeline lineno="1033"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Solaris<sp/>and<sp/>IRIX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/>answer<sp/>=<sp/>gethostbyaddr_r((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;address,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(address),<sp/>AF_INET,</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>hostent<sp/>*)bigbuf,</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostent_buf<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*answer),</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(bigbuf)<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*answer),</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;h_errnop);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="1040"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>HAVE_GETHOSTBYADDR_R_8</highlight></codeline>
<codeline lineno="1041"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Linux<sp/>style<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(gethostbyaddr_r((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;address,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(address),<sp/>AF_INET,</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>hostent<sp/>*)hostent_buf,</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostent_buf<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*answer),</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(bigbuf)<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*answer),</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;answer,</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;h_errnop))</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>answer=NULL;<sp/></highlight><highlight class="comment">/*<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight></codeline>
<codeline lineno="1050"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight></codeline>
<codeline lineno="1052"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>(void)hostent_buf;<sp/></highlight><highlight class="comment">/*<sp/>avoid<sp/>compiler<sp/>warning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/>answer<sp/>=<sp/>gethostbyaddr((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;address,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(address),<sp/>AF_INET);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
<codeline lineno="1055"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1056"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>answer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1058"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>(void)<sp/>memcpy(&amp;in.s_addr,<sp/>addr,<sp/>sizeof<sp/>(Curl_ipconnect));</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/>infof(conn-&gt;data,<sp/></highlight><highlight class="stringliteral">&quot;Connecting<sp/>to<sp/>%s<sp/>(%s)<sp/>port<sp/>%u\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>answer?answer-&gt;h_name:newhost,</highlight></codeline>
<codeline lineno="1061"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>defined(HAVE_INET_NTOA_R)</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inet_ntoa_r(in,<sp/>ntoa_buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ntoa_buf)),</highlight></codeline>
<codeline lineno="1063"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inet_ntoa(in),</highlight></codeline>
<codeline lineno="1065"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1069"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*****************************************************************</highlight></codeline>
<codeline lineno="1070"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1071"><highlight class="comment"><sp/><sp/><sp/>*<sp/>IPv6-only<sp/>code<sp/>section</highlight></codeline>
<codeline lineno="1072"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>hbuf[NI_MAXHOST];<sp/></highlight><highlight class="comment">/*<sp/>~1KB<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>nbuf[NI_MAXHOST];<sp/></highlight><highlight class="comment">/*<sp/>~1KB<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>sbuf[NI_MAXSERV];<sp/></highlight><highlight class="comment">/*<sp/>around<sp/>32<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>NI_WITHSCOPEID</highlight></codeline>
<codeline lineno="1077"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>niflags<sp/>=<sp/>NI_NUMERICHOST<sp/>|<sp/>NI_NUMERICSERV<sp/>|<sp/>NI_WITHSCOPEID;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1079"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>niflags<sp/>=<sp/>NI_NUMERICHOST<sp/>|<sp/>NI_NUMERICSERV;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1081"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>(void)port;<sp/></highlight><highlight class="comment">/*<sp/>prevent<sp/>compiler<sp/>warning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getnameinfo(addr-&gt;ai_addr,<sp/>addr-&gt;ai_addrlen,</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbuf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(nbuf),<sp/>sbuf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sbuf),<sp/>niflags))<sp/>{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(nbuf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(nbuf),<sp/></highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(sbuf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sbuf),<sp/></highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getnameinfo(addr-&gt;ai_addr,<sp/>addr-&gt;ai_addrlen,</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hbuf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(hbuf),<sp/>NULL,<sp/>0,<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>infof(conn-&gt;data,<sp/></highlight><highlight class="stringliteral">&quot;Connecting<sp/>to<sp/>%s<sp/>(%s)<sp/>port<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>nbuf,<sp/>newhost,<sp/>sbuf);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>infof(conn-&gt;data,<sp/></highlight><highlight class="stringliteral">&quot;Connecting<sp/>to<sp/>%s<sp/>(%s)<sp/>port<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>hbuf,<sp/>nbuf,<sp/>sbuf);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1096"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="1099"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1100"><highlight class="comment"><sp/>*<sp/>ftp_use_port()</highlight></codeline>
<codeline lineno="1101"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1102"><highlight class="comment"><sp/>*<sp/>Send<sp/>the<sp/>proper<sp/>PORT<sp/>command.<sp/>PORT<sp/>is<sp/>the<sp/>ftp<sp/>client&apos;s<sp/>way<sp/>of<sp/>telling<sp/>the</highlight></codeline>
<codeline lineno="1103"><highlight class="comment"><sp/>*<sp/>server<sp/>that<sp/>*WE*<sp/>open<sp/>a<sp/>port<sp/>that<sp/>we<sp/>listen<sp/>on<sp/>an<sp/>awaits<sp/>the<sp/>server<sp/>to</highlight></codeline>
<codeline lineno="1104"><highlight class="comment"><sp/>*<sp/>connect<sp/>to.<sp/>This<sp/>is<sp/>the<sp/>opposite<sp/>of<sp/>PASV.</highlight></codeline>
<codeline lineno="1105"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal">CURLcode<sp/>ftp_use_port(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn)</highlight></codeline>
<codeline lineno="1109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data=conn-&gt;data;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/>curl_socket_t<sp/>portsock=<sp/>CURL_SOCKET_BAD;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/>ssize_t<sp/>nread;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ftpcode;<sp/></highlight><highlight class="comment">/*<sp/>receive<sp/>FTP<sp/>response<sp/>codes<sp/>in<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/>CURLcode<sp/>result;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENABLE_IPV6</highlight></codeline>
<codeline lineno="1117"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/******************************************************************</highlight></codeline>
<codeline lineno="1118"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1119"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Here&apos;s<sp/>a<sp/>piece<sp/>of<sp/>IPv6-specific<sp/>code<sp/>coming<sp/>up</highlight></codeline>
<codeline lineno="1120"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1121"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">addrinfo<sp/>hints,<sp/>*res,<sp/>*ai;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_storage<sp/>ss;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/>socklen_t<sp/>sslen;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>hbuf[NI_MAXHOST];</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr<sp/>*sa=(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr<sp/>*)&amp;ss;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>NI_WITHSCOPEID</highlight></codeline>
<codeline lineno="1130"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>NIFLAGS<sp/>NI_NUMERICHOST<sp/>|<sp/>NI_NUMERICSERV<sp/>|<sp/>NI_WITHSCOPEID</highlight></codeline>
<codeline lineno="1131"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1132"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>NIFLAGS<sp/>NI_NUMERICHOST<sp/>|<sp/>NI_NUMERICSERV</highlight></codeline>
<codeline lineno="1133"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1134"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ap;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pp;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>portmsgbuf[4096],<sp/>tmp[4096];</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mode[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;EPRT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;LPRT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;PORT&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**modep;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1143"><highlight class="comment"><sp/><sp/><sp/>*<sp/>we<sp/>should<sp/>use<sp/>Curl_if2ip?<sp/><sp/>given<sp/>pickiness<sp/>of<sp/>recent<sp/>ftpd,</highlight></codeline>
<codeline lineno="1144"><highlight class="comment"><sp/><sp/><sp/>*<sp/>I<sp/>believe<sp/>we<sp/>should<sp/>use<sp/>the<sp/>same<sp/>address<sp/>as<sp/>the<sp/>control<sp/>connection.</highlight></codeline>
<codeline lineno="1145"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/>sslen<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ss);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/>rc<sp/>=<sp/>getsockname(conn-&gt;sock[FIRSTSOCKET],<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)&amp;ss,<sp/>&amp;sslen);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rc<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;getsockname()<sp/>returned<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>rc);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_PORT_FAILED;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/>rc<sp/>=<sp/>getnameinfo((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)&amp;ss,<sp/>sslen,<sp/>hbuf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(hbuf),<sp/>NULL,<sp/>0,</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NIFLAGS);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rc)<sp/>{</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;getnameinfo()<sp/>returned<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>rc);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_PORT_FAILED;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/>memset(&amp;hints,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(hints));</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/>hints.ai_family<sp/>=<sp/>sa-&gt;sa_family;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*hints.ai_family<sp/>=<sp/>ss.ss_family;</highlight></codeline>
<codeline lineno="1163"><highlight class="comment"><sp/><sp/><sp/><sp/>this<sp/>way<sp/>can<sp/>be<sp/>used<sp/>if<sp/>sockaddr_storage<sp/>is<sp/>properly<sp/>defined,<sp/>as<sp/>glibc<sp/></highlight></codeline>
<codeline lineno="1164"><highlight class="comment"><sp/><sp/><sp/><sp/>2.1.X<sp/>doesn&apos;t<sp/>do*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/>hints.ai_socktype<sp/>=<sp/>SOCK_STREAM;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/>hints.ai_flags<sp/>=<sp/>AI_PASSIVE;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/>rc<sp/>=<sp/>getaddrinfo(hbuf,<sp/>NULL,<sp/>&amp;hints,<sp/>&amp;res);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rc)<sp/>{</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;getaddrinfo()<sp/>returned<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>rc);</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_PORT_FAILED;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/>portsock<sp/>=<sp/>CURL_SOCKET_BAD;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ai<sp/>=<sp/>res;<sp/>ai;<sp/>ai<sp/>=<sp/>ai-&gt;ai_next)<sp/>{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1177"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Workaround<sp/>for<sp/>AIX5<sp/>getaddrinfo()<sp/>problem<sp/>(it<sp/>doesn&apos;t<sp/>set<sp/>ai_socktype):</highlight></codeline>
<codeline lineno="1178"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ai-&gt;ai_socktype<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ai-&gt;ai_socktype<sp/>=<sp/>hints.ai_socktype;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>portsock<sp/>=<sp/>socket(ai-&gt;ai_family,<sp/>ai-&gt;ai_socktype,<sp/>ai-&gt;ai_protocol);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(portsock<sp/>==<sp/>CURL_SOCKET_BAD)</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bind(portsock,<sp/>ai-&gt;ai_addr,<sp/>ai-&gt;ai_addrlen)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sclose(portsock);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>portsock<sp/>=<sp/>CURL_SOCKET_BAD;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(listen(portsock,<sp/>1)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sclose(portsock);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>portsock<sp/>=<sp/>CURL_SOCKET_BAD;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/>freeaddrinfo(res);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(portsock<sp/>==<sp/>CURL_SOCKET_BAD)<sp/>{</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_PORT_FAILED;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/>sslen<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ss);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getsockname(portsock,<sp/>sa,<sp/>&amp;sslen)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_PORT_FAILED;</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(modep<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)(data-&gt;set.ftp_use_eprt?&amp;mode[0]:&amp;mode[2]);</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modep<sp/>&amp;&amp;<sp/>*modep;<sp/>modep++)<sp/>{</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lprtaf,<sp/>eprtaf;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alen=0,<sp/>plen=0;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(sa-&gt;sa_family)<sp/>{</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AF_INET:</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ap<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr_in<sp/>*)&amp;ss)-&gt;sin_addr;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alen<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>*)&amp;ss)-&gt;sin_addr);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pp<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr_in<sp/>*)&amp;ss)-&gt;sin_port;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>plen<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>*)&amp;ss)-&gt;sin_port);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lprtaf<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eprtaf<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AF_INET6:</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ap<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr_in6<sp/>*)&amp;ss)-&gt;sin6_addr;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alen<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in6<sp/>*)&amp;ss)-&gt;sin6_addr);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pp<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr_in6<sp/>*)&amp;ss)-&gt;sin6_port;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>plen<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in6<sp/>*)&amp;ss)-&gt;sin6_port);</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lprtaf<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eprtaf<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ap<sp/>=<sp/>pp<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lprtaf<sp/>=<sp/>eprtaf<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(*modep,<sp/></highlight><highlight class="stringliteral">&quot;EPRT&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eprtaf<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getnameinfo((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)&amp;ss,<sp/>sslen,</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>portmsgbuf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(portmsgbuf),<sp/>tmp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tmp),</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NIFLAGS))</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>do<sp/>not<sp/>transmit<sp/>IPv6<sp/>scope<sp/>identifier<sp/>to<sp/>the<sp/>wire<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sa-&gt;sa_family<sp/>==<sp/>AF_INET6)<sp/>{</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*q<sp/>=<sp/>strchr(portmsgbuf,<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q)</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*q<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_ftpsendf(conn,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>|%d|%s|%s|&quot;</highlight><highlight class="normal">,<sp/>*modep,<sp/>eprtaf,</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>portmsgbuf,<sp/>tmp);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(*modep,<sp/></highlight><highlight class="stringliteral">&quot;LPRT&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcmp(*modep,<sp/></highlight><highlight class="stringliteral">&quot;PORT&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(*modep,<sp/></highlight><highlight class="stringliteral">&quot;LPRT&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>lprtaf<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(*modep,<sp/></highlight><highlight class="stringliteral">&quot;PORT&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>sa-&gt;sa_family<sp/>!=<sp/>AF_INET)</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>portmsgbuf[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(*modep,<sp/></highlight><highlight class="stringliteral">&quot;LPRT&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(tmp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tmp),<sp/></highlight><highlight class="stringliteral">&quot;%d,%d&quot;</highlight><highlight class="normal">,<sp/>lprtaf,<sp/>alen);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlcat(portmsgbuf,<sp/>tmp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(portmsgbuf))<sp/>&gt;=</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(portmsgbuf))<sp/>{</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>alen;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(portmsgbuf[0])</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(tmp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tmp),<sp/></highlight><highlight class="stringliteral">&quot;,%u&quot;</highlight><highlight class="normal">,<sp/>ap[i]);</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(tmp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tmp),<sp/></highlight><highlight class="stringliteral">&quot;%u&quot;</highlight><highlight class="normal">,<sp/>ap[i]);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlcat(portmsgbuf,<sp/>tmp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(portmsgbuf))<sp/>&gt;=</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(portmsgbuf))<sp/>{</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(*modep,<sp/></highlight><highlight class="stringliteral">&quot;LPRT&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(tmp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tmp),<sp/></highlight><highlight class="stringliteral">&quot;,%d&quot;</highlight><highlight class="normal">,<sp/>plen);</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlcat(portmsgbuf,<sp/>tmp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(portmsgbuf))<sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(portmsgbuf))</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>plen;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(tmp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tmp),<sp/></highlight><highlight class="stringliteral">&quot;,%u&quot;</highlight><highlight class="normal">,<sp/>pp[i]);</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlcat(portmsgbuf,<sp/>tmp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(portmsgbuf))<sp/>&gt;=</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(portmsgbuf))<sp/>{</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_ftpsendf(conn,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>*modep,<sp/>portmsgbuf);</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_GetFTPResponse(&amp;nread,<sp/>conn,<sp/>&amp;ftpcode);</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ftpcode<sp/>!=<sp/>200)<sp/>{</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*modep)<sp/>{</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/>sclose(portsock);</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;PORT<sp/>command<sp/>attempts<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_PORT_FAILED;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>set<sp/>the<sp/>secondary<sp/>socket<sp/>variable<sp/>to<sp/>this<sp/>for<sp/>now,<sp/>it</highlight></codeline>
<codeline lineno="1327"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>is<sp/>only<sp/>so<sp/>that<sp/>the<sp/>cleanup<sp/>function<sp/>will<sp/>close<sp/>it<sp/>in<sp/>case</highlight></codeline>
<codeline lineno="1328"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>we<sp/>fail<sp/>before<sp/>the<sp/>true<sp/>secondary<sp/>stuff<sp/>is<sp/>made<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/>conn-&gt;sock[SECONDARYSOCKET]<sp/>=<sp/>portsock;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1332"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/******************************************************************</highlight></codeline>
<codeline lineno="1333"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1334"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Here&apos;s<sp/>a<sp/>piece<sp/>of<sp/>IPv4-specific<sp/>code<sp/>coming<sp/>up</highlight></codeline>
<codeline lineno="1335"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1336"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>sa;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_curl__dns__entry" kindref="compound">Curl_dns_entry</ref><sp/>*h=NULL;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>porttouse;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>myhost[256]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sa_filled_in<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.ftpport)<sp/>{</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>in_addr_t<sp/>in;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>check<sp/>if<sp/>the<sp/>given<sp/>name<sp/>is<sp/>an<sp/>IP<sp/>address<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/>in=inet_addr(data-&gt;set.ftpport);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((in<sp/>==<sp/>CURL_INADDR_NONE)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Curl_if2ip(data-&gt;set.ftpport,<sp/>myhost,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(myhost)))<sp/>{</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>Curl_resolv(conn,<sp/>myhost,<sp/>0,<sp/>&amp;h);</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rc<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>Curl_wait_for_resolv(conn,<sp/>&amp;h);</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>strlen(data-&gt;set.ftpport);</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(len&gt;1)<sp/>{</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>Curl_resolv(conn,<sp/>data-&gt;set.ftpport,<sp/>0,<sp/>&amp;h);</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rc<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>Curl_wait_for_resolv(conn,<sp/>&amp;h);</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(h)</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(myhost,<sp/>data-&gt;set.ftpport);<sp/></highlight><highlight class="comment">/*<sp/>buffer<sp/>overflow<sp/>risk<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<sp/>*myhost)<sp/>{</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pick<sp/>a<sp/>suitable<sp/>default<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/>socklen_t<sp/>sslen;</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/>sslen<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sa);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getsockname(conn-&gt;sock[FIRSTSOCKET],</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)&amp;sa,<sp/>&amp;sslen)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;getsockname()<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_PORT_FAILED;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/>sa_filled_in<sp/>=<sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>sa<sp/>struct<sp/>is<sp/>filled<sp/>in<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(h)</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>when<sp/>we<sp/>return<sp/>from<sp/>here,<sp/>we<sp/>can<sp/>forget<sp/>about<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/>Curl_resolv_unlock(data,<sp/>h);</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>h<sp/>||<sp/>sa_filled_in)<sp/>{</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(portsock<sp/>=<sp/>socket(AF_INET,<sp/>SOCK_STREAM,<sp/>0))<sp/>!=<sp/>CURL_SOCKET_BAD<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>set<sp/>the<sp/>secondary<sp/>socket<sp/>variable<sp/>to<sp/>this<sp/>for<sp/>now,<sp/>it</highlight></codeline>
<codeline lineno="1391"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>only<sp/>so<sp/>that<sp/>the<sp/>cleanup<sp/>function<sp/>will<sp/>close<sp/>it<sp/>in<sp/>case</highlight></codeline>
<codeline lineno="1392"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>we<sp/>fail<sp/>before<sp/>the<sp/>true<sp/>secondary<sp/>stuff<sp/>is<sp/>made<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;sock[SECONDARYSOCKET]<sp/>=<sp/>portsock;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!sa_filled_in)<sp/>{</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;sa,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sa));</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;sa.sin_addr,</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h-&gt;addr-&gt;h_addr,</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h-&gt;addr-&gt;h_length);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sa.sin_family<sp/>=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sa.sin_addr.s_addr<sp/>=<sp/>INADDR_ANY;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sa.sin_port<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sa);</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bind(portsock,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)&amp;sa,<sp/>size)<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>succeeded<sp/>to<sp/>bind<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>add;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socklen_t<sp/>socksize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(add);</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(getsockname(portsock,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)<sp/>&amp;add,</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;socksize)&lt;0)<sp/>{</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;getsockname()<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_PORT_FAILED;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>porttouse<sp/>=<sp/>ntohs(add.sin_port);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>listen(portsock,<sp/>1)<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;listen(2)<sp/>failed<sp/>on<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_PORT_FAILED;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;bind(2)<sp/>failed<sp/>on<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_PORT_FAILED;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;socket(2)<sp/>failed<sp/>(%s)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_PORT_FAILED;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;could&apos;t<sp/>find<sp/>my<sp/>own<sp/>IP<sp/>address<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>myhost);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_PORT_FAILED;</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_INET_NTOA_R</highlight></codeline>
<codeline lineno="1440"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ntoa_buf[64];</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1442"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">in_addr<sp/>in;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>ip[5];</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>memcpy(&amp;in.s_addr,</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h?*h-&gt;addr-&gt;h_addr_list:(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;sa.sin_addr.s_addr,</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(in.s_addr));</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_INET_NTOA_R</highlight></codeline>
<codeline lineno="1449"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ignore<sp/>the<sp/>return<sp/>code<sp/>from<sp/>inet_ntoa_r()<sp/>as<sp/>it<sp/>is<sp/>int<sp/>or</highlight></codeline>
<codeline lineno="1450"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>*<sp/>depending<sp/>on<sp/>system<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/>inet_ntoa_r(in,<sp/>ntoa_buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ntoa_buf));</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/>sscanf(<sp/>ntoa_buf,<sp/></highlight><highlight class="stringliteral">&quot;%hu.%hu.%hu.%hu&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;ip[0],<sp/>&amp;ip[1],<sp/>&amp;ip[2],<sp/>&amp;ip[3]);</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1455"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>sscanf(<sp/>inet_ntoa(in),<sp/></highlight><highlight class="stringliteral">&quot;%hu.%hu.%hu.%hu&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;ip[0],<sp/>&amp;ip[1],<sp/>&amp;ip[2],<sp/>&amp;ip[3]);</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1458"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;Telling<sp/>server<sp/>to<sp/>connect<sp/>to<sp/>%d.%d.%d.%d:%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip[0],<sp/>ip[1],<sp/>ip[2],<sp/>ip[3],<sp/>porttouse);</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/>result=Curl_ftpsendf(conn,<sp/></highlight><highlight class="stringliteral">&quot;PORT<sp/>%d,%d,%d,%d,%d,%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip[0],<sp/>ip[1],<sp/>ip[2],<sp/>ip[3],</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>porttouse<sp/>&gt;&gt;<sp/>8,</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>porttouse<sp/>&amp;<sp/>255);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>Curl_GetFTPResponse(&amp;nread,<sp/>conn,<sp/>&amp;ftpcode);</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ftpcode<sp/>!=<sp/>200)<sp/>{</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;Server<sp/>does<sp/>not<sp/>grok<sp/>PORT,<sp/>try<sp/>without<sp/>it!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_PORT_FAILED;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>ipv4-specific<sp/>code<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="1478"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="1480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="1483"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1484"><highlight class="comment"><sp/>*<sp/>ftp_use_pasv()</highlight></codeline>
<codeline lineno="1485"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1486"><highlight class="comment"><sp/>*<sp/>Send<sp/>the<sp/>PASV<sp/>command.<sp/>PASV<sp/>is<sp/>the<sp/>ftp<sp/>client&apos;s<sp/>way<sp/>of<sp/>asking<sp/>the<sp/>server<sp/>to</highlight></codeline>
<codeline lineno="1487"><highlight class="comment"><sp/>*<sp/>open<sp/>a<sp/>second<sp/>port<sp/>that<sp/>we<sp/>can<sp/>connect<sp/>to<sp/>(for<sp/>the<sp/>data<sp/>transfer).<sp/>This<sp/>is</highlight></codeline>
<codeline lineno="1488"><highlight class="comment"><sp/>*<sp/>the<sp/>opposite<sp/>of<sp/>PORT.</highlight></codeline>
<codeline lineno="1489"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal">CURLcode<sp/>ftp_use_pasv(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn,</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*connected)</highlight></codeline>
<codeline lineno="1494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data<sp/>=<sp/>conn-&gt;data;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/>ssize_t<sp/>nread;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf<sp/>=<sp/>data-&gt;state.buffer;<sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>our<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ftpcode;<sp/></highlight><highlight class="comment">/*<sp/>receive<sp/>FTP<sp/>response<sp/>codes<sp/>in<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/>CURLcode<sp/>result;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_curl__dns__entry" kindref="compound">Curl_dns_entry</ref><sp/>*addr=NULL;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/>Curl_ipconnect<sp/>*conninfo;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1505"><highlight class="comment"><sp/><sp/><sp/><sp/>Here&apos;s<sp/>the<sp/>excecutive<sp/>summary<sp/>on<sp/>what<sp/>to<sp/>do:</highlight></codeline>
<codeline lineno="1506"><highlight class="comment"></highlight></codeline>
<codeline lineno="1507"><highlight class="comment"><sp/><sp/><sp/><sp/>PASV<sp/>is<sp/>RFC959,<sp/>expect:</highlight></codeline>
<codeline lineno="1508"><highlight class="comment"><sp/><sp/><sp/><sp/>227<sp/>Entering<sp/>Passive<sp/>Mode<sp/>(a1,a2,a3,a4,p1,p2)</highlight></codeline>
<codeline lineno="1509"><highlight class="comment"></highlight></codeline>
<codeline lineno="1510"><highlight class="comment"><sp/><sp/><sp/><sp/>LPSV<sp/>is<sp/>RFC1639,<sp/>expect:</highlight></codeline>
<codeline lineno="1511"><highlight class="comment"><sp/><sp/><sp/><sp/>228<sp/>Entering<sp/>Long<sp/>Passive<sp/>Mode<sp/>(4,4,a1,a2,a3,a4,2,p1,p2)</highlight></codeline>
<codeline lineno="1512"><highlight class="comment"></highlight></codeline>
<codeline lineno="1513"><highlight class="comment"><sp/><sp/><sp/><sp/>EPSV<sp/>is<sp/>RFC2428,<sp/>expect:</highlight></codeline>
<codeline lineno="1514"><highlight class="comment"><sp/><sp/><sp/><sp/>229<sp/>Entering<sp/>Extended<sp/>Passive<sp/>Mode<sp/>(|||port|)</highlight></codeline>
<codeline lineno="1515"><highlight class="comment"></highlight></codeline>
<codeline lineno="1516"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mode[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;EPSV&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;PASV&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>results[]<sp/>=<sp/>{<sp/>229,<sp/>227,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>modeoff;</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>connectport;<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>local<sp/>port<sp/>connect()<sp/>should<sp/>use!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>newport=0;<sp/></highlight><highlight class="comment">/*<sp/>remote<sp/>port,<sp/>not<sp/>necessary<sp/>the<sp/>local<sp/>one<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>newhost<sp/>must<sp/>be<sp/>able<sp/>to<sp/>hold<sp/>a<sp/>full<sp/>IP-style<sp/>address<sp/>in<sp/>ASCII,<sp/>which</highlight></codeline>
<codeline lineno="1525"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>IPv6<sp/>case<sp/>means<sp/>5*8-1<sp/>=<sp/>39<sp/>letters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>newhost[48];</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*newhostp=NULL;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(modeoff<sp/>=<sp/>(data-&gt;set.ftp_use_epsv?0:1);</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode[modeoff];<sp/>modeoff++)<sp/>{</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_ftpsendf(conn,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>mode[modeoff]);</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_GetFTPResponse(&amp;nread,<sp/>conn,<sp/>&amp;ftpcode);</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ftpcode<sp/>==<sp/>results[modeoff])</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mode[modeoff])<sp/>{</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;Odd<sp/>return<sp/>code<sp/>after<sp/>PASV&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_WEIRD_PASV_REPLY;</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(227<sp/>==<sp/>results[modeoff])<sp/>{</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ip[4];</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port[2];</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str=buf;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1551"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>New<sp/>227-parser<sp/>June<sp/>3rd<sp/>1999.</highlight></codeline>
<codeline lineno="1552"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>It<sp/>now<sp/>scans<sp/>for<sp/>a<sp/>sequence<sp/>of<sp/>six<sp/>comma-separated<sp/>numbers<sp/>and</highlight></codeline>
<codeline lineno="1553"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>will<sp/>take<sp/>them<sp/>as<sp/>IP+port<sp/>indicators.</highlight></codeline>
<codeline lineno="1554"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1555"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Found<sp/>reply-strings<sp/>include:</highlight></codeline>
<codeline lineno="1556"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>&quot;227<sp/>Entering<sp/>Passive<sp/>Mode<sp/>(127,0,0,1,4,51)&quot;</highlight></codeline>
<codeline lineno="1557"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>&quot;227<sp/>Data<sp/>transfer<sp/>will<sp/>passively<sp/>listen<sp/>to<sp/>127,0,0,1,4,51&quot;</highlight></codeline>
<codeline lineno="1558"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>&quot;227<sp/>Entering<sp/>passive<sp/>mode.<sp/>127,0,0,1,4,51&quot;</highlight></codeline>
<codeline lineno="1559"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(*str)<sp/>{</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(6<sp/>==<sp/>sscanf(str,<sp/></highlight><highlight class="stringliteral">&quot;%d,%d,%d,%d,%d,%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;ip[0],<sp/>&amp;ip[1],<sp/>&amp;ip[2],<sp/>&amp;ip[3],</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;port[0],<sp/>&amp;port[1]))</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str++;</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!*str)<sp/>{</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>interpret<sp/>this<sp/>227-reply:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>buf);</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_WEIRD_227_FORMAT;</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(newhost,<sp/></highlight><highlight class="stringliteral">&quot;%d.%d.%d.%d&quot;</highlight><highlight class="normal">,<sp/>ip[0],<sp/>ip[1],<sp/>ip[2],<sp/>ip[3]);</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/>newhostp<sp/>=<sp/>newhost;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/>newport<sp/>=<sp/>(port[0]&lt;&lt;8)<sp/>+<sp/>port[1];</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(229<sp/>==<sp/>results[modeoff])<sp/>{</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr<sp/>=<sp/>strchr(buf,<sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ptr)<sp/>{</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num;</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>separator[4];</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(5<sp/><sp/>==<sp/>sscanf(ptr,<sp/></highlight><highlight class="stringliteral">&quot;%c%c%c%u%c&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;separator[0],</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;separator[1],</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;separator[2],</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;num,</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;separator[3]))<sp/>{</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>sep1<sp/>=<sp/>separator[0];</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>four<sp/>separators<sp/>should<sp/>be<sp/>identical,<sp/>or<sp/>else<sp/>this<sp/>is<sp/>an<sp/>oddly</highlight></codeline>
<codeline lineno="1594"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>formatted<sp/>reply<sp/>and<sp/>we<sp/>bail<sp/>out<sp/>immediately.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=1;<sp/>i&lt;4;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(separator[i]<sp/>!=<sp/>sep1)<sp/>{</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr=NULL;<sp/></highlight><highlight class="comment">/*<sp/>set<sp/>to<sp/>NULL<sp/>to<sp/>signal<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ptr)<sp/>{</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newport<sp/>=<sp/>num;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>should<sp/>use<sp/>the<sp/>same<sp/>host<sp/>we<sp/>already<sp/>are<sp/>connected<sp/>to<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newhostp<sp/>=<sp/>conn-&gt;name;</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr=NULL;</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ptr)<sp/>{</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;Weirdly<sp/>formatted<sp/>EPSV<sp/>reply&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_WEIRD_PASV_REPLY;</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_CANT_RECONNECT;</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;change.proxy<sp/>&amp;&amp;<sp/>*data-&gt;change.proxy)<sp/>{</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1621"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>is<sp/>a<sp/>tunnel<sp/>through<sp/>a<sp/>http<sp/>proxy<sp/>and<sp/>we<sp/>need<sp/>to<sp/>connect<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="1622"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>proxy<sp/>again<sp/>here.</highlight></codeline>
<codeline lineno="1623"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1624"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>We<sp/>don&apos;t<sp/>want<sp/>to<sp/>rely<sp/>on<sp/>a<sp/>former<sp/>host<sp/>lookup<sp/>that<sp/>might&apos;ve<sp/>expired</highlight></codeline>
<codeline lineno="1625"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>now,<sp/>instead<sp/>we<sp/>remake<sp/>the<sp/>lookup<sp/>here<sp/>and<sp/>now!</highlight></codeline>
<codeline lineno="1626"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>Curl_resolv(conn,<sp/>conn-&gt;proxyhost,<sp/>conn-&gt;port,<sp/>&amp;addr);</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rc<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>Curl_wait_for_resolv(conn,<sp/>&amp;addr);</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/>connectport<sp/>=</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)conn-&gt;port;<sp/></highlight><highlight class="comment">/*<sp/>we<sp/>connect<sp/>to<sp/>the<sp/>proxy&apos;s<sp/>port<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>normal,<sp/>direct,<sp/>ftp<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>Curl_resolv(conn,<sp/>newhostp,<sp/>newport,<sp/>&amp;addr);</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rc<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>Curl_wait_for_resolv(conn,<sp/>&amp;addr);</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!addr)<sp/>{</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>resolve<sp/>new<sp/>host<sp/>%s:%d&quot;</highlight><highlight class="normal">,<sp/>newhostp,<sp/>newport);</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_CANT_GET_HOST;</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/>connectport<sp/>=<sp/>newport;<sp/></highlight><highlight class="comment">/*<sp/>we<sp/>connect<sp/>to<sp/>the<sp/>remote<sp/>port<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>Curl_connecthost(conn,</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr,</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connectport,</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;conn-&gt;sock[SECONDARYSOCKET],</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;conninfo,</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connected);</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/>Curl_resolv_unlock(data,<sp/>addr);<sp/></highlight><highlight class="comment">/*<sp/>we&apos;re<sp/>done<sp/>using<sp/>this<sp/>address<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1661"><highlight class="comment"><sp/><sp/><sp/>*<sp/>When<sp/>this<sp/>is<sp/>used<sp/>from<sp/>the<sp/>multi<sp/>interface,<sp/>this<sp/>might&apos;ve<sp/>returned<sp/>with</highlight></codeline>
<codeline lineno="1662"><highlight class="comment"><sp/><sp/><sp/>*<sp/>the<sp/>&apos;connected&apos;<sp/>set<sp/>to<sp/>FALSE<sp/>and<sp/>thus<sp/>we<sp/>are<sp/>now<sp/>awaiting<sp/>a<sp/>non-blocking</highlight></codeline>
<codeline lineno="1663"><highlight class="comment"><sp/><sp/><sp/>*<sp/>connect<sp/>to<sp/>connect<sp/>and<sp/>we<sp/>should<sp/>not<sp/>be<sp/>&quot;hanging&quot;<sp/>here<sp/>waiting.</highlight></codeline>
<codeline lineno="1664"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.verbose)</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>just<sp/>dumps<sp/>information<sp/>about<sp/>this<sp/>second<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/>ftp_pasv_verbose(conn,<sp/>conninfo,<sp/>newhostp,<sp/>connectport);</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.tunnel_thru_httpproxy)<sp/>{</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>want<sp/>&quot;seamless&quot;<sp/>FTP<sp/>operations<sp/>through<sp/>HTTP<sp/>proxy<sp/>tunnel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_ConnectHTTPProxyTunnel(conn,<sp/>SECONDARYSOCKET,</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newhostp,<sp/>newport);</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CURLE_OK<sp/>!=<sp/>result)</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="1679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1682"><highlight class="comment"><sp/>*<sp/>Curl_ftp_nextconnect()</highlight></codeline>
<codeline lineno="1683"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1684"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>shall<sp/>be<sp/>called<sp/>when<sp/>the<sp/>second<sp/>FTP<sp/>connection<sp/>has<sp/>been</highlight></codeline>
<codeline lineno="1685"><highlight class="comment"><sp/>*<sp/>established<sp/>and<sp/>is<sp/>confirmed<sp/>connected.</highlight></codeline>
<codeline lineno="1686"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal">CURLcode<sp/>Curl_ftp_nextconnect(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn)</highlight></codeline>
<codeline lineno="1689"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data=conn-&gt;data;</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf<sp/>=<sp/>data-&gt;state.buffer;<sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>our<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/>CURLcode<sp/>result;</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/>ssize_t<sp/>nread;</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ftpcode;<sp/></highlight><highlight class="comment">/*<sp/>for<sp/>ftp<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>ftp<sp/>struct<sp/>is<sp/>already<sp/>inited<sp/>in<sp/>Curl_ftp_connect()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_f_t_p" kindref="compound">FTP</ref><sp/>*ftp<sp/>=<sp/>conn-&gt;proto.ftp;</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/>curl_off_t<sp/>*bytecountp<sp/>=<sp/>ftp-&gt;bytecountp;</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.upload)<sp/>{</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>type<sp/>to<sp/>binary<sp/>(unless<sp/>specified<sp/>ASCII)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>ftp_transfertype(conn,<sp/>data-&gt;set.ftp_ascii);</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>any<sp/>PREQUOTE<sp/>strings<sp/>after<sp/>transfer<sp/>type<sp/>is<sp/>set?<sp/>(Wesley<sp/>Laxton)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.prequote)<sp/>{</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((result<sp/>=<sp/>ftp_sendquote(conn,<sp/>data-&gt;set.prequote))<sp/>!=<sp/>CURLE_OK)</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;resume_from)<sp/>{</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we&apos;re<sp/>about<sp/>to<sp/>continue<sp/>the<sp/>uploading<sp/>of<sp/>a<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1.<sp/>get<sp/>already<sp/>existing<sp/>file&apos;s<sp/>size.<sp/>We<sp/>use<sp/>the<sp/>SIZE</highlight></codeline>
<codeline lineno="1716"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command<sp/>for<sp/>this<sp/>which<sp/>may<sp/>not<sp/>exist<sp/>in<sp/>the<sp/>server!</highlight></codeline>
<codeline lineno="1717"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>SIZE<sp/>command<sp/>is<sp/>not<sp/>in<sp/>RFC959.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>2.<sp/>This<sp/>used<sp/>to<sp/>set<sp/>REST.<sp/>But<sp/>since<sp/>we<sp/>can<sp/>do<sp/>append,<sp/>we</highlight></codeline>
<codeline lineno="1720"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>don&apos;t<sp/>another<sp/>ftp<sp/>command.<sp/>We<sp/>just<sp/>skip<sp/>the<sp/>source<sp/>file</highlight></codeline>
<codeline lineno="1721"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>and<sp/>then<sp/>we<sp/>APPEND<sp/>the<sp/>rest<sp/>on<sp/>the<sp/>file<sp/>instead<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>3.<sp/>pass<sp/>file-size<sp/>number<sp/>of<sp/>bytes<sp/>in<sp/>the<sp/>source<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>4.<sp/>lower<sp/>the<sp/>infilesize<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>=&gt;<sp/>transfer<sp/>as<sp/>usual<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;resume_from<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>could&apos;ve<sp/>got<sp/>a<sp/>specified<sp/>offset<sp/>from<sp/>the<sp/>command<sp/>line,</highlight></codeline>
<codeline lineno="1729"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>but<sp/>now<sp/>we<sp/>know<sp/>we<sp/>didn&apos;t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curl_off_t<sp/>gottensize;</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CURLE_OK<sp/>!=<sp/>ftp_getsize(conn,<sp/>ftp-&gt;file,<sp/>&amp;gottensize))<sp/>{</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>get<sp/>remote<sp/>file<sp/>size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_COULDNT_GET_SIZE;</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;resume_from<sp/>=<sp/>gottensize;</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;resume_from)<sp/>{</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>do<sp/>we<sp/>still<sp/>game?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curl_off_t<sp/>passed=0;</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>append<sp/>instead<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.ftp_append<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now,<sp/>let&apos;s<sp/>read<sp/>off<sp/>the<sp/>proper<sp/>amount<sp/>of<sp/>bytes<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="1746"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input.<sp/>If<sp/>we<sp/>knew<sp/>it<sp/>was<sp/>a<sp/>proper<sp/>file<sp/>we<sp/>could&apos;ve<sp/>just</highlight></codeline>
<codeline lineno="1747"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fseek()ed<sp/>but<sp/>we<sp/>only<sp/>have<sp/>a<sp/>stream<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curl_off_t<sp/>readthisamountnow<sp/>=<sp/>(conn-&gt;resume_from<sp/>-<sp/>passed);</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curl_off_t<sp/>actuallyread;</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(readthisamountnow<sp/>&gt;<sp/>BUFSIZE)</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readthisamountnow<sp/>=<sp/>BUFSIZE;</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actuallyread<sp/>=</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;fread(data-&gt;state.buffer,<sp/>1,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)readthisamountnow,</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;fread_in);</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>passed<sp/>+=<sp/>actuallyread;</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(actuallyread<sp/>!=<sp/>readthisamountnow)<sp/>{</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>only<sp/>read<sp/>%&quot;</highlight><highlight class="normal"><sp/>FORMAT_OFF_T</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>bytes<sp/>from<sp/>the<sp/>input&quot;</highlight><highlight class="normal">,<sp/>passed);</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_COULDNT_USE_REST;</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(passed<sp/>!=<sp/>conn-&gt;resume_from);</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now,<sp/>decrease<sp/>the<sp/>size<sp/>of<sp/>the<sp/>read<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.infilesize&gt;0)<sp/>{</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.infilesize<sp/>-=<sp/>conn-&gt;resume_from;</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.infilesize<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>already<sp/>completely<sp/>uploaded\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>data<sp/>to<sp/>transfer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result=Curl_Transfer(conn,<sp/>-1,<sp/>-1,<sp/>FALSE,<sp/>NULL,<sp/>-1,<sp/>NULL);</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>no_transfer<sp/>so<sp/>that<sp/>we<sp/>won&apos;t<sp/>get<sp/>any<sp/>error<sp/>in</highlight></codeline>
<codeline lineno="1779"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Curl_ftp_done()<sp/>because<sp/>we<sp/>didn&apos;t<sp/>transfer<sp/>anything!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ftp-&gt;no_transfer<sp/>=<sp/>TRUE;<sp/></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we&apos;ve<sp/>passed,<sp/>proceed<sp/>as<sp/>normal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>everything<sp/>on<sp/>data-&gt;state.in<sp/>to<sp/>the<sp/>socket<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.ftp_append)<sp/>{</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>append<sp/>onto<sp/>the<sp/>file<sp/>instead<sp/>of<sp/>rewriting<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FTPSENDF(conn,<sp/></highlight><highlight class="stringliteral">&quot;APPE<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>ftp-&gt;file);</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FTPSENDF(conn,<sp/></highlight><highlight class="stringliteral">&quot;STOR<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>ftp-&gt;file);</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_GetFTPResponse(&amp;nread,<sp/>conn,<sp/>&amp;ftpcode);</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ftpcode&gt;=400)<sp/>{</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>FTP<sp/>upload:%s&quot;</highlight><highlight class="normal">,<sp/>buf+3);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>oops,<sp/>we<sp/>never<sp/>close<sp/>the<sp/>sockets!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_COULDNT_STOR_FILE;</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.ftp_use_port)<sp/>{</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PORT<sp/>means<sp/>we<sp/>are<sp/>now<sp/>awaiting<sp/>the<sp/>server<sp/>to<sp/>connect<sp/>to<sp/>us.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>AllowServerConnect(conn);</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>result<sp/>)</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;ssl[SECONDARYSOCKET].use)<sp/>{</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>since<sp/>we<sp/>only<sp/>have<sp/>a<sp/>plaintext<sp/>TCP<sp/>connection<sp/>here,<sp/>we<sp/>must<sp/>now</highlight></codeline>
<codeline lineno="1817"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>do<sp/>the<sp/>TLS<sp/>stuff<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;Doing<sp/>the<sp/>SSL/TLS<sp/>handshake<sp/>on<sp/>the<sp/>data<sp/>stream\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_SSLConnect(conn,<sp/>SECONDARYSOCKET);</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/>*bytecountp=0;</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>When<sp/>we<sp/>know<sp/>we&apos;re<sp/>uploading<sp/>a<sp/>specified<sp/>file,<sp/>we<sp/>can<sp/>get<sp/>the<sp/>file</highlight></codeline>
<codeline lineno="1827"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>prior<sp/>to<sp/>the<sp/>actual<sp/>upload.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/>Curl_pgrsSetUploadSize(data,<sp/>data-&gt;set.infilesize);</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_Transfer(conn,<sp/>-1,<sp/>-1,<sp/>FALSE,<sp/>NULL,<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>download<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SECONDARYSOCKET,<sp/>bytecountp);</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!data-&gt;set.no_body)<sp/>{</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retrieve<sp/>file<sp/>or<sp/>directory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dirlist=FALSE;</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/>curl_off_t<sp/>downloadsize=-1;</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;bits.use_range<sp/>&amp;&amp;<sp/>conn-&gt;range)<sp/>{</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>curl_off_t<sp/>from,<sp/>to;</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>curl_off_t<sp/>totalsize=-1;</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr;</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr2;</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>from=strtoofft(conn-&gt;range,<sp/>&amp;ptr,<sp/>0);</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(ptr<sp/>&amp;&amp;<sp/>*ptr<sp/>&amp;&amp;<sp/>(isspace((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)*ptr)<sp/>||<sp/>(*ptr==</highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>to=strtoofft(ptr,<sp/>&amp;ptr2,<sp/>0);</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ptr<sp/>==<sp/>ptr2)<sp/>{</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>didn&apos;t<sp/>get<sp/>any<sp/>digit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to=-1;</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((-1<sp/>==<sp/>to)<sp/>&amp;&amp;<sp/>(from&gt;=0))<sp/>{</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>X<sp/>-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;resume_from<sp/>=<sp/>from;</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;FTP<sp/>RANGE<sp/>%&quot;</highlight><highlight class="normal"><sp/>FORMAT_OFF_T<sp/></highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>end<sp/>of<sp/>file\n&quot;</highlight><highlight class="normal">,<sp/>from);</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(from<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>-Y<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalsize<sp/>=<sp/>-from;</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;maxdownload<sp/>=<sp/>-from;</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;resume_from<sp/>=<sp/>from;</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;FTP<sp/>RANGE<sp/>the<sp/>last<sp/>%&quot;</highlight><highlight class="normal"><sp/>FORMAT_OFF_T<sp/></highlight><highlight class="stringliteral">&quot;<sp/>bytes\n&quot;</highlight><highlight class="normal">,<sp/>totalsize);</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>X-Y<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalsize<sp/>=<sp/>to-from;</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;maxdownload<sp/>=<sp/>totalsize+1;<sp/></highlight><highlight class="comment">/*<sp/>include<sp/>the<sp/>last<sp/>mentioned<sp/>byte<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;resume_from<sp/>=<sp/>from;</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;FTP<sp/>RANGE<sp/>from<sp/>%&quot;</highlight><highlight class="normal"><sp/>FORMAT_OFF_T</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>getting<sp/>%&quot;</highlight><highlight class="normal"><sp/>FORMAT_OFF_T<sp/></highlight><highlight class="stringliteral">&quot;<sp/>bytes\n&quot;</highlight><highlight class="normal">,<sp/>from,<sp/>conn-&gt;maxdownload);</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;range-download<sp/>from<sp/>%&quot;</highlight><highlight class="normal"><sp/>FORMAT_OFF_T</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>%&quot;</highlight><highlight class="normal"><sp/>FORMAT_OFF_T<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>totally<sp/>%&quot;</highlight><highlight class="normal"><sp/>FORMAT_OFF_T<sp/></highlight><highlight class="stringliteral">&quot;<sp/>bytes\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from,<sp/>to,<sp/>conn-&gt;maxdownload);</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ftp-&gt;dont_check<sp/>=<sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>dont<sp/>check<sp/>for<sp/>successful<sp/>transfer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((data-&gt;set.ftp_list_only)<sp/>||<sp/>!ftp-&gt;file)<sp/>{</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>specified<sp/>path<sp/>ends<sp/>with<sp/>a<sp/>slash,<sp/>and<sp/>therefore<sp/>we<sp/>think<sp/>this</highlight></codeline>
<codeline lineno="1884"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>a<sp/>directory<sp/>that<sp/>is<sp/>requested,<sp/>use<sp/>LIST.<sp/>But<sp/>before<sp/>that<sp/>we</highlight></codeline>
<codeline lineno="1885"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>need<sp/>to<sp/>set<sp/>ASCII<sp/>transfer<sp/>mode.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dirlist<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>type<sp/>to<sp/>ASCII<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>ftp_transfertype(conn,<sp/>TRUE<sp/></highlight><highlight class="comment">/*<sp/>ASCII<sp/>enforced<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>this<sp/>output<sp/>is<sp/>to<sp/>be<sp/>machine-parsed,<sp/>the<sp/>NLST<sp/>command<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="1894"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>better<sp/>used<sp/>since<sp/>the<sp/>LIST<sp/>command<sp/>output<sp/>is<sp/>not<sp/>specified<sp/>or</highlight></codeline>
<codeline lineno="1895"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>standard<sp/>in<sp/>any<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FTPSENDF(conn,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.customrequest?data-&gt;set.customrequest:</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(data-&gt;set.ftp_list_only?</highlight><highlight class="stringliteral">&quot;NLST&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;LIST&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>curl_off_t<sp/>foundsize;</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>type<sp/>to<sp/>binary<sp/>(unless<sp/>specified<sp/>ASCII)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>ftp_transfertype(conn,<sp/>data-&gt;set.ftp_ascii);</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"></highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>any<sp/>PREQUOTE<sp/>strings<sp/>after<sp/>transfer<sp/>type<sp/>is<sp/>set?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.prequote)<sp/>{</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((result<sp/>=<sp/>ftp_sendquote(conn,<sp/>data-&gt;set.prequote))<sp/>!=<sp/>CURLE_OK)</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Attempt<sp/>to<sp/>get<sp/>the<sp/>size,<sp/>it&apos;ll<sp/>be<sp/>useful<sp/>in<sp/>some<sp/>cases:<sp/>for<sp/>resumed</highlight></codeline>
<codeline lineno="1916"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>downloads<sp/>and<sp/>when<sp/>talking<sp/>to<sp/>servers<sp/>that<sp/>don&apos;t<sp/>give<sp/>away<sp/>the<sp/>size</highlight></codeline>
<codeline lineno="1917"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>RETR<sp/>response<sp/>line.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>ftp_getsize(conn,<sp/>ftp-&gt;file,<sp/>&amp;foundsize);</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CURLE_OK<sp/>==<sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data-&gt;set.max_filesize<sp/>&amp;&amp;<sp/>foundsize<sp/>&gt;<sp/>data-&gt;set.max_filesize)<sp/>{</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;Maximum<sp/>file<sp/>size<sp/>exceeded&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FILESIZE_EXCEEDED;</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>downloadsize<sp/>=<sp/>foundsize;</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;resume_from)<sp/>{</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Daniel:<sp/>(August<sp/>4,<sp/>1999)</highlight></codeline>
<codeline lineno="1930"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1931"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>We<sp/>start<sp/>with<sp/>trying<sp/>to<sp/>use<sp/>the<sp/>SIZE<sp/>command<sp/>to<sp/>figure<sp/>out<sp/>the<sp/>size</highlight></codeline>
<codeline lineno="1932"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>of<sp/>the<sp/>file<sp/>we&apos;re<sp/>gonna<sp/>get.<sp/>If<sp/>we<sp/>can<sp/>get<sp/>the<sp/>size,<sp/>this<sp/>is<sp/>by<sp/>far</highlight></codeline>
<codeline lineno="1933"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>best<sp/>way<sp/>to<sp/>know<sp/>if<sp/>we&apos;re<sp/>trying<sp/>to<sp/>resume<sp/>beyond<sp/>the<sp/>EOF.</highlight></codeline>
<codeline lineno="1934"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1935"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Daniel,<sp/>November<sp/>28,<sp/>2001.<sp/>We<sp/>*always*<sp/>get<sp/>the<sp/>size<sp/>on<sp/>downloads</highlight></codeline>
<codeline lineno="1936"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>now,<sp/>so<sp/>it<sp/>is<sp/>done<sp/>before<sp/>this<sp/>even<sp/>when<sp/>not<sp/>doing<sp/>resumes.<sp/>I<sp/>saved</highlight></codeline>
<codeline lineno="1937"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>comment<sp/>above<sp/>for<sp/>nostalgical<sp/>reasons!<sp/>;-)</highlight></codeline>
<codeline lineno="1938"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CURLE_OK<sp/>!=<sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;ftp<sp/>server<sp/>doesn&apos;t<sp/>support<sp/>SIZE\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>couldn&apos;t<sp/>get<sp/>the<sp/>size<sp/>and<sp/>therefore<sp/>we<sp/>can&apos;t<sp/>know<sp/>if<sp/>there</highlight></codeline>
<codeline lineno="1942"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>really<sp/>is<sp/>a<sp/>part<sp/>of<sp/>the<sp/>file<sp/>left<sp/>to<sp/>get,<sp/>although<sp/>the<sp/>server</highlight></codeline>
<codeline lineno="1943"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>just<sp/>close<sp/>the<sp/>connection<sp/>when<sp/>we<sp/>start<sp/>the<sp/>connection<sp/>so<sp/>it</highlight></codeline>
<codeline lineno="1944"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>won&apos;t<sp/>cause<sp/>us<sp/>any<sp/>harm,<sp/>just<sp/>not<sp/>make<sp/>us<sp/>exit<sp/>as<sp/>nicely.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>got<sp/>a<sp/>file<sp/>size<sp/>report,<sp/>so<sp/>we<sp/>check<sp/>that<sp/>there<sp/>actually<sp/>is<sp/>a</highlight></codeline>
<codeline lineno="1948"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part<sp/>of<sp/>the<sp/>file<sp/>left<sp/>to<sp/>get,<sp/>or<sp/>else<sp/>we<sp/>go<sp/>home.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;resume_from&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We&apos;re<sp/>supposed<sp/>to<sp/>download<sp/>the<sp/>last<sp/>abs(from)<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(foundsize<sp/>&lt;<sp/>-conn-&gt;resume_from)<sp/>{</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;Offset<sp/>(%&quot;</highlight><highlight class="normal"><sp/>FORMAT_OFF_T</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;)<sp/>was<sp/>beyond<sp/>file<sp/>size<sp/>(%&quot;</highlight><highlight class="normal"><sp/>FORMAT_OFF_T<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;resume_from,<sp/>foundsize);</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_BAD_DOWNLOAD_RESUME;</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>to<sp/>size<sp/>to<sp/>download<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>downloadsize<sp/>=<sp/>-conn-&gt;resume_from;</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>download<sp/>from<sp/>where?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;resume_from<sp/>=<sp/>foundsize<sp/>-<sp/>downloadsize;</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(foundsize<sp/>&lt;<sp/>conn-&gt;resume_from)<sp/>{</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;Offset<sp/>(%&quot;</highlight><highlight class="normal"><sp/>FORMAT_OFF_T</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;)<sp/>was<sp/>beyond<sp/>file<sp/>size<sp/>(%&quot;</highlight><highlight class="normal"><sp/>FORMAT_OFF_T<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;resume_from,<sp/>foundsize);</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_BAD_DOWNLOAD_RESUME;</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>store<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>we<sp/>are<sp/>expected<sp/>to<sp/>download<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>downloadsize<sp/>=<sp/>foundsize-conn-&gt;resume_from;</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"></highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(downloadsize<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>data<sp/>to<sp/>transfer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result=Curl_Transfer(conn,<sp/>-1,<sp/>-1,<sp/>FALSE,<sp/>NULL,<sp/>-1,<sp/>NULL);</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>already<sp/>completely<sp/>downloaded\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"></highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>no_transfer<sp/>so<sp/>that<sp/>we<sp/>won&apos;t<sp/>get<sp/>any<sp/>error<sp/>in<sp/>Curl_ftp_done()</highlight></codeline>
<codeline lineno="1980"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>because<sp/>we<sp/>didn&apos;t<sp/>transfer<sp/>the<sp/>any<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ftp-&gt;no_transfer<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>resume<sp/>file<sp/>transfer<sp/>offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;Instructs<sp/>server<sp/>to<sp/>resume<sp/>from<sp/>offset<sp/>%&quot;</highlight><highlight class="normal"><sp/>FORMAT_OFF_T</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;resume_from);</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"></highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FTPSENDF(conn,<sp/></highlight><highlight class="stringliteral">&quot;REST<sp/>%&quot;</highlight><highlight class="normal"><sp/>FORMAT_OFF_T,<sp/>conn-&gt;resume_from);</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_GetFTPResponse(&amp;nread,<sp/>conn,<sp/>&amp;ftpcode);</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"></highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ftpcode<sp/>!=<sp/>350)<sp/>{</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>use<sp/>REST:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>buf+4);</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_COULDNT_USE_REST;</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"></highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FTPSENDF(conn,<sp/></highlight><highlight class="stringliteral">&quot;RETR<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>ftp-&gt;file);</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_GetFTPResponse(&amp;nread,<sp/>conn,<sp/>&amp;ftpcode);</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"></highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((ftpcode<sp/>==<sp/>150)<sp/>||<sp/>(ftpcode<sp/>==<sp/>125))<sp/>{</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2012"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A;</highlight></codeline>
<codeline lineno="2013"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>150<sp/>Opening<sp/>BINARY<sp/>mode<sp/>data<sp/>connection<sp/>for<sp/>/etc/passwd<sp/>(2241</highlight></codeline>
<codeline lineno="2014"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes).<sp/><sp/>(ok,<sp/>the<sp/>file<sp/>is<sp/>being<sp/>transfered)</highlight></codeline>
<codeline lineno="2015"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2016"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B:</highlight></codeline>
<codeline lineno="2017"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>150<sp/>Opening<sp/>ASCII<sp/>mode<sp/>data<sp/>connection<sp/>for<sp/>/bin/ls<sp/></highlight></codeline>
<codeline lineno="2018"><highlight class="comment"></highlight></codeline>
<codeline lineno="2019"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C:</highlight></codeline>
<codeline lineno="2020"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>150<sp/>ASCII<sp/>data<sp/>connection<sp/>for<sp/>/bin/ls<sp/>(137.167.104.91,37445)<sp/>(0<sp/>bytes).</highlight></codeline>
<codeline lineno="2021"><highlight class="comment"></highlight></codeline>
<codeline lineno="2022"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D:</highlight></codeline>
<codeline lineno="2023"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>150<sp/>Opening<sp/>ASCII<sp/>mode<sp/>data<sp/>connection<sp/>for<sp/>/linux/fisk/kpanelrc<sp/>(0.0.0.0,0)<sp/>(545<sp/>bytes).</highlight></codeline>
<codeline lineno="2024"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2025"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E:</highlight></codeline>
<codeline lineno="2026"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>125<sp/>Data<sp/>connection<sp/>already<sp/>open;<sp/>Transfer<sp/>starting.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>curl_off_t<sp/>size=-1;<sp/></highlight><highlight class="comment">/*<sp/>default<sp/>unknown<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="normal"></highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2032"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>It<sp/>appears<sp/>that<sp/>there<sp/>are<sp/>FTP-servers<sp/>that<sp/>return<sp/>size<sp/>0<sp/>for<sp/>files</highlight></codeline>
<codeline lineno="2033"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>when<sp/>SIZE<sp/>is<sp/>used<sp/>on<sp/>the<sp/>file<sp/>while<sp/>being<sp/>in<sp/>BINARY<sp/>mode.<sp/>To<sp/>work</highlight></codeline>
<codeline lineno="2034"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>around<sp/>that<sp/>(stupid)<sp/>behavior,<sp/>we<sp/>attempt<sp/>to<sp/>parse<sp/>the<sp/>RETR<sp/>response</highlight></codeline>
<codeline lineno="2035"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>even<sp/>if<sp/>the<sp/>SIZE<sp/>returned<sp/>size<sp/>zero.</highlight></codeline>
<codeline lineno="2036"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2037"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Debugging<sp/>help<sp/>from<sp/>Salvatore<sp/>Sorrentino<sp/>on<sp/>February<sp/>26,<sp/>2003.</highlight></codeline>
<codeline lineno="2038"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2039"><highlight class="normal"></highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!dirlist<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!data-&gt;set.ftp_ascii<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(downloadsize<sp/>&lt;<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2044"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>It<sp/>seems<sp/>directory<sp/>listings<sp/>either<sp/>don&apos;t<sp/>show<sp/>the<sp/>size<sp/>or<sp/>very</highlight></codeline>
<codeline lineno="2045"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>often<sp/>uses<sp/>size<sp/>0<sp/>anyway.<sp/>ASCII<sp/>transfers<sp/>may<sp/>very<sp/>well<sp/>turn<sp/>out</highlight></codeline>
<codeline lineno="2046"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>that<sp/>the<sp/>transfered<sp/>amount<sp/>of<sp/>data<sp/>is<sp/>not<sp/>the<sp/>same<sp/>as<sp/>this<sp/>line</highlight></codeline>
<codeline lineno="2047"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>tells,<sp/>why<sp/>using<sp/>this<sp/>number<sp/>in<sp/>those<sp/>cases<sp/>only<sp/>confuses<sp/>us.</highlight></codeline>
<codeline lineno="2048"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2049"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Example<sp/>D<sp/>above<sp/>makes<sp/>this<sp/>parsing<sp/>a<sp/>little<sp/>tricky<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes;</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes=strstr(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>bytes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bytes--)<sp/>{</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>in=bytes-buf;</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>a<sp/>hint<sp/>there<sp/>is<sp/>size<sp/>information<sp/>in<sp/>there!<sp/>;-)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(--in)<sp/>{</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>scan<sp/>for<sp/>the<sp/>parenthesis<sp/>and<sp/>break<sp/>there<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal"><sp/>==<sp/>*bytes)</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>only<sp/>skip<sp/>digits,<sp/>or<sp/>else<sp/>we&apos;re<sp/>in<sp/>deep<sp/>trouble<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isdigit((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)*bytes))<sp/>{</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes=NULL;</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>one<sp/>more<sp/>estep<sp/>backwards<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes--;</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>only<sp/>if<sp/>we<sp/>have<sp/>nothing<sp/>but<sp/>digits:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bytes++)<sp/>{</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>number!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>strtoofft(bytes,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(downloadsize<sp/>&gt;<sp/>-1)</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>downloadsize;</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"></highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.ftp_use_port)<sp/>{</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>AllowServerConnect(conn);</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>result<sp/>)</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;ssl[SECONDARYSOCKET].use)<sp/>{</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>since<sp/>we<sp/>only<sp/>have<sp/>a<sp/>plaintext<sp/>TCP<sp/>connection<sp/>here,<sp/>we<sp/>must<sp/>now</highlight></codeline>
<codeline lineno="2086"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do<sp/>the<sp/>TLS<sp/>stuff<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;Doing<sp/>the<sp/>SSL/TLS<sp/>handshake<sp/>on<sp/>the<sp/>data<sp/>stream\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_SSLConnect(conn,<sp/>SECONDARYSOCKET);</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>&gt;<sp/>conn-&gt;maxdownload<sp/>&amp;&amp;<sp/>conn-&gt;maxdownload<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>conn-&gt;size<sp/>=<sp/>conn-&gt;maxdownload;</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"></highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;Getting<sp/>file<sp/>with<sp/>size:<sp/>%&quot;</highlight><highlight class="normal"><sp/>FORMAT_OFF_T<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>size);</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FTP<sp/>download:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result=Curl_Transfer(conn,<sp/>SECONDARYSOCKET,<sp/>size,<sp/>FALSE,</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytecountp,</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1,<sp/>NULL);<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>upload<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dirlist<sp/>&amp;&amp;<sp/>(ftpcode<sp/>==<sp/>450))<sp/>{</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>simply<sp/>no<sp/>matching<sp/>files<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ftp-&gt;no_transfer<sp/>=<sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>think<sp/>we<sp/>should<sp/>download<sp/>anything<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>buf+4);</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FTP_COULDNT_RETR_FILE;</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>transfer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="2120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"></highlight></codeline>
<codeline lineno="2122"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="2123"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2124"><highlight class="comment"><sp/>*<sp/>ftp_perform()</highlight></codeline>
<codeline lineno="2125"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2126"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>the<sp/>actual<sp/>DO<sp/>function<sp/>for<sp/>FTP.<sp/>Get<sp/>a<sp/>file/directory<sp/>according<sp/>to</highlight></codeline>
<codeline lineno="2127"><highlight class="comment"><sp/>*<sp/>the<sp/>options<sp/>previously<sp/>setup.</highlight></codeline>
<codeline lineno="2128"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2129"><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal">CURLcode<sp/>ftp_perform(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn,</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*connected)<sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>the<sp/>TCP<sp/>connect<sp/>status<sp/>after</highlight></codeline>
<codeline lineno="2133"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PASV<sp/>/<sp/>PORT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>FTP<sp/>and<sp/>no<sp/>proxy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/>CURLcode<sp/>result=CURLE_OK;</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data=conn-&gt;data;</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf<sp/>=<sp/>data-&gt;state.buffer;<sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>our<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2139"><highlight class="normal"></highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>ftp<sp/>struct<sp/>is<sp/>already<sp/>inited<sp/>in<sp/>Curl_ftp_connect()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_f_t_p" kindref="compound">FTP</ref><sp/>*ftp<sp/>=<sp/>conn-&gt;proto.ftp;</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"></highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>any<sp/>QUOTE<sp/>strings?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.quote)<sp/>{</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((result<sp/>=<sp/>ftp_sendquote(conn,<sp/>data-&gt;set.quote))<sp/>!=<sp/>CURLE_OK)</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"></highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>a<sp/>re-used<sp/>connection.<sp/>Since<sp/>we<sp/>change<sp/>directory<sp/>to<sp/>where<sp/>the</highlight></codeline>
<codeline lineno="2150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>transfer<sp/>is<sp/>taking<sp/>place,<sp/>we<sp/>must<sp/>now<sp/>get<sp/>back<sp/>to<sp/>the<sp/>original<sp/>dir</highlight></codeline>
<codeline lineno="2151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>where<sp/>we<sp/>ended<sp/>up<sp/>after<sp/>login:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(conn-&gt;bits.reuse<sp/>&amp;&amp;<sp/>ftp-&gt;entrypath)<sp/>{</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((result<sp/>=<sp/>ftp_cwd_and_mkd(conn,<sp/>ftp-&gt;entrypath))<sp/>!=<sp/>CURLE_OK)</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;<sp/></highlight><highlight class="comment">/*<sp/>counter<sp/>for<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>ftp-&gt;dirs[i];<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>RFC<sp/>1738<sp/>says<sp/>empty<sp/>components<sp/>should<sp/>be<sp/>respected<sp/>too,<sp/>but</highlight></codeline>
<codeline lineno="2161"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>is<sp/>plain<sp/>stupid<sp/>since<sp/>CWD<sp/>can&apos;t<sp/>be<sp/>used<sp/>with<sp/>an<sp/>empty<sp/>argument<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((result<sp/>=<sp/>ftp_cwd_and_mkd(conn,<sp/>ftp-&gt;dirs[i]))<sp/>!=<sp/>CURLE_OK)</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"></highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Requested<sp/>time<sp/>of<sp/>file<sp/>or<sp/>time-depended<sp/>transfer?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((data-&gt;set.get_filetime<sp/>||<sp/>data-&gt;set.timecondition)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ftp-&gt;file)<sp/>{</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>ftp_getfiletime(conn,<sp/>ftp-&gt;file);</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>result<sp/>)</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLE_FTP_COULDNT_RETR_FILE:</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLE_OK:</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.timecondition)<sp/>{</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((data-&gt;info.filetime<sp/>&gt;<sp/>0)<sp/>&amp;&amp;<sp/>(data-&gt;set.timevalue<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(data-&gt;set.timecondition)<sp/>{</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURL_TIMECOND_IFMODSINCE:</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;info.filetime<sp/>&lt;<sp/>data-&gt;set.timevalue)<sp/>{</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>requested<sp/>document<sp/>is<sp/>not<sp/>new<sp/>enough\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ftp-&gt;no_transfer<sp/>=<sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>mark<sp/>this<sp/>to<sp/>not<sp/>transfer<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURL_TIMECOND_IFUNMODSINCE:</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;info.filetime<sp/>&gt;<sp/>data-&gt;set.timevalue)<sp/>{</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>requested<sp/>document<sp/>is<sp/>not<sp/>old<sp/>enough\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ftp-&gt;no_transfer<sp/>=<sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>mark<sp/>this<sp/>to<sp/>not<sp/>transfer<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>switch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;Skipping<sp/>time<sp/>comparison\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>switch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"></highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>have<sp/>selected<sp/>NOBODY<sp/>and<sp/>HEADER,<sp/>it<sp/>means<sp/>that<sp/>we<sp/>only<sp/>want<sp/>file</highlight></codeline>
<codeline lineno="2206"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>information.<sp/>Which<sp/>in<sp/>FTP<sp/>can&apos;t<sp/>be<sp/>much<sp/>more<sp/>than<sp/>the<sp/>file<sp/>size<sp/>and</highlight></codeline>
<codeline lineno="2207"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>date.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.no_body<sp/>&amp;&amp;<sp/>data-&gt;set.include_header<sp/>&amp;&amp;<sp/>ftp-&gt;file)<sp/>{</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>SIZE<sp/>command<sp/>is<sp/>_not_<sp/>RFC<sp/>959<sp/>specified,<sp/>and<sp/>therefor<sp/>many<sp/>servers</highlight></codeline>
<codeline lineno="2210"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>may<sp/>not<sp/>support<sp/>it!<sp/>It<sp/>is<sp/>however<sp/>the<sp/>only<sp/>way<sp/>we<sp/>have<sp/>to<sp/>get<sp/>a<sp/>file&apos;s</highlight></codeline>
<codeline lineno="2211"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/>curl_off_t<sp/>filesize;</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/>ssize_t<sp/>nread;</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ftpcode;</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"></highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/>ftp-&gt;no_transfer<sp/>=<sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>this<sp/>means<sp/>no<sp/>actual<sp/>transfer<sp/>is<sp/>made<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Some<sp/>servers<sp/>return<sp/>different<sp/>sizes<sp/>for<sp/>different<sp/>modes,<sp/>and<sp/>thus<sp/>we</highlight></codeline>
<codeline lineno="2219"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>must<sp/>set<sp/>the<sp/>proper<sp/>type<sp/>before<sp/>we<sp/>check<sp/>the<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>ftp_transfertype(conn,<sp/>data-&gt;set.ftp_ascii);</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"></highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>failing<sp/>to<sp/>get<sp/>size<sp/>is<sp/>not<sp/>a<sp/>serious<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>ftp_getsize(conn,<sp/>ftp-&gt;file,<sp/>&amp;filesize);</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"></highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CURLE_OK<sp/>==<sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;Content-Length:<sp/>%&quot;</highlight><highlight class="normal"><sp/>FORMAT_OFF_T<sp/></highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">,<sp/>filesize);</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_client_write(data,<sp/>CLIENTWRITE_BOTH,<sp/>buf,<sp/>0);</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"></highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Determine<sp/>if<sp/>server<sp/>can<sp/>respond<sp/>to<sp/>REST<sp/>command<sp/>and<sp/>therefore</highlight></codeline>
<codeline lineno="2235"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>whether<sp/>it<sp/>can<sp/>do<sp/>a<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/>FTPSENDF(conn,<sp/></highlight><highlight class="stringliteral">&quot;REST<sp/>0&quot;</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_GetFTPResponse(&amp;nread,<sp/>conn,<sp/>&amp;ftpcode);</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"></highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((CURLE_OK<sp/>==<sp/>result)<sp/>&amp;&amp;<sp/>(ftpcode<sp/>==<sp/>350))<sp/>{</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_client_write(data,<sp/>CLIENTWRITE_BOTH,</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;Accept-ranges:<sp/>bytes\r\n&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"></highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>asked<sp/>for<sp/>a<sp/>time<sp/>of<sp/>the<sp/>file<sp/>and<sp/>we<sp/>actually<sp/>got<sp/>one<sp/>as</highlight></codeline>
<codeline lineno="2247"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>well,<sp/>we<sp/>&quot;emulate&quot;<sp/>a<sp/>HTTP-style<sp/>header<sp/>in<sp/>our<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2248"><highlight class="normal"></highlight></codeline>
<codeline lineno="2249"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_STRFTIME</highlight></codeline>
<codeline lineno="2250"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.get_filetime<sp/>&amp;&amp;<sp/>(data-&gt;info.filetime&gt;=0)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/>*tm;</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>time_t<sp/>clock<sp/>=<sp/>(time_t)data-&gt;info.filetime;</highlight></codeline>
<codeline lineno="2253"><highlight class="normal">#ifdef<sp/>HAVE_GMTIME_R</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>tm<sp/>buffer;</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tm<sp/>=<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>tm<sp/>*)gmtime_r(&amp;clock,<sp/>&amp;buffer);</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="2257"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tm<sp/>=<sp/>gmtime(&amp;clock);</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2259"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>format:<sp/>&quot;Tue,<sp/>15<sp/>Nov<sp/>1994<sp/>12:45:26&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strftime(buf,<sp/>BUFSIZE-1,<sp/></highlight><highlight class="stringliteral">&quot;Last-Modified:<sp/>%a,<sp/>%d<sp/>%b<sp/>%Y<sp/>%H:%M:%S<sp/>GMT\r\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tm);</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_client_write(data,<sp/>CLIENTWRITE_BOTH,<sp/>buf,<sp/>0);</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2267"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.no_body)</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>doesn&apos;t<sp/>really<sp/>transfer<sp/>any<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/>ftp-&gt;no_transfer<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>us<sp/>a<sp/>second<sp/>connection<sp/>up<sp/>and<sp/>connected<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.ftp_use_port)<sp/>{</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>have<sp/>chosen<sp/>to<sp/>use<sp/>the<sp/>PORT<sp/>command<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>ftp_use_port(conn);</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CURLE_OK<sp/>==<sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>have<sp/>the<sp/>data<sp/>connection<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;Ordered<sp/>connect<sp/>of<sp/>the<sp/>data<sp/>stream<sp/>with<sp/>PORT!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*connected<sp/>=<sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>mark<sp/>us<sp/>&quot;still<sp/>connected&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>have<sp/>chosen<sp/>(this<sp/>is<sp/>default)<sp/>to<sp/>use<sp/>the<sp/>PASV<sp/>command<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>ftp_use_pasv(conn,<sp/>connected);</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CURLE_OK<sp/>==<sp/>result<sp/>&amp;&amp;<sp/>*connected)</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;Connected<sp/>the<sp/>data<sp/>stream<sp/>with<sp/>PASV!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"></highlight></codeline>
<codeline lineno="2294"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="2295"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2296"><highlight class="comment"><sp/>*<sp/>Curl_ftp()</highlight></codeline>
<codeline lineno="2297"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2298"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>is<sp/>registered<sp/>as<sp/>&apos;curl_do&apos;<sp/>function.<sp/>It<sp/>decodes<sp/>the<sp/>path</highlight></codeline>
<codeline lineno="2299"><highlight class="comment"><sp/>*<sp/>parts<sp/>etc<sp/>as<sp/>a<sp/>wrapper<sp/>to<sp/>the<sp/>actual<sp/>DO<sp/>function<sp/>(ftp_perform).</highlight></codeline>
<codeline lineno="2300"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2301"><highlight class="comment"><sp/>*<sp/>The<sp/>input<sp/>argument<sp/>is<sp/>already<sp/>checked<sp/>for<sp/>validity.</highlight></codeline>
<codeline lineno="2302"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2303"><highlight class="comment"><sp/>*<sp/>ftp-&gt;ctl_valid<sp/>starts<sp/>out<sp/>as<sp/>FALSE,<sp/>and<sp/>gets<sp/>set<sp/>to<sp/>TRUE<sp/>if<sp/>we<sp/>reach<sp/>the</highlight></codeline>
<codeline lineno="2304"><highlight class="comment"><sp/>*<sp/>end<sp/>of<sp/>the<sp/>function.</highlight></codeline>
<codeline lineno="2305"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2306"><highlight class="normal">CURLcode<sp/>Curl_ftp(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn)</highlight></codeline>
<codeline lineno="2307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/>CURLcode<sp/>retcode=CURLE_OK;</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>connected=0;</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data<sp/>=<sp/>conn-&gt;data;</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_f_t_p" kindref="compound">FTP</ref><sp/>*ftp;</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"></highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*slash_pos;<sp/><sp/></highlight><highlight class="comment">/*<sp/>position<sp/>of<sp/>the<sp/>first<sp/>&apos;/&apos;<sp/>char<sp/>in<sp/>curpos<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cur_pos=conn-&gt;ppath;<sp/></highlight><highlight class="comment">/*<sp/>current<sp/>position<sp/>in<sp/>ppath.<sp/>point<sp/>at<sp/>the<sp/>begin</highlight></codeline>
<codeline lineno="2315"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>next<sp/>path<sp/>component<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>path_part=0;</highlight><highlight class="comment">/*<sp/>current<sp/>path<sp/>component<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2317"><highlight class="normal"></highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>ftp<sp/>struct<sp/>is<sp/>already<sp/>inited<sp/>in<sp/>ftp_connect()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/>ftp<sp/>=<sp/>conn-&gt;proto.ftp;</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/>ftp-&gt;ctl_valid<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/>conn-&gt;size<sp/>=<sp/>-1;<sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>this<sp/>is<sp/>unknown<sp/>at<sp/>this<sp/>point<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2322"><highlight class="normal"></highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/>Curl_pgrsSetUploadCounter(data,<sp/>0);</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/>Curl_pgrsSetDownloadCounter(data,<sp/>0);</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/>Curl_pgrsSetUploadSize(data,<sp/>0);</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/>Curl_pgrsSetDownloadSize(data,<sp/>0);</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"></highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>fixed<sp/>:<sp/>initialize<sp/>ftp-&gt;dirs[xxx]<sp/>to<sp/>NULL<sp/>!</highlight></codeline>
<codeline lineno="2329"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>done<sp/>in<sp/>Curl_ftp_connect()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"></highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>parse<sp/>the<sp/>URL<sp/>path<sp/>into<sp/>separate<sp/>path<sp/>components<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((slash_pos=strchr(cur_pos,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1<sp/>or<sp/>0<sp/>to<sp/>indicate<sp/>absolute<sp/>directory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>absolute_dir<sp/>=<sp/>(cur_pos<sp/>-<sp/>conn-&gt;ppath<sp/>&gt;<sp/>0)<sp/>&amp;&amp;<sp/>(path_part<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"></highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>seek<sp/>out<sp/>the<sp/>next<sp/>path<sp/>component<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(slash_pos-cur_pos)<sp/>{</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>skip<sp/>empty<sp/>path<sp/>components,<sp/>like<sp/>&quot;x//y&quot;<sp/>since<sp/>the<sp/>FTP<sp/>command<sp/>CWD</highlight></codeline>
<codeline lineno="2339"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requires<sp/>a<sp/>parameter<sp/>and<sp/>a<sp/>non-existant<sp/>parameter<sp/>a)<sp/>doesn&apos;t<sp/>work<sp/>on</highlight></codeline>
<codeline lineno="2340"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>many<sp/>servers<sp/>and<sp/>b)<sp/>has<sp/>no<sp/>effect<sp/>on<sp/>the<sp/>others.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ftp-&gt;dirs[path_part]<sp/>=<sp/>curl_unescape(cur_pos<sp/>-<sp/>absolute_dir,</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slash_pos<sp/>-<sp/>cur_pos<sp/>+<sp/>absolute_dir);</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ftp-&gt;dirs[path_part])<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>run<sp/>out<sp/>of<sp/>memory<sp/>...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freedirs(ftp);</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OUT_OF_MEMORY;</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur_pos<sp/>=<sp/>slash_pos<sp/>+<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>jump<sp/>to<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"></highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!retcode)<sp/>{</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur_pos<sp/>=<sp/>slash_pos<sp/>+<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>jump<sp/>to<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(++path_part<sp/>&gt;=<sp/>(CURL_MAX_FTP_DIRDEPTH-1))<sp/>{</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>too<sp/>deep,<sp/>we<sp/>need<sp/>the<sp/>last<sp/>entry<sp/>to<sp/>be<sp/>kept<sp/>NULL<sp/>at<sp/>all</highlight></codeline>
<codeline lineno="2359"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>times<sp/>to<sp/>signal<sp/>end<sp/>of<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;too<sp/>deep<sp/>dir<sp/>hierarchy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freedirs(ftp);</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_URL_MALFORMAT;</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"></highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/>ftp-&gt;file<sp/>=<sp/>cur_pos;<sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>rest<sp/>is<sp/>the<sp/>file<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2368"><highlight class="normal"></highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*ftp-&gt;file)<sp/>{</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/>ftp-&gt;file<sp/>=<sp/>curl_unescape(ftp-&gt;file,<sp/>0);</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>ftp-&gt;file)<sp/>{</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>freedirs(ftp);</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OUT_OF_MEMORY;</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/>ftp-&gt;file=NULL;<sp/></highlight><highlight class="comment">/*<sp/>instead<sp/>of<sp/>point<sp/>to<sp/>a<sp/>zero<sp/>byte,<sp/>we<sp/>make<sp/>it<sp/>a<sp/>NULL</highlight></codeline>
<codeline lineno="2379"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/>retcode<sp/>=<sp/>ftp_perform(conn,<sp/>&amp;connected);</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"></highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CURLE_OK<sp/>==<sp/>retcode)<sp/>{</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(connected)</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>retcode<sp/>=<sp/>Curl_ftp_nextconnect(conn);</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"></highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(retcode<sp/>&amp;&amp;<sp/>(conn-&gt;sock[SECONDARYSOCKET]<sp/>!=<sp/>CURL_SOCKET_BAD))<sp/>{</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Failure<sp/>detected,<sp/>close<sp/>the<sp/>second<sp/>socket<sp/>if<sp/>it<sp/>was<sp/>created<sp/>already<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sclose(conn-&gt;sock[SECONDARYSOCKET]);</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;sock[SECONDARYSOCKET]<sp/>=<sp/>CURL_SOCKET_BAD;</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"></highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ftp-&gt;no_transfer)</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>data<sp/>to<sp/>transfer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>retcode=Curl_Transfer(conn,<sp/>-1,<sp/>-1,<sp/>FALSE,<sp/>NULL,<sp/>-1,<sp/>NULL);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!connected)</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>since<sp/>we<sp/>didn&apos;t<sp/>connect<sp/>now,<sp/>we<sp/>want<sp/>do_more<sp/>to<sp/>get<sp/>called<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;bits.do_more<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/>freedirs(ftp);</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"></highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/>ftp-&gt;ctl_valid<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retcode;</highlight></codeline>
<codeline lineno="2405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"></highlight></codeline>
<codeline lineno="2407"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="2408"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2409"><highlight class="comment"><sp/>*<sp/>Curl_ftpsendf()</highlight></codeline>
<codeline lineno="2410"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2411"><highlight class="comment"><sp/>*<sp/>Sends<sp/>the<sp/>formated<sp/>string<sp/>as<sp/>a<sp/>ftp<sp/>command<sp/>to<sp/>a<sp/>ftp<sp/>server</highlight></codeline>
<codeline lineno="2412"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2413"><highlight class="comment"><sp/>*<sp/>NOTE:<sp/>we<sp/>build<sp/>the<sp/>command<sp/>in<sp/>a<sp/>fixed-length<sp/>buffer,<sp/>which<sp/>sets<sp/>length</highlight></codeline>
<codeline lineno="2414"><highlight class="comment"><sp/>*<sp/>restrictions<sp/>on<sp/>the<sp/>command!</highlight></codeline>
<codeline lineno="2415"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2416"><highlight class="normal">CURLcode<sp/>Curl_ftpsendf(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn,</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...)</highlight></codeline>
<codeline lineno="2418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/>ssize_t<sp/>bytes_written;</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>s[256];</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>write_len;</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sptr=s;</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/>CURLcode<sp/>res<sp/>=<sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"></highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/>va_list<sp/>ap;</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/>va_start(ap,<sp/>fmt);</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/>vsnprintf(s,<sp/>250,<sp/>fmt,<sp/>ap);</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/>va_end(ap);</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/>strcat(s,<sp/></highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>append<sp/>a<sp/>trailing<sp/>CRLF<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2431"><highlight class="normal"></highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/>bytes_written=0;</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/>write_len<sp/>=<sp/>strlen(s);</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"></highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1)<sp/>{</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>Curl_write(conn,<sp/>conn-&gt;sock[FIRSTSOCKET],<sp/>sptr,<sp/>write_len,</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;bytes_written);</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"></highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CURLE_OK<sp/>!=<sp/>res)</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"></highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;data-&gt;set.verbose)</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Curl_debug(conn-&gt;data,<sp/>CURLINFO_HEADER_OUT,<sp/>sptr,<sp/>bytes_written);</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"></highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bytes_written<sp/>!=<sp/>(ssize_t)write_len)<sp/>{</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>write_len<sp/>-=<sp/>bytes_written;</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sptr<sp/>+=<sp/>bytes_written;</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"></highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="2454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"></highlight></codeline>
<codeline lineno="2456"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="2457"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2458"><highlight class="comment"><sp/>*<sp/>Curl_ftp_quit()</highlight></codeline>
<codeline lineno="2459"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2460"><highlight class="comment"><sp/>*<sp/>This<sp/>should<sp/>be<sp/>called<sp/>before<sp/>calling<sp/>sclose()<sp/>on<sp/>an<sp/>ftp<sp/>control<sp/>connection</highlight></codeline>
<codeline lineno="2461"><highlight class="comment"><sp/>*<sp/>(not<sp/>data<sp/>connections).<sp/>We<sp/>should<sp/>then<sp/>wait<sp/>for<sp/>the<sp/>response<sp/>from<sp/>the<sp/></highlight></codeline>
<codeline lineno="2462"><highlight class="comment"><sp/>*<sp/>server<sp/>before<sp/>returning.<sp/>The<sp/>calling<sp/>code<sp/>should<sp/>then<sp/>try<sp/>to<sp/>close<sp/>the</highlight></codeline>
<codeline lineno="2463"><highlight class="comment"><sp/>*<sp/>connection.</highlight></codeline>
<codeline lineno="2464"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2465"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2466"><highlight class="normal">CURLcode<sp/>Curl_ftp_quit(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn)</highlight></codeline>
<codeline lineno="2467"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/>ssize_t<sp/>nread;</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ftpcode;</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/>CURLcode<sp/>ret<sp/>=<sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"></highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;proto.ftp-&gt;ctl_valid)<sp/>{</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>Curl_ftpsendf(conn,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;QUIT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CURLE_OK<sp/>==<sp/>ret)</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>Curl_GetFTPResponse(&amp;nread,<sp/>conn,<sp/>&amp;ftpcode);</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"></highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="2479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"></highlight></codeline>
<codeline lineno="2481"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="2482"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2483"><highlight class="comment"><sp/>*<sp/>Curl_ftp_disconnect()</highlight></codeline>
<codeline lineno="2484"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2485"><highlight class="comment"><sp/>*<sp/>Disconnect<sp/>from<sp/>an<sp/>FTP<sp/>server.<sp/>Cleanup<sp/>protocol-specific<sp/>per-connection</highlight></codeline>
<codeline lineno="2486"><highlight class="comment"><sp/>*<sp/>resources</highlight></codeline>
<codeline lineno="2487"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2488"><highlight class="normal">CURLcode<sp/>Curl_ftp_disconnect(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn)</highlight></codeline>
<codeline lineno="2489"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_f_t_p" kindref="compound">FTP</ref><sp/>*ftp=<sp/>conn-&gt;proto.ftp;</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"></highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>cannot<sp/>send<sp/>quit<sp/>unconditionally.<sp/>If<sp/>this<sp/>connection<sp/>is<sp/>stale<sp/>or</highlight></codeline>
<codeline lineno="2493"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>bad<sp/>in<sp/>any<sp/>way,<sp/>sending<sp/>quit<sp/>and<sp/>waiting<sp/>around<sp/>here<sp/>will<sp/>make<sp/>the</highlight></codeline>
<codeline lineno="2494"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>disconnect<sp/>wait<sp/>in<sp/>vain<sp/>and<sp/>cause<sp/>more<sp/>problems<sp/>than<sp/>we<sp/>need<sp/>to.</highlight></codeline>
<codeline lineno="2495"><highlight class="comment"></highlight></codeline>
<codeline lineno="2496"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>Curl_ftp_quit()<sp/>will<sp/>check<sp/>the<sp/>state<sp/>of<sp/>ftp-&gt;ctl_valid.<sp/>If<sp/>it&apos;s<sp/>ok<sp/>it</highlight></codeline>
<codeline lineno="2497"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>will<sp/>try<sp/>to<sp/>send<sp/>the<sp/>QUIT<sp/>command,<sp/>otherwise<sp/>it<sp/>will<sp/>just<sp/>return.</highlight></codeline>
<codeline lineno="2498"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2499"><highlight class="normal"></highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>FTP<sp/>session<sp/>may<sp/>or<sp/>may<sp/>not<sp/>have<sp/>been<sp/>allocated/setup<sp/>at<sp/>this<sp/>point!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ftp)<sp/>{</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)Curl_ftp_quit(conn);<sp/></highlight><highlight class="comment">/*<sp/>ignore<sp/>errors<sp/>on<sp/>the<sp/>QUIT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2503"><highlight class="normal"></highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ftp-&gt;entrypath)</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(ftp-&gt;entrypath);</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ftp-&gt;cache)<sp/>{</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(ftp-&gt;cache);</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ftp-&gt;cache<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ftp-&gt;file)<sp/>{</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(ftp-&gt;file);</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ftp-&gt;file<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">/*<sp/>zero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/>freedirs(ftp);</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="2517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"></highlight></codeline>
<codeline lineno="2519"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="2520"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2521"><highlight class="comment"><sp/>*<sp/>ftp_mkd()</highlight></codeline>
<codeline lineno="2522"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2523"><highlight class="comment"><sp/>*<sp/>Makes<sp/>a<sp/>directory<sp/>on<sp/>the<sp/>FTP<sp/>server.</highlight></codeline>
<codeline lineno="2524"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2525"><highlight class="comment"><sp/>*<sp/>Calls<sp/>failf()</highlight></codeline>
<codeline lineno="2526"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2527"><highlight class="normal">CURLcode<sp/>ftp_mkd(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)</highlight></codeline>
<codeline lineno="2528"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/>CURLcode<sp/>result=CURLE_OK;</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ftpcode;<sp/></highlight><highlight class="comment">/*<sp/>for<sp/>ftp<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/>ssize_t<sp/>nread;</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"></highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>a<sp/>directory<sp/>on<sp/>the<sp/>remote<sp/>server<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/>FTPSENDF(conn,<sp/></highlight><highlight class="stringliteral">&quot;MKD<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"></highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>Curl_GetFTPResponse(&amp;nread,<sp/>conn,<sp/>&amp;ftpcode);</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(ftpcode)<sp/>{</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>257:</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>success!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/>infof(<sp/>conn-&gt;data<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;Created<sp/>remote<sp/>directory<sp/>%s\n&quot;</highlight><highlight class="normal"><sp/>,<sp/>path<sp/>);</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>550:</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/>failf(conn-&gt;data,<sp/></highlight><highlight class="stringliteral">&quot;Permission<sp/>denied<sp/>to<sp/>make<sp/>directory<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>CURLE_FTP_ACCESS_DENIED;</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/>failf(conn-&gt;data,<sp/></highlight><highlight class="stringliteral">&quot;unrecognized<sp/>MKD<sp/>response:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>ftpcode<sp/>);</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>CURLE_FTP_ACCESS_DENIED;</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>result;</highlight></codeline>
<codeline lineno="2555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"></highlight></codeline>
<codeline lineno="2557"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="2558"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2559"><highlight class="comment"><sp/>*<sp/>ftp_cwd()</highlight></codeline>
<codeline lineno="2560"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2561"><highlight class="comment"><sp/>*<sp/>Send<sp/>&apos;CWD&apos;<sp/>to<sp/>the<sp/>remote<sp/>server<sp/>to<sp/>Change<sp/>Working<sp/>Directory.<sp/><sp/>It<sp/>is<sp/>the<sp/>ftp</highlight></codeline>
<codeline lineno="2562"><highlight class="comment"><sp/>*<sp/>version<sp/>of<sp/>the<sp/>unix<sp/>&apos;cd&apos;<sp/>command.<sp/>This<sp/>function<sp/>is<sp/>only<sp/>called<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="2563"><highlight class="comment"><sp/>*<sp/>ftp_cwd_and_mkd()<sp/>function<sp/>these<sp/>days.</highlight></codeline>
<codeline lineno="2564"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2565"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>does<sp/>NOT<sp/>call<sp/>failf().</highlight></codeline>
<codeline lineno="2566"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2567"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2568"><highlight class="normal">CURLcode<sp/>ftp_cwd(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)</highlight></codeline>
<codeline lineno="2569"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/>ssize_t<sp/>nread;</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ftpcode;</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/>CURLcode<sp/>result;</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/>FTPSENDF(conn,<sp/></highlight><highlight class="stringliteral">&quot;CWD<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>Curl_GetFTPResponse(&amp;nread,<sp/>conn,<sp/>&amp;ftpcode);</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result)<sp/>{</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>According<sp/>to<sp/>RFC959,<sp/>CWD<sp/>is<sp/>supposed<sp/>to<sp/>return<sp/>250<sp/>on<sp/>success,<sp/>but</highlight></codeline>
<codeline lineno="2578"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>there<sp/>seem<sp/>to<sp/>be<sp/>non-compliant<sp/>FTP<sp/>servers<sp/>out<sp/>there<sp/>that<sp/>return<sp/>200,</highlight></codeline>
<codeline lineno="2579"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>so<sp/>we<sp/>accept<sp/>any<sp/>&apos;2xy&apos;<sp/>code<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ftpcode/100<sp/>!=<sp/>2)</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>CURLE_FTP_ACCESS_DENIED;</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"></highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2585"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"></highlight></codeline>
<codeline lineno="2587"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="2588"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2589"><highlight class="comment"><sp/>*<sp/>ftp_cwd_and_mkd()</highlight></codeline>
<codeline lineno="2590"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2591"><highlight class="comment"><sp/>*<sp/>Change<sp/>to<sp/>the<sp/>given<sp/>directory.<sp/><sp/>If<sp/>the<sp/>directory<sp/>is<sp/>not<sp/>present,<sp/>and<sp/>we</highlight></codeline>
<codeline lineno="2592"><highlight class="comment"><sp/>*<sp/>have<sp/>been<sp/>told<sp/>to<sp/>allow<sp/>it,<sp/>then<sp/>create<sp/>the<sp/>directory<sp/>and<sp/>cd<sp/>to<sp/>it.</highlight></codeline>
<codeline lineno="2593"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2594"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2595"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CURLcode<sp/>ftp_cwd_and_mkd(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)</highlight></codeline>
<codeline lineno="2596"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/>CURLcode<sp/>result;</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>ftp_cwd(conn,<sp/>path);</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result)<sp/>{</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;data-&gt;set.ftp_create_missing_dirs)<sp/>{</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>ftp_mkd(conn,<sp/>path);</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result)</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ftp_mkd()<sp/>calls<sp/>failf()<sp/>itself<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>ftp_cwd(conn,<sp/>path);</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(conn-&gt;data,<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>cd<sp/>to<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2612"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"></highlight></codeline>
<codeline lineno="2614"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CURL_DISABLE_FTP<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/ftp.c"/>
  </compounddef>
</doxygen>
