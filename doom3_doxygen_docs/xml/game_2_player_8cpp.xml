<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="game_2_player_8cpp" kind="file">
    <compoundname>Player.cpp</compoundname>
    <includes refid="precompiled_8h" local="yes">../idlib/precompiled.h</includes>
    <includes refid="game_2_game__local_8h" local="yes">Game_local.h</includes>
      <sectiondef kind="var">
      <memberdef kind="variable" id="game_2_player_8cpp_1ac5c8fa062762912302496a97492c17a7" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int LADDER_RUNG_DISTANCE</definition>
        <argsstring></argsstring>
        <name>LADDER_RUNG_DISTANCE</name>
        <initializer>= 32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="44" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1a6bb560cf89dd343baf5d221e7a59a7c0" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int HEALTH_PER_DOSE</definition>
        <argsstring></argsstring>
        <name>HEALTH_PER_DOSE</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="47" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1af168cdbf294b21b5ceb3510cb210f127" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int WEAPON_DROP_TIME</definition>
        <argsstring></argsstring>
        <name>WEAPON_DROP_TIME</name>
        <initializer>= 20 * 1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="50" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1a3926334d5ea8866adf0e7bb619989fd5" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int WEAPON_SWITCH_DELAY</definition>
        <argsstring></argsstring>
        <name>WEAPON_SWITCH_DELAY</name>
        <initializer>= 150</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="53" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1abe350e6df451e1f3d076436df3d9b06d" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int SPECTATE_RAISE</definition>
        <argsstring></argsstring>
        <name>SPECTATE_RAISE</name>
        <initializer>= 25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="56" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1a0865ef2ca66435a649181a6de62c31bf" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int HEALTHPULSE_TIME</definition>
        <argsstring></argsstring>
        <name>HEALTHPULSE_TIME</name>
        <initializer>= 333</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="58" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1af387a860da75f5e56752ccfc7072893a" prot="public" static="no" mutable="no">
        <type>const float</type>
        <definition>const float MIN_BOB_SPEED</definition>
        <argsstring></argsstring>
        <name>MIN_BOB_SPEED</name>
        <initializer>= 5.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="61" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1a5f1b1e560f8ae49c44c138cb84993fa0" prot="public" static="no" mutable="no">
        <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref></type>
        <definition>const idEventDef EV_Player_GetButtons(&quot;getButtons&quot;, NULL, &apos;d&apos;)</definition>
        <argsstring>(&quot;getButtons&quot;, NULL, &apos;d&apos;)</argsstring>
        <name>EV_Player_GetButtons</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="63" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1a72f094d1cfc8983d3f29463c90ca1b6f" prot="public" static="no" mutable="no">
        <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref></type>
        <definition>const idEventDef EV_Player_GetMove(&quot;getMove&quot;, NULL, &apos;v&apos;)</definition>
        <argsstring>(&quot;getMove&quot;, NULL, &apos;v&apos;)</argsstring>
        <name>EV_Player_GetMove</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="64" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1a743b6dda5754eb92926a413bfaa3cdc2" prot="public" static="no" mutable="no">
        <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref></type>
        <definition>const idEventDef EV_Player_GetViewAngles(&quot;getViewAngles&quot;, NULL, &apos;v&apos;)</definition>
        <argsstring>(&quot;getViewAngles&quot;, NULL, &apos;v&apos;)</argsstring>
        <name>EV_Player_GetViewAngles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="65" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1a21eb071f0592ebcf01d7074c8cf45321" prot="public" static="no" mutable="no">
        <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref></type>
        <definition>const idEventDef EV_Player_StopFxFov(&quot;stopFxFov&quot;)</definition>
        <argsstring>(&quot;stopFxFov&quot;)</argsstring>
        <name>EV_Player_StopFxFov</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="66" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1a26af521f089cea01b3b0444f386bcab7" prot="public" static="no" mutable="no">
        <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref></type>
        <definition>const idEventDef EV_Player_EnableWeapon(&quot;enableWeapon&quot;)</definition>
        <argsstring>(&quot;enableWeapon&quot;)</argsstring>
        <name>EV_Player_EnableWeapon</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="67" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1a04cd208e0fea41a116705602255d893c" prot="public" static="no" mutable="no">
        <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref></type>
        <definition>const idEventDef EV_Player_DisableWeapon(&quot;disableWeapon&quot;)</definition>
        <argsstring>(&quot;disableWeapon&quot;)</argsstring>
        <name>EV_Player_DisableWeapon</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="68" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1ad98bcb14f9a80415f9f1f01e2284be98" prot="public" static="no" mutable="no">
        <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref></type>
        <definition>const idEventDef EV_Player_GetCurrentWeapon(&quot;getCurrentWeapon&quot;, NULL, &apos;s&apos;)</definition>
        <argsstring>(&quot;getCurrentWeapon&quot;, NULL, &apos;s&apos;)</argsstring>
        <name>EV_Player_GetCurrentWeapon</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="69" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1aa7e257670baf113b5f4cd3ae25e194b8" prot="public" static="no" mutable="no">
        <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref></type>
        <definition>const idEventDef EV_Player_GetPreviousWeapon(&quot;getPreviousWeapon&quot;, NULL, &apos;s&apos;)</definition>
        <argsstring>(&quot;getPreviousWeapon&quot;, NULL, &apos;s&apos;)</argsstring>
        <name>EV_Player_GetPreviousWeapon</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="70" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1a614f046ef3ca7eaae535e59964c05c47" prot="public" static="no" mutable="no">
        <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref></type>
        <definition>const idEventDef EV_Player_SelectWeapon(&quot;selectWeapon&quot;,&quot;s&quot;)</definition>
        <argsstring>(&quot;selectWeapon&quot;,&quot;s&quot;)</argsstring>
        <name>EV_Player_SelectWeapon</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="71" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1a5151f23d3b210ff7fc97fc1733d36d70" prot="public" static="no" mutable="no">
        <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref></type>
        <definition>const idEventDef EV_Player_GetWeaponEntity(&quot;getWeaponEntity&quot;, NULL, &apos;e&apos;)</definition>
        <argsstring>(&quot;getWeaponEntity&quot;, NULL, &apos;e&apos;)</argsstring>
        <name>EV_Player_GetWeaponEntity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="72" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1a1ac3a57145a71ee9e416973e16405e51" prot="public" static="no" mutable="no">
        <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref></type>
        <definition>const idEventDef EV_Player_OpenPDA(&quot;openPDA&quot;)</definition>
        <argsstring>(&quot;openPDA&quot;)</argsstring>
        <name>EV_Player_OpenPDA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="73" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1a21157eaa437fc560fed8875867205d0d" prot="public" static="no" mutable="no">
        <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref></type>
        <definition>const idEventDef EV_Player_InPDA(&quot;inPDA&quot;, NULL, &apos;d&apos;)</definition>
        <argsstring>(&quot;inPDA&quot;, NULL, &apos;d&apos;)</argsstring>
        <name>EV_Player_InPDA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="74" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1a8c2f59bdcc48dda9de0fb12d6e91c49b" prot="public" static="no" mutable="no">
        <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref></type>
        <definition>const idEventDef EV_Player_ExitTeleporter(&quot;exitTeleporter&quot;)</definition>
        <argsstring>(&quot;exitTeleporter&quot;)</argsstring>
        <name>EV_Player_ExitTeleporter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="75" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1acae7c0b9d295bb81109632b2b99b7b84" prot="public" static="no" mutable="no">
        <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref></type>
        <definition>const idEventDef EV_Player_StopAudioLog(&quot;stopAudioLog&quot;)</definition>
        <argsstring>(&quot;stopAudioLog&quot;)</argsstring>
        <name>EV_Player_StopAudioLog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="76" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1a6875dfa31ca7bef16a962dfb52f3c119" prot="public" static="no" mutable="no">
        <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref></type>
        <definition>const idEventDef EV_Player_HideTip(&quot;hideTip&quot;)</definition>
        <argsstring>(&quot;hideTip&quot;)</argsstring>
        <name>EV_Player_HideTip</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="77" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1aad4a64e365194466ec3179a1ad254183" prot="public" static="no" mutable="no">
        <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref></type>
        <definition>const idEventDef EV_Player_LevelTrigger(&quot;levelTrigger&quot;)</definition>
        <argsstring>(&quot;levelTrigger&quot;)</argsstring>
        <name>EV_Player_LevelTrigger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="78" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1a93027137b55690609e2915910dbfd5de" prot="public" static="no" mutable="no">
        <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref></type>
        <definition>const idEventDef EV_SpectatorTouch(&quot;spectatorTouch&quot;,&quot;et&quot;)</definition>
        <argsstring>(&quot;spectatorTouch&quot;,&quot;et&quot;)</argsstring>
        <name>EV_SpectatorTouch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="79" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1ace665960934e627976e1d0fbd5b8c5fd" prot="public" static="no" mutable="no">
        <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref></type>
        <definition>const idEventDef EV_Player_GetIdealWeapon(&quot;getIdealWeapon&quot;, NULL, &apos;s&apos;)</definition>
        <argsstring>(&quot;getIdealWeapon&quot;, NULL, &apos;s&apos;)</argsstring>
        <name>EV_Player_GetIdealWeapon</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="80" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1a1048317a9d7e89d455aae3e5bbef58d4" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int MAX_RESPAWN_TIME</definition>
        <argsstring></argsstring>
        <name>MAX_RESPAWN_TIME</name>
        <initializer>= 10000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="103" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1ae983e788a9f91e4fff5ba0d4a86cc705" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int RAGDOLL_DEATH_TIME</definition>
        <argsstring></argsstring>
        <name>RAGDOLL_DEATH_TIME</name>
        <initializer>= 3000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="104" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1af028623bedab0429fa1733b69cfa2f6c" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int MAX_PDAS</definition>
        <argsstring></argsstring>
        <name>MAX_PDAS</name>
        <initializer>= 64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="105" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1a6b420699d083be6f1569c8a1815f4075" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int MAX_PDA_ITEMS</definition>
        <argsstring></argsstring>
        <name>MAX_PDA_ITEMS</name>
        <initializer>= 128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="106" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1ab192e7ceeb3ba1aeb355d16c7efb195a" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int STEPUP_TIME</definition>
        <argsstring></argsstring>
        <name>STEPUP_TIME</name>
        <initializer>= 200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="107" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_player_8cpp_1a67017c50d294cad43f92bfbc97ff4e89" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int MAX_INVENTORY_ITEMS</definition>
        <argsstring></argsstring>
        <name>MAX_INVENTORY_ITEMS</name>
        <initializer>= 20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" line="108" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/game/Player.cpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../idlib/precompiled.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>hdrstop</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Game_local.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="35"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="36"><highlight class="comment"></highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/><sp/><sp/>Player<sp/>control<sp/>of<sp/>the<sp/>Doom<sp/>Marine.</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>object<sp/>handles<sp/>all<sp/>player<sp/>movement<sp/>and<sp/>world<sp/>interaction.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"></highlight></codeline>
<codeline lineno="40"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="41"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distance<sp/>between<sp/>ladder<sp/>rungs<sp/>(actually<sp/>is<sp/>half<sp/>that<sp/>distance,<sp/>but<sp/>this<sp/>sounds<sp/>better)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LADDER_RUNG_DISTANCE<sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>amount<sp/>of<sp/>health<sp/>per<sp/>dose<sp/>from<sp/>the<sp/>health<sp/>station</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HEALTH_PER_DOSE<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>time<sp/>before<sp/>a<sp/>weapon<sp/>dropped<sp/>to<sp/>the<sp/>floor<sp/>disappears</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WEAPON_DROP_TIME<sp/>=<sp/>20<sp/>*<sp/>1000;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>time<sp/>before<sp/>a<sp/>next<sp/>or<sp/>prev<sp/>weapon<sp/>switch<sp/>happens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WEAPON_SWITCH_DELAY<sp/>=<sp/>150;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>how<sp/>many<sp/>units<sp/>to<sp/>raise<sp/>spectator<sp/>above<sp/>default<sp/>view<sp/>height<sp/>so<sp/>it&apos;s<sp/>in<sp/>the<sp/>head<sp/>of<sp/>someone</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SPECTATE_RAISE<sp/>=<sp/>25;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HEALTHPULSE_TIME<sp/>=<sp/>333;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>minimum<sp/>speed<sp/>to<sp/>bob<sp/>and<sp/>play<sp/>run/walk<sp/>animations<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>MIN_BOB_SPEED<sp/>=<sp/>5.0f;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_Player_GetButtons(<sp/></highlight><highlight class="stringliteral">&quot;getButtons&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_Player_GetMove(<sp/></highlight><highlight class="stringliteral">&quot;getMove&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="charliteral">&apos;v&apos;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_Player_GetViewAngles(<sp/></highlight><highlight class="stringliteral">&quot;getViewAngles&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="charliteral">&apos;v&apos;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_Player_StopFxFov(<sp/></highlight><highlight class="stringliteral">&quot;stopFxFov&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_Player_EnableWeapon(<sp/></highlight><highlight class="stringliteral">&quot;enableWeapon&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_Player_DisableWeapon(<sp/></highlight><highlight class="stringliteral">&quot;disableWeapon&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_Player_GetCurrentWeapon(<sp/></highlight><highlight class="stringliteral">&quot;getCurrentWeapon&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_Player_GetPreviousWeapon(<sp/></highlight><highlight class="stringliteral">&quot;getPreviousWeapon&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_Player_SelectWeapon(<sp/></highlight><highlight class="stringliteral">&quot;selectWeapon&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_Player_GetWeaponEntity(<sp/></highlight><highlight class="stringliteral">&quot;getWeaponEntity&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_Player_OpenPDA(<sp/></highlight><highlight class="stringliteral">&quot;openPDA&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_Player_InPDA(<sp/></highlight><highlight class="stringliteral">&quot;inPDA&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_Player_ExitTeleporter(<sp/></highlight><highlight class="stringliteral">&quot;exitTeleporter&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_Player_StopAudioLog(<sp/></highlight><highlight class="stringliteral">&quot;stopAudioLog&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_Player_HideTip(<sp/></highlight><highlight class="stringliteral">&quot;hideTip&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_Player_LevelTrigger(<sp/></highlight><highlight class="stringliteral">&quot;levelTrigger&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_SpectatorTouch(<sp/></highlight><highlight class="stringliteral">&quot;spectatorTouch&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;et&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_Player_GetIdealWeapon(<sp/></highlight><highlight class="stringliteral">&quot;getIdealWeapon&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">CLASS_DECLARATION(<sp/><ref refid="classid_actor" kindref="compound">idActor</ref>,<sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Player_GetButtons,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref>::Event_GetButtons<sp/>)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Player_GetMove,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref>::Event_GetMove<sp/>)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Player_GetViewAngles,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref>::Event_GetViewAngles<sp/>)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Player_StopFxFov,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref>::Event_StopFxFov<sp/>)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Player_EnableWeapon,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref>::Event_EnableWeapon<sp/>)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Player_DisableWeapon,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref>::Event_DisableWeapon<sp/>)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Player_GetCurrentWeapon,<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref>::Event_GetCurrentWeapon<sp/>)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Player_GetPreviousWeapon,<sp/><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref>::Event_GetPreviousWeapon<sp/>)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Player_SelectWeapon,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref>::Event_SelectWeapon<sp/>)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Player_GetWeaponEntity,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref>::Event_GetWeaponEntity<sp/>)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Player_OpenPDA,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref>::Event_OpenPDA<sp/>)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Player_InPDA,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref>::Event_InPDA<sp/>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Player_ExitTeleporter,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref>::Event_ExitTeleporter<sp/>)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Player_StopAudioLog,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref>::Event_StopAudioLog<sp/>)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Player_HideTip,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref>::Event_HideTip<sp/>)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Player_LevelTrigger,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref>::Event_LevelTrigger<sp/>)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Gibbed,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref>::Event_Gibbed<sp/>)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Player_GetIdealWeapon,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref>::Event_GetIdealWeapon<sp/>)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">END_CLASS</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MAX_RESPAWN_TIME<sp/>=<sp/>10000;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RAGDOLL_DEATH_TIME<sp/>=<sp/>3000;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MAX_PDAS<sp/>=<sp/>64;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MAX_PDA_ITEMS<sp/>=<sp/>128;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>STEPUP_TIME<sp/>=<sp/>200;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">const<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MAX_INVENTORY_ITEMS<sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref>::colorBarTable[<sp/>5<sp/>]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(<sp/>0.25f,<sp/>0.25f,<sp/>0.25f<sp/>),</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(<sp/>1.00f,<sp/>0.00f,<sp/>0.00f<sp/>),</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(<sp/>0.00f,<sp/>0.80f,<sp/>0.10f<sp/>),</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(<sp/>0.20f,<sp/>0.50f,<sp/>0.80f<sp/>),</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(<sp/>1.00f,<sp/>0.80f,<sp/>0.10f<sp/>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="119"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="120"><highlight class="comment">idInventory::Clear</highlight></codeline>
<codeline lineno="121"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="122"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idInventory::Clear(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>maxHealth<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>weapons<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>powerups<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>armor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>maxarmor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>deplete_armor<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>deplete_rate<sp/><sp/><sp/><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>deplete_ammount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>nextArmorDepleteTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>ammo,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>ammo<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>ClearPowerUps();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>to<sp/>-1<sp/>so<sp/>that<sp/>the<sp/>gun<sp/>knows<sp/>to<sp/>have<sp/>a<sp/>full<sp/>clip<sp/>the<sp/>first<sp/>time<sp/>we<sp/>get<sp/>it<sp/>and<sp/>at<sp/>the<sp/>start<sp/>of<sp/>the<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>clip,<sp/>-1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>clip<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>items.DeleteContents(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(pdasViewed,<sp/>0,<sp/>4<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>pdasViewed[0]<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>pdas.Clear();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>videos.Clear();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>emails.Clear();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>selVideo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>selEMail<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>selPDA<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>selAudio<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>pdaOpened<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>turkeyScore<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>levelTriggers.Clear();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>nextItemPickup<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>nextItemNum<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>onePickupTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>pickupItemNames.Clear();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>objectiveNames.Clear();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>ammoPredictTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>lastGiveTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>ammoPulse<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>weaponPulse<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>armorPulse<sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="171"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="172"><highlight class="comment">idInventory::GivePowerUp</highlight></codeline>
<codeline lineno="173"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="174"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idInventory::GivePowerUp(<sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*player,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>powerup,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msec<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!msec<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>duration<sp/>from<sp/>the<sp/>.def<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_decl_entity_def" kindref="compound">idDeclEntityDef</ref><sp/>*def<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>powerup<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>BERSERK:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def<sp/>=<sp/>gameLocal.FindEntityDef(<sp/></highlight><highlight class="stringliteral">&quot;powerup_berserk&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>INVISIBILITY:</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def<sp/>=<sp/>gameLocal.FindEntityDef(<sp/></highlight><highlight class="stringliteral">&quot;powerup_invisibility&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MEGAHEALTH:</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def<sp/>=<sp/>gameLocal.FindEntityDef(<sp/></highlight><highlight class="stringliteral">&quot;powerup_megahealth&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADRENALINE:<sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def<sp/>=<sp/>gameLocal.FindEntityDef(<sp/></highlight><highlight class="stringliteral">&quot;powerup_adrenaline&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>def<sp/>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msec<sp/>=<sp/>def-&gt;dict.GetInt(<sp/></highlight><highlight class="stringliteral">&quot;time&quot;</highlight><highlight class="normal"><sp/>)<sp/>*<sp/>1000;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>powerups<sp/>|=<sp/>1<sp/>&lt;&lt;<sp/>powerup;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>powerupEndTime[<sp/>powerup<sp/>]<sp/>=<sp/>gameLocal.time<sp/>+<sp/>msec;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="201"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="202"><highlight class="comment">idInventory::ClearPowerUps</highlight></codeline>
<codeline lineno="203"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="204"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idInventory::ClearPowerUps(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_POWERUPS;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>powerupEndTime[<sp/>i<sp/>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>powerups<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="214"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="215"><highlight class="comment">idInventory::GetPersistantData</highlight></codeline>
<codeline lineno="216"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="217"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idInventory::GetPersistantData(<sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/>&amp;dict<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>num;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/><sp/>*item;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/><sp/><sp/>key;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_key_value" kindref="compound">idKeyValue</ref><sp/>*kv;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>armor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>dict.SetInt(<sp/></highlight><highlight class="stringliteral">&quot;armor&quot;</highlight><highlight class="normal">,<sp/>armor<sp/>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>bother<sp/>with<sp/>powerups,<sp/>maxhealth,<sp/>maxarmor,<sp/>or<sp/>the<sp/>clip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ammo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>AMMO_NUMTYPES;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>idWeapon::GetAmmoNameForNum(<sp/>(<sp/>ammo_t<sp/>)i<sp/>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>name<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict.SetInt(<sp/>name,<sp/>ammo[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>items</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>num<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>items.Num();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>items[<sp/>i<sp/>];</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>all<sp/>keys<sp/>with<sp/>&quot;inv_&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kv<sp/>=<sp/>item-&gt;MatchPrefix(<sp/></highlight><highlight class="stringliteral">&quot;inv_&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>kv<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>kv<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(<sp/>key,<sp/></highlight><highlight class="stringliteral">&quot;item_%i<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>num,<sp/>kv-&gt;GetKey().c_str()<sp/>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict.Set(<sp/>key,<sp/>kv-&gt;GetValue()<sp/>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kv<sp/>=<sp/>item-&gt;MatchPrefix(<sp/></highlight><highlight class="stringliteral">&quot;inv_&quot;</highlight><highlight class="normal">,<sp/>kv<sp/>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num++;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>dict.SetInt(<sp/></highlight><highlight class="stringliteral">&quot;items&quot;</highlight><highlight class="normal">,<sp/>num<sp/>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pdas<sp/>viewed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict.SetInt(<sp/>va(</highlight><highlight class="stringliteral">&quot;pdasViewed_%i&quot;</highlight><highlight class="normal">,<sp/>i),<sp/>pdasViewed[i]<sp/>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>dict.SetInt(<sp/></highlight><highlight class="stringliteral">&quot;selPDA&quot;</highlight><highlight class="normal">,<sp/>selPDA<sp/>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>dict.SetInt(<sp/></highlight><highlight class="stringliteral">&quot;selVideo&quot;</highlight><highlight class="normal">,<sp/>selVideo<sp/>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>dict.SetInt(<sp/></highlight><highlight class="stringliteral">&quot;selEmail&quot;</highlight><highlight class="normal">,<sp/>selEMail<sp/>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>dict.SetInt(<sp/></highlight><highlight class="stringliteral">&quot;selAudio&quot;</highlight><highlight class="normal">,<sp/>selAudio<sp/>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>dict.SetInt(<sp/></highlight><highlight class="stringliteral">&quot;pdaOpened&quot;</highlight><highlight class="normal">,<sp/>pdaOpened<sp/>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>dict.SetInt(<sp/></highlight><highlight class="stringliteral">&quot;turkeyScore&quot;</highlight><highlight class="normal">,<sp/>turkeyScore<sp/>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pdas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pdas.Num();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(<sp/>key,<sp/></highlight><highlight class="stringliteral">&quot;pda_%i&quot;</highlight><highlight class="normal">,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict.Set(<sp/>key,<sp/>pdas[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>dict.SetInt(<sp/></highlight><highlight class="stringliteral">&quot;pdas&quot;</highlight><highlight class="normal">,<sp/>pdas.Num()<sp/>);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>video<sp/>cds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>videos.Num();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(<sp/>key,<sp/></highlight><highlight class="stringliteral">&quot;video_%i&quot;</highlight><highlight class="normal">,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict.Set(<sp/>key,<sp/>videos[<sp/>i<sp/>].c_str()<sp/>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>dict.SetInt(<sp/></highlight><highlight class="stringliteral">&quot;videos&quot;</highlight><highlight class="normal">,<sp/>videos.Num()<sp/>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>emails</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>emails.Num();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(<sp/>key,<sp/></highlight><highlight class="stringliteral">&quot;email_%i&quot;</highlight><highlight class="normal">,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict.Set(<sp/>key,<sp/>emails[<sp/>i<sp/>].c_str()<sp/>);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>dict.SetInt(<sp/></highlight><highlight class="stringliteral">&quot;emails&quot;</highlight><highlight class="normal">,<sp/>emails.Num()<sp/>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>weapons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>dict.SetInt(<sp/></highlight><highlight class="stringliteral">&quot;weapon_bits&quot;</highlight><highlight class="normal">,<sp/>weapons<sp/>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>dict.SetInt(<sp/></highlight><highlight class="stringliteral">&quot;levelTriggers&quot;</highlight><highlight class="normal">,<sp/>levelTriggers.Num()<sp/>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>levelTriggers.Num();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(<sp/>key,<sp/></highlight><highlight class="stringliteral">&quot;levelTrigger_Level_%i&quot;</highlight><highlight class="normal">,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict.Set(<sp/>key,<sp/>levelTriggers[i].levelName<sp/>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(<sp/>key,<sp/></highlight><highlight class="stringliteral">&quot;levelTrigger_Trigger_%i&quot;</highlight><highlight class="normal">,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict.Set(<sp/>key,<sp/>levelTriggers[i].triggerName<sp/>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="303"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="304"><highlight class="comment">idInventory::RestoreInventory</highlight></codeline>
<codeline lineno="305"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="306"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idInventory::RestoreInventory(<sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*owner,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/>&amp;dict<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/><sp/><sp/><sp/><sp/><sp/>*item;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itemname;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_key_value" kindref="compound">idKeyValue</ref><sp/>*kv;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*name;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>Clear();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>health/armor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>maxHealth<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>dict.GetInt(<sp/></highlight><highlight class="stringliteral">&quot;maxhealth&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;100&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>armor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>dict.GetInt(<sp/></highlight><highlight class="stringliteral">&quot;armor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;50&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>maxarmor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>dict.GetInt(<sp/></highlight><highlight class="stringliteral">&quot;maxarmor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;100&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>deplete_armor<sp/><sp/><sp/>=<sp/>dict.GetInt(<sp/></highlight><highlight class="stringliteral">&quot;deplete_armor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>deplete_rate<sp/><sp/><sp/><sp/>=<sp/>dict.GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;deplete_rate&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;2.0&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>deplete_ammount<sp/>=<sp/>dict.GetInt(<sp/></highlight><highlight class="stringliteral">&quot;deplete_ammount&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>clip<sp/>and<sp/>powerups<sp/>aren&apos;t<sp/>restored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ammo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>AMMO_NUMTYPES;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>idWeapon::GetAmmoNameForNum(<sp/>(<sp/>ammo_t<sp/>)i<sp/>);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>name<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ammo[<sp/>i<sp/>]<sp/>=<sp/>dict.GetInt(<sp/>name<sp/>);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>items</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>num<sp/>=<sp/>dict.GetInt(<sp/></highlight><highlight class="stringliteral">&quot;items&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>items.SetNum(<sp/>num<sp/>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classid_dict" kindref="compound">idDict</ref>();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items[<sp/>i<sp/>]<sp/>=<sp/>item;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(<sp/>itemname,<sp/></highlight><highlight class="stringliteral">&quot;item_%i<sp/>&quot;</highlight><highlight class="normal">,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kv<sp/>=<sp/>dict.MatchPrefix(<sp/>itemname<sp/>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>kv<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>kv-&gt;GetKey();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key.Strip(<sp/>itemname<sp/>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item-&gt;Set(<sp/>key,<sp/>kv-&gt;GetValue()<sp/>);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kv<sp/>=<sp/>dict.MatchPrefix(<sp/>itemname,<sp/>kv<sp/>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pdas<sp/>viewed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdasViewed[i]<sp/>=<sp/>dict.GetInt(va(</highlight><highlight class="stringliteral">&quot;pdasViewed_%i&quot;</highlight><highlight class="normal">,<sp/>i));</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>selPDA<sp/>=<sp/>dict.GetInt(<sp/></highlight><highlight class="stringliteral">&quot;selPDA&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>selEMail<sp/>=<sp/>dict.GetInt(<sp/></highlight><highlight class="stringliteral">&quot;selEmail&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>selVideo<sp/>=<sp/>dict.GetInt(<sp/></highlight><highlight class="stringliteral">&quot;selVideo&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>selAudio<sp/>=<sp/>dict.GetInt(<sp/></highlight><highlight class="stringliteral">&quot;selAudio&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>pdaOpened<sp/>=<sp/>dict.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;pdaOpened&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>turkeyScore<sp/>=<sp/>dict.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;turkeyScore&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pdas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>num<sp/>=<sp/>dict.GetInt(<sp/></highlight><highlight class="stringliteral">&quot;pdas&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>pdas.SetNum(<sp/>num<sp/>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(<sp/>itemname,<sp/></highlight><highlight class="stringliteral">&quot;pda_%i&quot;</highlight><highlight class="normal">,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdas[i]<sp/>=<sp/>dict.GetString(<sp/>itemname,<sp/></highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>videos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>num<sp/>=<sp/>dict.GetInt(<sp/></highlight><highlight class="stringliteral">&quot;videos&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>videos.SetNum(<sp/>num<sp/>);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(<sp/>itemname,<sp/></highlight><highlight class="stringliteral">&quot;video_%i&quot;</highlight><highlight class="normal">,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>videos[i]<sp/>=<sp/>dict.GetString(<sp/>itemname,<sp/></highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>emails</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>num<sp/>=<sp/>dict.GetInt(<sp/></highlight><highlight class="stringliteral">&quot;emails&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>emails.SetNum(<sp/>num<sp/>);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(<sp/>itemname,<sp/></highlight><highlight class="stringliteral">&quot;email_%i&quot;</highlight><highlight class="normal">,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emails[i]<sp/>=<sp/>dict.GetString(<sp/>itemname,<sp/></highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>weapons<sp/>are<sp/>stored<sp/>as<sp/>a<sp/>number<sp/>for<sp/>persistant<sp/>data,<sp/>but<sp/>as<sp/>strings<sp/>in<sp/>the<sp/>entityDef</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>weapons<sp/>=<sp/>dict.GetInt(<sp/></highlight><highlight class="stringliteral">&quot;weapon_bits&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ID_DEMO_BUILD</highlight></codeline>
<codeline lineno="392"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Give(<sp/>owner,<sp/>dict,<sp/></highlight><highlight class="stringliteral">&quot;weapon&quot;</highlight><highlight class="normal">,<sp/>dict.GetString(<sp/></highlight><highlight class="stringliteral">&quot;weapon&quot;</highlight><highlight class="normal"><sp/>),<sp/>NULL,<sp/>false<sp/>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="394"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>g_skill.GetInteger()<sp/>&gt;=<sp/>3<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Give(<sp/>owner,<sp/>dict,<sp/></highlight><highlight class="stringliteral">&quot;weapon&quot;</highlight><highlight class="normal">,<sp/>dict.GetString(<sp/></highlight><highlight class="stringliteral">&quot;weapon_nightmare&quot;</highlight><highlight class="normal"><sp/>),<sp/>NULL,<sp/>false<sp/>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Give(<sp/>owner,<sp/>dict,<sp/></highlight><highlight class="stringliteral">&quot;weapon&quot;</highlight><highlight class="normal">,<sp/>dict.GetString(<sp/></highlight><highlight class="stringliteral">&quot;weapon&quot;</highlight><highlight class="normal"><sp/>),<sp/>NULL,<sp/>false<sp/>);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="400"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>num<sp/>=<sp/>dict.GetInt(<sp/></highlight><highlight class="stringliteral">&quot;levelTriggers&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(<sp/>itemname,<sp/></highlight><highlight class="stringliteral">&quot;levelTrigger_Level_%i&quot;</highlight><highlight class="normal">,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structid_level_trigger_info" kindref="compound">idLevelTriggerInfo</ref><sp/>lti;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lti.levelName<sp/>=<sp/>dict.GetString(<sp/>itemname<sp/>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(<sp/>itemname,<sp/></highlight><highlight class="stringliteral">&quot;levelTrigger_Trigger_%i&quot;</highlight><highlight class="normal">,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lti.triggerName<sp/>=<sp/>dict.GetString(<sp/>itemname<sp/>);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>levelTriggers.Append(<sp/>lti<sp/>);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="414"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="415"><highlight class="comment">idInventory::Save</highlight></codeline>
<codeline lineno="416"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="417"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idInventory::Save(<sp/><ref refid="classid_save_game" kindref="compound">idSaveGame</ref><sp/>*savefile<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>maxHealth<sp/>);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>weapons<sp/>);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>powerups<sp/>);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>armor<sp/>);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>maxarmor<sp/>);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>ammoPredictTime<sp/>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>deplete_armor<sp/>);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>deplete_rate<sp/>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>deplete_ammount<sp/>);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>nextArmorDepleteTime<sp/>);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>AMMO_NUMTYPES;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>ammo[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_WEAPONS;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>clip[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_POWERUPS;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>powerupEndTime[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>items.Num()<sp/>);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>items.Num();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;WriteDict(<sp/>items[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>pdasViewed[0]<sp/>);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>pdasViewed[1]<sp/>);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>pdasViewed[2]<sp/>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>pdasViewed[3]<sp/>);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>selPDA<sp/>);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>selVideo<sp/>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>selEMail<sp/>);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>selAudio<sp/>);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>pdaOpened<sp/>);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>turkeyScore<sp/>);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>pdas.Num()<sp/>);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pdas.Num();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;WriteString(<sp/>pdas[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>pdaSecurity.Num()<sp/>);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i<sp/>&lt;<sp/>pdaSecurity.Num();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;WriteString(<sp/>pdaSecurity[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>videos.Num()<sp/>);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>videos.Num();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;WriteString(<sp/>videos[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>emails.Num()<sp/>);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>emails.Num();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;WriteString(<sp/>emails[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>nextItemPickup<sp/>);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>nextItemNum<sp/>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>onePickupTime<sp/>);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>pickupItemNames.Num()<sp/>);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pickupItemNames.Num();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;WriteString(<sp/>pickupItemNames[i].icon<sp/>);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;WriteString(<sp/>pickupItemNames[i].name<sp/>);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>objectiveNames.Num()<sp/>);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>objectiveNames.Num();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;WriteString(<sp/>objectiveNames[i].screenshot<sp/>);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;WriteString(<sp/>objectiveNames[i].text<sp/>);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;WriteString(<sp/>objectiveNames[i].title<sp/>);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>levelTriggers.Num()<sp/>);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>levelTriggers.Num();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;WriteString(<sp/>levelTriggers[i].levelName<sp/>);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;WriteString(<sp/>levelTriggers[i].triggerName<sp/>);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>ammoPulse<sp/>);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>weaponPulse<sp/>);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>armorPulse<sp/>);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>lastGiveTime<sp/>);</highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="510"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="511"><highlight class="comment">idInventory::Restore</highlight></codeline>
<codeline lineno="512"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="513"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idInventory::Restore(<sp/><ref refid="classid_restore_game" kindref="compound">idRestoreGame</ref><sp/>*savefile<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>num;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>maxHealth<sp/>);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>weapons<sp/>);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>powerups<sp/>);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>armor<sp/>);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>maxarmor<sp/>);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>ammoPredictTime<sp/>);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>deplete_armor<sp/>);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>deplete_rate<sp/>);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>deplete_ammount<sp/>);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>nextArmorDepleteTime<sp/>);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>AMMO_NUMTYPES;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>ammo[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_WEAPONS;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>clip[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_POWERUPS;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>powerupEndTime[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>num<sp/>);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/>*itemdict<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classid_dict" kindref="compound">idDict</ref>;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;ReadDict(<sp/>itemdict<sp/>);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items.Append(<sp/>itemdict<sp/>);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pdas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>pdasViewed[0]<sp/>);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>pdasViewed[1]<sp/>);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>pdasViewed[2]<sp/>);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>pdasViewed[3]<sp/>);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>selPDA<sp/>);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>selVideo<sp/>);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>selEMail<sp/>);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>selAudio<sp/>);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>pdaOpened<sp/>);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>turkeyScore<sp/>);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>num<sp/>);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>strPda;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;ReadString(<sp/>strPda<sp/>);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdas.Append(<sp/>strPda<sp/>);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pda<sp/>security<sp/>clearances</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>num<sp/>);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>invName;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;ReadString(<sp/>invName<sp/>);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdaSecurity.Append(<sp/>invName<sp/>);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>videos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>num<sp/>);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>strVideo;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;ReadString(<sp/>strVideo<sp/>);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>videos.Append(<sp/>strVideo<sp/>);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>email</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>num<sp/>);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>strEmail;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;ReadString(<sp/>strEmail<sp/>);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emails.Append(<sp/>strEmail<sp/>);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>nextItemPickup<sp/>);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>nextItemNum<sp/>);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>onePickupTime<sp/>);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>num<sp/>);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structid_item_info" kindref="compound">idItemInfo</ref><sp/>info;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;ReadString(<sp/>info.icon<sp/>);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;ReadString(<sp/>info.name<sp/>);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pickupItemNames.Append(<sp/>info<sp/>);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>num<sp/>);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structid_objective_info" kindref="compound">idObjectiveInfo</ref><sp/>obj;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;ReadString(<sp/>obj.screenshot<sp/>);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;ReadString(<sp/>obj.text<sp/>);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;ReadString(<sp/>obj.title<sp/>);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveNames.Append(<sp/>obj<sp/>);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>num<sp/>);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structid_level_trigger_info" kindref="compound">idLevelTriggerInfo</ref><sp/>lti;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;ReadString(<sp/>lti.levelName<sp/>);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;ReadString(<sp/>lti.triggerName<sp/>);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>levelTriggers.Append(<sp/>lti<sp/>);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>ammoPulse<sp/>);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>weaponPulse<sp/>);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>armorPulse<sp/>);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>lastGiveTime<sp/>);</highlight></codeline>
<codeline lineno="627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="630"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="631"><highlight class="comment">idInventory::AmmoIndexForAmmoClass</highlight></codeline>
<codeline lineno="632"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="633"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal">ammo_t<sp/>idInventory::AmmoIndexForAmmoClass(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ammo_classname<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>idWeapon::GetAmmoNumForName(<sp/>ammo_classname<sp/>);</highlight></codeline>
<codeline lineno="636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="639"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="640"><highlight class="comment">idInventory::AmmoIndexForAmmoClass</highlight></codeline>
<codeline lineno="641"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="642"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idInventory::MaxAmmoForAmmoClass(<sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*owner,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ammo_classname<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>owner-&gt;spawnArgs.GetInt(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;max_%s&quot;</highlight><highlight class="normal">,<sp/>ammo_classname<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="648"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="649"><highlight class="comment">idInventory::AmmoPickupNameForIndex</highlight></codeline>
<codeline lineno="650"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="651"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*idInventory::AmmoPickupNameForIndex(<sp/>ammo_t<sp/>ammonum<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>idWeapon::GetAmmoPickupNameForNum(<sp/>ammonum<sp/>);</highlight></codeline>
<codeline lineno="654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="657"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="658"><highlight class="comment">idInventory::WeaponIndexForAmmoClass</highlight></codeline>
<codeline lineno="659"><highlight class="comment">mapping<sp/>could<sp/>be<sp/>prepared<sp/>in<sp/>the<sp/>constructor</highlight></codeline>
<codeline lineno="660"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="661"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idInventory::WeaponIndexForAmmoClass(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/>&amp;<sp/>spawnArgs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ammo_classname<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*weapon_classname;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_WEAPONS;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon_classname<sp/>=<sp/>spawnArgs.GetString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;def_weapon%d&quot;</highlight><highlight class="normal">,<sp/>i<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!weapon_classname<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_decl_entity_def" kindref="compound">idDeclEntityDef</ref><sp/>*decl<sp/>=<sp/>gameLocal.FindEntityDef(<sp/>weapon_classname,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!decl<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!idStr::Icmp(<sp/>ammo_classname,<sp/>decl-&gt;dict.GetString(<sp/></highlight><highlight class="stringliteral">&quot;ammoType&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="682"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="683"><highlight class="comment">idInventory::AmmoIndexForWeaponClass</highlight></codeline>
<codeline lineno="684"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="685"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal">ammo_t<sp/>idInventory::AmmoIndexForWeaponClass(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*weapon_classname,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ammoRequired<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_decl_entity_def" kindref="compound">idDeclEntityDef</ref><sp/>*decl<sp/>=<sp/>gameLocal.FindEntityDef(<sp/>weapon_classname,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!decl<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Error(<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>weapon<sp/>in<sp/>decl<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/>weapon_classname<sp/>);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ammoRequired<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ammoRequired<sp/>=<sp/>decl-&gt;dict.GetInt(<sp/></highlight><highlight class="stringliteral">&quot;ammoRequired&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>ammo_t<sp/>ammo_i<sp/>=<sp/>AmmoIndexForAmmoClass(<sp/>decl-&gt;dict.GetString(<sp/></highlight><highlight class="stringliteral">&quot;ammoType&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ammo_i;</highlight></codeline>
<codeline lineno="696"><highlight class="normal">}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="699"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="700"><highlight class="comment">idInventory::AddPickupName</highlight></codeline>
<codeline lineno="701"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="702"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idInventory::AddPickupName(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*icon<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>num<sp/>=<sp/>pickupItemNames.Num();</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>num<sp/>==<sp/>0<sp/>)<sp/>||<sp/>(<sp/>pickupItemNames[<sp/>num<sp/>-<sp/>1<sp/>].name.Icmp(<sp/>name<sp/>)<sp/>!=<sp/>0<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structid_item_info" kindref="compound">idItemInfo</ref><sp/>&amp;info<sp/>=<sp/>pickupItemNames.Alloc();</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>idStr::Cmpn(<sp/>name,<sp/>STRTABLE_ID,<sp/>STRTABLE_ID_LENGTH<sp/>)<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.name<sp/>=<sp/>common-&gt;GetLanguageDict()-&gt;GetString(<sp/>name<sp/>);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.name<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.icon<sp/>=<sp/>icon;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="717"><highlight class="normal">}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="720"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="721"><highlight class="comment">idInventory::Give</highlight></codeline>
<codeline lineno="722"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="723"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idInventory::Give(<sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*owner,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/>&amp;spawnArgs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*statname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*idealWeapon,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>updateHud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pos;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*end;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weaponString;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_decl_entity_def" kindref="compound">idDeclEntityDef</ref><sp/><sp/><sp/>*weaponDecl;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tookWeapon;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amount;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structid_item_info" kindref="compound">idItemInfo</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*name;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!idStr::Icmpn(<sp/>statname,<sp/></highlight><highlight class="stringliteral">&quot;ammo_&quot;</highlight><highlight class="normal">,<sp/>5<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>AmmoIndexForAmmoClass(<sp/>statname<sp/>);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>MaxAmmoForAmmoClass(<sp/>owner,<sp/>statname<sp/>);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ammo[<sp/>i<sp/>]<sp/>&gt;=<sp/>max<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amount<sp/>=<sp/>atoi(<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>amount<sp/>)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ammo[<sp/>i<sp/>]<sp/>+=<sp/>amount;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>max<sp/>&gt;<sp/>0<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>ammo[<sp/>i<sp/>]<sp/>&gt;<sp/>max<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ammo[<sp/>i<sp/>]<sp/>=<sp/>max;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ammoPulse<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>AmmoPickupNameForIndex(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>idStr::Length(<sp/>name<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddPickupName(<sp/>name,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!idStr::Icmp(<sp/>statname,<sp/></highlight><highlight class="stringliteral">&quot;armor&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>armor<sp/>&gt;=<sp/>maxarmor<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>hold<sp/>any<sp/>more,<sp/>so<sp/>leave<sp/>the<sp/>item</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amount<sp/>=<sp/>atoi(<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>amount<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>armor<sp/>+=<sp/>amount;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>armor<sp/>&gt;<sp/>maxarmor<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>armor<sp/>=<sp/>maxarmor;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextArmorDepleteTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>armorPulse<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>idStr::FindText(<sp/>statname,<sp/></highlight><highlight class="stringliteral">&quot;inclip_&quot;</highlight><highlight class="normal"><sp/>)<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>WeaponIndexForAmmoClass(<sp/>spawnArgs,<sp/>statname<sp/>+<sp/>7<sp/>);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>!=<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set,<sp/>don&apos;t<sp/>add.<sp/>not<sp/>going<sp/>over<sp/>the<sp/>clip<sp/>size<sp/>limit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip[<sp/>i<sp/>]<sp/>=<sp/>atoi(<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!idStr::Icmp(<sp/>statname,<sp/></highlight><highlight class="stringliteral">&quot;berserk&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GivePowerUp(<sp/>owner,<sp/>BERSERK,<sp/>SEC2MS(<sp/>atof(<sp/>value<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!idStr::Icmp(<sp/>statname,<sp/></highlight><highlight class="stringliteral">&quot;mega&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GivePowerUp(<sp/>owner,<sp/>MEGAHEALTH,<sp/>SEC2MS(<sp/>atof(<sp/>value<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!idStr::Icmp(<sp/>statname,<sp/></highlight><highlight class="stringliteral">&quot;weapon&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tookWeapon<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>pos<sp/>=<sp/>value;<sp/>pos<sp/>!=<sp/>NULL;<sp/>pos<sp/>=<sp/>end<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>strchr(<sp/>pos,<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>end<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>end<sp/>-<sp/>pos;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end++;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>strlen(<sp/>pos<sp/>);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>weaponName(<sp/>pos,<sp/>0,<sp/>len<sp/>);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>number<sp/>of<sp/>the<sp/>matching<sp/>weapon<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_WEAPONS;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weaponName<sp/>==<sp/>spawnArgs.GetString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;def_weapon%d&quot;</highlight><highlight class="normal">,<sp/>i<sp/>)<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>&gt;=<sp/>MAX_WEAPONS<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Error(<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>weapon<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/>weaponName.c_str()<sp/>);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>the<sp/>media<sp/>for<sp/>this<sp/>weapon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weaponDecl<sp/>=<sp/>gameLocal.FindEntityDef(<sp/>weaponName,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>pickup<sp/>&quot;no<sp/>ammo&quot;<sp/>weapon<sp/>types<sp/>twice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>for<sp/>D3<sp/>SP<sp/>..<sp/>there<sp/>is<sp/>only<sp/>one<sp/>case<sp/>in<sp/>the<sp/>game<sp/>where<sp/>you<sp/>can<sp/>get<sp/>a<sp/>no<sp/>ammo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>weapon<sp/>when<sp/>you<sp/>might<sp/>already<sp/>have<sp/>it,<sp/>in<sp/>that<sp/>case<sp/>it<sp/>is<sp/>more<sp/>conistent<sp/>to<sp/>pick<sp/>it<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isMultiplayer<sp/>&amp;&amp;<sp/>weaponDecl<sp/>&amp;&amp;<sp/>(<sp/>weapons<sp/>&amp;<sp/>(<sp/>1<sp/>&lt;&lt;<sp/>i<sp/>)<sp/>)<sp/>&amp;&amp;<sp/>!weaponDecl-&gt;dict.GetInt(<sp/></highlight><highlight class="stringliteral">&quot;ammoRequired&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.world-&gt;spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;no_Weapons&quot;</highlight><highlight class="normal"><sp/>)<sp/>||<sp/>(<sp/>weaponName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;weapon_fists&quot;</highlight><highlight class="normal"><sp/>)<sp/>||<sp/>(<sp/>weaponName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;weapon_soulcube&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>weapons<sp/>&amp;<sp/>(<sp/>1<sp/>&lt;&lt;<sp/>i<sp/>)<sp/>)<sp/>==<sp/>0<sp/>||<sp/>gameLocal.isMultiplayer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>owner-&gt;GetUserInfo()-&gt;GetBool(<sp/></highlight><highlight class="stringliteral">&quot;ui_autoSwitch&quot;</highlight><highlight class="normal"><sp/>)<sp/>&amp;&amp;<sp/>idealWeapon<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>!gameLocal.isClient<sp/>);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*idealWeapon<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>owner-&gt;hud<sp/>&amp;&amp;<sp/>updateHud<sp/>&amp;&amp;<sp/>lastGiveTime<sp/>+<sp/>1000<sp/>&lt;<sp/>gameLocal.time<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>owner-&gt;hud-&gt;SetStateInt(<sp/></highlight><highlight class="stringliteral">&quot;newWeapon&quot;</highlight><highlight class="normal">,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>owner-&gt;hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;newWeapon&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastGiveTime<sp/>=<sp/>gameLocal.time;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weaponPulse<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapons<sp/>|=<sp/>(<sp/>1<sp/>&lt;&lt;<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tookWeapon<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tookWeapon;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!idStr::Icmp(<sp/>statname,<sp/></highlight><highlight class="stringliteral">&quot;item&quot;</highlight><highlight class="normal"><sp/>)<sp/>||<sp/>!idStr::Icmp(<sp/>statname,<sp/></highlight><highlight class="stringliteral">&quot;icon&quot;</highlight><highlight class="normal"><sp/>)<sp/>||<sp/>!idStr::Icmp(<sp/>statname,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ignore<sp/>these<sp/>as<sp/>they&apos;re<sp/>handled<sp/>elsewhere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unknown<sp/>item</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Warning(<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>stat<sp/>&apos;%s&apos;<sp/>added<sp/>to<sp/>player&apos;s<sp/>inventory&quot;</highlight><highlight class="normal">,<sp/>statname<sp/>);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="844"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="845"><highlight class="comment">idInventoy::Drop</highlight></codeline>
<codeline lineno="846"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="847"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idInventory::Drop(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/>&amp;spawnArgs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*weapon_classname,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>weapon_index<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>the<sp/>weapon<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>also<sp/>remove<sp/>the<sp/>ammo<sp/>associated<sp/>with<sp/>the<sp/>weapon<sp/>as<sp/>we<sp/>pushed<sp/>it<sp/>in<sp/>the<sp/>item</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>weapon_index<sp/>!=<sp/>-1<sp/>||<sp/>weapon_classname<sp/>);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weapon_index<sp/>==<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>weapon_index<sp/>=<sp/>0;<sp/>weapon_index<sp/>&lt;<sp/>MAX_WEAPONS;<sp/>weapon_index++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!idStr::Icmp(<sp/>weapon_classname,<sp/>spawnArgs.GetString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;def_weapon%d&quot;</highlight><highlight class="normal">,<sp/>weapon_index<sp/>)<sp/>)<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weapon_index<sp/>&gt;=<sp/>MAX_WEAPONS<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Error(<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>weapon<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/>weapon_classname<sp/>);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!weapon_classname<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon_classname<sp/>=<sp/>spawnArgs.GetString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;def_weapon%d&quot;</highlight><highlight class="normal">,<sp/>weapon_index<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>weapons<sp/>&amp;=<sp/>(<sp/>0xffffffff<sp/>^<sp/>(<sp/>1<sp/>&lt;&lt;<sp/>weapon_index<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>ammo_t<sp/>ammo_i<sp/>=<sp/>AmmoIndexForWeaponClass(<sp/>weapon_classname,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ammo_i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip[<sp/>weapon_index<sp/>]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ammo[<sp/>ammo_i<sp/>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal">}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="873"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="874"><highlight class="comment">idInventory::HasAmmo</highlight></codeline>
<codeline lineno="875"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="876"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idInventory::HasAmmo(<sp/>ammo_t<sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amount<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>type<sp/>==<sp/>0<sp/>)<sp/>||<sp/>!amount<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>always<sp/>allow<sp/>weapons<sp/>that<sp/>don&apos;t<sp/>use<sp/>ammo<sp/>to<sp/>fire</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>we<sp/>have<sp/>infinite<sp/>ammo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ammo[<sp/>type<sp/>]<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>how<sp/>many<sp/>shots<sp/>we<sp/>can<sp/>fire</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ammo[<sp/>type<sp/>]<sp/>/<sp/>amount;</highlight></codeline>
<codeline lineno="890"><highlight class="normal">}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="893"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="894"><highlight class="comment">idInventory::HasAmmo</highlight></codeline>
<codeline lineno="895"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="896"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idInventory::HasAmmo(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*weapon_classname<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ammoRequired;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>ammo_t<sp/>ammo_i<sp/>=<sp/>AmmoIndexForWeaponClass(<sp/>weapon_classname,<sp/>&amp;ammoRequired<sp/>);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HasAmmo(<sp/>ammo_i,<sp/>ammoRequired<sp/>);</highlight></codeline>
<codeline lineno="901"><highlight class="normal">}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="904"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="905"><highlight class="comment">idInventory::UseAmmo</highlight></codeline>
<codeline lineno="906"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="907"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idInventory::UseAmmo(<sp/>ammo_t<sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amount<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!HasAmmo(<sp/>type,<sp/>amount<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>take<sp/>an<sp/>ammo<sp/>away<sp/>if<sp/>not<sp/>infinite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ammo[<sp/>type<sp/>]<sp/>&gt;=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ammo[<sp/>type<sp/>]<sp/>-=<sp/>amount;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ammoPredictTime<sp/>=<sp/>gameLocal.time;<sp/></highlight><highlight class="comment">//<sp/>mp<sp/>client:<sp/>we<sp/>predict<sp/>this.<sp/>mark<sp/>time<sp/>so<sp/>we&apos;re<sp/>not<sp/>confused<sp/>by<sp/>snapshots</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="920"><highlight class="normal">}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="923"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="924"><highlight class="comment">idInventory::UpdateArmor</highlight></codeline>
<codeline lineno="925"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="926"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idInventory::UpdateArmor(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>deplete_armor<sp/>!=<sp/>0.0f<sp/>&amp;&amp;<sp/>deplete_armor<sp/>&lt;<sp/>armor<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!nextArmorDepleteTime<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextArmorDepleteTime<sp/>=<sp/>gameLocal.time<sp/>+<sp/>deplete_rate<sp/>*<sp/>1000;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.time<sp/>&gt;<sp/>nextArmorDepleteTime<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>armor<sp/>-=<sp/>deplete_ammount;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>armor<sp/>&lt;<sp/>deplete_armor<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>armor<sp/>=<sp/>deplete_armor;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextArmorDepleteTime<sp/>=<sp/>gameLocal.time<sp/>+<sp/>deplete_rate<sp/>*<sp/>1000;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="939"><highlight class="normal">}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="942"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="943"><highlight class="comment">idPlayer::idPlayer</highlight></codeline>
<codeline lineno="944"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="945"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal">idPlayer::idPlayer()<sp/>{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>&amp;usercmd,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>usercmd<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/>noclip<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>godmode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnAnglesSet<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnAngles<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ang_zero;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>viewAngles<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ang_zero;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>cmdAngles<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ang_zero;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>oldButtons<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>buttonMask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/>oldFlags<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>lastHitTime<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>lastSndHitTime<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>lastSavingThrowTime<sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/>weapon<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>hud<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>objectiveSystem<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>objectiveSystemOpen<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/>heartRate<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>BASE_HEARTRATE;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>heartInfo.Init(<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>lastHeartAdjust<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>lastHeartBeat<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>lastDmgTime<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>deathClearContentsTime<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>lastArmorPulse<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-10000;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>stamina<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/>healthPool<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>nextHealthPulse<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/>healthPulse<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>nextHealthTake<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/>healthTake<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>scoreBoardOpen<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>forceScoreBoard<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>forceRespawn<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>spectating<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>spectator<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>colorBar<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vec3_zero;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>colorBarIndex<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>forcedReady<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/>wantSpectate<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>lastHitToggle<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>minRespawnTime<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>maxRespawnTime<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>firstPersonViewOrigin<sp/><sp/><sp/>=<sp/>vec3_zero;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>firstPersonViewAxis<sp/><sp/><sp/><sp/><sp/>=<sp/>mat3_identity;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>hipJoint<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>INVALID_JOINT;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>chestJoint<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>INVALID_JOINT;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>headJoint<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>INVALID_JOINT;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>bobFoot<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>bobFrac<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/>bobfracsin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>bobCycle<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/>xyspeed<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/>stepUpTime<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>stepUpDelta<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>idealLegsYaw<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>legsYaw<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>legsForward<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>oldViewYaw<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/>viewBobAngles<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ang_zero;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>viewBob<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vec3_zero;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>landChange<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>landTime<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>currentWeapon<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>idealWeapon<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>previousWeapon<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>weaponSwitchTime<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>0;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>weaponEnabled<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>weapon_soulcube<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>weapon_pda<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/>weapon_fists<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>showWeaponViewModel<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>skin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>powerUpSkin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/>baseSkinName<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>numProjectilesFired<sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>numProjectileHits<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>airless<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>airTics<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>lastAirDamage<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>gibDeath<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>gibsLaunched<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/>gibsDir<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vec3_zero;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>zoomFov.Init(<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>centerView.Init(<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>fxFov<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>influenceFov<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>influenceActive<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>influenceRadius<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>influenceEntity<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>influenceMaterial<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>influenceSkin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>privateCameraView<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>loggedViewAngles,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>loggedViewAngles<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>loggedAccel,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>loggedAccel<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>currentLoggedAccel<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>focusTime<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>focusGUIent<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>focusUI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/>focusCharacter<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>talkCursor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>focusVehicle<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>cursor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/>oldMouseX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>oldMouseY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/>pdaAudio<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/>pdaVideo<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>pdaVideoWave<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/>lastDamageDef<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/>lastDamageDir<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vec3_zero;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>lastDamageLocation<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/>smoothedFrame<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>smoothedOriginUpdated<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>smoothedOrigin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vec3_zero;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>smoothedAngles<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ang_zero;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/>fl.networkSync<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>latchedTeam<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>doingDeathSkin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>weaponGone<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>useInitialSpawns<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/>tourneyRank<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>lastSpectateTeleport<sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>tourneyLine<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>hiddenWeapon<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>tipUp<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/>objectiveUp<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/>teleportEntity<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>teleportKiller<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/>respawning<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>ready<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/>leader<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>lastSpectateChange<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>lastTeleFX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-9999;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>weaponCatchup<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>lastSnapshotSequence<sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/>MPAim<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>lastMPAim<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/>lastMPAimTime<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>MPAimFadeTime<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>MPAimHighlight<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnedTime<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>lastManOver<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/>lastManPlayAgain<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>lastManPresent<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/>isTelefragged<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/>isLagged<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/>isChatting<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>selfSmooth<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1130"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1131"><highlight class="comment">idPlayer::LinkScriptVariables</highlight></codeline>
<codeline lineno="1132"><highlight class="comment"></highlight></codeline>
<codeline lineno="1133"><highlight class="comment">set<sp/>up<sp/>conditions<sp/>for<sp/>animation</highlight></codeline>
<codeline lineno="1134"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1135"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::LinkScriptVariables(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_FORWARD.LinkTo(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scriptObject,<sp/></highlight><highlight class="stringliteral">&quot;AI_FORWARD&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_BACKWARD.LinkTo(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scriptObject,<sp/></highlight><highlight class="stringliteral">&quot;AI_BACKWARD&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_STRAFE_LEFT.LinkTo(<sp/><sp/><sp/><sp/><sp/><sp/>scriptObject,<sp/></highlight><highlight class="stringliteral">&quot;AI_STRAFE_LEFT&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_STRAFE_RIGHT.LinkTo(<sp/><sp/><sp/><sp/><sp/>scriptObject,<sp/></highlight><highlight class="stringliteral">&quot;AI_STRAFE_RIGHT&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_ATTACK_HELD.LinkTo(<sp/><sp/><sp/><sp/><sp/><sp/>scriptObject,<sp/></highlight><highlight class="stringliteral">&quot;AI_ATTACK_HELD&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_WEAPON_FIRED.LinkTo(<sp/><sp/><sp/><sp/><sp/>scriptObject,<sp/></highlight><highlight class="stringliteral">&quot;AI_WEAPON_FIRED&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_JUMP.LinkTo(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scriptObject,<sp/></highlight><highlight class="stringliteral">&quot;AI_JUMP&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_DEAD.LinkTo(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scriptObject,<sp/></highlight><highlight class="stringliteral">&quot;AI_DEAD&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_CROUCH.LinkTo(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scriptObject,<sp/></highlight><highlight class="stringliteral">&quot;AI_CROUCH&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_ONGROUND.LinkTo(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scriptObject,<sp/></highlight><highlight class="stringliteral">&quot;AI_ONGROUND&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_ONLADDER.LinkTo(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scriptObject,<sp/></highlight><highlight class="stringliteral">&quot;AI_ONLADDER&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_HARDLANDING.LinkTo(<sp/><sp/><sp/><sp/><sp/><sp/>scriptObject,<sp/></highlight><highlight class="stringliteral">&quot;AI_HARDLANDING&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_SOFTLANDING.LinkTo(<sp/><sp/><sp/><sp/><sp/><sp/>scriptObject,<sp/></highlight><highlight class="stringliteral">&quot;AI_SOFTLANDING&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_RUN.LinkTo(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scriptObject,<sp/></highlight><highlight class="stringliteral">&quot;AI_RUN&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_PAIN.LinkTo(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scriptObject,<sp/></highlight><highlight class="stringliteral">&quot;AI_PAIN&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_RELOAD.LinkTo(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scriptObject,<sp/></highlight><highlight class="stringliteral">&quot;AI_RELOAD&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_TELEPORT.LinkTo(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scriptObject,<sp/></highlight><highlight class="stringliteral">&quot;AI_TELEPORT&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_TURN_LEFT.LinkTo(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scriptObject,<sp/></highlight><highlight class="stringliteral">&quot;AI_TURN_LEFT&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_TURN_RIGHT.LinkTo(<sp/><sp/><sp/><sp/><sp/><sp/><sp/>scriptObject,<sp/></highlight><highlight class="stringliteral">&quot;AI_TURN_RIGHT&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1159"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1160"><highlight class="comment">idPlayer::SetupWeaponEntity</highlight></codeline>
<codeline lineno="1161"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1162"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::SetupWeaponEntity(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*weap;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weapon.GetEntity()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>rid<sp/>of<sp/>old<sp/>weapon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;Clear();</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentWeapon<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.isClient<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classid_weapon" kindref="compound">idWeapon</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>gameLocal.SpawnEntityType(<sp/>idWeapon::Type,<sp/>NULL<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;SetOwner(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentWeapon<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>w<sp/>=<sp/>0;<sp/>w<sp/>&lt;<sp/>MAX_WEAPONS;<sp/>w++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weap<sp/>=<sp/>spawnArgs.GetString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;def_weapon%d&quot;</highlight><highlight class="normal">,<sp/>w<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weap<sp/>&amp;&amp;<sp/>*weap<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idWeapon::CacheWeapon(<sp/>weap<sp/>);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1186"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1187"><highlight class="comment">idPlayer::Init</highlight></codeline>
<codeline lineno="1188"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1189"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Init(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*value;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_key_value" kindref="compound">idKeyValue</ref><sp/><sp/><sp/><sp/>*kv;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/>noclip<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/>godmode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>oldButtons<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/>oldFlags<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>currentWeapon<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/>idealWeapon<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/>previousWeapon<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>weaponSwitchTime<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>weaponEnabled<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/>weapon_soulcube<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>SlotForWeapon(<sp/></highlight><highlight class="stringliteral">&quot;weapon_soulcube&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/>weapon_pda<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>SlotForWeapon(<sp/></highlight><highlight class="stringliteral">&quot;weapon_pda&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/>weapon_fists<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>SlotForWeapon(<sp/></highlight><highlight class="stringliteral">&quot;weapon_fists&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>showWeaponViewModel<sp/><sp/><sp/><sp/><sp/>=<sp/>GetUserInfo()-&gt;GetBool(<sp/></highlight><highlight class="stringliteral">&quot;ui_showGun&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>lastDmgTime<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/>lastArmorPulse<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-10000;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/>lastHeartAdjust<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/>lastHeartBeat<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>heartInfo.Init(<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>bobCycle<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>bobFrac<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/>landChange<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>landTime<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/>zoomFov.Init(<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/>centerView.Init(<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/>fxFov<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/>influenceFov<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/>influenceActive<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/>influenceRadius<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/>influenceEntity<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/>influenceMaterial<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/>influenceSkin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/>currentLoggedAccel<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/>focusTime<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/>focusGUIent<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/>focusUI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/>focusCharacter<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/>talkCursor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>focusVehicle<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>any<sp/>damage<sp/>effects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/>playerView.ClearEffects();</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>damage<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/>fl.takedamage<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/>ClearPain();</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>restore<sp/>persistent<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>RestorePersistantInfo();</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/>bobCycle<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/>stamina<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/>healthPool<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/>nextHealthPulse<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/>healthPulse<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/>nextHealthTake<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>healthTake<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>SetupWeaponEntity();</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/>currentWeapon<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/>previousWeapon<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/>heartRate<sp/>=<sp/>BASE_HEARTRATE;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/>AdjustHeartRate(<sp/>BASE_HEARTRATE,<sp/>0.0f,<sp/>0.0f,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/>idealLegsYaw<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/>legsYaw<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>legsForward<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/>oldViewYaw<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>pm_<sp/>cvars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.isMultiplayer<sp/>||<sp/>gameLocal.isServer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kv<sp/>=<sp/>spawnArgs.MatchPrefix(<sp/></highlight><highlight class="stringliteral">&quot;pm_&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>kv<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cvarSystem-&gt;SetCVarString(<sp/>kv-&gt;GetKey(),<sp/>kv-&gt;GetValue()<sp/>);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kv<sp/>=<sp/>spawnArgs.MatchPrefix(<sp/></highlight><highlight class="stringliteral">&quot;pm_&quot;</highlight><highlight class="normal">,<sp/>kv<sp/>);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disable<sp/>stamina<sp/>on<sp/>hell<sp/>levels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.world<sp/>&amp;&amp;<sp/>gameLocal.world-&gt;spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;no_stamina&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_stamina.SetFloat(<sp/>0.0f<sp/>);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stamina<sp/>always<sp/>initialized<sp/>to<sp/>maximum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>stamina<sp/>=<sp/>pm_stamina.GetFloat();</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>air<sp/>always<sp/>initialized<sp/>to<sp/>maximum<sp/>too</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>airTics<sp/>=<sp/>pm_airTics.GetFloat();</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/>airless<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/>gibDeath<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/>gibsLaunched<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/>gibsDir.Zero();</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>gravity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.SetGravity(<sp/>gameLocal.GetGravity()<sp/>);</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>out<sp/>standing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/>SetEyeHeight(<sp/>pm_normalviewheight.GetFloat()<sp/>);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/>stepUpTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/>stepUpDelta<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/>viewBobAngles.Zero();</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/>viewBob.Zero();</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;model&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>value<sp/>&amp;&amp;<sp/>(<sp/>*value<sp/>!=<sp/>0<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetModel(<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>cursor<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor-&gt;SetStateInt(<sp/></highlight><highlight class="stringliteral">&quot;talkcursor&quot;</highlight><highlight class="normal">,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;combatcursor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;itemcursor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;guicursor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>gameLocal.isMultiplayer<sp/>||<sp/>g_testDeath.GetBool()<sp/>)<sp/>&amp;&amp;<sp/>skin<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSkin(<sp/>skin<sp/>);</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderEntity.shaderParms[6]<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;spawn_skin&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/>&amp;value<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skin<sp/>=<sp/>declManager-&gt;FindSkin(<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSkin(<sp/>skin<sp/>);</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderEntity.shaderParms[6]<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;bone_hips&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/>hipJoint<sp/>=<sp/>animator.GetJointHandle(<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hipJoint<sp/>==<sp/>INVALID_JOINT<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Error(<sp/></highlight><highlight class="stringliteral">&quot;Joint<sp/>&apos;%s&apos;<sp/>not<sp/>found<sp/>for<sp/>&apos;bone_hips&apos;<sp/>on<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/>value,<sp/>name.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;bone_chest&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/>chestJoint<sp/>=<sp/>animator.GetJointHandle(<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>chestJoint<sp/>==<sp/>INVALID_JOINT<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Error(<sp/></highlight><highlight class="stringliteral">&quot;Joint<sp/>&apos;%s&apos;<sp/>not<sp/>found<sp/>for<sp/>&apos;bone_chest&apos;<sp/>on<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/>value,<sp/>name.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;bone_head&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>headJoint<sp/>=<sp/>animator.GetJointHandle(<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>headJoint<sp/>==<sp/>INVALID_JOINT<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Error(<sp/></highlight><highlight class="stringliteral">&quot;Joint<sp/>&apos;%s&apos;<sp/>not<sp/>found<sp/>for<sp/>&apos;bone_head&apos;<sp/>on<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/>value,<sp/>name.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>the<sp/>script<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_FORWARD<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_BACKWARD<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_STRAFE_LEFT<sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_STRAFE_RIGHT<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_ATTACK_HELD<sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_WEAPON_FIRED<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_JUMP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_DEAD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_CROUCH<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_ONGROUND<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_ONLADDER<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_HARDLANDING<sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_SOFTLANDING<sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_RUN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_PAIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_RELOAD<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_TELEPORT<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_TURN_LEFT<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_TURN_RIGHT<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>the<sp/>script<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/>ConstructScriptObject();</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>execute<sp/>the<sp/>script<sp/>so<sp/>the<sp/>script<sp/>object&apos;s<sp/>constructor<sp/>takes<sp/>effect<sp/>immediately</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/>scriptThread-&gt;Execute();</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/>forceScoreBoard<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/>forcedReady<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/>privateCameraView<sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/>lastSpectateChange<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/>lastTeleFX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-9999;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/>hiddenWeapon<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/>tipUp<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/>objectiveUp<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/>teleportEntity<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/>teleportKiller<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/>leader<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPrivateCameraView(<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/>lastSnapshotSequence<sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/>MPAim<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/>lastMPAim<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/>lastMPAimTime<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/>MPAimFadeTime<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/>MPAimHighlight<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;aim_clear&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/>cvarSystem-&gt;SetCVarBool(<sp/></highlight><highlight class="stringliteral">&quot;ui_chat&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1406"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1407"><highlight class="comment">idPlayer::Spawn</highlight></codeline>
<codeline lineno="1408"><highlight class="comment"></highlight></codeline>
<codeline lineno="1409"><highlight class="comment">Prepare<sp/>any<sp/>resources<sp/>used<sp/>by<sp/>the<sp/>player.</highlight></codeline>
<codeline lineno="1410"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1411"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Spawn(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_bounds" kindref="compound">idBounds</ref><sp/><sp/><sp/><sp/>bounds;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>entityNumber<sp/>&gt;=<sp/>MAX_CLIENTS<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Error(<sp/></highlight><highlight class="stringliteral">&quot;entityNum<sp/>&gt;<sp/>MAX_CLIENTS<sp/>for<sp/>player.<sp/><sp/>Player<sp/>may<sp/>only<sp/>be<sp/>spawned<sp/>with<sp/>a<sp/>client.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allow<sp/>thinking<sp/>during<sp/>cinematics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/>cinematic<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isMultiplayer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>always<sp/>start<sp/>in<sp/>spectating<sp/>state<sp/>waiting<sp/>to<sp/>be<sp/>spawned<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>this<sp/>before<sp/>SetClipModel<sp/>to<sp/>get<sp/>the<sp/>right<sp/>bounding<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spectating<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>our<sp/>collision<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.SetSelf(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/>SetClipModel();</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.SetMass(<sp/>spawnArgs.GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;100&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.SetContents(<sp/>CONTENTS_BODY<sp/>);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.SetClipMask(<sp/>MASK_PLAYERSOLID<sp/>);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPhysics(<sp/>&amp;physicsObj<sp/>);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/>InitAASLocation();</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/>skin<sp/>=<sp/>renderEntity.customSkin;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>the<sp/>local<sp/>player<sp/>needs<sp/>guis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.isMultiplayer<sp/>||<sp/>entityNumber<sp/>==<sp/>gameLocal.localClientNum<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>HUD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isMultiplayer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud<sp/>=<sp/>uiManager-&gt;FindGui(<sp/></highlight><highlight class="stringliteral">&quot;guis/mphud.gui&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;hud&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>temp<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud<sp/>=<sp/>uiManager-&gt;FindGui(<sp/>temp,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;Activate(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>gameLocal.time<sp/>);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>cursor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;cursor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>temp<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor<sp/>=<sp/>uiManager-&gt;FindGui(<sp/>temp,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>gameLocal.isMultiplayer,<sp/>gameLocal.isMultiplayer<sp/>);</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>cursor<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor-&gt;Activate(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>gameLocal.time<sp/>);</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem<sp/>=<sp/>uiManager-&gt;FindGui(<sp/></highlight><highlight class="stringliteral">&quot;guis/pda.gui&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystemOpen<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/>SetLastHitTime(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>the<sp/>armor<sp/>sound<sp/>feedback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/>declManager-&gt;FindSound(<sp/></highlight><highlight class="stringliteral">&quot;player_sounds_hitArmor&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>conditions<sp/>for<sp/>animation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/>LinkScriptVariables();</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/>animator.RemoveOriginOffset(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>user<sp/>info<sp/>related<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>server,<sp/>we<sp/>wait<sp/>for<sp/>the<sp/>userinfo<sp/>broadcast,<sp/>as<sp/>this<sp/>controls<sp/>when<sp/>the<sp/>player<sp/>is<sp/>initially<sp/>spawned<sp/>in<sp/>game</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isClient<sp/>||<sp/>entityNumber<sp/>==<sp/>gameLocal.localClientNum<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UserInfoChanged(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>combat<sp/>collision<sp/>hull<sp/>for<sp/>exact<sp/>collision<sp/>detection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/>SetCombatModel();</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>the<sp/>damage<sp/>effects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/>playerView.SetPlayerEntity(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>supress<sp/>model<sp/>in<sp/>non-player<sp/>views,<sp/>but<sp/>allow<sp/>it<sp/>in<sp/>mirrors<sp/>and<sp/>remote<sp/>views</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/>renderEntity.suppressSurfaceInViewID<sp/>=<sp/>entityNumber+1;</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>project<sp/>shadow<sp/>on<sp/>self<sp/>or<sp/>weapon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/>renderEntity.noSelfShadow<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_a_f_attachment" kindref="compound">idAFAttachment</ref><sp/>*headEnt<sp/>=<sp/>head.GetEntity();</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>headEnt<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>headEnt-&gt;GetRenderEntity()-&gt;suppressSurfaceInViewID<sp/>=<sp/>entityNumber+1;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>headEnt-&gt;GetRenderEntity()-&gt;noSelfShadow<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isMultiplayer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Init();</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hide();<sp/></highlight><highlight class="comment">//<sp/>properly<sp/>hidden<sp/>if<sp/>starting<sp/>as<sp/>a<sp/>spectator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.isClient<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>yourself<sp/>ready<sp/>to<sp/>spawn.<sp/>idMultiplayerGame<sp/>will<sp/>decide<sp/>when/if<sp/>appropriate<sp/>and<sp/>call<sp/>SpawnFromSpawnSpot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetupWeaponEntity();</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SpawnFromSpawnSpot();</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forceRespawn<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>spectating<sp/>);</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetupWeaponEntity();</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SpawnFromSpawnSpot();</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>trigger<sp/>playtesting<sp/>item<sp/>gives,<sp/>if<sp/>we<sp/>didn&apos;t<sp/>get<sp/>here<sp/>from<sp/>a<sp/>previous<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>devmap<sp/>key<sp/>will<sp/>be<sp/>set<sp/>on<sp/>the<sp/>first<sp/>devmap,<sp/>but<sp/>cleared<sp/>on<sp/>any<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>transitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.isMultiplayer<sp/>&amp;&amp;<sp/>gameLocal.serverInfo.FindKey(<sp/></highlight><highlight class="stringliteral">&quot;devmap&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fire<sp/>a<sp/>trigger<sp/>with<sp/>the<sp/>name<sp/>&quot;devmap&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*ent<sp/>=<sp/>gameLocal.FindEntity(<sp/></highlight><highlight class="stringliteral">&quot;devmap&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ent<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;ActivateTargets(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>spawn<sp/>with<sp/>a<sp/>full<sp/>soul<sp/>cube,<sp/>so<sp/>we<sp/>need<sp/>to<sp/>make<sp/>sure<sp/>the<sp/>hud<sp/>knows<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weapon_soulcube<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>(<sp/>inventory.weapons<sp/>&amp;<sp/>(<sp/>1<sp/>&lt;&lt;<sp/>weapon_soulcube<sp/>)<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_souls<sp/>=<sp/>inventory.MaxAmmoForAmmoClass(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ammo_souls&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>inventory.ammo[<sp/>idWeapon::GetAmmoNumForName(<sp/></highlight><highlight class="stringliteral">&quot;ammo_souls&quot;</highlight><highlight class="normal"><sp/>)<sp/>]<sp/>&gt;=<sp/>max_souls<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;soulCubeReady&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;itemPickup&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>GetPDA()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>any<sp/>emails<sp/>from<sp/>the<sp/>inventory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>inventory.emails.Num();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetPDA()-&gt;AddEmail(<sp/>inventory.emails[i]<sp/>);</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetPDA()-&gt;SetSecurity(<sp/>common-&gt;GetLanguageDict()-&gt;GetString(<sp/></highlight><highlight class="stringliteral">&quot;#str_00066&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.world-&gt;spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;no_Weapons&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hiddenWeapon<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weapon.GetEntity()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;LowerWeapon();</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idealWeapon<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hiddenWeapon<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateHudWeapon();</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;StateChanged(<sp/>gameLocal.time<sp/>);</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/>tipUp<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/>objectiveUp<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>inventory.levelTriggers.Num()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventMS(<sp/>&amp;EV_Player_LevelTrigger,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/>inventory.pdaOpened<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/>inventory.selPDA<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.isMultiplayer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>g_skill.GetInteger()<sp/>&lt;<sp/>2<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&lt;<sp/>25<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>health<sp/>=<sp/>25;</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>g_useDynamicProtection.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_damageScale.SetFloat(<sp/>1.0f<sp/>);</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_damageScale.SetFloat(<sp/>1.0f<sp/>);</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_armorProtection.SetFloat(<sp/>(<sp/>g_skill.GetInteger()<sp/>&lt;<sp/>2<sp/>)<sp/>?<sp/>0.4f<sp/>:<sp/>0.2f<sp/>);</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ID_DEMO_BUILD</highlight></codeline>
<codeline lineno="1580"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>g_skill.GetInteger()<sp/>==<sp/>3<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>healthTake<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextHealthTake<sp/>=<sp/>gameLocal.time<sp/>+<sp/>g_healthTakeTime.GetInteger()<sp/>*<sp/>1000;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1585"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1590"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1591"><highlight class="comment">idPlayer::~idPlayer()</highlight></codeline>
<codeline lineno="1592"><highlight class="comment"></highlight></codeline>
<codeline lineno="1593"><highlight class="comment">Release<sp/>any<sp/>resources<sp/>used<sp/>by<sp/>the<sp/>player.</highlight></codeline>
<codeline lineno="1594"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="1595"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal">idPlayer::~idPlayer()<sp/>{</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>weapon.GetEntity();</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/>weapon<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1602"><highlight class="comment">===========</highlight></codeline>
<codeline lineno="1603"><highlight class="comment">idPlayer::Save</highlight></codeline>
<codeline lineno="1604"><highlight class="comment">===========</highlight></codeline>
<codeline lineno="1605"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Save(<sp/><ref refid="classid_save_game" kindref="compound">idSaveGame</ref><sp/>*savefile<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteUsercmd(<sp/>usercmd<sp/>);</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/>playerView.Save(<sp/>savefile<sp/>);</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>noclip<sp/>);</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>godmode<sp/>);</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>save<sp/>spawnAnglesSet,<sp/>since<sp/>we&apos;ll<sp/>have<sp/>to<sp/>reset<sp/>them<sp/>after<sp/>loading<sp/>the<sp/>savegame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteAngles(<sp/>spawnAngles<sp/>);</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteAngles(<sp/>viewAngles<sp/>);</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteAngles(<sp/>cmdAngles<sp/>);</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>buttonMask<sp/>);</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>oldButtons<sp/>);</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>oldFlags<sp/>);</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>lastHitTime<sp/>);</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>lastSndHitTime<sp/>);</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>lastSavingThrowTime<sp/>);</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>idBoolFields<sp/>don&apos;t<sp/>need<sp/>to<sp/>be<sp/>saved,<sp/>just<sp/>re-linked<sp/>in<sp/>Restore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/>inventory.Save(<sp/>savefile<sp/>);</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/>weapon.Save(<sp/>savefile<sp/>);</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteUserInterface(<sp/>hud,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteUserInterface(<sp/>objectiveSystem,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>objectiveSystemOpen<sp/>);</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>weapon_soulcube<sp/>);</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>weapon_pda<sp/>);</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>weapon_fists<sp/>);</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>heartRate<sp/>);</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>heartInfo.GetStartTime()<sp/>);</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>heartInfo.GetDuration()<sp/>);</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>heartInfo.GetStartValue()<sp/>);</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>heartInfo.GetEndValue()<sp/>);</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>lastHeartAdjust<sp/>);</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>lastHeartBeat<sp/>);</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>lastDmgTime<sp/>);</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>deathClearContentsTime<sp/>);</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>doingDeathSkin<sp/>);</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>lastArmorPulse<sp/>);</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>stamina<sp/>);</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>healthPool<sp/>);</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>nextHealthPulse<sp/>);</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>healthPulse<sp/>);</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>nextHealthTake<sp/>);</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>healthTake<sp/>);</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>hiddenWeapon<sp/>);</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/>soulCubeProjectile.Save(<sp/>savefile<sp/>);</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>spectator<sp/>);</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteVec3(<sp/>colorBar<sp/>);</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>colorBarIndex<sp/>);</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>scoreBoardOpen<sp/>);</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>forceScoreBoard<sp/>);</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>forceRespawn<sp/>);</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>spectating<sp/>);</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>lastSpectateTeleport<sp/>);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>lastHitToggle<sp/>);</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>forcedReady<sp/>);</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>wantSpectate<sp/>);</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>weaponGone<sp/>);</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>useInitialSpawns<sp/>);</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>latchedTeam<sp/>);</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>tourneyRank<sp/>);</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>tourneyLine<sp/>);</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/>teleportEntity.Save(<sp/>savefile<sp/>);</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>teleportKiller<sp/>);</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>minRespawnTime<sp/>);</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>maxRespawnTime<sp/>);</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteVec3(<sp/>firstPersonViewOrigin<sp/>);</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteMat3(<sp/>firstPersonViewAxis<sp/>);</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>bother<sp/>saving<sp/>dragEntity<sp/>since<sp/>it&apos;s<sp/>a<sp/>dev<sp/>tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteJoint(<sp/>hipJoint<sp/>);</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteJoint(<sp/>chestJoint<sp/>);</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteJoint(<sp/>headJoint<sp/>);</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteStaticObject(<sp/>physicsObj<sp/>);</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>aasLocation.Num()<sp/>);</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>aasLocation.Num();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>aasLocation[<sp/>i<sp/>].areaNum<sp/>);</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;WriteVec3(<sp/>aasLocation[<sp/>i<sp/>].pos<sp/>);</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>bobFoot<sp/>);</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>bobFrac<sp/>);</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>bobfracsin<sp/>);</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>bobCycle<sp/>);</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>xyspeed<sp/>);</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>stepUpTime<sp/>);</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>stepUpDelta<sp/>);</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>idealLegsYaw<sp/>);</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>legsYaw<sp/>);</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>legsForward<sp/>);</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>oldViewYaw<sp/>);</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteAngles(<sp/>viewBobAngles<sp/>);</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteVec3(<sp/>viewBob<sp/>);</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>landChange<sp/>);</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>landTime<sp/>);</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>currentWeapon<sp/>);</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>idealWeapon<sp/>);</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>previousWeapon<sp/>);</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>weaponSwitchTime<sp/>);</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>weaponEnabled<sp/>);</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>showWeaponViewModel<sp/>);</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteSkin(<sp/>skin<sp/>);</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteSkin(<sp/>powerUpSkin<sp/>);</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteString(<sp/>baseSkinName<sp/>);</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>numProjectilesFired<sp/>);</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>numProjectileHits<sp/>);</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>airless<sp/>);</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>airTics<sp/>);</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>lastAirDamage<sp/>);</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>gibDeath<sp/>);</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>gibsLaunched<sp/>);</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteVec3(<sp/>gibsDir<sp/>);</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>zoomFov.GetStartTime()<sp/>);</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>zoomFov.GetDuration()<sp/>);</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>zoomFov.GetStartValue()<sp/>);</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>zoomFov.GetEndValue()<sp/>);</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>centerView.GetStartTime()<sp/>);</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>centerView.GetDuration()<sp/>);</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>centerView.GetStartValue()<sp/>);</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>centerView.GetEndValue()<sp/>);</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>fxFov<sp/>);</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>influenceFov<sp/>);</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>influenceActive<sp/>);</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>influenceRadius<sp/>);</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteObject(<sp/>influenceEntity<sp/>);</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteMaterial(<sp/>influenceMaterial<sp/>);</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteSkin(<sp/>influenceSkin<sp/>);</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteObject(<sp/>privateCameraView<sp/>);</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NUM_LOGGED_VIEW_ANGLES;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;WriteAngles(<sp/>loggedViewAngles[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NUM_LOGGED_ACCELS;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>loggedAccel[<sp/>i<sp/>].time<sp/>);</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;WriteVec3(<sp/>loggedAccel[<sp/>i<sp/>].dir<sp/>);</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>currentLoggedAccel<sp/>);</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteObject(<sp/>focusGUIent<sp/>);</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>save<sp/>focusUI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteObject(<sp/>focusCharacter<sp/>);</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>talkCursor<sp/>);</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>focusTime<sp/>);</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteObject(<sp/>focusVehicle<sp/>);</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteUserInterface(<sp/>cursor,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>oldMouseX<sp/>);</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>oldMouseY<sp/>);</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteString(<sp/>pdaAudio<sp/>);</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteString(<sp/>pdaVideo<sp/>);</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteString(<sp/>pdaVideoWave<sp/>);</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>tipUp<sp/>);</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>objectiveUp<sp/>);</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>lastDamageDef<sp/>);</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteVec3(<sp/>lastDamageDir<sp/>);</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>lastDamageLocation<sp/>);</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>smoothedFrame<sp/>);</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>smoothedOriginUpdated<sp/>);</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteVec3(<sp/>smoothedOrigin<sp/>);</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteAngles(<sp/>smoothedAngles<sp/>);</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>ready<sp/>);</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>respawning<sp/>);</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>leader<sp/>);</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>lastSpectateChange<sp/>);</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>lastTeleFX<sp/>);</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>pm_stamina.GetFloat()<sp/>);</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;message&quot;</highlight><highlight class="normal">,<sp/>common-&gt;GetLanguageDict()-&gt;GetString(<sp/></highlight><highlight class="stringliteral">&quot;#str_02916&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;Message&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1810"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1813"><highlight class="comment">===========</highlight></codeline>
<codeline lineno="1814"><highlight class="comment">idPlayer::Restore</highlight></codeline>
<codeline lineno="1815"><highlight class="comment">===========</highlight></codeline>
<codeline lineno="1816"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Restore(<sp/><ref refid="classid_restore_game" kindref="compound">idRestoreGame</ref><sp/>*savefile<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>num;</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>set;</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadUsercmd(<sp/>usercmd<sp/>);</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/>playerView.Restore(<sp/>savefile<sp/>);</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>noclip<sp/>);</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>godmode<sp/>);</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadAngles(<sp/>spawnAngles<sp/>);</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadAngles(<sp/>viewAngles<sp/>);</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadAngles(<sp/>cmdAngles<sp/>);</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>usercmd.angles,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>usercmd.angles<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/>SetViewAngles(<sp/>viewAngles<sp/>);</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnAnglesSet<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>buttonMask<sp/>);</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>oldButtons<sp/>);</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>oldFlags<sp/>);</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/>usercmd.flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/>oldFlags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>lastHitTime<sp/>);</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>lastSndHitTime<sp/>);</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>lastSavingThrowTime<sp/>);</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Re-link<sp/>idBoolFields<sp/>to<sp/>the<sp/>scriptObject,<sp/>values<sp/>will<sp/>be<sp/>restored<sp/>in<sp/>scriptObject&apos;s<sp/>restore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/>LinkScriptVariables();</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/>inventory.Restore(<sp/>savefile<sp/>);</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/>weapon.Restore(<sp/>savefile<sp/>);</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>inventory.emails.Num();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetPDA()-&gt;AddEmail(<sp/>inventory.emails[i]<sp/>);</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadUserInterface(<sp/>hud<sp/>);</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadUserInterface(<sp/>objectiveSystem<sp/>);</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>objectiveSystemOpen<sp/>);</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>weapon_soulcube<sp/>);</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>weapon_pda<sp/>);</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>weapon_fists<sp/>);</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"></highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>heartRate<sp/>);</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>set<sp/>);</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/>heartInfo.SetStartTime(<sp/>set<sp/>);</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>set<sp/>);</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/>heartInfo.SetDuration(<sp/>set<sp/>);</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>set<sp/>);</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/>heartInfo.SetStartValue(<sp/>set<sp/>);</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>set<sp/>);</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/>heartInfo.SetEndValue(<sp/>set<sp/>);</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>lastHeartAdjust<sp/>);</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>lastHeartBeat<sp/>);</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>lastDmgTime<sp/>);</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>deathClearContentsTime<sp/>);</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>doingDeathSkin<sp/>);</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>lastArmorPulse<sp/>);</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>stamina<sp/>);</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>healthPool<sp/>);</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>nextHealthPulse<sp/>);</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>healthPulse<sp/>);</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>nextHealthTake<sp/>);</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>healthTake<sp/>);</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>hiddenWeapon<sp/>);</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/>soulCubeProjectile.Restore(<sp/>savefile<sp/>);</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>spectator<sp/>);</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadVec3(<sp/>colorBar<sp/>);</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>colorBarIndex<sp/>);</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>scoreBoardOpen<sp/>);</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>forceScoreBoard<sp/>);</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>forceRespawn<sp/>);</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>spectating<sp/>);</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>lastSpectateTeleport<sp/>);</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>lastHitToggle<sp/>);</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>forcedReady<sp/>);</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>wantSpectate<sp/>);</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>weaponGone<sp/>);</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>useInitialSpawns<sp/>);</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>latchedTeam<sp/>);</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>tourneyRank<sp/>);</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>tourneyLine<sp/>);</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"></highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/>teleportEntity.Restore(<sp/>savefile<sp/>);</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>teleportKiller<sp/>);</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>minRespawnTime<sp/>);</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>maxRespawnTime<sp/>);</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadVec3(<sp/>firstPersonViewOrigin<sp/>);</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadMat3(<sp/>firstPersonViewAxis<sp/>);</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>bother<sp/>saving<sp/>dragEntity<sp/>since<sp/>it&apos;s<sp/>a<sp/>dev<sp/>tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/>dragEntity.Clear();</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadJoint(<sp/>hipJoint<sp/>);</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadJoint(<sp/>chestJoint<sp/>);</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadJoint(<sp/>headJoint<sp/>);</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadStaticObject(<sp/>physicsObj<sp/>);</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/>RestorePhysics(<sp/>&amp;physicsObj<sp/>);</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>num<sp/>);</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/>aasLocation.SetGranularity(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/>aasLocation.SetNum(<sp/>num<sp/>);</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>aasLocation[<sp/>i<sp/>].areaNum<sp/>);</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;ReadVec3(<sp/>aasLocation[<sp/>i<sp/>].pos<sp/>);</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>bobFoot<sp/>);</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>bobFrac<sp/>);</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>bobfracsin<sp/>);</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>bobCycle<sp/>);</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>xyspeed<sp/>);</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>stepUpTime<sp/>);</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>stepUpDelta<sp/>);</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>idealLegsYaw<sp/>);</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>legsYaw<sp/>);</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>legsForward<sp/>);</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>oldViewYaw<sp/>);</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadAngles(<sp/>viewBobAngles<sp/>);</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadVec3(<sp/>viewBob<sp/>);</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>landChange<sp/>);</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>landTime<sp/>);</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>currentWeapon<sp/>);</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>idealWeapon<sp/>);</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>previousWeapon<sp/>);</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>weaponSwitchTime<sp/>);</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>weaponEnabled<sp/>);</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>showWeaponViewModel<sp/>);</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadSkin(<sp/>skin<sp/>);</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadSkin(<sp/>powerUpSkin<sp/>);</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadString(<sp/>baseSkinName<sp/>);</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"></highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>numProjectilesFired<sp/>);</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>numProjectileHits<sp/>);</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"></highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>airless<sp/>);</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>airTics<sp/>);</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>lastAirDamage<sp/>);</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>gibDeath<sp/>);</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>gibsLaunched<sp/>);</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadVec3(<sp/>gibsDir<sp/>);</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"></highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>set<sp/>);</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/>zoomFov.SetStartTime(<sp/>set<sp/>);</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>set<sp/>);</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/>zoomFov.SetDuration(<sp/>set<sp/>);</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>set<sp/>);</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/>zoomFov.SetStartValue(<sp/>set<sp/>);</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>set<sp/>);</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/>zoomFov.SetEndValue(<sp/>set<sp/>);</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>set<sp/>);</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/>centerView.SetStartTime(<sp/>set<sp/>);</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>set<sp/>);</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/>centerView.SetDuration(<sp/>set<sp/>);</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>set<sp/>);</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/>centerView.SetStartValue(<sp/>set<sp/>);</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>set<sp/>);</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/>centerView.SetEndValue(<sp/>set<sp/>);</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>fxFov<sp/>);</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>influenceFov<sp/>);</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>influenceActive<sp/>);</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>influenceRadius<sp/>);</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadObject(<sp/>reinterpret_cast&lt;idClass<sp/>*&amp;&gt;(<sp/>influenceEntity<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadMaterial(<sp/>influenceMaterial<sp/>);</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadSkin(<sp/>influenceSkin<sp/>);</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadObject(<sp/>reinterpret_cast&lt;idClass<sp/>*&amp;&gt;(<sp/>privateCameraView<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NUM_LOGGED_VIEW_ANGLES;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;ReadAngles(<sp/>loggedViewAngles[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NUM_LOGGED_ACCELS;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>loggedAccel[<sp/>i<sp/>].time<sp/>);</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;ReadVec3(<sp/>loggedAccel[<sp/>i<sp/>].dir<sp/>);</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>currentLoggedAccel<sp/>);</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"></highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadObject(<sp/>reinterpret_cast&lt;idClass<sp/>*&amp;&gt;(<sp/>focusGUIent<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>save<sp/>focusUI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/>focusUI<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadObject(<sp/>reinterpret_cast&lt;idClass<sp/>*&amp;&gt;(<sp/>focusCharacter<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>talkCursor<sp/>);</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>focusTime<sp/>);</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadObject(<sp/>reinterpret_cast&lt;idClass<sp/>*&amp;&gt;(<sp/>focusVehicle<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadUserInterface(<sp/>cursor<sp/>);</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>oldMouseX<sp/>);</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>oldMouseY<sp/>);</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadString(<sp/>pdaAudio<sp/>);</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadString(<sp/>pdaVideo<sp/>);</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadString(<sp/>pdaVideoWave<sp/>);</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>tipUp<sp/>);</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>objectiveUp<sp/>);</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"></highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>lastDamageDef<sp/>);</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadVec3(<sp/>lastDamageDir<sp/>);</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>lastDamageLocation<sp/>);</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>smoothedFrame<sp/>);</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>smoothedOriginUpdated<sp/>);</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadVec3(<sp/>smoothedOrigin<sp/>);</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadAngles(<sp/>smoothedAngles<sp/>);</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"></highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>ready<sp/>);</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>respawning<sp/>);</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>leader<sp/>);</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>lastSpectateChange<sp/>);</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>lastTeleFX<sp/>);</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"></highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>pm_<sp/>cvars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_key_value" kindref="compound">idKeyValue</ref><sp/><sp/><sp/><sp/>*kv;</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/>kv<sp/>=<sp/>spawnArgs.MatchPrefix(<sp/></highlight><highlight class="stringliteral">&quot;pm_&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>kv<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cvarSystem-&gt;SetCVarString(<sp/>kv-&gt;GetKey(),<sp/>kv-&gt;GetValue()<sp/>);</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kv<sp/>=<sp/>spawnArgs.MatchPrefix(<sp/></highlight><highlight class="stringliteral">&quot;pm_&quot;</highlight><highlight class="normal">,<sp/>kv<sp/>);</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"></highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>set<sp/>);</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/>pm_stamina.SetFloat(<sp/>set<sp/>);</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"></highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>combat<sp/>collision<sp/>hull<sp/>for<sp/>exact<sp/>collision<sp/>detection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/>SetCombatModel();</highlight></codeline>
<codeline lineno="2058"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2061"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2062"><highlight class="comment">idPlayer::PrepareForRestart</highlight></codeline>
<codeline lineno="2063"><highlight class="comment">================</highlight></codeline>
<codeline lineno="2064"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::PrepareForRestart(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/>ClearPowerUps();</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/>Spectate(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/>forceRespawn<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>will<sp/>be<sp/>restarting<sp/>program,<sp/>clear<sp/>the<sp/>client<sp/>entities<sp/>from<sp/>program-related<sp/>things<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/>ShutdownThreads();</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>sound<sp/>world<sp/>is<sp/>going<sp/>to<sp/>be<sp/>cleared,<sp/>don&apos;t<sp/>keep<sp/>references<sp/>to<sp/>emitters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/>FreeSoundEmitter(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2075"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2078"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2079"><highlight class="comment">idPlayer::Restart</highlight></codeline>
<codeline lineno="2080"><highlight class="comment">================</highlight></codeline>
<codeline lineno="2081"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Restart(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/>idActor::Restart();</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>client<sp/>needs<sp/>to<sp/>setup<sp/>the<sp/>animation<sp/>script<sp/>object<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isClient<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Init();</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>choose<sp/>a<sp/>random<sp/>spot<sp/>and<sp/>prepare<sp/>the<sp/>point<sp/>of<sp/>view<sp/>in<sp/>case<sp/>player<sp/>is<sp/>left<sp/>spectating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>spectating<sp/>);</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SpawnFromSpawnSpot();</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"></highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/>useInitialSpawns<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateSkinSetup(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2096"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2099"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2100"><highlight class="comment">idPlayer::ServerSpectate</highlight></codeline>
<codeline lineno="2101"><highlight class="comment">================</highlight></codeline>
<codeline lineno="2102"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2103"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::ServerSpectate(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>spectate<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>!gameLocal.isClient<sp/>);</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"></highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spectating<sp/>!=<sp/>spectate<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Spectate(<sp/>spectate<sp/>);</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spectate<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSpectateOrigin();</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.gameType<sp/>==<sp/>GAME_DM<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>the<sp/>scores<sp/>are<sp/>reset<sp/>so<sp/>you<sp/>can&apos;t<sp/>exploit<sp/>by<sp/>spectating<sp/>and<sp/>entering<sp/>the<sp/>game<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>other<sp/>game<sp/>types<sp/>don&apos;t<sp/>matter,<sp/>as<sp/>you<sp/>either<sp/>can&apos;t<sp/>join<sp/>back,<sp/>or<sp/>it&apos;s<sp/>team<sp/>scores</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.ClearFrags(<sp/>entityNumber<sp/>);</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!spectate<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SpawnFromSpawnSpot();</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"></highlight></codeline>
<codeline lineno="2123"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2124"><highlight class="comment">===========</highlight></codeline>
<codeline lineno="2125"><highlight class="comment">idPlayer::SelectInitialSpawnPoint</highlight></codeline>
<codeline lineno="2126"><highlight class="comment"></highlight></codeline>
<codeline lineno="2127"><highlight class="comment">Try<sp/>to<sp/>find<sp/>a<sp/>spawn<sp/>point<sp/>marked<sp/>&apos;initial&apos;,<sp/>otherwise</highlight></codeline>
<codeline lineno="2128"><highlight class="comment">use<sp/>normal<sp/>spawn<sp/>selection.</highlight></codeline>
<codeline lineno="2129"><highlight class="comment">============</highlight></codeline>
<codeline lineno="2130"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::SelectInitialSpawnPoint(<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;origin,<sp/><ref refid="classid_angles" kindref="compound">idAngles</ref><sp/>&amp;angles<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*spot;</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>skin;</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"></highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/>spot<sp/>=<sp/>gameLocal.SelectInitialSpawnPoint(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"></highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>player<sp/>skin<sp/>from<sp/>the<sp/>spawn<sp/>location</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spot-&gt;spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;skin&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/>skin<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spawnArgs.Set(<sp/></highlight><highlight class="stringliteral">&quot;spawn_skin&quot;</highlight><highlight class="normal">,<sp/>skin<sp/>);</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"></highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>activate<sp/>the<sp/>spawn<sp/>locations<sp/>targets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/>spot-&gt;PostEventMS(<sp/>&amp;EV_ActivateTargets,<sp/>0,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/>origin<sp/>=<sp/>spot-&gt;GetPhysics()-&gt;GetOrigin();</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/>origin[2]<sp/>+=<sp/>4.0f<sp/>+<sp/>CM_BOX_EPSILON;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>up<sp/>to<sp/>make<sp/>sure<sp/>the<sp/>player<sp/>is<sp/>at<sp/>least<sp/>an<sp/>epsilon<sp/>above<sp/>the<sp/>floor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/>angles<sp/>=<sp/>spot-&gt;GetPhysics()-&gt;GetAxis().ToAngles();</highlight></codeline>
<codeline lineno="2148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"></highlight></codeline>
<codeline lineno="2150"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2151"><highlight class="comment">===========</highlight></codeline>
<codeline lineno="2152"><highlight class="comment">idPlayer::SpawnFromSpawnSpot</highlight></codeline>
<codeline lineno="2153"><highlight class="comment"></highlight></codeline>
<codeline lineno="2154"><highlight class="comment">Chooses<sp/>a<sp/>spawn<sp/>location<sp/>and<sp/>spawns<sp/>the<sp/>player</highlight></codeline>
<codeline lineno="2155"><highlight class="comment">============</highlight></codeline>
<codeline lineno="2156"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::SpawnFromSpawnSpot(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/><sp/><sp/><sp/><sp/>spawn_origin;</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_angles" kindref="compound">idAngles</ref><sp/><sp/><sp/><sp/>spawn_angles;</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/>SelectInitialSpawnPoint(<sp/>spawn_origin,<sp/>spawn_angles<sp/>);</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/>SpawnToPoint(<sp/>spawn_origin,<sp/>spawn_angles<sp/>);</highlight></codeline>
<codeline lineno="2163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2166"><highlight class="comment">===========</highlight></codeline>
<codeline lineno="2167"><highlight class="comment">idPlayer::SpawnToPoint</highlight></codeline>
<codeline lineno="2168"><highlight class="comment"></highlight></codeline>
<codeline lineno="2169"><highlight class="comment">Called<sp/>every<sp/>time<sp/>a<sp/>client<sp/>is<sp/>placed<sp/>fresh<sp/>in<sp/>the<sp/>world:</highlight></codeline>
<codeline lineno="2170"><highlight class="comment">after<sp/>the<sp/>first<sp/>ClientBegin,<sp/>and<sp/>after<sp/>each<sp/>respawn</highlight></codeline>
<codeline lineno="2171"><highlight class="comment">Initializes<sp/>all<sp/>non-persistant<sp/>parts<sp/>of<sp/>playerState</highlight></codeline>
<codeline lineno="2172"><highlight class="comment"></highlight></codeline>
<codeline lineno="2173"><highlight class="comment">when<sp/>called<sp/>here<sp/>with<sp/>spectating<sp/>set<sp/>to<sp/>true,<sp/>just<sp/>place<sp/>yourself<sp/>and<sp/>init</highlight></codeline>
<codeline lineno="2174"><highlight class="comment">============</highlight></codeline>
<codeline lineno="2175"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2176"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::SpawnToPoint(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;spawn_origin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_angles" kindref="compound">idAngles</ref><sp/>&amp;spawn_angles<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>spec_origin;</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"></highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>!gameLocal.isClient<sp/>);</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"></highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/>respawning<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/>Init();</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"></highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/>fl.noknockback<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"></highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stop<sp/>any<sp/>ragdolls<sp/>being<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/>StopRagdoll();</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>back<sp/>the<sp/>player<sp/>physics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPhysics(<sp/>&amp;physicsObj<sp/>);</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"></highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.SetClipModelAxis();</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.EnableClip();</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"></highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!spectating<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetCombatContents(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"></highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.SetLinearVelocity(<sp/>vec3_origin<sp/>);</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"></highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setup<sp/>our<sp/>initial<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!spectating<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetOrigin(<sp/>spawn_origin<sp/>);</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec_origin<sp/>=<sp/>spawn_origin;</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec_origin[<sp/>2<sp/>]<sp/>+=<sp/>pm_normalheight.GetFloat();</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec_origin[<sp/>2<sp/>]<sp/>+=<sp/>SPECTATE_RAISE;</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetOrigin(<sp/>spec_origin<sp/>);</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"></highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>this<sp/>is<sp/>the<sp/>first<sp/>spawn<sp/>of<sp/>the<sp/>map,<sp/>we<sp/>don&apos;t<sp/>have<sp/>a<sp/>usercmd<sp/>yet,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>the<sp/>delta<sp/>angles<sp/>won&apos;t<sp/>be<sp/>correct.<sp/><sp/>This<sp/>will<sp/>be<sp/>fixed<sp/>on<sp/>the<sp/>first<sp/>think.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/>viewAngles<sp/>=<sp/>ang_zero;</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/>SetDeltaViewAngles(<sp/>ang_zero<sp/>);</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/>SetViewAngles(<sp/>spawn_angles<sp/>);</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnAngles<sp/>=<sp/>spawn_angles;</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnAnglesSet<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"></highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/>legsForward<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/>legsYaw<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/>idealLegsYaw<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/>oldViewYaw<sp/>=<sp/>viewAngles.yaw;</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"></highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spectating<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hide();</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Show();</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"></highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isMultiplayer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!spectating<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>may<sp/>be<sp/>called<sp/>twice<sp/>in<sp/>a<sp/>row<sp/>in<sp/>some<sp/>situations.<sp/>avoid<sp/>a<sp/>double<sp/>fx<sp/>and<sp/>&apos;fly<sp/>to<sp/>the<sp/>roof&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>lastTeleFX<sp/>&lt;<sp/>gameLocal.time<sp/>-<sp/>1000<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idEntityFx::StartFx(<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;fx_spawn&quot;</highlight><highlight class="normal"><sp/>),<sp/>&amp;spawn_origin,<sp/>NULL,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>true<sp/>);</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastTeleFX<sp/>=<sp/>gameLocal.time;</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_TELEPORT<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_TELEPORT<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"></highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>kill<sp/>anything<sp/>at<sp/>the<sp/>new<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!spectating<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsObj.SetClipMask(<sp/>MASK_PLAYERSOLID<sp/>);<sp/></highlight><highlight class="comment">//<sp/>the<sp/>clip<sp/>mask<sp/>is<sp/>usually<sp/>maintained<sp/>in<sp/>Move(),<sp/>but<sp/>KillBox<sp/>requires<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.KillBox(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>allow<sp/>full<sp/>run<sp/>speed<sp/>for<sp/>a<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.SetKnockBack(<sp/>100<sp/>);</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"></highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>our<sp/>respawn<sp/>time<sp/>and<sp/>buttons<sp/>so<sp/>that<sp/>if<sp/>we&apos;re<sp/>killed<sp/>we<sp/>don&apos;t<sp/>respawn<sp/>immediately</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/>minRespawnTime<sp/>=<sp/>gameLocal.time;</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/>maxRespawnTime<sp/>=<sp/>gameLocal.time;</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!spectating<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forceRespawn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"></highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/>privateCameraView<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"></highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/>BecomeActive(<sp/>TH_THINK<sp/>);</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"></highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>run<sp/>a<sp/>client<sp/>frame<sp/>to<sp/>drop<sp/>exactly<sp/>to<sp/>the<sp/>floor,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>animations<sp/>and<sp/>other<sp/>things</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/>Think();</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"></highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/>respawning<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/>lastManOver<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/>lastManPlayAgain<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/>isTelefragged<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"></highlight></codeline>
<codeline lineno="2274"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2275"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2276"><highlight class="comment">idPlayer::SavePersistantInfo</highlight></codeline>
<codeline lineno="2277"><highlight class="comment"></highlight></codeline>
<codeline lineno="2278"><highlight class="comment">Saves<sp/>any<sp/>inventory<sp/>and<sp/>player<sp/>stats<sp/>when<sp/>changing<sp/>levels.</highlight></codeline>
<codeline lineno="2279"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2280"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2281"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::SavePersistantInfo(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/>&amp;playerInfo<sp/>=<sp/>gameLocal.persistentPlayerInfo[entityNumber];</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/>playerInfo.Clear();</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/>inventory.GetPersistantData(<sp/>playerInfo<sp/>);</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/>playerInfo.SetInt(<sp/></highlight><highlight class="stringliteral">&quot;health&quot;</highlight><highlight class="normal">,<sp/>health<sp/>);</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/>playerInfo.SetInt(<sp/></highlight><highlight class="stringliteral">&quot;current_weapon&quot;</highlight><highlight class="normal">,<sp/>currentWeapon<sp/>);</highlight></codeline>
<codeline lineno="2288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"></highlight></codeline>
<codeline lineno="2290"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2291"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2292"><highlight class="comment">idPlayer::RestorePersistantInfo</highlight></codeline>
<codeline lineno="2293"><highlight class="comment"></highlight></codeline>
<codeline lineno="2294"><highlight class="comment">Restores<sp/>any<sp/>inventory<sp/>and<sp/>player<sp/>stats<sp/>when<sp/>changing<sp/>levels.</highlight></codeline>
<codeline lineno="2295"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2296"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2297"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::RestorePersistantInfo(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isMultiplayer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.persistentPlayerInfo[entityNumber].Clear();</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"></highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnArgs.Copy(<sp/>gameLocal.persistentPlayerInfo[entityNumber]<sp/>);</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"></highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/>inventory.RestoreInventory(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>spawnArgs<sp/>);</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/>health<sp/>=<sp/>spawnArgs.GetInt(<sp/></highlight><highlight class="stringliteral">&quot;health&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;100&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.isClient<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idealWeapon<sp/>=<sp/>spawnArgs.GetInt(<sp/></highlight><highlight class="stringliteral">&quot;current_weapon&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"></highlight></codeline>
<codeline lineno="2311"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2312"><highlight class="comment">================</highlight></codeline>
<codeline lineno="2313"><highlight class="comment">idPlayer::GetUserInfo</highlight></codeline>
<codeline lineno="2314"><highlight class="comment">================</highlight></codeline>
<codeline lineno="2315"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><ref refid="classid_dict" kindref="compound">idDict</ref><sp/>*idPlayer::GetUserInfo(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;gameLocal.userInfo[<sp/>entityNumber<sp/>];</highlight></codeline>
<codeline lineno="2318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"></highlight></codeline>
<codeline lineno="2320"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2321"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="2322"><highlight class="comment">idPlayer::UpdateSkinSetup</highlight></codeline>
<codeline lineno="2323"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="2324"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2325"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::UpdateSkinSetup(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>restart<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>restart<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>team<sp/>=<sp/>(<sp/>idStr::Icmp(<sp/>GetUserInfo()-&gt;GetString(<sp/></highlight><highlight class="stringliteral">&quot;ui_team&quot;</highlight><highlight class="normal"><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;Blue&quot;</highlight><highlight class="normal"><sp/>)<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.gameType<sp/>==<sp/>GAME_TDM<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>team<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseSkinName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;skins/characters/player/marine_mp_blue&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseSkinName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;skins/characters/player/marine_mp_red&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.isClient<sp/>&amp;&amp;<sp/>team<sp/>!=<sp/>latchedTeam<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.SwitchToTeam(<sp/>entityNumber,<sp/>latchedTeam,<sp/>team<sp/>);</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>latchedTeam<sp/>=<sp/>team;</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseSkinName<sp/>=<sp/>GetUserInfo()-&gt;GetString(<sp/></highlight><highlight class="stringliteral">&quot;ui_skin&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!baseSkinName.Length()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseSkinName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;skins/characters/player/marine_mp&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/>skin<sp/>=<sp/>declManager-&gt;FindSkin(<sp/>baseSkinName,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>skin<sp/>);</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>match<sp/>the<sp/>skin<sp/>to<sp/>a<sp/>color<sp/>band<sp/>for<sp/>scoreboard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>baseSkinName.Find(<sp/></highlight><highlight class="stringliteral">&quot;red&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colorBarIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>baseSkinName.Find(<sp/></highlight><highlight class="stringliteral">&quot;green&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colorBarIndex<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>baseSkinName.Find(<sp/></highlight><highlight class="stringliteral">&quot;blue&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colorBarIndex<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>baseSkinName.Find(<sp/></highlight><highlight class="stringliteral">&quot;yellow&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colorBarIndex<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colorBarIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/>colorBar<sp/>=<sp/>colorBarTable[<sp/>colorBarIndex<sp/>];</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>PowerUpActive(<sp/>BERSERK<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>powerUpSkin<sp/>=<sp/>declManager-&gt;FindSkin(<sp/>baseSkinName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_berserk&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"></highlight></codeline>
<codeline lineno="2365"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2366"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="2367"><highlight class="comment">idPlayer::BalanceTDM</highlight></codeline>
<codeline lineno="2368"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="2369"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2370"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idPlayer::BalanceTDM(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>balanceTeam,<sp/>teamCount[2];</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/><sp/><sp/><sp/>*ent;</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"></highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/>teamCount[<sp/>0<sp/>]<sp/>=<sp/>teamCount[<sp/>1<sp/>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>gameLocal.numClients;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent<sp/>=<sp/>gameLocal.entities[<sp/>i<sp/>];</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ent<sp/>&amp;&amp;<sp/>ent-&gt;IsType(<sp/>idPlayer::Type<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>teamCount[<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>ent<sp/>)-&gt;team<sp/>]++;</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/>balanceTeam<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>teamCount[<sp/>0<sp/>]<sp/>&lt;<sp/>teamCount[<sp/>1<sp/>]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>balanceTeam<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>teamCount[<sp/>0<sp/>]<sp/>&gt;<sp/>teamCount[<sp/>1<sp/>]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>balanceTeam<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>balanceTeam<sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>team<sp/>!=<sp/>balanceTeam<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;DPrintf(<sp/></highlight><highlight class="stringliteral">&quot;team<sp/>balance:<sp/>forcing<sp/>player<sp/>%d<sp/>to<sp/>%s<sp/>team\n&quot;</highlight><highlight class="normal">,<sp/>entityNumber,<sp/>balanceTeam<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;blue&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;red&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>team<sp/>=<sp/>balanceTeam;</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetUserInfo()-&gt;Set(<sp/></highlight><highlight class="stringliteral">&quot;ui_team&quot;</highlight><highlight class="normal">,<sp/>team<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Blue&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Red&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"></highlight></codeline>
<codeline lineno="2396"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2397"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="2398"><highlight class="comment">idPlayer::UserInfoChanged</highlight></codeline>
<codeline lineno="2399"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="2400"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2401"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idPlayer::UserInfoChanged(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>canModify<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/><sp/>*userInfo;</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>modifiedInfo;</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>spec;</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>newready;</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"></highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/>userInfo<sp/>=<sp/>GetUserInfo();</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/>showWeaponViewModel<sp/>=<sp/>userInfo-&gt;GetBool(<sp/></highlight><highlight class="stringliteral">&quot;ui_showGun&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"></highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.isMultiplayer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"></highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/>modifiedInfo<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"></highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/>spec<sp/>=<sp/>(<sp/>idStr::Icmp(<sp/>userInfo-&gt;GetString(<sp/></highlight><highlight class="stringliteral">&quot;ui_spectate&quot;</highlight><highlight class="normal"><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;Spectate&quot;</highlight><highlight class="normal"><sp/>)<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.serverInfo.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;si_spectators&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>never<sp/>let<sp/>spectators<sp/>go<sp/>back<sp/>to<sp/>game<sp/>while<sp/>sudden<sp/>death<sp/>is<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>canModify<sp/>&amp;&amp;<sp/>gameLocal.mpGame.GetGameState()<sp/>==<sp/>idMultiplayerGame::SUDDENDEATH<sp/>&amp;&amp;<sp/>!spec<sp/>&amp;&amp;<sp/>wantSpectate<sp/>==<sp/>true<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userInfo-&gt;Set(<sp/></highlight><highlight class="stringliteral">&quot;ui_spectate&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Spectate&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifiedInfo<sp/>|=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spec<sp/>!=<sp/>wantSpectate<sp/>&amp;&amp;<sp/>!spec<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>returning<sp/>from<sp/>spectate,<sp/>set<sp/>forceRespawn<sp/>so<sp/>we<sp/>don&apos;t<sp/>get<sp/>stuck<sp/>in<sp/>spectate<sp/>forever</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forceRespawn<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wantSpectate<sp/>=<sp/>spec;</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>canModify<sp/>&amp;&amp;<sp/>spec<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userInfo-&gt;Set(<sp/></highlight><highlight class="stringliteral">&quot;ui_spectate&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Play&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifiedInfo<sp/>|=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spectating<sp/>)<sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allow<sp/>player<sp/>to<sp/>leaving<sp/>spectator<sp/>mode<sp/>if<sp/>they<sp/>were<sp/>in<sp/>it<sp/>when<sp/>si_spectators<sp/>got<sp/>turned<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forceRespawn<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wantSpectate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"></highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/>newready<sp/>=<sp/>(<sp/>idStr::Icmp(<sp/>userInfo-&gt;GetString(<sp/></highlight><highlight class="stringliteral">&quot;ui_ready&quot;</highlight><highlight class="normal"><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;Ready&quot;</highlight><highlight class="normal"><sp/>)<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ready<sp/>!=<sp/>newready<sp/>&amp;&amp;<sp/>gameLocal.mpGame.GetGameState()<sp/>==<sp/>idMultiplayerGame::WARMUP<sp/>&amp;&amp;<sp/>!wantSpectate<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.AddChatLine(<sp/>common-&gt;GetLanguageDict()-&gt;GetString(<sp/></highlight><highlight class="stringliteral">&quot;#str_07180&quot;</highlight><highlight class="normal"><sp/>),<sp/>userInfo-&gt;GetString(<sp/></highlight><highlight class="stringliteral">&quot;ui_name&quot;</highlight><highlight class="normal"><sp/>),<sp/>newready<sp/>?<sp/>common-&gt;GetLanguageDict()-&gt;GetString(<sp/></highlight><highlight class="stringliteral">&quot;#str_04300&quot;</highlight><highlight class="normal"><sp/>)<sp/>:<sp/>common-&gt;GetLanguageDict()-&gt;GetString(<sp/></highlight><highlight class="stringliteral">&quot;#str_04301&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/>ready<sp/>=<sp/>newready;</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/>team<sp/>=<sp/>(<sp/>idStr::Icmp(<sp/>userInfo-&gt;GetString(<sp/></highlight><highlight class="stringliteral">&quot;ui_team&quot;</highlight><highlight class="normal"><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;Blue&quot;</highlight><highlight class="normal"><sp/>)<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>server<sp/>maintains<sp/>TDM<sp/>balance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>canModify<sp/>&amp;&amp;<sp/>gameLocal.gameType<sp/>==<sp/>GAME_TDM<sp/>&amp;&amp;<sp/>!gameLocal.mpGame.IsInGame(<sp/>entityNumber<sp/>)<sp/>&amp;&amp;<sp/>g_balanceTDM.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifiedInfo<sp/>|=<sp/>BalanceTDM(<sp/>);</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateSkinSetup(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/>isChatting<sp/>=<sp/>userInfo-&gt;GetBool(<sp/></highlight><highlight class="stringliteral">&quot;ui_chat&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>canModify<sp/>&amp;&amp;<sp/>isChatting<sp/>&amp;&amp;<sp/>AI_DEAD<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>dead,<sp/>always<sp/>force<sp/>chat<sp/>icon<sp/>off.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isChatting<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userInfo-&gt;SetBool(<sp/></highlight><highlight class="stringliteral">&quot;ui_chat&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifiedInfo<sp/>|=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"></highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>modifiedInfo;</highlight></codeline>
<codeline lineno="2461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"></highlight></codeline>
<codeline lineno="2463"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2464"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2465"><highlight class="comment">idPlayer::UpdateHudAmmo</highlight></codeline>
<codeline lineno="2466"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2467"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2468"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::UpdateHudAmmo(<sp/><ref refid="classid_user_interface" kindref="compound">idUserInterface</ref><sp/>*_hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inclip;</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ammoamount;</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"></highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>weapon.GetEntity()<sp/>);</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>_hud<sp/>);</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"></highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/>inclip<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>weapon.GetEntity()-&gt;AmmoInClip();</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/>ammoamount<sp/><sp/>=<sp/>weapon.GetEntity()-&gt;AmmoAvailable();</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ammoamount<sp/>&lt;<sp/>0<sp/>||<sp/>!weapon.GetEntity()-&gt;IsReady()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>show<sp/>infinite<sp/>ammo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;player_ammo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;player_totalammo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>show<sp/>remaining<sp/>ammo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;player_totalammo&quot;</highlight><highlight class="normal">,<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;%i&quot;</highlight><highlight class="normal">,<sp/>ammoamount<sp/>-<sp/>inclip<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;player_ammo&quot;</highlight><highlight class="normal">,<sp/>weapon.GetEntity()-&gt;ClipSize()<sp/>?<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;%i&quot;</highlight><highlight class="normal">,<sp/>inclip<sp/>)<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;--&quot;</highlight><highlight class="normal"><sp/>);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>how<sp/>much<sp/>in<sp/>the<sp/>current<sp/>clip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;player_clips&quot;</highlight><highlight class="normal">,<sp/>weapon.GetEntity()-&gt;ClipSize()<sp/>?<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;%i&quot;</highlight><highlight class="normal">,<sp/>ammoamount<sp/>/<sp/>weapon.GetEntity()-&gt;ClipSize()<sp/>)<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;--&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;player_allammo&quot;</highlight><highlight class="normal">,<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;%i/%i&quot;</highlight><highlight class="normal">,<sp/>inclip,<sp/>ammoamount<sp/>-<sp/>inclip<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2488"><highlight class="normal"></highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/>_hud-&gt;SetStateBool(<sp/></highlight><highlight class="stringliteral">&quot;player_ammo_empty&quot;</highlight><highlight class="normal">,<sp/>(<sp/>ammoamount<sp/>==<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/>_hud-&gt;SetStateBool(<sp/></highlight><highlight class="stringliteral">&quot;player_clip_empty&quot;</highlight><highlight class="normal">,<sp/>(<sp/>weapon.GetEntity()-&gt;ClipSize()<sp/>?<sp/>inclip<sp/>==<sp/>0<sp/>:<sp/>false<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/>_hud-&gt;SetStateBool(<sp/></highlight><highlight class="stringliteral">&quot;player_clip_low&quot;</highlight><highlight class="normal">,<sp/>(<sp/>weapon.GetEntity()-&gt;ClipSize()<sp/>?<sp/>inclip<sp/>&lt;=<sp/>weapon.GetEntity()-&gt;LowAmmo()<sp/>:<sp/>false<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"></highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/>_hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;updateAmmo&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"></highlight></codeline>
<codeline lineno="2496"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2497"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2498"><highlight class="comment">idPlayer::UpdateHudStats</highlight></codeline>
<codeline lineno="2499"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2500"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2501"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::UpdateHudStats(<sp/><ref refid="classid_user_interface" kindref="compound">idUserInterface</ref><sp/>*_hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>staminapercentage;</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max_stamina;</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"></highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>_hud<sp/>);</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"></highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/>max_stamina<sp/>=<sp/>pm_stamina.GetFloat();</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!max_stamina<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stamina<sp/>disabled,<sp/>so<sp/>show<sp/>full<sp/>stamina<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>staminapercentage<sp/>=<sp/>100.0f;</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>staminapercentage<sp/>=<sp/>idMath::FtoiFast(<sp/>100.0f<sp/>*<sp/>stamina<sp/>/<sp/>max_stamina<sp/>);</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/>_hud-&gt;SetStateInt(<sp/></highlight><highlight class="stringliteral">&quot;player_health&quot;</highlight><highlight class="normal">,<sp/>health<sp/>);</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/>_hud-&gt;SetStateInt(<sp/></highlight><highlight class="stringliteral">&quot;player_stamina&quot;</highlight><highlight class="normal">,<sp/>staminapercentage<sp/>);</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/>_hud-&gt;SetStateInt(<sp/></highlight><highlight class="stringliteral">&quot;player_armor&quot;</highlight><highlight class="normal">,<sp/>inventory.armor<sp/>);</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/>_hud-&gt;SetStateInt(<sp/></highlight><highlight class="stringliteral">&quot;player_hr&quot;</highlight><highlight class="normal">,<sp/>heartRate<sp/>);</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/>_hud-&gt;SetStateInt(<sp/></highlight><highlight class="stringliteral">&quot;player_nostamina&quot;</highlight><highlight class="normal">,<sp/>(<sp/>max_stamina<sp/>==<sp/>0<sp/>)<sp/>?<sp/>1<sp/>:<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"></highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/>_hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;updateArmorHealthAir&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"></highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>healthPulse<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;healthPulse&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartSound(<sp/></highlight><highlight class="stringliteral">&quot;snd_healthpulse&quot;</highlight><highlight class="normal">,<sp/>SND_CHANNEL_ITEM,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>healthPulse<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"></highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>healthTake<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;healthPulse&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartSound(<sp/></highlight><highlight class="stringliteral">&quot;snd_healthtake&quot;</highlight><highlight class="normal">,<sp/>SND_CHANNEL_ITEM,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>healthTake<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"></highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>inventory.ammoPulse<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;ammoPulse&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.ammoPulse<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>inventory.weaponPulse<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>update<sp/>the<sp/>weapon<sp/>hud<sp/>manually,<sp/>but<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>armor/ammo/health<sp/>because<sp/>they<sp/>are<sp/>updated<sp/>every</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>frame<sp/>no<sp/>matter<sp/>what</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateHudWeapon();</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;weaponPulse&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.weaponPulse<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>inventory.armorPulse<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;armorPulse&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.armorPulse<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"></highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateHudAmmo(<sp/>_hud<sp/>);</highlight></codeline>
<codeline lineno="2553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"></highlight></codeline>
<codeline lineno="2555"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2556"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2557"><highlight class="comment">idPlayer::UpdateHudWeapon</highlight></codeline>
<codeline lineno="2558"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2559"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2560"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::UpdateHudWeapon(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flashWeapon<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_user_interface" kindref="compound">idUserInterface</ref><sp/>*hud<sp/>=<sp/>idPlayer::hud;</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"></highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>updating<sp/>the<sp/>hud<sp/>of<sp/>a<sp/>followed<sp/>client</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.localClientNum<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>gameLocal.entities[<sp/>gameLocal.localClientNum<sp/>]<sp/>&amp;&amp;<sp/>gameLocal.entities[<sp/>gameLocal.localClientNum<sp/>]-&gt;IsType(<sp/>idPlayer::Type<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*p<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>gameLocal.entities[<sp/>gameLocal.localClientNum<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>p-&gt;spectating<sp/>&amp;&amp;<sp/>p-&gt;spectator<sp/>==<sp/>entityNumber<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>p-&gt;hud<sp/>);</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud<sp/>=<sp/>p-&gt;hud;</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"></highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"></highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_WEAPONS;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*weapnum<sp/>=<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;def_weapon%d&quot;</highlight><highlight class="normal">,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hudWeap<sp/>=<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;weapon%d&quot;</highlight><highlight class="normal">,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>weapstate<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>inventory.weapons<sp/>&amp;<sp/>(<sp/>1<sp/>&lt;&lt;<sp/>i<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*weap<sp/>=<sp/>spawnArgs.GetString(<sp/>weapnum<sp/>);</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weap<sp/>&amp;&amp;<sp/>*weap<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapstate++;</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>idealWeapon<sp/>==<sp/>i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapstate++;</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;SetStateInt(<sp/>hudWeap,<sp/>weapstate<sp/>);</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>flashWeapon<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;weaponChange&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2594"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"></highlight></codeline>
<codeline lineno="2596"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2597"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2598"><highlight class="comment">idPlayer::DrawHUD</highlight></codeline>
<codeline lineno="2599"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2600"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2601"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::DrawHUD(<sp/><ref refid="classid_user_interface" kindref="compound">idUserInterface</ref><sp/>*_hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"></highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!weapon.GetEntity()<sp/>||<sp/>influenceActive<sp/>!=<sp/>INFLUENCE_NONE<sp/>||<sp/>privateCameraView<sp/>||<sp/>gameLocal.GetCamera()<sp/>||<sp/>!_hud<sp/>||<sp/>!g_showHud.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"></highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateHudStats(<sp/>_hud<sp/>);</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"></highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/>_hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;weapicon&quot;</highlight><highlight class="normal">,<sp/>weapon.GetEntity()-&gt;Icon()<sp/>);</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"></highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>this<sp/>is<sp/>temp<sp/>to<sp/>allow<sp/>the<sp/>sound<sp/>meter<sp/>to<sp/>show<sp/>up<sp/>in<sp/>the<sp/>hud</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>should<sp/>be<sp/>commented<sp/>out<sp/>before<sp/>shipping<sp/>but<sp/>the<sp/>code<sp/>can<sp/>remain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>mod<sp/>developers<sp/>to<sp/>enable<sp/>for<sp/>the<sp/>same<sp/>functionality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/>_hud-&gt;SetStateInt(<sp/></highlight><highlight class="stringliteral">&quot;s_debug&quot;</highlight><highlight class="normal">,<sp/>cvarSystem-&gt;GetCVarInteger(<sp/></highlight><highlight class="stringliteral">&quot;s_showLevelMeter&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"></highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;UpdateGUI();</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"></highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/>_hud-&gt;Redraw(<sp/>gameLocal.realClientTime<sp/>);</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"></highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>weapon<sp/>targeting<sp/>crosshair</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!GuiActive()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>cursor<sp/>&amp;&amp;<sp/>weapon.GetEntity()-&gt;ShowCrosshair()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor-&gt;Redraw(<sp/>gameLocal.realClientTime<sp/>);</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"></highlight></codeline>
<codeline lineno="2628"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2629"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2630"><highlight class="comment">idPlayer::EnterCinematic</highlight></codeline>
<codeline lineno="2631"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2632"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2633"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::EnterCinematic(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/>Hide();</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/>StopAudioLog();</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/>StopSound(<sp/>SND_CHANNEL_PDA,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;radioChatterDown&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.SetLinearVelocity(<sp/>vec3_origin<sp/>);</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/>SetState(<sp/></highlight><highlight class="stringliteral">&quot;EnterCinematic&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateScript();</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"></highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weaponEnabled<sp/>&amp;&amp;<sp/>weapon.GetEntity()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;EnterCinematic();</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"></highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_FORWARD<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_BACKWARD<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_STRAFE_LEFT<sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_STRAFE_RIGHT<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_RUN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_ATTACK_HELD<sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_WEAPON_FIRED<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_JUMP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_CROUCH<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_ONGROUND<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_ONLADDER<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_DEAD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(<sp/>health<sp/>&lt;=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_RUN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_PAIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_HARDLANDING<sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_SOFTLANDING<sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_RELOAD<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_TELEPORT<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_TURN_LEFT<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_TURN_RIGHT<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2670"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"></highlight></codeline>
<codeline lineno="2672"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2673"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2674"><highlight class="comment">idPlayer::ExitCinematic</highlight></codeline>
<codeline lineno="2675"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2676"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2677"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::ExitCinematic(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/>Show();</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"></highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weaponEnabled<sp/>&amp;&amp;<sp/>weapon.GetEntity()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;ExitCinematic();</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"></highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/>SetState(<sp/></highlight><highlight class="stringliteral">&quot;ExitCinematic&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateScript();</highlight></codeline>
<codeline lineno="2686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"></highlight></codeline>
<codeline lineno="2688"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2689"><highlight class="comment">=====================</highlight></codeline>
<codeline lineno="2690"><highlight class="comment">idPlayer::UpdateConditions</highlight></codeline>
<codeline lineno="2691"><highlight class="comment">=====================</highlight></codeline>
<codeline lineno="2692"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2693"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::UpdateConditions(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/>velocity;</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>fallspeed;</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>forwardspeed;</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>sidespeed;</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"></highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>minus<sp/>the<sp/>push<sp/>velocity<sp/>to<sp/>avoid<sp/>playing<sp/>the<sp/>walking<sp/>animation<sp/>and<sp/>sounds<sp/>when<sp/>riding<sp/>a<sp/>mover</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/>velocity<sp/>=<sp/>physicsObj.GetLinearVelocity()<sp/>-<sp/>physicsObj.GetPushedLinearVelocity();</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/>fallspeed<sp/>=<sp/>velocity<sp/>*<sp/>physicsObj.GetGravityNormal();</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"></highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>influenceActive<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_FORWARD<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_BACKWARD<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_STRAFE_LEFT<sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_STRAFE_RIGHT<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.time<sp/>-<sp/>lastDmgTime<sp/>&lt;<sp/>500<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forwardspeed<sp/>=<sp/>velocity<sp/>*<sp/>viewAxis[<sp/>0<sp/>];</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sidespeed<sp/>=<sp/>velocity<sp/>*<sp/>viewAxis[<sp/>1<sp/>];</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_FORWARD<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>AI_ONGROUND<sp/>&amp;&amp;<sp/>(<sp/>forwardspeed<sp/>&gt;<sp/>20.01f<sp/>);</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_BACKWARD<sp/><sp/><sp/><sp/><sp/>=<sp/>AI_ONGROUND<sp/>&amp;&amp;<sp/>(<sp/>forwardspeed<sp/>&lt;<sp/>-20.01f<sp/>);</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_STRAFE_LEFT<sp/><sp/>=<sp/>AI_ONGROUND<sp/>&amp;&amp;<sp/>(<sp/>sidespeed<sp/>&gt;<sp/>20.01f<sp/>);</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_STRAFE_RIGHT<sp/>=<sp/>AI_ONGROUND<sp/>&amp;&amp;<sp/>(<sp/>sidespeed<sp/>&lt;<sp/>-20.01f<sp/>);</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>xyspeed<sp/>&gt;<sp/>MIN_BOB_SPEED<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_FORWARD<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>AI_ONGROUND<sp/>&amp;&amp;<sp/>(<sp/>usercmd.forwardmove<sp/>&gt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_BACKWARD<sp/><sp/><sp/><sp/><sp/>=<sp/>AI_ONGROUND<sp/>&amp;&amp;<sp/>(<sp/>usercmd.forwardmove<sp/>&lt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_STRAFE_LEFT<sp/><sp/>=<sp/>AI_ONGROUND<sp/>&amp;&amp;<sp/>(<sp/>usercmd.rightmove<sp/>&lt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_STRAFE_RIGHT<sp/>=<sp/>AI_ONGROUND<sp/>&amp;&amp;<sp/>(<sp/>usercmd.rightmove<sp/>&gt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_FORWARD<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_BACKWARD<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_STRAFE_LEFT<sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_STRAFE_RIGHT<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"></highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_RUN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(<sp/>usercmd.buttons<sp/>&amp;<sp/>BUTTON_RUN<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>(<sp/>!pm_stamina.GetFloat()<sp/>)<sp/>||<sp/>(<sp/>stamina<sp/>&gt;<sp/>pm_staminathreshold.GetFloat()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_DEAD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(<sp/>health<sp/>&lt;=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2729"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"></highlight></codeline>
<codeline lineno="2731"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2732"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="2733"><highlight class="comment">WeaponFireFeedback</highlight></codeline>
<codeline lineno="2734"><highlight class="comment"></highlight></codeline>
<codeline lineno="2735"><highlight class="comment">Called<sp/>when<sp/>a<sp/>weapon<sp/>fires,<sp/>generates<sp/>head<sp/>twitches,<sp/>etc</highlight></codeline>
<codeline lineno="2736"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="2737"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2738"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::WeaponFireFeedback(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/>*weaponDef<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>a<sp/>blink</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/>blink_time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"></highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>play<sp/>the<sp/>fire<sp/>animation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_WEAPON_FIRED<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"></highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>view<sp/>feedback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/>playerView.WeaponFireFeedback(<sp/>weaponDef<sp/>);</highlight></codeline>
<codeline lineno="2747"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"></highlight></codeline>
<codeline lineno="2749"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2750"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2751"><highlight class="comment">idPlayer::StopFiring</highlight></codeline>
<codeline lineno="2752"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2753"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2754"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::StopFiring(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_ATTACK_HELD<sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_WEAPON_FIRED<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_RELOAD<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weapon.GetEntity()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;EndAttack();</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2761"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"></highlight></codeline>
<codeline lineno="2763"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2764"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2765"><highlight class="comment">idPlayer::FireWeapon</highlight></codeline>
<codeline lineno="2766"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2767"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2768"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::FireWeapon(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/>axis;</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>muzzle;</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"></highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>privateCameraView<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"></highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>g_editEntityMode.GetInteger()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetViewPos(<sp/>muzzle,<sp/>axis<sp/>);</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.editEntities-&gt;SelectEntity(<sp/>muzzle,<sp/>axis[0],<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"></highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!hiddenWeapon<sp/>&amp;&amp;<sp/>weapon.GetEntity()-&gt;IsReady()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weapon.GetEntity()-&gt;AmmoInClip()<sp/>||<sp/>weapon.GetEntity()-&gt;AmmoAvailable()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_ATTACK_HELD<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;BeginAttack();</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>weapon_soulcube<sp/>&gt;=<sp/>0<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>currentWeapon<sp/>==<sp/>weapon_soulcube<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;soulCubeNotReady&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SelectWeapon(<sp/>previousWeapon,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NextBestWeapon();</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"></highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tipUp<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HideTip();</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>may<sp/>want<sp/>to<sp/>track<sp/>with<sp/>with<sp/>a<sp/>bool<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>keep<sp/>from<sp/>looking<sp/>up<sp/>named<sp/>events<sp/>so<sp/>often</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>objectiveUp<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HideObjective();</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2808"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"></highlight></codeline>
<codeline lineno="2810"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2811"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2812"><highlight class="comment">idPlayer::CacheWeapons</highlight></codeline>
<codeline lineno="2813"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2814"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2815"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::CacheWeapons(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/><sp/><sp/>weap;</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>w;</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"></highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>we<sp/>have<sp/>any<sp/>weapons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!inventory.weapons<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>w<sp/>=<sp/>0;<sp/>w<sp/>&lt;<sp/>MAX_WEAPONS;<sp/>w++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>inventory.weapons<sp/>&amp;<sp/>(<sp/>1<sp/>&lt;&lt;<sp/>w<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weap<sp/>=<sp/>spawnArgs.GetString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;def_weapon%d&quot;</highlight><highlight class="normal">,<sp/>w<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weap<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idWeapon::CacheWeapon(<sp/>weap<sp/>);</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.weapons<sp/>&amp;=<sp/>~(<sp/>1<sp/>&lt;&lt;<sp/>w<sp/>);</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"></highlight></codeline>
<codeline lineno="2836"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2837"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2838"><highlight class="comment">idPlayer::Give</highlight></codeline>
<codeline lineno="2839"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2840"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2841"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idPlayer::Give(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*statname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amount;</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"></highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>AI_DEAD<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"></highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!idStr::Icmp(<sp/>statname,<sp/></highlight><highlight class="stringliteral">&quot;health&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&gt;=<sp/>inventory.maxHealth<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amount<sp/>=<sp/>atoi(<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>amount<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>health<sp/>+=<sp/>amount;</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&gt;<sp/>inventory.maxHealth<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>health<sp/>=<sp/>inventory.maxHealth;</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;healthPulse&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"></highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!idStr::Icmp(<sp/>statname,<sp/></highlight><highlight class="stringliteral">&quot;stamina&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>stamina<sp/>&gt;=<sp/>100<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stamina<sp/>+=<sp/>atof(<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>stamina<sp/>&gt;<sp/>100<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stamina<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"></highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!idStr::Icmp(<sp/>statname,<sp/></highlight><highlight class="stringliteral">&quot;heartRate&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heartRate<sp/>+=<sp/>atoi(<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>heartRate<sp/>&gt;<sp/>MAX_HEARTRATE<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heartRate<sp/>=<sp/>MAX_HEARTRATE;</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"></highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!idStr::Icmp(<sp/>statname,<sp/></highlight><highlight class="stringliteral">&quot;air&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>airTics<sp/>&gt;=<sp/>pm_airTics.GetInteger()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>airTics<sp/>+=<sp/>atoi(<sp/>value<sp/>)<sp/>/<sp/>100.0<sp/>*<sp/>pm_airTics.GetInteger();</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>airTics<sp/>&gt;<sp/>pm_airTics.GetInteger()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>airTics<sp/>=<sp/>pm_airTics.GetInteger();</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inventory.Give(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>spawnArgs,<sp/>statname,<sp/>value,<sp/>&amp;idealWeapon,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2890"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"></highlight></codeline>
<codeline lineno="2892"><highlight class="normal"></highlight></codeline>
<codeline lineno="2893"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2894"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2895"><highlight class="comment">idPlayer::GiveHealthPool</highlight></codeline>
<codeline lineno="2896"><highlight class="comment"></highlight></codeline>
<codeline lineno="2897"><highlight class="comment">adds<sp/>health<sp/>to<sp/>the<sp/>player<sp/>health<sp/>pool</highlight></codeline>
<codeline lineno="2898"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2899"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2900"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::GiveHealthPool(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>amt<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>AI_DEAD<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"></highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>healthPool<sp/>+=<sp/>amt;</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>healthPool<sp/>&gt;<sp/>inventory.maxHealth<sp/>-<sp/>health<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>healthPool<sp/>=<sp/>inventory.maxHealth<sp/>-<sp/>health;</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextHealthPulse<sp/>=<sp/>gameLocal.time;</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2913"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"></highlight></codeline>
<codeline lineno="2915"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2916"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2917"><highlight class="comment">idPlayer::GiveItem</highlight></codeline>
<codeline lineno="2918"><highlight class="comment"></highlight></codeline>
<codeline lineno="2919"><highlight class="comment">Returns<sp/>false<sp/>if<sp/>the<sp/>item<sp/>shouldn&apos;t<sp/>be<sp/>picked<sp/>up</highlight></codeline>
<codeline lineno="2920"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2921"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2922"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idPlayer::GiveItem(<sp/><ref refid="classid_item" kindref="compound">idItem</ref><sp/>*item<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_key_value" kindref="compound">idKeyValue</ref><sp/><sp/><sp/><sp/>*arg;</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attr;</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gave;</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numPickup;</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"></highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isMultiplayer<sp/>&amp;&amp;<sp/>spectating<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"></highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/>item-&gt;GetAttributes(<sp/>attr<sp/>);</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/>gave<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/>numPickup<sp/>=<sp/>inventory.pickupItemNames.Num();</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>attr.GetNumKeyVals();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg<sp/>=<sp/>attr.GetKeyVal(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>Give(<sp/>arg-&gt;GetKey(),<sp/>arg-&gt;GetValue()<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gave<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"></highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/>arg<sp/>=<sp/>item-&gt;spawnArgs.MatchPrefix(<sp/></highlight><highlight class="stringliteral">&quot;inv_weapon&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>arg<sp/>&amp;&amp;<sp/>hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>update<sp/>the<sp/>weapon<sp/>hud<sp/>manually,<sp/>but<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>armor/ammo/health<sp/>because<sp/>they<sp/>are<sp/>updated<sp/>every</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>frame<sp/>no<sp/>matter<sp/>what</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateHudWeapon(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;weaponPulse&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"></highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>display<sp/>the<sp/>pickup<sp/>feedback<sp/>on<sp/>the<sp/>hud</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gave<sp/>&amp;&amp;<sp/>(<sp/>numPickup<sp/>==<sp/>inventory.pickupItemNames.Num()<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.AddPickupName(<sp/>item-&gt;spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;inv_name&quot;</highlight><highlight class="normal"><sp/>),<sp/>item-&gt;spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;inv_icon&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"></highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gave;</highlight></codeline>
<codeline lineno="2959"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"></highlight></codeline>
<codeline lineno="2961"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2962"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2963"><highlight class="comment">idPlayer::PowerUpModifier</highlight></codeline>
<codeline lineno="2964"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="2965"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2966"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>idPlayer::PowerUpModifier(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mod<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"></highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>PowerUpActive(<sp/>BERSERK<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>type<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SPEED:<sp/>{</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mod<sp/>*=<sp/>1.7f;</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PROJECTILE_DAMAGE:<sp/>{</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mod<sp/>*=<sp/>2.0f;</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MELEE_DAMAGE:<sp/>{</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mod<sp/>*=<sp/>30.0f;</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MELEE_DISTANCE:<sp/>{</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mod<sp/>*=<sp/>2.0f;</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"></highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isMultiplayer<sp/>&amp;&amp;<sp/>!gameLocal.isClient<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>PowerUpActive(<sp/>MEGAHEALTH<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>healthPool<sp/>&lt;=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GiveHealthPool(<sp/>100<sp/>);</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>healthPool<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"></highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mod;</highlight></codeline>
<codeline lineno="3001"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"></highlight></codeline>
<codeline lineno="3003"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3004"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3005"><highlight class="comment">idPlayer::PowerUpActive</highlight></codeline>
<codeline lineno="3006"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3007"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3008"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idPlayer::PowerUpActive(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>powerup<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>inventory.powerups<sp/>&amp;<sp/>(<sp/>1<sp/>&lt;&lt;<sp/>powerup<sp/>)<sp/>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="3010"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"></highlight></codeline>
<codeline lineno="3012"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3013"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3014"><highlight class="comment">idPlayer::GivePowerUp</highlight></codeline>
<codeline lineno="3015"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3016"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3017"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idPlayer::GivePowerUp(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>powerup,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sound;</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*skin;</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"></highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>powerup<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>powerup<sp/>&lt;<sp/>MAX_POWERUPS<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"></highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isServer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_bit_msg" kindref="compound">idBitMsg</ref><sp/><sp/><sp/><sp/>msg;</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgBuf[MAX_EVENT_PARAM_SIZE];</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"></highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.Init(<sp/>msgBuf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>msgBuf<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.WriteShort(<sp/>powerup<sp/>);</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.WriteBits(<sp/>1,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ServerSendEvent(<sp/>EVENT_POWERUP,<sp/>&amp;msg,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>-1<sp/>);</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"></highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>powerup<sp/>!=<sp/>MEGAHEALTH<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.GivePowerUp(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>powerup,<sp/>time<sp/>);</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"></highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_decl_entity_def" kindref="compound">idDeclEntityDef</ref><sp/>*def<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"></highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>powerup<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>BERSERK:<sp/>{</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;snd_berserk_third&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>&amp;sound<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartSoundShader(<sp/>declManager-&gt;FindSound(<sp/>sound<sp/>),<sp/>SND_CHANNEL_DEMONIC,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>baseSkinName.Length()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>powerUpSkin<sp/>=<sp/>declManager-&gt;FindSkin(<sp/>baseSkinName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_berserk&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.isClient<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idealWeapon<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>INVISIBILITY:<sp/>{</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;skin_invisibility&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>&amp;skin<sp/>);</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>powerUpSkin<sp/>=<sp/>declManager-&gt;FindSkin(<sp/>skin<sp/>);</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>any<sp/>decals<sp/>from<sp/>the<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>modelDefHandle<sp/>!=<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameRenderWorld-&gt;RemoveDecals(<sp/>modelDefHandle<sp/>);</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weapon.GetEntity()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;UpdateSkin();</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;snd_invisibility&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>&amp;sound<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartSoundShader(<sp/>declManager-&gt;FindSound(<sp/>sound<sp/>),<sp/>SND_CHANNEL_ANY,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADRENALINE:<sp/>{</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stamina<sp/>=<sp/>100.0f;</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MEGAHEALTH:<sp/>{</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;snd_megahealth&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>&amp;sound<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartSoundShader(<sp/>declManager-&gt;FindSound(<sp/>sound<sp/>),<sp/>SND_CHANNEL_ANY,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def<sp/>=<sp/>gameLocal.FindEntityDef(<sp/></highlight><highlight class="stringliteral">&quot;powerup_megahealth&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>def<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>health<sp/>=<sp/>def-&gt;dict.GetInt(<sp/></highlight><highlight class="stringliteral">&quot;inv_health&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"></highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;itemPickup&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"></highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Warning(<sp/></highlight><highlight class="stringliteral">&quot;Player<sp/>given<sp/>power<sp/>up<sp/>%i\n<sp/>which<sp/>is<sp/>out<sp/>of<sp/>range&quot;</highlight><highlight class="normal">,<sp/>powerup<sp/>);</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3092"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"></highlight></codeline>
<codeline lineno="3094"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3095"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="3096"><highlight class="comment">idPlayer::ClearPowerup</highlight></codeline>
<codeline lineno="3097"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="3098"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3099"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::ClearPowerup(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"></highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isServer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_bit_msg" kindref="compound">idBitMsg</ref><sp/><sp/><sp/><sp/>msg;</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgBuf[MAX_EVENT_PARAM_SIZE];</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"></highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.Init(<sp/>msgBuf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>msgBuf<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.WriteShort(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.WriteBits(<sp/>0,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ServerSendEvent(<sp/>EVENT_POWERUP,<sp/>&amp;msg,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>-1<sp/>);</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"></highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/><sp/>powerUpSkin<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/>inventory.powerups<sp/>&amp;=<sp/>~(<sp/>1<sp/>&lt;&lt;<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/>inventory.powerupEndTime[<sp/>i<sp/>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>BERSERK:<sp/>{</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StopSound(<sp/>SND_CHANNEL_DEMONIC,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>INVISIBILITY:<sp/>{</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weapon.GetEntity()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;UpdateSkin();</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"></highlight></codeline>
<codeline lineno="3128"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3129"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="3130"><highlight class="comment">idPlayer::UpdatePowerUps</highlight></codeline>
<codeline lineno="3131"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="3132"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::UpdatePowerUps(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"></highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.isClient<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_POWERUPS;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>PowerUpActive(<sp/>i<sp/>)<sp/>&amp;&amp;<sp/>inventory.powerupEndTime[i]<sp/>&lt;=<sp/>gameLocal.time<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearPowerup(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"></highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>powerUpSkin<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderEntity.customSkin<sp/>=<sp/>powerUpSkin;</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderEntity.customSkin<sp/>=<sp/>skin;</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"></highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>healthPool<sp/>&amp;&amp;<sp/>gameLocal.time<sp/>&gt;<sp/>nextHealthPulse<sp/>&amp;&amp;<sp/>!AI_DEAD<sp/>&amp;&amp;<sp/>health<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>!gameLocal.isClient<sp/>);<sp/><sp/></highlight><highlight class="comment">//<sp/>healthPool<sp/>never<sp/>be<sp/>set<sp/>on<sp/>client</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amt<sp/>=<sp/>(<sp/>healthPool<sp/>&gt;<sp/>5<sp/>)<sp/>?<sp/>5<sp/>:<sp/>healthPool;</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>health<sp/>+=<sp/>amt;</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&gt;<sp/>inventory.maxHealth<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>health<sp/>=<sp/>inventory.maxHealth;</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>healthPool<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>healthPool<sp/>-=<sp/>amt;</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextHealthPulse<sp/>=<sp/>gameLocal.time<sp/>+<sp/>HEALTHPULSE_TIME;</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>healthPulse<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ID_DEMO_BUILD</highlight></codeline>
<codeline lineno="3166"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.inCinematic<sp/>&amp;&amp;<sp/>influenceActive<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>g_skill.GetInteger()<sp/>==<sp/>3<sp/>&amp;&amp;<sp/>gameLocal.time<sp/>&gt;<sp/>nextHealthTake<sp/>&amp;&amp;<sp/>!AI_DEAD<sp/>&amp;&amp;<sp/>health<sp/>&gt;<sp/>g_healthTakeLimit.GetInteger()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>!gameLocal.isClient<sp/>);<sp/><sp/></highlight><highlight class="comment">//<sp/>healthPool<sp/>never<sp/>be<sp/>set<sp/>on<sp/>client</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>health<sp/>-=<sp/>g_healthTakeAmt.GetInteger();</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&lt;<sp/>g_healthTakeLimit.GetInteger()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>health<sp/>=<sp/>g_healthTakeLimit.GetInteger();</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextHealthTake<sp/>=<sp/>gameLocal.time<sp/>+<sp/>g_healthTakeTime.GetInteger()<sp/>*<sp/>1000;</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>healthTake<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3176"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"></highlight></codeline>
<codeline lineno="3178"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3179"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3180"><highlight class="comment">idPlayer::ClearPowerUps</highlight></codeline>
<codeline lineno="3181"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3182"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3183"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::ClearPowerUps(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_POWERUPS;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>PowerUpActive(<sp/>i<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearPowerup(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/>inventory.ClearPowerUps();</highlight></codeline>
<codeline lineno="3191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"></highlight></codeline>
<codeline lineno="3193"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3194"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3195"><highlight class="comment">idPlayer::GiveInventoryItem</highlight></codeline>
<codeline lineno="3196"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3197"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3198"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idPlayer::GiveInventoryItem(<sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/>*item<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isMultiplayer<sp/>&amp;&amp;<sp/>spectating<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/>inventory.items.Append(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classid_dict" kindref="compound">idDict</ref>(<sp/>*item<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structid_item_info" kindref="compound">idItemInfo</ref><sp/>info;</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>itemName<sp/>=<sp/>item-&gt;GetString(<sp/></highlight><highlight class="stringliteral">&quot;inv_name&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>idStr::Cmpn(<sp/>itemName,<sp/>STRTABLE_ID,<sp/>STRTABLE_ID_LENGTH<sp/>)<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.name<sp/>=<sp/>common-&gt;GetLanguageDict()-&gt;GetString(<sp/>itemName<sp/>);</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.name<sp/>=<sp/>itemName;</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/>info.icon<sp/>=<sp/>item-&gt;GetString(<sp/></highlight><highlight class="stringliteral">&quot;inv_icon&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/>inventory.pickupItemNames.Append(<sp/>info<sp/>);</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;itemicon&quot;</highlight><highlight class="normal">,<sp/>info.icon<sp/>);</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;invPickup&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"></highlight></codeline>
<codeline lineno="3219"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3220"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="3221"><highlight class="comment">idPlayer::UpdateObjectiveInfo</highlight></codeline>
<codeline lineno="3222"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="3223"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3224"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::UpdateObjectiveInfo(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>objectiveSystem<sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;objective1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;objective2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;objective3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>inventory.objectiveNames.Num();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;objective%i&quot;</highlight><highlight class="normal">,<sp/>i+1<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;objectivetitle%i&quot;</highlight><highlight class="normal">,<sp/>i+1<sp/>),<sp/>inventory.objectiveNames[i].title.c_str()<sp/>);</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;objectivetext%i&quot;</highlight><highlight class="normal">,<sp/>i+1<sp/>),<sp/>inventory.objectiveNames[i].text.c_str()<sp/>);</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;objectiveshot%i&quot;</highlight><highlight class="normal">,<sp/>i+1<sp/>),<sp/>inventory.objectiveNames[i].screenshot.c_str()<sp/>);</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/><sp/>objectiveSystem-&gt;StateChanged(<sp/>gameLocal.time<sp/>);</highlight></codeline>
<codeline lineno="3238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"></highlight></codeline>
<codeline lineno="3240"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3241"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3242"><highlight class="comment">idPlayer::GiveObjective</highlight></codeline>
<codeline lineno="3243"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3244"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3245"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::GiveObjective(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*screenshot<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structid_objective_info" kindref="compound">idObjectiveInfo</ref><sp/>info;</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/><sp/><sp/>info.title<sp/>=<sp/>title;</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/><sp/><sp/>info.text<sp/>=<sp/>text;</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/><sp/><sp/>info.screenshot<sp/>=<sp/>screenshot;</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/><sp/>inventory.objectiveNames.Append(<sp/>info<sp/>);</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/>ShowObjective(<sp/></highlight><highlight class="stringliteral">&quot;newObjective&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;newObjective&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"></highlight></codeline>
<codeline lineno="3257"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3258"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3259"><highlight class="comment">idPlayer::CompleteObjective</highlight></codeline>
<codeline lineno="3260"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3261"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3262"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::CompleteObjective(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>inventory.objectiveNames.Num();</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/><sp/>i<sp/>&lt;<sp/>c;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>idStr::Icmp(inventory.objectiveNames[i].title,<sp/>title)<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.objectiveNames.RemoveIndex(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/><sp/><sp/>ShowObjective(<sp/></highlight><highlight class="stringliteral">&quot;newObjectiveComplete&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"></highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;newObjectiveComplete&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"></highlight></codeline>
<codeline lineno="3277"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3278"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3279"><highlight class="comment">idPlayer::GiveVideo</highlight></codeline>
<codeline lineno="3280"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3281"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3282"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::GiveVideo(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*videoName,<sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/>*item<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"></highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>videoName<sp/>==<sp/>NULL<sp/>||<sp/>*videoName<sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"></highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/>inventory.videos.AddUnique(<sp/>videoName<sp/>);</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"></highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>item<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structid_item_info" kindref="compound">idItemInfo</ref><sp/>info;</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.name<sp/>=<sp/>item-&gt;GetString(<sp/></highlight><highlight class="stringliteral">&quot;inv_name&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.icon<sp/>=<sp/>item-&gt;GetString(<sp/></highlight><highlight class="stringliteral">&quot;inv_icon&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.pickupItemNames.Append(<sp/>info<sp/>);</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;videoPickup&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"></highlight></codeline>
<codeline lineno="3301"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3302"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3303"><highlight class="comment">idPlayer::GiveSecurity</highlight></codeline>
<codeline lineno="3304"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3305"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3306"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::GiveSecurity(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*security<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/><sp/><sp/>GetPDA()-&gt;SetSecurity(<sp/>security<sp/>);</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;pda_security&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;securityPickup&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"></highlight></codeline>
<codeline lineno="3314"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3315"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3316"><highlight class="comment">idPlayer::GiveEmail</highlight></codeline>
<codeline lineno="3317"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3318"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3319"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::GiveEmail(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*emailName<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"></highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>emailName<sp/>==<sp/>NULL<sp/>||<sp/>*emailName<sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"></highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/>inventory.emails.AddUnique(<sp/>emailName<sp/>);</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/>GetPDA()-&gt;AddEmail(<sp/>emailName<sp/>);</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"></highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;emailPickup&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"></highlight></codeline>
<codeline lineno="3333"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3334"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3335"><highlight class="comment">idPlayer::GivePDA</highlight></codeline>
<codeline lineno="3336"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3337"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3338"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::GivePDA(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pdaName,<sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/>*item<sp/>)</highlight></codeline>
<codeline lineno="3339"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isMultiplayer<sp/>&amp;&amp;<sp/>spectating<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"></highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>item<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.pdaSecurity.AddUnique(<sp/>item-&gt;GetString(<sp/></highlight><highlight class="stringliteral">&quot;inv_name&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"></highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pdaName<sp/>==<sp/>NULL<sp/>||<sp/>*pdaName<sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdaName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;personal&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"></highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_decl_p_d_a" kindref="compound">idDeclPDA</ref><sp/>*pda<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classid_decl_p_d_a" kindref="compound">idDeclPDA</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>declManager-&gt;FindType(<sp/>DECL_PDA,<sp/>pdaName<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"></highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/><sp/>inventory.pdas.AddUnique(<sp/>pdaName<sp/>);</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"></highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>any<sp/>videos<sp/>over</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pda-&gt;GetNumVideos();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_decl_video" kindref="compound">idDeclVideo</ref><sp/>*video<sp/>=<sp/>pda-&gt;GetVideoByIndex(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>video<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.videos.AddUnique(<sp/>video-&gt;GetName()<sp/>);</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"></highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>kind<sp/>of<sp/>a<sp/>hack,<sp/>but<sp/>it<sp/>works<sp/>nicely</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>want<sp/>to<sp/>display<sp/>the<sp/>&apos;you<sp/>got<sp/>a<sp/>new<sp/>pda&apos;<sp/>message<sp/>during<sp/>a<sp/>map<sp/>load</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.GetFrameNum()<sp/>&gt;<sp/>10<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pda<sp/>&amp;&amp;<sp/>hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>pdaName<sp/>=<sp/>pda-&gt;GetPdaName();</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdaName.RemoveColors();</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;pda&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;pda_text&quot;</highlight><highlight class="normal">,<sp/>pdaName<sp/>);</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sec<sp/>=<sp/>pda-&gt;GetSecurity();</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;pda_security&quot;</highlight><highlight class="normal">,<sp/>(<sp/>sec<sp/>&amp;&amp;<sp/>*sec<sp/>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;pdaPickup&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"></highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>inventory.pdas.Num()<sp/>==<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetPDA()-&gt;RemoveAddedEmailsAndVideos();</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!objectiveSystemOpen<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TogglePDA();</highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;showPDATip&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ShowTip(<sp/>spawnArgs.GetString(<sp/>&quot;text_infoTitle&quot;<sp/>),<sp/>spawnArgs.GetString(<sp/>&quot;text_firstPDA&quot;<sp/>),<sp/>true<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"></highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>inventory.pdas.Num()<sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/>pda-&gt;GetNumVideos()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;videoPickup&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3391"><highlight class="normal"></highlight></codeline>
<codeline lineno="3392"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3393"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3394"><highlight class="comment">idPlayer::FindInventoryItem</highlight></codeline>
<codeline lineno="3395"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3396"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><ref refid="classid_dict" kindref="compound">idDict</ref><sp/>*idPlayer::FindInventoryItem(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>inventory.items.Num();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*iname<sp/>=<sp/>inventory.items[i]-&gt;GetString(<sp/></highlight><highlight class="stringliteral">&quot;inv_name&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>iname<sp/>&amp;&amp;<sp/>*iname<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>idStr::Icmp(<sp/>name,<sp/>iname<sp/>)<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inventory.items[i];</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"></highlight></codeline>
<codeline lineno="3409"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3410"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3411"><highlight class="comment">idPlayer::RemoveInventoryItem</highlight></codeline>
<codeline lineno="3412"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3413"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3414"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::RemoveInventoryItem(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/>*item<sp/>=<sp/>FindInventoryItem(name);</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>item<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RemoveInventoryItem(<sp/>item<sp/>);</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"></highlight></codeline>
<codeline lineno="3421"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3422"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3423"><highlight class="comment">idPlayer::RemoveInventoryItem</highlight></codeline>
<codeline lineno="3424"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3425"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3426"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::RemoveInventoryItem(<sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/>*item<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/>inventory.items.Remove(<sp/>item<sp/>);</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>item;</highlight></codeline>
<codeline lineno="3429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"></highlight></codeline>
<codeline lineno="3431"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3432"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3433"><highlight class="comment">idPlayer::GiveItem</highlight></codeline>
<codeline lineno="3434"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3435"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3436"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::GiveItem(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*itemname<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/>args;</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"></highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/>args.Set(<sp/></highlight><highlight class="stringliteral">&quot;classname&quot;</highlight><highlight class="normal">,<sp/>itemname<sp/>);</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/>args.Set(<sp/></highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>name.c_str()<sp/>);</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/><sp/>gameLocal.SpawnEntityDef(<sp/>args<sp/>);</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;itemPickup&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"></highlight></codeline>
<codeline lineno="3447"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3448"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="3449"><highlight class="comment">idPlayer::SlotForWeapon</highlight></codeline>
<codeline lineno="3450"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="3451"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3452"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idPlayer::SlotForWeapon(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*weaponName<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"></highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_WEAPONS;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*weap<sp/>=<sp/>spawnArgs.GetString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;def_weapon%d&quot;</highlight><highlight class="normal">,<sp/>i<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!idStr::Cmp(<sp/>weap,<sp/>weaponName<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3461"><highlight class="normal"></highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="3464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"></highlight></codeline>
<codeline lineno="3466"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3467"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3468"><highlight class="comment">idPlayer::Reload</highlight></codeline>
<codeline lineno="3469"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3470"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3471"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Reload(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isClient<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"></highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spectating<sp/>||<sp/>gameLocal.inCinematic<sp/>||<sp/>influenceActive<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"></highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weapon.GetEntity()<sp/>&amp;&amp;<sp/>weapon.GetEntity()-&gt;IsLinked()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;Reload();</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"></highlight></codeline>
<codeline lineno="3485"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3486"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3487"><highlight class="comment">idPlayer::NextBestWeapon</highlight></codeline>
<codeline lineno="3488"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3489"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3490"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::NextBestWeapon(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*weap;</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>MAX_WEAPONS;</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"></highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isClient<sp/>||<sp/>!weaponEnabled<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"></highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>w<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w--;</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weap<sp/>=<sp/>spawnArgs.GetString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;def_weapon%d&quot;</highlight><highlight class="normal">,<sp/>w<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!weap[<sp/>0<sp/>]<sp/>||<sp/>(<sp/>(<sp/>inventory.weapons<sp/>&amp;<sp/>(<sp/>1<sp/>&lt;&lt;<sp/>w<sp/>)<sp/>)<sp/>==<sp/>0<sp/>)<sp/>||<sp/>(<sp/>!inventory.HasAmmo(<sp/>weap<sp/>)<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!spawnArgs.GetBool(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;weapon%d_best&quot;</highlight><highlight class="normal">,<sp/>w<sp/>)<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/><sp/><sp/>idealWeapon<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/>weaponSwitchTime<sp/>=<sp/>gameLocal.time<sp/>+<sp/>WEAPON_SWITCH_DELAY;</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateHudWeapon();</highlight></codeline>
<codeline lineno="3512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"></highlight></codeline>
<codeline lineno="3514"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3515"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3516"><highlight class="comment">idPlayer::NextWeapon</highlight></codeline>
<codeline lineno="3517"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3518"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3519"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::NextWeapon(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*weap;</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w;</highlight></codeline>
<codeline lineno="3522"><highlight class="normal"></highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!weaponEnabled<sp/>||<sp/>spectating<sp/>||<sp/>hiddenWeapon<sp/>||<sp/>gameLocal.inCinematic<sp/>||<sp/>gameLocal.world-&gt;spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;no_Weapons&quot;</highlight><highlight class="normal"><sp/>)<sp/>||<sp/>health<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"></highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isClient<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"></highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>we<sp/>have<sp/>any<sp/>weapons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!inventory.weapons<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>idealWeapon;</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w++;</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>w<sp/>&gt;=<sp/>MAX_WEAPONS<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weap<sp/>=<sp/>spawnArgs.GetString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;def_weapon%d&quot;</highlight><highlight class="normal">,<sp/>w<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!spawnArgs.GetBool(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;weapon%d_cycle&quot;</highlight><highlight class="normal">,<sp/>w<sp/>)<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!weap[<sp/>0<sp/>]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>inventory.weapons<sp/>&amp;<sp/>(<sp/>1<sp/>&lt;&lt;<sp/>w<sp/>)<sp/>)<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>inventory.HasAmmo(<sp/>weap<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"></highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>w<sp/>!=<sp/>currentWeapon<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>w<sp/>!=<sp/>idealWeapon<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idealWeapon<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weaponSwitchTime<sp/>=<sp/>gameLocal.time<sp/>+<sp/>WEAPON_SWITCH_DELAY;</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateHudWeapon();</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"></highlight></codeline>
<codeline lineno="3564"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3565"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3566"><highlight class="comment">idPlayer::PrevWeapon</highlight></codeline>
<codeline lineno="3567"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3568"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3569"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::PrevWeapon(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*weap;</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w;</highlight></codeline>
<codeline lineno="3572"><highlight class="normal"></highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!weaponEnabled<sp/>||<sp/>spectating<sp/>||<sp/>hiddenWeapon<sp/>||<sp/>gameLocal.inCinematic<sp/>||<sp/>gameLocal.world-&gt;spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;no_Weapons&quot;</highlight><highlight class="normal"><sp/>)<sp/>||<sp/>health<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"></highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isClient<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"></highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>we<sp/>have<sp/>any<sp/>weapons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!inventory.weapons<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"></highlight></codeline>
<codeline lineno="3586"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>idealWeapon;</highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w--;</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>w<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>MAX_WEAPONS<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weap<sp/>=<sp/>spawnArgs.GetString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;def_weapon%d&quot;</highlight><highlight class="normal">,<sp/>w<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!spawnArgs.GetBool(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;weapon%d_cycle&quot;</highlight><highlight class="normal">,<sp/>w<sp/>)<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!weap[<sp/>0<sp/>]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>inventory.weapons<sp/>&amp;<sp/>(<sp/>1<sp/>&lt;&lt;<sp/>w<sp/>)<sp/>)<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>inventory.HasAmmo(<sp/>weap<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"></highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>w<sp/>!=<sp/>currentWeapon<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>w<sp/>!=<sp/>idealWeapon<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idealWeapon<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weaponSwitchTime<sp/>=<sp/>gameLocal.time<sp/>+<sp/>WEAPON_SWITCH_DELAY;</highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateHudWeapon();</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3612"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3613"><highlight class="normal"></highlight></codeline>
<codeline lineno="3614"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3615"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3616"><highlight class="comment">idPlayer::SelectWeapon</highlight></codeline>
<codeline lineno="3617"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3618"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3619"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::SelectWeapon(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*weap;</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"></highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!weaponEnabled<sp/>||<sp/>spectating<sp/>||<sp/>gameLocal.inCinematic<sp/>||<sp/>health<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"></highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>num<sp/>&lt;<sp/>0<sp/>)<sp/>||<sp/>(<sp/>num<sp/>&gt;=<sp/>MAX_WEAPONS<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"></highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isClient<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"></highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>num<sp/>!=<sp/>weapon_pda<sp/>)<sp/>&amp;&amp;<sp/>gameLocal.world-&gt;spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;no_Weapons&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/>=<sp/>weapon_fists;</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hiddenWeapon<sp/>^=<sp/>1;</highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hiddenWeapon<sp/>&amp;&amp;<sp/>weapon.GetEntity()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;LowerWeapon();</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;RaiseWeapon();</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3643"><highlight class="normal"></highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/><sp/><sp/>weap<sp/>=<sp/>spawnArgs.GetString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;def_weapon%d&quot;</highlight><highlight class="normal">,<sp/>num<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!weap[<sp/>0<sp/>]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Printf(<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>weapon\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"></highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>force<sp/>||<sp/>(<sp/>inventory.weapons<sp/>&amp;<sp/>(<sp/>1<sp/>&lt;&lt;<sp/>num<sp/>)<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!inventory.HasAmmo(<sp/>weap<sp/>)<sp/>&amp;&amp;<sp/>!spawnArgs.GetBool(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;weapon%d_allowempty&quot;</highlight><highlight class="normal">,<sp/>num<sp/>)<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>previousWeapon<sp/>&gt;=<sp/>0<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>idealWeapon<sp/>==<sp/>num<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>spawnArgs.GetBool(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;weapon%d_toggle&quot;</highlight><highlight class="normal">,<sp/>num<sp/>)<sp/>)<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weap<sp/>=<sp/>spawnArgs.GetString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;def_weapon%d&quot;</highlight><highlight class="normal">,<sp/>previousWeapon<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!inventory.HasAmmo(<sp/>weap<sp/>)<sp/>&amp;&amp;<sp/>!spawnArgs.GetBool(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;weapon%d_allowempty&quot;</highlight><highlight class="normal">,<sp/>previousWeapon<sp/>)<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idealWeapon<sp/>=<sp/>previousWeapon;</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>weapon_pda<sp/>&gt;=<sp/>0<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>num<sp/>==<sp/>weapon_pda<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>inventory.pdas.Num()<sp/>==<sp/>0<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShowTip(<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;text_infoTitle&quot;</highlight><highlight class="normal"><sp/>),<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;text_noPDA&quot;</highlight><highlight class="normal"><sp/>),<sp/>true<sp/>);</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idealWeapon<sp/>=<sp/>num;</highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateHudWeapon();</highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3669"><highlight class="normal"></highlight></codeline>
<codeline lineno="3670"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3671"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="3672"><highlight class="comment">idPlayer::DropWeapon</highlight></codeline>
<codeline lineno="3673"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="3674"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3675"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::DropWeapon(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>died<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>forward,<sp/>up;</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inclip,<sp/>ammoavailable;</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"></highlight></codeline>
<codeline lineno="3679"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>!gameLocal.isClient<sp/>);</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spectating<sp/>||<sp/>weaponGone<sp/>||<sp/>weapon.GetEntity()<sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>!died<sp/>&amp;&amp;<sp/>!weapon.GetEntity()-&gt;IsReady()<sp/>)<sp/>||<sp/>weapon.GetEntity()-&gt;IsReloading()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ammoavailable<sp/>is<sp/>how<sp/>many<sp/>shots<sp/>we<sp/>can<sp/>fire</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inclip<sp/>is<sp/>which<sp/>amount<sp/>is<sp/>in<sp/>clip<sp/>right<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/><sp/><sp/>ammoavailable<sp/>=<sp/>weapon.GetEntity()-&gt;AmmoAvailable();</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/><sp/><sp/>inclip<sp/>=<sp/>weapon.GetEntity()-&gt;AmmoInClip();</highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>drop<sp/>a<sp/>grenade<sp/>if<sp/>we<sp/>have<sp/>none<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!idStr::Icmp(<sp/>idWeapon::GetAmmoNameForNum(<sp/>weapon.GetEntity()-&gt;GetAmmoType()<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;ammo_grenades&quot;</highlight><highlight class="normal"><sp/>)<sp/>&amp;&amp;<sp/>(<sp/>ammoavailable<sp/>-<sp/>inclip<sp/>&lt;=<sp/>0<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"></highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>expect<sp/>an<sp/>ammo<sp/>setup<sp/>that<sp/>makes<sp/>sense<sp/>before<sp/>doing<sp/>any<sp/>dropping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ammoavailable<sp/>is<sp/>-1<sp/>for<sp/>infinite<sp/>ammo,<sp/>and<sp/>weapons<sp/>like<sp/>chainsaw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>bad<sp/>ammo<sp/>config<sp/>usually<sp/>indicates<sp/>a<sp/>bad<sp/>weapon<sp/>state,<sp/>so<sp/>we<sp/>should<sp/>not<sp/>drop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>to<sp/>be<sp/>an<sp/>assertion<sp/>check,<sp/>but<sp/>it<sp/>still<sp/>happens<sp/>in<sp/>edge<sp/>cases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>ammoavailable<sp/>!=<sp/>-1<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>ammoavailable<sp/>-<sp/>inclip<sp/>&lt;<sp/>0<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;DPrintf(<sp/></highlight><highlight class="stringliteral">&quot;idPlayer::DropWeapon:<sp/>bad<sp/>ammo<sp/>setup\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*item<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>died<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ain&apos;t<sp/>gonna<sp/>throw<sp/>you<sp/>no<sp/>weapon<sp/>if<sp/>I&apos;m<sp/>dead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>weapon.GetEntity()-&gt;DropItem(<sp/>vec3_origin,<sp/>0,<sp/>WEAPON_DROP_TIME,<sp/>died<sp/>);</highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewAngles.ToVectors(<sp/>&amp;forward,<sp/>NULL,<sp/>&amp;up<sp/>);</highlight></codeline>
<codeline lineno="3712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>weapon.GetEntity()-&gt;DropItem(<sp/>250.0f<sp/>*<sp/>forward<sp/>+<sp/>150.0f<sp/>*<sp/>up,<sp/>500,<sp/>WEAPON_DROP_TIME,<sp/>died<sp/>);</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!item<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>appropriate<sp/>ammo<sp/>in<sp/>the<sp/>dropped<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_key_value" kindref="compound">idKeyValue</ref><sp/>*<sp/>keyval<sp/>=<sp/>item-&gt;spawnArgs.MatchPrefix(<sp/></highlight><highlight class="stringliteral">&quot;inv_ammo_&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>keyval<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item-&gt;spawnArgs.SetInt(<sp/>keyval-&gt;GetKey(),<sp/>ammoavailable<sp/>);</highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>inclipKey<sp/>=<sp/>keyval-&gt;GetKey();</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inclipKey.Insert(<sp/></highlight><highlight class="stringliteral">&quot;inclip_&quot;</highlight><highlight class="normal">,<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="3723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item-&gt;spawnArgs.SetInt(<sp/>inclipKey,<sp/>inclip<sp/>);</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!died<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>from<sp/>our<sp/>local<sp/>inventory<sp/>completely</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.Drop(<sp/>spawnArgs,<sp/>item-&gt;spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;inv_weapon&quot;</highlight><highlight class="normal"><sp/>),<sp/>-1<sp/>);</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;ResetAmmoClip();</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NextWeapon();</highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;WeaponStolen();</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weaponGone<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3734"><highlight class="normal"></highlight></codeline>
<codeline lineno="3735"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3736"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="3737"><highlight class="comment">idPlayer::StealWeapon</highlight></codeline>
<codeline lineno="3738"><highlight class="comment">steal<sp/>the<sp/>target<sp/>player&apos;s<sp/>current<sp/>weapon</highlight></codeline>
<codeline lineno="3739"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="3740"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3741"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::StealWeapon(<sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*player<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>!gameLocal.isClient<sp/>);</highlight></codeline>
<codeline lineno="3743"><highlight class="normal"></highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>there&apos;s<sp/>something<sp/>to<sp/>steal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_weapon" kindref="compound">idWeapon</ref><sp/>*player_weapon<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classid_weapon" kindref="compound">idWeapon</ref><sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>player-&gt;weapon.GetEntity()<sp/>);</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!player_weapon<sp/>||<sp/>!player_weapon-&gt;CanDrop()<sp/>||<sp/>weaponGone<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>steal<sp/>-<sp/>we<sp/>need<sp/>to<sp/>effectively<sp/>force<sp/>the<sp/>other<sp/>player<sp/>to<sp/>abandon<sp/>his<sp/>weapon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newweap<sp/>=<sp/>player-&gt;currentWeapon;</highlight></codeline>
<codeline lineno="3751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>newweap<sp/>==<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3753"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>might<sp/>be<sp/>just<sp/>dropped<sp/>-<sp/>check<sp/>inventory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>(<sp/>player-&gt;inventory.weapons<sp/>&amp;<sp/>(<sp/>1<sp/>&lt;&lt;<sp/>newweap<sp/>)<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*weapon_classname<sp/>=<sp/>spawnArgs.GetString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;def_weapon%d&quot;</highlight><highlight class="normal">,<sp/>newweap<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>weapon_classname<sp/>);</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ammoavailable<sp/>=<sp/>player-&gt;weapon.GetEntity()-&gt;AmmoAvailable();</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inclip<sp/>=<sp/>player-&gt;weapon.GetEntity()-&gt;AmmoInClip();</highlight></codeline>
<codeline lineno="3762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>ammoavailable<sp/>!=<sp/>-1<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>ammoavailable<sp/>-<sp/>inclip<sp/>&lt;<sp/>0<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>DropWeapon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;DPrintf(<sp/></highlight><highlight class="stringliteral">&quot;idPlayer::StealWeapon:<sp/>bad<sp/>ammo<sp/>setup\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>still<sp/>steal<sp/>the<sp/>weapon,<sp/>so<sp/>let&apos;s<sp/>use<sp/>the<sp/>default<sp/>ammo<sp/>levels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inclip<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_decl_entity_def" kindref="compound">idDeclEntityDef</ref><sp/>*decl<sp/>=<sp/>gameLocal.FindEntityDef(<sp/>weapon_classname<sp/>);</highlight></codeline>
<codeline lineno="3768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>decl<sp/>);</highlight></codeline>
<codeline lineno="3769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_key_value" kindref="compound">idKeyValue</ref><sp/>*keypair<sp/>=<sp/>decl-&gt;dict.MatchPrefix(<sp/></highlight><highlight class="stringliteral">&quot;inv_ammo_&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>keypair<sp/>);</highlight></codeline>
<codeline lineno="3771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ammoavailable<sp/>=<sp/>atoi(<sp/>keypair-&gt;GetValue()<sp/>);</highlight></codeline>
<codeline lineno="3772"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3773"><highlight class="normal"></highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/><sp/><sp/>player-&gt;weapon.GetEntity()-&gt;WeaponStolen();</highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/><sp/><sp/>player-&gt;inventory.Drop(<sp/>player-&gt;spawnArgs,<sp/>NULL,<sp/>newweap<sp/>);</highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/><sp/><sp/>player-&gt;SelectWeapon(<sp/>weapon_fists,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>case<sp/>the<sp/>robbed<sp/>player<sp/>is<sp/>firing<sp/>rounds<sp/>with<sp/>a<sp/>continuous<sp/>fire<sp/>weapon<sp/>like<sp/>the<sp/>chaingun/plasma<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>will<sp/>ensure<sp/>the<sp/>firing<sp/>actually<sp/>stops</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/><sp/><sp/>player-&gt;weaponGone<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"></highlight></codeline>
<codeline lineno="3781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>give<sp/>weapon,<sp/>setup<sp/>the<sp/>ammo<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/><sp/><sp/>Give(<sp/></highlight><highlight class="stringliteral">&quot;weapon&quot;</highlight><highlight class="normal">,<sp/>weapon_classname<sp/>);</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"><sp/><sp/><sp/><sp/>ammo_t<sp/>ammo_i<sp/>=<sp/>player-&gt;inventory.AmmoIndexForWeaponClass(<sp/>weapon_classname,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/><sp/><sp/>idealWeapon<sp/>=<sp/>newweap;</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/><sp/><sp/>inventory.ammo[<sp/>ammo_i<sp/>]<sp/>+=<sp/>ammoavailable;</highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/><sp/><sp/>inventory.clip[<sp/>newweap<sp/>]<sp/>=<sp/>inclip;</highlight></codeline>
<codeline lineno="3787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"></highlight></codeline>
<codeline lineno="3789"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3790"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3791"><highlight class="comment">idPlayer::ActiveGui</highlight></codeline>
<codeline lineno="3792"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3793"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3794"><highlight class="normal"><ref refid="classid_user_interface" kindref="compound">idUserInterface</ref><sp/>*idPlayer::ActiveGui(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>objectiveSystemOpen<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>objectiveSystem;</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3798"><highlight class="normal"></highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>focusUI;</highlight></codeline>
<codeline lineno="3800"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3801"><highlight class="normal"></highlight></codeline>
<codeline lineno="3802"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3803"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3804"><highlight class="comment">idPlayer::Weapon_Combat</highlight></codeline>
<codeline lineno="3805"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3806"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3807"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Weapon_Combat(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>influenceActive<sp/>||<sp/>!weaponEnabled<sp/>||<sp/>gameLocal.inCinematic<sp/>||<sp/>privateCameraView<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"></highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;RaiseWeapon();</highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weapon.GetEntity()-&gt;IsReloading()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!AI_RELOAD<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_RELOAD<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetState(<sp/></highlight><highlight class="stringliteral">&quot;ReloadWeapon&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateScript();</highlight></codeline>
<codeline lineno="3818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3819"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_RELOAD<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3821"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3822"><highlight class="normal"></highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>idealWeapon<sp/>==<sp/>weapon_soulcube<sp/>&amp;&amp;<sp/>soulCubeProjectile.GetEntity()<sp/>!=<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idealWeapon<sp/>=<sp/>currentWeapon;</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3826"><highlight class="normal"></highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>idealWeapon<sp/>!=<sp/>currentWeapon<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weaponCatchup<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>gameLocal.isClient<sp/>);</highlight></codeline>
<codeline lineno="3830"><highlight class="normal"></highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentWeapon<sp/>=<sp/>idealWeapon;</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weaponGone<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>animPrefix<sp/>=<sp/>spawnArgs.GetString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;def_weapon%d&quot;</highlight><highlight class="normal">,<sp/>currentWeapon<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;GetWeaponDef(<sp/>animPrefix,<sp/>inventory.clip[<sp/>currentWeapon<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>animPrefix.Strip(<sp/></highlight><highlight class="stringliteral">&quot;weapon_&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3836"><highlight class="normal"></highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;NetCatchup();</highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classfunction__t" kindref="compound">function_t</ref><sp/>*newstate<sp/>=<sp/>GetScriptFunction(<sp/></highlight><highlight class="stringliteral">&quot;NetCatchup&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>newstate<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetState(<sp/>newstate<sp/>);</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateScript();</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weaponCatchup<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weapon.GetEntity()-&gt;IsReady()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;PutAway();</highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"></highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weapon.GetEntity()-&gt;IsHolstered()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>idealWeapon<sp/>&gt;=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>idealWeapon<sp/>&lt;<sp/>MAX_WEAPONS<sp/>);</highlight></codeline>
<codeline lineno="3852"><highlight class="normal"></highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>currentWeapon<sp/>!=<sp/>weapon_pda<sp/>&amp;&amp;<sp/>!spawnArgs.GetBool(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;weapon%d_toggle&quot;</highlight><highlight class="normal">,<sp/>currentWeapon<sp/>)<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previousWeapon<sp/>=<sp/>currentWeapon;</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentWeapon<sp/>=<sp/>idealWeapon;</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weaponGone<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>animPrefix<sp/>=<sp/>spawnArgs.GetString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;def_weapon%d&quot;</highlight><highlight class="normal">,<sp/>currentWeapon<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;GetWeaponDef(<sp/>animPrefix,<sp/>inventory.clip[<sp/>currentWeapon<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>animPrefix.Strip(<sp/></highlight><highlight class="stringliteral">&quot;weapon_&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3861"><highlight class="normal"></highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;Raise();</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weaponGone<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>you<sp/>drop<sp/>and<sp/>re-get<sp/>weap,<sp/>you<sp/>may<sp/>miss<sp/>the<sp/>=<sp/>false<sp/>above<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weapon.GetEntity()-&gt;IsHolstered()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!weapon.GetEntity()-&gt;AmmoAvailable()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>weapons<sp/>can<sp/>switch<sp/>automatically<sp/>if<sp/>they<sp/>have<sp/>no<sp/>more<sp/>ammo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NextBestWeapon();</highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;Raise();</highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>GetScriptFunction(<sp/></highlight><highlight class="stringliteral">&quot;RaiseWeapon&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>state<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetState(<sp/>state<sp/>);</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"></highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>attack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_WEAPON_FIRED<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!influenceActive<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>usercmd.buttons<sp/>&amp;<sp/>BUTTON_ATTACK<sp/>)<sp/>&amp;&amp;<sp/>!weaponGone<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FireWeapon();</highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>oldButtons<sp/>&amp;<sp/>BUTTON_ATTACK<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_ATTACK_HELD<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;EndAttack();</highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"></highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>our<sp/>ammo<sp/>clip<sp/>in<sp/>our<sp/>inventory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>currentWeapon<sp/>&gt;=<sp/>0<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>currentWeapon<sp/>&lt;<sp/>MAX_WEAPONS<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.clip[<sp/>currentWeapon<sp/>]<sp/>=<sp/>weapon.GetEntity()-&gt;AmmoInClip();</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hud<sp/>&amp;&amp;<sp/>(<sp/>currentWeapon<sp/>==<sp/>idealWeapon<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateHudAmmo(<sp/>hud<sp/>);</highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3899"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3900"><highlight class="normal"></highlight></codeline>
<codeline lineno="3901"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3902"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3903"><highlight class="comment">idPlayer::Weapon_NPC</highlight></codeline>
<codeline lineno="3904"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3905"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3906"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Weapon_NPC(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>idealWeapon<sp/>!=<sp/>currentWeapon<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Weapon_Combat();</highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/><sp/><sp/>StopFiring();</highlight></codeline>
<codeline lineno="3911"><highlight class="normal"><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;LowerWeapon();</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"></highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>usercmd.buttons<sp/>&amp;<sp/>BUTTON_ATTACK<sp/>)<sp/>&amp;&amp;<sp/>!(<sp/>oldButtons<sp/>&amp;<sp/>BUTTON_ATTACK<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buttonMask<sp/>|=<sp/>BUTTON_ATTACK;</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusCharacter-&gt;TalkTo(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3917"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3918"><highlight class="normal"></highlight></codeline>
<codeline lineno="3919"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3920"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3921"><highlight class="comment">idPlayer::LowerWeapon</highlight></codeline>
<codeline lineno="3922"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3923"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3924"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::LowerWeapon(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weapon.GetEntity()<sp/>&amp;&amp;<sp/>!weapon.GetEntity()-&gt;IsHidden()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;LowerWeapon();</highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3928"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"></highlight></codeline>
<codeline lineno="3930"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3931"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3932"><highlight class="comment">idPlayer::RaiseWeapon</highlight></codeline>
<codeline lineno="3933"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3934"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3935"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::RaiseWeapon(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weapon.GetEntity()<sp/>&amp;&amp;<sp/>weapon.GetEntity()-&gt;IsHidden()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;RaiseWeapon();</highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3939"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"></highlight></codeline>
<codeline lineno="3941"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3942"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3943"><highlight class="comment">idPlayer::WeaponLoweringCallback</highlight></codeline>
<codeline lineno="3944"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3945"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3946"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::WeaponLoweringCallback(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3947"><highlight class="normal"><sp/><sp/><sp/><sp/>SetState(<sp/></highlight><highlight class="stringliteral">&quot;LowerWeapon&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3948"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateScript();</highlight></codeline>
<codeline lineno="3949"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3950"><highlight class="normal"></highlight></codeline>
<codeline lineno="3951"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3952"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3953"><highlight class="comment">idPlayer::WeaponRisingCallback</highlight></codeline>
<codeline lineno="3954"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3955"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3956"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::WeaponRisingCallback(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/><sp/><sp/>SetState(<sp/></highlight><highlight class="stringliteral">&quot;RaiseWeapon&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3958"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateScript();</highlight></codeline>
<codeline lineno="3959"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3960"><highlight class="normal"></highlight></codeline>
<codeline lineno="3961"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3962"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3963"><highlight class="comment">idPlayer::Weapon_GUI</highlight></codeline>
<codeline lineno="3964"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="3965"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3966"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Weapon_GUI(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"></highlight></codeline>
<codeline lineno="3968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!objectiveSystemOpen<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>idealWeapon<sp/>!=<sp/>currentWeapon<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Weapon_Combat();</highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StopFiring();</highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;LowerWeapon();</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3975"><highlight class="normal"></highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disable<sp/>click<sp/>prediction<sp/>for<sp/>the<sp/>GUIs.<sp/>handy<sp/>to<sp/>check<sp/>the<sp/>state<sp/>sync<sp/>does<sp/>the<sp/>right<sp/>thing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isClient<sp/>&amp;&amp;<sp/>!net_clientPredictGUI.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3980"><highlight class="normal"></highlight></codeline>
<codeline lineno="3981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>oldButtons<sp/>^<sp/>usercmd.buttons<sp/>)<sp/>&amp;<sp/>BUTTON_ATTACK<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsys_event__s" kindref="compound">sysEvent_t</ref><sp/>ev;</highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*command<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>updateVisuals<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"></highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_user_interface" kindref="compound">idUserInterface</ref><sp/>*ui<sp/>=<sp/>ActiveGui();</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ui<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev<sp/>=<sp/>sys-&gt;GenerateMouseButtonEvent(<sp/>1,<sp/>(<sp/>usercmd.buttons<sp/>&amp;<sp/>BUTTON_ATTACK<sp/>)<sp/>!=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="3989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command<sp/>=<sp/>ui-&gt;HandleEvent(<sp/>&amp;ev,<sp/>gameLocal.time,<sp/>&amp;updateVisuals<sp/>);</highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>updateVisuals<sp/>&amp;&amp;<sp/>focusGUIent<sp/>&amp;&amp;<sp/>ui<sp/>==<sp/>focusUI<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusGUIent-&gt;UpdateVisuals();</highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isClient<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>predict<sp/>enough,<sp/>but<sp/>don&apos;t<sp/>want<sp/>to<sp/>execute<sp/>commands</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>focusGUIent<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HandleGuiCommands(<sp/>focusGUIent,<sp/>command<sp/>);</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HandleGuiCommands(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>command<sp/>);</highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4004"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"></highlight></codeline>
<codeline lineno="4006"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4007"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="4008"><highlight class="comment">idPlayer::UpdateWeapon</highlight></codeline>
<codeline lineno="4009"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="4010"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4011"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::UpdateWeapon(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&lt;=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4014"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"></highlight></codeline>
<codeline lineno="4016"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>!spectating<sp/>);</highlight></codeline>
<codeline lineno="4017"><highlight class="normal"></highlight></codeline>
<codeline lineno="4018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isClient<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clients<sp/>need<sp/>to<sp/>wait<sp/>till<sp/>the<sp/>weapon<sp/>and<sp/>it&apos;s<sp/>world<sp/>model<sp/>entity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>present<sp/>and<sp/>synchronized<sp/>(<sp/>weapon.worldModel<sp/>idEntityPtr<sp/>to<sp/>idAnimatedEntity<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!weapon.GetEntity()-&gt;IsWorldModelReady()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4024"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4025"><highlight class="normal"></highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>always<sp/>make<sp/>sure<sp/>the<sp/>weapon<sp/>is<sp/>correctly<sp/>setup<sp/>before<sp/>accessing<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!weapon.GetEntity()-&gt;IsLinked()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>idealWeapon<sp/>!=<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>animPrefix<sp/>=<sp/>spawnArgs.GetString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;def_weapon%d&quot;</highlight><highlight class="normal">,<sp/>idealWeapon<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;GetWeaponDef(<sp/>animPrefix,<sp/>inventory.clip[<sp/>idealWeapon<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="4031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>weapon.GetEntity()-&gt;IsLinked()<sp/>);</highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4036"><highlight class="normal"></highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hiddenWeapon<sp/>&amp;&amp;<sp/>tipUp<sp/>&amp;&amp;<sp/>usercmd.buttons<sp/>&amp;<sp/>BUTTON_ATTACK<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HideTip();</highlight></codeline>
<codeline lineno="4039"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>g_dragEntity.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StopFiring();</highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;LowerWeapon();</highlight></codeline>
<codeline lineno="4044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dragEntity.Update(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ActiveGui()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gui<sp/>handling<sp/>overrides<sp/>weapon<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Weapon_GUI();</highlight></codeline>
<codeline lineno="4048"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>focusCharacter<sp/>&amp;&amp;<sp/>(<sp/>focusCharacter-&gt;health<sp/>&gt;<sp/>0<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Weapon_NPC();</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Weapon_Combat();</highlight></codeline>
<codeline lineno="4052"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hiddenWeapon<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;LowerWeapon();</highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"></highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>weapon<sp/>state,<sp/>particles,<sp/>dlights,<sp/>etc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4059"><highlight class="normal"><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;PresentWeapon(<sp/>showWeaponViewModel<sp/>);</highlight></codeline>
<codeline lineno="4060"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"></highlight></codeline>
<codeline lineno="4062"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4063"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="4064"><highlight class="comment">idPlayer::SpectateFreeFly</highlight></codeline>
<codeline lineno="4065"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="4066"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4067"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::SpectateFreeFly(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/><sp/><sp/><sp/>*player;</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/><sp/><sp/><sp/><sp/>newOrig;</highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/><sp/><sp/><sp/><sp/>spawn_origin;</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_angles" kindref="compound">idAngles</ref><sp/><sp/><sp/><sp/>spawn_angles;</highlight></codeline>
<codeline lineno="4072"><highlight class="normal"></highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><sp/><sp/><sp/><sp/>player<sp/>=<sp/>gameLocal.GetClientByNum(<sp/>spectator<sp/>);</highlight></codeline>
<codeline lineno="4074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>force<sp/>||<sp/>gameLocal.time<sp/>&gt;<sp/>lastSpectateChange<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spectator<sp/>=<sp/>entityNumber;</highlight></codeline>
<codeline lineno="4076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>player<sp/>&amp;&amp;<sp/>player<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>!player-&gt;spectating<sp/>&amp;&amp;<sp/>!player-&gt;IsInTeleport()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newOrig<sp/>=<sp/>player-&gt;GetPhysics()-&gt;GetOrigin();</highlight></codeline>
<codeline lineno="4078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>player-&gt;physicsObj.IsCrouching()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newOrig[<sp/>2<sp/>]<sp/>+=<sp/>pm_crouchviewheight.GetFloat();</highlight></codeline>
<codeline lineno="4080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newOrig[<sp/>2<sp/>]<sp/>+=<sp/>pm_normalviewheight.GetFloat();</highlight></codeline>
<codeline lineno="4082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newOrig[<sp/>2<sp/>]<sp/>+=<sp/>SPECTATE_RAISE;</highlight></codeline>
<codeline lineno="4084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_bounds" kindref="compound">idBounds</ref><sp/>b<sp/>=<sp/><ref refid="classid_bounds" kindref="compound">idBounds</ref>(<sp/>vec3_origin<sp/>).Expand(<sp/>pm_spectatebbox.GetFloat()<sp/>*<sp/>0.5f<sp/>);</highlight></codeline>
<codeline lineno="4085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>start<sp/>=<sp/>player-&gt;GetPhysics()-&gt;GetOrigin();</highlight></codeline>
<codeline lineno="4086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start[2]<sp/>+=<sp/>pm_spectatebbox.GetFloat()<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="4087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtrace__s" kindref="compound">trace_t</ref><sp/>t;</highlight></codeline>
<codeline lineno="4088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assuming<sp/>spectate<sp/>bbox<sp/>is<sp/>inside<sp/>stand<sp/>or<sp/>crouch<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.clip.TraceBounds(<sp/>t,<sp/>start,<sp/>newOrig,<sp/>b,<sp/>MASK_PLAYERSOLID,<sp/>player<sp/>);</highlight></codeline>
<codeline lineno="4090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newOrig.Lerp(<sp/>start,<sp/>newOrig,<sp/>t.fraction<sp/>);</highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetOrigin(<sp/>newOrig<sp/>);</highlight></codeline>
<codeline lineno="4092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_angles" kindref="compound">idAngles</ref><sp/>angle<sp/>=<sp/>player-&gt;viewAngles;</highlight></codeline>
<codeline lineno="4093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angle[<sp/>2<sp/>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetViewAngles(<sp/>angle<sp/>);</highlight></codeline>
<codeline lineno="4095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SelectInitialSpawnPoint(<sp/>spawn_origin,<sp/>spawn_angles<sp/>);</highlight></codeline>
<codeline lineno="4097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spawn_origin[<sp/>2<sp/>]<sp/>+=<sp/>pm_normalviewheight.GetFloat();</highlight></codeline>
<codeline lineno="4098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spawn_origin[<sp/>2<sp/>]<sp/>+=<sp/>SPECTATE_RAISE;</highlight></codeline>
<codeline lineno="4099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetOrigin(<sp/>spawn_origin<sp/>);</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetViewAngles(<sp/>spawn_angles<sp/>);</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastSpectateChange<sp/>=<sp/>gameLocal.time<sp/>+<sp/>500;</highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4105"><highlight class="normal"></highlight></codeline>
<codeline lineno="4106"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4107"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="4108"><highlight class="comment">idPlayer::SpectateCycle</highlight></codeline>
<codeline lineno="4109"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="4110"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::SpectateCycle(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*player;</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"></highlight></codeline>
<codeline lineno="4114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.time<sp/>&gt;<sp/>lastSpectateChange<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>latchedSpectator<sp/>=<sp/>spectator;</highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spectator<sp/>=<sp/>gameLocal.GetNextClientNum(<sp/>spectator<sp/>);</highlight></codeline>
<codeline lineno="4117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player<sp/>=<sp/>gameLocal.GetClientByNum(<sp/>spectator<sp/>);</highlight></codeline>
<codeline lineno="4118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>player<sp/>);<sp/></highlight><highlight class="comment">//<sp/>never<sp/>call<sp/>here<sp/>when<sp/>the<sp/>current<sp/>spectator<sp/>is<sp/>wrong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ignore<sp/>other<sp/>spectators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>latchedSpectator<sp/>!=<sp/>spectator<sp/>&amp;&amp;<sp/>player-&gt;spectating<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spectator<sp/>=<sp/>gameLocal.GetNextClientNum(<sp/>spectator<sp/>);</highlight></codeline>
<codeline lineno="4122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player<sp/>=<sp/>gameLocal.GetClientByNum(<sp/>spectator<sp/>);</highlight></codeline>
<codeline lineno="4123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastSpectateChange<sp/>=<sp/>gameLocal.time<sp/>+<sp/>500;</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"></highlight></codeline>
<codeline lineno="4128"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4129"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="4130"><highlight class="comment">idPlayer::UpdateSpectating</highlight></codeline>
<codeline lineno="4131"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="4132"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::UpdateSpectating(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4134"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>spectating<sp/>);</highlight></codeline>
<codeline lineno="4135"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>!gameLocal.isClient<sp/>);</highlight></codeline>
<codeline lineno="4136"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>IsHidden()<sp/>);</highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*player;</highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.isMultiplayer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4141"><highlight class="normal"><sp/><sp/><sp/><sp/>player<sp/>=<sp/>gameLocal.GetClientByNum(<sp/>spectator<sp/>);</highlight></codeline>
<codeline lineno="4142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!player<sp/>||<sp/>(<sp/>player-&gt;spectating<sp/>&amp;&amp;<sp/>player<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SpectateFreeFly(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>usercmd.upmove<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SpectateFreeFly(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4146"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>usercmd.buttons<sp/>&amp;<sp/>BUTTON_ATTACK<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SpectateCycle();</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4150"><highlight class="normal"></highlight></codeline>
<codeline lineno="4151"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4152"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="4153"><highlight class="comment">idPlayer::HandleSingleGuiCommand</highlight></codeline>
<codeline lineno="4154"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="4155"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4156"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idPlayer::HandleSingleGuiCommand(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*entityGui,<sp/><ref refid="classid_lexer" kindref="compound">idLexer</ref><sp/>*src<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_token" kindref="compound">idToken</ref><sp/>token;</highlight></codeline>
<codeline lineno="4158"><highlight class="normal"></highlight></codeline>
<codeline lineno="4159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!src-&gt;ReadToken(<sp/>&amp;token<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4162"><highlight class="normal"></highlight></codeline>
<codeline lineno="4163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>token<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4166"><highlight class="normal"></highlight></codeline>
<codeline lineno="4167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>token.Icmp(<sp/></highlight><highlight class="stringliteral">&quot;addhealth&quot;</highlight><highlight class="normal"><sp/>)<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>entityGui<sp/>&amp;&amp;<sp/>health<sp/>&lt;<sp/>100<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_health<sp/>=<sp/>entityGui-&gt;spawnArgs.GetInt(<sp/></highlight><highlight class="stringliteral">&quot;gui_parm1&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amt<sp/>=<sp/>(<sp/>_health<sp/>&gt;=<sp/>HEALTH_PER_DOSE<sp/>)<sp/>?<sp/>HEALTH_PER_DOSE<sp/>:<sp/>_health;</highlight></codeline>
<codeline lineno="4171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_health<sp/>-=<sp/>amt;</highlight></codeline>
<codeline lineno="4172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityGui-&gt;spawnArgs.SetInt(<sp/></highlight><highlight class="stringliteral">&quot;gui_parm1&quot;</highlight><highlight class="normal">,<sp/>_health<sp/>);</highlight></codeline>
<codeline lineno="4173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>entityGui-&gt;GetRenderEntity()<sp/>&amp;&amp;<sp/>entityGui-&gt;GetRenderEntity()-&gt;gui[<sp/>0<sp/>]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityGui-&gt;GetRenderEntity()-&gt;gui[<sp/>0<sp/>]-&gt;SetStateInt(<sp/></highlight><highlight class="stringliteral">&quot;gui_parm1&quot;</highlight><highlight class="normal">,<sp/>_health<sp/>);</highlight></codeline>
<codeline lineno="4175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>health<sp/>+=<sp/>amt;</highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&gt;<sp/>100<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>health<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"></highlight></codeline>
<codeline lineno="4184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>token.Icmp(<sp/></highlight><highlight class="stringliteral">&quot;ready&quot;</highlight><highlight class="normal"><sp/>)<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PerformImpulse(<sp/>IMPULSE_17<sp/>);</highlight></codeline>
<codeline lineno="4186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4188"><highlight class="normal"></highlight></codeline>
<codeline lineno="4189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>token.Icmp(<sp/></highlight><highlight class="stringliteral">&quot;updatepda&quot;</highlight><highlight class="normal"><sp/>)<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdatePDAInfo(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4193"><highlight class="normal"></highlight></codeline>
<codeline lineno="4194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>token.Icmp(<sp/></highlight><highlight class="stringliteral">&quot;updatepda2&quot;</highlight><highlight class="normal"><sp/>)<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdatePDAInfo(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4198"><highlight class="normal"></highlight></codeline>
<codeline lineno="4199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>token.Icmp(<sp/></highlight><highlight class="stringliteral">&quot;stoppdavideo&quot;</highlight><highlight class="normal"><sp/>)<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>objectiveSystem<sp/>&amp;&amp;<sp/>objectiveSystemOpen<sp/>&amp;&amp;<sp/>pdaVideoWave.Length()<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StopSound(<sp/>SND_CHANNEL_PDA,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4205"><highlight class="normal"></highlight></codeline>
<codeline lineno="4206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>token.Icmp(<sp/></highlight><highlight class="stringliteral">&quot;close&quot;</highlight><highlight class="normal"><sp/>)<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>objectiveSystem<sp/>&amp;&amp;<sp/>objectiveSystemOpen<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TogglePDA();</highlight></codeline>
<codeline lineno="4209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4211"><highlight class="normal"></highlight></codeline>
<codeline lineno="4212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>token.Icmp(<sp/></highlight><highlight class="stringliteral">&quot;playpdavideo&quot;</highlight><highlight class="normal"><sp/>)<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>objectiveSystem<sp/>&amp;&amp;<sp/>objectiveSystemOpen<sp/>&amp;&amp;<sp/>pdaVideo.Length()<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_material" kindref="compound">idMaterial</ref><sp/>*mat<sp/>=<sp/>declManager-&gt;FindMaterial(<sp/>pdaVideo<sp/>);</highlight></codeline>
<codeline lineno="4215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>mat<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>mat-&gt;GetNumStages();</highlight></codeline>
<codeline lineno="4217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>c;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshader_stage__t" kindref="compound">shaderStage_t</ref><sp/>*stage<sp/>=<sp/>mat-&gt;GetStage(i);</highlight></codeline>
<codeline lineno="4219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>stage<sp/>&amp;&amp;<sp/>stage-&gt;texture.cinematic<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stage-&gt;texture.cinematic-&gt;ResetTime(<sp/>gameLocal.time<sp/>);</highlight></codeline>
<codeline lineno="4221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pdaVideoWave.Length()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_sound_shader" kindref="compound">idSoundShader</ref><sp/>*shader<sp/>=<sp/>declManager-&gt;FindSound(<sp/>pdaVideoWave<sp/>);</highlight></codeline>
<codeline lineno="4225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartSoundShader(<sp/>shader,<sp/>SND_CHANNEL_PDA,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4230"><highlight class="normal"></highlight></codeline>
<codeline lineno="4231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>token.Icmp(<sp/></highlight><highlight class="stringliteral">&quot;playpdaaudio&quot;</highlight><highlight class="normal"><sp/>)<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>objectiveSystem<sp/>&amp;&amp;<sp/>objectiveSystemOpen<sp/>&amp;&amp;<sp/>pdaAudio.Length()<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_sound_shader" kindref="compound">idSoundShader</ref><sp/>*shader<sp/>=<sp/>declManager-&gt;FindSound(<sp/>pdaAudio<sp/>);</highlight></codeline>
<codeline lineno="4234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ms;</highlight></codeline>
<codeline lineno="4235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartSoundShader(<sp/>shader,<sp/>SND_CHANNEL_PDA,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>&amp;ms<sp/>);</highlight></codeline>
<codeline lineno="4236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartAudioLog();</highlight></codeline>
<codeline lineno="4237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CancelEvents(<sp/>&amp;EV_Player_StopAudioLog<sp/>);</highlight></codeline>
<codeline lineno="4238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventMS(<sp/>&amp;EV_Player_StopAudioLog,<sp/>ms<sp/>+<sp/>150<sp/>);</highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4242"><highlight class="normal"></highlight></codeline>
<codeline lineno="4243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>token.Icmp(<sp/></highlight><highlight class="stringliteral">&quot;stoppdaaudio&quot;</highlight><highlight class="normal"><sp/>)<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>objectiveSystem<sp/>&amp;&amp;<sp/>objectiveSystemOpen<sp/>&amp;&amp;<sp/>pdaAudio.Length()<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>idSoundShader<sp/>*shader<sp/>=<sp/>declManager-&gt;FindSound(<sp/>pdaAudio<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StopAudioLog();</highlight></codeline>
<codeline lineno="4247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StopSound(<sp/>SND_CHANNEL_PDA,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4251"><highlight class="normal"></highlight></codeline>
<codeline lineno="4252"><highlight class="normal"><sp/><sp/><sp/><sp/>src-&gt;UnreadToken(<sp/>&amp;token<sp/>);</highlight></codeline>
<codeline lineno="4253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4255"><highlight class="normal"></highlight></codeline>
<codeline lineno="4256"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4257"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="4258"><highlight class="comment">idPlayer::Collide</highlight></codeline>
<codeline lineno="4259"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="4260"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4261"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idPlayer::Collide(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtrace__s" kindref="compound">trace_t</ref><sp/>&amp;collision,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;velocity<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*other;</highlight></codeline>
<codeline lineno="4263"><highlight class="normal"></highlight></codeline>
<codeline lineno="4264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isClient<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4267"><highlight class="normal"></highlight></codeline>
<codeline lineno="4268"><highlight class="normal"><sp/><sp/><sp/><sp/>other<sp/>=<sp/>gameLocal.entities[<sp/>collision.c.entityNum<sp/>];</highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>other<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other-&gt;Signal(<sp/>SIG_TOUCH<sp/>);</highlight></codeline>
<codeline lineno="4271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!spectating<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>other-&gt;RespondsTo(<sp/>EV_Touch<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other-&gt;ProcessEvent(<sp/>&amp;EV_Touch,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;collision<sp/>);</highlight></codeline>
<codeline lineno="4274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>other-&gt;RespondsTo(<sp/>EV_SpectatorTouch<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other-&gt;ProcessEvent(<sp/>&amp;EV_SpectatorTouch,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;collision<sp/>);</highlight></codeline>
<codeline lineno="4278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4283"><highlight class="normal"></highlight></codeline>
<codeline lineno="4284"><highlight class="normal"></highlight></codeline>
<codeline lineno="4285"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4286"><highlight class="comment">================</highlight></codeline>
<codeline lineno="4287"><highlight class="comment">idPlayer::UpdateLocation</highlight></codeline>
<codeline lineno="4288"><highlight class="comment"></highlight></codeline>
<codeline lineno="4289"><highlight class="comment">Searches<sp/>nearby<sp/>locations<sp/></highlight></codeline>
<codeline lineno="4290"><highlight class="comment">================</highlight></codeline>
<codeline lineno="4291"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4292"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::UpdateLocation(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_location_entity" kindref="compound">idLocationEntity</ref><sp/>*locationEntity<sp/>=<sp/>gameLocal.LocationForPoint(<sp/>GetEyePosition()<sp/>);</highlight></codeline>
<codeline lineno="4295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>locationEntity<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">,<sp/>locationEntity-&gt;GetLocation()<sp/>);</highlight></codeline>
<codeline lineno="4297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">,<sp/>common-&gt;GetLanguageDict()-&gt;GetString(<sp/></highlight><highlight class="stringliteral">&quot;#str_02911&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4302"><highlight class="normal"></highlight></codeline>
<codeline lineno="4303"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4304"><highlight class="comment">================</highlight></codeline>
<codeline lineno="4305"><highlight class="comment">idPlayer::ClearFocus</highlight></codeline>
<codeline lineno="4306"><highlight class="comment"></highlight></codeline>
<codeline lineno="4307"><highlight class="comment">Clears<sp/>the<sp/>focus<sp/>cursor</highlight></codeline>
<codeline lineno="4308"><highlight class="comment">================</highlight></codeline>
<codeline lineno="4309"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4310"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::ClearFocus(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4311"><highlight class="normal"><sp/><sp/><sp/><sp/>focusCharacter<sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4312"><highlight class="normal"><sp/><sp/><sp/><sp/>focusGUIent<sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4313"><highlight class="normal"><sp/><sp/><sp/><sp/>focusUI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4314"><highlight class="normal"><sp/><sp/><sp/><sp/>focusVehicle<sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4315"><highlight class="normal"><sp/><sp/><sp/><sp/>talkCursor<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4317"><highlight class="normal"></highlight></codeline>
<codeline lineno="4318"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4319"><highlight class="comment">================</highlight></codeline>
<codeline lineno="4320"><highlight class="comment">idPlayer::UpdateFocus</highlight></codeline>
<codeline lineno="4321"><highlight class="comment"></highlight></codeline>
<codeline lineno="4322"><highlight class="comment">Searches<sp/>nearby<sp/>entities<sp/>for<sp/>interactive<sp/>guis,<sp/>possibly<sp/>making<sp/>one<sp/>of<sp/>them</highlight></codeline>
<codeline lineno="4323"><highlight class="comment">the<sp/>focus<sp/>and<sp/>sending<sp/>it<sp/>a<sp/>mouse<sp/>move<sp/>event</highlight></codeline>
<codeline lineno="4324"><highlight class="comment">================</highlight></codeline>
<codeline lineno="4325"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4326"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::UpdateFocus(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_clip_model" kindref="compound">idClipModel</ref><sp/>*clipModelList[<sp/>MAX_GENTITIES<sp/>];</highlight></codeline>
<codeline lineno="4328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_clip_model" kindref="compound">idClipModel</ref><sp/>*clip;</highlight></codeline>
<codeline lineno="4329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>listedClipModels;</highlight></codeline>
<codeline lineno="4330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/><sp/><sp/><sp/>*oldFocus;</highlight></codeline>
<codeline lineno="4331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/><sp/><sp/><sp/>*ent;</highlight></codeline>
<codeline lineno="4332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_user_interface" kindref="compound">idUserInterface</ref><sp/>*oldUI;</highlight></codeline>
<codeline lineno="4333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_a_i" kindref="compound">idAI</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*oldChar;</highlight></codeline>
<codeline lineno="4334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldTalkCursor;</highlight></codeline>
<codeline lineno="4335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_a_f_entity___vehicle" kindref="compound">idAFEntity_Vehicle</ref><sp/>*oldVehicle;</highlight></codeline>
<codeline lineno="4336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="4337"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/><sp/><sp/><sp/><sp/>start,<sp/>end;</highlight></codeline>
<codeline lineno="4338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allowFocus;</highlight></codeline>
<codeline lineno="4339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*command;</highlight></codeline>
<codeline lineno="4340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtrace__s" kindref="compound">trace_t</ref><sp/><sp/><sp/><sp/><sp/>trace;</highlight></codeline>
<codeline lineno="4341"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgui_point__t" kindref="compound">guiPoint_t</ref><sp/><sp/>pt;</highlight></codeline>
<codeline lineno="4342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_key_value" kindref="compound">idKeyValue</ref><sp/>*kv;</highlight></codeline>
<codeline lineno="4343"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsys_event__s" kindref="compound">sysEvent_t</ref><sp/><sp/>ev;</highlight></codeline>
<codeline lineno="4344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_user_interface" kindref="compound">idUserInterface</ref><sp/>*ui;</highlight></codeline>
<codeline lineno="4345"><highlight class="normal"></highlight></codeline>
<codeline lineno="4346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.inCinematic<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4349"><highlight class="normal"></highlight></codeline>
<codeline lineno="4350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>update<sp/>the<sp/>focus<sp/>character<sp/>when<sp/>attack<sp/>button<sp/>isn&apos;t<sp/>pressed<sp/>so<sp/>players</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>still<sp/>chainsaw<sp/>NPC&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isMultiplayer<sp/>||<sp/>(<sp/>!focusCharacter<sp/>&amp;&amp;<sp/>(<sp/>usercmd.buttons<sp/>&amp;<sp/>BUTTON_ATTACK<sp/>)<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allowFocus<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allowFocus<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"></highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><sp/><sp/><sp/><sp/>oldFocus<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>focusGUIent;</highlight></codeline>
<codeline lineno="4359"><highlight class="normal"><sp/><sp/><sp/><sp/>oldUI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>focusUI;</highlight></codeline>
<codeline lineno="4360"><highlight class="normal"><sp/><sp/><sp/><sp/>oldChar<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>focusCharacter;</highlight></codeline>
<codeline lineno="4361"><highlight class="normal"><sp/><sp/><sp/><sp/>oldTalkCursor<sp/><sp/><sp/>=<sp/>talkCursor;</highlight></codeline>
<codeline lineno="4362"><highlight class="normal"><sp/><sp/><sp/><sp/>oldVehicle<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>focusVehicle;</highlight></codeline>
<codeline lineno="4363"><highlight class="normal"></highlight></codeline>
<codeline lineno="4364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>focusTime<sp/>&lt;=<sp/>gameLocal.time<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearFocus();</highlight></codeline>
<codeline lineno="4366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4367"><highlight class="normal"></highlight></codeline>
<codeline lineno="4368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>let<sp/>spectators<sp/>interact<sp/>with<sp/>GUIs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spectating<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4371"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4372"><highlight class="normal"></highlight></codeline>
<codeline lineno="4373"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>GetEyePosition();</highlight></codeline>
<codeline lineno="4374"><highlight class="normal"><sp/><sp/><sp/><sp/>end<sp/>=<sp/>start<sp/>+<sp/>viewAngles.ToForward()<sp/>*<sp/>80.0f;</highlight></codeline>
<codeline lineno="4375"><highlight class="normal"></highlight></codeline>
<codeline lineno="4376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>player<sp/>identification<sp/>-&gt;<sp/>names<sp/>to<sp/>the<sp/>hud</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isMultiplayer<sp/>&amp;&amp;<sp/>entityNumber<sp/>==<sp/>gameLocal.localClientNum<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>end<sp/>=<sp/>start<sp/>+<sp/>viewAngles.ToForward()<sp/>*<sp/>768.0f;</highlight></codeline>
<codeline lineno="4379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.clip.TracePoint(<sp/>trace,<sp/>start,<sp/>end,<sp/>MASK_SHOT_BOUNDINGBOX,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iclient<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="4381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>trace.fraction<sp/>&lt;<sp/>1.0f<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>trace.c.entityNum<sp/>&lt;<sp/>MAX_CLIENTS<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iclient<sp/>=<sp/>trace.c.entityNum;</highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>MPAim<sp/>!=<sp/>iclient<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastMPAim<sp/>=<sp/>MPAim;</highlight></codeline>
<codeline lineno="4386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPAim<sp/>=<sp/>iclient;</highlight></codeline>
<codeline lineno="4387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastMPAimTime<sp/>=<sp/>gameLocal.realClientTime;</highlight></codeline>
<codeline lineno="4388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4390"><highlight class="normal"></highlight></codeline>
<codeline lineno="4391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_bounds" kindref="compound">idBounds</ref><sp/>bounds(<sp/>start<sp/>);</highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/><sp/><sp/>bounds.AddPoint(<sp/>end<sp/>);</highlight></codeline>
<codeline lineno="4393"><highlight class="normal"></highlight></codeline>
<codeline lineno="4394"><highlight class="normal"><sp/><sp/><sp/><sp/>listedClipModels<sp/>=<sp/>gameLocal.clip.ClipModelsTouchingBounds(<sp/>bounds,<sp/>-1,<sp/>clipModelList,<sp/>MAX_GENTITIES<sp/>);</highlight></codeline>
<codeline lineno="4395"><highlight class="normal"></highlight></codeline>
<codeline lineno="4396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>pretense<sp/>at<sp/>sorting<sp/>here,<sp/>just<sp/>assume<sp/>that<sp/>there<sp/>will<sp/>only<sp/>be<sp/>one<sp/>active</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gui<sp/>within<sp/>range<sp/>along<sp/>the<sp/>trace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>listedClipModels;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip<sp/>=<sp/>clipModelList[<sp/>i<sp/>];</highlight></codeline>
<codeline lineno="4400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent<sp/>=<sp/>clip-&gt;GetEntity();</highlight></codeline>
<codeline lineno="4401"><highlight class="normal"></highlight></codeline>
<codeline lineno="4402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ent-&gt;IsHidden()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4405"><highlight class="normal"></highlight></codeline>
<codeline lineno="4406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>allowFocus<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ent-&gt;IsType(<sp/>idAFAttachment::Type<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*body<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classid_a_f_attachment" kindref="compound">idAFAttachment</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>ent<sp/>)-&gt;GetBody();</highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>body<sp/>&amp;&amp;<sp/>body-&gt;IsType(<sp/>idAI::Type<sp/>)<sp/>&amp;&amp;<sp/>(<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classid_a_i" kindref="compound">idAI</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>body<sp/>)-&gt;GetTalkState()<sp/>&gt;=<sp/>TALK_OK<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.clip.TracePoint(<sp/>trace,<sp/>start,<sp/>end,<sp/>MASK_SHOT_RENDERMODEL,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>trace.fraction<sp/>&lt;<sp/>1.0f<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>trace.c.entityNum<sp/>==<sp/>ent-&gt;entityNumber<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearFocus();</highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusCharacter<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classid_a_i" kindref="compound">idAI</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>body<sp/>);</highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>talkCursor<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusTime<sp/>=<sp/>gameLocal.time<sp/>+<sp/>FOCUS_TIME;</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4421"><highlight class="normal"></highlight></codeline>
<codeline lineno="4422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ent-&gt;IsType(<sp/>idAI::Type<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>static_cast&lt;idAI<sp/>*&gt;(<sp/>ent<sp/>)-&gt;GetTalkState()<sp/>&gt;=<sp/>TALK_OK<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.clip.TracePoint(<sp/>trace,<sp/>start,<sp/>end,<sp/>MASK_SHOT_RENDERMODEL,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>trace.fraction<sp/>&lt;<sp/>1.0f<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>trace.c.entityNum<sp/>==<sp/>ent-&gt;entityNumber<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearFocus();</highlight></codeline>
<codeline lineno="4427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusCharacter<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classid_a_i" kindref="compound">idAI</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>ent<sp/>);</highlight></codeline>
<codeline lineno="4428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>talkCursor<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusTime<sp/>=<sp/>gameLocal.time<sp/>+<sp/>FOCUS_TIME;</highlight></codeline>
<codeline lineno="4430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4435"><highlight class="normal"></highlight></codeline>
<codeline lineno="4436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ent-&gt;IsType(<sp/>idAFEntity_Vehicle::Type<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.clip.TracePoint(<sp/>trace,<sp/>start,<sp/>end,<sp/>MASK_SHOT_RENDERMODEL,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>trace.fraction<sp/>&lt;<sp/>1.0f<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>trace.c.entityNum<sp/>==<sp/>ent-&gt;entityNumber<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearFocus();</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusVehicle<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classid_a_f_entity___vehicle" kindref="compound">idAFEntity_Vehicle</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>ent<sp/>);</highlight></codeline>
<codeline lineno="4441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusTime<sp/>=<sp/>gameLocal.time<sp/>+<sp/>FOCUS_TIME;</highlight></codeline>
<codeline lineno="4442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4447"><highlight class="normal"></highlight></codeline>
<codeline lineno="4448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!ent-&gt;GetRenderEntity()<sp/>||<sp/>!ent-&gt;GetRenderEntity()-&gt;gui[<sp/>0<sp/>]<sp/>||<sp/>!ent-&gt;GetRenderEntity()-&gt;gui[<sp/>0<sp/>]-&gt;IsInteractive()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4451"><highlight class="normal"></highlight></codeline>
<codeline lineno="4452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ent-&gt;spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;inv_item&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>allow<sp/>guis<sp/>on<sp/>pickup<sp/>items<sp/>focus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4456"><highlight class="normal"></highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pt<sp/>=<sp/>gameRenderWorld-&gt;GuiTrace(<sp/>ent-&gt;GetModelDefHandle(),<sp/>start,<sp/>end<sp/>);</highlight></codeline>
<codeline lineno="4458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pt.x<sp/>!=<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>a<sp/>hit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structrender_entity__s" kindref="compound">renderEntity_t</ref><sp/>*focusGUIrenderEntity<sp/>=<sp/>ent-&gt;GetRenderEntity();</highlight></codeline>
<codeline lineno="4461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!focusGUIrenderEntity<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4464"><highlight class="normal"></highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pt.guiId<sp/>==<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ui<sp/>=<sp/>focusGUIrenderEntity-&gt;gui[<sp/>0<sp/>];</highlight></codeline>
<codeline lineno="4467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pt.guiId<sp/>==<sp/>2<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ui<sp/>=<sp/>focusGUIrenderEntity-&gt;gui[<sp/>1<sp/>];</highlight></codeline>
<codeline lineno="4469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ui<sp/>=<sp/>focusGUIrenderEntity-&gt;gui[<sp/>2<sp/>];</highlight></codeline>
<codeline lineno="4471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ui<sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4476"><highlight class="normal"></highlight></codeline>
<codeline lineno="4477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearFocus();</highlight></codeline>
<codeline lineno="4478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusGUIent<sp/>=<sp/>ent;</highlight></codeline>
<codeline lineno="4479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusUI<sp/>=<sp/>ui;</highlight></codeline>
<codeline lineno="4480"><highlight class="normal"></highlight></codeline>
<codeline lineno="4481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>oldFocus<sp/>!=<sp/>ent<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>new<sp/>activation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>going<sp/>to<sp/>see<sp/>if<sp/>we<sp/>have<sp/>anything<sp/>in<sp/>inventory<sp/>a<sp/>gui<sp/>might<sp/>be<sp/>interested<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>enumerate<sp/>inventory<sp/>items</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusUI-&gt;SetStateInt(<sp/></highlight><highlight class="stringliteral">&quot;inv_count&quot;</highlight><highlight class="normal">,<sp/>inventory.items.Num()<sp/>);</highlight></codeline>
<codeline lineno="4486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>inventory.items.Num();<sp/>j++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/>*item<sp/>=<sp/>inventory.items[<sp/>j<sp/>];</highlight></codeline>
<codeline lineno="4488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*iname<sp/>=<sp/>item-&gt;GetString(<sp/></highlight><highlight class="stringliteral">&quot;inv_name&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*iicon<sp/>=<sp/>item-&gt;GetString(<sp/></highlight><highlight class="stringliteral">&quot;inv_icon&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*itext<sp/>=<sp/>item-&gt;GetString(<sp/></highlight><highlight class="stringliteral">&quot;inv_text&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4491"><highlight class="normal"></highlight></codeline>
<codeline lineno="4492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusUI-&gt;SetStateString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;inv_name_%i&quot;</highlight><highlight class="normal">,<sp/>j),<sp/>iname<sp/>);</highlight></codeline>
<codeline lineno="4493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusUI-&gt;SetStateString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;inv_icon_%i&quot;</highlight><highlight class="normal">,<sp/>j),<sp/>iicon<sp/>);</highlight></codeline>
<codeline lineno="4494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusUI-&gt;SetStateString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;inv_text_%i&quot;</highlight><highlight class="normal">,<sp/>j),<sp/>itext<sp/>);</highlight></codeline>
<codeline lineno="4495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kv<sp/>=<sp/>item-&gt;MatchPrefix(</highlight><highlight class="stringliteral">&quot;inv_id&quot;</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="4496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>kv<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusUI-&gt;SetStateString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;inv_id_%i&quot;</highlight><highlight class="normal">,<sp/>j<sp/>),<sp/>kv-&gt;GetValue()<sp/>);</highlight></codeline>
<codeline lineno="4498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusUI-&gt;SetStateInt(<sp/>iname,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="4500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4501"><highlight class="normal"></highlight></codeline>
<codeline lineno="4502"><highlight class="normal"></highlight></codeline>
<codeline lineno="4503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>inventory.pdaSecurity.Num();<sp/>j++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>inventory.pdaSecurity[<sp/>j<sp/>];</highlight></codeline>
<codeline lineno="4505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>p<sp/>&amp;&amp;<sp/>*p<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusUI-&gt;SetStateInt(<sp/>p,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4509"><highlight class="normal"></highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>staminapercentage<sp/>=<sp/>(<sp/>int<sp/>)(<sp/>100.0f<sp/>*<sp/>stamina<sp/>/<sp/>pm_stamina.GetFloat()<sp/>);</highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusUI-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;player_health&quot;</highlight><highlight class="normal">,<sp/>va(</highlight><highlight class="stringliteral">&quot;%i&quot;</highlight><highlight class="normal">,<sp/>health<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusUI-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;player_stamina&quot;</highlight><highlight class="normal">,<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;%i%%&quot;</highlight><highlight class="normal">,<sp/>staminapercentage<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusUI-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;player_armor&quot;</highlight><highlight class="normal">,<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;%i%%&quot;</highlight><highlight class="normal">,<sp/>inventory.armor<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4514"><highlight class="normal"></highlight></codeline>
<codeline lineno="4515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kv<sp/>=<sp/>focusGUIent-&gt;spawnArgs.MatchPrefix(<sp/></highlight><highlight class="stringliteral">&quot;gui_parm&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="4516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>kv<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusUI-&gt;SetStateString(<sp/>kv-&gt;GetKey(),<sp/>kv-&gt;GetValue()<sp/>);</highlight></codeline>
<codeline lineno="4518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kv<sp/>=<sp/>focusGUIent-&gt;spawnArgs.MatchPrefix(<sp/></highlight><highlight class="stringliteral">&quot;gui_parm&quot;</highlight><highlight class="normal">,<sp/>kv<sp/>);</highlight></codeline>
<codeline lineno="4519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4521"><highlight class="normal"></highlight></codeline>
<codeline lineno="4522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clamp<sp/>the<sp/>mouse<sp/>to<sp/>the<sp/>corner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev<sp/>=<sp/>sys-&gt;GenerateMouseMoveEvent(<sp/>-2000,<sp/>-2000<sp/>);</highlight></codeline>
<codeline lineno="4524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command<sp/>=<sp/>focusUI-&gt;HandleEvent(<sp/>&amp;ev,<sp/>gameLocal.time<sp/>);</highlight></codeline>
<codeline lineno="4525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HandleGuiCommands(<sp/>focusGUIent,<sp/>command<sp/>);</highlight></codeline>
<codeline lineno="4526"><highlight class="normal"></highlight></codeline>
<codeline lineno="4527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>an<sp/>absolute<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev<sp/>=<sp/>sys-&gt;GenerateMouseMoveEvent(<sp/>pt.x<sp/>*<sp/>SCREEN_WIDTH,<sp/>pt.y<sp/>*<sp/>SCREEN_HEIGHT<sp/>);</highlight></codeline>
<codeline lineno="4529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command<sp/>=<sp/>focusUI-&gt;HandleEvent(<sp/>&amp;ev,<sp/>gameLocal.time<sp/>);</highlight></codeline>
<codeline lineno="4530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HandleGuiCommands(<sp/>focusGUIent,<sp/>command<sp/>);</highlight></codeline>
<codeline lineno="4531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusTime<sp/>=<sp/>gameLocal.time<sp/>+<sp/>FOCUS_GUI_TIME;</highlight></codeline>
<codeline lineno="4532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4535"><highlight class="normal"></highlight></codeline>
<codeline lineno="4536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>focusGUIent<sp/>&amp;&amp;<sp/>focusUI<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!oldFocus<sp/>||<sp/>oldFocus<sp/>!=<sp/>focusGUIent<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command<sp/>=<sp/>focusUI-&gt;Activate(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>gameLocal.time<sp/>);</highlight></codeline>
<codeline lineno="4539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HandleGuiCommands(<sp/>focusGUIent,<sp/>command<sp/>);</highlight></codeline>
<codeline lineno="4540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartSound(<sp/></highlight><highlight class="stringliteral">&quot;snd_guienter&quot;</highlight><highlight class="normal">,<sp/>SND_CHANNEL_ANY,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="4541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HideTip();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HideObjective();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4544"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>oldFocus<sp/>&amp;&amp;<sp/>oldUI<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command<sp/>=<sp/>oldUI-&gt;Activate(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>gameLocal.time<sp/>);</highlight></codeline>
<codeline lineno="4546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HandleGuiCommands(<sp/>oldFocus,<sp/>command<sp/>);</highlight></codeline>
<codeline lineno="4547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartSound(<sp/></highlight><highlight class="stringliteral">&quot;snd_guiexit&quot;</highlight><highlight class="normal">,<sp/>SND_CHANNEL_ANY,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="4548"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4549"><highlight class="normal"></highlight></codeline>
<codeline lineno="4550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>cursor<sp/>&amp;&amp;<sp/>(<sp/>oldTalkCursor<sp/>!=<sp/>talkCursor<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor-&gt;SetStateInt(<sp/></highlight><highlight class="stringliteral">&quot;talkcursor&quot;</highlight><highlight class="normal">,<sp/>talkCursor<sp/>);</highlight></codeline>
<codeline lineno="4552"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4553"><highlight class="normal"></highlight></codeline>
<codeline lineno="4554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>oldChar<sp/>!=<sp/>focusCharacter<sp/>&amp;&amp;<sp/>hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>focusCharacter<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;npc&quot;</highlight><highlight class="normal">,<sp/>focusCharacter-&gt;spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;npc_name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Joe&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;showNPC&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HideTip();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HideObjective();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;npc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;hideNPC&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4564"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4566"><highlight class="normal"></highlight></codeline>
<codeline lineno="4567"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4568"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="4569"><highlight class="comment">idPlayer::CrashLand</highlight></codeline>
<codeline lineno="4570"><highlight class="comment"></highlight></codeline>
<codeline lineno="4571"><highlight class="comment">Check<sp/>for<sp/>hard<sp/>landings<sp/>that<sp/>generate<sp/>sound<sp/>events</highlight></codeline>
<codeline lineno="4572"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="4573"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4574"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::CrashLand(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;oldOrigin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;oldVelocity<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4575"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/><sp/><sp/><sp/><sp/>origin,<sp/>velocity;</highlight></codeline>
<codeline lineno="4576"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/><sp/><sp/><sp/><sp/>gravityVector,<sp/>gravityNormal;</highlight></codeline>
<codeline lineno="4577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta;</highlight></codeline>
<codeline lineno="4578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hardDelta,<sp/>fatalDelta;</highlight></codeline>
<codeline lineno="4579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist;</highlight></codeline>
<codeline lineno="4580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel,<sp/>acc;</highlight></codeline>
<codeline lineno="4581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t;</highlight></codeline>
<codeline lineno="4582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a,<sp/>b,<sp/>c,<sp/>den;</highlight></codeline>
<codeline lineno="4583"><highlight class="normal"><sp/><sp/><sp/><sp/>waterLevel_t<sp/>waterLevel;</highlight></codeline>
<codeline lineno="4584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noDamage;</highlight></codeline>
<codeline lineno="4585"><highlight class="normal"></highlight></codeline>
<codeline lineno="4586"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_SOFTLANDING<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4587"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_HARDLANDING<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4588"><highlight class="normal"></highlight></codeline>
<codeline lineno="4589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>player<sp/>is<sp/>not<sp/>on<sp/>the<sp/>ground</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!physicsObj.HasGroundContacts()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4593"><highlight class="normal"></highlight></codeline>
<codeline lineno="4594"><highlight class="normal"><sp/><sp/><sp/><sp/>gravityNormal<sp/>=<sp/>physicsObj.GetGravityNormal();</highlight></codeline>
<codeline lineno="4595"><highlight class="normal"></highlight></codeline>
<codeline lineno="4596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>player<sp/>wasn&apos;t<sp/>going<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>oldVelocity<sp/>*<sp/>-gravityNormal<sp/>)<sp/>&gt;=<sp/>0.0f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4600"><highlight class="normal"></highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/><sp/><sp/>waterLevel<sp/>=<sp/>physicsObj.GetWaterLevel();</highlight></codeline>
<codeline lineno="4602"><highlight class="normal"></highlight></codeline>
<codeline lineno="4603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>never<sp/>take<sp/>falling<sp/>damage<sp/>if<sp/>completely<sp/>underwater</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>waterLevel<sp/>==<sp/>WATERLEVEL_HEAD<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4606"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4607"><highlight class="normal"></highlight></codeline>
<codeline lineno="4608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>falling<sp/>damage<sp/>if<sp/>touching<sp/>a<sp/>nodamage<sp/>surface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4609"><highlight class="normal"><sp/><sp/><sp/><sp/>noDamage<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>physicsObj.GetNumContacts();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcontact_info__t" kindref="compound">contactInfo_t</ref><sp/>&amp;contact<sp/>=<sp/>physicsObj.GetContact(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="4612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>contact.material-&gt;GetSurfaceFlags()<sp/>&amp;<sp/>SURF_NODAMAGE<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noDamage<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartSound(<sp/></highlight><highlight class="stringliteral">&quot;snd_land_hard&quot;</highlight><highlight class="normal">,<sp/>SND_CHANNEL_ANY,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="4615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4617"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4618"><highlight class="normal"></highlight></codeline>
<codeline lineno="4619"><highlight class="normal"><sp/><sp/><sp/><sp/>origin<sp/>=<sp/>GetPhysics()-&gt;GetOrigin();</highlight></codeline>
<codeline lineno="4620"><highlight class="normal"><sp/><sp/><sp/><sp/>gravityVector<sp/>=<sp/>physicsObj.GetGravity();</highlight></codeline>
<codeline lineno="4621"><highlight class="normal"></highlight></codeline>
<codeline lineno="4622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>the<sp/>exact<sp/>velocity<sp/>on<sp/>landing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4623"><highlight class="normal"><sp/><sp/><sp/><sp/>dist<sp/>=<sp/>(<sp/>origin<sp/>-<sp/>oldOrigin<sp/>)<sp/>*<sp/>-gravityNormal;</highlight></codeline>
<codeline lineno="4624"><highlight class="normal"><sp/><sp/><sp/><sp/>vel<sp/>=<sp/>oldVelocity<sp/>*<sp/>-gravityNormal;</highlight></codeline>
<codeline lineno="4625"><highlight class="normal"><sp/><sp/><sp/><sp/>acc<sp/>=<sp/>-gravityVector.Length();</highlight></codeline>
<codeline lineno="4626"><highlight class="normal"></highlight></codeline>
<codeline lineno="4627"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>acc<sp/>/<sp/>2.0f;</highlight></codeline>
<codeline lineno="4628"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>vel;</highlight></codeline>
<codeline lineno="4629"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>-dist;</highlight></codeline>
<codeline lineno="4630"><highlight class="normal"></highlight></codeline>
<codeline lineno="4631"><highlight class="normal"><sp/><sp/><sp/><sp/>den<sp/>=<sp/>b<sp/>*<sp/>b<sp/>-<sp/>4.0f<sp/>*<sp/>a<sp/>*<sp/>c;</highlight></codeline>
<codeline lineno="4632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>den<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4634"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4635"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>(<sp/>-b<sp/>-<sp/>idMath::Sqrt(<sp/>den<sp/>)<sp/>)<sp/>/<sp/>(<sp/>2.0f<sp/>*<sp/>a<sp/>);</highlight></codeline>
<codeline lineno="4636"><highlight class="normal"></highlight></codeline>
<codeline lineno="4637"><highlight class="normal"><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>vel<sp/>+<sp/>t<sp/>*<sp/>acc;</highlight></codeline>
<codeline lineno="4638"><highlight class="normal"><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>delta<sp/>*<sp/>delta<sp/>*<sp/>0.0001;</highlight></codeline>
<codeline lineno="4639"><highlight class="normal"></highlight></codeline>
<codeline lineno="4640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reduce<sp/>falling<sp/>damage<sp/>if<sp/>there<sp/>is<sp/>standing<sp/>water</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>waterLevel<sp/>==<sp/>WATERLEVEL_WAIST<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>*=<sp/>0.25f;</highlight></codeline>
<codeline lineno="4643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>waterLevel<sp/>==<sp/>WATERLEVEL_FEET<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>*=<sp/>0.5f;</highlight></codeline>
<codeline lineno="4646"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4647"><highlight class="normal"></highlight></codeline>
<codeline lineno="4648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>delta<sp/>&lt;<sp/>1.0f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4650"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4651"><highlight class="normal"></highlight></codeline>
<codeline lineno="4652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allow<sp/>falling<sp/>a<sp/>bit<sp/>further<sp/>for<sp/>multiplayer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isMultiplayer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fatalDelta<sp/><sp/>=<sp/>75.0f;</highlight></codeline>
<codeline lineno="4655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hardDelta<sp/><sp/><sp/>=<sp/>50.0f;</highlight></codeline>
<codeline lineno="4656"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fatalDelta<sp/><sp/>=<sp/>65.0f;</highlight></codeline>
<codeline lineno="4658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hardDelta<sp/><sp/><sp/>=<sp/>45.0f;</highlight></codeline>
<codeline lineno="4659"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4660"><highlight class="normal"></highlight></codeline>
<codeline lineno="4661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>delta<sp/>&gt;<sp/>fatalDelta<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_HARDLANDING<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>landChange<sp/>=<sp/>-32;</highlight></codeline>
<codeline lineno="4664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>landTime<sp/>=<sp/>gameLocal.time;</highlight></codeline>
<codeline lineno="4665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!noDamage<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pain_debounce_time<sp/>=<sp/>gameLocal.time<sp/>+<sp/>pain_delay<sp/>+<sp/>1;<sp/><sp/></highlight><highlight class="comment">//<sp/>ignore<sp/>pain<sp/>since<sp/>we&apos;ll<sp/>play<sp/>our<sp/>landing<sp/>anim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Damage(<sp/>NULL,<sp/>NULL,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(<sp/>0,<sp/>0,<sp/>-1<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;damage_fatalfall&quot;</highlight><highlight class="normal">,<sp/>1.0f,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="4668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4669"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>delta<sp/>&gt;<sp/>hardDelta<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_HARDLANDING<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>landChange<sp/><sp/>=<sp/>-24;</highlight></codeline>
<codeline lineno="4672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>landTime<sp/><sp/><sp/><sp/>=<sp/>gameLocal.time;</highlight></codeline>
<codeline lineno="4673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!noDamage<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pain_debounce_time<sp/>=<sp/>gameLocal.time<sp/>+<sp/>pain_delay<sp/>+<sp/>1;<sp/><sp/></highlight><highlight class="comment">//<sp/>ignore<sp/>pain<sp/>since<sp/>we&apos;ll<sp/>play<sp/>our<sp/>landing<sp/>anim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Damage(<sp/>NULL,<sp/>NULL,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(<sp/>0,<sp/>0,<sp/>-1<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;damage_hardfall&quot;</highlight><highlight class="normal">,<sp/>1.0f,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="4676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4677"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>delta<sp/>&gt;<sp/>30<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_HARDLANDING<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>landChange<sp/><sp/>=<sp/>-16;</highlight></codeline>
<codeline lineno="4680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>landTime<sp/><sp/><sp/><sp/>=<sp/>gameLocal.time;</highlight></codeline>
<codeline lineno="4681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!noDamage<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pain_debounce_time<sp/>=<sp/>gameLocal.time<sp/>+<sp/>pain_delay<sp/>+<sp/>1;<sp/><sp/></highlight><highlight class="comment">//<sp/>ignore<sp/>pain<sp/>since<sp/>we&apos;ll<sp/>play<sp/>our<sp/>landing<sp/>anim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Damage(<sp/>NULL,<sp/>NULL,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(<sp/>0,<sp/>0,<sp/>-1<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;damage_softfall&quot;</highlight><highlight class="normal">,<sp/>1.0f,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="4684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4685"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>delta<sp/>&gt;<sp/>7<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_SOFTLANDING<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>landChange<sp/><sp/>=<sp/>-8;</highlight></codeline>
<codeline lineno="4688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>landTime<sp/><sp/><sp/><sp/>=<sp/>gameLocal.time;</highlight></codeline>
<codeline lineno="4689"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>delta<sp/>&gt;<sp/>3<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>walk<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4691"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4692"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4693"><highlight class="normal"></highlight></codeline>
<codeline lineno="4694"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4695"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="4696"><highlight class="comment">idPlayer::BobCycle</highlight></codeline>
<codeline lineno="4697"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="4698"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4699"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::BobCycle(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;pushVelocity<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bobmove;</highlight></codeline>
<codeline lineno="4701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old,<sp/>deltaTime;</highlight></codeline>
<codeline lineno="4702"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/><sp/><sp/><sp/><sp/>vel,<sp/>gravityDir,<sp/>velocity;</highlight></codeline>
<codeline lineno="4703"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/><sp/><sp/><sp/><sp/><sp/>viewaxis;</highlight></codeline>
<codeline lineno="4704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bob;</highlight></codeline>
<codeline lineno="4705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta;</highlight></codeline>
<codeline lineno="4706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>speed;</highlight></codeline>
<codeline lineno="4707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f;</highlight></codeline>
<codeline lineno="4708"><highlight class="normal"></highlight></codeline>
<codeline lineno="4709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>speed<sp/>and<sp/>cycle<sp/>to<sp/>be<sp/>used<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>cyclic<sp/>walking<sp/>effects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4713"><highlight class="normal"><sp/><sp/><sp/><sp/>velocity<sp/>=<sp/>physicsObj.GetLinearVelocity()<sp/>-<sp/>pushVelocity;</highlight></codeline>
<codeline lineno="4714"><highlight class="normal"></highlight></codeline>
<codeline lineno="4715"><highlight class="normal"><sp/><sp/><sp/><sp/>gravityDir<sp/>=<sp/>physicsObj.GetGravityNormal();</highlight></codeline>
<codeline lineno="4716"><highlight class="normal"><sp/><sp/><sp/><sp/>vel<sp/>=<sp/>velocity<sp/>-<sp/>(<sp/>velocity<sp/>*<sp/>gravityDir<sp/>)<sp/>*<sp/>gravityDir;</highlight></codeline>
<codeline lineno="4717"><highlight class="normal"><sp/><sp/><sp/><sp/>xyspeed<sp/>=<sp/>vel.LengthFast();</highlight></codeline>
<codeline lineno="4718"><highlight class="normal"></highlight></codeline>
<codeline lineno="4719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>evaluate<sp/>the<sp/>bob<sp/>for<sp/>other<sp/>clients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>doing<sp/>a<sp/>spectate<sp/>follow,<sp/>don&apos;t<sp/>do<sp/>any<sp/>weapon<sp/>bobbing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isClient<sp/>&amp;&amp;<sp/>entityNumber<sp/>!=<sp/>gameLocal.localClientNum<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewBobAngles.Zero();</highlight></codeline>
<codeline lineno="4723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewBob.Zero();</highlight></codeline>
<codeline lineno="4724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4725"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4726"><highlight class="normal"></highlight></codeline>
<codeline lineno="4727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!physicsObj.HasGroundContacts()<sp/>||<sp/>influenceActive<sp/>==<sp/>INFLUENCE_LEVEL2<sp/>||<sp/>(<sp/>gameLocal.isMultiplayer<sp/>&amp;&amp;<sp/>spectating<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>airborne</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bobCycle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bobFoot<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bobfracsin<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4732"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>!usercmd.forwardmove<sp/>&amp;&amp;<sp/>!usercmd.rightmove<sp/>)<sp/>||<sp/>(<sp/>xyspeed<sp/>&lt;=<sp/>MIN_BOB_SPEED<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>at<sp/>beginning<sp/>of<sp/>cycle<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bobCycle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bobFoot<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bobfracsin<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4737"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>physicsObj.IsCrouching()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bobmove<sp/>=<sp/>pm_crouchbob.GetFloat();</highlight></codeline>
<codeline lineno="4740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ducked<sp/>characters<sp/>never<sp/>play<sp/>footsteps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vary<sp/>the<sp/>bobbing<sp/>based<sp/>on<sp/>the<sp/>speed<sp/>of<sp/>the<sp/>player</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bobmove<sp/>=<sp/>pm_walkbob.GetFloat()<sp/>*<sp/>(<sp/>1.0f<sp/>-<sp/>bobFrac<sp/>)<sp/>+<sp/>pm_runbob.GetFloat()<sp/>*<sp/>bobFrac;</highlight></codeline>
<codeline lineno="4744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4745"><highlight class="normal"></highlight></codeline>
<codeline lineno="4746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>footstep<sp/>/<sp/>splash<sp/>sounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old<sp/>=<sp/>bobCycle;</highlight></codeline>
<codeline lineno="4748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bobCycle<sp/>=<sp/>(int)(<sp/>old<sp/>+<sp/>bobmove<sp/>*<sp/>gameLocal.msec<sp/>)<sp/>&amp;<sp/>255;</highlight></codeline>
<codeline lineno="4749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bobFoot<sp/>=<sp/>(<sp/>bobCycle<sp/>&amp;<sp/>128<sp/>)<sp/>&gt;&gt;<sp/>7;</highlight></codeline>
<codeline lineno="4750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bobfracsin<sp/>=<sp/>idMath::Fabs(<sp/>sin(<sp/>(<sp/>bobCycle<sp/>&amp;<sp/>127<sp/>)<sp/>/<sp/>127.0<sp/>*<sp/>idMath::PI<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4751"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4752"><highlight class="normal"></highlight></codeline>
<codeline lineno="4753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>angles<sp/>for<sp/>view<sp/>bobbing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4754"><highlight class="normal"><sp/><sp/><sp/><sp/>viewBobAngles.Zero();</highlight></codeline>
<codeline lineno="4755"><highlight class="normal"></highlight></codeline>
<codeline lineno="4756"><highlight class="normal"><sp/><sp/><sp/><sp/>viewaxis<sp/>=<sp/>viewAngles.ToMat3()<sp/>*<sp/>physicsObj.GetGravityAxis();</highlight></codeline>
<codeline lineno="4757"><highlight class="normal"></highlight></codeline>
<codeline lineno="4758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>angles<sp/>based<sp/>on<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4759"><highlight class="normal"><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>velocity<sp/>*<sp/>viewaxis[0];</highlight></codeline>
<codeline lineno="4760"><highlight class="normal"><sp/><sp/><sp/><sp/>viewBobAngles.pitch<sp/>+=<sp/>delta<sp/>*<sp/>pm_runpitch.GetFloat();</highlight></codeline>
<codeline lineno="4761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4762"><highlight class="normal"><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>velocity<sp/>*<sp/>viewaxis[1];</highlight></codeline>
<codeline lineno="4763"><highlight class="normal"><sp/><sp/><sp/><sp/>viewBobAngles.roll<sp/>-=<sp/>delta<sp/>*<sp/>pm_runroll.GetFloat();</highlight></codeline>
<codeline lineno="4764"><highlight class="normal"></highlight></codeline>
<codeline lineno="4765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>angles<sp/>based<sp/>on<sp/>bob</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>the<sp/>bob<sp/>is<sp/>visible<sp/>even<sp/>at<sp/>low<sp/>speeds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4767"><highlight class="normal"><sp/><sp/><sp/><sp/>speed<sp/>=<sp/>xyspeed<sp/>&gt;<sp/>200<sp/>?<sp/>xyspeed<sp/>:<sp/>200;</highlight></codeline>
<codeline lineno="4768"><highlight class="normal"></highlight></codeline>
<codeline lineno="4769"><highlight class="normal"><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>bobfracsin<sp/>*<sp/>pm_bobpitch.GetFloat()<sp/>*<sp/>speed;</highlight></codeline>
<codeline lineno="4770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>physicsObj.IsCrouching()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>*=<sp/>3;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>crouching</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4772"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4773"><highlight class="normal"><sp/><sp/><sp/><sp/>viewBobAngles.pitch<sp/>+=<sp/>delta;</highlight></codeline>
<codeline lineno="4774"><highlight class="normal"><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>bobfracsin<sp/>*<sp/>pm_bobroll.GetFloat()<sp/>*<sp/>speed;</highlight></codeline>
<codeline lineno="4775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>physicsObj.IsCrouching()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>*=<sp/>3;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>crouching<sp/>accentuates<sp/>roll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4777"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bobFoot<sp/>&amp;<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>-delta;</highlight></codeline>
<codeline lineno="4780"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4781"><highlight class="normal"><sp/><sp/><sp/><sp/>viewBobAngles.roll<sp/>+=<sp/>delta;</highlight></codeline>
<codeline lineno="4782"><highlight class="normal"></highlight></codeline>
<codeline lineno="4783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>position<sp/>for<sp/>view<sp/>bobbing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4784"><highlight class="normal"><sp/><sp/><sp/><sp/>viewBob.Zero();</highlight></codeline>
<codeline lineno="4785"><highlight class="normal"></highlight></codeline>
<codeline lineno="4786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>physicsObj.HasSteppedUp()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4787"><highlight class="normal"></highlight></codeline>
<codeline lineno="4788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>stepping<sp/>up<sp/>before<sp/>a<sp/>previous<sp/>step<sp/>is<sp/>completed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deltaTime<sp/>=<sp/>gameLocal.time<sp/>-<sp/>stepUpTime;</highlight></codeline>
<codeline lineno="4790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>deltaTime<sp/>&lt;<sp/>STEPUP_TIME<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stepUpDelta<sp/>=<sp/>stepUpDelta<sp/>*<sp/>(<sp/>STEPUP_TIME<sp/>-<sp/>deltaTime<sp/>)<sp/>/<sp/>STEPUP_TIME<sp/>+<sp/>physicsObj.GetStepUp();</highlight></codeline>
<codeline lineno="4792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stepUpDelta<sp/>=<sp/>physicsObj.GetStepUp();</highlight></codeline>
<codeline lineno="4794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>stepUpDelta<sp/>&gt;<sp/>2.0f<sp/>*<sp/>pm_stepsize.GetFloat()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stepUpDelta<sp/>=<sp/>2.0f<sp/>*<sp/>pm_stepsize.GetFloat();</highlight></codeline>
<codeline lineno="4797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stepUpTime<sp/>=<sp/>gameLocal.time;</highlight></codeline>
<codeline lineno="4799"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4800"><highlight class="normal"></highlight></codeline>
<codeline lineno="4801"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>gravity<sp/>=<sp/>physicsObj.GetGravityNormal();</highlight></codeline>
<codeline lineno="4802"><highlight class="normal"></highlight></codeline>
<codeline lineno="4803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>player<sp/>stepped<sp/>up<sp/>recently</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4804"><highlight class="normal"><sp/><sp/><sp/><sp/>deltaTime<sp/>=<sp/>gameLocal.time<sp/>-<sp/>stepUpTime;</highlight></codeline>
<codeline lineno="4805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>deltaTime<sp/>&lt;<sp/>STEPUP_TIME<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewBob<sp/>+=<sp/>gravity<sp/>*<sp/>(<sp/>stepUpDelta<sp/>*<sp/>(<sp/>STEPUP_TIME<sp/>-<sp/>deltaTime<sp/>)<sp/>/<sp/>STEPUP_TIME<sp/>);</highlight></codeline>
<codeline lineno="4807"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4808"><highlight class="normal"></highlight></codeline>
<codeline lineno="4809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>bob<sp/>height<sp/>after<sp/>any<sp/>movement<sp/>smoothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4810"><highlight class="normal"><sp/><sp/><sp/><sp/>bob<sp/>=<sp/>bobfracsin<sp/>*<sp/>xyspeed<sp/>*<sp/>pm_bobup.GetFloat();</highlight></codeline>
<codeline lineno="4811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bob<sp/>&gt;<sp/>6<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bob<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="4813"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4814"><highlight class="normal"><sp/><sp/><sp/><sp/>viewBob[2]<sp/>+=<sp/>bob;</highlight></codeline>
<codeline lineno="4815"><highlight class="normal"></highlight></codeline>
<codeline lineno="4816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>fall<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4817"><highlight class="normal"><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>gameLocal.time<sp/>-<sp/>landTime;</highlight></codeline>
<codeline lineno="4818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>delta<sp/>&lt;<sp/>LAND_DEFLECT_TIME<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>delta<sp/>/<sp/>LAND_DEFLECT_TIME;</highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewBob<sp/>-=<sp/>gravity<sp/>*<sp/>(<sp/>landChange<sp/>*<sp/>f<sp/>);</highlight></codeline>
<codeline lineno="4821"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>delta<sp/>&lt;<sp/>LAND_DEFLECT_TIME<sp/>+<sp/>LAND_RETURN_TIME<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>-=<sp/>LAND_DEFLECT_TIME;</highlight></codeline>
<codeline lineno="4823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>1.0<sp/>-<sp/>(<sp/>delta<sp/>/<sp/>LAND_RETURN_TIME<sp/>);</highlight></codeline>
<codeline lineno="4824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewBob<sp/>-=<sp/>gravity<sp/>*<sp/>(<sp/>landChange<sp/>*<sp/>f<sp/>);</highlight></codeline>
<codeline lineno="4825"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4827"><highlight class="normal"></highlight></codeline>
<codeline lineno="4828"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4829"><highlight class="comment">================</highlight></codeline>
<codeline lineno="4830"><highlight class="comment">idPlayer::UpdateDeltaViewAngles</highlight></codeline>
<codeline lineno="4831"><highlight class="comment">================</highlight></codeline>
<codeline lineno="4832"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4833"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::UpdateDeltaViewAngles(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_angles" kindref="compound">idAngles</ref><sp/>&amp;angles<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>delta<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4835"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_angles" kindref="compound">idAngles</ref><sp/>delta;</highlight></codeline>
<codeline lineno="4836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta[<sp/>i<sp/>]<sp/>=<sp/>angles[<sp/>i<sp/>]<sp/>-<sp/>SHORT2ANGLE(<sp/>usercmd.angles[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="4838"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4839"><highlight class="normal"><sp/><sp/><sp/><sp/>SetDeltaViewAngles(<sp/>delta<sp/>);</highlight></codeline>
<codeline lineno="4840"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4841"><highlight class="normal"></highlight></codeline>
<codeline lineno="4842"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4843"><highlight class="comment">================</highlight></codeline>
<codeline lineno="4844"><highlight class="comment">idPlayer::SetViewAngles</highlight></codeline>
<codeline lineno="4845"><highlight class="comment">================</highlight></codeline>
<codeline lineno="4846"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4847"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::SetViewAngles(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_angles" kindref="compound">idAngles</ref><sp/>&amp;angles<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4848"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateDeltaViewAngles(<sp/>angles<sp/>);</highlight></codeline>
<codeline lineno="4849"><highlight class="normal"><sp/><sp/><sp/><sp/>viewAngles<sp/>=<sp/>angles;</highlight></codeline>
<codeline lineno="4850"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4851"><highlight class="normal"></highlight></codeline>
<codeline lineno="4852"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4853"><highlight class="comment">================</highlight></codeline>
<codeline lineno="4854"><highlight class="comment">idPlayer::UpdateViewAngles</highlight></codeline>
<codeline lineno="4855"><highlight class="comment">================</highlight></codeline>
<codeline lineno="4856"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4857"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::UpdateViewAngles(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="4859"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_angles" kindref="compound">idAngles</ref><sp/>delta;</highlight></codeline>
<codeline lineno="4860"><highlight class="normal"></highlight></codeline>
<codeline lineno="4861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!noclip<sp/>&amp;&amp;<sp/>(<sp/>gameLocal.inCinematic<sp/>||<sp/>privateCameraView<sp/>||<sp/>gameLocal.GetCamera()<sp/>||<sp/>influenceActive<sp/>==<sp/>INFLUENCE_LEVEL2<sp/>||<sp/>objectiveSystemOpen<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>view<sp/>changes<sp/>at<sp/>all,<sp/>but<sp/>we<sp/>still<sp/>want<sp/>to<sp/>update<sp/>the<sp/>deltas<sp/>or<sp/>else<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>get<sp/>out<sp/>of<sp/>this<sp/>mode,<sp/>our<sp/>view<sp/>will<sp/>snap<sp/>to<sp/>a<sp/>kind<sp/>of<sp/>random<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateDeltaViewAngles(<sp/>viewAngles<sp/>);</highlight></codeline>
<codeline lineno="4865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4866"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4867"><highlight class="normal"></highlight></codeline>
<codeline lineno="4868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>dead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&lt;=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pm_thirdPersonDeath.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewAngles.roll<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="4872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewAngles.pitch<sp/>=<sp/>30.0f;</highlight></codeline>
<codeline lineno="4873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewAngles.roll<sp/>=<sp/>40.0f;</highlight></codeline>
<codeline lineno="4875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewAngles.pitch<sp/>=<sp/>-15.0f;</highlight></codeline>
<codeline lineno="4876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4878"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4879"><highlight class="normal"></highlight></codeline>
<codeline lineno="4880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>circularly<sp/>clamp<sp/>the<sp/>angles<sp/>with<sp/>deltas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmdAngles[i]<sp/>=<sp/>SHORT2ANGLE(<sp/>usercmd.angles[i]<sp/>);</highlight></codeline>
<codeline lineno="4883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>influenceActive<sp/>==<sp/>INFLUENCE_LEVEL3<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewAngles[i]<sp/>+=<sp/>idMath::ClampFloat(<sp/>-1.0f,<sp/>1.0f,<sp/>idMath::AngleDelta(<sp/>idMath::AngleNormalize180(<sp/>SHORT2ANGLE(<sp/>usercmd.angles[i])<sp/>+<sp/>deltaViewAngles[i]<sp/>)<sp/>,<sp/>viewAngles[i]<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewAngles[i]<sp/>=<sp/>idMath::AngleNormalize180(<sp/>SHORT2ANGLE(<sp/>usercmd.angles[i])<sp/>+<sp/>deltaViewAngles[i]<sp/>);</highlight></codeline>
<codeline lineno="4887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4888"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!centerView.IsDone(<sp/>gameLocal.time<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewAngles.pitch<sp/>=<sp/>centerView.GetCurrentValue(gameLocal.time);</highlight></codeline>
<codeline lineno="4891"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4892"><highlight class="normal"></highlight></codeline>
<codeline lineno="4893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clamp<sp/>the<sp/>pitch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>noclip<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>viewAngles.pitch<sp/>&gt;<sp/>89.0f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>let<sp/>the<sp/>player<sp/>look<sp/>down<sp/>more<sp/>than<sp/>89<sp/>degrees<sp/>while<sp/>noclipping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewAngles.pitch<sp/>=<sp/>89.0f;</highlight></codeline>
<codeline lineno="4898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>viewAngles.pitch<sp/>&lt;<sp/>-89.0f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>let<sp/>the<sp/>player<sp/>look<sp/>up<sp/>more<sp/>than<sp/>89<sp/>degrees<sp/>while<sp/>noclipping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewAngles.pitch<sp/>=<sp/>-89.0f;</highlight></codeline>
<codeline lineno="4901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4902"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>viewAngles.pitch<sp/>&gt;<sp/>pm_maxviewpitch.GetFloat()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>let<sp/>the<sp/>player<sp/>look<sp/>down<sp/>enough<sp/>to<sp/>see<sp/>the<sp/>shadow<sp/>of<sp/>his<sp/>(non-existant)<sp/>feet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewAngles.pitch<sp/>=<sp/>pm_maxviewpitch.GetFloat();</highlight></codeline>
<codeline lineno="4906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>viewAngles.pitch<sp/>&lt;<sp/>pm_minviewpitch.GetFloat()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>let<sp/>the<sp/>player<sp/>look<sp/>up<sp/>more<sp/>than<sp/>89<sp/>degrees</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewAngles.pitch<sp/>=<sp/>pm_minviewpitch.GetFloat();</highlight></codeline>
<codeline lineno="4909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4910"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4911"><highlight class="normal"></highlight></codeline>
<codeline lineno="4912"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateDeltaViewAngles(<sp/>viewAngles<sp/>);</highlight></codeline>
<codeline lineno="4913"><highlight class="normal"></highlight></codeline>
<codeline lineno="4914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>orient<sp/>the<sp/>model<sp/>towards<sp/>the<sp/>direction<sp/>we&apos;re<sp/>looking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4915"><highlight class="normal"><sp/><sp/><sp/><sp/>SetAngles(<sp/><ref refid="classid_angles" kindref="compound">idAngles</ref>(<sp/>0,<sp/>viewAngles.yaw,<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4916"><highlight class="normal"></highlight></codeline>
<codeline lineno="4917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>in<sp/>the<sp/>log<sp/>for<sp/>analyzing<sp/>weapon<sp/>angle<sp/>offsets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4918"><highlight class="normal"><sp/><sp/><sp/><sp/>loggedViewAngles[<sp/>gameLocal.framenum<sp/>&amp;<sp/>(NUM_LOGGED_VIEW_ANGLES-1)<sp/>]<sp/>=<sp/>viewAngles;</highlight></codeline>
<codeline lineno="4919"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4920"><highlight class="normal"></highlight></codeline>
<codeline lineno="4921"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4922"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="4923"><highlight class="comment">idPlayer::AdjustHeartRate</highlight></codeline>
<codeline lineno="4924"><highlight class="comment"></highlight></codeline>
<codeline lineno="4925"><highlight class="comment">Player<sp/>heartrate<sp/>works<sp/>as<sp/>follows</highlight></codeline>
<codeline lineno="4926"><highlight class="comment"></highlight></codeline>
<codeline lineno="4927"><highlight class="comment">DEF_HEARTRATE<sp/>is<sp/>resting<sp/>heartrate</highlight></codeline>
<codeline lineno="4928"><highlight class="comment"></highlight></codeline>
<codeline lineno="4929"><highlight class="comment">Taking<sp/>damage<sp/>when<sp/>health<sp/>is<sp/>above<sp/>75<sp/>adjusts<sp/>heart<sp/>rate<sp/>by<sp/>1<sp/>beat<sp/>per<sp/>second</highlight></codeline>
<codeline lineno="4930"><highlight class="comment">Taking<sp/>damage<sp/>when<sp/>health<sp/>is<sp/>below<sp/>75<sp/>adjusts<sp/>heart<sp/>rate<sp/>by<sp/>5<sp/>beats<sp/>per<sp/>second</highlight></codeline>
<codeline lineno="4931"><highlight class="comment">Maximum<sp/>heartrate<sp/>from<sp/>damage<sp/>is<sp/>MAX_HEARTRATE</highlight></codeline>
<codeline lineno="4932"><highlight class="comment"></highlight></codeline>
<codeline lineno="4933"><highlight class="comment">Firing<sp/>a<sp/>weapon<sp/>adds<sp/>1<sp/>beat<sp/>per<sp/>second<sp/>up<sp/>to<sp/>a<sp/>maximum<sp/>of<sp/>COMBAT_HEARTRATE</highlight></codeline>
<codeline lineno="4934"><highlight class="comment"></highlight></codeline>
<codeline lineno="4935"><highlight class="comment">Being<sp/>at<sp/>less<sp/>than<sp/>25%<sp/>stamina<sp/>adds<sp/>5<sp/>beats<sp/>per<sp/>second<sp/>up<sp/>to<sp/>ZEROSTAMINA_HEARTRATE</highlight></codeline>
<codeline lineno="4936"><highlight class="comment"></highlight></codeline>
<codeline lineno="4937"><highlight class="comment">All<sp/>heartrates<sp/>are<sp/>target<sp/>rates..<sp/>the<sp/>heart<sp/>rate<sp/>will<sp/>start<sp/>falling<sp/>as<sp/>soon<sp/>as<sp/>there<sp/>have<sp/>been<sp/>no<sp/>adjustments<sp/>for<sp/>5<sp/>seconds</highlight></codeline>
<codeline lineno="4938"><highlight class="comment">Once<sp/>it<sp/>starts<sp/>falling<sp/>it<sp/>always<sp/>tries<sp/>to<sp/>get<sp/>to<sp/>DEF_HEARTRATE</highlight></codeline>
<codeline lineno="4939"><highlight class="comment"></highlight></codeline>
<codeline lineno="4940"><highlight class="comment">The<sp/>exception<sp/>to<sp/>the<sp/>above<sp/>rule<sp/>is<sp/>upon<sp/>death<sp/>at<sp/>which<sp/>point<sp/>the<sp/>rate<sp/>is<sp/>set<sp/>to<sp/>DYING_HEARTRATE<sp/>and<sp/>starts<sp/>falling<sp/></highlight></codeline>
<codeline lineno="4941"><highlight class="comment">immediately<sp/>to<sp/>zero</highlight></codeline>
<codeline lineno="4942"><highlight class="comment"></highlight></codeline>
<codeline lineno="4943"><highlight class="comment">Heart<sp/>rate<sp/>volumes<sp/>go<sp/>from<sp/>zero<sp/>(<sp/>-40<sp/>db<sp/>for<sp/>DEF_HEARTRATE<sp/>to<sp/>5<sp/>db<sp/>for<sp/>MAX_HEARTRATE<sp/>)<sp/>the<sp/>volume<sp/>is<sp/></highlight></codeline>
<codeline lineno="4944"><highlight class="comment">scaled<sp/>linearly<sp/>based<sp/>on<sp/>the<sp/>actual<sp/>rate</highlight></codeline>
<codeline lineno="4945"><highlight class="comment"></highlight></codeline>
<codeline lineno="4946"><highlight class="comment">Exception<sp/>to<sp/>the<sp/>above<sp/>rule<sp/>is<sp/>once<sp/>the<sp/>player<sp/>is<sp/>dead,<sp/>the<sp/>dying<sp/>heart<sp/>rate<sp/>starts<sp/>at<sp/>either<sp/>the<sp/>current<sp/>volume<sp/>if</highlight></codeline>
<codeline lineno="4947"><highlight class="comment">it<sp/>is<sp/>audible<sp/>or<sp/>-10db<sp/>and<sp/>scales<sp/>to<sp/>8db<sp/>on<sp/>the<sp/>last<sp/>few<sp/>beats</highlight></codeline>
<codeline lineno="4948"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="4949"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4950"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::AdjustHeartRate(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>target,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeInSecs,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>delay,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4951"><highlight class="normal"></highlight></codeline>
<codeline lineno="4952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>heartInfo.GetEndValue()<sp/>==<sp/>target<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4954"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4955"><highlight class="normal"></highlight></codeline>
<codeline lineno="4956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>AI_DEAD<sp/>&amp;&amp;<sp/>!force<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4958"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4959"><highlight class="normal"></highlight></codeline>
<codeline lineno="4960"><highlight class="normal"><sp/><sp/><sp/><sp/>lastHeartAdjust<sp/>=<sp/>gameLocal.time;</highlight></codeline>
<codeline lineno="4961"><highlight class="normal"></highlight></codeline>
<codeline lineno="4962"><highlight class="normal"><sp/><sp/><sp/><sp/>heartInfo.Init(<sp/>gameLocal.time<sp/>+<sp/>delay<sp/>*<sp/>1000,<sp/>timeInSecs<sp/>*<sp/>1000,<sp/>heartRate,<sp/>target<sp/>);</highlight></codeline>
<codeline lineno="4963"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4964"><highlight class="normal"></highlight></codeline>
<codeline lineno="4965"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4966"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="4967"><highlight class="comment">idPlayer::GetBaseHeartRate</highlight></codeline>
<codeline lineno="4968"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="4969"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4970"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idPlayer::GetBaseHeartRate(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base<sp/>=<sp/>idMath::FtoiFast(<sp/>(<sp/>BASE_HEARTRATE<sp/>+<sp/>LOWHEALTH_HEARTRATE_ADJ<sp/>)<sp/>-<sp/>(<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)health<sp/>/<sp/>100.0f<sp/>)<sp/>*<sp/>LOWHEALTH_HEARTRATE_ADJ<sp/>);</highlight></codeline>
<codeline lineno="4972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rate<sp/>=<sp/>idMath::FtoiFast(<sp/>base<sp/>+<sp/>(<sp/>ZEROSTAMINA_HEARTRATE<sp/>-<sp/>base<sp/>)<sp/>*<sp/>(<sp/>1.0f<sp/>-<sp/>stamina<sp/>/<sp/>pm_stamina.GetFloat()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>diff<sp/>=<sp/>(<sp/>lastDmgTime<sp/>)<sp/>?<sp/>gameLocal.time<sp/>-<sp/>lastDmgTime<sp/>:<sp/>99999;</highlight></codeline>
<codeline lineno="4974"><highlight class="normal"><sp/><sp/><sp/><sp/>rate<sp/>+=<sp/>(<sp/>diff<sp/>&lt;<sp/>5000<sp/>)<sp/>?<sp/>(<sp/>diff<sp/>&lt;<sp/>2500<sp/>)<sp/>?<sp/>(<sp/>diff<sp/>&lt;<sp/>1000<sp/>)<sp/>?<sp/>15<sp/>:<sp/>10<sp/>:<sp/>5<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="4975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rate;</highlight></codeline>
<codeline lineno="4976"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4977"><highlight class="normal"></highlight></codeline>
<codeline lineno="4978"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4979"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="4980"><highlight class="comment">idPlayer::SetCurrentHeartRate</highlight></codeline>
<codeline lineno="4981"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="4982"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4983"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::SetCurrentHeartRate(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4984"><highlight class="normal"></highlight></codeline>
<codeline lineno="4985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base<sp/>=<sp/>idMath::FtoiFast(<sp/>(<sp/>BASE_HEARTRATE<sp/>+<sp/>LOWHEALTH_HEARTRATE_ADJ<sp/>)<sp/>-<sp/>(<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>health<sp/>/<sp/>100.0f<sp/>)<sp/>*<sp/>LOWHEALTH_HEARTRATE_ADJ<sp/>);</highlight></codeline>
<codeline lineno="4986"><highlight class="normal"></highlight></codeline>
<codeline lineno="4987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>PowerUpActive(<sp/>ADRENALINE<sp/>))<sp/>{</highlight></codeline>
<codeline lineno="4988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heartRate<sp/>=<sp/>135;</highlight></codeline>
<codeline lineno="4989"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heartRate<sp/>=<sp/>idMath::FtoiFast(<sp/>heartInfo.GetCurrentValue(<sp/>gameLocal.time<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentRate<sp/>=<sp/>GetBaseHeartRate();</highlight></codeline>
<codeline lineno="4992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>gameLocal.time<sp/>&gt;<sp/>lastHeartAdjust<sp/>+<sp/>2500<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AdjustHeartRate(<sp/>currentRate,<sp/>2.5f,<sp/>0.0f,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4995"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4996"><highlight class="normal"></highlight></codeline>
<codeline lineno="4997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bps<sp/>=<sp/>idMath::FtoiFast(<sp/>60.0f<sp/>/<sp/>heartRate<sp/>*<sp/>1000.0f<sp/>);</highlight></codeline>
<codeline lineno="4998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.time<sp/>-<sp/>lastHeartBeat<sp/>&gt;<sp/>bps<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dmgVol<sp/>=<sp/>DMG_VOLUME;</highlight></codeline>
<codeline lineno="5000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>deathVol<sp/>=<sp/>DEATH_VOLUME;</highlight></codeline>
<codeline lineno="5001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zeroVol<sp/>=<sp/>ZERO_VOLUME;</highlight></codeline>
<codeline lineno="5002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pct<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="5003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>heartRate<sp/>&gt;<sp/>BASE_HEARTRATE<sp/>&amp;&amp;<sp/>health<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pct<sp/>=<sp/>(float)(heartRate<sp/>-<sp/>base)<sp/>/<sp/>(MAX_HEARTRATE<sp/>-<sp/>base);</highlight></codeline>
<codeline lineno="5005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pct<sp/>*=<sp/>((float)dmgVol<sp/>-<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)zeroVol);</highlight></codeline>
<codeline lineno="5006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&lt;=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pct<sp/>=<sp/>(float)(heartRate<sp/>-<sp/>DYING_HEARTRATE)<sp/>/<sp/>(BASE_HEARTRATE<sp/>-<sp/>DYING_HEARTRATE);</highlight></codeline>
<codeline lineno="5008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pct<sp/>&gt;<sp/>1.0f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pct<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="5010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pct<sp/>&lt;<sp/>0.0f)<sp/>{</highlight></codeline>
<codeline lineno="5011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pct<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="5012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pct<sp/>*=<sp/>((float)deathVol<sp/>-<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)zeroVol);</highlight></codeline>
<codeline lineno="5014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5015"><highlight class="normal"></highlight></codeline>
<codeline lineno="5016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pct<sp/>+=<sp/>(float)zeroVol;</highlight></codeline>
<codeline lineno="5017"><highlight class="normal"></highlight></codeline>
<codeline lineno="5018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pct<sp/>!=<sp/>zeroVol<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartSound(<sp/></highlight><highlight class="stringliteral">&quot;snd_heartbeat&quot;</highlight><highlight class="normal">,<sp/>SND_CHANNEL_HEART,<sp/>SSF_PRIVATE_SOUND,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="5020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>modify<sp/>just<sp/>this<sp/>channel<sp/>to<sp/>a<sp/>custom<sp/>volume</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsound_shader_parms__t" kindref="compound">soundShaderParms_t</ref><sp/><sp/>parms;</highlight></codeline>
<codeline lineno="5022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<sp/>&amp;parms,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>parms<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parms.volume<sp/>=<sp/>pct;</highlight></codeline>
<codeline lineno="5024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refSound.referenceSound-&gt;ModifySound(<sp/>SND_CHANNEL_HEART,<sp/>&amp;parms<sp/>);</highlight></codeline>
<codeline lineno="5025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5026"><highlight class="normal"></highlight></codeline>
<codeline lineno="5027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastHeartBeat<sp/>=<sp/>gameLocal.time;</highlight></codeline>
<codeline lineno="5028"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5029"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5030"><highlight class="normal"></highlight></codeline>
<codeline lineno="5031"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5032"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5033"><highlight class="comment">idPlayer::UpdateAir</highlight></codeline>
<codeline lineno="5034"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5035"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5036"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::UpdateAir(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="5037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&lt;=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5039"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5040"><highlight class="normal"></highlight></codeline>
<codeline lineno="5041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>if<sp/>the<sp/>player<sp/>is<sp/>connected<sp/>to<sp/>the<sp/>info_vacuum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>newAirless<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5043"><highlight class="normal"></highlight></codeline>
<codeline lineno="5044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.vacuumAreaNum<sp/>!=<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>GetNumPVSAreas();</highlight></codeline>
<codeline lineno="5046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>num<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>areaNum;</highlight></codeline>
<codeline lineno="5048"><highlight class="normal"></highlight></codeline>
<codeline lineno="5049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>player<sp/>box<sp/>spans<sp/>multiple<sp/>areas,<sp/>get<sp/>the<sp/>area<sp/>from<sp/>the<sp/>origin<sp/>point<sp/>instead,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise<sp/>a<sp/>rotating<sp/>player<sp/>box<sp/>may<sp/>poke<sp/>into<sp/>an<sp/>outside<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>num<sp/>==<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>*pvsAreas<sp/>=<sp/>GetPVSAreas();</highlight></codeline>
<codeline lineno="5053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>areaNum<sp/>=<sp/>pvsAreas[0];</highlight></codeline>
<codeline lineno="5054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>areaNum<sp/>=<sp/>gameRenderWorld-&gt;PointInArea(<sp/>this-&gt;GetPhysics()-&gt;GetOrigin()<sp/>);</highlight></codeline>
<codeline lineno="5056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newAirless<sp/>=<sp/>gameRenderWorld-&gt;AreasAreConnected(<sp/>gameLocal.vacuumAreaNum,<sp/>areaNum,<sp/>PS_BLOCK_AIR<sp/>);</highlight></codeline>
<codeline lineno="5058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5059"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5060"><highlight class="normal"></highlight></codeline>
<codeline lineno="5061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>newAirless<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!airless<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartSound(<sp/></highlight><highlight class="stringliteral">&quot;snd_decompress&quot;</highlight><highlight class="normal">,<sp/>SND_CHANNEL_ANY,<sp/>SSF_GLOBAL,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="5064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartSound(<sp/></highlight><highlight class="stringliteral">&quot;snd_noAir&quot;</highlight><highlight class="normal">,<sp/>SND_CHANNEL_BODY2,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="5065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;noAir&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>airTics--;</highlight></codeline>
<codeline lineno="5070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>airTics<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>airTics<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>damage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/>*damageDef<sp/>=<sp/>gameLocal.FindEntityDefDict(<sp/></highlight><highlight class="stringliteral">&quot;damage_noair&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dmgTiming<sp/>=<sp/>1000<sp/>*<sp/>((damageDef)<sp/>?<sp/>damageDef-&gt;GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;delay&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;3.0&quot;</highlight><highlight class="normal"><sp/>)<sp/>:<sp/>3.0f<sp/>);</highlight></codeline>
<codeline lineno="5075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.time<sp/>&gt;<sp/>lastAirDamage<sp/>+<sp/>dmgTiming<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Damage(<sp/>NULL,<sp/>NULL,<sp/>vec3_origin,<sp/></highlight><highlight class="stringliteral">&quot;damage_noair&quot;</highlight><highlight class="normal">,<sp/>1.0f,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="5077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastAirDamage<sp/>=<sp/>gameLocal.time;</highlight></codeline>
<codeline lineno="5078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5081"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>airless<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartSound(<sp/></highlight><highlight class="stringliteral">&quot;snd_recompress&quot;</highlight><highlight class="normal">,<sp/>SND_CHANNEL_ANY,<sp/>SSF_GLOBAL,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="5084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StopSound(<sp/>SND_CHANNEL_BODY2,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;Air&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>airTics+=2;<sp/></highlight><highlight class="comment">//<sp/>regain<sp/>twice<sp/>as<sp/>fast<sp/>as<sp/>lose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>airTics<sp/>&gt;<sp/>pm_airTics.GetInteger()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>airTics<sp/>=<sp/>pm_airTics.GetInteger();</highlight></codeline>
<codeline lineno="5092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5093"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5094"><highlight class="normal"></highlight></codeline>
<codeline lineno="5095"><highlight class="normal"><sp/><sp/><sp/><sp/>airless<sp/>=<sp/>newAirless;</highlight></codeline>
<codeline lineno="5096"><highlight class="normal"></highlight></codeline>
<codeline lineno="5097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;SetStateInt(<sp/></highlight><highlight class="stringliteral">&quot;player_air&quot;</highlight><highlight class="normal">,<sp/>100<sp/>*<sp/>airTics<sp/>/<sp/>pm_airTics.GetInteger()<sp/>);</highlight></codeline>
<codeline lineno="5099"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5101"><highlight class="normal"></highlight></codeline>
<codeline lineno="5102"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5103"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5104"><highlight class="comment">idPlayer::AddGuiPDAData</highlight></codeline>
<codeline lineno="5105"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5106"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5107"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idPlayer::AddGuiPDAData(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>declType_t<sp/>dataType,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*listName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_decl_p_d_a" kindref="compound">idDeclPDA</ref><sp/>*src,<sp/><ref refid="classid_user_interface" kindref="compound">idUserInterface</ref><sp/>*gui<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/>i;</highlight></codeline>
<codeline lineno="5109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>work;</highlight></codeline>
<codeline lineno="5110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dataType<sp/>==<sp/>DECL_EMAIL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>src-&gt;GetNumEmails();</highlight></codeline>
<codeline lineno="5112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>c;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_decl_email" kindref="compound">idDeclEmail</ref><sp/>*email<sp/>=<sp/>src-&gt;GetEmailByIndex(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="5114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>email<sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>work<sp/>=<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;-\tEmail<sp/>%d<sp/>not<sp/>found\t-&quot;</highlight><highlight class="normal">,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="5116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>work<sp/>=<sp/>email-&gt;GetFrom();</highlight></codeline>
<codeline lineno="5118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>work<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>work<sp/>+=<sp/>email-&gt;GetSubject();</highlight></codeline>
<codeline lineno="5120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>work<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>work<sp/>+=<sp/>email-&gt;GetDate();</highlight></codeline>
<codeline lineno="5122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gui-&gt;SetStateString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;%s_item_%i&quot;</highlight><highlight class="normal">,<sp/>listName,<sp/>i<sp/>),<sp/>work<sp/>);</highlight></codeline>
<codeline lineno="5124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="5126"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dataType<sp/>==<sp/>DECL_AUDIO<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>src-&gt;GetNumAudios();</highlight></codeline>
<codeline lineno="5128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>c;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_decl_audio" kindref="compound">idDeclAudio</ref><sp/>*audio<sp/>=<sp/>src-&gt;GetAudioByIndex(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="5130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>audio<sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>work<sp/>=<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;Audio<sp/>Log<sp/>%d<sp/>not<sp/>found&quot;</highlight><highlight class="normal">,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="5132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>work<sp/>=<sp/>audio-&gt;GetAudioName();</highlight></codeline>
<codeline lineno="5134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gui-&gt;SetStateString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;%s_item_%i&quot;</highlight><highlight class="normal">,<sp/>listName,<sp/>i<sp/>),<sp/>work<sp/>);</highlight></codeline>
<codeline lineno="5136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="5138"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dataType<sp/>==<sp/>DECL_VIDEO<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>inventory.videos.Num();</highlight></codeline>
<codeline lineno="5140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>c;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_decl_video" kindref="compound">idDeclVideo</ref><sp/>*video<sp/>=<sp/>GetVideo(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="5142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>video<sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>work<sp/>=<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;Video<sp/>CD<sp/>%s<sp/>not<sp/>found&quot;</highlight><highlight class="normal">,<sp/>inventory.videos[i].c_str()<sp/>);</highlight></codeline>
<codeline lineno="5144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>work<sp/>=<sp/>video-&gt;GetVideoName();</highlight></codeline>
<codeline lineno="5146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gui-&gt;SetStateString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;%s_item_%i&quot;</highlight><highlight class="normal">,<sp/>listName,<sp/>i<sp/>),<sp/>work<sp/>);</highlight></codeline>
<codeline lineno="5148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="5150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5153"><highlight class="normal"></highlight></codeline>
<codeline lineno="5154"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5155"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5156"><highlight class="comment">idPlayer::GetPDA</highlight></codeline>
<codeline lineno="5157"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5158"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5159"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_decl_p_d_a" kindref="compound">idDeclPDA</ref><sp/>*idPlayer::GetPDA(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>inventory.pdas.Num()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classid_decl_p_d_a" kindref="compound">idDeclPDA</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>declManager-&gt;FindType(<sp/>DECL_PDA,<sp/>inventory.pdas[<sp/>0<sp/>]<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5162"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5166"><highlight class="normal"></highlight></codeline>
<codeline lineno="5167"><highlight class="normal"></highlight></codeline>
<codeline lineno="5168"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5169"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5170"><highlight class="comment">idPlayer::GetVideo</highlight></codeline>
<codeline lineno="5171"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5172"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5173"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_decl_video" kindref="compound">idDeclVideo</ref><sp/>*idPlayer::GetVideo(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/>inventory.videos.Num()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classid_decl_video" kindref="compound">idDeclVideo</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>declManager-&gt;FindType(<sp/>DECL_VIDEO,<sp/>inventory.videos[index],<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5179"><highlight class="normal"></highlight></codeline>
<codeline lineno="5180"><highlight class="normal"></highlight></codeline>
<codeline lineno="5181"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5182"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5183"><highlight class="comment">idPlayer::UpdatePDAInfo</highlight></codeline>
<codeline lineno="5184"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5185"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5186"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::UpdatePDAInfo(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>updatePDASel<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/>sel;</highlight></codeline>
<codeline lineno="5188"><highlight class="normal"></highlight></codeline>
<codeline lineno="5189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>objectiveSystem<sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5192"><highlight class="normal"></highlight></codeline>
<codeline lineno="5193"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>hud<sp/>);</highlight></codeline>
<codeline lineno="5194"><highlight class="normal"></highlight></codeline>
<codeline lineno="5195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentPDA<sp/>=<sp/>objectiveSystem-&gt;State().GetInt(<sp/></highlight><highlight class="stringliteral">&quot;listPDA_sel_0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>currentPDA<sp/>==<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentPDA<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5199"><highlight class="normal"></highlight></codeline>
<codeline lineno="5200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>updatePDASel<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateInt(<sp/></highlight><highlight class="stringliteral">&quot;listPDAVideo_sel_0&quot;</highlight><highlight class="normal">,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="5202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateInt(<sp/></highlight><highlight class="stringliteral">&quot;listPDAEmail_sel_0&quot;</highlight><highlight class="normal">,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="5203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateInt(<sp/></highlight><highlight class="stringliteral">&quot;listPDAAudio_sel_0&quot;</highlight><highlight class="normal">,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="5204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5205"><highlight class="normal"></highlight></codeline>
<codeline lineno="5206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>currentPDA<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentPDA<sp/>=<sp/>inventory.pdas.Num()<sp/>-<sp/>currentPDA;</highlight></codeline>
<codeline lineno="5208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5209"><highlight class="normal"></highlight></codeline>
<codeline lineno="5210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>in<sp/>the<sp/>bit<sp/>array<sp/>that<sp/>this<sp/>pda<sp/>has<sp/>been<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>currentPDA<sp/>&lt;<sp/>128<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.pdasViewed[currentPDA<sp/>&gt;&gt;<sp/>5]<sp/>|=<sp/>1<sp/>&lt;&lt;<sp/>(currentPDA<sp/>&amp;<sp/>31);</highlight></codeline>
<codeline lineno="5213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5214"><highlight class="normal"></highlight></codeline>
<codeline lineno="5215"><highlight class="normal"><sp/><sp/><sp/><sp/>pdaAudio<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5216"><highlight class="normal"><sp/><sp/><sp/><sp/>pdaVideo<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5217"><highlight class="normal"><sp/><sp/><sp/><sp/>pdaVideoWave<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>name,<sp/>data,<sp/>preview,<sp/>info,<sp/>wave;</highlight></codeline>
<codeline lineno="5219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>MAX_PDAS;<sp/>j++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;listPDA_item_%i&quot;</highlight><highlight class="normal">,<sp/>j<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>MAX_PDA_ITEMS;<sp/>j++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;listPDAVideo_item_%i&quot;</highlight><highlight class="normal">,<sp/>j<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;listPDAAudio_item_%i&quot;</highlight><highlight class="normal">,<sp/>j<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;listPDAEmail_item_%i&quot;</highlight><highlight class="normal">,<sp/>j<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;listPDASecurity_item_%i&quot;</highlight><highlight class="normal">,<sp/>j<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>inventory.pdas.Num();<sp/>j++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5229"><highlight class="normal"></highlight></codeline>
<codeline lineno="5230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_decl_p_d_a" kindref="compound">idDeclPDA</ref><sp/>*pda<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classid_decl_p_d_a" kindref="compound">idDeclPDA</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>declManager-&gt;FindType(<sp/>DECL_PDA,<sp/>inventory.pdas[j],<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5231"><highlight class="normal"></highlight></codeline>
<codeline lineno="5232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pda<sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5235"><highlight class="normal"></highlight></codeline>
<codeline lineno="5236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>inventory.pdas.Num()<sp/>-<sp/>j;</highlight></codeline>
<codeline lineno="5237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>j<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Special<sp/>case<sp/>for<sp/>the<sp/>first<sp/>PDA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5241"><highlight class="normal"></highlight></codeline>
<codeline lineno="5242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>j<sp/>!=<sp/>currentPDA<sp/>&amp;&amp;<sp/>j<sp/>&lt;<sp/>128<sp/>&amp;&amp;<sp/>inventory.pdasViewed[j<sp/>&gt;&gt;<sp/>5]<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>(j<sp/>&amp;<sp/>31))<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>pda<sp/>has<sp/>been<sp/>read<sp/>already,<sp/>mark<sp/>in<sp/>gray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;listPDA_item_%i&quot;</highlight><highlight class="normal">,<sp/>index),<sp/>va(S_COLOR_GRAY<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>pda-&gt;GetPdaName())<sp/>);</highlight></codeline>
<codeline lineno="5245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>pda<sp/>has<sp/>not<sp/>been<sp/>read<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;listPDA_item_%i&quot;</highlight><highlight class="normal">,<sp/>index),<sp/>pda-&gt;GetPdaName()<sp/>);</highlight></codeline>
<codeline lineno="5248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5249"><highlight class="normal"></highlight></codeline>
<codeline lineno="5250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*security<sp/>=<sp/>pda-&gt;GetSecurity();</highlight></codeline>
<codeline lineno="5251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>j<sp/>==<sp/>currentPDA<sp/>||<sp/>(currentPDA<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>security<sp/>&amp;&amp;<sp/>*security<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>*security<sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>security<sp/>=<sp/>common-&gt;GetLanguageDict()-&gt;GetString(<sp/></highlight><highlight class="stringliteral">&quot;#str_00066&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;PDASecurityClearance&quot;</highlight><highlight class="normal">,<sp/>security<sp/>);</highlight></codeline>
<codeline lineno="5256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5257"><highlight class="normal"></highlight></codeline>
<codeline lineno="5258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>j<sp/>==<sp/>currentPDA<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5259"><highlight class="normal"></highlight></codeline>
<codeline lineno="5260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;pda_icon&quot;</highlight><highlight class="normal">,<sp/>pda-&gt;GetIcon()<sp/>);</highlight></codeline>
<codeline lineno="5261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;pda_id&quot;</highlight><highlight class="normal">,<sp/>pda-&gt;GetID()<sp/>);</highlight></codeline>
<codeline lineno="5262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;pda_title&quot;</highlight><highlight class="normal">,<sp/>pda-&gt;GetTitle()<sp/>);</highlight></codeline>
<codeline lineno="5263"><highlight class="normal"></highlight></codeline>
<codeline lineno="5264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>j<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Selected,<sp/>personal<sp/>pda</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>videos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>updatePDASel<sp/>||<sp/>!inventory.pdaOpened<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;playerPDAActive&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;pda_personal&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.pdaOpened<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;pda_location&quot;</highlight><highlight class="normal">,<sp/>hud-&gt;State().GetString(</highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="5273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;pda_name&quot;</highlight><highlight class="normal">,<sp/>cvarSystem-&gt;GetCVarString(<sp/></highlight><highlight class="stringliteral">&quot;ui_name&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="5274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddGuiPDAData(<sp/>DECL_VIDEO,<sp/></highlight><highlight class="stringliteral">&quot;listPDAVideo&quot;</highlight><highlight class="normal">,<sp/>pda,<sp/>objectiveSystem<sp/>);</highlight></codeline>
<codeline lineno="5275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sel<sp/>=<sp/>objectiveSystem-&gt;State().GetInt(<sp/></highlight><highlight class="stringliteral">&quot;listPDAVideo_sel_0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_decl_video" kindref="compound">idDeclVideo</ref><sp/>*vid<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>sel<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>sel<sp/>&lt;<sp/>inventory.videos.Num()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vid<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classid_decl_video" kindref="compound">idDeclVideo</ref><sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>declManager-&gt;FindType(<sp/>DECL_VIDEO,<sp/>inventory.videos[<sp/>sel<sp/>],<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>vid<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdaVideo<sp/>=<sp/>vid-&gt;GetRoq();</highlight></codeline>
<codeline lineno="5282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdaVideoWave<sp/>=<sp/>vid-&gt;GetWave();</highlight></codeline>
<codeline lineno="5283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;PDAVideoTitle&quot;</highlight><highlight class="normal">,<sp/>vid-&gt;GetVideoName()<sp/>);</highlight></codeline>
<codeline lineno="5284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;PDAVideoVid&quot;</highlight><highlight class="normal">,<sp/>vid-&gt;GetRoq()<sp/>);</highlight></codeline>
<codeline lineno="5285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;PDAVideoIcon&quot;</highlight><highlight class="normal">,<sp/>vid-&gt;GetPreview()<sp/>);</highlight></codeline>
<codeline lineno="5286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;PDAVideoInfo&quot;</highlight><highlight class="normal">,<sp/>vid-&gt;GetInfo()<sp/>);</highlight></codeline>
<codeline lineno="5287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//FIXME:<sp/>need<sp/>to<sp/>precache<sp/>these<sp/>in<sp/>the<sp/>player<sp/>def</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;PDAVideoVid&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sound/vo/video/welcome.tga&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;PDAVideoIcon&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sound/vo/video/welcome.tga&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;PDAVideoTitle&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;PDAVideoInfo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Selected,<sp/>non-personal<sp/>pda</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>audio<sp/>logs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>updatePDASel<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;playerPDANotActive&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;pda_personal&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.pdaOpened<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;pda_location&quot;</highlight><highlight class="normal">,<sp/>pda-&gt;GetPost()<sp/>);</highlight></codeline>
<codeline lineno="5303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;pda_name&quot;</highlight><highlight class="normal">,<sp/>pda-&gt;GetFullName()<sp/>);</highlight></codeline>
<codeline lineno="5304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>audioCount<sp/>=<sp/>AddGuiPDAData(<sp/>DECL_AUDIO,<sp/></highlight><highlight class="stringliteral">&quot;listPDAAudio&quot;</highlight><highlight class="normal">,<sp/>pda,<sp/>objectiveSystem<sp/>);</highlight></codeline>
<codeline lineno="5305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateInt(<sp/></highlight><highlight class="stringliteral">&quot;audioLogCount&quot;</highlight><highlight class="normal">,<sp/>audioCount<sp/>);</highlight></codeline>
<codeline lineno="5306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sel<sp/>=<sp/>objectiveSystem-&gt;State().GetInt(<sp/></highlight><highlight class="stringliteral">&quot;listPDAAudio_sel_0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_decl_audio" kindref="compound">idDeclAudio</ref><sp/>*aud<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>sel<sp/>&gt;=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aud<sp/>=<sp/>pda-&gt;GetAudioByIndex(<sp/>sel<sp/>);</highlight></codeline>
<codeline lineno="5310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>aud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdaAudio<sp/>=<sp/>aud-&gt;GetWave();</highlight></codeline>
<codeline lineno="5313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;PDAAudioTitle&quot;</highlight><highlight class="normal">,<sp/>aud-&gt;GetAudioName()<sp/>);</highlight></codeline>
<codeline lineno="5314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;PDAAudioIcon&quot;</highlight><highlight class="normal">,<sp/>aud-&gt;GetPreview()<sp/>);</highlight></codeline>
<codeline lineno="5315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;PDAAudioInfo&quot;</highlight><highlight class="normal">,<sp/>aud-&gt;GetInfo()<sp/>);</highlight></codeline>
<codeline lineno="5316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;PDAAudioIcon&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sound/vo/video/welcome.tga&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;PDAAutioTitle&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;PDAAudioInfo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>emails</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numEmails<sp/>=<sp/>pda-&gt;GetNumEmails();</highlight></codeline>
<codeline lineno="5326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>numEmails<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddGuiPDAData(<sp/>DECL_EMAIL,<sp/></highlight><highlight class="stringliteral">&quot;listPDAEmail&quot;</highlight><highlight class="normal">,<sp/>pda,<sp/>objectiveSystem<sp/>);</highlight></codeline>
<codeline lineno="5328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sel<sp/>=<sp/>objectiveSystem-&gt;State().GetInt(<sp/></highlight><highlight class="stringliteral">&quot;listPDAEmail_sel_0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-1&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>sel<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>sel<sp/>&lt;<sp/>numEmails<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_decl_email" kindref="compound">idDeclEmail</ref><sp/>*email<sp/>=<sp/>pda-&gt;GetEmailByIndex(<sp/>sel<sp/>);</highlight></codeline>
<codeline lineno="5331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>email-&gt;GetSubject();</highlight></codeline>
<codeline lineno="5332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>email-&gt;GetBody();</highlight></codeline>
<codeline lineno="5333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;PDAEmailTitle&quot;</highlight><highlight class="normal">,<sp/>name<sp/>);</highlight></codeline>
<codeline lineno="5336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;PDAEmailText&quot;</highlight><highlight class="normal">,<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="5337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>objectiveSystem-&gt;State().GetInt(<sp/></highlight><highlight class="stringliteral">&quot;listPDA_sel_0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-1&quot;</highlight><highlight class="normal"><sp/>)<sp/>==<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateInt(<sp/></highlight><highlight class="stringliteral">&quot;listPDA_sel_0&quot;</highlight><highlight class="normal">,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="5341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5342"><highlight class="normal"><sp/><sp/><sp/><sp/>objectiveSystem-&gt;StateChanged(<sp/>gameLocal.time<sp/>);</highlight></codeline>
<codeline lineno="5343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5344"><highlight class="normal"></highlight></codeline>
<codeline lineno="5345"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5346"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5347"><highlight class="comment">idPlayer::TogglePDA</highlight></codeline>
<codeline lineno="5348"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5349"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5350"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::TogglePDA(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>objectiveSystem<sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5354"><highlight class="normal"></highlight></codeline>
<codeline lineno="5355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>inventory.pdas.Num()<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShowTip(<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;text_infoTitle&quot;</highlight><highlight class="normal"><sp/>),<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;text_noPDA&quot;</highlight><highlight class="normal"><sp/>),<sp/>true<sp/>);</highlight></codeline>
<codeline lineno="5357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5359"><highlight class="normal"></highlight></codeline>
<codeline lineno="5360"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>hud<sp/>);</highlight></codeline>
<codeline lineno="5361"><highlight class="normal"></highlight></codeline>
<codeline lineno="5362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!objectiveSystemOpen<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/>c<sp/>=<sp/>inventory.items.Num();</highlight></codeline>
<codeline lineno="5364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateInt(<sp/></highlight><highlight class="stringliteral">&quot;inv_count&quot;</highlight><highlight class="normal">,<sp/>c<sp/>);</highlight></codeline>
<codeline lineno="5365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>MAX_INVENTORY_ITEMS;<sp/>j++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;inv_name_%i&quot;</highlight><highlight class="normal">,<sp/>j<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;inv_icon_%i&quot;</highlight><highlight class="normal">,<sp/>j<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;inv_text_%i&quot;</highlight><highlight class="normal">,<sp/>j<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>c;<sp/>j++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/>*item<sp/>=<sp/>inventory.items[j];</highlight></codeline>
<codeline lineno="5372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!item-&gt;GetBool(<sp/></highlight><highlight class="stringliteral">&quot;inv_pda&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*iname<sp/>=<sp/>item-&gt;GetString(<sp/></highlight><highlight class="stringliteral">&quot;inv_name&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*iicon<sp/>=<sp/>item-&gt;GetString(<sp/></highlight><highlight class="stringliteral">&quot;inv_icon&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*itext<sp/>=<sp/>item-&gt;GetString(<sp/></highlight><highlight class="stringliteral">&quot;inv_text&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;inv_name_%i&quot;</highlight><highlight class="normal">,<sp/>j<sp/>),<sp/>iname<sp/>);</highlight></codeline>
<codeline lineno="5377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;inv_icon_%i&quot;</highlight><highlight class="normal">,<sp/>j<sp/>),<sp/>iicon<sp/>);</highlight></codeline>
<codeline lineno="5378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;inv_text_%i&quot;</highlight><highlight class="normal">,<sp/>j<sp/>),<sp/>itext<sp/>);</highlight></codeline>
<codeline lineno="5379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_key_value" kindref="compound">idKeyValue</ref><sp/>*kv<sp/>=<sp/>item-&gt;MatchPrefix(<sp/></highlight><highlight class="stringliteral">&quot;inv_id&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="5380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>kv<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;inv_id_%i&quot;</highlight><highlight class="normal">,<sp/>j<sp/>),<sp/>kv-&gt;GetValue()<sp/>);</highlight></codeline>
<codeline lineno="5382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5385"><highlight class="normal"></highlight></codeline>
<codeline lineno="5386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>MAX_WEAPONS;<sp/>j++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*weapnum<sp/>=<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;def_weapon%d&quot;</highlight><highlight class="normal">,<sp/>j<sp/>);</highlight></codeline>
<codeline lineno="5388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hudWeap<sp/>=<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;weapon%d&quot;</highlight><highlight class="normal">,<sp/>j<sp/>);</highlight></codeline>
<codeline lineno="5389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>weapstate<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>inventory.weapons<sp/>&amp;<sp/>(<sp/>1<sp/>&lt;&lt;<sp/>j<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*weap<sp/>=<sp/>spawnArgs.GetString(<sp/>weapnum<sp/>);</highlight></codeline>
<codeline lineno="5392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weap<sp/>&amp;&amp;<sp/>*weap<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapstate++;</highlight></codeline>
<codeline lineno="5394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateInt(<sp/>hudWeap,<sp/>weapstate<sp/>);</highlight></codeline>
<codeline lineno="5397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5398"><highlight class="normal"></highlight></codeline>
<codeline lineno="5399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateInt(<sp/></highlight><highlight class="stringliteral">&quot;listPDA_sel_0&quot;</highlight><highlight class="normal">,<sp/>inventory.selPDA<sp/>);</highlight></codeline>
<codeline lineno="5400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateInt(<sp/></highlight><highlight class="stringliteral">&quot;listPDAVideo_sel_0&quot;</highlight><highlight class="normal">,<sp/>inventory.selVideo<sp/>);</highlight></codeline>
<codeline lineno="5401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateInt(<sp/></highlight><highlight class="stringliteral">&quot;listPDAAudio_sel_0&quot;</highlight><highlight class="normal">,<sp/>inventory.selAudio<sp/>);</highlight></codeline>
<codeline lineno="5402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;SetStateInt(<sp/></highlight><highlight class="stringliteral">&quot;listPDAEmail_sel_0&quot;</highlight><highlight class="normal">,<sp/>inventory.selEMail<sp/>);</highlight></codeline>
<codeline lineno="5403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdatePDAInfo(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateObjectiveInfo();</highlight></codeline>
<codeline lineno="5405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;Activate(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>gameLocal.time<sp/>);</highlight></codeline>
<codeline lineno="5406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;pdaPickupHide&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;videoPickupHide&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5408"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.selPDA<sp/>=<sp/>objectiveSystem-&gt;State().GetInt(<sp/></highlight><highlight class="stringliteral">&quot;listPDA_sel_0&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.selVideo<sp/>=<sp/>objectiveSystem-&gt;State().GetInt(<sp/></highlight><highlight class="stringliteral">&quot;listPDAVideo_sel_0&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.selAudio<sp/>=<sp/>objectiveSystem-&gt;State().GetInt(<sp/></highlight><highlight class="stringliteral">&quot;listPDAAudio_sel_0&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.selEMail<sp/>=<sp/>objectiveSystem-&gt;State().GetInt(<sp/></highlight><highlight class="stringliteral">&quot;listPDAEmail_sel_0&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectiveSystem-&gt;Activate(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>gameLocal.time<sp/>);</highlight></codeline>
<codeline lineno="5414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5415"><highlight class="normal"><sp/><sp/><sp/><sp/>objectiveSystemOpen<sp/>^=<sp/>1;</highlight></codeline>
<codeline lineno="5416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5417"><highlight class="normal"></highlight></codeline>
<codeline lineno="5418"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5419"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5420"><highlight class="comment">idPlayer::ToggleScoreboard</highlight></codeline>
<codeline lineno="5421"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5422"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5423"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::ToggleScoreboard(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5424"><highlight class="normal"><sp/><sp/><sp/><sp/>scoreBoardOpen<sp/>^=<sp/>1;</highlight></codeline>
<codeline lineno="5425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5426"><highlight class="normal"></highlight></codeline>
<codeline lineno="5427"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5428"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5429"><highlight class="comment">idPlayer::Spectate</highlight></codeline>
<codeline lineno="5430"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5431"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5432"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Spectate(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>spectate<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_bit_msg" kindref="compound">idBitMsg</ref><sp/><sp/><sp/><sp/>msg;</highlight></codeline>
<codeline lineno="5434"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgBuf[MAX_EVENT_PARAM_SIZE];</highlight></codeline>
<codeline lineno="5435"><highlight class="normal"></highlight></codeline>
<codeline lineno="5436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>track<sp/>invisible<sp/>player<sp/>bug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>hiding<sp/>and<sp/>showing<sp/>should<sp/>be<sp/>performed<sp/>through<sp/>Spectate<sp/>calls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>except<sp/>for<sp/>the<sp/>private<sp/>camera<sp/>view,<sp/>which<sp/>is<sp/>used<sp/>for<sp/>teleports</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5439"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>(<sp/>teleportEntity.GetEntity()<sp/>!=<sp/>NULL<sp/>)<sp/>||<sp/>(<sp/>IsHidden()<sp/>==<sp/>spectating<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5440"><highlight class="normal"></highlight></codeline>
<codeline lineno="5441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spectating<sp/>==<sp/>spectate<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5444"><highlight class="normal"></highlight></codeline>
<codeline lineno="5445"><highlight class="normal"><sp/><sp/><sp/><sp/>spectating<sp/>=<sp/>spectate;</highlight></codeline>
<codeline lineno="5446"><highlight class="normal"></highlight></codeline>
<codeline lineno="5447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isServer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.Init(<sp/>msgBuf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>msgBuf<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.WriteBits(<sp/>spectating,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="5450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ServerSendEvent(<sp/>EVENT_SPECTATE,<sp/>&amp;msg,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>-1<sp/>);</highlight></codeline>
<codeline lineno="5451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5452"><highlight class="normal"></highlight></codeline>
<codeline lineno="5453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spectating<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>join<sp/>the<sp/>spectators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearPowerUps();</highlight></codeline>
<codeline lineno="5456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spectator<sp/>=<sp/>this-&gt;entityNumber;</highlight></codeline>
<codeline lineno="5457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Init();</highlight></codeline>
<codeline lineno="5458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StopRagdoll();</highlight></codeline>
<codeline lineno="5459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetPhysics(<sp/>&amp;physicsObj<sp/>);</highlight></codeline>
<codeline lineno="5460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsObj.DisableClip();</highlight></codeline>
<codeline lineno="5461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hide();</highlight></codeline>
<codeline lineno="5462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event_DisableWeapon();</highlight></codeline>
<codeline lineno="5463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;aim_clear&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPAimFadeTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5467"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>put<sp/>everything<sp/>back<sp/>together<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentWeapon<sp/>=<sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>to<sp/>make<sp/>sure<sp/>the<sp/>def<sp/>will<sp/>be<sp/>loaded<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Show();</highlight></codeline>
<codeline lineno="5471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event_EnableWeapon();</highlight></codeline>
<codeline lineno="5472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5473"><highlight class="normal"><sp/><sp/><sp/><sp/>SetClipModel();</highlight></codeline>
<codeline lineno="5474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5475"><highlight class="normal"></highlight></codeline>
<codeline lineno="5476"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5477"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5478"><highlight class="comment">idPlayer::SetClipModel</highlight></codeline>
<codeline lineno="5479"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5480"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5481"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::SetClipModel(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_bounds" kindref="compound">idBounds</ref><sp/>bounds;</highlight></codeline>
<codeline lineno="5483"><highlight class="normal"></highlight></codeline>
<codeline lineno="5484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spectating<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds<sp/>=<sp/><ref refid="classid_bounds" kindref="compound">idBounds</ref>(<sp/>vec3_origin<sp/>).Expand(<sp/>pm_spectatebbox.GetFloat()<sp/>*<sp/>0.5f<sp/>);</highlight></codeline>
<codeline lineno="5486"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds[0].Set(<sp/>-pm_bboxwidth.GetFloat()<sp/>*<sp/>0.5f,<sp/>-pm_bboxwidth.GetFloat()<sp/>*<sp/>0.5f,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="5488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds[1].Set(<sp/>pm_bboxwidth.GetFloat()<sp/>*<sp/>0.5f,<sp/>pm_bboxwidth.GetFloat()<sp/>*<sp/>0.5f,<sp/>pm_normalheight.GetFloat()<sp/>);</highlight></codeline>
<codeline lineno="5489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>origin<sp/>of<sp/>the<sp/>clip<sp/>model<sp/>needs<sp/>to<sp/>be<sp/>set<sp/>before<sp/>calling<sp/>SetClipModel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise<sp/>our<sp/>physics<sp/>object&apos;s<sp/>current<sp/>origin<sp/>value<sp/>gets<sp/>reset<sp/>to<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5492"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_clip_model" kindref="compound">idClipModel</ref><sp/>*newClip;</highlight></codeline>
<codeline lineno="5493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pm_usecylinder.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newClip<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classid_clip_model" kindref="compound">idClipModel</ref>(<sp/><ref refid="classid_trace_model" kindref="compound">idTraceModel</ref>(<sp/>bounds,<sp/>8<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newClip-&gt;Translate(<sp/>physicsObj.PlayerGetOrigin()<sp/>);</highlight></codeline>
<codeline lineno="5496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsObj.SetClipModel(<sp/>newClip,<sp/>1.0f<sp/>);</highlight></codeline>
<codeline lineno="5497"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newClip<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classid_clip_model" kindref="compound">idClipModel</ref>(<sp/><ref refid="classid_trace_model" kindref="compound">idTraceModel</ref>(<sp/>bounds<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newClip-&gt;Translate(<sp/>physicsObj.PlayerGetOrigin()<sp/>);</highlight></codeline>
<codeline lineno="5500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsObj.SetClipModel(<sp/>newClip,<sp/>1.0f<sp/>);</highlight></codeline>
<codeline lineno="5501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5503"><highlight class="normal"></highlight></codeline>
<codeline lineno="5504"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5505"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5506"><highlight class="comment">idPlayer::UseVehicle</highlight></codeline>
<codeline lineno="5507"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5508"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5509"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::UseVehicle(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5510"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtrace__s" kindref="compound">trace_t</ref><sp/>trace;</highlight></codeline>
<codeline lineno="5511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>start,<sp/>end;</highlight></codeline>
<codeline lineno="5512"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*ent;</highlight></codeline>
<codeline lineno="5513"><highlight class="normal"></highlight></codeline>
<codeline lineno="5514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>GetBindMaster()<sp/>&amp;&amp;<sp/>GetBindMaster()-&gt;IsType(<sp/>idAFEntity_Vehicle::Type<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Show();</highlight></codeline>
<codeline lineno="5516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classid_a_f_entity___vehicle" kindref="compound">idAFEntity_Vehicle</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(GetBindMaster())-&gt;Use(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5517"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>GetEyePosition();</highlight></codeline>
<codeline lineno="5519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>start<sp/>+<sp/>viewAngles.ToForward()<sp/>*<sp/>80.0f;</highlight></codeline>
<codeline lineno="5520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.clip.TracePoint(<sp/>trace,<sp/>start,<sp/>end,<sp/>MASK_SHOT_RENDERMODEL,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>trace.fraction<sp/>&lt;<sp/>1.0f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent<sp/>=<sp/>gameLocal.entities[<sp/>trace.c.entityNum<sp/>];</highlight></codeline>
<codeline lineno="5523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ent<sp/>&amp;&amp;<sp/>ent-&gt;IsType(<sp/>idAFEntity_Vehicle::Type<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hide();</highlight></codeline>
<codeline lineno="5525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classid_a_f_entity___vehicle" kindref="compound">idAFEntity_Vehicle</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ent)-&gt;Use(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5528"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5529"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5530"><highlight class="normal"></highlight></codeline>
<codeline lineno="5531"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5532"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5533"><highlight class="comment">idPlayer::PerformImpulse</highlight></codeline>
<codeline lineno="5534"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5535"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5536"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::PerformImpulse(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>impulse<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5537"><highlight class="normal"></highlight></codeline>
<codeline lineno="5538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isClient<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_bit_msg" kindref="compound">idBitMsg</ref><sp/><sp/><sp/><sp/>msg;</highlight></codeline>
<codeline lineno="5540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgBuf[MAX_EVENT_PARAM_SIZE];</highlight></codeline>
<codeline lineno="5541"><highlight class="normal"></highlight></codeline>
<codeline lineno="5542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>entityNumber<sp/>==<sp/>gameLocal.localClientNum<sp/>);</highlight></codeline>
<codeline lineno="5543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.Init(<sp/>msgBuf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>msgBuf<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.BeginWriting();</highlight></codeline>
<codeline lineno="5545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.WriteBits(<sp/>impulse,<sp/>6<sp/>);</highlight></codeline>
<codeline lineno="5546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClientSendEvent(<sp/>EVENT_IMPULSE,<sp/>&amp;msg<sp/>);</highlight></codeline>
<codeline lineno="5547"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5548"><highlight class="normal"></highlight></codeline>
<codeline lineno="5549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>impulse<sp/>&gt;=<sp/>IMPULSE_0<sp/>&amp;&amp;<sp/>impulse<sp/>&lt;=<sp/>IMPULSE_12<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SelectWeapon(<sp/>impulse,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5552"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5553"><highlight class="normal"></highlight></codeline>
<codeline lineno="5554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>impulse<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IMPULSE_13:<sp/>{</highlight></codeline>
<codeline lineno="5556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reload();</highlight></codeline>
<codeline lineno="5557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IMPULSE_14:<sp/>{</highlight></codeline>
<codeline lineno="5560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NextWeapon();</highlight></codeline>
<codeline lineno="5561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IMPULSE_15:<sp/>{</highlight></codeline>
<codeline lineno="5564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrevWeapon();</highlight></codeline>
<codeline lineno="5565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IMPULSE_17:<sp/>{</highlight></codeline>
<codeline lineno="5568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isClient<sp/>||<sp/>entityNumber<sp/>==<sp/>gameLocal.localClientNum<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.ToggleReady();</highlight></codeline>
<codeline lineno="5570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IMPULSE_18:<sp/>{</highlight></codeline>
<codeline lineno="5574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centerView.Init(gameLocal.time,<sp/>200,<sp/>viewAngles.pitch,<sp/>0);</highlight></codeline>
<codeline lineno="5575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IMPULSE_19:<sp/>{</highlight></codeline>
<codeline lineno="5578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>we&apos;re<sp/>not<sp/>in<sp/>single<sp/>player,<sp/>IMPULSE_19<sp/>is<sp/>used<sp/>for<sp/>showScores</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise<sp/>it<sp/>opens<sp/>the<sp/>pda</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.isMultiplayer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>objectiveSystemOpen<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TogglePDA();</highlight></codeline>
<codeline lineno="5583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weapon_pda<sp/>&gt;=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SelectWeapon(<sp/>weapon_pda,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IMPULSE_20:<sp/>{</highlight></codeline>
<codeline lineno="5590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isClient<sp/>||<sp/>entityNumber<sp/>==<sp/>gameLocal.localClientNum<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.ToggleTeam();</highlight></codeline>
<codeline lineno="5592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IMPULSE_22:<sp/>{</highlight></codeline>
<codeline lineno="5596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isClient<sp/>||<sp/>entityNumber<sp/>==<sp/>gameLocal.localClientNum<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.ToggleSpectate();</highlight></codeline>
<codeline lineno="5598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IMPULSE_28:<sp/>{</highlight></codeline>
<codeline lineno="5602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isClient<sp/>||<sp/>entityNumber<sp/>==<sp/>gameLocal.localClientNum<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.CastVote(<sp/>gameLocal.localClientNum,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IMPULSE_29:<sp/>{</highlight></codeline>
<codeline lineno="5608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isClient<sp/>||<sp/>entityNumber<sp/>==<sp/>gameLocal.localClientNum<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.CastVote(<sp/>gameLocal.localClientNum,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IMPULSE_40:<sp/>{</highlight></codeline>
<codeline lineno="5614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UseVehicle();</highlight></codeline>
<codeline lineno="5615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5617"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="5618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5619"><highlight class="normal"></highlight></codeline>
<codeline lineno="5620"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idPlayer::HandleESC(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.inCinematic<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SkipCinematic();</highlight></codeline>
<codeline lineno="5623"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5624"><highlight class="normal"></highlight></codeline>
<codeline lineno="5625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>objectiveSystemOpen<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TogglePDA();</highlight></codeline>
<codeline lineno="5627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5628"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5629"><highlight class="normal"></highlight></codeline>
<codeline lineno="5630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5631"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5632"><highlight class="normal"></highlight></codeline>
<codeline lineno="5633"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idPlayer::SkipCinematic(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5634"><highlight class="normal"><sp/><sp/><sp/><sp/>StartSound(<sp/></highlight><highlight class="stringliteral">&quot;snd_skipcinematic&quot;</highlight><highlight class="normal">,<sp/>SND_CHANNEL_ANY,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="5635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gameLocal.SkipCinematic();</highlight></codeline>
<codeline lineno="5636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5637"><highlight class="normal"></highlight></codeline>
<codeline lineno="5638"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5639"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5640"><highlight class="comment">idPlayer::EvaluateControls</highlight></codeline>
<codeline lineno="5641"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5642"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5643"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::EvaluateControls(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>respawning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&lt;=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>gameLocal.time<sp/>&gt;<sp/>minRespawnTime<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>usercmd.buttons<sp/>&amp;<sp/>BUTTON_ATTACK<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forceRespawn<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.time<sp/>&gt;<sp/>maxRespawnTime<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forceRespawn<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5652"><highlight class="normal"></highlight></codeline>
<codeline lineno="5653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>MP,<sp/>idMultiplayerGame<sp/>decides<sp/>spawns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>forceRespawn<sp/>&amp;&amp;<sp/>!gameLocal.isMultiplayer<sp/>&amp;&amp;<sp/>!g_testDeath.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>single<sp/>player,<sp/>we<sp/>let<sp/>the<sp/>session<sp/>handle<sp/>restarting<sp/>the<sp/>level<sp/>or<sp/>loading<sp/>a<sp/>game</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.sessionCommand<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;died&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5657"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5658"><highlight class="normal"></highlight></codeline>
<codeline lineno="5659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>usercmd.flags<sp/>&amp;<sp/>UCF_IMPULSE_SEQUENCE<sp/>)<sp/>!=<sp/>(<sp/>oldFlags<sp/>&amp;<sp/>UCF_IMPULSE_SEQUENCE<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PerformImpulse(<sp/>usercmd.impulse<sp/>);</highlight></codeline>
<codeline lineno="5661"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5662"><highlight class="normal"></highlight></codeline>
<codeline lineno="5663"><highlight class="normal"><sp/><sp/><sp/><sp/>scoreBoardOpen<sp/>=<sp/>(<sp/>(<sp/>usercmd.buttons<sp/>&amp;<sp/>BUTTON_SCORES<sp/>)<sp/>!=<sp/>0<sp/>||<sp/>forceScoreBoard<sp/>);</highlight></codeline>
<codeline lineno="5664"><highlight class="normal"></highlight></codeline>
<codeline lineno="5665"><highlight class="normal"><sp/><sp/><sp/><sp/>oldFlags<sp/>=<sp/>usercmd.flags;</highlight></codeline>
<codeline lineno="5666"><highlight class="normal"></highlight></codeline>
<codeline lineno="5667"><highlight class="normal"><sp/><sp/><sp/><sp/>AdjustSpeed();</highlight></codeline>
<codeline lineno="5668"><highlight class="normal"></highlight></codeline>
<codeline lineno="5669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>viewangles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5670"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateViewAngles();</highlight></codeline>
<codeline lineno="5671"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5672"><highlight class="normal"></highlight></codeline>
<codeline lineno="5673"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5674"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5675"><highlight class="comment">idPlayer::AdjustSpeed</highlight></codeline>
<codeline lineno="5676"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5677"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5678"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::AdjustSpeed(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>speed;</highlight></codeline>
<codeline lineno="5680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rate;</highlight></codeline>
<codeline lineno="5681"><highlight class="normal"></highlight></codeline>
<codeline lineno="5682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spectating<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>speed<sp/>=<sp/>pm_spectatespeed.GetFloat();</highlight></codeline>
<codeline lineno="5684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bobFrac<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="5685"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>noclip<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>speed<sp/>=<sp/>pm_noclipspeed.GetFloat();</highlight></codeline>
<codeline lineno="5687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bobFrac<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="5688"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!physicsObj.OnLadder()<sp/>&amp;&amp;<sp/>(<sp/>usercmd.buttons<sp/>&amp;<sp/>BUTTON_RUN<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>usercmd.forwardmove<sp/>||<sp/>usercmd.rightmove<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>usercmd.upmove<sp/>&gt;=<sp/>0<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.isMultiplayer<sp/>&amp;&amp;<sp/>!physicsObj.IsCrouching()<sp/>&amp;&amp;<sp/>!PowerUpActive(<sp/>ADRENALINE<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stamina<sp/>-=<sp/>MS2SEC(<sp/>gameLocal.msec<sp/>);</highlight></codeline>
<codeline lineno="5691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>stamina<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stamina<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>!pm_stamina.GetFloat()<sp/>)<sp/>||<sp/>(<sp/>stamina<sp/>&gt;<sp/>pm_staminathreshold.GetFloat()<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bobFrac<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="5697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pm_staminathreshold.GetFloat()<sp/>&lt;=<sp/>0.0001f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bobFrac<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="5699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bobFrac<sp/>=<sp/>stamina<sp/>/<sp/>pm_staminathreshold.GetFloat();</highlight></codeline>
<codeline lineno="5701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>speed<sp/>=<sp/>pm_walkspeed.GetFloat()<sp/>*<sp/>(<sp/>1.0f<sp/>-<sp/>bobFrac<sp/>)<sp/>+<sp/>pm_runspeed.GetFloat()<sp/>*<sp/>bobFrac;</highlight></codeline>
<codeline lineno="5703"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rate<sp/>=<sp/>pm_staminarate.GetFloat();</highlight></codeline>
<codeline lineno="5705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>increase<sp/>25%<sp/>faster<sp/>when<sp/>not<sp/>moving</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>usercmd.forwardmove<sp/>==<sp/>0<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>usercmd.rightmove<sp/>==<sp/>0<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>!physicsObj.OnLadder()<sp/>||<sp/>(<sp/>usercmd.upmove<sp/>==<sp/>0<sp/>)<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rate<sp/>*=<sp/>1.25f;</highlight></codeline>
<codeline lineno="5709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5710"><highlight class="normal"></highlight></codeline>
<codeline lineno="5711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stamina<sp/>+=<sp/>rate<sp/>*<sp/>MS2SEC(<sp/>gameLocal.msec<sp/>);</highlight></codeline>
<codeline lineno="5712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>stamina<sp/>&gt;<sp/>pm_stamina.GetFloat()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stamina<sp/>=<sp/>pm_stamina.GetFloat();</highlight></codeline>
<codeline lineno="5714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>speed<sp/>=<sp/>pm_walkspeed.GetFloat();</highlight></codeline>
<codeline lineno="5716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bobFrac<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="5717"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5718"><highlight class="normal"></highlight></codeline>
<codeline lineno="5719"><highlight class="normal"><sp/><sp/><sp/><sp/>speed<sp/>*=<sp/>PowerUpModifier(SPEED);</highlight></codeline>
<codeline lineno="5720"><highlight class="normal"></highlight></codeline>
<codeline lineno="5721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>influenceActive<sp/>==<sp/>INFLUENCE_LEVEL3<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>speed<sp/>*=<sp/>0.33f;</highlight></codeline>
<codeline lineno="5723"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5724"><highlight class="normal"></highlight></codeline>
<codeline lineno="5725"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.SetSpeed(<sp/>speed,<sp/>pm_crouchspeed.GetFloat()<sp/>);</highlight></codeline>
<codeline lineno="5726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5727"><highlight class="normal"></highlight></codeline>
<codeline lineno="5728"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5729"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5730"><highlight class="comment">idPlayer::AdjustBodyAngles</highlight></codeline>
<codeline lineno="5731"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5732"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5733"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::AdjustBodyAngles(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5734"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/><sp/>lookAxis;</highlight></codeline>
<codeline lineno="5735"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/><sp/>legsAxis;</highlight></codeline>
<codeline lineno="5736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>blend;</highlight></codeline>
<codeline lineno="5737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>diff;</highlight></codeline>
<codeline lineno="5738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>frac;</highlight></codeline>
<codeline lineno="5739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>upBlend;</highlight></codeline>
<codeline lineno="5740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>forwardBlend;</highlight></codeline>
<codeline lineno="5741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>downBlend;</highlight></codeline>
<codeline lineno="5742"><highlight class="normal"></highlight></codeline>
<codeline lineno="5743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5745"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5746"><highlight class="normal"></highlight></codeline>
<codeline lineno="5747"><highlight class="normal"><sp/><sp/><sp/><sp/>blend<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5748"><highlight class="normal"></highlight></codeline>
<codeline lineno="5749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!physicsObj.HasGroundContacts()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idealLegsYaw<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="5751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legsForward<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5752"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>usercmd.forwardmove<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idealLegsYaw<sp/>=<sp/>idMath::AngleNormalize180(<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(<sp/>-usercmd.forwardmove,<sp/>usercmd.rightmove,<sp/>0.0f<sp/>).ToYaw()<sp/>);</highlight></codeline>
<codeline lineno="5754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legsForward<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5755"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>usercmd.forwardmove<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idealLegsYaw<sp/>=<sp/>idMath::AngleNormalize180(<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(<sp/>usercmd.forwardmove,<sp/>-usercmd.rightmove,<sp/>0.0f<sp/>).ToYaw()<sp/>);</highlight></codeline>
<codeline lineno="5757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legsForward<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5758"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>usercmd.rightmove<sp/>!=<sp/>0<sp/>)<sp/>&amp;&amp;<sp/>physicsObj.IsCrouching()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!legsForward<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idealLegsYaw<sp/>=<sp/>idMath::AngleNormalize180(<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(<sp/>idMath::Abs(<sp/>usercmd.rightmove<sp/>),<sp/>usercmd.rightmove,<sp/>0.0f<sp/>).ToYaw()<sp/>);</highlight></codeline>
<codeline lineno="5761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idealLegsYaw<sp/>=<sp/>idMath::AngleNormalize180(<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(<sp/>idMath::Abs(<sp/>usercmd.rightmove<sp/>),<sp/>-usercmd.rightmove,<sp/>0.0f<sp/>).ToYaw()<sp/>);</highlight></codeline>
<codeline lineno="5763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5764"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>usercmd.rightmove<sp/>!=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idealLegsYaw<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="5766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legsForward<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5767"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legsForward<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff<sp/>=<sp/>idMath::Fabs(<sp/>idealLegsYaw<sp/>-<sp/>legsYaw<sp/>);</highlight></codeline>
<codeline lineno="5770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idealLegsYaw<sp/>=<sp/>idealLegsYaw<sp/>-<sp/>idMath::AngleNormalize180(<sp/>viewAngles.yaw<sp/>-<sp/>oldViewYaw<sp/>);</highlight></codeline>
<codeline lineno="5771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>diff<sp/>&lt;<sp/>0.1f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legsYaw<sp/>=<sp/>idealLegsYaw;</highlight></codeline>
<codeline lineno="5773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blend<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5775"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5776"><highlight class="normal"></highlight></codeline>
<codeline lineno="5777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!physicsObj.IsCrouching()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legsForward<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5779"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5780"><highlight class="normal"></highlight></codeline>
<codeline lineno="5781"><highlight class="normal"><sp/><sp/><sp/><sp/>oldViewYaw<sp/>=<sp/>viewAngles.yaw;</highlight></codeline>
<codeline lineno="5782"><highlight class="normal"></highlight></codeline>
<codeline lineno="5783"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_TURN_LEFT<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5784"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_TURN_RIGHT<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>idealLegsYaw<sp/>&lt;<sp/>-45.0f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idealLegsYaw<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_TURN_RIGHT<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blend<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5789"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>idealLegsYaw<sp/>&gt;<sp/>45.0f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idealLegsYaw<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_TURN_LEFT<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blend<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5793"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5794"><highlight class="normal"></highlight></codeline>
<codeline lineno="5795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>blend<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legsYaw<sp/>=<sp/>legsYaw<sp/>*<sp/>0.9f<sp/>+<sp/>idealLegsYaw<sp/>*<sp/>0.1f;</highlight></codeline>
<codeline lineno="5797"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5798"><highlight class="normal"><sp/><sp/><sp/><sp/>legsAxis<sp/>=<sp/><ref refid="classid_angles" kindref="compound">idAngles</ref>(<sp/>0.0f,<sp/>legsYaw,<sp/>0.0f<sp/>).ToMat3();</highlight></codeline>
<codeline lineno="5799"><highlight class="normal"><sp/><sp/><sp/><sp/>animator.SetJointAxis(<sp/>hipJoint,<sp/>JOINTMOD_WORLD,<sp/>legsAxis<sp/>);</highlight></codeline>
<codeline lineno="5800"><highlight class="normal"></highlight></codeline>
<codeline lineno="5801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>the<sp/>blending<sp/>between<sp/>down,<sp/>straight,<sp/>and<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5802"><highlight class="normal"><sp/><sp/><sp/><sp/>frac<sp/>=<sp/>viewAngles.pitch<sp/>/<sp/>90.0f;</highlight></codeline>
<codeline lineno="5803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>frac<sp/>&gt;<sp/>0.0f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>downBlend<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>frac;</highlight></codeline>
<codeline lineno="5805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forwardBlend<sp/><sp/><sp/><sp/>=<sp/>1.0f<sp/>-<sp/>frac;</highlight></codeline>
<codeline lineno="5806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upBlend<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="5807"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>downBlend<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="5809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forwardBlend<sp/><sp/><sp/><sp/>=<sp/>1.0f<sp/>+<sp/>frac;</highlight></codeline>
<codeline lineno="5810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upBlend<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-frac;</highlight></codeline>
<codeline lineno="5811"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5812"><highlight class="normal"></highlight></codeline>
<codeline lineno="5813"><highlight class="normal"><sp/><sp/><sp/><sp/>animator.CurrentAnim(<sp/>ANIMCHANNEL_TORSO<sp/>)-&gt;SetSyncedAnimWeight(<sp/>0,<sp/>downBlend<sp/>);</highlight></codeline>
<codeline lineno="5814"><highlight class="normal"><sp/><sp/><sp/><sp/>animator.CurrentAnim(<sp/>ANIMCHANNEL_TORSO<sp/>)-&gt;SetSyncedAnimWeight(<sp/>1,<sp/>forwardBlend<sp/>);</highlight></codeline>
<codeline lineno="5815"><highlight class="normal"><sp/><sp/><sp/><sp/>animator.CurrentAnim(<sp/>ANIMCHANNEL_TORSO<sp/>)-&gt;SetSyncedAnimWeight(<sp/>2,<sp/>upBlend<sp/>);</highlight></codeline>
<codeline lineno="5816"><highlight class="normal"></highlight></codeline>
<codeline lineno="5817"><highlight class="normal"><sp/><sp/><sp/><sp/>animator.CurrentAnim(<sp/>ANIMCHANNEL_LEGS<sp/>)-&gt;SetSyncedAnimWeight(<sp/>0,<sp/>downBlend<sp/>);</highlight></codeline>
<codeline lineno="5818"><highlight class="normal"><sp/><sp/><sp/><sp/>animator.CurrentAnim(<sp/>ANIMCHANNEL_LEGS<sp/>)-&gt;SetSyncedAnimWeight(<sp/>1,<sp/>forwardBlend<sp/>);</highlight></codeline>
<codeline lineno="5819"><highlight class="normal"><sp/><sp/><sp/><sp/>animator.CurrentAnim(<sp/>ANIMCHANNEL_LEGS<sp/>)-&gt;SetSyncedAnimWeight(<sp/>2,<sp/>upBlend<sp/>);</highlight></codeline>
<codeline lineno="5820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5821"><highlight class="normal"></highlight></codeline>
<codeline lineno="5822"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5823"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5824"><highlight class="comment">idPlayer::InitAASLocation</highlight></codeline>
<codeline lineno="5825"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5826"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5827"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::InitAASLocation(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="5829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>num;</highlight></codeline>
<codeline lineno="5830"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/>size;</highlight></codeline>
<codeline lineno="5831"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_bounds" kindref="compound">idBounds</ref><sp/>bounds;</highlight></codeline>
<codeline lineno="5832"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_a_a_s" kindref="compound">idAAS</ref><sp/><sp/><sp/>*aas;</highlight></codeline>
<codeline lineno="5833"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/>origin;</highlight></codeline>
<codeline lineno="5834"><highlight class="normal"></highlight></codeline>
<codeline lineno="5835"><highlight class="normal"><sp/><sp/><sp/><sp/>GetFloorPos(<sp/>64.0f,<sp/>origin<sp/>);</highlight></codeline>
<codeline lineno="5836"><highlight class="normal"></highlight></codeline>
<codeline lineno="5837"><highlight class="normal"><sp/><sp/><sp/><sp/>num<sp/>=<sp/>gameLocal.NumAAS();</highlight></codeline>
<codeline lineno="5838"><highlight class="normal"><sp/><sp/><sp/><sp/>aasLocation.SetGranularity(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="5839"><highlight class="normal"><sp/><sp/><sp/><sp/>aasLocation.SetNum(<sp/>num<sp/>);<sp/><sp/></highlight></codeline>
<codeline lineno="5840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>aasLocation.Num();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aasLocation[<sp/>i<sp/>].areaNum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aasLocation[<sp/>i<sp/>].pos<sp/>=<sp/>origin;</highlight></codeline>
<codeline lineno="5843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aas<sp/>=<sp/>gameLocal.GetAAS(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="5844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>aas<sp/>&amp;&amp;<sp/>aas-&gt;GetSettings()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>aas-&gt;GetSettings()-&gt;boundingBoxes[0][1];</highlight></codeline>
<codeline lineno="5846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds[0]<sp/>=<sp/>-size;</highlight></codeline>
<codeline lineno="5847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size.z<sp/>=<sp/>32.0f;</highlight></codeline>
<codeline lineno="5848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds[1]<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="5849"><highlight class="normal"></highlight></codeline>
<codeline lineno="5850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aasLocation[<sp/>i<sp/>].areaNum<sp/>=<sp/>aas-&gt;PointReachableAreaNum(<sp/>origin,<sp/>bounds,<sp/>AREA_REACHABLE_WALK<sp/>);</highlight></codeline>
<codeline lineno="5851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5852"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5853"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5854"><highlight class="normal"></highlight></codeline>
<codeline lineno="5855"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5856"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5857"><highlight class="comment">idPlayer::SetAASLocation</highlight></codeline>
<codeline lineno="5858"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5859"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5860"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::SetAASLocation(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="5862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>areaNum;</highlight></codeline>
<codeline lineno="5863"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/>size;</highlight></codeline>
<codeline lineno="5864"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_bounds" kindref="compound">idBounds</ref><sp/>bounds;</highlight></codeline>
<codeline lineno="5865"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_a_a_s" kindref="compound">idAAS</ref><sp/><sp/><sp/>*aas;</highlight></codeline>
<codeline lineno="5866"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/>origin;</highlight></codeline>
<codeline lineno="5867"><highlight class="normal"></highlight></codeline>
<codeline lineno="5868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!GetFloorPos(<sp/>64.0f,<sp/>origin<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5870"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>aasLocation.Num();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aas<sp/>=<sp/>gameLocal.GetAAS(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="5874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!aas<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5877"><highlight class="normal"></highlight></codeline>
<codeline lineno="5878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>aas-&gt;GetSettings()-&gt;boundingBoxes[0][1];</highlight></codeline>
<codeline lineno="5879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds[0]<sp/>=<sp/>-size;</highlight></codeline>
<codeline lineno="5880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size.z<sp/>=<sp/>32.0f;</highlight></codeline>
<codeline lineno="5881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds[1]<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="5882"><highlight class="normal"></highlight></codeline>
<codeline lineno="5883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>areaNum<sp/>=<sp/>aas-&gt;PointReachableAreaNum(<sp/>origin,<sp/>bounds,<sp/>AREA_REACHABLE_WALK<sp/>);</highlight></codeline>
<codeline lineno="5884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>areaNum<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aasLocation[<sp/>i<sp/>].pos<sp/>=<sp/>origin;</highlight></codeline>
<codeline lineno="5886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aasLocation[<sp/>i<sp/>].areaNum<sp/>=<sp/>areaNum;</highlight></codeline>
<codeline lineno="5887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5888"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5889"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5890"><highlight class="normal"></highlight></codeline>
<codeline lineno="5891"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5892"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5893"><highlight class="comment">idPlayer::GetAASLocation</highlight></codeline>
<codeline lineno="5894"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5895"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5896"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::GetAASLocation(<sp/><ref refid="classid_a_a_s" kindref="compound">idAAS</ref><sp/>*aas,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;areaNum<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="5898"><highlight class="normal"></highlight></codeline>
<codeline lineno="5899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>aas<sp/>!=<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>aasLocation.Num();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>aas<sp/>==<sp/>gameLocal.GetAAS(<sp/>i<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>areaNum<sp/>=<sp/>aasLocation[<sp/>i<sp/>].areaNum;</highlight></codeline>
<codeline lineno="5903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>aasLocation[<sp/>i<sp/>].pos;</highlight></codeline>
<codeline lineno="5904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5907"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5908"><highlight class="normal"></highlight></codeline>
<codeline lineno="5909"><highlight class="normal"><sp/><sp/><sp/><sp/>areaNum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5910"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>physicsObj.GetOrigin();</highlight></codeline>
<codeline lineno="5911"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5912"><highlight class="normal"></highlight></codeline>
<codeline lineno="5913"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5914"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5915"><highlight class="comment">idPlayer::Move</highlight></codeline>
<codeline lineno="5916"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="5917"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5918"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Move(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>newEyeOffset;</highlight></codeline>
<codeline lineno="5920"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>oldOrigin;</highlight></codeline>
<codeline lineno="5921"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>oldVelocity;</highlight></codeline>
<codeline lineno="5922"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>pushVelocity;</highlight></codeline>
<codeline lineno="5923"><highlight class="normal"></highlight></codeline>
<codeline lineno="5924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>old<sp/>origin<sp/>and<sp/>velocity<sp/>for<sp/>crashlanding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5925"><highlight class="normal"><sp/><sp/><sp/><sp/>oldOrigin<sp/>=<sp/>physicsObj.GetOrigin();</highlight></codeline>
<codeline lineno="5926"><highlight class="normal"><sp/><sp/><sp/><sp/>oldVelocity<sp/>=<sp/>physicsObj.GetLinearVelocity();</highlight></codeline>
<codeline lineno="5927"><highlight class="normal"><sp/><sp/><sp/><sp/>pushVelocity<sp/>=<sp/>physicsObj.GetPushedLinearVelocity();</highlight></codeline>
<codeline lineno="5928"><highlight class="normal"></highlight></codeline>
<codeline lineno="5929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>physics<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5930"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.SetMaxStepHeight(<sp/>pm_stepsize.GetFloat()<sp/>);</highlight></codeline>
<codeline lineno="5931"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.SetMaxJumpHeight(<sp/>pm_jumpheight.GetFloat()<sp/>);</highlight></codeline>
<codeline lineno="5932"><highlight class="normal"></highlight></codeline>
<codeline lineno="5933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>noclip<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsObj.SetContents(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="5935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsObj.SetMovementType(<sp/>PM_NOCLIP<sp/>);</highlight></codeline>
<codeline lineno="5936"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spectating<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsObj.SetContents(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="5938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsObj.SetMovementType(<sp/>PM_SPECTATOR<sp/>);</highlight></codeline>
<codeline lineno="5939"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&lt;=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsObj.SetContents(<sp/>CONTENTS_CORPSE<sp/>|<sp/>CONTENTS_MONSTERCLIP<sp/>);</highlight></codeline>
<codeline lineno="5941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsObj.SetMovementType(<sp/>PM_DEAD<sp/>);</highlight></codeline>
<codeline lineno="5942"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.inCinematic<sp/>||<sp/>gameLocal.GetCamera()<sp/>||<sp/>privateCameraView<sp/>||<sp/>(<sp/>influenceActive<sp/>==<sp/>INFLUENCE_LEVEL2<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsObj.SetContents(<sp/>CONTENTS_BODY<sp/>);</highlight></codeline>
<codeline lineno="5944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsObj.SetMovementType(<sp/>PM_FREEZE<sp/>);</highlight></codeline>
<codeline lineno="5945"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsObj.SetContents(<sp/>CONTENTS_BODY<sp/>);</highlight></codeline>
<codeline lineno="5947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsObj.SetMovementType(<sp/>PM_NORMAL<sp/>);</highlight></codeline>
<codeline lineno="5948"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5949"><highlight class="normal"></highlight></codeline>
<codeline lineno="5950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spectating<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsObj.SetClipMask(<sp/>MASK_DEADSOLID<sp/>);</highlight></codeline>
<codeline lineno="5952"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&lt;=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsObj.SetClipMask(<sp/>MASK_DEADSOLID<sp/>);</highlight></codeline>
<codeline lineno="5954"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsObj.SetClipMask(<sp/>MASK_PLAYERSOLID<sp/>);</highlight></codeline>
<codeline lineno="5956"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5957"><highlight class="normal"></highlight></codeline>
<codeline lineno="5958"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.SetDebugLevel(<sp/>g_debugMove.GetBool()<sp/>);</highlight></codeline>
<codeline lineno="5959"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.SetPlayerInput(<sp/>usercmd,<sp/>viewAngles<sp/>);</highlight></codeline>
<codeline lineno="5960"><highlight class="normal"></highlight></codeline>
<codeline lineno="5961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>physics<sp/>gets<sp/>disabled<sp/>somehow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5962"><highlight class="normal"><sp/><sp/><sp/><sp/>BecomeActive(<sp/>TH_PHYSICS<sp/>);</highlight></codeline>
<codeline lineno="5963"><highlight class="normal"><sp/><sp/><sp/><sp/>RunPhysics();</highlight></codeline>
<codeline lineno="5964"><highlight class="normal"></highlight></codeline>
<codeline lineno="5965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>our<sp/>last<sp/>valid<sp/>AAS<sp/>location<sp/>for<sp/>the<sp/>AI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5966"><highlight class="normal"><sp/><sp/><sp/><sp/>SetAASLocation();</highlight></codeline>
<codeline lineno="5967"><highlight class="normal"></highlight></codeline>
<codeline lineno="5968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spectating<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newEyeOffset<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="5970"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&lt;=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newEyeOffset<sp/>=<sp/>pm_deadviewheight.GetFloat();</highlight></codeline>
<codeline lineno="5972"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>physicsObj.IsCrouching()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newEyeOffset<sp/>=<sp/>pm_crouchviewheight.GetFloat();</highlight></codeline>
<codeline lineno="5974"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>GetBindMaster()<sp/>&amp;&amp;<sp/>GetBindMaster()-&gt;IsType(<sp/>idAFEntity_Vehicle::Type<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newEyeOffset<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="5976"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newEyeOffset<sp/>=<sp/>pm_normalviewheight.GetFloat();</highlight></codeline>
<codeline lineno="5978"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5979"><highlight class="normal"></highlight></codeline>
<codeline lineno="5980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>EyeHeight()<sp/>!=<sp/>newEyeOffset<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spectating<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetEyeHeight(<sp/>newEyeOffset<sp/>);</highlight></codeline>
<codeline lineno="5983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>smooth<sp/>out<sp/>duck<sp/>height<sp/>changes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetEyeHeight(<sp/>EyeHeight()<sp/>*<sp/>pm_crouchrate.GetFloat()<sp/>+<sp/>newEyeOffset<sp/>*<sp/>(<sp/>1.0f<sp/>-<sp/>pm_crouchrate.GetFloat()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5987"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5988"><highlight class="normal"></highlight></codeline>
<codeline lineno="5989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>noclip<sp/>||<sp/>gameLocal.inCinematic<sp/>||<sp/>(<sp/>influenceActive<sp/>==<sp/>INFLUENCE_LEVEL2<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_CROUCH<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_ONGROUND<sp/>=<sp/>(<sp/>influenceActive<sp/>==<sp/>INFLUENCE_LEVEL2<sp/>);</highlight></codeline>
<codeline lineno="5992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_ONLADDER<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_JUMP<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5994"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_CROUCH<sp/><sp/><sp/>=<sp/>physicsObj.IsCrouching();</highlight></codeline>
<codeline lineno="5996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_ONGROUND<sp/>=<sp/>physicsObj.HasGroundContacts();</highlight></codeline>
<codeline lineno="5997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_ONLADDER<sp/>=<sp/>physicsObj.OnLadder();</highlight></codeline>
<codeline lineno="5998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_JUMP<sp/><sp/><sp/><sp/><sp/>=<sp/>physicsObj.HasJumped();</highlight></codeline>
<codeline lineno="5999"><highlight class="normal"></highlight></codeline>
<codeline lineno="6000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>we&apos;re<sp/>standing<sp/>on<sp/>top<sp/>of<sp/>a<sp/>monster<sp/>and<sp/>give<sp/>a<sp/>push<sp/>if<sp/>we<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*groundEnt<sp/>=<sp/>physicsObj.GetGroundEntity();</highlight></codeline>
<codeline lineno="6002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>groundEnt<sp/>&amp;&amp;<sp/>groundEnt-&gt;IsType(<sp/>idAI::Type<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>vel<sp/>=<sp/>physicsObj.GetLinearVelocity();</highlight></codeline>
<codeline lineno="6004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>vel.ToVec2().LengthSqr()<sp/>&lt;<sp/>0.1f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel.ToVec2()<sp/>=<sp/>physicsObj.GetOrigin().ToVec2()<sp/>-<sp/>groundEnt-&gt;GetPhysics()-&gt;GetAbsBounds().GetCenter().ToVec2();</highlight></codeline>
<codeline lineno="6006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel.ToVec2().NormalizeFast();</highlight></codeline>
<codeline lineno="6007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel.ToVec2()<sp/>*=<sp/>pm_walkspeed.GetFloat();</highlight></codeline>
<codeline lineno="6008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>give<sp/>em<sp/>a<sp/>push<sp/>in<sp/>the<sp/>direction<sp/>they&apos;re<sp/>going</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel<sp/>*=<sp/>1.1f;</highlight></codeline>
<codeline lineno="6011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsObj.SetLinearVelocity(<sp/>vel<sp/>);</highlight></codeline>
<codeline lineno="6013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6014"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6015"><highlight class="normal"></highlight></codeline>
<codeline lineno="6016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>AI_JUMP<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bounce<sp/>the<sp/>view<sp/>weapon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlogged_accel__t" kindref="compound">loggedAccel_t</ref><sp/><sp/><sp/>*acc<sp/>=<sp/>&amp;loggedAccel[currentLoggedAccel&amp;(NUM_LOGGED_ACCELS-1)];</highlight></codeline>
<codeline lineno="6019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentLoggedAccel++;</highlight></codeline>
<codeline lineno="6020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acc-&gt;time<sp/>=<sp/>gameLocal.time;</highlight></codeline>
<codeline lineno="6021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acc-&gt;dir[2]<sp/>=<sp/>200;</highlight></codeline>
<codeline lineno="6022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acc-&gt;dir[0]<sp/>=<sp/>acc-&gt;dir[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6023"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6024"><highlight class="normal"></highlight></codeline>
<codeline lineno="6025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>AI_ONLADDER<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>old_rung<sp/>=<sp/>oldOrigin.z<sp/>/<sp/>LADDER_RUNG_DISTANCE;</highlight></codeline>
<codeline lineno="6027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_rung<sp/>=<sp/>physicsObj.GetOrigin().z<sp/>/<sp/>LADDER_RUNG_DISTANCE;</highlight></codeline>
<codeline lineno="6028"><highlight class="normal"></highlight></codeline>
<codeline lineno="6029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>old_rung<sp/>!=<sp/>new_rung<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartSound(<sp/></highlight><highlight class="stringliteral">&quot;snd_stepladder&quot;</highlight><highlight class="normal">,<sp/>SND_CHANNEL_ANY,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="6031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6032"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6033"><highlight class="normal"></highlight></codeline>
<codeline lineno="6034"><highlight class="normal"><sp/><sp/><sp/><sp/>BobCycle(<sp/>pushVelocity<sp/>);</highlight></codeline>
<codeline lineno="6035"><highlight class="normal"><sp/><sp/><sp/><sp/>CrashLand(<sp/>oldOrigin,<sp/>oldVelocity<sp/>);</highlight></codeline>
<codeline lineno="6036"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6037"><highlight class="normal"></highlight></codeline>
<codeline lineno="6038"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="6039"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="6040"><highlight class="comment">idPlayer::UpdateHud</highlight></codeline>
<codeline lineno="6041"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="6042"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6043"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::UpdateHud(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6044"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*aimed;</highlight></codeline>
<codeline lineno="6045"><highlight class="normal"></highlight></codeline>
<codeline lineno="6046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6048"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6049"><highlight class="normal"></highlight></codeline>
<codeline lineno="6050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>entityNumber<sp/>!=<sp/>gameLocal.localClientNum<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6052"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6053"><highlight class="normal"></highlight></codeline>
<codeline lineno="6054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>inventory.pickupItemNames.Num();</highlight></codeline>
<codeline lineno="6055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>c<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.time<sp/>&gt;<sp/>inventory.nextItemPickup<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>inventory.nextItemPickup<sp/>&amp;&amp;<sp/>gameLocal.time<sp/>-<sp/>inventory.nextItemPickup<sp/>&gt;<sp/>2000<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.nextItemNum<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="6059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="6061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5,<sp/>i<sp/>&lt;<sp/>c;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;SetStateString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;itemtext%i&quot;</highlight><highlight class="normal">,<sp/>inventory.nextItemNum<sp/>),<sp/>inventory.pickupItemNames[0].name<sp/>);</highlight></codeline>
<codeline lineno="6063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;SetStateString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;itemicon%i&quot;</highlight><highlight class="normal">,<sp/>inventory.nextItemNum<sp/>),<sp/>inventory.pickupItemNames[0].icon<sp/>);</highlight></codeline>
<codeline lineno="6064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;itemPickup%i&quot;</highlight><highlight class="normal">,<sp/>inventory.nextItemNum++<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="6065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.pickupItemNames.RemoveIndex(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="6066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inventory.nextItemNum<sp/>==<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.onePickupTime<sp/>=<sp/>gameLocal.time;</highlight></codeline>
<codeline lineno="6068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>inventory.nextItemNum<sp/>&gt;<sp/>5<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.nextItemNum<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="6070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.nextItemPickup<sp/>=<sp/>inventory.onePickupTime<sp/>+<sp/>2000;</highlight></codeline>
<codeline lineno="6071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.nextItemPickup<sp/>=<sp/>gameLocal.time<sp/>+<sp/>400;</highlight></codeline>
<codeline lineno="6073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6076"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6077"><highlight class="normal"></highlight></codeline>
<codeline lineno="6078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.realClientTime<sp/>==<sp/>lastMPAimTime<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>MPAim<sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>gameLocal.gameType<sp/>==<sp/>GAME_TDM</highlight></codeline>
<codeline lineno="6080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>gameLocal.entities[<sp/>MPAim<sp/>]<sp/>&amp;&amp;<sp/>gameLocal.entities[<sp/>MPAim<sp/>]-&gt;IsType(<sp/>idPlayer::Type<sp/>)</highlight></codeline>
<codeline lineno="6081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>gameLocal.entities[<sp/>MPAim<sp/>]<sp/>)-&gt;team<sp/>==<sp/>team<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aimed<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>gameLocal.entities[<sp/>MPAim<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="6083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;aim_text&quot;</highlight><highlight class="normal">,<sp/>gameLocal.userInfo[<sp/>MPAim<sp/>].GetString(<sp/></highlight><highlight class="stringliteral">&quot;ui_name&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="6084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;SetStateFloat(<sp/></highlight><highlight class="stringliteral">&quot;aim_color&quot;</highlight><highlight class="normal">,<sp/>aimed-&gt;colorBarIndex<sp/>);</highlight></codeline>
<codeline lineno="6085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;aim_flash&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPAimHighlight<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPAimFadeTime<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>fade<sp/>till<sp/>loosing<sp/>focus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>MPAimHighlight<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;aim_fade&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPAimFadeTime<sp/>=<sp/>gameLocal.realClientTime;</highlight></codeline>
<codeline lineno="6091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPAimHighlight<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6093"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>MPAimFadeTime<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>!MPAimHighlight<sp/>);</highlight></codeline>
<codeline lineno="6096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.realClientTime<sp/>-<sp/>MPAimFadeTime<sp/>&gt;<sp/>2000<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPAimFadeTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6099"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6100"><highlight class="normal"></highlight></codeline>
<codeline lineno="6101"><highlight class="normal"><sp/><sp/><sp/><sp/>hud-&gt;SetStateInt(<sp/></highlight><highlight class="stringliteral">&quot;g_showProjectilePct&quot;</highlight><highlight class="normal">,<sp/>g_showProjectilePct.GetInteger()<sp/>);</highlight></codeline>
<codeline lineno="6102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>numProjectilesFired<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;projectilepct&quot;</highlight><highlight class="normal">,<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;Hit<sp/>%%<sp/>%.1f&quot;</highlight><highlight class="normal">,<sp/>(<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>numProjectileHits<sp/>/<sp/>numProjectilesFired<sp/>)<sp/>*<sp/>100<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="6104"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;projectilepct&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Hit<sp/>%<sp/>0.0&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6107"><highlight class="normal"></highlight></codeline>
<codeline lineno="6108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>isLagged<sp/>&amp;&amp;<sp/>gameLocal.isMultiplayer<sp/>&amp;&amp;<sp/>gameLocal.localClientNum<sp/>==<sp/>entityNumber<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;hudLag&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6110"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;hudLag&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6114"><highlight class="normal"></highlight></codeline>
<codeline lineno="6115"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="6116"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="6117"><highlight class="comment">idPlayer::UpdateDeathSkin</highlight></codeline>
<codeline lineno="6118"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="6119"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::UpdateDeathSkin(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>state_hitch<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!(<sp/>gameLocal.isMultiplayer<sp/>||<sp/>g_testDeath.GetBool()<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&lt;=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!doingDeathSkin<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deathClearContentsTime<sp/>=<sp/>spawnArgs.GetInt(<sp/></highlight><highlight class="stringliteral">&quot;deathSkinTime&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doingDeathSkin<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderEntity.noShadow<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>state_hitch<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderEntity.shaderParms[<sp/>SHADERPARM_TIME_OF_DEATH<sp/>]<sp/>=<sp/>gameLocal.time<sp/>*<sp/>0.001f<sp/>-<sp/>2.0f;</highlight></codeline>
<codeline lineno="6131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderEntity.shaderParms[<sp/>SHADERPARM_TIME_OF_DEATH<sp/>]<sp/>=<sp/>gameLocal.time<sp/>*<sp/>0.001f;</highlight></codeline>
<codeline lineno="6133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateVisuals();</highlight></codeline>
<codeline lineno="6135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6136"><highlight class="normal"></highlight></codeline>
<codeline lineno="6137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wait<sp/>a<sp/>bit<sp/>before<sp/>switching<sp/>off<sp/>the<sp/>content</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>deathClearContentsTime<sp/>&amp;&amp;<sp/>gameLocal.time<sp/>&gt;<sp/>deathClearContentsTime<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetCombatContents(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deathClearContentsTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6142"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderEntity.noShadow<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderEntity.shaderParms[<sp/>SHADERPARM_TIME_OF_DEATH<sp/>]<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="6145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateVisuals();</highlight></codeline>
<codeline lineno="6146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doingDeathSkin<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6149"><highlight class="normal"></highlight></codeline>
<codeline lineno="6150"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="6151"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="6152"><highlight class="comment">idPlayer::StartFxOnBone</highlight></codeline>
<codeline lineno="6153"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="6154"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::StartFxOnBone(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bone<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>offset;</highlight></codeline>
<codeline lineno="6157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/>axis;</highlight></codeline>
<codeline lineno="6158"><highlight class="normal"><sp/><sp/><sp/><sp/>jointHandle_t<sp/>jointHandle<sp/>=<sp/>GetAnimator()-&gt;GetJointHandle(<sp/>bone<sp/>);</highlight></codeline>
<codeline lineno="6159"><highlight class="normal"></highlight></codeline>
<codeline lineno="6160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>jointHandle<sp/>==<sp/>INVALID_JOINT<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Printf(<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>find<sp/>bone<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>bone<sp/>);</highlight></codeline>
<codeline lineno="6162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6164"><highlight class="normal"></highlight></codeline>
<codeline lineno="6165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>GetAnimator()-&gt;GetJointTransform(<sp/>jointHandle,<sp/>gameLocal.time,<sp/>offset,<sp/>axis<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>GetPhysics()-&gt;GetOrigin()<sp/>+<sp/>offset<sp/>*<sp/>GetPhysics()-&gt;GetAxis();</highlight></codeline>
<codeline lineno="6167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axis<sp/>=<sp/>axis<sp/>*<sp/>GetPhysics()-&gt;GetAxis();</highlight></codeline>
<codeline lineno="6168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6169"><highlight class="normal"></highlight></codeline>
<codeline lineno="6170"><highlight class="normal"><sp/><sp/><sp/><sp/>idEntityFx::StartFx(<sp/>fx,<sp/>&amp;offset,<sp/>&amp;axis,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6172"><highlight class="normal"></highlight></codeline>
<codeline lineno="6173"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="6174"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="6175"><highlight class="comment">idPlayer::Think</highlight></codeline>
<codeline lineno="6176"><highlight class="comment"></highlight></codeline>
<codeline lineno="6177"><highlight class="comment">Called<sp/>every<sp/>tic<sp/>for<sp/>each<sp/>player</highlight></codeline>
<codeline lineno="6178"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="6179"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6180"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Think(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrender_entity__s" kindref="compound">renderEntity_t</ref><sp/>*headRenderEnt;</highlight></codeline>
<codeline lineno="6182"><highlight class="normal"></highlight></codeline>
<codeline lineno="6183"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdatePlayerIcons();</highlight></codeline>
<codeline lineno="6184"><highlight class="normal"></highlight></codeline>
<codeline lineno="6185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>latch<sp/>button<sp/>actions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6186"><highlight class="normal"><sp/><sp/><sp/><sp/>oldButtons<sp/>=<sp/>usercmd.buttons;</highlight></codeline>
<codeline lineno="6187"><highlight class="normal"></highlight></codeline>
<codeline lineno="6188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>grab<sp/>out<sp/>usercmd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classusercmd__t" kindref="compound">usercmd_t</ref><sp/>oldCmd<sp/>=<sp/>usercmd;</highlight></codeline>
<codeline lineno="6190"><highlight class="normal"><sp/><sp/><sp/><sp/>usercmd<sp/>=<sp/>gameLocal.usercmds[<sp/>entityNumber<sp/>];</highlight></codeline>
<codeline lineno="6191"><highlight class="normal"><sp/><sp/><sp/><sp/>buttonMask<sp/>&amp;=<sp/>usercmd.buttons;</highlight></codeline>
<codeline lineno="6192"><highlight class="normal"><sp/><sp/><sp/><sp/>usercmd.buttons<sp/>&amp;=<sp/>~buttonMask;</highlight></codeline>
<codeline lineno="6193"><highlight class="normal"></highlight></codeline>
<codeline lineno="6194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.inCinematic<sp/>&amp;&amp;<sp/>gameLocal.skipCinematic<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6197"><highlight class="normal"></highlight></codeline>
<codeline lineno="6198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>the<sp/>ik<sp/>before<sp/>we<sp/>do<sp/>anything<sp/>else<sp/>so<sp/>the<sp/>skeleton<sp/>doesn&apos;t<sp/>get<sp/>updated<sp/>twice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6199"><highlight class="normal"><sp/><sp/><sp/><sp/>walkIK.ClearJointMods();</highlight></codeline>
<codeline lineno="6200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>this<sp/>is<sp/>the<sp/>very<sp/>first<sp/>frame<sp/>of<sp/>the<sp/>map,<sp/>set<sp/>the<sp/>delta<sp/>view<sp/>angles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>based<sp/>on<sp/>the<sp/>usercmd<sp/>angles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!spawnAnglesSet<sp/>&amp;&amp;<sp/>(<sp/>gameLocal.GameState()<sp/>!=<sp/>GAMESTATE_STARTUP<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spawnAnglesSet<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetViewAngles(<sp/>spawnAngles<sp/>);</highlight></codeline>
<codeline lineno="6206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldFlags<sp/>=<sp/>usercmd.flags;</highlight></codeline>
<codeline lineno="6207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6208"><highlight class="normal"></highlight></codeline>
<codeline lineno="6209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>objectiveSystemOpen<sp/>||<sp/>gameLocal.inCinematic<sp/>||<sp/>influenceActive<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>objectiveSystemOpen<sp/>&amp;&amp;<sp/>AI_PAIN<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TogglePDA();</highlight></codeline>
<codeline lineno="6212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usercmd.forwardmove<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usercmd.rightmove<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usercmd.upmove<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6217"><highlight class="normal"></highlight></codeline>
<codeline lineno="6218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>log<sp/>movement<sp/>changes<sp/>for<sp/>weapon<sp/>bobbing<sp/>effects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>usercmd.forwardmove<sp/>!=<sp/>oldCmd.forwardmove<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlogged_accel__t" kindref="compound">loggedAccel_t</ref><sp/><sp/><sp/>*acc<sp/>=<sp/>&amp;loggedAccel[currentLoggedAccel&amp;(NUM_LOGGED_ACCELS-1)];</highlight></codeline>
<codeline lineno="6221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentLoggedAccel++;</highlight></codeline>
<codeline lineno="6222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acc-&gt;time<sp/>=<sp/>gameLocal.time;</highlight></codeline>
<codeline lineno="6223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acc-&gt;dir[0]<sp/>=<sp/>usercmd.forwardmove<sp/>-<sp/>oldCmd.forwardmove;</highlight></codeline>
<codeline lineno="6224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acc-&gt;dir[1]<sp/>=<sp/>acc-&gt;dir[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6226"><highlight class="normal"></highlight></codeline>
<codeline lineno="6227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>usercmd.rightmove<sp/>!=<sp/>oldCmd.rightmove<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlogged_accel__t" kindref="compound">loggedAccel_t</ref><sp/><sp/><sp/>*acc<sp/>=<sp/>&amp;loggedAccel[currentLoggedAccel&amp;(NUM_LOGGED_ACCELS-1)];</highlight></codeline>
<codeline lineno="6229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentLoggedAccel++;</highlight></codeline>
<codeline lineno="6230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acc-&gt;time<sp/>=<sp/>gameLocal.time;</highlight></codeline>
<codeline lineno="6231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acc-&gt;dir[1]<sp/>=<sp/>usercmd.rightmove<sp/>-<sp/>oldCmd.rightmove;</highlight></codeline>
<codeline lineno="6232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acc-&gt;dir[0]<sp/>=<sp/>acc-&gt;dir[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6234"><highlight class="normal"></highlight></codeline>
<codeline lineno="6235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>freelook<sp/>centering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>usercmd.buttons<sp/>^<sp/>oldCmd.buttons<sp/>)<sp/>&amp;<sp/>BUTTON_MLOOK<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centerView.Init(<sp/>gameLocal.time,<sp/>200,<sp/>viewAngles.pitch,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="6238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6239"><highlight class="normal"></highlight></codeline>
<codeline lineno="6240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>zooming</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>usercmd.buttons<sp/>^<sp/>oldCmd.buttons<sp/>)<sp/>&amp;<sp/>BUTTON_ZOOM<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>usercmd.buttons<sp/>&amp;<sp/>BUTTON_ZOOM<sp/>)<sp/>&amp;&amp;<sp/>weapon.GetEntity()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zoomFov.Init(<sp/>gameLocal.time,<sp/>200.0f,<sp/>CalcFov(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>),<sp/>weapon.GetEntity()-&gt;GetZoomFov()<sp/>);</highlight></codeline>
<codeline lineno="6244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zoomFov.Init(<sp/>gameLocal.time,<sp/>200.0f,<sp/>zoomFov.GetCurrentValue(<sp/>gameLocal.time<sp/>),<sp/>DefaultFov()<sp/>);</highlight></codeline>
<codeline lineno="6246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6248"><highlight class="normal"></highlight></codeline>
<codeline lineno="6249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>have<sp/>an<sp/>active<sp/>gui,<sp/>we<sp/>will<sp/>unrotate<sp/>the<sp/>view<sp/>angles<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>turn<sp/>the<sp/>mouse<sp/>movements<sp/>into<sp/>gui<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_user_interface" kindref="compound">idUserInterface</ref><sp/>*gui<sp/>=<sp/>ActiveGui();</highlight></codeline>
<codeline lineno="6252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gui<sp/>&amp;&amp;<sp/>gui<sp/>!=<sp/>focusUI<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RouteGuiMouse(<sp/>gui<sp/>);</highlight></codeline>
<codeline lineno="6254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6255"><highlight class="normal"></highlight></codeline>
<codeline lineno="6256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>push<sp/>velocity<sp/>on<sp/>the<sp/>weapon<sp/>before<sp/>running<sp/>the<sp/>physics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weapon.GetEntity()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;SetPushVelocity(<sp/>physicsObj.GetPushedLinearVelocity()<sp/>);</highlight></codeline>
<codeline lineno="6259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6260"><highlight class="normal"></highlight></codeline>
<codeline lineno="6261"><highlight class="normal"><sp/><sp/><sp/><sp/>EvaluateControls();</highlight></codeline>
<codeline lineno="6262"><highlight class="normal"></highlight></codeline>
<codeline lineno="6263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!af.IsActive()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AdjustBodyAngles();</highlight></codeline>
<codeline lineno="6265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CopyJointsFromBodyToHead();</highlight></codeline>
<codeline lineno="6266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6267"><highlight class="normal"></highlight></codeline>
<codeline lineno="6268"><highlight class="normal"><sp/><sp/><sp/><sp/>Move();</highlight></codeline>
<codeline lineno="6269"><highlight class="normal"></highlight></codeline>
<codeline lineno="6270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!g_stopTime.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6271"><highlight class="normal"></highlight></codeline>
<codeline lineno="6272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!noclip<sp/>&amp;&amp;<sp/>!spectating<sp/>&amp;&amp;<sp/>(<sp/>health<sp/>&gt;<sp/>0<sp/>)<sp/>&amp;&amp;<sp/>!IsHidden()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TouchTriggers();</highlight></codeline>
<codeline lineno="6274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6275"><highlight class="normal"></highlight></codeline>
<codeline lineno="6276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>done<sp/>on<sp/>clients<sp/>for<sp/>various<sp/>reasons.<sp/>don&apos;t<sp/>do<sp/>it<sp/>on<sp/>server<sp/>and<sp/>save<sp/>the<sp/>sound<sp/>channel<sp/>for<sp/>other<sp/>things</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.isMultiplayer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetCurrentHeartRate();</highlight></codeline>
<codeline lineno="6279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>g_damageScale.GetFloat();</highlight></codeline>
<codeline lineno="6280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>g_useDynamicProtection.GetBool()<sp/>&amp;&amp;<sp/>scale<sp/>&lt;<sp/>1.0f<sp/>&amp;&amp;<sp/>gameLocal.time<sp/>-<sp/>lastDmgTime<sp/>&gt;<sp/>500<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>scale<sp/>&lt;<sp/>1.0f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale<sp/>+=<sp/>0.05f;</highlight></codeline>
<codeline lineno="6283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>scale<sp/>&gt;<sp/>1.0f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="6286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_damageScale.SetFloat(<sp/>scale<sp/>);</highlight></codeline>
<codeline lineno="6288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6290"><highlight class="normal"></highlight></codeline>
<codeline lineno="6291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>GUIs,<sp/>Items,<sp/>and<sp/>character<sp/>interactions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateFocus();</highlight></codeline>
<codeline lineno="6293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateLocation();</highlight></codeline>
<codeline lineno="6295"><highlight class="normal"></highlight></codeline>
<codeline lineno="6296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>player<sp/>script</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateScript();</highlight></codeline>
<codeline lineno="6298"><highlight class="normal"></highlight></codeline>
<codeline lineno="6299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>service<sp/>animations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!spectating<sp/>&amp;&amp;<sp/>!af.IsActive()<sp/>&amp;&amp;<sp/>!gameLocal.inCinematic<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateConditions();</highlight></codeline>
<codeline lineno="6302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateAnimState();</highlight></codeline>
<codeline lineno="6303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CheckBlink();</highlight></codeline>
<codeline lineno="6304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6305"><highlight class="normal"></highlight></codeline>
<codeline lineno="6306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>out<sp/>our<sp/>pain<sp/>flag<sp/>so<sp/>we<sp/>can<sp/>tell<sp/>if<sp/>we<sp/>recieve<sp/>any<sp/>damage<sp/>between<sp/>now<sp/>and<sp/>the<sp/>next<sp/>time<sp/>we<sp/>think</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_PAIN<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6309"><highlight class="normal"></highlight></codeline>
<codeline lineno="6310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>the<sp/>exact<sp/>bobbed<sp/>view<sp/>position,<sp/>which<sp/>is<sp/>used<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>position<sp/>the<sp/>view<sp/>weapon,<sp/>among<sp/>other<sp/>things</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6312"><highlight class="normal"><sp/><sp/><sp/><sp/>CalculateFirstPersonView();</highlight></codeline>
<codeline lineno="6313"><highlight class="normal"></highlight></codeline>
<codeline lineno="6314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>may<sp/>use<sp/>firstPersonView,<sp/>or<sp/>a<sp/>thirdPeroson<sp/>/<sp/>camera<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6315"><highlight class="normal"><sp/><sp/><sp/><sp/>CalculateRenderView();</highlight></codeline>
<codeline lineno="6316"><highlight class="normal"></highlight></codeline>
<codeline lineno="6317"><highlight class="normal"><sp/><sp/><sp/><sp/>inventory.UpdateArmor();</highlight></codeline>
<codeline lineno="6318"><highlight class="normal"></highlight></codeline>
<codeline lineno="6319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spectating<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateSpectating();</highlight></codeline>
<codeline lineno="6321"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateWeapon();</highlight></codeline>
<codeline lineno="6323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6324"><highlight class="normal"></highlight></codeline>
<codeline lineno="6325"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateAir();</highlight></codeline>
<codeline lineno="6326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6327"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateHud();</highlight></codeline>
<codeline lineno="6328"><highlight class="normal"></highlight></codeline>
<codeline lineno="6329"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdatePowerUps();</highlight></codeline>
<codeline lineno="6330"><highlight class="normal"></highlight></codeline>
<codeline lineno="6331"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateDeathSkin(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6332"><highlight class="normal"></highlight></codeline>
<codeline lineno="6333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isMultiplayer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawPlayerIcons();</highlight></codeline>
<codeline lineno="6335"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6336"><highlight class="normal"></highlight></codeline>
<codeline lineno="6337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>head.GetEntity()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>headRenderEnt<sp/>=<sp/>head.GetEntity()-&gt;GetRenderEntity();</highlight></codeline>
<codeline lineno="6339"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>headRenderEnt<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6342"><highlight class="normal"></highlight></codeline>
<codeline lineno="6343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>headRenderEnt<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>influenceSkin<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>headRenderEnt-&gt;customSkin<sp/>=<sp/>influenceSkin;</highlight></codeline>
<codeline lineno="6346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>headRenderEnt-&gt;customSkin<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6350"><highlight class="normal"></highlight></codeline>
<codeline lineno="6351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isMultiplayer<sp/>||<sp/>g_showPlayerShadow.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderEntity.suppressShadowInViewID<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>headRenderEnt<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>headRenderEnt-&gt;suppressShadowInViewID<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6356"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderEntity.suppressShadowInViewID<sp/>=<sp/>entityNumber+1;</highlight></codeline>
<codeline lineno="6358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>headRenderEnt<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>headRenderEnt-&gt;suppressShadowInViewID<sp/>=<sp/>entityNumber+1;</highlight></codeline>
<codeline lineno="6360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>never<sp/>cast<sp/>shadows<sp/>from<sp/>our<sp/>first-person<sp/>muzzle<sp/>flashes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6363"><highlight class="normal"><sp/><sp/><sp/><sp/>renderEntity.suppressShadowInLightID<sp/>=<sp/>LIGHTID_VIEW_MUZZLE_FLASH<sp/>+<sp/>entityNumber;</highlight></codeline>
<codeline lineno="6364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>headRenderEnt<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>headRenderEnt-&gt;suppressShadowInLightID<sp/>=<sp/>LIGHTID_VIEW_MUZZLE_FLASH<sp/>+<sp/>entityNumber;</highlight></codeline>
<codeline lineno="6366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6367"><highlight class="normal"></highlight></codeline>
<codeline lineno="6368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!g_stopTime.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateAnimation();</highlight></codeline>
<codeline lineno="6370"><highlight class="normal"></highlight></codeline>
<codeline lineno="6371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Present();</highlight></codeline>
<codeline lineno="6372"><highlight class="normal"></highlight></codeline>
<codeline lineno="6373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateDamageEffects();</highlight></codeline>
<codeline lineno="6374"><highlight class="normal"></highlight></codeline>
<codeline lineno="6375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LinkCombat();</highlight></codeline>
<codeline lineno="6376"><highlight class="normal"></highlight></codeline>
<codeline lineno="6377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>playerView.CalculateShake();</highlight></codeline>
<codeline lineno="6378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6379"><highlight class="normal"></highlight></codeline>
<codeline lineno="6380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!(<sp/>thinkFlags<sp/>&amp;<sp/>TH_THINK<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Printf(<sp/></highlight><highlight class="stringliteral">&quot;player<sp/>%d<sp/>not<sp/>thinking?\n&quot;</highlight><highlight class="normal">,<sp/>entityNumber<sp/>);</highlight></codeline>
<codeline lineno="6382"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6383"><highlight class="normal"></highlight></codeline>
<codeline lineno="6384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>g_showEnemies.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_actor" kindref="compound">idActor</ref><sp/>*ent;</highlight></codeline>
<codeline lineno="6386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>ent<sp/>=<sp/>enemyList.Next();<sp/>ent<sp/>!=<sp/>NULL;<sp/>ent<sp/>=<sp/>ent-&gt;enemyNode.Next()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Printf(<sp/></highlight><highlight class="stringliteral">&quot;enemy<sp/>(%d)&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>ent-&gt;entityNumber,<sp/>ent-&gt;name.c_str()<sp/>);</highlight></codeline>
<codeline lineno="6389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameRenderWorld-&gt;DebugBounds(<sp/>colorRed,<sp/>ent-&gt;GetPhysics()-&gt;GetBounds().Expand(<sp/>2<sp/>),<sp/>ent-&gt;GetPhysics()-&gt;GetOrigin()<sp/>);</highlight></codeline>
<codeline lineno="6390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num++;</highlight></codeline>
<codeline lineno="6391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Printf(<sp/></highlight><highlight class="stringliteral">&quot;%d:<sp/>enemies\n&quot;</highlight><highlight class="normal">,<sp/>num<sp/>);</highlight></codeline>
<codeline lineno="6393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6395"><highlight class="normal"></highlight></codeline>
<codeline lineno="6396"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="6397"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="6398"><highlight class="comment">idPlayer::RouteGuiMouse</highlight></codeline>
<codeline lineno="6399"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="6400"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6401"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::RouteGuiMouse(<sp/><ref refid="classid_user_interface" kindref="compound">idUserInterface</ref><sp/>*gui<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsys_event__s" kindref="compound">sysEvent_t</ref><sp/>ev;</highlight></codeline>
<codeline lineno="6403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*command;</highlight></codeline>
<codeline lineno="6404"><highlight class="normal"></highlight></codeline>
<codeline lineno="6405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>usercmd.mx<sp/>!=<sp/>oldMouseX<sp/>||<sp/>usercmd.my<sp/>!=<sp/>oldMouseY<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev<sp/>=<sp/>sys-&gt;GenerateMouseMoveEvent(<sp/>usercmd.mx<sp/>-<sp/>oldMouseX,<sp/>usercmd.my<sp/>-<sp/>oldMouseY<sp/>);</highlight></codeline>
<codeline lineno="6407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command<sp/>=<sp/>gui-&gt;HandleEvent(<sp/>&amp;ev,<sp/>gameLocal.time<sp/>);</highlight></codeline>
<codeline lineno="6408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldMouseX<sp/>=<sp/>usercmd.mx;</highlight></codeline>
<codeline lineno="6409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldMouseY<sp/>=<sp/>usercmd.my;</highlight></codeline>
<codeline lineno="6410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6412"><highlight class="normal"></highlight></codeline>
<codeline lineno="6413"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="6414"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="6415"><highlight class="comment">idPlayer::LookAtKiller</highlight></codeline>
<codeline lineno="6416"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="6417"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6418"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::LookAtKiller(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*inflictor,<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*attacker<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6419"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>dir;</highlight></codeline>
<codeline lineno="6420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>attacker<sp/>&amp;&amp;<sp/>attacker<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>attacker-&gt;GetPhysics()-&gt;GetOrigin()<sp/>-<sp/>GetPhysics()-&gt;GetOrigin();</highlight></codeline>
<codeline lineno="6423"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>inflictor<sp/>&amp;&amp;<sp/>inflictor<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>inflictor-&gt;GetPhysics()-&gt;GetOrigin()<sp/>-<sp/>GetPhysics()-&gt;GetOrigin();</highlight></codeline>
<codeline lineno="6425"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>viewAxis[<sp/>0<sp/>];</highlight></codeline>
<codeline lineno="6427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6428"><highlight class="normal"></highlight></codeline>
<codeline lineno="6429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_angles" kindref="compound">idAngles</ref><sp/>ang(<sp/>0,<sp/>dir.ToYaw(),<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="6430"><highlight class="normal"><sp/><sp/><sp/><sp/>SetViewAngles(<sp/>ang<sp/>);</highlight></codeline>
<codeline lineno="6431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6432"><highlight class="normal"></highlight></codeline>
<codeline lineno="6433"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="6434"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="6435"><highlight class="comment">idPlayer::Kill</highlight></codeline>
<codeline lineno="6436"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="6437"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6438"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Kill(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>delayRespawn,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nodamage<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spectating<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SpectateFreeFly(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6441"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>godmode<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>nodamage<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ServerSpectate(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forceRespawn<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Damage(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>vec3_origin,<sp/></highlight><highlight class="stringliteral">&quot;damage_suicide&quot;</highlight><highlight class="normal">,<sp/>1.0f,<sp/>INVALID_JOINT<sp/>);</highlight></codeline>
<codeline lineno="6448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>delayRespawn<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forceRespawn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delay<sp/>=<sp/>spawnArgs.GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;respawn_delay&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minRespawnTime<sp/>=<sp/>gameLocal.time<sp/>+<sp/>SEC2MS(<sp/>delay<sp/>);</highlight></codeline>
<codeline lineno="6452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxRespawnTime<sp/>=<sp/>minRespawnTime<sp/>+<sp/>MAX_RESPAWN_TIME;</highlight></codeline>
<codeline lineno="6453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6455"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6457"><highlight class="normal"></highlight></codeline>
<codeline lineno="6458"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="6459"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="6460"><highlight class="comment">idPlayer::Killed</highlight></codeline>
<codeline lineno="6461"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="6462"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6463"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Killed(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*inflictor,<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*attacker,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>damage,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;dir,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>location<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>delay;</highlight></codeline>
<codeline lineno="6465"><highlight class="normal"></highlight></codeline>
<codeline lineno="6466"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>!gameLocal.isClient<sp/>);</highlight></codeline>
<codeline lineno="6467"><highlight class="normal"></highlight></codeline>
<codeline lineno="6468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stop<sp/>taking<sp/>knockback<sp/>once<sp/>dead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6469"><highlight class="normal"><sp/><sp/><sp/><sp/>fl.noknockback<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&lt;<sp/>-999<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>health<sp/>=<sp/>-999;</highlight></codeline>
<codeline lineno="6472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6473"><highlight class="normal"></highlight></codeline>
<codeline lineno="6474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>AI_DEAD<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_PAIN<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6477"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6478"><highlight class="normal"></highlight></codeline>
<codeline lineno="6479"><highlight class="normal"><sp/><sp/><sp/><sp/>heartInfo.Init(<sp/>0,<sp/>0,<sp/>0,<sp/>BASE_HEARTRATE<sp/>);</highlight></codeline>
<codeline lineno="6480"><highlight class="normal"><sp/><sp/><sp/><sp/>AdjustHeartRate(<sp/>DEAD_HEARTRATE,<sp/>10.0f,<sp/>0.0f,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6481"><highlight class="normal"></highlight></codeline>
<codeline lineno="6482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!g_testDeath.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>playerView.Fade(<sp/>colorBlack,<sp/>12000<sp/>);</highlight></codeline>
<codeline lineno="6484"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6485"><highlight class="normal"></highlight></codeline>
<codeline lineno="6486"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_DEAD<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6487"><highlight class="normal"><sp/><sp/><sp/><sp/>SetAnimState(<sp/>ANIMCHANNEL_LEGS,<sp/></highlight><highlight class="stringliteral">&quot;Legs_Death&quot;</highlight><highlight class="normal">,<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="6488"><highlight class="normal"><sp/><sp/><sp/><sp/>SetAnimState(<sp/>ANIMCHANNEL_TORSO,<sp/></highlight><highlight class="stringliteral">&quot;Torso_Death&quot;</highlight><highlight class="normal">,<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="6489"><highlight class="normal"><sp/><sp/><sp/><sp/>SetWaitState(<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6490"><highlight class="normal"></highlight></codeline>
<codeline lineno="6491"><highlight class="normal"><sp/><sp/><sp/><sp/>animator.ClearAllJoints();</highlight></codeline>
<codeline lineno="6492"><highlight class="normal"></highlight></codeline>
<codeline lineno="6493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>StartRagdoll()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_modelView.SetInteger(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="6495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minRespawnTime<sp/>=<sp/>gameLocal.time<sp/>+<sp/>RAGDOLL_DEATH_TIME;</highlight></codeline>
<codeline lineno="6496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxRespawnTime<sp/>=<sp/>minRespawnTime<sp/>+<sp/>MAX_RESPAWN_TIME;</highlight></codeline>
<codeline lineno="6497"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>allow<sp/>respawn<sp/>until<sp/>the<sp/>death<sp/>anim<sp/>is<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>g_forcerespawn<sp/>may<sp/>force<sp/>spawning<sp/>at<sp/>some<sp/>later<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay<sp/>=<sp/>spawnArgs.GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;respawn_delay&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minRespawnTime<sp/>=<sp/>gameLocal.time<sp/>+<sp/>SEC2MS(<sp/>delay<sp/>);</highlight></codeline>
<codeline lineno="6502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxRespawnTime<sp/>=<sp/>minRespawnTime<sp/>+<sp/>MAX_RESPAWN_TIME;</highlight></codeline>
<codeline lineno="6503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6504"><highlight class="normal"></highlight></codeline>
<codeline lineno="6505"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.SetMovementType(<sp/>PM_DEAD<sp/>);</highlight></codeline>
<codeline lineno="6506"><highlight class="normal"><sp/><sp/><sp/><sp/>StartSound(<sp/></highlight><highlight class="stringliteral">&quot;snd_death&quot;</highlight><highlight class="normal">,<sp/>SND_CHANNEL_VOICE,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="6507"><highlight class="normal"><sp/><sp/><sp/><sp/>StopSound(<sp/>SND_CHANNEL_BODY2,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6508"><highlight class="normal"></highlight></codeline>
<codeline lineno="6509"><highlight class="normal"><sp/><sp/><sp/><sp/>fl.takedamage<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>still<sp/>be<sp/>gibbed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6510"><highlight class="normal"></highlight></codeline>
<codeline lineno="6511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>rid<sp/>of<sp/>weapon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6512"><highlight class="normal"><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;OwnerDied();</highlight></codeline>
<codeline lineno="6513"><highlight class="normal"></highlight></codeline>
<codeline lineno="6514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drop<sp/>the<sp/>weapon<sp/>as<sp/>an<sp/>item</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6515"><highlight class="normal"><sp/><sp/><sp/><sp/>DropWeapon(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6516"><highlight class="normal"></highlight></codeline>
<codeline lineno="6517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!g_testDeath.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LookAtKiller(<sp/>inflictor,<sp/>attacker<sp/>);</highlight></codeline>
<codeline lineno="6519"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6520"><highlight class="normal"></highlight></codeline>
<codeline lineno="6521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isMultiplayer<sp/>||<sp/>g_testDeath.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*killer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>gibbing<sp/>in<sp/>MP.<sp/>Event_Gib<sp/>will<sp/>early<sp/>out<sp/>in<sp/>MP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>attacker-&gt;IsType(<sp/>idPlayer::Type<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>killer<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classid_player" kindref="compound">idPlayer</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(attacker);</highlight></codeline>
<codeline lineno="6526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&lt;<sp/>-20<sp/>||<sp/>killer-&gt;PowerUpActive(<sp/>BERSERK<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gibDeath<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gibsDir<sp/>=<sp/>dir;</highlight></codeline>
<codeline lineno="6529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gibsLaunched<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.mpGame.PlayerDeath(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>killer,<sp/>isTelefragged<sp/>);</highlight></codeline>
<codeline lineno="6533"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsObj.SetContents(<sp/>CONTENTS_CORPSE<sp/>|<sp/>CONTENTS_MONSTERCLIP<sp/>);</highlight></codeline>
<codeline lineno="6535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6536"><highlight class="normal"></highlight></codeline>
<codeline lineno="6537"><highlight class="normal"><sp/><sp/><sp/><sp/>ClearPowerUps();</highlight></codeline>
<codeline lineno="6538"><highlight class="normal"></highlight></codeline>
<codeline lineno="6539"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateVisuals();</highlight></codeline>
<codeline lineno="6540"><highlight class="normal"></highlight></codeline>
<codeline lineno="6541"><highlight class="normal"><sp/><sp/><sp/><sp/>isChatting<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6543"><highlight class="normal"></highlight></codeline>
<codeline lineno="6544"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="6545"><highlight class="comment">=====================</highlight></codeline>
<codeline lineno="6546"><highlight class="comment">idPlayer::GetAIAimTargets</highlight></codeline>
<codeline lineno="6547"><highlight class="comment"></highlight></codeline>
<codeline lineno="6548"><highlight class="comment">Returns<sp/>positions<sp/>for<sp/>the<sp/>AI<sp/>to<sp/>aim<sp/>at.</highlight></codeline>
<codeline lineno="6549"><highlight class="comment">=====================</highlight></codeline>
<codeline lineno="6550"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6551"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::GetAIAimTargets(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;lastSightPos,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;headPos,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;chestPos<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6552"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>offset;</highlight></codeline>
<codeline lineno="6553"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/>axis;</highlight></codeline>
<codeline lineno="6554"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>origin;</highlight></codeline>
<codeline lineno="6555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6556"><highlight class="normal"><sp/><sp/><sp/><sp/>origin<sp/>=<sp/>lastSightPos<sp/>-<sp/>physicsObj.GetOrigin();</highlight></codeline>
<codeline lineno="6557"><highlight class="normal"></highlight></codeline>
<codeline lineno="6558"><highlight class="normal"><sp/><sp/><sp/><sp/>GetJointWorldTransform(<sp/>chestJoint,<sp/>gameLocal.time,<sp/>offset,<sp/>axis<sp/>);</highlight></codeline>
<codeline lineno="6559"><highlight class="normal"><sp/><sp/><sp/><sp/>headPos<sp/>=<sp/>offset<sp/>+<sp/>origin;</highlight></codeline>
<codeline lineno="6560"><highlight class="normal"></highlight></codeline>
<codeline lineno="6561"><highlight class="normal"><sp/><sp/><sp/><sp/>GetJointWorldTransform(<sp/>headJoint,<sp/>gameLocal.time,<sp/>offset,<sp/>axis<sp/>);</highlight></codeline>
<codeline lineno="6562"><highlight class="normal"><sp/><sp/><sp/><sp/>chestPos<sp/>=<sp/>offset<sp/>+<sp/>origin;</highlight></codeline>
<codeline lineno="6563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6564"><highlight class="normal"></highlight></codeline>
<codeline lineno="6565"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="6566"><highlight class="comment">================</highlight></codeline>
<codeline lineno="6567"><highlight class="comment">idPlayer::DamageFeedback</highlight></codeline>
<codeline lineno="6568"><highlight class="comment"></highlight></codeline>
<codeline lineno="6569"><highlight class="comment">callback<sp/>function<sp/>for<sp/>when<sp/>another<sp/>entity<sp/>received<sp/>damage<sp/>from<sp/>this<sp/>entity.<sp/><sp/>damage<sp/>can<sp/>be<sp/>adjusted<sp/>and<sp/>returned<sp/>to<sp/>the<sp/>caller.</highlight></codeline>
<codeline lineno="6570"><highlight class="comment">================</highlight></codeline>
<codeline lineno="6571"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6572"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::DamageFeedback(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*victim,<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*inflictor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;damage<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6573"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>!gameLocal.isClient<sp/>);</highlight></codeline>
<codeline lineno="6574"><highlight class="normal"><sp/><sp/><sp/><sp/>damage<sp/>*=<sp/>PowerUpModifier(<sp/>BERSERK<sp/>);</highlight></codeline>
<codeline lineno="6575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>damage<sp/>&amp;&amp;<sp/>(<sp/>victim<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>&amp;&amp;<sp/>victim-&gt;IsType(<sp/>idActor::Type<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastHitTime(<sp/>gameLocal.time<sp/>);</highlight></codeline>
<codeline lineno="6577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6579"><highlight class="normal"></highlight></codeline>
<codeline lineno="6580"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="6581"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="6582"><highlight class="comment">idPlayer::CalcDamagePoints</highlight></codeline>
<codeline lineno="6583"><highlight class="comment"></highlight></codeline>
<codeline lineno="6584"><highlight class="comment">Calculates<sp/>how<sp/>many<sp/>health<sp/>and<sp/>armor<sp/>points<sp/>will<sp/>be<sp/>inflicted,<sp/>but</highlight></codeline>
<codeline lineno="6585"><highlight class="comment">doesn&apos;t<sp/>actually<sp/>do<sp/>anything<sp/>with<sp/>them.<sp/><sp/>This<sp/>is<sp/>used<sp/>to<sp/>tell<sp/>when<sp/>an<sp/>attack</highlight></codeline>
<codeline lineno="6586"><highlight class="comment">would<sp/>have<sp/>killed<sp/>the<sp/>player,<sp/>possibly<sp/>allowing<sp/>a<sp/>&quot;saving<sp/>throw&quot;</highlight></codeline>
<codeline lineno="6587"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="6588"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6589"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::CalcDamagePoints(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*inflictor,<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*attacker,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_dict" kindref="compound">idDict</ref><sp/>*damageDef,</highlight></codeline>
<codeline lineno="6590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>damageScale,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>location,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*health,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*armor<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>damage;</highlight></codeline>
<codeline lineno="6592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>armorSave;</highlight></codeline>
<codeline lineno="6593"><highlight class="normal"></highlight></codeline>
<codeline lineno="6594"><highlight class="normal"><sp/><sp/><sp/><sp/>damageDef-&gt;GetInt(<sp/></highlight><highlight class="stringliteral">&quot;damage&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;20&quot;</highlight><highlight class="normal">,<sp/>damage<sp/>);</highlight></codeline>
<codeline lineno="6595"><highlight class="normal"><sp/><sp/><sp/><sp/>damage<sp/>=<sp/>GetDamageForLocation(<sp/>damage,<sp/>location<sp/>);</highlight></codeline>
<codeline lineno="6596"><highlight class="normal"></highlight></codeline>
<codeline lineno="6597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*player<sp/>=<sp/>attacker-&gt;IsType(<sp/>idPlayer::Type<sp/>)<sp/>?<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classid_player" kindref="compound">idPlayer</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(attacker)<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="6598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.isMultiplayer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>inflictor<sp/>!=<sp/>gameLocal.world<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>g_skill.GetInteger()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/></highlight></codeline>
<codeline lineno="6602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>damage<sp/>*=<sp/>0.80f;</highlight></codeline>
<codeline lineno="6603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>damage<sp/>&lt;<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>damage<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="6605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="6608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>damage<sp/>*=<sp/>1.70f;</highlight></codeline>
<codeline lineno="6609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="6611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>damage<sp/>*=<sp/>3.5f;</highlight></codeline>
<codeline lineno="6612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6617"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6618"><highlight class="normal"></highlight></codeline>
<codeline lineno="6619"><highlight class="normal"><sp/><sp/><sp/><sp/>damage<sp/>*=<sp/>damageScale;</highlight></codeline>
<codeline lineno="6620"><highlight class="normal"></highlight></codeline>
<codeline lineno="6621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>always<sp/>give<sp/>half<sp/>damage<sp/>if<sp/>hurting<sp/>self</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>attacker<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isMultiplayer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>do<sp/>this<sp/>in<sp/>mp<sp/>so<sp/>single<sp/>player<sp/>plasma<sp/>and<sp/>rocket<sp/>splash<sp/>is<sp/>very<sp/>dangerous<sp/>in<sp/>close<sp/>quarters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>damage<sp/>*=<sp/>damageDef-&gt;GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;selfDamageScale&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0.5&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>damage<sp/>*=<sp/>damageDef-&gt;GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;selfDamageScale&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6630"><highlight class="normal"></highlight></codeline>
<codeline lineno="6631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>completely<sp/>getting<sp/>out<sp/>of<sp/>the<sp/>damage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!damageDef-&gt;GetBool(<sp/></highlight><highlight class="stringliteral">&quot;noGod&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>godmode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>godmode<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>damage<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6637"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6638"><highlight class="normal"></highlight></codeline>
<codeline lineno="6639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inform<sp/>the<sp/>attacker<sp/>that<sp/>they<sp/>hit<sp/>someone</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6640"><highlight class="normal"><sp/><sp/><sp/><sp/>attacker-&gt;DamageFeedback(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>inflictor,<sp/>damage<sp/>);</highlight></codeline>
<codeline lineno="6641"><highlight class="normal"></highlight></codeline>
<codeline lineno="6642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>some<sp/>from<sp/>armor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!damageDef-&gt;GetBool(<sp/></highlight><highlight class="stringliteral">&quot;noArmor&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>armor_protection;</highlight></codeline>
<codeline lineno="6645"><highlight class="normal"></highlight></codeline>
<codeline lineno="6646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>armor_protection<sp/>=<sp/>(<sp/>gameLocal.isMultiplayer<sp/>)<sp/>?<sp/>g_armorProtectionMP.GetFloat()<sp/>:<sp/>g_armorProtection.GetFloat();</highlight></codeline>
<codeline lineno="6647"><highlight class="normal"></highlight></codeline>
<codeline lineno="6648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>armorSave<sp/>=<sp/>ceil(<sp/>damage<sp/>*<sp/>armor_protection<sp/>);</highlight></codeline>
<codeline lineno="6649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>armorSave<sp/>&gt;=<sp/>inventory.armor<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>armorSave<sp/>=<sp/>inventory.armor;</highlight></codeline>
<codeline lineno="6651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6652"><highlight class="normal"></highlight></codeline>
<codeline lineno="6653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!damage<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>armorSave<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>armorSave<sp/>&gt;=<sp/>damage<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>armorSave<sp/>=<sp/>damage<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="6657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>damage<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="6658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>damage<sp/>-=<sp/>armorSave;</highlight></codeline>
<codeline lineno="6660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6661"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>armorSave<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6663"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6664"><highlight class="normal"></highlight></codeline>
<codeline lineno="6665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>team<sp/>damage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.gameType<sp/>==<sp/>GAME_TDM</highlight></codeline>
<codeline lineno="6667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!gameLocal.serverInfo.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;si_teamDamage&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="6668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!damageDef-&gt;GetBool(<sp/></highlight><highlight class="stringliteral">&quot;noTeam&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="6669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>player</highlight></codeline>
<codeline lineno="6670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>player<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>you<sp/>get<sp/>self<sp/>damage<sp/>no<sp/>matter<sp/>what</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>player-&gt;team<sp/>==<sp/>team<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>damage<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6673"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6674"><highlight class="normal"></highlight></codeline>
<codeline lineno="6675"><highlight class="normal"><sp/><sp/><sp/><sp/>*health<sp/>=<sp/>damage;</highlight></codeline>
<codeline lineno="6676"><highlight class="normal"><sp/><sp/><sp/><sp/>*armor<sp/>=<sp/>armorSave;</highlight></codeline>
<codeline lineno="6677"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6678"><highlight class="normal"></highlight></codeline>
<codeline lineno="6679"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="6680"><highlight class="comment">============</highlight></codeline>
<codeline lineno="6681"><highlight class="comment">Damage</highlight></codeline>
<codeline lineno="6682"><highlight class="comment"></highlight></codeline>
<codeline lineno="6683"><highlight class="comment">this<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity<sp/>that<sp/>is<sp/>being<sp/>damaged</highlight></codeline>
<codeline lineno="6684"><highlight class="comment">inflictor<sp/><sp/><sp/>entity<sp/>that<sp/>is<sp/>causing<sp/>the<sp/>damage</highlight></codeline>
<codeline lineno="6685"><highlight class="comment">attacker<sp/><sp/><sp/><sp/>entity<sp/>that<sp/>caused<sp/>the<sp/>inflictor<sp/>to<sp/>damage<sp/>targ</highlight></codeline>
<codeline lineno="6686"><highlight class="comment"><sp/><sp/><sp/><sp/>example:<sp/>this=monster,<sp/>inflictor=rocket,<sp/>attacker=player</highlight></codeline>
<codeline lineno="6687"><highlight class="comment"></highlight></codeline>
<codeline lineno="6688"><highlight class="comment">dir<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>direction<sp/>of<sp/>the<sp/>attack<sp/>for<sp/>knockback<sp/>in<sp/>global<sp/>space</highlight></codeline>
<codeline lineno="6689"><highlight class="comment"></highlight></codeline>
<codeline lineno="6690"><highlight class="comment">damageDef<sp/><sp/><sp/>an<sp/>idDict<sp/>with<sp/>all<sp/>the<sp/>options<sp/>for<sp/>damage<sp/>effects</highlight></codeline>
<codeline lineno="6691"><highlight class="comment"></highlight></codeline>
<codeline lineno="6692"><highlight class="comment">inflictor,<sp/>attacker,<sp/>dir,<sp/>and<sp/>point<sp/>can<sp/>be<sp/>NULL<sp/>for<sp/>environmental<sp/>effects</highlight></codeline>
<codeline lineno="6693"><highlight class="comment">============</highlight></codeline>
<codeline lineno="6694"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6695"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Damage(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*inflictor,<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*attacker,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;dir,</highlight></codeline>
<codeline lineno="6696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*damageDefName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>damageScale,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>location<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6697"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/><sp/><sp/><sp/><sp/>kick;</highlight></codeline>
<codeline lineno="6698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>damage;</highlight></codeline>
<codeline lineno="6699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>armorSave;</highlight></codeline>
<codeline lineno="6700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>knockback;</highlight></codeline>
<codeline lineno="6701"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/><sp/><sp/><sp/><sp/>damage_from;</highlight></codeline>
<codeline lineno="6702"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/><sp/><sp/><sp/><sp/>localDamageVector;<sp/><sp/></highlight></codeline>
<codeline lineno="6703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attackerPushScale;</highlight></codeline>
<codeline lineno="6704"><highlight class="normal"></highlight></codeline>
<codeline lineno="6705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>damage<sp/>is<sp/>only<sp/>processed<sp/>on<sp/>server</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isClient<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6708"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!fl.takedamage<sp/>||<sp/>noclip<sp/>||<sp/>spectating<sp/>||<sp/>gameLocal.inCinematic<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6712"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6713"><highlight class="normal"></highlight></codeline>
<codeline lineno="6714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!inflictor<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inflictor<sp/>=<sp/>gameLocal.world;</highlight></codeline>
<codeline lineno="6716"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!attacker<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attacker<sp/>=<sp/>gameLocal.world;</highlight></codeline>
<codeline lineno="6719"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6720"><highlight class="normal"></highlight></codeline>
<codeline lineno="6721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>attacker-&gt;IsType(<sp/>idAI::Type<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>PowerUpActive(<sp/>BERSERK<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>take<sp/>damage<sp/>from<sp/>monsters<sp/>during<sp/>influences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>influenceActive<sp/>!=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6729"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6730"><highlight class="normal"></highlight></codeline>
<codeline lineno="6731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_decl_entity_def" kindref="compound">idDeclEntityDef</ref><sp/>*damageDef<sp/>=<sp/>gameLocal.FindEntityDef(<sp/>damageDefName,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!damageDef<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Warning(<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>damageDef<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/>damageDefName<sp/>);</highlight></codeline>
<codeline lineno="6734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6735"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6736"><highlight class="normal"></highlight></codeline>
<codeline lineno="6737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>damageDef-&gt;dict.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;ignore_player&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6739"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6740"><highlight class="normal"></highlight></codeline>
<codeline lineno="6741"><highlight class="normal"><sp/><sp/><sp/><sp/>CalcDamagePoints(<sp/>inflictor,<sp/>attacker,<sp/>&amp;damageDef-&gt;dict,<sp/>damageScale,<sp/>location,<sp/>&amp;damage,<sp/>&amp;armorSave<sp/>);</highlight></codeline>
<codeline lineno="6742"><highlight class="normal"></highlight></codeline>
<codeline lineno="6743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>knockback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6744"><highlight class="normal"><sp/><sp/><sp/><sp/>damageDef-&gt;dict.GetInt(<sp/></highlight><highlight class="stringliteral">&quot;knockback&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;20&quot;</highlight><highlight class="normal">,<sp/>knockback<sp/>);</highlight></codeline>
<codeline lineno="6745"><highlight class="normal"></highlight></codeline>
<codeline lineno="6746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>knockback<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>!fl.noknockback<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>attacker<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>damageDef-&gt;dict.GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;attackerPushScale&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>attackerPushScale<sp/>);</highlight></codeline>
<codeline lineno="6749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attackerPushScale<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="6751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6752"><highlight class="normal"></highlight></codeline>
<codeline lineno="6753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kick<sp/>=<sp/>dir;</highlight></codeline>
<codeline lineno="6754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kick.Normalize();</highlight></codeline>
<codeline lineno="6755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kick<sp/>*=<sp/>g_knockback.GetFloat()<sp/>*<sp/>knockback<sp/>*<sp/>attackerPushScale<sp/>/<sp/>200.0f;</highlight></codeline>
<codeline lineno="6756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsObj.SetLinearVelocity(<sp/>physicsObj.GetLinearVelocity()<sp/>+<sp/>kick<sp/>);</highlight></codeline>
<codeline lineno="6757"><highlight class="normal"></highlight></codeline>
<codeline lineno="6758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>timer<sp/>so<sp/>that<sp/>the<sp/>player<sp/>can&apos;t<sp/>cancel<sp/>out<sp/>the<sp/>movement<sp/>immediately</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsObj.SetKnockBack(<sp/>idMath::ClampInt(<sp/>50,<sp/>200,<sp/>knockback<sp/>*<sp/>2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="6760"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6761"><highlight class="normal"></highlight></codeline>
<codeline lineno="6762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>give<sp/>feedback<sp/>on<sp/>the<sp/>player<sp/>view<sp/>and<sp/>audibly<sp/>when<sp/>armor<sp/>is<sp/>helping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>armorSave<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.armor<sp/>-=<sp/>armorSave;</highlight></codeline>
<codeline lineno="6765"><highlight class="normal"></highlight></codeline>
<codeline lineno="6766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.time<sp/>&gt;<sp/>lastArmorPulse<sp/>+<sp/>200<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartSound(<sp/></highlight><highlight class="stringliteral">&quot;snd_hitArmor&quot;</highlight><highlight class="normal">,<sp/>SND_CHANNEL_ITEM,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="6768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastArmorPulse<sp/>=<sp/>gameLocal.time;</highlight></codeline>
<codeline lineno="6770"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>damageDef-&gt;dict.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;burn&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartSound(<sp/></highlight><highlight class="stringliteral">&quot;snd_burn&quot;</highlight><highlight class="normal">,<sp/>SND_CHANNEL_BODY3,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="6774"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>damageDef-&gt;dict.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;no_air&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!armorSave<sp/>&amp;&amp;<sp/>health<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartSound(<sp/></highlight><highlight class="stringliteral">&quot;snd_airGasp&quot;</highlight><highlight class="normal">,<sp/>SND_CHANNEL_ITEM,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="6777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6778"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6779"><highlight class="normal"></highlight></codeline>
<codeline lineno="6780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>g_debugDamage.GetInteger()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Printf(<sp/></highlight><highlight class="stringliteral">&quot;client:%i<sp/>health:%i<sp/>damage:%i<sp/>armor:%i\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="6782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityNumber,<sp/>health,<sp/>damage,<sp/>armorSave<sp/>);</highlight></codeline>
<codeline lineno="6783"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6784"><highlight class="normal"></highlight></codeline>
<codeline lineno="6785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>the<sp/>world<sp/>direction<sp/>vector<sp/>to<sp/>local<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6786"><highlight class="normal"><sp/><sp/><sp/><sp/>damage_from<sp/>=<sp/>dir;</highlight></codeline>
<codeline lineno="6787"><highlight class="normal"><sp/><sp/><sp/><sp/>damage_from.Normalize();</highlight></codeline>
<codeline lineno="6788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6789"><highlight class="normal"><sp/><sp/><sp/><sp/>viewAxis.ProjectVector(<sp/>damage_from,<sp/>localDamageVector<sp/>);</highlight></codeline>
<codeline lineno="6790"><highlight class="normal"></highlight></codeline>
<codeline lineno="6791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>to<sp/>the<sp/>damage<sp/>inflicted<sp/>on<sp/>a<sp/>player<sp/>this<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>total<sp/>will<sp/>be<sp/>turned<sp/>into<sp/>screen<sp/>blends<sp/>and<sp/>view<sp/>angle<sp/>kicks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>playerView.DamageImpulse(<sp/>localDamageVector,<sp/>&amp;damageDef-&gt;dict<sp/>);</highlight></codeline>
<codeline lineno="6796"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6797"><highlight class="normal"></highlight></codeline>
<codeline lineno="6798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>the<sp/>damage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>damage<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6800"><highlight class="normal"></highlight></codeline>
<codeline lineno="6801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.isMultiplayer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>g_damageScale.GetFloat();</highlight></codeline>
<codeline lineno="6803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>g_useDynamicProtection.GetBool()<sp/>&amp;&amp;<sp/>g_skill.GetInteger()<sp/>&lt;<sp/>2<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.time<sp/>&gt;<sp/>lastDmgTime<sp/>+<sp/>500<sp/>&amp;&amp;<sp/>scale<sp/>&gt;<sp/>0.25f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale<sp/>-=<sp/>0.05f;</highlight></codeline>
<codeline lineno="6806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_damageScale.SetFloat(<sp/>scale<sp/>);</highlight></codeline>
<codeline lineno="6807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6809"><highlight class="normal"></highlight></codeline>
<codeline lineno="6810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>scale<sp/>&gt;<sp/>0.0f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>damage<sp/>*=<sp/>scale;</highlight></codeline>
<codeline lineno="6812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6814"><highlight class="normal"></highlight></codeline>
<codeline lineno="6815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>damage<sp/>&lt;<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>damage<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="6817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6818"><highlight class="normal"></highlight></codeline>
<codeline lineno="6819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oldHealth<sp/>=<sp/>health;</highlight></codeline>
<codeline lineno="6820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>health<sp/>-=<sp/>damage;</highlight></codeline>
<codeline lineno="6821"><highlight class="normal"></highlight></codeline>
<codeline lineno="6822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&lt;=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6823"><highlight class="normal"></highlight></codeline>
<codeline lineno="6824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&lt;<sp/>-999<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>health<sp/>=<sp/>-999;</highlight></codeline>
<codeline lineno="6826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6827"><highlight class="normal"></highlight></codeline>
<codeline lineno="6828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isTelefragged<sp/>=<sp/>damageDef-&gt;dict.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;telefrag&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6829"><highlight class="normal"></highlight></codeline>
<codeline lineno="6830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastDmgTime<sp/>=<sp/>gameLocal.time;</highlight></codeline>
<codeline lineno="6831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Killed(<sp/>inflictor,<sp/>attacker,<sp/>damage,<sp/>dir,<sp/>location<sp/>);</highlight></codeline>
<codeline lineno="6832"><highlight class="normal"></highlight></codeline>
<codeline lineno="6833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>a<sp/>blink</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blink_time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6836"><highlight class="normal"></highlight></codeline>
<codeline lineno="6837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>let<sp/>the<sp/>anim<sp/>script<sp/>know<sp/>we<sp/>took<sp/>damage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_PAIN<sp/>=<sp/>Pain(<sp/>inflictor,<sp/>attacker,<sp/>damage,<sp/>dir,<sp/>location<sp/>);</highlight></codeline>
<codeline lineno="6839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!g_testDeath.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastDmgTime<sp/>=<sp/>gameLocal.time;</highlight></codeline>
<codeline lineno="6841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6843"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>accumulate<sp/>impulses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>af.IsLoaded()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>impacts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>af.Rest();</highlight></codeline>
<codeline lineno="6848"><highlight class="normal"></highlight></codeline>
<codeline lineno="6849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>physics<sp/>is<sp/>turned<sp/>off<sp/>by<sp/>calling<sp/>af.Rest()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BecomeActive(<sp/>TH_PHYSICS<sp/>);</highlight></codeline>
<codeline lineno="6851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6852"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6853"><highlight class="normal"></highlight></codeline>
<codeline lineno="6854"><highlight class="normal"><sp/><sp/><sp/><sp/>lastDamageDef<sp/>=<sp/>damageDef-&gt;Index();</highlight></codeline>
<codeline lineno="6855"><highlight class="normal"><sp/><sp/><sp/><sp/>lastDamageDir<sp/>=<sp/>damage_from;</highlight></codeline>
<codeline lineno="6856"><highlight class="normal"><sp/><sp/><sp/><sp/>lastDamageLocation<sp/>=<sp/>location;</highlight></codeline>
<codeline lineno="6857"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6858"><highlight class="normal"></highlight></codeline>
<codeline lineno="6859"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="6860"><highlight class="comment">===========</highlight></codeline>
<codeline lineno="6861"><highlight class="comment">idPlayer::Teleport</highlight></codeline>
<codeline lineno="6862"><highlight class="comment">============</highlight></codeline>
<codeline lineno="6863"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6864"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Teleport(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;origin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_angles" kindref="compound">idAngles</ref><sp/>&amp;angles,<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*destination<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6865"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>org;</highlight></codeline>
<codeline lineno="6866"><highlight class="normal"></highlight></codeline>
<codeline lineno="6867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weapon.GetEntity()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;LowerWeapon();</highlight></codeline>
<codeline lineno="6869"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6870"><highlight class="normal"></highlight></codeline>
<codeline lineno="6871"><highlight class="normal"><sp/><sp/><sp/><sp/>SetOrigin(<sp/>origin<sp/>+<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(<sp/>0,<sp/>0,<sp/>CM_CLIP_EPSILON<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="6872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.isMultiplayer<sp/>&amp;&amp;<sp/>GetFloorPos(<sp/>16.0f,<sp/>org<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetOrigin(<sp/>org<sp/>);</highlight></codeline>
<codeline lineno="6874"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6875"><highlight class="normal"></highlight></codeline>
<codeline lineno="6876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>the<sp/>ik<sp/>heights<sp/>so<sp/>model<sp/>doesn&apos;t<sp/>appear<sp/>in<sp/>the<sp/>wrong<sp/>place</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6877"><highlight class="normal"><sp/><sp/><sp/><sp/>walkIK.EnableAll();</highlight></codeline>
<codeline lineno="6878"><highlight class="normal"></highlight></codeline>
<codeline lineno="6879"><highlight class="normal"><sp/><sp/><sp/><sp/>GetPhysics()-&gt;SetLinearVelocity(<sp/>vec3_origin<sp/>);</highlight></codeline>
<codeline lineno="6880"><highlight class="normal"></highlight></codeline>
<codeline lineno="6881"><highlight class="normal"><sp/><sp/><sp/><sp/>SetViewAngles(<sp/>angles<sp/>);</highlight></codeline>
<codeline lineno="6882"><highlight class="normal"></highlight></codeline>
<codeline lineno="6883"><highlight class="normal"><sp/><sp/><sp/><sp/>legsYaw<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="6884"><highlight class="normal"><sp/><sp/><sp/><sp/>idealLegsYaw<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="6885"><highlight class="normal"><sp/><sp/><sp/><sp/>oldViewYaw<sp/>=<sp/>viewAngles.yaw;</highlight></codeline>
<codeline lineno="6886"><highlight class="normal"></highlight></codeline>
<codeline lineno="6887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isMultiplayer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>playerView.Flash(<sp/>colorWhite,<sp/>140<sp/>);</highlight></codeline>
<codeline lineno="6889"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6890"><highlight class="normal"></highlight></codeline>
<codeline lineno="6891"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateVisuals();</highlight></codeline>
<codeline lineno="6892"><highlight class="normal"></highlight></codeline>
<codeline lineno="6893"><highlight class="normal"><sp/><sp/><sp/><sp/>teleportEntity<sp/>=<sp/>destination;</highlight></codeline>
<codeline lineno="6894"><highlight class="normal"></highlight></codeline>
<codeline lineno="6895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.isClient<sp/>&amp;&amp;<sp/>!noclip<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isMultiplayer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>kill<sp/>anything<sp/>at<sp/>the<sp/>new<sp/>position<sp/>or<sp/>mark<sp/>for<sp/>kill<sp/>depending<sp/>on<sp/>immediate<sp/>or<sp/>delayed<sp/>teleport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.KillBox(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>destination<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="6899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>kill<sp/>anything<sp/>at<sp/>the<sp/>new<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.KillBox(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6903"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6904"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6905"><highlight class="normal"></highlight></codeline>
<codeline lineno="6906"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="6907"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="6908"><highlight class="comment">idPlayer::SetPrivateCameraView</highlight></codeline>
<codeline lineno="6909"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="6910"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6911"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::SetPrivateCameraView(<sp/><ref refid="classid_camera" kindref="compound">idCamera</ref><sp/>*camView<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6912"><highlight class="normal"><sp/><sp/><sp/><sp/>privateCameraView<sp/>=<sp/>camView;</highlight></codeline>
<codeline lineno="6913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>camView<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StopFiring();</highlight></codeline>
<codeline lineno="6915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hide();</highlight></codeline>
<codeline lineno="6916"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!spectating<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Show();</highlight></codeline>
<codeline lineno="6919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6920"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6921"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6922"><highlight class="normal"></highlight></codeline>
<codeline lineno="6923"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="6924"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="6925"><highlight class="comment">idPlayer::DefaultFov</highlight></codeline>
<codeline lineno="6926"><highlight class="comment"></highlight></codeline>
<codeline lineno="6927"><highlight class="comment">Returns<sp/>the<sp/>base<sp/>FOV</highlight></codeline>
<codeline lineno="6928"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="6929"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6930"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>idPlayer::DefaultFov(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="6931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fov;</highlight></codeline>
<codeline lineno="6932"><highlight class="normal"></highlight></codeline>
<codeline lineno="6933"><highlight class="normal"><sp/><sp/><sp/><sp/>fov<sp/>=<sp/>g_fov.GetFloat();</highlight></codeline>
<codeline lineno="6934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isMultiplayer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fov<sp/>&lt;<sp/>90.0f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>90.0f;</highlight></codeline>
<codeline lineno="6937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fov<sp/>&gt;<sp/>110.0f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>110.0f;</highlight></codeline>
<codeline lineno="6939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6940"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6941"><highlight class="normal"></highlight></codeline>
<codeline lineno="6942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fov;</highlight></codeline>
<codeline lineno="6943"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6944"><highlight class="normal"></highlight></codeline>
<codeline lineno="6945"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="6946"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="6947"><highlight class="comment">idPlayer::CalcFov</highlight></codeline>
<codeline lineno="6948"><highlight class="comment"></highlight></codeline>
<codeline lineno="6949"><highlight class="comment">Fixed<sp/>fov<sp/>at<sp/>intermissions,<sp/>otherwise<sp/>account<sp/>for<sp/>fov<sp/>variable<sp/>and<sp/>zooms.</highlight></codeline>
<codeline lineno="6950"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="6951"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6952"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>idPlayer::CalcFov(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>honorZoom<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fov;</highlight></codeline>
<codeline lineno="6954"><highlight class="normal"></highlight></codeline>
<codeline lineno="6955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fxFov<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DefaultFov()<sp/>+<sp/>10.0f<sp/>+<sp/>cos(<sp/>(<sp/>gameLocal.time<sp/>+<sp/>2000<sp/>)<sp/>*<sp/>0.01<sp/>)<sp/>*<sp/>10.0f;</highlight></codeline>
<codeline lineno="6957"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6958"><highlight class="normal"></highlight></codeline>
<codeline lineno="6959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>influenceFov<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>influenceFov;</highlight></codeline>
<codeline lineno="6961"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6962"><highlight class="normal"></highlight></codeline>
<codeline lineno="6963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>zoomFov.IsDone(<sp/>gameLocal.time<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fov<sp/>=<sp/>(<sp/>honorZoom<sp/>&amp;&amp;<sp/>usercmd.buttons<sp/>&amp;<sp/>BUTTON_ZOOM<sp/>)<sp/>&amp;&amp;<sp/>weapon.GetEntity()<sp/>?<sp/>weapon.GetEntity()-&gt;GetZoomFov()<sp/>:<sp/>DefaultFov();</highlight></codeline>
<codeline lineno="6965"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fov<sp/>=<sp/>zoomFov.GetCurrentValue(<sp/>gameLocal.time<sp/>);</highlight></codeline>
<codeline lineno="6967"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6968"><highlight class="normal"></highlight></codeline>
<codeline lineno="6969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bound<sp/>normal<sp/>viewsize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fov<sp/>&lt;<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fov<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="6972"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fov<sp/>&gt;<sp/>179<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fov<sp/>=<sp/>179;</highlight></codeline>
<codeline lineno="6974"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6975"><highlight class="normal"></highlight></codeline>
<codeline lineno="6976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fov;</highlight></codeline>
<codeline lineno="6977"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6978"><highlight class="normal"></highlight></codeline>
<codeline lineno="6979"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="6980"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="6981"><highlight class="comment">idPlayer::GunTurningOffset</highlight></codeline>
<codeline lineno="6982"><highlight class="comment"></highlight></codeline>
<codeline lineno="6983"><highlight class="comment">generate<sp/>a<sp/>rotational<sp/>offset<sp/>for<sp/>the<sp/>gun<sp/>based<sp/>on<sp/>the<sp/>view<sp/>angle</highlight></codeline>
<codeline lineno="6984"><highlight class="comment">history<sp/>in<sp/>loggedViewAngles</highlight></codeline>
<codeline lineno="6985"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="6986"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6987"><highlight class="normal"><ref refid="classid_angles" kindref="compound">idAngles</ref><sp/>idPlayer::GunTurningOffset(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6988"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_angles" kindref="compound">idAngles</ref><sp/><sp/><sp/><sp/>a;</highlight></codeline>
<codeline lineno="6989"><highlight class="normal"></highlight></codeline>
<codeline lineno="6990"><highlight class="normal"><sp/><sp/><sp/><sp/>a.Zero();</highlight></codeline>
<codeline lineno="6991"><highlight class="normal"></highlight></codeline>
<codeline lineno="6992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.framenum<sp/>&lt;<sp/>NUM_LOGGED_VIEW_ANGLES<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="6994"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6995"><highlight class="normal"></highlight></codeline>
<codeline lineno="6996"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_angles" kindref="compound">idAngles</ref><sp/>current<sp/>=<sp/>loggedViewAngles[<sp/>gameLocal.framenum<sp/>&amp;<sp/>(NUM_LOGGED_VIEW_ANGLES-1)<sp/>];</highlight></codeline>
<codeline lineno="6997"><highlight class="normal"></highlight></codeline>
<codeline lineno="6998"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_angles" kindref="compound">idAngles</ref><sp/><sp/><sp/><sp/>av,<sp/>base;</highlight></codeline>
<codeline lineno="6999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>weaponAngleOffsetAverages;</highlight></codeline>
<codeline lineno="7000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>weaponAngleOffsetScale,<sp/>weaponAngleOffsetMax;</highlight></codeline>
<codeline lineno="7001"><highlight class="normal"></highlight></codeline>
<codeline lineno="7002"><highlight class="normal"><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;GetWeaponAngleOffsets(<sp/>&amp;weaponAngleOffsetAverages,<sp/>&amp;weaponAngleOffsetScale,<sp/>&amp;weaponAngleOffsetMax<sp/>);</highlight></codeline>
<codeline lineno="7003"><highlight class="normal"></highlight></codeline>
<codeline lineno="7004"><highlight class="normal"><sp/><sp/><sp/><sp/>av<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="7005"><highlight class="normal"></highlight></codeline>
<codeline lineno="7006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calcualte<sp/>this<sp/>so<sp/>the<sp/>wrap<sp/>arounds<sp/>work<sp/>properly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1<sp/>;<sp/>j<sp/>&lt;<sp/>weaponAngleOffsetAverages<sp/>;<sp/>j++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_angles" kindref="compound">idAngles</ref><sp/>a2<sp/>=<sp/>loggedViewAngles[<sp/>(<sp/>gameLocal.framenum<sp/>-<sp/>j<sp/>)<sp/>&amp;<sp/>(NUM_LOGGED_VIEW_ANGLES-1)<sp/>];</highlight></codeline>
<codeline lineno="7009"><highlight class="normal"></highlight></codeline>
<codeline lineno="7010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_angles" kindref="compound">idAngles</ref><sp/>delta<sp/>=<sp/>a2<sp/>-<sp/>current;</highlight></codeline>
<codeline lineno="7011"><highlight class="normal"></highlight></codeline>
<codeline lineno="7012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>delta[1]<sp/>&gt;<sp/>180<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta[1]<sp/>-=<sp/>360;</highlight></codeline>
<codeline lineno="7014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>delta[1]<sp/>&lt;<sp/>-180<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta[1]<sp/>+=<sp/>360;</highlight></codeline>
<codeline lineno="7016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7017"><highlight class="normal"></highlight></codeline>
<codeline lineno="7018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>av<sp/>+=<sp/>delta<sp/>*<sp/>(<sp/>1.0f<sp/>/<sp/>weaponAngleOffsetAverages<sp/>);</highlight></codeline>
<codeline lineno="7019"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7020"><highlight class="normal"></highlight></codeline>
<codeline lineno="7021"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(<sp/>av<sp/>-<sp/>current<sp/>)<sp/>*<sp/>weaponAngleOffsetScale;</highlight></codeline>
<codeline lineno="7022"><highlight class="normal"></highlight></codeline>
<codeline lineno="7023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>3<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>a[i]<sp/>&lt;<sp/>-weaponAngleOffsetMax<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a[i]<sp/>=<sp/>-weaponAngleOffsetMax;</highlight></codeline>
<codeline lineno="7026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>a[i]<sp/>&gt;<sp/>weaponAngleOffsetMax<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a[i]<sp/>=<sp/>weaponAngleOffsetMax;</highlight></codeline>
<codeline lineno="7028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7029"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7030"><highlight class="normal"></highlight></codeline>
<codeline lineno="7031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="7032"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7033"><highlight class="normal"></highlight></codeline>
<codeline lineno="7034"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7035"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="7036"><highlight class="comment">idPlayer::GunAcceleratingOffset</highlight></codeline>
<codeline lineno="7037"><highlight class="comment"></highlight></codeline>
<codeline lineno="7038"><highlight class="comment">generate<sp/>a<sp/>positional<sp/>offset<sp/>for<sp/>the<sp/>gun<sp/>based<sp/>on<sp/>the<sp/>movement</highlight></codeline>
<codeline lineno="7039"><highlight class="comment">history<sp/>in<sp/>loggedAccelerations</highlight></codeline>
<codeline lineno="7040"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="7041"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7042"><highlight class="normal"><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/>idPlayer::GunAcceleratingOffset(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7043"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/>ofs;</highlight></codeline>
<codeline lineno="7044"><highlight class="normal"></highlight></codeline>
<codeline lineno="7045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>weaponOffsetTime,<sp/>weaponOffsetScale;</highlight></codeline>
<codeline lineno="7046"><highlight class="normal"></highlight></codeline>
<codeline lineno="7047"><highlight class="normal"><sp/><sp/><sp/><sp/>ofs.Zero();</highlight></codeline>
<codeline lineno="7048"><highlight class="normal"></highlight></codeline>
<codeline lineno="7049"><highlight class="normal"><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;GetWeaponTimeOffsets(<sp/>&amp;weaponOffsetTime,<sp/>&amp;weaponOffsetScale<sp/>);</highlight></codeline>
<codeline lineno="7050"><highlight class="normal"></highlight></codeline>
<codeline lineno="7051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stop<sp/>=<sp/>currentLoggedAccel<sp/>-<sp/>NUM_LOGGED_ACCELS;</highlight></codeline>
<codeline lineno="7052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>stop<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7054"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>currentLoggedAccel-1<sp/>;<sp/>i<sp/>&gt;<sp/>stop<sp/>;<sp/>i--<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlogged_accel__t" kindref="compound">loggedAccel_t</ref><sp/><sp/><sp/>*acc<sp/>=<sp/>&amp;loggedAccel[i&amp;(NUM_LOGGED_ACCELS-1)];</highlight></codeline>
<codeline lineno="7057"><highlight class="normal"></highlight></codeline>
<codeline lineno="7058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>f;</highlight></codeline>
<codeline lineno="7059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>t<sp/>=<sp/>gameLocal.time<sp/>-<sp/>acc-&gt;time;</highlight></codeline>
<codeline lineno="7060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>t<sp/>&gt;=<sp/>weaponOffsetTime<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>remainder<sp/>are<sp/>too<sp/>old<sp/>to<sp/>care<sp/>about</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7063"><highlight class="normal"></highlight></codeline>
<codeline lineno="7064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>t<sp/>/<sp/>weaponOffsetTime;</highlight></codeline>
<codeline lineno="7065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>(<sp/>cos(<sp/>f<sp/>*<sp/>2.0f<sp/>*<sp/>idMath::PI<sp/>)<sp/>-<sp/>1.0f<sp/>)<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="7066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ofs<sp/>+=<sp/>f<sp/>*<sp/>weaponOffsetScale<sp/>*<sp/>acc-&gt;dir;</highlight></codeline>
<codeline lineno="7067"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7068"><highlight class="normal"></highlight></codeline>
<codeline lineno="7069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ofs;</highlight></codeline>
<codeline lineno="7070"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7071"><highlight class="normal"></highlight></codeline>
<codeline lineno="7072"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7073"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="7074"><highlight class="comment">idPlayer::CalculateViewWeaponPos</highlight></codeline>
<codeline lineno="7075"><highlight class="comment"></highlight></codeline>
<codeline lineno="7076"><highlight class="comment">Calculate<sp/>the<sp/>bobbing<sp/>position<sp/>of<sp/>the<sp/>view<sp/>weapon</highlight></codeline>
<codeline lineno="7077"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="7078"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7079"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::CalculateViewWeaponPos(<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;origin,<sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/>&amp;axis<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale;</highlight></codeline>
<codeline lineno="7081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fracsin;</highlight></codeline>
<codeline lineno="7082"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_angles" kindref="compound">idAngles</ref><sp/><sp/><sp/><sp/>angles;</highlight></codeline>
<codeline lineno="7083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta;</highlight></codeline>
<codeline lineno="7084"><highlight class="normal"></highlight></codeline>
<codeline lineno="7085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CalculateRenderView<sp/>must<sp/>have<sp/>been<sp/>called<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;viewOrigin<sp/>=<sp/>firstPersonViewOrigin;</highlight></codeline>
<codeline lineno="7087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/>&amp;viewAxis<sp/>=<sp/>firstPersonViewAxis;</highlight></codeline>
<codeline lineno="7088"><highlight class="normal"></highlight></codeline>
<codeline lineno="7089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>cvars<sp/>are<sp/>just<sp/>for<sp/>hand<sp/>tweaking<sp/>before<sp/>moving<sp/>a<sp/>value<sp/>to<sp/>the<sp/>weapon<sp/>def</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7090"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/>gunpos(<sp/>g_gun_x.GetFloat(),<sp/>g_gun_y.GetFloat(),<sp/>g_gun_z.GetFloat()<sp/>);</highlight></codeline>
<codeline lineno="7091"><highlight class="normal"></highlight></codeline>
<codeline lineno="7092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>the<sp/>player<sp/>changes<sp/>direction,<sp/>the<sp/>gun<sp/>will<sp/>take<sp/>a<sp/>small<sp/>lag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7093"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/>gunOfs<sp/>=<sp/>GunAcceleratingOffset();</highlight></codeline>
<codeline lineno="7094"><highlight class="normal"><sp/><sp/><sp/><sp/>origin<sp/>=<sp/>viewOrigin<sp/>+<sp/>(<sp/>gunpos<sp/>+<sp/>gunOfs<sp/>)<sp/>*<sp/>viewAxis;</highlight></codeline>
<codeline lineno="7095"><highlight class="normal"></highlight></codeline>
<codeline lineno="7096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>odd<sp/>legs,<sp/>invert<sp/>some<sp/>angles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bobCycle<sp/>&amp;<sp/>128<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale<sp/>=<sp/>-xyspeed;</highlight></codeline>
<codeline lineno="7099"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale<sp/>=<sp/>xyspeed;</highlight></codeline>
<codeline lineno="7101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7102"><highlight class="normal"></highlight></codeline>
<codeline lineno="7103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gun<sp/>angles<sp/>from<sp/>bobbing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7104"><highlight class="normal"><sp/><sp/><sp/><sp/>angles.roll<sp/><sp/><sp/><sp/><sp/>=<sp/>scale<sp/>*<sp/>bobfracsin<sp/>*<sp/>0.005f;</highlight></codeline>
<codeline lineno="7105"><highlight class="normal"><sp/><sp/><sp/><sp/>angles.yaw<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>scale<sp/>*<sp/>bobfracsin<sp/>*<sp/>0.01f;</highlight></codeline>
<codeline lineno="7106"><highlight class="normal"><sp/><sp/><sp/><sp/>angles.pitch<sp/><sp/><sp/><sp/>=<sp/>xyspeed<sp/>*<sp/>bobfracsin<sp/>*<sp/>0.005f;</highlight></codeline>
<codeline lineno="7107"><highlight class="normal"></highlight></codeline>
<codeline lineno="7108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gun<sp/>angles<sp/>from<sp/>turning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isMultiplayer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_angles" kindref="compound">idAngles</ref><sp/>offset<sp/>=<sp/>GunTurningOffset();</highlight></codeline>
<codeline lineno="7111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>*=<sp/>g_mpWeaponAngleScale.GetFloat();</highlight></codeline>
<codeline lineno="7112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angles<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="7113"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angles<sp/>+=<sp/>GunTurningOffset();</highlight></codeline>
<codeline lineno="7115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7116"><highlight class="normal"></highlight></codeline>
<codeline lineno="7117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>gravity<sp/>=<sp/>physicsObj.GetGravityNormal();</highlight></codeline>
<codeline lineno="7118"><highlight class="normal"></highlight></codeline>
<codeline lineno="7119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drop<sp/>the<sp/>weapon<sp/>when<sp/>landing<sp/>after<sp/>a<sp/>jump<sp/>/<sp/>fall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7120"><highlight class="normal"><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>gameLocal.time<sp/>-<sp/>landTime;</highlight></codeline>
<codeline lineno="7121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>delta<sp/>&lt;<sp/>LAND_DEFLECT_TIME<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>origin<sp/>-=<sp/>gravity<sp/>*<sp/>(<sp/>landChange*0.25f<sp/>*<sp/>delta<sp/>/<sp/>LAND_DEFLECT_TIME<sp/>);</highlight></codeline>
<codeline lineno="7123"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>delta<sp/>&lt;<sp/>LAND_DEFLECT_TIME<sp/>+<sp/>LAND_RETURN_TIME<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>origin<sp/>-=<sp/>gravity<sp/>*<sp/>(<sp/>landChange*0.25f<sp/>*<sp/>(LAND_DEFLECT_TIME<sp/>+<sp/>LAND_RETURN_TIME<sp/>-<sp/>delta)<sp/>/<sp/>LAND_RETURN_TIME<sp/>);</highlight></codeline>
<codeline lineno="7125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7126"><highlight class="normal"></highlight></codeline>
<codeline lineno="7127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>speed<sp/>sensitive<sp/>idle<sp/>drift</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7128"><highlight class="normal"><sp/><sp/><sp/><sp/>scale<sp/>=<sp/>xyspeed<sp/>+<sp/>40.0f;</highlight></codeline>
<codeline lineno="7129"><highlight class="normal"><sp/><sp/><sp/><sp/>fracsin<sp/>=<sp/>scale<sp/>*<sp/>sin(<sp/>MS2SEC(<sp/>gameLocal.time<sp/>)<sp/>)<sp/>*<sp/>0.01f;</highlight></codeline>
<codeline lineno="7130"><highlight class="normal"><sp/><sp/><sp/><sp/>angles.roll<sp/><sp/><sp/><sp/><sp/>+=<sp/>fracsin;</highlight></codeline>
<codeline lineno="7131"><highlight class="normal"><sp/><sp/><sp/><sp/>angles.yaw<sp/><sp/><sp/><sp/><sp/><sp/>+=<sp/>fracsin;</highlight></codeline>
<codeline lineno="7132"><highlight class="normal"><sp/><sp/><sp/><sp/>angles.pitch<sp/><sp/><sp/><sp/>+=<sp/>fracsin;</highlight></codeline>
<codeline lineno="7133"><highlight class="normal"></highlight></codeline>
<codeline lineno="7134"><highlight class="normal"><sp/><sp/><sp/><sp/>axis<sp/>=<sp/>angles.ToMat3()<sp/>*<sp/>viewAxis;</highlight></codeline>
<codeline lineno="7135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7136"><highlight class="normal"></highlight></codeline>
<codeline lineno="7137"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7138"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="7139"><highlight class="comment">idPlayer::OffsetThirdPersonView</highlight></codeline>
<codeline lineno="7140"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="7141"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7142"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::OffsetThirdPersonView(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clip<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view;</highlight></codeline>
<codeline lineno="7144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusAngles;</highlight></codeline>
<codeline lineno="7145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtrace__s" kindref="compound">trace_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trace;</highlight></codeline>
<codeline lineno="7146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusPoint;</highlight></codeline>
<codeline lineno="7147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusDist;</highlight></codeline>
<codeline lineno="7148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forwardScale,<sp/>sideScale;</highlight></codeline>
<codeline lineno="7149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>origin;</highlight></codeline>
<codeline lineno="7150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_angles" kindref="compound">idAngles</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angles;</highlight></codeline>
<codeline lineno="7151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axis;</highlight></codeline>
<codeline lineno="7152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_bounds" kindref="compound">idBounds</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds;</highlight></codeline>
<codeline lineno="7153"><highlight class="normal"></highlight></codeline>
<codeline lineno="7154"><highlight class="normal"><sp/><sp/><sp/><sp/>angles<sp/>=<sp/>viewAngles;</highlight></codeline>
<codeline lineno="7155"><highlight class="normal"><sp/><sp/><sp/><sp/>GetViewPos(<sp/>origin,<sp/>axis<sp/>);</highlight></codeline>
<codeline lineno="7156"><highlight class="normal"></highlight></codeline>
<codeline lineno="7157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>angle<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angles.pitch<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="7159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7160"><highlight class="normal"></highlight></codeline>
<codeline lineno="7161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>angles.pitch<sp/>&gt;<sp/>45.0f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angles.pitch<sp/>=<sp/>45.0f;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>go<sp/>too<sp/>far<sp/>overhead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7164"><highlight class="normal"></highlight></codeline>
<codeline lineno="7165"><highlight class="normal"><sp/><sp/><sp/><sp/>focusPoint<sp/>=<sp/>origin<sp/>+<sp/>angles.ToForward()<sp/>*<sp/>THIRD_PERSON_FOCUS_DISTANCE;</highlight></codeline>
<codeline lineno="7166"><highlight class="normal"><sp/><sp/><sp/><sp/>focusPoint.z<sp/>+=<sp/>height;</highlight></codeline>
<codeline lineno="7167"><highlight class="normal"><sp/><sp/><sp/><sp/>view<sp/>=<sp/>origin;</highlight></codeline>
<codeline lineno="7168"><highlight class="normal"><sp/><sp/><sp/><sp/>view.z<sp/>+=<sp/>8<sp/>+<sp/>height;</highlight></codeline>
<codeline lineno="7169"><highlight class="normal"></highlight></codeline>
<codeline lineno="7170"><highlight class="normal"><sp/><sp/><sp/><sp/>angles.pitch<sp/>*=<sp/>0.5f;</highlight></codeline>
<codeline lineno="7171"><highlight class="normal"><sp/><sp/><sp/><sp/>renderView-&gt;viewaxis<sp/>=<sp/>angles.ToMat3()<sp/>*<sp/>physicsObj.GetGravityAxis();</highlight></codeline>
<codeline lineno="7172"><highlight class="normal"></highlight></codeline>
<codeline lineno="7173"><highlight class="normal"><sp/><sp/><sp/><sp/>idMath::SinCos(<sp/>DEG2RAD(<sp/>angle<sp/>),<sp/>sideScale,<sp/>forwardScale<sp/>);</highlight></codeline>
<codeline lineno="7174"><highlight class="normal"><sp/><sp/><sp/><sp/>view<sp/>-=<sp/>range<sp/>*<sp/>forwardScale<sp/>*<sp/>renderView-&gt;viewaxis[<sp/>0<sp/>];</highlight></codeline>
<codeline lineno="7175"><highlight class="normal"><sp/><sp/><sp/><sp/>view<sp/>+=<sp/>range<sp/>*<sp/>sideScale<sp/>*<sp/>renderView-&gt;viewaxis[<sp/>1<sp/>];</highlight></codeline>
<codeline lineno="7176"><highlight class="normal"></highlight></codeline>
<codeline lineno="7177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>clip<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>trace<sp/>a<sp/>ray<sp/>from<sp/>the<sp/>origin<sp/>to<sp/>the<sp/>viewpoint<sp/>to<sp/>make<sp/>sure<sp/>the<sp/>view<sp/>isn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>a<sp/>solid<sp/>block.<sp/><sp/>Use<sp/>an<sp/>8<sp/>by<sp/>8<sp/>block<sp/>to<sp/>prevent<sp/>the<sp/>view<sp/>from<sp/>near<sp/>clipping<sp/>anything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds<sp/>=<sp/><ref refid="classid_bounds" kindref="compound">idBounds</ref>(<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(<sp/>-4,<sp/>-4,<sp/>-4<sp/>),<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(<sp/>4,<sp/>4,<sp/>4<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="7181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.clip.TraceBounds(<sp/>trace,<sp/>origin,<sp/>view,<sp/>bounds,<sp/>MASK_SOLID,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>trace.fraction<sp/>!=<sp/>1.0f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view<sp/>=<sp/>trace.endpos;</highlight></codeline>
<codeline lineno="7184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view.z<sp/>+=<sp/>(<sp/>1.0f<sp/>-<sp/>trace.fraction<sp/>)<sp/>*<sp/>32.0f;</highlight></codeline>
<codeline lineno="7185"><highlight class="normal"></highlight></codeline>
<codeline lineno="7186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>another<sp/>trace<sp/>to<sp/>this<sp/>position,<sp/>because<sp/>a<sp/>tunnel<sp/>may<sp/>have<sp/>the<sp/>ceiling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>close<sp/>enough<sp/>that<sp/>this<sp/>is<sp/>poking<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.clip.TraceBounds(<sp/>trace,<sp/>origin,<sp/>view,<sp/>bounds,<sp/>MASK_SOLID,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view<sp/>=<sp/>trace.endpos;</highlight></codeline>
<codeline lineno="7190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7192"><highlight class="normal"></highlight></codeline>
<codeline lineno="7193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>select<sp/>pitch<sp/>to<sp/>look<sp/>at<sp/>focus<sp/>point<sp/>from<sp/>vieword</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7194"><highlight class="normal"><sp/><sp/><sp/><sp/>focusPoint<sp/>-=<sp/>view;</highlight></codeline>
<codeline lineno="7195"><highlight class="normal"><sp/><sp/><sp/><sp/>focusDist<sp/>=<sp/>idMath::Sqrt(<sp/>focusPoint[0]<sp/>*<sp/>focusPoint[0]<sp/>+<sp/>focusPoint[1]<sp/>*<sp/>focusPoint[1]<sp/>);</highlight></codeline>
<codeline lineno="7196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>focusDist<sp/>&lt;<sp/>1.0f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusDist<sp/>=<sp/>1.0f;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>never<sp/>happen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7199"><highlight class="normal"></highlight></codeline>
<codeline lineno="7200"><highlight class="normal"><sp/><sp/><sp/><sp/>angles.pitch<sp/>=<sp/>-<sp/>RAD2DEG(<sp/>atan2(<sp/>focusPoint.z,<sp/>focusDist<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="7201"><highlight class="normal"><sp/><sp/><sp/><sp/>angles.yaw<sp/>-=<sp/>angle;</highlight></codeline>
<codeline lineno="7202"><highlight class="normal"></highlight></codeline>
<codeline lineno="7203"><highlight class="normal"><sp/><sp/><sp/><sp/>renderView-&gt;vieworg<sp/>=<sp/>view;</highlight></codeline>
<codeline lineno="7204"><highlight class="normal"><sp/><sp/><sp/><sp/>renderView-&gt;viewaxis<sp/>=<sp/>angles.ToMat3()<sp/>*<sp/>physicsObj.GetGravityAxis();</highlight></codeline>
<codeline lineno="7205"><highlight class="normal"><sp/><sp/><sp/><sp/>renderView-&gt;viewID<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7207"><highlight class="normal"></highlight></codeline>
<codeline lineno="7208"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7209"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="7210"><highlight class="comment">idPlayer::GetEyePosition</highlight></codeline>
<codeline lineno="7211"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="7212"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7213"><highlight class="normal"><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>idPlayer::GetEyePosition(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>org;</highlight></codeline>
<codeline lineno="7215"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="7216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>the<sp/>smoothed<sp/>origin<sp/>if<sp/>spectating<sp/>another<sp/>player<sp/>in<sp/>multiplayer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isClient<sp/>&amp;&amp;<sp/>entityNumber<sp/>!=<sp/>gameLocal.localClientNum<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>org<sp/>=<sp/>smoothedOrigin;</highlight></codeline>
<codeline lineno="7219"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>org<sp/>=<sp/>GetPhysics()-&gt;GetOrigin();</highlight></codeline>
<codeline lineno="7221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>org<sp/>+<sp/>(<sp/>GetPhysics()-&gt;GetGravityNormal()<sp/>*<sp/>-eyeOffset.z<sp/>);</highlight></codeline>
<codeline lineno="7223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7224"><highlight class="normal"></highlight></codeline>
<codeline lineno="7225"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7226"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="7227"><highlight class="comment">idPlayer::GetViewPos</highlight></codeline>
<codeline lineno="7228"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="7229"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7230"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::GetViewPos(<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;origin,<sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/>&amp;axis<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_angles" kindref="compound">idAngles</ref><sp/>angles;</highlight></codeline>
<codeline lineno="7232"><highlight class="normal"></highlight></codeline>
<codeline lineno="7233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>dead,<sp/>fix<sp/>the<sp/>angle<sp/>and<sp/>don&apos;t<sp/>add<sp/>any<sp/>kick</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&lt;=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angles.yaw<sp/>=<sp/>viewAngles.yaw;</highlight></codeline>
<codeline lineno="7236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angles.roll<sp/>=<sp/>40;</highlight></codeline>
<codeline lineno="7237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angles.pitch<sp/>=<sp/>-15;</highlight></codeline>
<codeline lineno="7238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axis<sp/>=<sp/>angles.ToMat3();</highlight></codeline>
<codeline lineno="7239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>origin<sp/>=<sp/>GetEyePosition();</highlight></codeline>
<codeline lineno="7240"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>origin<sp/>=<sp/>GetEyePosition()<sp/>+<sp/>viewBob;</highlight></codeline>
<codeline lineno="7242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angles<sp/>=<sp/>viewAngles<sp/>+<sp/>viewBobAngles<sp/>+<sp/>playerView.AngleOffset();</highlight></codeline>
<codeline lineno="7243"><highlight class="normal"></highlight></codeline>
<codeline lineno="7244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axis<sp/>=<sp/>angles.ToMat3()<sp/>*<sp/>physicsObj.GetGravityAxis();</highlight></codeline>
<codeline lineno="7245"><highlight class="normal"></highlight></codeline>
<codeline lineno="7246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>adjust<sp/>the<sp/>origin<sp/>based<sp/>on<sp/>the<sp/>camera<sp/>nodal<sp/>distance<sp/>(eye<sp/>distance<sp/>from<sp/>neck)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>origin<sp/>+=<sp/>physicsObj.GetGravityNormal()<sp/>*<sp/>g_viewNodalZ.GetFloat();</highlight></codeline>
<codeline lineno="7248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>origin<sp/>+=<sp/>axis[0]<sp/>*<sp/>g_viewNodalX.GetFloat()<sp/>+<sp/>axis[2]<sp/>*<sp/>g_viewNodalZ.GetFloat();</highlight></codeline>
<codeline lineno="7249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7251"><highlight class="normal"></highlight></codeline>
<codeline lineno="7252"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7253"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="7254"><highlight class="comment">idPlayer::CalculateFirstPersonView</highlight></codeline>
<codeline lineno="7255"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="7256"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7257"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::CalculateFirstPersonView(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>pm_modelView.GetInteger()<sp/>==<sp/>1<sp/>)<sp/>||<sp/>(<sp/>(<sp/>pm_modelView.GetInteger()<sp/>==<sp/>2<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>health<sp/>&lt;=<sp/>0<sp/>)<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Displays<sp/>the<sp/>view<sp/>from<sp/>the<sp/>point<sp/>of<sp/>view<sp/>of<sp/>the<sp/>&quot;camera&quot;<sp/>joint<sp/>in<sp/>the<sp/>player<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7260"><highlight class="normal"></highlight></codeline>
<codeline lineno="7261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/>axis;</highlight></codeline>
<codeline lineno="7262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>origin;</highlight></codeline>
<codeline lineno="7263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_angles" kindref="compound">idAngles</ref><sp/>ang;</highlight></codeline>
<codeline lineno="7264"><highlight class="normal"></highlight></codeline>
<codeline lineno="7265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ang<sp/>=<sp/>viewBobAngles<sp/>+<sp/>playerView.AngleOffset();</highlight></codeline>
<codeline lineno="7266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ang.yaw<sp/>+=<sp/>viewAxis[<sp/>0<sp/>].ToYaw();</highlight></codeline>
<codeline lineno="7267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jointHandle_t<sp/>joint<sp/>=<sp/>animator.GetJointHandle(<sp/></highlight><highlight class="stringliteral">&quot;camera&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>animator.GetJointTransform(<sp/>joint,<sp/>gameLocal.time,<sp/>origin,<sp/>axis<sp/>);</highlight></codeline>
<codeline lineno="7270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstPersonViewOrigin<sp/>=<sp/>(<sp/>origin<sp/>+<sp/>modelOffset<sp/>)<sp/>*<sp/>(<sp/>viewAxis<sp/>*<sp/>physicsObj.GetGravityAxis()<sp/>)<sp/>+<sp/>physicsObj.GetOrigin()<sp/>+<sp/>viewBob;</highlight></codeline>
<codeline lineno="7271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstPersonViewAxis<sp/>=<sp/>axis<sp/>*<sp/>ang.ToMat3()<sp/>*<sp/>physicsObj.GetGravityAxis();</highlight></codeline>
<codeline lineno="7272"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>offset<sp/>for<sp/>local<sp/>bobbing<sp/>and<sp/>kicks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetViewPos(<sp/>firstPersonViewOrigin,<sp/>firstPersonViewAxis<sp/>);</highlight></codeline>
<codeline lineno="7275"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="7276"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shakefrom<sp/>sound<sp/>stuff<sp/>only<sp/>happens<sp/>in<sp/>first<sp/>person</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstPersonViewAxis<sp/>=<sp/>firstPersonViewAxis<sp/>*<sp/>playerView.ShakeAxis();</highlight></codeline>
<codeline lineno="7278"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="7279"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7281"><highlight class="normal"></highlight></codeline>
<codeline lineno="7282"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7283"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7284"><highlight class="comment">idPlayer::GetRenderView</highlight></codeline>
<codeline lineno="7285"><highlight class="comment"></highlight></codeline>
<codeline lineno="7286"><highlight class="comment">Returns<sp/>the<sp/>renderView<sp/>that<sp/>was<sp/>calculated<sp/>for<sp/>this<sp/>tic</highlight></codeline>
<codeline lineno="7287"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7288"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7289"><highlight class="normal"><ref refid="structrender_view__s" kindref="compound">renderView_t</ref><sp/>*idPlayer::GetRenderView(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>renderView;</highlight></codeline>
<codeline lineno="7291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7292"><highlight class="normal"></highlight></codeline>
<codeline lineno="7293"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7294"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7295"><highlight class="comment">idPlayer::CalculateRenderView</highlight></codeline>
<codeline lineno="7296"><highlight class="comment"></highlight></codeline>
<codeline lineno="7297"><highlight class="comment">create<sp/>the<sp/>renderView<sp/>for<sp/>the<sp/>current<sp/>tic</highlight></codeline>
<codeline lineno="7298"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7299"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7300"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::CalculateRenderView(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="7302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range;</highlight></codeline>
<codeline lineno="7303"><highlight class="normal"></highlight></codeline>
<codeline lineno="7304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!renderView<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderView<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structrender_view__s" kindref="compound">renderView_t</ref>;</highlight></codeline>
<codeline lineno="7306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7307"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>renderView,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>*renderView<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="7308"><highlight class="normal"></highlight></codeline>
<codeline lineno="7309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>global<sp/>shader<sp/>parms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_GLOBAL_SHADER_PARMS;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderView-&gt;shaderParms[<sp/>i<sp/>]<sp/>=<sp/>gameLocal.globalShaderParms[<sp/>i<sp/>];</highlight></codeline>
<codeline lineno="7312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7313"><highlight class="normal"><sp/><sp/><sp/><sp/>renderView-&gt;globalMaterial<sp/>=<sp/>gameLocal.GetGlobalMaterial();</highlight></codeline>
<codeline lineno="7314"><highlight class="normal"><sp/><sp/><sp/><sp/>renderView-&gt;time<sp/>=<sp/>gameLocal.time;</highlight></codeline>
<codeline lineno="7315"><highlight class="normal"></highlight></codeline>
<codeline lineno="7316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>size<sp/>of<sp/>3D<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7317"><highlight class="normal"><sp/><sp/><sp/><sp/>renderView-&gt;x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7318"><highlight class="normal"><sp/><sp/><sp/><sp/>renderView-&gt;y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7319"><highlight class="normal"><sp/><sp/><sp/><sp/>renderView-&gt;width<sp/>=<sp/>SCREEN_WIDTH;</highlight></codeline>
<codeline lineno="7320"><highlight class="normal"><sp/><sp/><sp/><sp/>renderView-&gt;height<sp/>=<sp/>SCREEN_HEIGHT;</highlight></codeline>
<codeline lineno="7321"><highlight class="normal"><sp/><sp/><sp/><sp/>renderView-&gt;viewID<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7322"><highlight class="normal"></highlight></codeline>
<codeline lineno="7323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>we<sp/>should<sp/>be<sp/>drawing<sp/>from<sp/>a<sp/>camera&apos;s<sp/>POV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!noclip<sp/>&amp;&amp;<sp/>(gameLocal.GetCamera()<sp/>||<sp/>privateCameraView)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>origin,<sp/>axis,<sp/>and<sp/>fov</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>privateCameraView<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>privateCameraView-&gt;GetViewParms(<sp/>renderView<sp/>);</highlight></codeline>
<codeline lineno="7328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.GetCamera()-&gt;GetViewParms(<sp/>renderView<sp/>);</highlight></codeline>
<codeline lineno="7330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7331"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>g_stopTime.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderView-&gt;vieworg<sp/>=<sp/>firstPersonViewOrigin;</highlight></codeline>
<codeline lineno="7334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderView-&gt;viewaxis<sp/>=<sp/>firstPersonViewAxis;</highlight></codeline>
<codeline lineno="7335"><highlight class="normal"></highlight></codeline>
<codeline lineno="7336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pm_thirdPerson.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>viewID<sp/>to<sp/>the<sp/>clientNum<sp/>+<sp/>1,<sp/>so<sp/>we<sp/>can<sp/>suppress<sp/>the<sp/>right<sp/>player<sp/>bodies<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allow<sp/>the<sp/>right<sp/>player<sp/>view<sp/>weapons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderView-&gt;viewID<sp/>=<sp/>entityNumber<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="7340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pm_thirdPerson.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OffsetThirdPersonView(<sp/>pm_thirdPersonAngle.GetFloat(),<sp/>pm_thirdPersonRange.GetFloat(),<sp/>pm_thirdPersonHeight.GetFloat(),<sp/>pm_thirdPersonClip.GetBool()<sp/>);</highlight></codeline>
<codeline lineno="7343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pm_thirdPersonDeath.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range<sp/>=<sp/>gameLocal.time<sp/>&lt;<sp/>minRespawnTime<sp/>?<sp/>(<sp/>gameLocal.time<sp/>+<sp/>RAGDOLL_DEATH_TIME<sp/>-<sp/>minRespawnTime<sp/>)<sp/>*<sp/>(<sp/>120.0f<sp/>/<sp/>RAGDOLL_DEATH_TIME<sp/>)<sp/>:<sp/>120.0f;</highlight></codeline>
<codeline lineno="7345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OffsetThirdPersonView(<sp/>0.0f,<sp/>20.0f<sp/>+<sp/>range,<sp/>0.0f,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderView-&gt;vieworg<sp/>=<sp/>firstPersonViewOrigin;</highlight></codeline>
<codeline lineno="7348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderView-&gt;viewaxis<sp/>=<sp/>firstPersonViewAxis;</highlight></codeline>
<codeline lineno="7349"><highlight class="normal"></highlight></codeline>
<codeline lineno="7350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>viewID<sp/>to<sp/>the<sp/>clientNum<sp/>+<sp/>1,<sp/>so<sp/>we<sp/>can<sp/>suppress<sp/>the<sp/>right<sp/>player<sp/>bodies<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allow<sp/>the<sp/>right<sp/>player<sp/>view<sp/>weapons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderView-&gt;viewID<sp/>=<sp/>entityNumber<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="7353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>field<sp/>of<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.CalcFov(<sp/>CalcFov(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>),<sp/>renderView-&gt;fov_x,<sp/>renderView-&gt;fov_y<sp/>);</highlight></codeline>
<codeline lineno="7357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7358"><highlight class="normal"></highlight></codeline>
<codeline lineno="7359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>renderView-&gt;fov_y<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Error(<sp/></highlight><highlight class="stringliteral">&quot;renderView-&gt;fov_y<sp/>==<sp/>0&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7362"><highlight class="normal"></highlight></codeline>
<codeline lineno="7363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>g_showviewpos.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Printf(<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>renderView-&gt;vieworg.ToString(),<sp/>renderView-&gt;viewaxis.ToAngles().ToString()<sp/>);</highlight></codeline>
<codeline lineno="7365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7367"><highlight class="normal"></highlight></codeline>
<codeline lineno="7368"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7369"><highlight class="comment">=============</highlight></codeline>
<codeline lineno="7370"><highlight class="comment">idPlayer::AddAIKill</highlight></codeline>
<codeline lineno="7371"><highlight class="comment">=============</highlight></codeline>
<codeline lineno="7372"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7373"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::AddAIKill(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_souls;</highlight></codeline>
<codeline lineno="7375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ammo_souls;</highlight></codeline>
<codeline lineno="7376"><highlight class="normal"></highlight></codeline>
<codeline lineno="7377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>weapon_soulcube<sp/>&lt;<sp/>0<sp/>)<sp/>||<sp/>(<sp/>inventory.weapons<sp/>&amp;<sp/>(<sp/>1<sp/>&lt;&lt;<sp/>weapon_soulcube<sp/>)<sp/>)<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7380"><highlight class="normal"></highlight></codeline>
<codeline lineno="7381"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>hud<sp/>);</highlight></codeline>
<codeline lineno="7382"><highlight class="normal"></highlight></codeline>
<codeline lineno="7383"><highlight class="normal"><sp/><sp/><sp/><sp/>ammo_souls<sp/>=<sp/>idWeapon::GetAmmoNumForName(<sp/></highlight><highlight class="stringliteral">&quot;ammo_souls&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7384"><highlight class="normal"><sp/><sp/><sp/><sp/>max_souls<sp/>=<sp/>inventory.MaxAmmoForAmmoClass(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ammo_souls&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>inventory.ammo[<sp/>ammo_souls<sp/>]<sp/>&lt;<sp/>max_souls<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.ammo[<sp/>ammo_souls<sp/>]++;</highlight></codeline>
<codeline lineno="7387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>inventory.ammo[<sp/>ammo_souls<sp/>]<sp/>&gt;=<sp/>max_souls<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;soulCubeReady&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartSound(<sp/></highlight><highlight class="stringliteral">&quot;snd_soulcube_ready&quot;</highlight><highlight class="normal">,<sp/>SND_CHANNEL_ANY,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="7390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7393"><highlight class="normal"></highlight></codeline>
<codeline lineno="7394"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7395"><highlight class="comment">=============</highlight></codeline>
<codeline lineno="7396"><highlight class="comment">idPlayer::SetSoulCubeProjectile</highlight></codeline>
<codeline lineno="7397"><highlight class="comment">=============</highlight></codeline>
<codeline lineno="7398"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7399"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::SetSoulCubeProjectile(<sp/><ref refid="classid_projectile" kindref="compound">idProjectile</ref><sp/>*projectile<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7400"><highlight class="normal"><sp/><sp/><sp/><sp/>soulCubeProjectile<sp/>=<sp/>projectile;</highlight></codeline>
<codeline lineno="7401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7402"><highlight class="normal"></highlight></codeline>
<codeline lineno="7403"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7404"><highlight class="comment">=============</highlight></codeline>
<codeline lineno="7405"><highlight class="comment">idPlayer::AddProjectilesFired</highlight></codeline>
<codeline lineno="7406"><highlight class="comment">=============</highlight></codeline>
<codeline lineno="7407"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7408"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::AddProjectilesFired(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7409"><highlight class="normal"><sp/><sp/><sp/><sp/>numProjectilesFired<sp/>+=<sp/>count;</highlight></codeline>
<codeline lineno="7410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7411"><highlight class="normal"></highlight></codeline>
<codeline lineno="7412"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7413"><highlight class="comment">=============</highlight></codeline>
<codeline lineno="7414"><highlight class="comment">idPlayer::AddProjectileHites</highlight></codeline>
<codeline lineno="7415"><highlight class="comment">=============</highlight></codeline>
<codeline lineno="7416"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7417"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::AddProjectileHits(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7418"><highlight class="normal"><sp/><sp/><sp/><sp/>numProjectileHits<sp/>+=<sp/>count;</highlight></codeline>
<codeline lineno="7419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7420"><highlight class="normal"></highlight></codeline>
<codeline lineno="7421"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7422"><highlight class="comment">=============</highlight></codeline>
<codeline lineno="7423"><highlight class="comment">idPlayer::SetLastHitTime</highlight></codeline>
<codeline lineno="7424"><highlight class="comment">=============</highlight></codeline>
<codeline lineno="7425"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7426"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::SetLastHitTime(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*aimed<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7428"><highlight class="normal"></highlight></codeline>
<codeline lineno="7429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>time<sp/>&amp;&amp;<sp/>lastHitTime<sp/>!=<sp/>time<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastHitToggle<sp/>^=<sp/>1;</highlight></codeline>
<codeline lineno="7431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7432"><highlight class="normal"><sp/><sp/><sp/><sp/>lastHitTime<sp/>=<sp/>time;</highlight></codeline>
<codeline lineno="7433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!time<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>level<sp/>start<sp/>and<sp/>inits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isMultiplayer<sp/>&amp;&amp;<sp/>(<sp/>time<sp/>-<sp/>lastSndHitTime<sp/>)<sp/>&gt;<sp/>10<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastSndHitTime<sp/>=<sp/>time;</highlight></codeline>
<codeline lineno="7439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartSound(<sp/></highlight><highlight class="stringliteral">&quot;snd_hit_feedback&quot;</highlight><highlight class="normal">,<sp/>SND_CHANNEL_ANY,<sp/>SSF_PRIVATE_SOUND,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="7440"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>cursor<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;hitTime&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>MPAim<sp/>!=<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.entities[<sp/>MPAim<sp/>]<sp/>&amp;&amp;<sp/>gameLocal.entities[<sp/>MPAim<sp/>]-&gt;IsType(<sp/>idPlayer::Type<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aimed<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>gameLocal.entities[<sp/>MPAim<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="7448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>aimed<sp/>);</highlight></codeline>
<codeline lineno="7450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>full<sp/>highlight,<sp/>no<sp/>fade<sp/>till<sp/>loosing<sp/>aim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;aim_text&quot;</highlight><highlight class="normal">,<sp/>gameLocal.userInfo[<sp/>MPAim<sp/>].GetString(<sp/></highlight><highlight class="stringliteral">&quot;ui_name&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="7452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>aimed<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;SetStateFloat(<sp/></highlight><highlight class="stringliteral">&quot;aim_color&quot;</highlight><highlight class="normal">,<sp/>aimed-&gt;colorBarIndex<sp/>);</highlight></codeline>
<codeline lineno="7454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;aim_flash&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPAimHighlight<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPAimFadeTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>lastMPAim<sp/>!=<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.entities[<sp/>lastMPAim<sp/>]<sp/>&amp;&amp;<sp/>gameLocal.entities[<sp/>lastMPAim<sp/>]-&gt;IsType(<sp/>idPlayer::Type<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aimed<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>gameLocal.entities[<sp/>lastMPAim<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="7461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>aimed<sp/>);</highlight></codeline>
<codeline lineno="7463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>fading<sp/>right<sp/>away</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;aim_text&quot;</highlight><highlight class="normal">,<sp/>gameLocal.userInfo[<sp/>lastMPAim<sp/>].GetString(<sp/></highlight><highlight class="stringliteral">&quot;ui_name&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="7465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>aimed<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;SetStateFloat(<sp/></highlight><highlight class="stringliteral">&quot;aim_color&quot;</highlight><highlight class="normal">,<sp/>aimed-&gt;colorBarIndex<sp/>);</highlight></codeline>
<codeline lineno="7467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;aim_flash&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;aim_fade&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPAimHighlight<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPAimFadeTime<sp/>=<sp/>gameLocal.realClientTime;</highlight></codeline>
<codeline lineno="7472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7473"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7475"><highlight class="normal"></highlight></codeline>
<codeline lineno="7476"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7477"><highlight class="comment">=============</highlight></codeline>
<codeline lineno="7478"><highlight class="comment">idPlayer::SetInfluenceLevel</highlight></codeline>
<codeline lineno="7479"><highlight class="comment">=============</highlight></codeline>
<codeline lineno="7480"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7481"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::SetInfluenceLevel(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>level<sp/>!=<sp/>influenceActive<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>level<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*ent<sp/>=<sp/>gameLocal.spawnedEntities.Next();<sp/>ent<sp/>!=<sp/>NULL;<sp/>ent<sp/>=<sp/>ent-&gt;spawnNode.Next()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ent-&gt;IsType(<sp/>idProjectile::Type<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>all<sp/>projectiles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;PostEventMS(<sp/>&amp;EV_Remove,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="7488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weaponEnabled<sp/>&amp;&amp;<sp/>weapon.GetEntity()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;EnterCinematic();</highlight></codeline>
<codeline lineno="7492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsObj.SetLinearVelocity(<sp/>vec3_origin<sp/>);</highlight></codeline>
<codeline lineno="7495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weaponEnabled<sp/>&amp;&amp;<sp/>weapon.GetEntity()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;ExitCinematic();</highlight></codeline>
<codeline lineno="7497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>influenceActive<sp/>=<sp/>level;</highlight></codeline>
<codeline lineno="7500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7502"><highlight class="normal"></highlight></codeline>
<codeline lineno="7503"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7504"><highlight class="comment">=============</highlight></codeline>
<codeline lineno="7505"><highlight class="comment">idPlayer::SetInfluenceView</highlight></codeline>
<codeline lineno="7506"><highlight class="comment">=============</highlight></codeline>
<codeline lineno="7507"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7508"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::SetInfluenceView(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mtr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*skinname,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius,<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*ent<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7509"><highlight class="normal"><sp/><sp/><sp/><sp/>influenceMaterial<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7510"><highlight class="normal"><sp/><sp/><sp/><sp/>influenceEntity<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7511"><highlight class="normal"><sp/><sp/><sp/><sp/>influenceSkin<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>mtr<sp/>&amp;&amp;<sp/>*mtr<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>influenceMaterial<sp/>=<sp/>declManager-&gt;FindMaterial(<sp/>mtr<sp/>);</highlight></codeline>
<codeline lineno="7514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>skinname<sp/>&amp;&amp;<sp/>*skinname<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>influenceSkin<sp/>=<sp/>declManager-&gt;FindSkin(<sp/>skinname<sp/>);</highlight></codeline>
<codeline lineno="7517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>head.GetEntity()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head.GetEntity()-&gt;GetRenderEntity()-&gt;shaderParms[<sp/>SHADERPARM_TIMEOFFSET<sp/>]<sp/>=<sp/>-MS2SEC(<sp/>gameLocal.time<sp/>);</highlight></codeline>
<codeline lineno="7519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateVisuals();</highlight></codeline>
<codeline lineno="7521"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7522"><highlight class="normal"><sp/><sp/><sp/><sp/>influenceRadius<sp/>=<sp/>radius;</highlight></codeline>
<codeline lineno="7523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>radius<sp/>&gt;<sp/>0.0f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>influenceEntity<sp/>=<sp/>ent;</highlight></codeline>
<codeline lineno="7525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7527"><highlight class="normal"></highlight></codeline>
<codeline lineno="7528"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7529"><highlight class="comment">=============</highlight></codeline>
<codeline lineno="7530"><highlight class="comment">idPlayer::SetInfluenceFov</highlight></codeline>
<codeline lineno="7531"><highlight class="comment">=============</highlight></codeline>
<codeline lineno="7532"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7533"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::SetInfluenceFov(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fov<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7534"><highlight class="normal"><sp/><sp/><sp/><sp/>influenceFov<sp/>=<sp/>fov;</highlight></codeline>
<codeline lineno="7535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7536"><highlight class="normal"></highlight></codeline>
<codeline lineno="7537"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7538"><highlight class="comment">================</highlight></codeline>
<codeline lineno="7539"><highlight class="comment">idPlayer::OnLadder</highlight></codeline>
<codeline lineno="7540"><highlight class="comment">================</highlight></codeline>
<codeline lineno="7541"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7542"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idPlayer::OnLadder(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>physicsObj.OnLadder();</highlight></codeline>
<codeline lineno="7544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7545"><highlight class="normal"></highlight></codeline>
<codeline lineno="7546"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7547"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7548"><highlight class="comment">idPlayer::Event_GetButtons</highlight></codeline>
<codeline lineno="7549"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7550"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7551"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Event_GetButtons(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7552"><highlight class="normal"><sp/><sp/><sp/><sp/>idThread::ReturnInt(<sp/>usercmd.buttons<sp/>);</highlight></codeline>
<codeline lineno="7553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7554"><highlight class="normal"></highlight></codeline>
<codeline lineno="7555"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7556"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7557"><highlight class="comment">idPlayer::Event_GetMove</highlight></codeline>
<codeline lineno="7558"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7559"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7560"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Event_GetMove(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7561"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>move(<sp/>usercmd.forwardmove,<sp/>usercmd.rightmove,<sp/>usercmd.upmove<sp/>);</highlight></codeline>
<codeline lineno="7562"><highlight class="normal"><sp/><sp/><sp/><sp/>idThread::ReturnVector(<sp/>move<sp/>);</highlight></codeline>
<codeline lineno="7563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7564"><highlight class="normal"></highlight></codeline>
<codeline lineno="7565"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7566"><highlight class="comment">================</highlight></codeline>
<codeline lineno="7567"><highlight class="comment">idPlayer::Event_GetViewAngles</highlight></codeline>
<codeline lineno="7568"><highlight class="comment">================</highlight></codeline>
<codeline lineno="7569"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7570"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Event_GetViewAngles(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7571"><highlight class="normal"><sp/><sp/><sp/><sp/>idThread::ReturnVector(<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(<sp/>viewAngles[0],<sp/>viewAngles[1],<sp/>viewAngles[2]<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="7572"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7573"><highlight class="normal"></highlight></codeline>
<codeline lineno="7574"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7575"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7576"><highlight class="comment">idPlayer::Event_StopFxFov</highlight></codeline>
<codeline lineno="7577"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7578"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7579"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Event_StopFxFov(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7580"><highlight class="normal"><sp/><sp/><sp/><sp/>fxFov<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7581"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7582"><highlight class="normal"></highlight></codeline>
<codeline lineno="7583"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7584"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7585"><highlight class="comment">idPlayer::StartFxFov<sp/></highlight></codeline>
<codeline lineno="7586"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7587"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7588"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::StartFxFov(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>duration<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="7589"><highlight class="normal"><sp/><sp/><sp/><sp/>fxFov<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7590"><highlight class="normal"><sp/><sp/><sp/><sp/>PostEventSec(<sp/>&amp;EV_Player_StopFxFov,<sp/>duration<sp/>);</highlight></codeline>
<codeline lineno="7591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7592"><highlight class="normal"></highlight></codeline>
<codeline lineno="7593"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7594"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7595"><highlight class="comment">idPlayer::Event_EnableWeapon<sp/></highlight></codeline>
<codeline lineno="7596"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7597"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7598"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Event_EnableWeapon(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7599"><highlight class="normal"><sp/><sp/><sp/><sp/>hiddenWeapon<sp/>=<sp/>gameLocal.world-&gt;spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;no_Weapons&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7600"><highlight class="normal"><sp/><sp/><sp/><sp/>weaponEnabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weapon.GetEntity()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;ExitCinematic();</highlight></codeline>
<codeline lineno="7603"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7605"><highlight class="normal"></highlight></codeline>
<codeline lineno="7606"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7607"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7608"><highlight class="comment">idPlayer::Event_DisableWeapon</highlight></codeline>
<codeline lineno="7609"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7610"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7611"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Event_DisableWeapon(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7612"><highlight class="normal"><sp/><sp/><sp/><sp/>hiddenWeapon<sp/>=<sp/>gameLocal.world-&gt;spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;no_Weapons&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7613"><highlight class="normal"><sp/><sp/><sp/><sp/>weaponEnabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weapon.GetEntity()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;EnterCinematic();</highlight></codeline>
<codeline lineno="7616"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7617"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7618"><highlight class="normal"></highlight></codeline>
<codeline lineno="7619"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7620"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7621"><highlight class="comment">idPlayer::Event_GetCurrentWeapon</highlight></codeline>
<codeline lineno="7622"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7623"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7624"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Event_GetCurrentWeapon(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*weapon;</highlight></codeline>
<codeline lineno="7626"><highlight class="normal"></highlight></codeline>
<codeline lineno="7627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>currentWeapon<sp/>&gt;=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon<sp/>=<sp/>spawnArgs.GetString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;def_weapon%d&quot;</highlight><highlight class="normal">,<sp/>currentWeapon<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="7629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idThread::ReturnString(<sp/>weapon<sp/>);</highlight></codeline>
<codeline lineno="7630"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idThread::ReturnString(<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7632"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7634"><highlight class="normal"></highlight></codeline>
<codeline lineno="7635"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7636"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7637"><highlight class="comment">idPlayer::Event_GetPreviousWeapon</highlight></codeline>
<codeline lineno="7638"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7639"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7640"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Event_GetPreviousWeapon(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*weapon;</highlight></codeline>
<codeline lineno="7642"><highlight class="normal"></highlight></codeline>
<codeline lineno="7643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>previousWeapon<sp/>&gt;=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pw<sp/>=<sp/>(<sp/>gameLocal.world-&gt;spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;no_Weapons&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>?<sp/>0<sp/>:<sp/>previousWeapon;</highlight></codeline>
<codeline lineno="7645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon<sp/>=<sp/>spawnArgs.GetString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;def_weapon%d&quot;</highlight><highlight class="normal">,<sp/>pw)<sp/>);</highlight></codeline>
<codeline lineno="7646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idThread::ReturnString(<sp/>weapon<sp/>);</highlight></codeline>
<codeline lineno="7647"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idThread::ReturnString(<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;def_weapon0&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="7649"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7650"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7651"><highlight class="normal"></highlight></codeline>
<codeline lineno="7652"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7653"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7654"><highlight class="comment">idPlayer::Event_SelectWeapon</highlight></codeline>
<codeline lineno="7655"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7656"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7657"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Event_SelectWeapon(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*weaponName<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="7659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>weaponNum;</highlight></codeline>
<codeline lineno="7660"><highlight class="normal"></highlight></codeline>
<codeline lineno="7661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isClient<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Warning(<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>switch<sp/>weapons<sp/>from<sp/>script<sp/>in<sp/>multiplayer&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7664"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7665"><highlight class="normal"></highlight></codeline>
<codeline lineno="7666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hiddenWeapon<sp/>&amp;&amp;<sp/>gameLocal.world-&gt;spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;no_Weapons&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idealWeapon<sp/>=<sp/>weapon_fists;</highlight></codeline>
<codeline lineno="7668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;HideWeapon();</highlight></codeline>
<codeline lineno="7669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7670"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7671"><highlight class="normal"></highlight></codeline>
<codeline lineno="7672"><highlight class="normal"><sp/><sp/><sp/><sp/>weaponNum<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="7673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_WEAPONS;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>inventory.weapons<sp/>&amp;<sp/>(<sp/>1<sp/>&lt;&lt;<sp/>i<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*weap<sp/>=<sp/>spawnArgs.GetString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;def_weapon%d&quot;</highlight><highlight class="normal">,<sp/>i<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="7676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!idStr::Cmp(<sp/>weap,<sp/>weaponName<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weaponNum<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="7678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7681"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7682"><highlight class="normal"></highlight></codeline>
<codeline lineno="7683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weaponNum<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Warning(<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>is<sp/>not<sp/>carrying<sp/>weapon<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/>name.c_str(),<sp/>weaponName<sp/>);</highlight></codeline>
<codeline lineno="7685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7686"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7687"><highlight class="normal"></highlight></codeline>
<codeline lineno="7688"><highlight class="normal"><sp/><sp/><sp/><sp/>hiddenWeapon<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7689"><highlight class="normal"><sp/><sp/><sp/><sp/>idealWeapon<sp/>=<sp/>weaponNum;</highlight></codeline>
<codeline lineno="7690"><highlight class="normal"></highlight></codeline>
<codeline lineno="7691"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateHudWeapon();</highlight></codeline>
<codeline lineno="7692"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7693"><highlight class="normal"></highlight></codeline>
<codeline lineno="7694"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7695"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7696"><highlight class="comment">idPlayer::Event_GetWeaponEntity</highlight></codeline>
<codeline lineno="7697"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7698"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7699"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Event_GetWeaponEntity(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7700"><highlight class="normal"><sp/><sp/><sp/><sp/>idThread::ReturnEntity(<sp/>weapon.GetEntity()<sp/>);</highlight></codeline>
<codeline lineno="7701"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7702"><highlight class="normal"></highlight></codeline>
<codeline lineno="7703"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7704"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7705"><highlight class="comment">idPlayer::Event_OpenPDA</highlight></codeline>
<codeline lineno="7706"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7707"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7708"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Event_OpenPDA(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.isMultiplayer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TogglePDA();</highlight></codeline>
<codeline lineno="7711"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7713"><highlight class="normal"></highlight></codeline>
<codeline lineno="7714"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7715"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7716"><highlight class="comment">idPlayer::Event_InPDA</highlight></codeline>
<codeline lineno="7717"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7718"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7719"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Event_InPDA(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7720"><highlight class="normal"><sp/><sp/><sp/><sp/>idThread::ReturnInt(<sp/>objectiveSystemOpen<sp/>);</highlight></codeline>
<codeline lineno="7721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7722"><highlight class="normal"></highlight></codeline>
<codeline lineno="7723"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7724"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7725"><highlight class="comment">idPlayer::TeleportDeath</highlight></codeline>
<codeline lineno="7726"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7727"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7728"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::TeleportDeath(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>killer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7729"><highlight class="normal"><sp/><sp/><sp/><sp/>teleportKiller<sp/>=<sp/>killer;</highlight></codeline>
<codeline lineno="7730"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7731"><highlight class="normal"></highlight></codeline>
<codeline lineno="7732"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7733"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7734"><highlight class="comment">idPlayer::Event_ExitTeleporter</highlight></codeline>
<codeline lineno="7735"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="7736"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7737"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Event_ExitTeleporter(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7738"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/><sp/><sp/><sp/>*exitEnt;</highlight></codeline>
<codeline lineno="7739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pushVel;</highlight></codeline>
<codeline lineno="7740"><highlight class="normal"></highlight></codeline>
<codeline lineno="7741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>verify<sp/>and<sp/>setup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7742"><highlight class="normal"><sp/><sp/><sp/><sp/>exitEnt<sp/>=<sp/>teleportEntity.GetEntity();</highlight></codeline>
<codeline lineno="7743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!exitEnt<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;DPrintf(<sp/></highlight><highlight class="stringliteral">&quot;Event_ExitTeleporter<sp/>player<sp/>%d<sp/>while<sp/>not<sp/>being<sp/>teleported\n&quot;</highlight><highlight class="normal">,<sp/>entityNumber<sp/>);</highlight></codeline>
<codeline lineno="7745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7746"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7747"><highlight class="normal"></highlight></codeline>
<codeline lineno="7748"><highlight class="normal"><sp/><sp/><sp/><sp/>pushVel<sp/>=<sp/>exitEnt-&gt;spawnArgs.GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;push&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;300&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7749"><highlight class="normal"></highlight></codeline>
<codeline lineno="7750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isServer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ServerSendEvent(<sp/>EVENT_EXIT_TELEPORTER,<sp/>NULL,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>-1<sp/>);</highlight></codeline>
<codeline lineno="7752"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7753"><highlight class="normal"></highlight></codeline>
<codeline lineno="7754"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPrivateCameraView(<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="7755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setup<sp/>origin<sp/>and<sp/>push<sp/>according<sp/>to<sp/>the<sp/>exit<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7756"><highlight class="normal"><sp/><sp/><sp/><sp/>SetOrigin(<sp/>exitEnt-&gt;GetPhysics()-&gt;GetOrigin()<sp/>+<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(<sp/>0,<sp/>0,<sp/>CM_CLIP_EPSILON<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="7757"><highlight class="normal"><sp/><sp/><sp/><sp/>SetViewAngles(<sp/>exitEnt-&gt;GetPhysics()-&gt;GetAxis().ToAngles()<sp/>);</highlight></codeline>
<codeline lineno="7758"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.SetLinearVelocity(<sp/>exitEnt-&gt;GetPhysics()-&gt;GetAxis()[<sp/>0<sp/>]<sp/>*<sp/>pushVel<sp/>);</highlight></codeline>
<codeline lineno="7759"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.ClearPushedVelocity();</highlight></codeline>
<codeline lineno="7760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>teleport<sp/>fx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7761"><highlight class="normal"><sp/><sp/><sp/><sp/>playerView.Flash(<sp/>colorWhite,<sp/>120<sp/>);</highlight></codeline>
<codeline lineno="7762"><highlight class="normal"></highlight></codeline>
<codeline lineno="7763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>the<sp/>ik<sp/>heights<sp/>so<sp/>model<sp/>doesn&apos;t<sp/>appear<sp/>in<sp/>the<sp/>wrong<sp/>place</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7764"><highlight class="normal"><sp/><sp/><sp/><sp/>walkIK.EnableAll();</highlight></codeline>
<codeline lineno="7765"><highlight class="normal"></highlight></codeline>
<codeline lineno="7766"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateVisuals();</highlight></codeline>
<codeline lineno="7767"><highlight class="normal"></highlight></codeline>
<codeline lineno="7768"><highlight class="normal"><sp/><sp/><sp/><sp/>StartSound(<sp/></highlight><highlight class="stringliteral">&quot;snd_teleport_exit&quot;</highlight><highlight class="normal">,<sp/>SND_CHANNEL_ANY,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="7769"><highlight class="normal"></highlight></codeline>
<codeline lineno="7770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>teleportKiller<sp/>!=<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>got<sp/>killed<sp/>while<sp/>being<sp/>teleported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Damage(<sp/>gameLocal.entities[<sp/>teleportKiller<sp/>],<sp/>gameLocal.entities[<sp/>teleportKiller<sp/>],<sp/>vec3_origin,<sp/></highlight><highlight class="stringliteral">&quot;damage_telefrag&quot;</highlight><highlight class="normal">,<sp/>1.0f,<sp/>INVALID_JOINT<sp/>);</highlight></codeline>
<codeline lineno="7773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>teleportKiller<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="7774"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>kill<sp/>anything<sp/>that<sp/>would<sp/>have<sp/>waited<sp/>at<sp/>teleport<sp/>exit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.KillBox(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7777"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7778"><highlight class="normal"><sp/><sp/><sp/><sp/>teleportEntity<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7780"><highlight class="normal"></highlight></codeline>
<codeline lineno="7781"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7782"><highlight class="comment">================</highlight></codeline>
<codeline lineno="7783"><highlight class="comment">idPlayer::ClientPredictionThink</highlight></codeline>
<codeline lineno="7784"><highlight class="comment">================</highlight></codeline>
<codeline lineno="7785"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7786"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::ClientPredictionThink(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7787"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrender_entity__s" kindref="compound">renderEntity_t</ref><sp/>*headRenderEnt;</highlight></codeline>
<codeline lineno="7788"><highlight class="normal"></highlight></codeline>
<codeline lineno="7789"><highlight class="normal"><sp/><sp/><sp/><sp/>oldFlags<sp/>=<sp/>usercmd.flags;</highlight></codeline>
<codeline lineno="7790"><highlight class="normal"><sp/><sp/><sp/><sp/>oldButtons<sp/>=<sp/>usercmd.buttons;</highlight></codeline>
<codeline lineno="7791"><highlight class="normal"></highlight></codeline>
<codeline lineno="7792"><highlight class="normal"><sp/><sp/><sp/><sp/>usercmd<sp/>=<sp/>gameLocal.usercmds[<sp/>entityNumber<sp/>];</highlight></codeline>
<codeline lineno="7793"><highlight class="normal"></highlight></codeline>
<codeline lineno="7794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>entityNumber<sp/>!=<sp/>gameLocal.localClientNum<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ignore<sp/>attack<sp/>button<sp/>of<sp/>other<sp/>clients.<sp/>that&apos;s<sp/>no<sp/>good<sp/>for<sp/>predictions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usercmd.buttons<sp/>&amp;=<sp/>~BUTTON_ATTACK;</highlight></codeline>
<codeline lineno="7797"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7798"><highlight class="normal"></highlight></codeline>
<codeline lineno="7799"><highlight class="normal"><sp/><sp/><sp/><sp/>buttonMask<sp/>&amp;=<sp/>usercmd.buttons;</highlight></codeline>
<codeline lineno="7800"><highlight class="normal"><sp/><sp/><sp/><sp/>usercmd.buttons<sp/>&amp;=<sp/>~buttonMask;</highlight></codeline>
<codeline lineno="7801"><highlight class="normal"></highlight></codeline>
<codeline lineno="7802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>objectiveSystemOpen<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usercmd.forwardmove<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usercmd.rightmove<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usercmd.upmove<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7806"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7807"><highlight class="normal"></highlight></codeline>
<codeline lineno="7808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>the<sp/>ik<sp/>before<sp/>we<sp/>do<sp/>anything<sp/>else<sp/>so<sp/>the<sp/>skeleton<sp/>doesn&apos;t<sp/>get<sp/>updated<sp/>twice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7809"><highlight class="normal"><sp/><sp/><sp/><sp/>walkIK.ClearJointMods();</highlight></codeline>
<codeline lineno="7810"><highlight class="normal"></highlight></codeline>
<codeline lineno="7811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isNewFrame<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>usercmd.flags<sp/>&amp;<sp/>UCF_IMPULSE_SEQUENCE<sp/>)<sp/>!=<sp/>(<sp/>oldFlags<sp/>&amp;<sp/>UCF_IMPULSE_SEQUENCE<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PerformImpulse(<sp/>usercmd.impulse<sp/>);</highlight></codeline>
<codeline lineno="7814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7815"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7816"><highlight class="normal"></highlight></codeline>
<codeline lineno="7817"><highlight class="normal"><sp/><sp/><sp/><sp/>scoreBoardOpen<sp/>=<sp/>(<sp/>(<sp/>usercmd.buttons<sp/>&amp;<sp/>BUTTON_SCORES<sp/>)<sp/>!=<sp/>0<sp/>||<sp/>forceScoreBoard<sp/>);</highlight></codeline>
<codeline lineno="7818"><highlight class="normal"></highlight></codeline>
<codeline lineno="7819"><highlight class="normal"><sp/><sp/><sp/><sp/>AdjustSpeed();</highlight></codeline>
<codeline lineno="7820"><highlight class="normal"></highlight></codeline>
<codeline lineno="7821"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateViewAngles();</highlight></codeline>
<codeline lineno="7822"><highlight class="normal"></highlight></codeline>
<codeline lineno="7823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>smoothed<sp/>view<sp/>angles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.framenum<sp/>&gt;=<sp/>smoothedFrame<sp/>&amp;&amp;<sp/>entityNumber<sp/>!=<sp/>gameLocal.localClientNum<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_angles" kindref="compound">idAngles</ref><sp/>anglesDiff<sp/>=<sp/>viewAngles<sp/>-<sp/>smoothedAngles;</highlight></codeline>
<codeline lineno="7826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anglesDiff.Normalize180();</highlight></codeline>
<codeline lineno="7827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>idMath::Fabs(<sp/>anglesDiff.yaw<sp/>)<sp/>&lt;<sp/>90.0f<sp/>&amp;&amp;<sp/>idMath::Fabs(<sp/>anglesDiff.pitch<sp/>)<sp/>&lt;<sp/>90.0f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>smoothen<sp/>by<sp/>pushing<sp/>back<sp/>to<sp/>the<sp/>previous<sp/>angles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewAngles<sp/>-=<sp/>gameLocal.clientSmoothing<sp/>*<sp/>anglesDiff;</highlight></codeline>
<codeline lineno="7830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewAngles.Normalize180();</highlight></codeline>
<codeline lineno="7831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smoothedAngles<sp/>=<sp/>viewAngles;</highlight></codeline>
<codeline lineno="7833"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7834"><highlight class="normal"><sp/><sp/><sp/><sp/>smoothedOriginUpdated<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7835"><highlight class="normal"></highlight></codeline>
<codeline lineno="7836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!af.IsActive()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AdjustBodyAngles();</highlight></codeline>
<codeline lineno="7838"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7839"><highlight class="normal"></highlight></codeline>
<codeline lineno="7840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!isLagged<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>allow<sp/>client<sp/>to<sp/>move<sp/>when<sp/>lagged</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Move();</highlight></codeline>
<codeline lineno="7843"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="7844"><highlight class="normal"></highlight></codeline>
<codeline lineno="7845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>GUIs,<sp/>Items,<sp/>and<sp/>character<sp/>interactions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7846"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateFocus();</highlight></codeline>
<codeline lineno="7847"><highlight class="normal"></highlight></codeline>
<codeline lineno="7848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>service<sp/>animations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!spectating<sp/>&amp;&amp;<sp/>!af.IsActive()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateConditions();</highlight></codeline>
<codeline lineno="7851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateAnimState();</highlight></codeline>
<codeline lineno="7852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CheckBlink();</highlight></codeline>
<codeline lineno="7853"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7854"><highlight class="normal"></highlight></codeline>
<codeline lineno="7855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>out<sp/>our<sp/>pain<sp/>flag<sp/>so<sp/>we<sp/>can<sp/>tell<sp/>if<sp/>we<sp/>recieve<sp/>any<sp/>damage<sp/>between<sp/>now<sp/>and<sp/>the<sp/>next<sp/>time<sp/>we<sp/>think</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7856"><highlight class="normal"><sp/><sp/><sp/><sp/>AI_PAIN<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7857"><highlight class="normal"></highlight></codeline>
<codeline lineno="7858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>the<sp/>exact<sp/>bobbed<sp/>view<sp/>position,<sp/>which<sp/>is<sp/>used<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>position<sp/>the<sp/>view<sp/>weapon,<sp/>among<sp/>other<sp/>things</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7860"><highlight class="normal"><sp/><sp/><sp/><sp/>CalculateFirstPersonView();</highlight></codeline>
<codeline lineno="7861"><highlight class="normal"></highlight></codeline>
<codeline lineno="7862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>may<sp/>use<sp/>firstPersonView,<sp/>or<sp/>a<sp/>thirdPerson<sp/>/<sp/>camera<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7863"><highlight class="normal"><sp/><sp/><sp/><sp/>CalculateRenderView();</highlight></codeline>
<codeline lineno="7864"><highlight class="normal"></highlight></codeline>
<codeline lineno="7865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.inCinematic<sp/>&amp;&amp;<sp/>weapon.GetEntity()<sp/>&amp;&amp;<sp/>(<sp/>health<sp/>&gt;<sp/>0<sp/>)<sp/>&amp;&amp;<sp/>!(<sp/>gameLocal.isMultiplayer<sp/>&amp;&amp;<sp/>spectating<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateWeapon();</highlight></codeline>
<codeline lineno="7867"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7868"><highlight class="normal"></highlight></codeline>
<codeline lineno="7869"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateHud();</highlight></codeline>
<codeline lineno="7870"><highlight class="normal"></highlight></codeline>
<codeline lineno="7871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isNewFrame<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdatePowerUps();</highlight></codeline>
<codeline lineno="7873"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7874"><highlight class="normal"></highlight></codeline>
<codeline lineno="7875"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateDeathSkin(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7876"><highlight class="normal"></highlight></codeline>
<codeline lineno="7877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>head.GetEntity()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>headRenderEnt<sp/>=<sp/>head.GetEntity()-&gt;GetRenderEntity();</highlight></codeline>
<codeline lineno="7879"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>headRenderEnt<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7881"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7882"><highlight class="normal"></highlight></codeline>
<codeline lineno="7883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>headRenderEnt<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>influenceSkin<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>headRenderEnt-&gt;customSkin<sp/>=<sp/>influenceSkin;</highlight></codeline>
<codeline lineno="7886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>headRenderEnt-&gt;customSkin<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7889"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7890"><highlight class="normal"></highlight></codeline>
<codeline lineno="7891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isMultiplayer<sp/>||<sp/>g_showPlayerShadow.GetBool()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderEntity.suppressShadowInViewID<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>headRenderEnt<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>headRenderEnt-&gt;suppressShadowInViewID<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7896"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderEntity.suppressShadowInViewID<sp/>=<sp/>entityNumber+1;</highlight></codeline>
<codeline lineno="7898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>headRenderEnt<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>headRenderEnt-&gt;suppressShadowInViewID<sp/>=<sp/>entityNumber+1;</highlight></codeline>
<codeline lineno="7900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7901"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>never<sp/>cast<sp/>shadows<sp/>from<sp/>our<sp/>first-person<sp/>muzzle<sp/>flashes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7903"><highlight class="normal"><sp/><sp/><sp/><sp/>renderEntity.suppressShadowInLightID<sp/>=<sp/>LIGHTID_VIEW_MUZZLE_FLASH<sp/>+<sp/>entityNumber;</highlight></codeline>
<codeline lineno="7904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>headRenderEnt<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>headRenderEnt-&gt;suppressShadowInLightID<sp/>=<sp/>LIGHTID_VIEW_MUZZLE_FLASH<sp/>+<sp/>entityNumber;</highlight></codeline>
<codeline lineno="7906"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7907"><highlight class="normal"></highlight></codeline>
<codeline lineno="7908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.inCinematic<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateAnimation();</highlight></codeline>
<codeline lineno="7910"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7911"><highlight class="normal"></highlight></codeline>
<codeline lineno="7912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isMultiplayer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawPlayerIcons();</highlight></codeline>
<codeline lineno="7914"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7915"><highlight class="normal"></highlight></codeline>
<codeline lineno="7916"><highlight class="normal"><sp/><sp/><sp/><sp/>Present();</highlight></codeline>
<codeline lineno="7917"><highlight class="normal"></highlight></codeline>
<codeline lineno="7918"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateDamageEffects();</highlight></codeline>
<codeline lineno="7919"><highlight class="normal"></highlight></codeline>
<codeline lineno="7920"><highlight class="normal"><sp/><sp/><sp/><sp/>LinkCombat();</highlight></codeline>
<codeline lineno="7921"><highlight class="normal"></highlight></codeline>
<codeline lineno="7922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isNewFrame<sp/>&amp;&amp;<sp/>entityNumber<sp/>==<sp/>gameLocal.localClientNum<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>playerView.CalculateShake();</highlight></codeline>
<codeline lineno="7924"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7926"><highlight class="normal"></highlight></codeline>
<codeline lineno="7927"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7928"><highlight class="comment">================</highlight></codeline>
<codeline lineno="7929"><highlight class="comment">idPlayer::GetPhysicsToVisualTransform</highlight></codeline>
<codeline lineno="7930"><highlight class="comment">================</highlight></codeline>
<codeline lineno="7931"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7932"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idPlayer::GetPhysicsToVisualTransform(<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;origin,<sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/>&amp;axis<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>af.IsActive()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>af.GetPhysicsToVisualTransform(<sp/>origin,<sp/>axis<sp/>);</highlight></codeline>
<codeline lineno="7935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7936"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7937"><highlight class="normal"></highlight></codeline>
<codeline lineno="7938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>smoothen<sp/>the<sp/>rendered<sp/>origin<sp/>and<sp/>angles<sp/>of<sp/>other<sp/>clients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>smooth<sp/>self<sp/>origin<sp/>if<sp/>snapshots<sp/>are<sp/>telling<sp/>us<sp/>prediction<sp/>is<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.isClient<sp/>&amp;&amp;<sp/>gameLocal.framenum<sp/>&gt;=<sp/>smoothedFrame<sp/>&amp;&amp;<sp/>(<sp/>entityNumber<sp/>!=<sp/>gameLocal.localClientNum<sp/>||<sp/>selfSmooth<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>render<sp/>origin<sp/>and<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/>renderAxis<sp/>=<sp/>viewAxis<sp/>*<sp/>GetPhysics()-&gt;GetAxis();</highlight></codeline>
<codeline lineno="7943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>renderOrigin<sp/>=<sp/>GetPhysics()-&gt;GetOrigin()<sp/>+<sp/>modelOffset<sp/>*<sp/>renderAxis;</highlight></codeline>
<codeline lineno="7944"><highlight class="normal"></highlight></codeline>
<codeline lineno="7945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>smoothed<sp/>origin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!smoothedOriginUpdated<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_vec2" kindref="compound">idVec2</ref><sp/>originDiff<sp/>=<sp/>renderOrigin.ToVec2()<sp/>-<sp/>smoothedOrigin.ToVec2();</highlight></codeline>
<codeline lineno="7948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>originDiff.LengthSqr()<sp/>&lt;<sp/>Square(<sp/>100.0f<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>smoothen<sp/>by<sp/>pushing<sp/>back<sp/>to<sp/>the<sp/>previous<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>selfSmooth<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>entityNumber<sp/>==<sp/>gameLocal.localClientNum<sp/>);</highlight></codeline>
<codeline lineno="7952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderOrigin.ToVec2()<sp/>-=<sp/>net_clientSelfSmoothing.GetFloat()<sp/>*<sp/>originDiff;</highlight></codeline>
<codeline lineno="7953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderOrigin.ToVec2()<sp/>-=<sp/>gameLocal.clientSmoothing<sp/>*<sp/>originDiff;</highlight></codeline>
<codeline lineno="7955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smoothedOrigin<sp/>=<sp/>renderOrigin;</highlight></codeline>
<codeline lineno="7958"><highlight class="normal"></highlight></codeline>
<codeline lineno="7959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smoothedFrame<sp/>=<sp/>gameLocal.framenum;</highlight></codeline>
<codeline lineno="7960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smoothedOriginUpdated<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7962"><highlight class="normal"></highlight></codeline>
<codeline lineno="7963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axis<sp/>=<sp/><ref refid="classid_angles" kindref="compound">idAngles</ref>(<sp/>0.0f,<sp/>smoothedAngles.yaw,<sp/>0.0f<sp/>).ToMat3();</highlight></codeline>
<codeline lineno="7964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>origin<sp/>=<sp/>(<sp/>smoothedOrigin<sp/>-<sp/>GetPhysics()-&gt;GetOrigin()<sp/>)<sp/>*<sp/>axis.Transpose();</highlight></codeline>
<codeline lineno="7965"><highlight class="normal"></highlight></codeline>
<codeline lineno="7966"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7967"><highlight class="normal"></highlight></codeline>
<codeline lineno="7968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axis<sp/>=<sp/>viewAxis;</highlight></codeline>
<codeline lineno="7969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>origin<sp/>=<sp/>modelOffset;</highlight></codeline>
<codeline lineno="7970"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7972"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7973"><highlight class="normal"></highlight></codeline>
<codeline lineno="7974"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7975"><highlight class="comment">================</highlight></codeline>
<codeline lineno="7976"><highlight class="comment">idPlayer::GetPhysicsToSoundTransform</highlight></codeline>
<codeline lineno="7977"><highlight class="comment">================</highlight></codeline>
<codeline lineno="7978"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7979"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idPlayer::GetPhysicsToSoundTransform(<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;origin,<sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/>&amp;axis<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7980"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_camera" kindref="compound">idCamera</ref><sp/>*camera;</highlight></codeline>
<codeline lineno="7981"><highlight class="normal"></highlight></codeline>
<codeline lineno="7982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>privateCameraView<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera<sp/>=<sp/>privateCameraView;</highlight></codeline>
<codeline lineno="7984"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera<sp/>=<sp/>gameLocal.GetCamera();</highlight></codeline>
<codeline lineno="7986"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7987"><highlight class="normal"></highlight></codeline>
<codeline lineno="7988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>camera<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="7989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structrender_view__s" kindref="compound">renderView_t</ref><sp/>view;</highlight></codeline>
<codeline lineno="7990"><highlight class="normal"></highlight></codeline>
<codeline lineno="7991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<sp/>&amp;view,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>view<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="7992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera-&gt;GetViewParms(<sp/>&amp;view<sp/>);</highlight></codeline>
<codeline lineno="7993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>origin<sp/>=<sp/>view.vieworg;</highlight></codeline>
<codeline lineno="7994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axis<sp/>=<sp/>view.viewaxis;</highlight></codeline>
<codeline lineno="7995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7996"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>idActor::GetPhysicsToSoundTransform(<sp/>origin,<sp/>axis<sp/>);</highlight></codeline>
<codeline lineno="7998"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7999"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8000"><highlight class="normal"></highlight></codeline>
<codeline lineno="8001"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8002"><highlight class="comment">================</highlight></codeline>
<codeline lineno="8003"><highlight class="comment">idPlayer::WriteToSnapshot</highlight></codeline>
<codeline lineno="8004"><highlight class="comment">================</highlight></codeline>
<codeline lineno="8005"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8006"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::WriteToSnapshot(<sp/><ref refid="classid_bit_msg_delta" kindref="compound">idBitMsgDelta</ref><sp/>&amp;msg<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="8007"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.WriteToSnapshot(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="8008"><highlight class="normal"><sp/><sp/><sp/><sp/>WriteBindToSnapshot(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="8009"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.WriteDeltaFloat(<sp/>0.0f,<sp/>deltaViewAngles[0]<sp/>);</highlight></codeline>
<codeline lineno="8010"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.WriteDeltaFloat(<sp/>0.0f,<sp/>deltaViewAngles[1]<sp/>);</highlight></codeline>
<codeline lineno="8011"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.WriteDeltaFloat(<sp/>0.0f,<sp/>deltaViewAngles[2]<sp/>);</highlight></codeline>
<codeline lineno="8012"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.WriteShort(<sp/>health<sp/>);</highlight></codeline>
<codeline lineno="8013"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.WriteBits(<sp/>gameLocal.ServerRemapDecl(<sp/>-1,<sp/>DECL_ENTITYDEF,<sp/>lastDamageDef<sp/>),<sp/>gameLocal.entityDefBits<sp/>);</highlight></codeline>
<codeline lineno="8014"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.WriteDir(<sp/>lastDamageDir,<sp/>9<sp/>);</highlight></codeline>
<codeline lineno="8015"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.WriteShort(<sp/>lastDamageLocation<sp/>);</highlight></codeline>
<codeline lineno="8016"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.WriteBits(<sp/>idealWeapon,<sp/>idMath::BitsForInteger(<sp/>MAX_WEAPONS<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="8017"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.WriteBits(<sp/>inventory.weapons,<sp/>MAX_WEAPONS<sp/>);</highlight></codeline>
<codeline lineno="8018"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.WriteBits(<sp/>weapon.GetSpawnId(),<sp/>32<sp/>);</highlight></codeline>
<codeline lineno="8019"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.WriteBits(<sp/>spectator,<sp/>idMath::BitsForInteger(<sp/>MAX_CLIENTS<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="8020"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.WriteBits(<sp/>lastHitToggle,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="8021"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.WriteBits(<sp/>weaponGone,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="8022"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.WriteBits(<sp/>isLagged,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="8023"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.WriteBits(<sp/>isChatting,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="8024"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8025"><highlight class="normal"></highlight></codeline>
<codeline lineno="8026"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8027"><highlight class="comment">================</highlight></codeline>
<codeline lineno="8028"><highlight class="comment">idPlayer::ReadFromSnapshot</highlight></codeline>
<codeline lineno="8029"><highlight class="comment">================</highlight></codeline>
<codeline lineno="8030"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8031"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::ReadFromSnapshot(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_bit_msg_delta" kindref="compound">idBitMsgDelta</ref><sp/>&amp;msg<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>i,<sp/>oldHealth,<sp/>newIdealWeapon,<sp/>weaponSpawnId;</highlight></codeline>
<codeline lineno="8033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>newHitToggle,<sp/>stateHitch;</highlight></codeline>
<codeline lineno="8034"><highlight class="normal"></highlight></codeline>
<codeline lineno="8035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>snapshotSequence<sp/>-<sp/>lastSnapshotSequence<sp/>&gt;<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stateHitch<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8037"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stateHitch<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8039"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8040"><highlight class="normal"><sp/><sp/><sp/><sp/>lastSnapshotSequence<sp/>=<sp/>snapshotSequence;</highlight></codeline>
<codeline lineno="8041"><highlight class="normal"></highlight></codeline>
<codeline lineno="8042"><highlight class="normal"><sp/><sp/><sp/><sp/>oldHealth<sp/>=<sp/>health;</highlight></codeline>
<codeline lineno="8043"><highlight class="normal"></highlight></codeline>
<codeline lineno="8044"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsObj.ReadFromSnapshot(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="8045"><highlight class="normal"><sp/><sp/><sp/><sp/>ReadBindFromSnapshot(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="8046"><highlight class="normal"><sp/><sp/><sp/><sp/>deltaViewAngles[0]<sp/>=<sp/>msg.ReadDeltaFloat(<sp/>0.0f<sp/>);</highlight></codeline>
<codeline lineno="8047"><highlight class="normal"><sp/><sp/><sp/><sp/>deltaViewAngles[1]<sp/>=<sp/>msg.ReadDeltaFloat(<sp/>0.0f<sp/>);</highlight></codeline>
<codeline lineno="8048"><highlight class="normal"><sp/><sp/><sp/><sp/>deltaViewAngles[2]<sp/>=<sp/>msg.ReadDeltaFloat(<sp/>0.0f<sp/>);</highlight></codeline>
<codeline lineno="8049"><highlight class="normal"><sp/><sp/><sp/><sp/>health<sp/>=<sp/>msg.ReadShort();</highlight></codeline>
<codeline lineno="8050"><highlight class="normal"><sp/><sp/><sp/><sp/>lastDamageDef<sp/>=<sp/>gameLocal.ClientRemapDecl(<sp/>DECL_ENTITYDEF,<sp/>msg.ReadBits(<sp/>gameLocal.entityDefBits<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="8051"><highlight class="normal"><sp/><sp/><sp/><sp/>lastDamageDir<sp/>=<sp/>msg.ReadDir(<sp/>9<sp/>);</highlight></codeline>
<codeline lineno="8052"><highlight class="normal"><sp/><sp/><sp/><sp/>lastDamageLocation<sp/>=<sp/>msg.ReadShort();</highlight></codeline>
<codeline lineno="8053"><highlight class="normal"><sp/><sp/><sp/><sp/>newIdealWeapon<sp/>=<sp/>msg.ReadBits(<sp/>idMath::BitsForInteger(<sp/>MAX_WEAPONS<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="8054"><highlight class="normal"><sp/><sp/><sp/><sp/>inventory.weapons<sp/>=<sp/>msg.ReadBits(<sp/>MAX_WEAPONS<sp/>);</highlight></codeline>
<codeline lineno="8055"><highlight class="normal"><sp/><sp/><sp/><sp/>weaponSpawnId<sp/>=<sp/>msg.ReadBits(<sp/>32<sp/>);</highlight></codeline>
<codeline lineno="8056"><highlight class="normal"><sp/><sp/><sp/><sp/>spectator<sp/>=<sp/>msg.ReadBits(<sp/>idMath::BitsForInteger(<sp/>MAX_CLIENTS<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="8057"><highlight class="normal"><sp/><sp/><sp/><sp/>newHitToggle<sp/>=<sp/>msg.ReadBits(<sp/>1<sp/>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="8058"><highlight class="normal"><sp/><sp/><sp/><sp/>weaponGone<sp/>=<sp/>msg.ReadBits(<sp/>1<sp/>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="8059"><highlight class="normal"><sp/><sp/><sp/><sp/>isLagged<sp/>=<sp/>msg.ReadBits(<sp/>1<sp/>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="8060"><highlight class="normal"><sp/><sp/><sp/><sp/>isChatting<sp/>=<sp/>msg.ReadBits(<sp/>1<sp/>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="8061"><highlight class="normal"></highlight></codeline>
<codeline lineno="8062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>msg<sp/>reading<sp/>below<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8063"><highlight class="normal"></highlight></codeline>
<codeline lineno="8064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weapon.SetSpawnId(<sp/>weaponSpawnId<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weapon.GetEntity()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>maintain<sp/>ownership<sp/>locally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;SetOwner(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="8068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentWeapon<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="8070"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>not<sp/>a<sp/>local<sp/>client<sp/>assume<sp/>the<sp/>client<sp/>has<sp/>all<sp/>ammo<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>entityNumber<sp/>!=<sp/>gameLocal.localClientNum<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>AMMO_NUMTYPES;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.ammo[<sp/>i<sp/>]<sp/>=<sp/>999;</highlight></codeline>
<codeline lineno="8075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8076"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8077"><highlight class="normal"></highlight></codeline>
<codeline lineno="8078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>oldHealth<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>health<sp/>&lt;=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>stateHitch<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>we<sp/>just<sp/>hide<sp/>and<sp/>don&apos;t<sp/>show<sp/>a<sp/>death<sp/>skin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateDeathSkin(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="8082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>die</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_DEAD<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearPowerUps();</highlight></codeline>
<codeline lineno="8086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetAnimState(<sp/>ANIMCHANNEL_LEGS,<sp/></highlight><highlight class="stringliteral">&quot;Legs_Death&quot;</highlight><highlight class="normal">,<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="8087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetAnimState(<sp/>ANIMCHANNEL_TORSO,<sp/></highlight><highlight class="stringliteral">&quot;Torso_Death&quot;</highlight><highlight class="normal">,<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="8088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetWaitState(<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="8089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>animator.ClearAllJoints();</highlight></codeline>
<codeline lineno="8090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>entityNumber<sp/>==<sp/>gameLocal.localClientNum<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>playerView.Fade(<sp/>colorBlack,<sp/>12000<sp/>);</highlight></codeline>
<codeline lineno="8092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartRagdoll();</highlight></codeline>
<codeline lineno="8094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsObj.SetMovementType(<sp/>PM_DEAD<sp/>);</highlight></codeline>
<codeline lineno="8095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!stateHitch<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartSound(<sp/></highlight><highlight class="stringliteral">&quot;snd_death&quot;</highlight><highlight class="normal">,<sp/>SND_CHANNEL_VOICE,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="8097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weapon.GetEntity()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon.GetEntity()-&gt;OwnerDied();</highlight></codeline>
<codeline lineno="8100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8101"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>oldHealth<sp/>&lt;=<sp/>0<sp/>&amp;&amp;<sp/>health<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>respawn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Init();</highlight></codeline>
<codeline lineno="8104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StopRagdoll();</highlight></codeline>
<codeline lineno="8105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetPhysics(<sp/>&amp;physicsObj<sp/>);</highlight></codeline>
<codeline lineno="8106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsObj.EnableClip();</highlight></codeline>
<codeline lineno="8107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetCombatContents(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="8108"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&lt;<sp/>oldHealth<sp/>&amp;&amp;<sp/>health<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>stateHitch<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastDmgTime<sp/>=<sp/>gameLocal.time;</highlight></codeline>
<codeline lineno="8111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>damage<sp/>feedback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_decl_entity_def" kindref="compound">idDeclEntityDef</ref><sp/>*def<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classid_decl_entity_def" kindref="compound">idDeclEntityDef</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>declManager-&gt;DeclByIndex(<sp/>DECL_ENTITYDEF,<sp/>lastDamageDef,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="8114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>def<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>playerView.DamageImpulse(<sp/>lastDamageDir<sp/>*<sp/>viewAxis.Transpose(),<sp/>&amp;def-&gt;dict<sp/>);</highlight></codeline>
<codeline lineno="8116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AI_PAIN<sp/>=<sp/>Pain(<sp/>NULL,<sp/>NULL,<sp/>oldHealth<sp/>-<sp/>health,<sp/>lastDamageDir,<sp/>lastDamageLocation<sp/>);</highlight></codeline>
<codeline lineno="8117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastDmgTime<sp/>=<sp/>gameLocal.time;</highlight></codeline>
<codeline lineno="8118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Warning(<sp/></highlight><highlight class="stringliteral">&quot;NET:<sp/>no<sp/>damage<sp/>def<sp/>for<sp/>damage<sp/>feedback<sp/>&apos;%d&apos;\n&quot;</highlight><highlight class="normal">,<sp/>lastDamageDef<sp/>);</highlight></codeline>
<codeline lineno="8120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8122"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&gt;<sp/>oldHealth<sp/>&amp;&amp;<sp/>PowerUpActive(<sp/>MEGAHEALTH<sp/>)<sp/>&amp;&amp;<sp/>!stateHitch<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>pulse,<sp/>for<sp/>any<sp/>health<sp/>raise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>healthPulse<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8126"><highlight class="normal"></highlight></codeline>
<codeline lineno="8127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>player<sp/>is<sp/>alive,<sp/>restore<sp/>proper<sp/>physics<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>health<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>IsActiveAF()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StopRagdoll();</highlight></codeline>
<codeline lineno="8130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetPhysics(<sp/>&amp;physicsObj<sp/>);</highlight></codeline>
<codeline lineno="8131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsObj.EnableClip();</highlight></codeline>
<codeline lineno="8132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetCombatContents(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="8133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8134"><highlight class="normal"></highlight></codeline>
<codeline lineno="8135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>idealWeapon<sp/>!=<sp/>newIdealWeapon<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>stateHitch<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weaponCatchup<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idealWeapon<sp/>=<sp/>newIdealWeapon;</highlight></codeline>
<codeline lineno="8140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateHudWeapon();</highlight></codeline>
<codeline lineno="8141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8142"><highlight class="normal"></highlight></codeline>
<codeline lineno="8143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>lastHitToggle<sp/>!=<sp/>newHitToggle<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastHitTime(<sp/>gameLocal.realClientTime<sp/>);</highlight></codeline>
<codeline lineno="8145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8146"><highlight class="normal"></highlight></codeline>
<codeline lineno="8147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>msg.HasChanged()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateVisuals();</highlight></codeline>
<codeline lineno="8149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8151"><highlight class="normal"></highlight></codeline>
<codeline lineno="8152"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8153"><highlight class="comment">================</highlight></codeline>
<codeline lineno="8154"><highlight class="comment">idPlayer::WritePlayerStateToSnapshot</highlight></codeline>
<codeline lineno="8155"><highlight class="comment">================</highlight></codeline>
<codeline lineno="8156"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8157"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::WritePlayerStateToSnapshot(<sp/><ref refid="classid_bit_msg_delta" kindref="compound">idBitMsgDelta</ref><sp/>&amp;msg<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="8158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="8159"><highlight class="normal"></highlight></codeline>
<codeline lineno="8160"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.WriteByte(<sp/>bobCycle<sp/>);</highlight></codeline>
<codeline lineno="8161"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.WriteLong(<sp/>stepUpTime<sp/>);</highlight></codeline>
<codeline lineno="8162"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.WriteFloat(<sp/>stepUpDelta<sp/>);</highlight></codeline>
<codeline lineno="8163"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.WriteShort(<sp/>inventory.weapons<sp/>);</highlight></codeline>
<codeline lineno="8164"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.WriteByte(<sp/>inventory.armor<sp/>);</highlight></codeline>
<codeline lineno="8165"><highlight class="normal"></highlight></codeline>
<codeline lineno="8166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>AMMO_NUMTYPES;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.WriteBits(<sp/>inventory.ammo[i],<sp/>ASYNC_PLAYER_INV_AMMO_BITS<sp/>);</highlight></codeline>
<codeline lineno="8168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_WEAPONS;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.WriteBits(<sp/>inventory.clip[i],<sp/>ASYNC_PLAYER_INV_CLIP_BITS<sp/>);</highlight></codeline>
<codeline lineno="8171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8173"><highlight class="normal"></highlight></codeline>
<codeline lineno="8174"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8175"><highlight class="comment">================</highlight></codeline>
<codeline lineno="8176"><highlight class="comment">idPlayer::ReadPlayerStateFromSnapshot</highlight></codeline>
<codeline lineno="8177"><highlight class="comment">================</highlight></codeline>
<codeline lineno="8178"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8179"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::ReadPlayerStateFromSnapshot(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_bit_msg_delta" kindref="compound">idBitMsgDelta</ref><sp/>&amp;msg<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>ammo;</highlight></codeline>
<codeline lineno="8181"><highlight class="normal"></highlight></codeline>
<codeline lineno="8182"><highlight class="normal"><sp/><sp/><sp/><sp/>bobCycle<sp/>=<sp/>msg.ReadByte();</highlight></codeline>
<codeline lineno="8183"><highlight class="normal"><sp/><sp/><sp/><sp/>stepUpTime<sp/>=<sp/>msg.ReadLong();</highlight></codeline>
<codeline lineno="8184"><highlight class="normal"><sp/><sp/><sp/><sp/>stepUpDelta<sp/>=<sp/>msg.ReadFloat();</highlight></codeline>
<codeline lineno="8185"><highlight class="normal"><sp/><sp/><sp/><sp/>inventory.weapons<sp/>=<sp/>msg.ReadShort();</highlight></codeline>
<codeline lineno="8186"><highlight class="normal"><sp/><sp/><sp/><sp/>inventory.armor<sp/>=<sp/>msg.ReadByte();</highlight></codeline>
<codeline lineno="8187"><highlight class="normal"></highlight></codeline>
<codeline lineno="8188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>AMMO_NUMTYPES;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ammo<sp/>=<sp/>msg.ReadBits(<sp/>ASYNC_PLAYER_INV_AMMO_BITS<sp/>);</highlight></codeline>
<codeline lineno="8190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gameLocal.time<sp/>&gt;=<sp/>inventory.ammoPredictTime<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.ammo[<sp/>i<sp/>]<sp/>=<sp/>ammo;</highlight></codeline>
<codeline lineno="8192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_WEAPONS;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.clip[i]<sp/>=<sp/>msg.ReadBits(<sp/>ASYNC_PLAYER_INV_CLIP_BITS<sp/>);</highlight></codeline>
<codeline lineno="8196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8198"><highlight class="normal"></highlight></codeline>
<codeline lineno="8199"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8200"><highlight class="comment">================</highlight></codeline>
<codeline lineno="8201"><highlight class="comment">idPlayer::ServerReceiveEvent</highlight></codeline>
<codeline lineno="8202"><highlight class="comment">================</highlight></codeline>
<codeline lineno="8203"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8204"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idPlayer::ServerReceiveEvent(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>event,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_bit_msg" kindref="compound">idBitMsg</ref><sp/>&amp;msg<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8205"><highlight class="normal"></highlight></codeline>
<codeline lineno="8206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>idEntity::ServerReceiveEvent(<sp/>event,<sp/>time,<sp/>msg<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8209"><highlight class="normal"></highlight></codeline>
<codeline lineno="8210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>client-&gt;server<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>event<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EVENT_IMPULSE:<sp/>{</highlight></codeline>
<codeline lineno="8213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PerformImpulse(<sp/>msg.ReadBits(<sp/>6<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="8214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>{</highlight></codeline>
<codeline lineno="8217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8221"><highlight class="normal"></highlight></codeline>
<codeline lineno="8222"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8223"><highlight class="comment">================</highlight></codeline>
<codeline lineno="8224"><highlight class="comment">idPlayer::ClientReceiveEvent</highlight></codeline>
<codeline lineno="8225"><highlight class="comment">================</highlight></codeline>
<codeline lineno="8226"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8227"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idPlayer::ClientReceiveEvent(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>event,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_bit_msg" kindref="compound">idBitMsg</ref><sp/>&amp;msg<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>powerup;</highlight></codeline>
<codeline lineno="8229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>start;</highlight></codeline>
<codeline lineno="8230"><highlight class="normal"></highlight></codeline>
<codeline lineno="8231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>event<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EVENT_EXIT_TELEPORTER:</highlight></codeline>
<codeline lineno="8233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event_ExitTeleporter();</highlight></codeline>
<codeline lineno="8234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EVENT_ABORT_TELEPORTER:</highlight></codeline>
<codeline lineno="8236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetPrivateCameraView(<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="8237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EVENT_POWERUP:<sp/>{</highlight></codeline>
<codeline lineno="8239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>powerup<sp/>=<sp/>msg.ReadShort();</highlight></codeline>
<codeline lineno="8240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>msg.ReadBits(<sp/>1<sp/>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="8241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>start<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GivePowerUp(<sp/>powerup,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="8243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearPowerup(<sp/>powerup<sp/>);</highlight></codeline>
<codeline lineno="8245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="8246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EVENT_SPECTATE:<sp/>{</highlight></codeline>
<codeline lineno="8249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>spectate<sp/>=<sp/>(<sp/>msg.ReadBits(<sp/>1<sp/>)<sp/>!=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="8250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Spectate(<sp/>spectate<sp/>);</highlight></codeline>
<codeline lineno="8251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EVENT_ADD_DAMAGE_EFFECT:<sp/>{</highlight></codeline>
<codeline lineno="8254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spectating<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we&apos;re<sp/>spectating,<sp/>ignore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>happens<sp/>if<sp/>the<sp/>event<sp/>and<sp/>the<sp/>spectate<sp/>change<sp/>are<sp/>written<sp/>on<sp/>the<sp/>server<sp/>during<sp/>the<sp/>same<sp/>frame<sp/>(fraglimit)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>idActor::ClientReceiveEvent(<sp/>event,<sp/>time,<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="8260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>{</highlight></codeline>
<codeline lineno="8262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>idActor::ClientReceiveEvent(<sp/>event,<sp/>time,<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="8263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8267"><highlight class="normal"></highlight></codeline>
<codeline lineno="8268"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8269"><highlight class="comment">================</highlight></codeline>
<codeline lineno="8270"><highlight class="comment">idPlayer::Hide</highlight></codeline>
<codeline lineno="8271"><highlight class="comment">================</highlight></codeline>
<codeline lineno="8272"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8273"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Hide(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_weapon" kindref="compound">idWeapon</ref><sp/>*weap;</highlight></codeline>
<codeline lineno="8275"><highlight class="normal"></highlight></codeline>
<codeline lineno="8276"><highlight class="normal"><sp/><sp/><sp/><sp/>idActor::Hide();</highlight></codeline>
<codeline lineno="8277"><highlight class="normal"><sp/><sp/><sp/><sp/>weap<sp/>=<sp/>weapon.GetEntity();</highlight></codeline>
<codeline lineno="8278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weap<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weap-&gt;HideWorldModel();</highlight></codeline>
<codeline lineno="8280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8282"><highlight class="normal"></highlight></codeline>
<codeline lineno="8283"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8284"><highlight class="comment">================</highlight></codeline>
<codeline lineno="8285"><highlight class="comment">idPlayer::Show</highlight></codeline>
<codeline lineno="8286"><highlight class="comment">================</highlight></codeline>
<codeline lineno="8287"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8288"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Show(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_weapon" kindref="compound">idWeapon</ref><sp/>*weap;</highlight></codeline>
<codeline lineno="8290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="8291"><highlight class="normal"><sp/><sp/><sp/><sp/>idActor::Show();</highlight></codeline>
<codeline lineno="8292"><highlight class="normal"><sp/><sp/><sp/><sp/>weap<sp/>=<sp/>weapon.GetEntity();</highlight></codeline>
<codeline lineno="8293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weap<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weap-&gt;ShowWorldModel();</highlight></codeline>
<codeline lineno="8295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8297"><highlight class="normal"></highlight></codeline>
<codeline lineno="8298"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8299"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8300"><highlight class="comment">idPlayer::StartAudioLog</highlight></codeline>
<codeline lineno="8301"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8302"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8303"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::StartAudioLog(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;audioLogUp&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="8306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8308"><highlight class="normal"></highlight></codeline>
<codeline lineno="8309"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8310"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8311"><highlight class="comment">idPlayer::StopAudioLog</highlight></codeline>
<codeline lineno="8312"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8313"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8314"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::StopAudioLog(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hud<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;audioLogDown&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="8317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8319"><highlight class="normal"></highlight></codeline>
<codeline lineno="8320"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8321"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8322"><highlight class="comment">idPlayer::ShowTip</highlight></codeline>
<codeline lineno="8323"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8324"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8325"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::ShowTip(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tip,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>autoHide<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tipUp<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8329"><highlight class="normal"><sp/><sp/><sp/><sp/>hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;tip&quot;</highlight><highlight class="normal">,<sp/>tip<sp/>);</highlight></codeline>
<codeline lineno="8330"><highlight class="normal"><sp/><sp/><sp/><sp/>hud-&gt;SetStateString(<sp/></highlight><highlight class="stringliteral">&quot;tiptitle&quot;</highlight><highlight class="normal">,<sp/>title<sp/>);</highlight></codeline>
<codeline lineno="8331"><highlight class="normal"><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;tipWindowUp&quot;</highlight><highlight class="normal"><sp/>);<sp/></highlight></codeline>
<codeline lineno="8332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>autoHide<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventSec(<sp/>&amp;EV_Player_HideTip,<sp/>5.0f<sp/>);</highlight></codeline>
<codeline lineno="8334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8335"><highlight class="normal"><sp/><sp/><sp/><sp/>tipUp<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8337"><highlight class="normal"></highlight></codeline>
<codeline lineno="8338"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8339"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8340"><highlight class="comment">idPlayer::HideTip</highlight></codeline>
<codeline lineno="8341"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8342"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8343"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::HideTip(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8344"><highlight class="normal"><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;tipWindowDown&quot;</highlight><highlight class="normal"><sp/>);<sp/></highlight></codeline>
<codeline lineno="8345"><highlight class="normal"><sp/><sp/><sp/><sp/>tipUp<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8347"><highlight class="normal"></highlight></codeline>
<codeline lineno="8348"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8349"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8350"><highlight class="comment">idPlayer::Event_HideTip</highlight></codeline>
<codeline lineno="8351"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8352"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8353"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Event_HideTip(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8354"><highlight class="normal"><sp/><sp/><sp/><sp/>HideTip();</highlight></codeline>
<codeline lineno="8355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8356"><highlight class="normal"></highlight></codeline>
<codeline lineno="8357"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8358"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8359"><highlight class="comment">idPlayer::ShowObjective</highlight></codeline>
<codeline lineno="8360"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8361"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8362"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::ShowObjective(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*obj<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8363"><highlight class="normal"><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/>obj<sp/>);</highlight></codeline>
<codeline lineno="8364"><highlight class="normal"><sp/><sp/><sp/><sp/>objectiveUp<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8366"><highlight class="normal"></highlight></codeline>
<codeline lineno="8367"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8368"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8369"><highlight class="comment">idPlayer::HideObjective</highlight></codeline>
<codeline lineno="8370"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8371"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8372"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::HideObjective(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8373"><highlight class="normal"><sp/><sp/><sp/><sp/>hud-&gt;HandleNamedEvent(<sp/></highlight><highlight class="stringliteral">&quot;closeObjective&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="8374"><highlight class="normal"><sp/><sp/><sp/><sp/>objectiveUp<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8376"><highlight class="normal"></highlight></codeline>
<codeline lineno="8377"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8378"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8379"><highlight class="comment">idPlayer::Event_StopAudioLog</highlight></codeline>
<codeline lineno="8380"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8381"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8382"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Event_StopAudioLog(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8383"><highlight class="normal"><sp/><sp/><sp/><sp/>StopAudioLog();</highlight></codeline>
<codeline lineno="8384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8385"><highlight class="normal"></highlight></codeline>
<codeline lineno="8386"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8387"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8388"><highlight class="comment">idPlayer::SetSpectateOrigin</highlight></codeline>
<codeline lineno="8389"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8390"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8391"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::SetSpectateOrigin(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>neworig;</highlight></codeline>
<codeline lineno="8393"><highlight class="normal"></highlight></codeline>
<codeline lineno="8394"><highlight class="normal"><sp/><sp/><sp/><sp/>neworig<sp/>=<sp/>GetPhysics()-&gt;GetOrigin();</highlight></codeline>
<codeline lineno="8395"><highlight class="normal"><sp/><sp/><sp/><sp/>neworig[<sp/>2<sp/>]<sp/>+=<sp/>EyeHeight();</highlight></codeline>
<codeline lineno="8396"><highlight class="normal"><sp/><sp/><sp/><sp/>neworig[<sp/>2<sp/>]<sp/>+=<sp/>25;</highlight></codeline>
<codeline lineno="8397"><highlight class="normal"><sp/><sp/><sp/><sp/>SetOrigin(<sp/>neworig<sp/>);</highlight></codeline>
<codeline lineno="8398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8399"><highlight class="normal"></highlight></codeline>
<codeline lineno="8400"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8401"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8402"><highlight class="comment">idPlayer::RemoveWeapon</highlight></codeline>
<codeline lineno="8403"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8404"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8405"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::RemoveWeapon(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*weap<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>weap<sp/>&amp;&amp;<sp/>*weap<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.Drop(<sp/>spawnArgs,<sp/>spawnArgs.GetString(<sp/>weap<sp/>),<sp/>-1<sp/>);</highlight></codeline>
<codeline lineno="8408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8410"><highlight class="normal"></highlight></codeline>
<codeline lineno="8411"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8412"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8413"><highlight class="comment">idPlayer::CanShowWeaponViewmodel</highlight></codeline>
<codeline lineno="8414"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8415"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8416"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idPlayer::CanShowWeaponViewmodel(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="8417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>showWeaponViewModel;</highlight></codeline>
<codeline lineno="8418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8419"><highlight class="normal"></highlight></codeline>
<codeline lineno="8420"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8421"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8422"><highlight class="comment">idPlayer::SetLevelTrigger</highlight></codeline>
<codeline lineno="8423"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8424"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8425"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::SetLevelTrigger(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*levelName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*triggerName<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>levelName<sp/>&amp;&amp;<sp/>*levelName<sp/>&amp;&amp;<sp/>triggerName<sp/>&amp;&amp;<sp/>*triggerName<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structid_level_trigger_info" kindref="compound">idLevelTriggerInfo</ref><sp/>lti;</highlight></codeline>
<codeline lineno="8428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lti.levelName<sp/>=<sp/>levelName;</highlight></codeline>
<codeline lineno="8429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lti.triggerName<sp/>=<sp/>triggerName;</highlight></codeline>
<codeline lineno="8430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory.levelTriggers.Append(<sp/>lti<sp/>);</highlight></codeline>
<codeline lineno="8431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8433"><highlight class="normal"></highlight></codeline>
<codeline lineno="8434"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8435"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8436"><highlight class="comment">idPlayer::Event_LevelTrigger</highlight></codeline>
<codeline lineno="8437"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8438"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8439"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Event_LevelTrigger(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>mapName<sp/>=<sp/>gameLocal.GetMapName();</highlight></codeline>
<codeline lineno="8441"><highlight class="normal"><sp/><sp/><sp/><sp/>mapName.StripPath();</highlight></codeline>
<codeline lineno="8442"><highlight class="normal"><sp/><sp/><sp/><sp/>mapName.StripFileExtension();</highlight></codeline>
<codeline lineno="8443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>inventory.levelTriggers.Num()<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>idStr::Icmp(<sp/>mapName,<sp/>inventory.levelTriggers[i].levelName)<sp/>==<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="8445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*ent<sp/>=<sp/>gameLocal.FindEntity(<sp/>inventory.levelTriggers[i].triggerName<sp/>);</highlight></codeline>
<codeline lineno="8446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ent<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent-&gt;PostEventMS(<sp/>&amp;EV_Activate,<sp/>1,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="8448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8452"><highlight class="normal"></highlight></codeline>
<codeline lineno="8453"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8454"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8455"><highlight class="comment">idPlayer::Event_Gibbed</highlight></codeline>
<codeline lineno="8456"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8457"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8458"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Event_Gibbed(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8460"><highlight class="normal"></highlight></codeline>
<codeline lineno="8461"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8462"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="8463"><highlight class="comment">idPlayer::Event_GetIdealWeapon<sp/></highlight></codeline>
<codeline lineno="8464"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="8465"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8466"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::Event_GetIdealWeapon(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*weapon;</highlight></codeline>
<codeline lineno="8468"><highlight class="normal"></highlight></codeline>
<codeline lineno="8469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>idealWeapon<sp/>&gt;=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weapon<sp/>=<sp/>spawnArgs.GetString(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;def_weapon%d&quot;</highlight><highlight class="normal">,<sp/>idealWeapon<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="8471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idThread::ReturnString(<sp/>weapon<sp/>);</highlight></codeline>
<codeline lineno="8472"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idThread::ReturnString(<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="8474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8476"><highlight class="normal"></highlight></codeline>
<codeline lineno="8477"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8478"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8479"><highlight class="comment">idPlayer::UpdatePlayerIcons</highlight></codeline>
<codeline lineno="8480"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8481"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8482"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::UpdatePlayerIcons(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time<sp/>=<sp/>networkSystem-&gt;ServerGetClientTimeSinceLastPacket(<sp/>entityNumber<sp/>);</highlight></codeline>
<codeline lineno="8484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>time<sp/>&gt;<sp/>cvarSystem-&gt;GetCVarInteger(<sp/></highlight><highlight class="stringliteral">&quot;net_clientMaxPrediction&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isLagged<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8486"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isLagged<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8490"><highlight class="normal"></highlight></codeline>
<codeline lineno="8491"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8492"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8493"><highlight class="comment">idPlayer::DrawPlayerIcons</highlight></codeline>
<codeline lineno="8494"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8495"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8496"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::DrawPlayerIcons(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!NeedsIcon()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>playerIcon.FreeIcon();</highlight></codeline>
<codeline lineno="8499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8501"><highlight class="normal"><sp/><sp/><sp/><sp/>playerIcon.Draw(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>headJoint<sp/>);</highlight></codeline>
<codeline lineno="8502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8503"><highlight class="normal"></highlight></codeline>
<codeline lineno="8504"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8505"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8506"><highlight class="comment">idPlayer::HidePlayerIcons</highlight></codeline>
<codeline lineno="8507"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8508"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8509"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idPlayer::HidePlayerIcons(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8510"><highlight class="normal"><sp/><sp/><sp/><sp/>playerIcon.FreeIcon();</highlight></codeline>
<codeline lineno="8511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8512"><highlight class="normal"></highlight></codeline>
<codeline lineno="8513"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8514"><highlight class="comment">===============</highlight></codeline>
<codeline lineno="8515"><highlight class="comment">idPlayer::NeedsIcon</highlight></codeline>
<codeline lineno="8516"><highlight class="comment">==============</highlight></codeline>
<codeline lineno="8517"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8518"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idPlayer::NeedsIcon(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="8519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>local<sp/>clients<sp/>don&apos;t<sp/>render<sp/>their<sp/>own<sp/>icons...<sp/>they&apos;re<sp/>only<sp/>info<sp/>for<sp/>other<sp/>clients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>entityNumber<sp/>!=<sp/>gameLocal.localClientNum<sp/>&amp;&amp;<sp/>(<sp/>isLagged<sp/>||<sp/>isChatting<sp/>);</highlight></codeline>
<codeline lineno="8521"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/game/Player.cpp"/>
  </compounddef>
</doxygen>
