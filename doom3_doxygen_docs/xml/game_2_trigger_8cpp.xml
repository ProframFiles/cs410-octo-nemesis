<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="game_2_trigger_8cpp" kind="file">
    <compoundname>Trigger.cpp</compoundname>
    <includes refid="precompiled_8h" local="yes">../idlib/precompiled.h</includes>
    <includes refid="game_2_game__local_8h" local="yes">Game_local.h</includes>
      <sectiondef kind="var">
      <memberdef kind="variable" id="game_2_trigger_8cpp_1a164142a3e1acebac088c2269a6167580" prot="public" static="no" mutable="no">
        <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref></type>
        <definition>const idEventDef EV_Enable(&quot;enable&quot;, NULL)</definition>
        <argsstring>(&quot;enable&quot;, NULL)</argsstring>
        <name>EV_Enable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Trigger.cpp" line="43" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_trigger_8cpp_1a740ad5745ddc7131db029b2bc7c88870" prot="public" static="no" mutable="no">
        <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref></type>
        <definition>const idEventDef EV_Disable(&quot;disable&quot;, NULL)</definition>
        <argsstring>(&quot;disable&quot;, NULL)</argsstring>
        <name>EV_Disable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Trigger.cpp" line="44" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_trigger_8cpp_1afe455374fbc213000ba98a6cc9a72aef" prot="public" static="no" mutable="no">
        <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref></type>
        <definition>const idEventDef EV_TriggerAction(&quot;&lt;triggerAction&gt;&quot;,&quot;e&quot;)</definition>
        <argsstring>(&quot;&lt;triggerAction&gt;&quot;,&quot;e&quot;)</argsstring>
        <name>EV_TriggerAction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Trigger.cpp" line="246" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="game_2_trigger_8cpp_1adb16fa1cf68f5a64a4f419b90b3155e7" prot="public" static="no" mutable="no">
        <type>const <ref refid="classid_event_def" kindref="compound">idEventDef</ref></type>
        <definition>const idEventDef EV_Timer(&quot;&lt;timer&gt;&quot;, NULL)</definition>
        <argsstring>(&quot;&lt;timer&gt;&quot;, NULL)</argsstring>
        <name>EV_Timer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/game/Trigger.cpp" line="703" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../idlib/precompiled.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>hdrstop</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Game_local.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="36"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="37"><highlight class="comment"></highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/>idTrigger</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="41"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_Enable(<sp/></highlight><highlight class="stringliteral">&quot;enable&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_Disable(<sp/></highlight><highlight class="stringliteral">&quot;disable&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">CLASS_DECLARATION(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref>,<sp/><ref refid="classid_trigger" kindref="compound">idTrigger</ref><sp/>)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Enable,<sp/><sp/><sp/><ref refid="classid_trigger" kindref="compound">idTrigger</ref>::Event_Enable<sp/>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Disable,<sp/><sp/><ref refid="classid_trigger" kindref="compound">idTrigger</ref>::Event_Disable<sp/>)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">END_CLASS</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="52"><highlight class="comment">================</highlight></codeline>
<codeline lineno="53"><highlight class="comment">idTrigger::DrawDebugInfo</highlight></codeline>
<codeline lineno="54"><highlight class="comment">================</highlight></codeline>
<codeline lineno="55"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classid_trigger" kindref="compound">idTrigger</ref>::DrawDebugInfo(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/><sp/><sp/><sp/><sp/><sp/>axis<sp/>=<sp/>gameLocal.GetLocalPlayer()-&gt;viewAngles.ToMat3();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/><sp/><sp/><sp/><sp/>up<sp/>=<sp/>axis[<sp/>2<sp/>]<sp/>*<sp/>5.0f;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_bounds" kindref="compound">idBounds</ref><sp/><sp/><sp/><sp/>viewTextBounds(<sp/>gameLocal.GetLocalPlayer()-&gt;GetPhysics()-&gt;GetOrigin()<sp/>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_bounds" kindref="compound">idBounds</ref><sp/><sp/><sp/><sp/>viewBounds(<sp/>gameLocal.GetLocalPlayer()-&gt;GetPhysics()-&gt;GetOrigin()<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_bounds" kindref="compound">idBounds</ref><sp/><sp/><sp/><sp/>box(<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(<sp/>-4.0f,<sp/>-4.0f,<sp/>-4.0f<sp/>),<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref>(<sp/>4.0f,<sp/>4.0f,<sp/>4.0f<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/><sp/><sp/><sp/>*ent;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/><sp/><sp/><sp/>*target;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>show;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classfunction__t" kindref="compound">function_t</ref><sp/>*func;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>viewTextBounds.ExpandSelf(<sp/>128.0f<sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>viewBounds.ExpandSelf(<sp/>512.0f<sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>ent<sp/>=<sp/>gameLocal.spawnedEntities.Next();<sp/>ent<sp/>!=<sp/>NULL;<sp/>ent<sp/>=<sp/>ent-&gt;spawnNode.Next()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ent-&gt;GetPhysics()-&gt;GetContents()<sp/>&amp;<sp/>(<sp/>CONTENTS_TRIGGER<sp/>|<sp/>CONTENTS_FLASHLIGHT_TRIGGER<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>show<sp/>=<sp/>viewBounds.IntersectsBounds(<sp/>ent-&gt;GetPhysics()-&gt;GetAbsBounds()<sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!show<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ent-&gt;targets.Num();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target<sp/>=<sp/>ent-&gt;targets[<sp/>i<sp/>].GetEntity();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>target<sp/>&amp;&amp;<sp/>viewBounds.IntersectsBounds(<sp/>target-&gt;GetPhysics()-&gt;GetAbsBounds()<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>show<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!show<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameRenderWorld-&gt;DebugBounds(<sp/>colorOrange,<sp/>ent-&gt;GetPhysics()-&gt;GetAbsBounds()<sp/>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>viewTextBounds.IntersectsBounds(<sp/>ent-&gt;GetPhysics()-&gt;GetAbsBounds()<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameRenderWorld-&gt;DrawText(<sp/>ent-&gt;name.c_str(),<sp/>ent-&gt;GetPhysics()-&gt;GetAbsBounds().GetCenter(),<sp/>0.1f,<sp/>colorWhite,<sp/>axis,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameRenderWorld-&gt;DrawText(<sp/>ent-&gt;GetEntityDefName(),<sp/>ent-&gt;GetPhysics()-&gt;GetAbsBounds().GetCenter()<sp/>+<sp/>up,<sp/>0.1f,<sp/>colorWhite,<sp/>axis,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ent-&gt;IsType(<sp/>idTrigger::Type<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classid_trigger" kindref="compound">idTrigger</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>ent<sp/>)-&gt;GetScriptFunction();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>func<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameRenderWorld-&gt;DrawText(<sp/>va(<sp/></highlight><highlight class="stringliteral">&quot;call<sp/>script<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/>func-&gt;Name()<sp/>),<sp/>ent-&gt;GetPhysics()-&gt;GetAbsBounds().GetCenter()<sp/>-<sp/>up,<sp/>0.1f,<sp/>colorWhite,<sp/>axis,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ent-&gt;targets.Num();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target<sp/>=<sp/>ent-&gt;targets[<sp/>i<sp/>].GetEntity();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>target<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameRenderWorld-&gt;DebugArrow(<sp/>colorYellow,<sp/>ent-&gt;GetPhysics()-&gt;GetAbsBounds().GetCenter(),<sp/>target-&gt;GetPhysics()-&gt;GetOrigin(),<sp/>10,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameRenderWorld-&gt;DebugBounds(<sp/>colorGreen,<sp/>box,<sp/>target-&gt;GetPhysics()-&gt;GetOrigin()<sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>viewTextBounds.IntersectsBounds(<sp/>target-&gt;GetPhysics()-&gt;GetAbsBounds()<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameRenderWorld-&gt;DrawText(<sp/>target-&gt;name.c_str(),<sp/>target-&gt;GetPhysics()-&gt;GetAbsBounds().GetCenter(),<sp/>0.1f,<sp/>colorWhite,<sp/>axis,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="117"><highlight class="comment">================</highlight></codeline>
<codeline lineno="118"><highlight class="comment">idTrigger::Enable</highlight></codeline>
<codeline lineno="119"><highlight class="comment">================</highlight></codeline>
<codeline lineno="120"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger::Enable(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>GetPhysics()-&gt;SetContents(<sp/>CONTENTS_TRIGGER<sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>GetPhysics()-&gt;EnableClip();</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="127"><highlight class="comment">================</highlight></codeline>
<codeline lineno="128"><highlight class="comment">idTrigger::Disable</highlight></codeline>
<codeline lineno="129"><highlight class="comment">================</highlight></codeline>
<codeline lineno="130"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger::Disable(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>may<sp/>be<sp/>relinked<sp/>if<sp/>we&apos;re<sp/>bound<sp/>to<sp/>another<sp/>object,<sp/>so<sp/>clear<sp/>the<sp/>contents<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>GetPhysics()-&gt;SetContents(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>GetPhysics()-&gt;DisableClip();</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="138"><highlight class="comment">================</highlight></codeline>
<codeline lineno="139"><highlight class="comment">idTrigger::CallScript</highlight></codeline>
<codeline lineno="140"><highlight class="comment">================</highlight></codeline>
<codeline lineno="141"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger::CallScript(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_thread" kindref="compound">idThread</ref><sp/>*thread;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>scriptFunction<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classid_thread" kindref="compound">idThread</ref>(<sp/>scriptFunction<sp/>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread-&gt;DelayedStart(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="152"><highlight class="comment">================</highlight></codeline>
<codeline lineno="153"><highlight class="comment">idTrigger::GetScriptFunction</highlight></codeline>
<codeline lineno="154"><highlight class="comment">================</highlight></codeline>
<codeline lineno="155"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classfunction__t" kindref="compound">function_t</ref><sp/>*idTrigger::GetScriptFunction(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scriptFunction;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="161"><highlight class="comment">================</highlight></codeline>
<codeline lineno="162"><highlight class="comment">idTrigger::Save</highlight></codeline>
<codeline lineno="163"><highlight class="comment">================</highlight></codeline>
<codeline lineno="164"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger::Save(<sp/><ref refid="classid_save_game" kindref="compound">idSaveGame</ref><sp/>*savefile<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>scriptFunction<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;WriteString(<sp/>scriptFunction-&gt;Name()<sp/>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savefile-&gt;WriteString(<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="174"><highlight class="comment">================</highlight></codeline>
<codeline lineno="175"><highlight class="comment">idTrigger::Restore</highlight></codeline>
<codeline lineno="176"><highlight class="comment">================</highlight></codeline>
<codeline lineno="177"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger::Restore(<sp/><ref refid="classid_restore_game" kindref="compound">idRestoreGame</ref><sp/>*savefile<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>funcname;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadString(<sp/>funcname<sp/>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>funcname.Length()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scriptFunction<sp/>=<sp/>gameLocal.program.FindFunction(<sp/>funcname<sp/>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>scriptFunction<sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Warning(<sp/></highlight><highlight class="stringliteral">&quot;idTrigger_Multi<sp/>&apos;%s&apos;<sp/>at<sp/>(%s)<sp/>calls<sp/>unknown<sp/>function<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/>name.c_str(),<sp/>GetPhysics()-&gt;GetOrigin().ToString(0),<sp/>funcname.c_str()<sp/>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scriptFunction<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="192"><highlight class="comment">================</highlight></codeline>
<codeline lineno="193"><highlight class="comment">idTrigger::Event_Enable</highlight></codeline>
<codeline lineno="194"><highlight class="comment">================</highlight></codeline>
<codeline lineno="195"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger::Event_Enable(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>Enable();</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="201"><highlight class="comment">================</highlight></codeline>
<codeline lineno="202"><highlight class="comment">idTrigger::Event_Disable</highlight></codeline>
<codeline lineno="203"><highlight class="comment">================</highlight></codeline>
<codeline lineno="204"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger::Event_Disable(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>Disable();</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="210"><highlight class="comment">================</highlight></codeline>
<codeline lineno="211"><highlight class="comment">idTrigger::idTrigger</highlight></codeline>
<codeline lineno="212"><highlight class="comment">================</highlight></codeline>
<codeline lineno="213"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal">idTrigger::idTrigger()<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>scriptFunction<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="219"><highlight class="comment">================</highlight></codeline>
<codeline lineno="220"><highlight class="comment">idTrigger::Spawn</highlight></codeline>
<codeline lineno="221"><highlight class="comment">================</highlight></codeline>
<codeline lineno="222"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger::Spawn(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>GetPhysics()-&gt;SetContents(<sp/>CONTENTS_TRIGGER<sp/>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/>funcname<sp/>=<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;call&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>funcname.Length()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scriptFunction<sp/>=<sp/>gameLocal.program.FindFunction(<sp/>funcname<sp/>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>scriptFunction<sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Warning(<sp/></highlight><highlight class="stringliteral">&quot;trigger<sp/>&apos;%s&apos;<sp/>at<sp/>(%s)<sp/>calls<sp/>unknown<sp/>function<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/>name.c_str(),<sp/>GetPhysics()-&gt;GetOrigin().ToString(0),<sp/>funcname.c_str()<sp/>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scriptFunction<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="239"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="240"><highlight class="comment"></highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/>idTrigger_Multi</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="244"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_TriggerAction(<sp/></highlight><highlight class="stringliteral">&quot;&lt;triggerAction&gt;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;e&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">CLASS_DECLARATION(<sp/><ref refid="classid_trigger" kindref="compound">idTrigger</ref>,<sp/><ref refid="classid_trigger___multi" kindref="compound">idTrigger_Multi</ref><sp/>)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Touch,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_trigger___multi" kindref="compound">idTrigger_Multi</ref>::Event_Touch<sp/>)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Activate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_trigger___multi" kindref="compound">idTrigger_Multi</ref>::Event_Trigger<sp/>)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_TriggerAction,<sp/><sp/><sp/><sp/><ref refid="classid_trigger___multi" kindref="compound">idTrigger_Multi</ref>::Event_TriggerAction<sp/>)</highlight></codeline>
<codeline lineno="252"><highlight class="normal">END_CLASS</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="256"><highlight class="comment">================</highlight></codeline>
<codeline lineno="257"><highlight class="comment">idTrigger_Multi::idTrigger_Multi</highlight></codeline>
<codeline lineno="258"><highlight class="comment">================</highlight></codeline>
<codeline lineno="259"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><ref refid="classid_trigger___multi" kindref="compound">idTrigger_Multi</ref>::<ref refid="classid_trigger___multi" kindref="compound">idTrigger_Multi</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>wait<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>random<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>delay<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>random_delay<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>nextTriggerTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>removeItem<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>touchClient<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>touchOther<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>triggerFirst<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>triggerWithSelf<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="274"><highlight class="comment">================</highlight></codeline>
<codeline lineno="275"><highlight class="comment">idTrigger_Multi::Save</highlight></codeline>
<codeline lineno="276"><highlight class="comment">================</highlight></codeline>
<codeline lineno="277"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Multi::Save(<sp/><ref refid="classid_save_game" kindref="compound">idSaveGame</ref><sp/>*savefile<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>wait<sp/>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>random<sp/>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>delay<sp/>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>random_delay<sp/>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>nextTriggerTime<sp/>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteString(<sp/>requires<sp/>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>removeItem<sp/>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>touchClient<sp/>);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>touchOther<sp/>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>triggerFirst<sp/>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>triggerWithSelf<sp/>);</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="293"><highlight class="comment">================</highlight></codeline>
<codeline lineno="294"><highlight class="comment">idTrigger_Multi::Restore</highlight></codeline>
<codeline lineno="295"><highlight class="comment">================</highlight></codeline>
<codeline lineno="296"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Multi::Restore(<sp/><ref refid="classid_restore_game" kindref="compound">idRestoreGame</ref><sp/>*savefile<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>wait<sp/>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>random<sp/>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>delay<sp/>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>random_delay<sp/>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>nextTriggerTime<sp/>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadString(<sp/>requires<sp/>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>removeItem<sp/>);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>touchClient<sp/>);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>touchOther<sp/>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>triggerFirst<sp/>);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>triggerWithSelf<sp/>);</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="312"><highlight class="comment">================</highlight></codeline>
<codeline lineno="313"><highlight class="comment">idTrigger_Multi::Spawn</highlight></codeline>
<codeline lineno="314"><highlight class="comment"></highlight></codeline>
<codeline lineno="315"><highlight class="comment">&quot;wait&quot;<sp/>:<sp/>Seconds<sp/>between<sp/>triggerings,<sp/>0.5<sp/>default,<sp/>-1<sp/>=<sp/>one<sp/>time<sp/>only.</highlight></codeline>
<codeline lineno="316"><highlight class="comment">&quot;call&quot;<sp/>:<sp/>Script<sp/>function<sp/>to<sp/>call<sp/>when<sp/>triggered</highlight></codeline>
<codeline lineno="317"><highlight class="comment">&quot;random&quot;<sp/><sp/><sp/><sp/>wait<sp/>variance,<sp/>default<sp/>is<sp/>0</highlight></codeline>
<codeline lineno="318"><highlight class="comment">Variable<sp/>sized<sp/>repeatable<sp/>trigger.<sp/><sp/>Must<sp/>be<sp/>targeted<sp/>at<sp/>one<sp/>or<sp/>more<sp/>entities.</highlight></codeline>
<codeline lineno="319"><highlight class="comment">so,<sp/>the<sp/>basic<sp/>time<sp/>between<sp/>firing<sp/>is<sp/>a<sp/>random<sp/>time<sp/>between</highlight></codeline>
<codeline lineno="320"><highlight class="comment">(wait<sp/>-<sp/>random)<sp/>and<sp/>(wait<sp/>+<sp/>random)</highlight></codeline>
<codeline lineno="321"><highlight class="comment">================</highlight></codeline>
<codeline lineno="322"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Multi::Spawn(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnArgs.GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;wait&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0.5&quot;</highlight><highlight class="normal">,<sp/>wait<sp/>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnArgs.GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;random&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>random<sp/>);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnArgs.GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;delay&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>delay<sp/>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnArgs.GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;random_delay&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>random_delay<sp/>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>random<sp/>&amp;&amp;<sp/>(<sp/>random<sp/>&gt;=<sp/>wait<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>wait<sp/>&gt;=<sp/>0<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>random<sp/>=<sp/>wait<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Warning(<sp/></highlight><highlight class="stringliteral">&quot;idTrigger_Multi<sp/>&apos;%s&apos;<sp/>at<sp/>(%s)<sp/>has<sp/>random<sp/>&gt;=<sp/>wait&quot;</highlight><highlight class="normal">,<sp/>name.c_str(),<sp/>GetPhysics()-&gt;GetOrigin().ToString(0)<sp/>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>random_delay<sp/>&amp;&amp;<sp/>(<sp/>random_delay<sp/>&gt;=<sp/>delay<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>delay<sp/>&gt;=<sp/>0<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>random_delay<sp/>=<sp/>delay<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Warning(<sp/></highlight><highlight class="stringliteral">&quot;idTrigger_Multi<sp/>&apos;%s&apos;<sp/>at<sp/>(%s)<sp/>has<sp/>random_delay<sp/>&gt;=<sp/>delay&quot;</highlight><highlight class="normal">,<sp/>name.c_str(),<sp/>GetPhysics()-&gt;GetOrigin().ToString(0)<sp/>);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;requires&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>requires<sp/>);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnArgs.GetInt(<sp/></highlight><highlight class="stringliteral">&quot;removeItem&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>removeItem<sp/>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;triggerFirst&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>triggerFirst<sp/>);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;triggerWithSelf&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>triggerWithSelf<sp/>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;anyTouch&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>touchClient<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>touchOther<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;noTouch&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>touchClient<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>touchOther<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;noClient&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>touchClient<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>touchOther<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>touchClient<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>touchOther<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>nextTriggerTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;flashlight_trigger&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetPhysics()-&gt;SetContents(<sp/>CONTENTS_FLASHLIGHT_TRIGGER<sp/>);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetPhysics()-&gt;SetContents(<sp/>CONTENTS_TRIGGER<sp/>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="368"><highlight class="comment">================</highlight></codeline>
<codeline lineno="369"><highlight class="comment">idTrigger_Multi::CheckFacing</highlight></codeline>
<codeline lineno="370"><highlight class="comment">================</highlight></codeline>
<codeline lineno="371"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idTrigger_Multi::CheckFacing(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*activator<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;facing&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!activator-&gt;IsType(<sp/>idPlayer::Type<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/>*player<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>activator<sp/>);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dot<sp/>=<sp/>player-&gt;viewAngles.ToForward()<sp/>*<sp/>GetPhysics()-&gt;GetAxis()[0];</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/>RAD2DEG(<sp/>idMath::ACos(<sp/>dot<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>angle<sp/><sp/>&gt;<sp/>spawnArgs.GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;angleLimit&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;30&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="389"><highlight class="comment">================</highlight></codeline>
<codeline lineno="390"><highlight class="comment">idTrigger_Multi::TriggerAction</highlight></codeline>
<codeline lineno="391"><highlight class="comment">================</highlight></codeline>
<codeline lineno="392"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Multi::TriggerAction(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*activator<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>ActivateTargets(<sp/>triggerWithSelf<sp/>?<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>:<sp/>activator<sp/>);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>CallScript();</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>wait<sp/>&gt;=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextTriggerTime<sp/>=<sp/>gameLocal.time<sp/>+<sp/>SEC2MS(<sp/>wait<sp/>+<sp/>random<sp/>*<sp/>gameLocal.random.CRandomFloat()<sp/>);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can&apos;t<sp/>just<sp/>remove<sp/>(this)<sp/>here,<sp/>because<sp/>this<sp/>is<sp/>a<sp/>touch<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>called<sp/>while<sp/>looping<sp/>through<sp/>area<sp/>links...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextTriggerTime<sp/>=<sp/>gameLocal.time<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventMS(<sp/>&amp;EV_Remove,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="408"><highlight class="comment">================</highlight></codeline>
<codeline lineno="409"><highlight class="comment">idTrigger_Multi::Event_TriggerAction</highlight></codeline>
<codeline lineno="410"><highlight class="comment">================</highlight></codeline>
<codeline lineno="411"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Multi::Event_TriggerAction(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*activator<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>TriggerAction(<sp/>activator<sp/>);</highlight></codeline>
<codeline lineno="414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="417"><highlight class="comment">================</highlight></codeline>
<codeline lineno="418"><highlight class="comment">idTrigger_Multi::Event_Trigger</highlight></codeline>
<codeline lineno="419"><highlight class="comment"></highlight></codeline>
<codeline lineno="420"><highlight class="comment">the<sp/>trigger<sp/>was<sp/>just<sp/>activated</highlight></codeline>
<codeline lineno="421"><highlight class="comment">activated<sp/>should<sp/>be<sp/>the<sp/>entity<sp/>that<sp/>originated<sp/>the<sp/>activation<sp/>sequence<sp/>(ie.<sp/>the<sp/>original<sp/>target)</highlight></codeline>
<codeline lineno="422"><highlight class="comment">activator<sp/>should<sp/>be<sp/>set<sp/>to<sp/>the<sp/>activator<sp/>so<sp/>it<sp/>can<sp/>be<sp/>held<sp/>through<sp/>a<sp/>delay</highlight></codeline>
<codeline lineno="423"><highlight class="comment">so<sp/>wait<sp/>for<sp/>the<sp/>delay<sp/>time<sp/>before<sp/>firing</highlight></codeline>
<codeline lineno="424"><highlight class="comment">================</highlight></codeline>
<codeline lineno="425"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Multi::Event_Trigger(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*activator<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>nextTriggerTime<sp/>&gt;<sp/>gameLocal.time<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>retrigger<sp/>until<sp/>the<sp/>wait<sp/>is<sp/>over</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>if<sp/>this<sp/>trigger<sp/>requires<sp/>an<sp/>item</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.RequirementMet(<sp/>activator,<sp/>requires,<sp/>removeItem<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!CheckFacing(<sp/>activator<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>triggerFirst<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>triggerFirst<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>allow<sp/>it<sp/>to<sp/>trigger<sp/>twice<sp/>in<sp/>a<sp/>single<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>nextTriggerTime<sp/>=<sp/>gameLocal.time<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>delay<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>allow<sp/>it<sp/>to<sp/>trigger<sp/>again<sp/>until<sp/>our<sp/>delay<sp/>has<sp/>passed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextTriggerTime<sp/>+=<sp/>SEC2MS(<sp/>delay<sp/>+<sp/>random_delay<sp/>*<sp/>gameLocal.random.CRandomFloat()<sp/>);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventSec(<sp/>&amp;EV_TriggerAction,<sp/>delay,<sp/>activator<sp/>);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TriggerAction(<sp/>activator<sp/>);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="459"><highlight class="comment">================</highlight></codeline>
<codeline lineno="460"><highlight class="comment">idTrigger_Multi::Event_Touch</highlight></codeline>
<codeline lineno="461"><highlight class="comment">================</highlight></codeline>
<codeline lineno="462"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Multi::Event_Touch(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*other,<sp/><ref refid="structtrace__s" kindref="compound">trace_t</ref><sp/>*trace<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>triggerFirst<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>player<sp/>=<sp/>other-&gt;IsType(<sp/>idPlayer::Type<sp/>);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>player<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!touchClient<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>static_cast&lt;<sp/>idPlayer<sp/>*<sp/>&gt;(<sp/>other<sp/>)-&gt;spectating<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!touchOther<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>nextTriggerTime<sp/>&gt;<sp/>gameLocal.time<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>retrigger<sp/>until<sp/>the<sp/>wait<sp/>is<sp/>over</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>if<sp/>this<sp/>trigger<sp/>requires<sp/>an<sp/>item</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.RequirementMet(<sp/>other,<sp/>requires,<sp/>removeItem<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!CheckFacing(<sp/>other<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;toggleTriggerFirst&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>triggerFirst<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>nextTriggerTime<sp/>=<sp/>gameLocal.time<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>delay<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>allow<sp/>it<sp/>to<sp/>trigger<sp/>again<sp/>until<sp/>our<sp/>delay<sp/>has<sp/>passed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextTriggerTime<sp/>+=<sp/>SEC2MS(<sp/>delay<sp/>+<sp/>random_delay<sp/>*<sp/>gameLocal.random.CRandomFloat()<sp/>);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventSec(<sp/>&amp;EV_TriggerAction,<sp/>delay,<sp/>other<sp/>);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TriggerAction(<sp/>other<sp/>);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="509"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="510"><highlight class="comment"></highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/><sp/>idTrigger_EntityName</highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="513"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="514"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal">CLASS_DECLARATION(<sp/><ref refid="classid_trigger" kindref="compound">idTrigger</ref>,<sp/><ref refid="classid_trigger___entity_name" kindref="compound">idTrigger_EntityName</ref><sp/>)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Touch,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_trigger___entity_name" kindref="compound">idTrigger_EntityName</ref>::Event_Touch<sp/>)</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Activate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_trigger___entity_name" kindref="compound">idTrigger_EntityName</ref>::Event_Trigger<sp/>)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_TriggerAction,<sp/><sp/><sp/><sp/><ref refid="classid_trigger___entity_name" kindref="compound">idTrigger_EntityName</ref>::Event_TriggerAction<sp/>)</highlight></codeline>
<codeline lineno="520"><highlight class="normal">END_CLASS</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="523"><highlight class="comment">================</highlight></codeline>
<codeline lineno="524"><highlight class="comment">idTrigger_EntityName::idTrigger_EntityName</highlight></codeline>
<codeline lineno="525"><highlight class="comment">================</highlight></codeline>
<codeline lineno="526"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><ref refid="classid_trigger___entity_name" kindref="compound">idTrigger_EntityName</ref>::<ref refid="classid_trigger___entity_name" kindref="compound">idTrigger_EntityName</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>wait<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>random<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>delay<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>random_delay<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>nextTriggerTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>triggerFirst<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="537"><highlight class="comment">================</highlight></codeline>
<codeline lineno="538"><highlight class="comment">idTrigger_EntityName::Save</highlight></codeline>
<codeline lineno="539"><highlight class="comment">================</highlight></codeline>
<codeline lineno="540"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_EntityName::Save(<sp/><ref refid="classid_save_game" kindref="compound">idSaveGame</ref><sp/>*savefile<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>wait<sp/>);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>random<sp/>);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>delay<sp/>);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>random_delay<sp/>);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>nextTriggerTime<sp/>);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>triggerFirst<sp/>);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteString(<sp/>entityName<sp/>);</highlight></codeline>
<codeline lineno="549"><highlight class="normal">}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="552"><highlight class="comment">================</highlight></codeline>
<codeline lineno="553"><highlight class="comment">idTrigger_EntityName::Restore</highlight></codeline>
<codeline lineno="554"><highlight class="comment">================</highlight></codeline>
<codeline lineno="555"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_EntityName::Restore(<sp/><ref refid="classid_restore_game" kindref="compound">idRestoreGame</ref><sp/>*savefile<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>wait<sp/>);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>random<sp/>);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>delay<sp/>);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>random_delay<sp/>);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>nextTriggerTime<sp/>);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>triggerFirst<sp/>);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadString(<sp/>entityName<sp/>);</highlight></codeline>
<codeline lineno="564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="567"><highlight class="comment">================</highlight></codeline>
<codeline lineno="568"><highlight class="comment">idTrigger_EntityName::Spawn</highlight></codeline>
<codeline lineno="569"><highlight class="comment">================</highlight></codeline>
<codeline lineno="570"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_EntityName::Spawn(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnArgs.GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;wait&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0.5&quot;</highlight><highlight class="normal">,<sp/>wait<sp/>);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnArgs.GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;random&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>random<sp/>);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnArgs.GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;delay&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>delay<sp/>);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnArgs.GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;random_delay&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>random_delay<sp/>);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>random<sp/>&amp;&amp;<sp/>(<sp/>random<sp/>&gt;=<sp/>wait<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>wait<sp/>&gt;=<sp/>0<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>random<sp/>=<sp/>wait<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Warning(<sp/></highlight><highlight class="stringliteral">&quot;idTrigger_EntityName<sp/>&apos;%s&apos;<sp/>at<sp/>(%s)<sp/>has<sp/>random<sp/>&gt;=<sp/>wait&quot;</highlight><highlight class="normal">,<sp/>name.c_str(),<sp/>GetPhysics()-&gt;GetOrigin().ToString(0)<sp/>);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>random_delay<sp/>&amp;&amp;<sp/>(<sp/>random_delay<sp/>&gt;=<sp/>delay<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>delay<sp/>&gt;=<sp/>0<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>random_delay<sp/>=<sp/>delay<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Warning(<sp/></highlight><highlight class="stringliteral">&quot;idTrigger_EntityName<sp/>&apos;%s&apos;<sp/>at<sp/>(%s)<sp/>has<sp/>random_delay<sp/>&gt;=<sp/>delay&quot;</highlight><highlight class="normal">,<sp/>name.c_str(),<sp/>GetPhysics()-&gt;GetOrigin().ToString(0)<sp/>);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;triggerFirst&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>triggerFirst<sp/>);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>entityName<sp/>=<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;entityname&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!entityName.Length()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Error(<sp/></highlight><highlight class="stringliteral">&quot;idTrigger_EntityName<sp/>&apos;%s&apos;<sp/>at<sp/>(%s)<sp/>doesn&apos;t<sp/>have<sp/>&apos;entityname&apos;<sp/>key<sp/>specified&quot;</highlight><highlight class="normal">,<sp/>name.c_str(),<sp/>GetPhysics()-&gt;GetOrigin().ToString(0)<sp/>);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>nextTriggerTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;noTouch&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetPhysics()-&gt;SetContents(<sp/>CONTENTS_TRIGGER<sp/>);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal">}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="602"><highlight class="comment">================</highlight></codeline>
<codeline lineno="603"><highlight class="comment">idTrigger_EntityName::TriggerAction</highlight></codeline>
<codeline lineno="604"><highlight class="comment">================</highlight></codeline>
<codeline lineno="605"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_EntityName::TriggerAction(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*activator<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>ActivateTargets(<sp/>activator<sp/>);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>CallScript();</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>wait<sp/>&gt;=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextTriggerTime<sp/>=<sp/>gameLocal.time<sp/>+<sp/>SEC2MS(<sp/>wait<sp/>+<sp/>random<sp/>*<sp/>gameLocal.random.CRandomFloat()<sp/>);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can&apos;t<sp/>just<sp/>remove<sp/>(this)<sp/>here,<sp/>because<sp/>this<sp/>is<sp/>a<sp/>touch<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>called<sp/>while<sp/>looping<sp/>through<sp/>area<sp/>links...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextTriggerTime<sp/>=<sp/>gameLocal.time<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventMS(<sp/>&amp;EV_Remove,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="621"><highlight class="comment">================</highlight></codeline>
<codeline lineno="622"><highlight class="comment">idTrigger_EntityName::Event_TriggerAction</highlight></codeline>
<codeline lineno="623"><highlight class="comment">================</highlight></codeline>
<codeline lineno="624"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_EntityName::Event_TriggerAction(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*activator<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>TriggerAction(<sp/>activator<sp/>);</highlight></codeline>
<codeline lineno="627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="630"><highlight class="comment">================</highlight></codeline>
<codeline lineno="631"><highlight class="comment">idTrigger_EntityName::Event_Trigger</highlight></codeline>
<codeline lineno="632"><highlight class="comment"></highlight></codeline>
<codeline lineno="633"><highlight class="comment">the<sp/>trigger<sp/>was<sp/>just<sp/>activated</highlight></codeline>
<codeline lineno="634"><highlight class="comment">activated<sp/>should<sp/>be<sp/>the<sp/>entity<sp/>that<sp/>originated<sp/>the<sp/>activation<sp/>sequence<sp/>(ie.<sp/>the<sp/>original<sp/>target)</highlight></codeline>
<codeline lineno="635"><highlight class="comment">activator<sp/>should<sp/>be<sp/>set<sp/>to<sp/>the<sp/>activator<sp/>so<sp/>it<sp/>can<sp/>be<sp/>held<sp/>through<sp/>a<sp/>delay</highlight></codeline>
<codeline lineno="636"><highlight class="comment">so<sp/>wait<sp/>for<sp/>the<sp/>delay<sp/>time<sp/>before<sp/>firing</highlight></codeline>
<codeline lineno="637"><highlight class="comment">================</highlight></codeline>
<codeline lineno="638"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_EntityName::Event_Trigger(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*activator<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>nextTriggerTime<sp/>&gt;<sp/>gameLocal.time<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>retrigger<sp/>until<sp/>the<sp/>wait<sp/>is<sp/>over</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!activator<sp/>||<sp/>(<sp/>activator-&gt;name<sp/>!=<sp/>entityName<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>triggerFirst<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>triggerFirst<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>allow<sp/>it<sp/>to<sp/>trigger<sp/>twice<sp/>in<sp/>a<sp/>single<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>nextTriggerTime<sp/>=<sp/>gameLocal.time<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>delay<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>allow<sp/>it<sp/>to<sp/>trigger<sp/>again<sp/>until<sp/>our<sp/>delay<sp/>has<sp/>passed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextTriggerTime<sp/>+=<sp/>SEC2MS(<sp/>delay<sp/>+<sp/>random_delay<sp/>*<sp/>gameLocal.random.CRandomFloat()<sp/>);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventSec(<sp/>&amp;EV_TriggerAction,<sp/>delay,<sp/>activator<sp/>);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TriggerAction(<sp/>activator<sp/>);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="667"><highlight class="comment">================</highlight></codeline>
<codeline lineno="668"><highlight class="comment">idTrigger_EntityName::Event_Touch</highlight></codeline>
<codeline lineno="669"><highlight class="comment">================</highlight></codeline>
<codeline lineno="670"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_EntityName::Event_Touch(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*other,<sp/><ref refid="structtrace__s" kindref="compound">trace_t</ref><sp/>*trace<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>triggerFirst<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>nextTriggerTime<sp/>&gt;<sp/>gameLocal.time<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>retrigger<sp/>until<sp/>the<sp/>wait<sp/>is<sp/>over</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!other<sp/>||<sp/>(<sp/>other-&gt;name<sp/>!=<sp/>entityName<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>nextTriggerTime<sp/>=<sp/>gameLocal.time<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>delay<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>allow<sp/>it<sp/>to<sp/>trigger<sp/>again<sp/>until<sp/>our<sp/>delay<sp/>has<sp/>passed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextTriggerTime<sp/>+=<sp/>SEC2MS(<sp/>delay<sp/>+<sp/>random_delay<sp/>*<sp/>gameLocal.random.CRandomFloat()<sp/>);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventSec(<sp/>&amp;EV_TriggerAction,<sp/>delay,<sp/>other<sp/>);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TriggerAction(<sp/>other<sp/>);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal">}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="696"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="697"><highlight class="comment"></highlight></codeline>
<codeline lineno="698"><highlight class="comment"><sp/><sp/>idTrigger_Timer</highlight></codeline>
<codeline lineno="699"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="700"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="701"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_event_def" kindref="compound">idEventDef</ref><sp/>EV_Timer(<sp/></highlight><highlight class="stringliteral">&quot;&lt;timer&gt;&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal">CLASS_DECLARATION(<sp/><ref refid="classid_trigger" kindref="compound">idTrigger</ref>,<sp/><ref refid="classid_trigger___timer" kindref="compound">idTrigger_Timer</ref><sp/>)</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Timer,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_trigger___timer" kindref="compound">idTrigger_Timer</ref>::Event_Timer<sp/>)</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Activate,<sp/><sp/><sp/><sp/><sp/><ref refid="classid_trigger___timer" kindref="compound">idTrigger_Timer</ref>::Event_Use<sp/>)</highlight></codeline>
<codeline lineno="708"><highlight class="normal">END_CLASS</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="711"><highlight class="comment">================</highlight></codeline>
<codeline lineno="712"><highlight class="comment">idTrigger_Timer::idTrigger_Timer</highlight></codeline>
<codeline lineno="713"><highlight class="comment">================</highlight></codeline>
<codeline lineno="714"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><ref refid="classid_trigger___timer" kindref="compound">idTrigger_Timer</ref>::<ref refid="classid_trigger___timer" kindref="compound">idTrigger_Timer</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>random<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>wait<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>on<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>delay<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="723"><highlight class="comment">================</highlight></codeline>
<codeline lineno="724"><highlight class="comment">idTrigger_Timer::Save</highlight></codeline>
<codeline lineno="725"><highlight class="comment">================</highlight></codeline>
<codeline lineno="726"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Timer::Save(<sp/><ref refid="classid_save_game" kindref="compound">idSaveGame</ref><sp/>*savefile<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>random<sp/>);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>wait<sp/>);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>on<sp/>);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>delay<sp/>);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteString(<sp/>onName<sp/>);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteString(<sp/>offName<sp/>);</highlight></codeline>
<codeline lineno="734"><highlight class="normal">}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="737"><highlight class="comment">================</highlight></codeline>
<codeline lineno="738"><highlight class="comment">idTrigger_Timer::Restore</highlight></codeline>
<codeline lineno="739"><highlight class="comment">================</highlight></codeline>
<codeline lineno="740"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Timer::Restore(<sp/><ref refid="classid_restore_game" kindref="compound">idRestoreGame</ref><sp/>*savefile<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>random<sp/>);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>wait<sp/>);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>on<sp/>);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>delay<sp/>);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadString(<sp/>onName<sp/>);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadString(<sp/>offName<sp/>);</highlight></codeline>
<codeline lineno="748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="751"><highlight class="comment">================</highlight></codeline>
<codeline lineno="752"><highlight class="comment">idTrigger_Timer::Spawn</highlight></codeline>
<codeline lineno="753"><highlight class="comment"></highlight></codeline>
<codeline lineno="754"><highlight class="comment">Repeatedly<sp/>fires<sp/>its<sp/>targets.</highlight></codeline>
<codeline lineno="755"><highlight class="comment">Can<sp/>be<sp/>turned<sp/>on<sp/>or<sp/>off<sp/>by<sp/>using.</highlight></codeline>
<codeline lineno="756"><highlight class="comment">================</highlight></codeline>
<codeline lineno="757"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Timer::Spawn(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnArgs.GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;random&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>random<sp/>);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnArgs.GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;wait&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>wait<sp/>);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;start_on&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>on<sp/>);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnArgs.GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;delay&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>delay<sp/>);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>onName<sp/>=<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;onName&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>offName<sp/>=<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;offName&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>random<sp/>&gt;=<sp/>wait<sp/>&amp;&amp;<sp/>wait<sp/>&gt;=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>random<sp/>=<sp/>wait<sp/>-<sp/>0.001;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameLocal.Warning(<sp/></highlight><highlight class="stringliteral">&quot;idTrigger_Timer<sp/>&apos;%s&apos;<sp/>at<sp/>(%s)<sp/>has<sp/>random<sp/>&gt;=<sp/>wait&quot;</highlight><highlight class="normal">,<sp/>name.c_str(),<sp/>GetPhysics()-&gt;GetOrigin().ToString(0)<sp/>);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>on<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventSec(<sp/>&amp;EV_Timer,<sp/>delay<sp/>);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="774"><highlight class="normal">}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="777"><highlight class="comment">================</highlight></codeline>
<codeline lineno="778"><highlight class="comment">idTrigger_Timer::Enable</highlight></codeline>
<codeline lineno="779"><highlight class="comment">================</highlight></codeline>
<codeline lineno="780"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Timer::Enable(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>off,<sp/>turn<sp/>it<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!on<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventSec(<sp/>&amp;EV_Timer,<sp/>delay<sp/>);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="790"><highlight class="comment">================</highlight></codeline>
<codeline lineno="791"><highlight class="comment">idTrigger_Timer::Disable</highlight></codeline>
<codeline lineno="792"><highlight class="comment">================</highlight></codeline>
<codeline lineno="793"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Timer::Disable(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>on,<sp/>turn<sp/>it<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>on<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CancelEvents(<sp/>&amp;EV_Timer<sp/>);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="800"><highlight class="normal">}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="803"><highlight class="comment">================</highlight></codeline>
<codeline lineno="804"><highlight class="comment">idTrigger_Timer::Event_Timer</highlight></codeline>
<codeline lineno="805"><highlight class="comment">================</highlight></codeline>
<codeline lineno="806"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Timer::Event_Timer(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>ActivateTargets(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>time<sp/>before<sp/>next<sp/>firing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>wait<sp/>&gt;=<sp/>0.0f<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventSec(<sp/>&amp;EV_Timer,<sp/>wait<sp/>+<sp/>gameLocal.random.CRandomFloat()<sp/>*<sp/>random<sp/>);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal">}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="817"><highlight class="comment">================</highlight></codeline>
<codeline lineno="818"><highlight class="comment">idTrigger_Timer::Event_Use</highlight></codeline>
<codeline lineno="819"><highlight class="comment">================</highlight></codeline>
<codeline lineno="820"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Timer::Event_Use(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*activator<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>on,<sp/>turn<sp/>it<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>on<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>offName.Length()<sp/>&amp;&amp;<sp/>offName.Icmp(<sp/>activator-&gt;GetName()<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CancelEvents(<sp/>&amp;EV_Timer<sp/>);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>turn<sp/>it<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>onName.Length()<sp/>&amp;&amp;<sp/>onName.Icmp(<sp/>activator-&gt;GetName()<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventSec(<sp/>&amp;EV_Timer,<sp/>delay<sp/>);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal">}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="840"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="841"><highlight class="comment"></highlight></codeline>
<codeline lineno="842"><highlight class="comment"><sp/><sp/>idTrigger_Count</highlight></codeline>
<codeline lineno="843"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="844"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="845"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal">CLASS_DECLARATION(<sp/><ref refid="classid_trigger" kindref="compound">idTrigger</ref>,<sp/><ref refid="classid_trigger___count" kindref="compound">idTrigger_Count</ref><sp/>)</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Activate,<sp/><ref refid="classid_trigger___count" kindref="compound">idTrigger_Count</ref>::Event_Trigger<sp/>)</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_TriggerAction,<sp/><sp/><sp/><sp/><ref refid="classid_trigger___count" kindref="compound">idTrigger_Count</ref>::Event_TriggerAction<sp/>)</highlight></codeline>
<codeline lineno="850"><highlight class="normal">END_CLASS</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="853"><highlight class="comment">================</highlight></codeline>
<codeline lineno="854"><highlight class="comment">idTrigger_Count::idTrigger_Count</highlight></codeline>
<codeline lineno="855"><highlight class="comment">================</highlight></codeline>
<codeline lineno="856"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><ref refid="classid_trigger___count" kindref="compound">idTrigger_Count</ref>::<ref refid="classid_trigger___count" kindref="compound">idTrigger_Count</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>goal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>delay<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="864"><highlight class="comment">================</highlight></codeline>
<codeline lineno="865"><highlight class="comment">idTrigger_Count::Save</highlight></codeline>
<codeline lineno="866"><highlight class="comment">================</highlight></codeline>
<codeline lineno="867"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Count::Save(<sp/><ref refid="classid_save_game" kindref="compound">idSaveGame</ref><sp/>*savefile<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>goal<sp/>);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>count<sp/>);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>delay<sp/>);</highlight></codeline>
<codeline lineno="872"><highlight class="normal">}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="875"><highlight class="comment">================</highlight></codeline>
<codeline lineno="876"><highlight class="comment">idTrigger_Count::Restore</highlight></codeline>
<codeline lineno="877"><highlight class="comment">================</highlight></codeline>
<codeline lineno="878"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Count::Restore(<sp/><ref refid="classid_restore_game" kindref="compound">idRestoreGame</ref><sp/>*savefile<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>goal<sp/>);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>count<sp/>);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>delay<sp/>);</highlight></codeline>
<codeline lineno="883"><highlight class="normal">}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="886"><highlight class="comment">================</highlight></codeline>
<codeline lineno="887"><highlight class="comment">idTrigger_Count::Spawn</highlight></codeline>
<codeline lineno="888"><highlight class="comment">================</highlight></codeline>
<codeline lineno="889"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Count::Spawn(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnArgs.GetInt(<sp/></highlight><highlight class="stringliteral">&quot;count&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>goal<sp/>);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnArgs.GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;delay&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>delay<sp/>);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="894"><highlight class="normal">}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="897"><highlight class="comment">================</highlight></codeline>
<codeline lineno="898"><highlight class="comment">idTrigger_Count::Event_Trigger</highlight></codeline>
<codeline lineno="899"><highlight class="comment">================</highlight></codeline>
<codeline lineno="900"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Count::Event_Trigger(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*activator<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>goal<sp/>of<sp/>-1<sp/>means<sp/>trigger<sp/>has<sp/>been<sp/>exhausted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(goal<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>count<sp/>&gt;=<sp/>goal<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spawnArgs.GetBool(</highlight><highlight class="stringliteral">&quot;repeat&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventSec(<sp/>&amp;EV_TriggerAction,<sp/>delay,<sp/>activator<sp/>);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal">}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="917"><highlight class="comment">================</highlight></codeline>
<codeline lineno="918"><highlight class="comment">idTrigger_Count::Event_TriggerAction</highlight></codeline>
<codeline lineno="919"><highlight class="comment">================</highlight></codeline>
<codeline lineno="920"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Count::Event_TriggerAction(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*activator<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>ActivateTargets(<sp/>activator<sp/>);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>CallScript();</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>goal<sp/>==<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventMS(<sp/>&amp;EV_Remove,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="930"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="931"><highlight class="comment"></highlight></codeline>
<codeline lineno="932"><highlight class="comment"><sp/><sp/>idTrigger_Hurt</highlight></codeline>
<codeline lineno="933"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="934"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="935"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal">CLASS_DECLARATION(<sp/><ref refid="classid_trigger" kindref="compound">idTrigger</ref>,<sp/><ref refid="classid_trigger___hurt" kindref="compound">idTrigger_Hurt</ref><sp/>)</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Touch,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_trigger___hurt" kindref="compound">idTrigger_Hurt</ref>::Event_Touch<sp/>)</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Activate,<sp/><sp/><sp/><sp/><sp/><ref refid="classid_trigger___hurt" kindref="compound">idTrigger_Hurt</ref>::Event_Toggle<sp/>)</highlight></codeline>
<codeline lineno="940"><highlight class="normal">END_CLASS</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="944"><highlight class="comment">================</highlight></codeline>
<codeline lineno="945"><highlight class="comment">idTrigger_Hurt::idTrigger_Hurt</highlight></codeline>
<codeline lineno="946"><highlight class="comment">================</highlight></codeline>
<codeline lineno="947"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><ref refid="classid_trigger___hurt" kindref="compound">idTrigger_Hurt</ref>::<ref refid="classid_trigger___hurt" kindref="compound">idTrigger_Hurt</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/>on<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>delay<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/>nextTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="952"><highlight class="normal">}</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="955"><highlight class="comment">================</highlight></codeline>
<codeline lineno="956"><highlight class="comment">idTrigger_Hurt::Save</highlight></codeline>
<codeline lineno="957"><highlight class="comment">================</highlight></codeline>
<codeline lineno="958"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Hurt::Save(<sp/><ref refid="classid_save_game" kindref="compound">idSaveGame</ref><sp/>*savefile<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteBool(<sp/>on<sp/>);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteFloat(<sp/>delay<sp/>);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteInt(<sp/>nextTime<sp/>);</highlight></codeline>
<codeline lineno="963"><highlight class="normal">}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="966"><highlight class="comment">================</highlight></codeline>
<codeline lineno="967"><highlight class="comment">idTrigger_Hurt::Restore</highlight></codeline>
<codeline lineno="968"><highlight class="comment">================</highlight></codeline>
<codeline lineno="969"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Hurt::Restore(<sp/><ref refid="classid_restore_game" kindref="compound">idRestoreGame</ref><sp/>*savefile<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadBool(<sp/>on<sp/>);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadFloat(<sp/>delay<sp/>);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadInt(<sp/>nextTime<sp/>);</highlight></codeline>
<codeline lineno="974"><highlight class="normal">}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="977"><highlight class="comment">================</highlight></codeline>
<codeline lineno="978"><highlight class="comment">idTrigger_Hurt::Spawn</highlight></codeline>
<codeline lineno="979"><highlight class="comment"></highlight></codeline>
<codeline lineno="980"><highlight class="comment"><sp/><sp/><sp/><sp/>Damages<sp/>activator</highlight></codeline>
<codeline lineno="981"><highlight class="comment"><sp/><sp/><sp/><sp/>Can<sp/>be<sp/>turned<sp/>on<sp/>or<sp/>off<sp/>by<sp/>using.</highlight></codeline>
<codeline lineno="982"><highlight class="comment">================</highlight></codeline>
<codeline lineno="983"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Hurt::Spawn(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;on&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>on<sp/>);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>spawnArgs.GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;delay&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1.0&quot;</highlight><highlight class="normal">,<sp/>delay<sp/>);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>nextTime<sp/>=<sp/>gameLocal.time;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>Enable();</highlight></codeline>
<codeline lineno="989"><highlight class="normal">}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="992"><highlight class="comment">================</highlight></codeline>
<codeline lineno="993"><highlight class="comment">idTrigger_Hurt::Event_Touch</highlight></codeline>
<codeline lineno="994"><highlight class="comment">================</highlight></codeline>
<codeline lineno="995"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Hurt::Event_Touch(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*other,<sp/><ref refid="structtrace__s" kindref="compound">trace_t</ref><sp/>*trace<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*damage;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>on<sp/>&amp;&amp;<sp/>other<sp/>&amp;&amp;<sp/>gameLocal.time<sp/>&gt;=<sp/>nextTime<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>damage<sp/>=<sp/>spawnArgs.GetString(<sp/></highlight><highlight class="stringliteral">&quot;def_damage&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;damage_painTrigger&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other-&gt;Damage(<sp/>NULL,<sp/>NULL,<sp/>vec3_origin,<sp/>damage,<sp/>1.0f,<sp/>INVALID_JOINT<sp/>);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActivateTargets(<sp/>other<sp/>);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CallScript();</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextTime<sp/>=<sp/>gameLocal.time<sp/>+<sp/>SEC2MS(<sp/>delay<sp/>);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1011"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1012"><highlight class="comment">idTrigger_Hurt::Event_Toggle</highlight></codeline>
<codeline lineno="1013"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1014"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Hurt::Event_Toggle(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*activator<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>on<sp/>=<sp/>!on;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1021"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="1022"><highlight class="comment"></highlight></codeline>
<codeline lineno="1023"><highlight class="comment"><sp/><sp/>idTrigger_Fade</highlight></codeline>
<codeline lineno="1024"><highlight class="comment"></highlight></codeline>
<codeline lineno="1025"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="1026"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal">CLASS_DECLARATION(<sp/><ref refid="classid_trigger" kindref="compound">idTrigger</ref>,<sp/><ref refid="classid_trigger___fade" kindref="compound">idTrigger_Fade</ref><sp/>)</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Activate,<sp/><sp/><sp/><sp/><sp/><ref refid="classid_trigger___fade" kindref="compound">idTrigger_Fade</ref>::Event_Trigger<sp/>)</highlight></codeline>
<codeline lineno="1030"><highlight class="normal">END_CLASS</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1033"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1034"><highlight class="comment">idTrigger_Fade::Event_Trigger</highlight></codeline>
<codeline lineno="1035"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1036"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classid_trigger___fade" kindref="compound">idTrigger_Fade</ref>::Event_Trigger(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*activator<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/><sp/><sp/><sp/><sp/><sp/>fadeColor;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fadeTime;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_player" kindref="compound">idPlayer</ref><sp/><sp/><sp/><sp/>*player;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>player<sp/>=<sp/>gameLocal.GetLocalPlayer();</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>player<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fadeColor<sp/>=<sp/>spawnArgs.GetVec4(<sp/></highlight><highlight class="stringliteral">&quot;fadeColor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0,<sp/>0,<sp/>0,<sp/>1&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fadeTime<sp/>=<sp/>SEC2MS(<sp/>spawnArgs.GetFloat(<sp/></highlight><highlight class="stringliteral">&quot;fadeTime&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0.5&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player-&gt;playerView.Fade(<sp/>fadeColor,<sp/>fadeTime<sp/>);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostEventMS(<sp/>&amp;EV_ActivateTargets,<sp/>fadeTime,<sp/>activator<sp/>);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1052"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="1053"><highlight class="comment"></highlight></codeline>
<codeline lineno="1054"><highlight class="comment"><sp/><sp/>idTrigger_Touch</highlight></codeline>
<codeline lineno="1055"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1056"><highlight class="comment">===============================================================================</highlight></codeline>
<codeline lineno="1057"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal">CLASS_DECLARATION(<sp/><ref refid="classid_trigger" kindref="compound">idTrigger</ref>,<sp/><ref refid="classid_trigger___touch" kindref="compound">idTrigger_Touch</ref><sp/>)</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>EVENT(<sp/>EV_Activate,<sp/><sp/><sp/><sp/><sp/><ref refid="classid_trigger___touch" kindref="compound">idTrigger_Touch</ref>::Event_Trigger<sp/>)</highlight></codeline>
<codeline lineno="1061"><highlight class="normal">END_CLASS</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1065"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1066"><highlight class="comment">idTrigger_Touch::idTrigger_Touch</highlight></codeline>
<codeline lineno="1067"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1068"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><ref refid="classid_trigger___touch" kindref="compound">idTrigger_Touch</ref>::<ref refid="classid_trigger___touch" kindref="compound">idTrigger_Touch</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>clipModel<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1074"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1075"><highlight class="comment">idTrigger_Touch::Spawn</highlight></codeline>
<codeline lineno="1076"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1077"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Touch::Spawn(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>clip<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/>clipModel<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classid_clip_model" kindref="compound">idClipModel</ref>(<sp/>GetPhysics()-&gt;GetClipModel()<sp/>);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>the<sp/>collision<sp/>model<sp/>from<sp/>the<sp/>physics<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/>GetPhysics()-&gt;SetClipModel(<sp/>NULL,<sp/>1.0f<sp/>);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>spawnArgs.GetBool(<sp/></highlight><highlight class="stringliteral">&quot;start_on&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BecomeActive(<sp/>TH_THINK<sp/>);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1091"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1092"><highlight class="comment">idTrigger_Touch::Save</highlight></codeline>
<codeline lineno="1093"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1094"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Touch::Save(<sp/><ref refid="classid_save_game" kindref="compound">idSaveGame</ref><sp/>*savefile<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;WriteClipModel(<sp/>clipModel<sp/>);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1100"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1101"><highlight class="comment">idTrigger_Touch::Restore</highlight></codeline>
<codeline lineno="1102"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1103"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Touch::Restore(<sp/><ref refid="classid_restore_game" kindref="compound">idRestoreGame</ref><sp/>*savefile<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>savefile-&gt;ReadClipModel(<sp/>clipModel<sp/>);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1109"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1110"><highlight class="comment">idTrigger_Touch::TouchEntities</highlight></codeline>
<codeline lineno="1111"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1112"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Touch::TouchEntities(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numClipModels,<sp/>i;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_bounds" kindref="compound">idBounds</ref><sp/>bounds;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_clip_model" kindref="compound">idClipModel</ref><sp/>*cm,<sp/>*clipModelList[<sp/>MAX_GENTITIES<sp/>];</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>clipModel<sp/>==<sp/>NULL<sp/>||<sp/>scriptFunction<sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/>bounds.FromTransformedBounds(<sp/>clipModel-&gt;GetBounds(),<sp/>clipModel-&gt;GetOrigin(),<sp/>clipModel-&gt;GetAxis()<sp/>);</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/>numClipModels<sp/>=<sp/>gameLocal.clip.ClipModelsTouchingBounds(<sp/>bounds,<sp/>-1,<sp/>clipModelList,<sp/>MAX_GENTITIES<sp/>);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numClipModels;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cm<sp/>=<sp/>clipModelList[<sp/>i<sp/>];</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!cm-&gt;IsTraceModel()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*entity<sp/>=<sp/>cm-&gt;GetEntity();</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!entity<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gameLocal.clip.ContentsModel(<sp/>cm-&gt;GetOrigin(),<sp/>cm,<sp/>cm-&gt;GetAxis(),<sp/>-1,</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipModel-&gt;Handle(),<sp/>clipModel-&gt;GetOrigin(),<sp/>clipModel-&gt;GetAxis()<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActivateTargets(<sp/>entity<sp/>);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_thread" kindref="compound">idThread</ref><sp/>*thread<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classid_thread" kindref="compound">idThread</ref>();</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread-&gt;CallFunction(<sp/>entity,<sp/>scriptFunction,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread-&gt;DelayedStart(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1152"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1153"><highlight class="comment">idTrigger_Touch::Think</highlight></codeline>
<codeline lineno="1154"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1155"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Touch::Think(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>thinkFlags<sp/>&amp;<sp/>TH_THINK<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TouchEntities();</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/>idEntity::Think();</highlight></codeline>
<codeline lineno="1161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1164"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1165"><highlight class="comment">idTrigger_Touch::Event_Trigger</highlight></codeline>
<codeline lineno="1166"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1167"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Touch::Event_Trigger(<sp/><ref refid="classid_entity" kindref="compound">idEntity</ref><sp/>*activator<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>thinkFlags<sp/>&amp;<sp/>TH_THINK<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BecomeInactive(<sp/>TH_THINK<sp/>);</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BecomeActive(<sp/>TH_THINK<sp/>);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1177"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1178"><highlight class="comment">idTrigger_Touch::Enable</highlight></codeline>
<codeline lineno="1179"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1180"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Touch::Enable(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>BecomeActive(<sp/>TH_THINK<sp/>);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1186"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1187"><highlight class="comment">idTrigger_Touch::Disable</highlight></codeline>
<codeline lineno="1188"><highlight class="comment">================</highlight></codeline>
<codeline lineno="1189"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>idTrigger_Touch::Disable(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/>BecomeInactive(<sp/>TH_THINK<sp/>);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/game/Trigger.cpp"/>
  </compounddef>
</doxygen>
