<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="gl__logfuncs_8cpp" kind="file">
    <compoundname>gl_logfuncs.cpp</compoundname>
    <includedby refid="win__qgl_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp</includedby>
      <sectiondef kind="func">
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aaf8739cf9959120660312be230bb2fca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logAccum</definition>
        <argsstring>(GLenum op, GLfloat value)</argsstring>
        <name>logAccum</name>
        <param>
          <type>GLenum</type>
          <declname>op</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="29" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a2ba9baa8424e3f7f713f6d4d92d9ec00" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logAlphaFunc</definition>
        <argsstring>(GLenum func, GLclampf ref)</argsstring>
        <name>logAlphaFunc</name>
        <param>
          <type>GLenum</type>
          <declname>func</declname>
        </param>
        <param>
          <type>GLclampf</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="34" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1acbcf901dac05cd949efbb0f16e8c8945" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLboolean APIENTRY</type>
        <definition>static GLboolean APIENTRY logAreTexturesResident</definition>
        <argsstring>(GLsizei n, const GLuint *textures, GLboolean *residences)</argsstring>
        <name>logAreTexturesResident</name>
        <param>
          <type>GLsizei</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const GLuint *</type>
          <declname>textures</declname>
        </param>
        <param>
          <type>GLboolean *</type>
          <declname>residences</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="39" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="39" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a1fbe7eb7587c549c5039b72aa0b2b42e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logArrayElement</definition>
        <argsstring>(GLint i)</argsstring>
        <name>logArrayElement</name>
        <param>
          <type>GLint</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="46" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a45119c786124ab3cf86523190a5423e8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logBegin</definition>
        <argsstring>(GLenum mode)</argsstring>
        <name>logBegin</name>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="51" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a8cdaecd6afa36169a73f3d50b90c690c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logBindTexture</definition>
        <argsstring>(GLenum target, GLuint texture)</argsstring>
        <name>logBindTexture</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLuint</type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="56" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a2ccee97934c7efe119b435b984725f38" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logBitmap</definition>
        <argsstring>(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap)</argsstring>
        <name>logBitmap</name>
        <param>
          <type>GLsizei</type>
          <declname>width</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>height</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>xorig</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>yorig</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>xmove</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>ymove</declname>
        </param>
        <param>
          <type>const GLubyte *</type>
          <declname>bitmap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="61" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="61" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a8e1c170ca85e392c7d7cf1d64766850a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logBlendFunc</definition>
        <argsstring>(GLenum sfactor, GLenum dfactor)</argsstring>
        <name>logBlendFunc</name>
        <param>
          <type>GLenum</type>
          <declname>sfactor</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>dfactor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="67" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a4c6cb95ed06a559a4f5b78e78083451c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logCallList</definition>
        <argsstring>(GLuint list)</argsstring>
        <name>logCallList</name>
        <param>
          <type>GLuint</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="72" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a6a8c59957c4b703a153d3401b99d0539" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logCallLists</definition>
        <argsstring>(GLsizei n, GLenum type, const GLvoid *lists)</argsstring>
        <name>logCallLists</name>
        <param>
          <type>GLsizei</type>
          <declname>n</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const GLvoid *</type>
          <declname>lists</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="77" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="77" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1abd432503e5c28872bc4c2053f9b16224" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logClear</definition>
        <argsstring>(GLbitfield mask)</argsstring>
        <name>logClear</name>
        <param>
          <type>GLbitfield</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="83" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="83" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a20f4077f0c5c6b84837e06bfc3e673e3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logClearAccum</definition>
        <argsstring>(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)</argsstring>
        <name>logClearAccum</name>
        <param>
          <type>GLfloat</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>blue</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="89" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a9e0f38944b413cb4b4181505de483c52" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logClearColor</definition>
        <argsstring>(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)</argsstring>
        <name>logClearColor</name>
        <param>
          <type>GLclampf</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLclampf</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLclampf</type>
          <declname>blue</declname>
        </param>
        <param>
          <type>GLclampf</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="94" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aafff3f243743a1f22da2d1a49c9a454e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logClearDepth</definition>
        <argsstring>(GLclampd depth)</argsstring>
        <name>logClearDepth</name>
        <param>
          <type>GLclampd</type>
          <declname>depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="99" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="99" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1abd2ce3c12ec9daaa411bc995787bfb71" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logClearIndex</definition>
        <argsstring>(GLfloat c)</argsstring>
        <name>logClearIndex</name>
        <param>
          <type>GLfloat</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="105" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a4ec341278c8f7a94b968144e427a83fe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logClearStencil</definition>
        <argsstring>(GLint s)</argsstring>
        <name>logClearStencil</name>
        <param>
          <type>GLint</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="110" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a6107e0307bdd8ca7a6649a450dd7be5b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logClipPlane</definition>
        <argsstring>(GLenum plane, const GLdouble *equation)</argsstring>
        <name>logClipPlane</name>
        <param>
          <type>GLenum</type>
          <declname>plane</declname>
        </param>
        <param>
          <type>const GLdouble *</type>
          <declname>equation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="115" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="115" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a631b613392f3448ae1fdd3da64767a36" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor3b</definition>
        <argsstring>(GLbyte red, GLbyte green, GLbyte blue)</argsstring>
        <name>logColor3b</name>
        <param>
          <type>GLbyte</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLbyte</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLbyte</type>
          <declname>blue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="121" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aa3c393e8889b51ea04cc00ed81ee155f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor3bv</definition>
        <argsstring>(const GLbyte *v)</argsstring>
        <name>logColor3bv</name>
        <param>
          <type>const GLbyte *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="126" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="126" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ac8e11600ac2530c259ca0bff4583fa02" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor3d</definition>
        <argsstring>(GLdouble red, GLdouble green, GLdouble blue)</argsstring>
        <name>logColor3d</name>
        <param>
          <type>GLdouble</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>blue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="132" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ac21a98f6703ea581c9cac8edc983884e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor3dv</definition>
        <argsstring>(const GLdouble *v)</argsstring>
        <name>logColor3dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="137" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="137" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a04a897157c9c5b27c28da114c7d200e5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor3f</definition>
        <argsstring>(GLfloat red, GLfloat green, GLfloat blue)</argsstring>
        <name>logColor3f</name>
        <param>
          <type>GLfloat</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>blue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="143" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a7ce43a768e794eafac994cd632910f22" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor3fv</definition>
        <argsstring>(const GLfloat *v)</argsstring>
        <name>logColor3fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="148" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="148" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aac8aef28b9905b8a276a1d05aef242ff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor3i</definition>
        <argsstring>(GLint red, GLint green, GLint blue)</argsstring>
        <name>logColor3i</name>
        <param>
          <type>GLint</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>blue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="154" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="154" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ada2cd705278f19e8c8e8eeb5730740ac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor3iv</definition>
        <argsstring>(const GLint *v)</argsstring>
        <name>logColor3iv</name>
        <param>
          <type>const GLint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="159" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="159" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a1bbceec1b9f88789af3ff48c3c8b703d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor3s</definition>
        <argsstring>(GLshort red, GLshort green, GLshort blue)</argsstring>
        <name>logColor3s</name>
        <param>
          <type>GLshort</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>blue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="165" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a844937dc9fa9a1c33bb69b4fb45e8fd3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor3sv</definition>
        <argsstring>(const GLshort *v)</argsstring>
        <name>logColor3sv</name>
        <param>
          <type>const GLshort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="170" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="170" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a3133ad0e36ca38d430de2a93f5dd1e21" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor3ub</definition>
        <argsstring>(GLubyte red, GLubyte green, GLubyte blue)</argsstring>
        <name>logColor3ub</name>
        <param>
          <type>GLubyte</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLubyte</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLubyte</type>
          <declname>blue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="176" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a2aa4d4d4d6eeb8327adda509808defcc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor3ubv</definition>
        <argsstring>(const GLubyte *v)</argsstring>
        <name>logColor3ubv</name>
        <param>
          <type>const GLubyte *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="181" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="181" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a425f6b699e96464d34163d37eb12d57f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor3ui</definition>
        <argsstring>(GLuint red, GLuint green, GLuint blue)</argsstring>
        <name>logColor3ui</name>
        <param>
          <type>GLuint</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLuint</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLuint</type>
          <declname>blue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="187" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="187" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ae0cc44f95f47402e3e7ebba776f69b1c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor3uiv</definition>
        <argsstring>(const GLuint *v)</argsstring>
        <name>logColor3uiv</name>
        <param>
          <type>const GLuint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="192" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="192" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ac29eaa7207e6eb0e26bcf53fea8fc060" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor3us</definition>
        <argsstring>(GLushort red, GLushort green, GLushort blue)</argsstring>
        <name>logColor3us</name>
        <param>
          <type>GLushort</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLushort</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLushort</type>
          <declname>blue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="198" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="198" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a0a9a90c8e8f7c3332800b409139c2a19" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor3usv</definition>
        <argsstring>(const GLushort *v)</argsstring>
        <name>logColor3usv</name>
        <param>
          <type>const GLushort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="203" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="203" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aadcd640d6578858eaac031fdb123e273" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor4b</definition>
        <argsstring>(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha)</argsstring>
        <name>logColor4b</name>
        <param>
          <type>GLbyte</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLbyte</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLbyte</type>
          <declname>blue</declname>
        </param>
        <param>
          <type>GLbyte</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="209" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="209" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a7e3b8d7773f75508338f65df1c311415" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor4bv</definition>
        <argsstring>(const GLbyte *v)</argsstring>
        <name>logColor4bv</name>
        <param>
          <type>const GLbyte *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="214" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="214" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1af9d029fb47b5ee8486a347cbb77978d6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor4d</definition>
        <argsstring>(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha)</argsstring>
        <name>logColor4d</name>
        <param>
          <type>GLdouble</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>blue</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="220" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="220" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aae23b7a4a9fc83c676befa45ea61fc4a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor4dv</definition>
        <argsstring>(const GLdouble *v)</argsstring>
        <name>logColor4dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="225" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="225" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a4756f11c21891584408e548fb25fd0d3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor4f</definition>
        <argsstring>(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)</argsstring>
        <name>logColor4f</name>
        <param>
          <type>GLfloat</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>blue</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="231" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="231" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a75a31dcf9fd26ed9a040481a3c9680f4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor4fv</definition>
        <argsstring>(const GLfloat *v)</argsstring>
        <name>logColor4fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="236" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="236" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a3c8418b77528fe8f19c9dd0ff14bf6b6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor4i</definition>
        <argsstring>(GLint red, GLint green, GLint blue, GLint alpha)</argsstring>
        <name>logColor4i</name>
        <param>
          <type>GLint</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>blue</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="242" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="242" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ae5cf658127646b60bfb38553ed2c6494" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor4iv</definition>
        <argsstring>(const GLint *v)</argsstring>
        <name>logColor4iv</name>
        <param>
          <type>const GLint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="247" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="247" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1acd1c0e40106d7d98d703e66f42bf2cdb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor4s</definition>
        <argsstring>(GLshort red, GLshort green, GLshort blue, GLshort alpha)</argsstring>
        <name>logColor4s</name>
        <param>
          <type>GLshort</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>blue</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="253" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="253" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a98ad1df9a18417adb73859baf54db676" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor4sv</definition>
        <argsstring>(const GLshort *v)</argsstring>
        <name>logColor4sv</name>
        <param>
          <type>const GLshort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="258" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="258" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a5c2a15869e60124ff28031bfcc0a5f8c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor4ub</definition>
        <argsstring>(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha)</argsstring>
        <name>logColor4ub</name>
        <param>
          <type>GLubyte</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLubyte</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLubyte</type>
          <declname>blue</declname>
        </param>
        <param>
          <type>GLubyte</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="264" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="264" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a119f21753bb04e804220a6e0c0c42c99" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor4ubv</definition>
        <argsstring>(const GLubyte *v)</argsstring>
        <name>logColor4ubv</name>
        <param>
          <type>const GLubyte *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="269" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="269" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a5e5889b2d361d2899f9b18160e4dc542" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor4ui</definition>
        <argsstring>(GLuint red, GLuint green, GLuint blue, GLuint alpha)</argsstring>
        <name>logColor4ui</name>
        <param>
          <type>GLuint</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLuint</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLuint</type>
          <declname>blue</declname>
        </param>
        <param>
          <type>GLuint</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="275" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="275" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1acb645d8c567d5b58b2dc5fec3d8a5360" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor4uiv</definition>
        <argsstring>(const GLuint *v)</argsstring>
        <name>logColor4uiv</name>
        <param>
          <type>const GLuint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="280" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="280" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a5743010502f51355274ce168bdd3363c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor4us</definition>
        <argsstring>(GLushort red, GLushort green, GLushort blue, GLushort alpha)</argsstring>
        <name>logColor4us</name>
        <param>
          <type>GLushort</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLushort</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLushort</type>
          <declname>blue</declname>
        </param>
        <param>
          <type>GLushort</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="286" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="286" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a7c36955cfe0fa4a29203a195261f3b44" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColor4usv</definition>
        <argsstring>(const GLushort *v)</argsstring>
        <name>logColor4usv</name>
        <param>
          <type>const GLushort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="291" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="291" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a424181bb0d9599e1c09bef503182c2b3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColorMask</definition>
        <argsstring>(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)</argsstring>
        <name>logColorMask</name>
        <param>
          <type>GLboolean</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLboolean</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLboolean</type>
          <declname>blue</declname>
        </param>
        <param>
          <type>GLboolean</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="297" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="297" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a03e1a019c764be99a6cfbcfa1c66152e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColorMaterial</definition>
        <argsstring>(GLenum face, GLenum mode)</argsstring>
        <name>logColorMaterial</name>
        <param>
          <type>GLenum</type>
          <declname>face</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="302" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="302" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a58c6b896266be5e3e068b0f232c6556e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logColorPointer</definition>
        <argsstring>(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)</argsstring>
        <name>logColorPointer</name>
        <param>
          <type>GLint</type>
          <declname>size</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const GLvoid *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="307" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="307" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a9969aaafc12310d90950a77a0e778fd3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logCopyPixels</definition>
        <argsstring>(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type)</argsstring>
        <name>logCopyPixels</name>
        <param>
          <type>GLint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>width</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>height</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="313" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="313" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a0382b839b79ed761157a088f85f84169" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logCopyTexImage1D</definition>
        <argsstring>(GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border)</argsstring>
        <name>logCopyTexImage1D</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>level</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>internalFormat</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>width</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>border</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="318" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="318" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ac69fbc2bd26e29bbadd70a74a0eb3803" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logCopyTexImage2D</definition>
        <argsstring>(GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)</argsstring>
        <name>logCopyTexImage2D</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>level</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>internalFormat</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>width</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>height</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>border</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="323" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="323" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a34109aed9df728257e522fb1db5dbd22" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logCopyTexSubImage1D</definition>
        <argsstring>(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width)</argsstring>
        <name>logCopyTexSubImage1D</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>level</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>xoffset</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="328" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="328" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a2cc3ac050ca3db0e4d85601df3ccde01" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logCopyTexSubImage2D</definition>
        <argsstring>(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)</argsstring>
        <name>logCopyTexSubImage2D</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>level</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>xoffset</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>yoffset</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>width</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="333" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="333" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1af558fa3b70570dc5ef61152c9d8c4695" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logCullFace</definition>
        <argsstring>(GLenum mode)</argsstring>
        <name>logCullFace</name>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="338" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="338" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a53489006ec99eb5d4643860781f14119" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logDeleteLists</definition>
        <argsstring>(GLuint list, GLsizei range)</argsstring>
        <name>logDeleteLists</name>
        <param>
          <type>GLuint</type>
          <declname>list</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="343" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="343" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a25a7494def0f04843de0248c5975760c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logDeleteTextures</definition>
        <argsstring>(GLsizei n, const GLuint *textures)</argsstring>
        <name>logDeleteTextures</name>
        <param>
          <type>GLsizei</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const GLuint *</type>
          <declname>textures</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="348" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="348" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a50cdf63093451fd21e0cae29bc81f2e9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logDepthFunc</definition>
        <argsstring>(GLenum func)</argsstring>
        <name>logDepthFunc</name>
        <param>
          <type>GLenum</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="354" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="354" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a029860f0edb24b40e140509a21f20813" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logDepthMask</definition>
        <argsstring>(GLboolean flag)</argsstring>
        <name>logDepthMask</name>
        <param>
          <type>GLboolean</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="359" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="359" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a9595589b6b18c7b97f987048a8b37227" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logDepthRange</definition>
        <argsstring>(GLclampd zNear, GLclampd zFar)</argsstring>
        <name>logDepthRange</name>
        <param>
          <type>GLclampd</type>
          <declname>zNear</declname>
        </param>
        <param>
          <type>GLclampd</type>
          <declname>zFar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="364" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="364" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a729581a5be93178975b9b32125098220" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logDisable</definition>
        <argsstring>(GLenum cap)</argsstring>
        <name>logDisable</name>
        <param>
          <type>GLenum</type>
          <declname>cap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="371" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="371" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a9a6a9204a3908b9468f06db9a419db17" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logDisableClientState</definition>
        <argsstring>(GLenum array)</argsstring>
        <name>logDisableClientState</name>
        <param>
          <type>GLenum</type>
          <declname>array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="376" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="376" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a50929697854d7f90e425842762ce1bbe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logDrawArrays</definition>
        <argsstring>(GLenum mode, GLint first, GLsizei count)</argsstring>
        <name>logDrawArrays</name>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>first</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="381" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="381" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ae8b55ddd135b6beaa3da18aa7d75bb61" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logDrawBuffer</definition>
        <argsstring>(GLenum mode)</argsstring>
        <name>logDrawBuffer</name>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="386" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="386" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a1a33756cb88085c21eb14ebc0d47cf6c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logDrawElements</definition>
        <argsstring>(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices)</argsstring>
        <name>logDrawElements</name>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>count</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const GLvoid *</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="391" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="391" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ab5e78091f9be85f841dae79d2b4aa180" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logDrawPixels</definition>
        <argsstring>(GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)</argsstring>
        <name>logDrawPixels</name>
        <param>
          <type>GLsizei</type>
          <declname>width</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>height</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>format</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const GLvoid *</type>
          <declname>pixels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="397" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="397" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ad4a7f5f1cf02a8ad68e0c0f91ca55965" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logEdgeFlag</definition>
        <argsstring>(GLboolean flag)</argsstring>
        <name>logEdgeFlag</name>
        <param>
          <type>GLboolean</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="403" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="403" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1af16cc57b9bc0bceda9afc3a157c4f3c4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logEdgeFlagPointer</definition>
        <argsstring>(GLsizei stride, const GLvoid *pointer)</argsstring>
        <name>logEdgeFlagPointer</name>
        <param>
          <type>GLsizei</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const GLvoid *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="408" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="408" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1acd13043b627e859b00e429bcc46a8430" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logEdgeFlagv</definition>
        <argsstring>(const GLboolean *flag)</argsstring>
        <name>logEdgeFlagv</name>
        <param>
          <type>const GLboolean *</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="414" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="414" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1add9f47125534dcb283b7a4cdd41afa00" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logEnable</definition>
        <argsstring>(GLenum cap)</argsstring>
        <name>logEnable</name>
        <param>
          <type>GLenum</type>
          <declname>cap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="420" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="420" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a95a70712772dade53d6d78fa8e6ea73b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logEnableClientState</definition>
        <argsstring>(GLenum array)</argsstring>
        <name>logEnableClientState</name>
        <param>
          <type>GLenum</type>
          <declname>array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="425" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="425" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a6f0e299de715fecf1ef2a42efad6ed94" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logEnd</definition>
        <argsstring>(void)</argsstring>
        <name>logEnd</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="430" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="430" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a12f1e62574b8519876fe032c8387fff2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logEndList</definition>
        <argsstring>(void)</argsstring>
        <name>logEndList</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="435" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="435" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a51bc716190659858100105c3006c3259" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logEvalCoord1d</definition>
        <argsstring>(GLdouble u)</argsstring>
        <name>logEvalCoord1d</name>
        <param>
          <type>GLdouble</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="440" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="440" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a03525d05a834ef919fa5092dcfcc498d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logEvalCoord1dv</definition>
        <argsstring>(const GLdouble *u)</argsstring>
        <name>logEvalCoord1dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="445" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="445" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aebcd814cf1dcbb7d10d839c0f114dea8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logEvalCoord1f</definition>
        <argsstring>(GLfloat u)</argsstring>
        <name>logEvalCoord1f</name>
        <param>
          <type>GLfloat</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="451" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="451" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a9b18f2685fa9b5259b1c4f1a2d6aee95" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logEvalCoord1fv</definition>
        <argsstring>(const GLfloat *u)</argsstring>
        <name>logEvalCoord1fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="456" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="456" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a3283dfd1e560306d5877edb9be43e109" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logEvalCoord2d</definition>
        <argsstring>(GLdouble u, GLdouble v)</argsstring>
        <name>logEvalCoord2d</name>
        <param>
          <type>GLdouble</type>
          <declname>u</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="462" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="462" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a434db220ba34e648f9042e6fca8f9930" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logEvalCoord2dv</definition>
        <argsstring>(const GLdouble *u)</argsstring>
        <name>logEvalCoord2dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="467" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="467" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ab6d91a47a9f1af814de293192ebcfdd7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logEvalCoord2f</definition>
        <argsstring>(GLfloat u, GLfloat v)</argsstring>
        <name>logEvalCoord2f</name>
        <param>
          <type>GLfloat</type>
          <declname>u</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="473" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="473" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aaf1fbd6a0922ed6e111efe63e7fa4246" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logEvalCoord2fv</definition>
        <argsstring>(const GLfloat *u)</argsstring>
        <name>logEvalCoord2fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="478" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="478" bodyend="482"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a379bf05ceaa0de9d06287b40d07b5b64" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logEvalMesh1</definition>
        <argsstring>(GLenum mode, GLint i1, GLint i2)</argsstring>
        <name>logEvalMesh1</name>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>i2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="484" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="484" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ae8148b92fb7bfc53558ed523ba4a53e6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logEvalMesh2</definition>
        <argsstring>(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2)</argsstring>
        <name>logEvalMesh2</name>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>j1</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>j2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="489" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="489" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ac1222e185dd881f5631cba8768e4738c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logEvalPoint1</definition>
        <argsstring>(GLint i)</argsstring>
        <name>logEvalPoint1</name>
        <param>
          <type>GLint</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="494" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="494" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aebb163be3fcf6c0d76f6e5ee41e7fe49" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logEvalPoint2</definition>
        <argsstring>(GLint i, GLint j)</argsstring>
        <name>logEvalPoint2</name>
        <param>
          <type>GLint</type>
          <declname>i</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="499" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="499" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a7fd6bda7f08038dba8f2602e15a3f9ea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logFeedbackBuffer</definition>
        <argsstring>(GLsizei size, GLenum type, GLfloat *buffer)</argsstring>
        <name>logFeedbackBuffer</name>
        <param>
          <type>GLsizei</type>
          <declname>size</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>GLfloat *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="504" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="504" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a2eeef932ab418822b5bd2e5965967e00" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logFinish</definition>
        <argsstring>(void)</argsstring>
        <name>logFinish</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="510" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="510" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aa8de8376f0787c61edd06123a13dba9f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logFlush</definition>
        <argsstring>(void)</argsstring>
        <name>logFlush</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="515" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="515" bodyend="518"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a765509b844fa26561e15f1e2539a9810" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logFogf</definition>
        <argsstring>(GLenum pname, GLfloat param)</argsstring>
        <name>logFogf</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="520" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="520" bodyend="523"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1abd1999ed939c2c65252e331f1c2803f7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logFogfv</definition>
        <argsstring>(GLenum pname, const GLfloat *params)</argsstring>
        <name>logFogfv</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLfloat *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="525" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="525" bodyend="529"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aedb14639070d078258780ea5ce598a66" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logFogi</definition>
        <argsstring>(GLenum pname, GLint param)</argsstring>
        <name>logFogi</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="531" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="531" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1adc71c3e2668f33d1b2a35fb2e2b1b37a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logFogiv</definition>
        <argsstring>(GLenum pname, const GLint *params)</argsstring>
        <name>logFogiv</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLint *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="536" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="536" bodyend="540"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1abada55be8131885f08662847df761048" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logFrontFace</definition>
        <argsstring>(GLenum mode)</argsstring>
        <name>logFrontFace</name>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="542" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="542" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a859e8036bd4f9595fea33df490fcb190" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logFrustum</definition>
        <argsstring>(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)</argsstring>
        <name>logFrustum</name>
        <param>
          <type>GLdouble</type>
          <declname>left</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>right</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>top</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>zNear</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>zFar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="547" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="547" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a8c8d52d51b74638753dc8ac855c4ce94" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLuint APIENTRY</type>
        <definition>static GLuint APIENTRY logGenLists</definition>
        <argsstring>(GLsizei range)</argsstring>
        <name>logGenLists</name>
        <param>
          <type>GLsizei</type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="552" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="552" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aae96b6360fed76d3ad6501dc1eb3cc1b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logGenTextures</definition>
        <argsstring>(GLsizei n, GLuint *textures)</argsstring>
        <name>logGenTextures</name>
        <param>
          <type>GLsizei</type>
          <declname>n</declname>
        </param>
        <param>
          <type>GLuint *</type>
          <declname>textures</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="557" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="557" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ae2bc0bbb5fbf04423807fe581a30b573" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logGetBooleanv</definition>
        <argsstring>(GLenum pname, GLboolean *params)</argsstring>
        <name>logGetBooleanv</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLboolean *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="563" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="563" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a99948597b30f2fab3009d64c55cb3a86" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logGetClipPlane</definition>
        <argsstring>(GLenum plane, GLdouble *equation)</argsstring>
        <name>logGetClipPlane</name>
        <param>
          <type>GLenum</type>
          <declname>plane</declname>
        </param>
        <param>
          <type>GLdouble *</type>
          <declname>equation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="569" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="569" bodyend="573"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a7b815a3e31d50bc5683c2fdb2fd6871d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logGetDoublev</definition>
        <argsstring>(GLenum pname, GLdouble *params)</argsstring>
        <name>logGetDoublev</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLdouble *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="575" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="575" bodyend="579"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ae1bc5d1f2e0ddbcabe560f1748c53686" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLenum APIENTRY</type>
        <definition>static GLenum APIENTRY logGetError</definition>
        <argsstring>(void)</argsstring>
        <name>logGetError</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="581" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="581" bodyend="584"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a967e1654731fc8ca1fae77411bcc0fb5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logGetFloatv</definition>
        <argsstring>(GLenum pname, GLfloat *params)</argsstring>
        <name>logGetFloatv</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="586" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="586" bodyend="590"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a3967b3f3fc443aaed6fe357c2aeb64e0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logGetIntegerv</definition>
        <argsstring>(GLenum pname, GLint *params)</argsstring>
        <name>logGetIntegerv</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="592" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="592" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a6ed63558d3faadbe6e729638b8438975" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logGetLightfv</definition>
        <argsstring>(GLenum light, GLenum pname, GLfloat *params)</argsstring>
        <name>logGetLightfv</name>
        <param>
          <type>GLenum</type>
          <declname>light</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="598" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="598" bodyend="602"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a7fa7340b0efb39f762d426e99bb03e65" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logGetLightiv</definition>
        <argsstring>(GLenum light, GLenum pname, GLint *params)</argsstring>
        <name>logGetLightiv</name>
        <param>
          <type>GLenum</type>
          <declname>light</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="604" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="604" bodyend="608"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aa8a6db8dad9dc30391513db280788302" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logGetMapdv</definition>
        <argsstring>(GLenum target, GLenum query, GLdouble *v)</argsstring>
        <name>logGetMapdv</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>query</declname>
        </param>
        <param>
          <type>GLdouble *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="610" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="610" bodyend="614"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a38d77aaccf1d9719a96a420820fc9553" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logGetMapfv</definition>
        <argsstring>(GLenum target, GLenum query, GLfloat *v)</argsstring>
        <name>logGetMapfv</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>query</declname>
        </param>
        <param>
          <type>GLfloat *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="616" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="616" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a7dd94dc107a45348c8c3d2da547855ae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logGetMapiv</definition>
        <argsstring>(GLenum target, GLenum query, GLint *v)</argsstring>
        <name>logGetMapiv</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>query</declname>
        </param>
        <param>
          <type>GLint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="622" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="622" bodyend="626"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a5c7d9ccc79e74e23448e86a8c69d0380" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logGetMaterialfv</definition>
        <argsstring>(GLenum face, GLenum pname, GLfloat *params)</argsstring>
        <name>logGetMaterialfv</name>
        <param>
          <type>GLenum</type>
          <declname>face</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="628" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="628" bodyend="632"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a88668a06f084802aed496e564a9d514e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logGetMaterialiv</definition>
        <argsstring>(GLenum face, GLenum pname, GLint *params)</argsstring>
        <name>logGetMaterialiv</name>
        <param>
          <type>GLenum</type>
          <declname>face</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="634" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="634" bodyend="638"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aeadd1458a5970a7515d815a9c964c362" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logGetPixelMapfv</definition>
        <argsstring>(GLenum map, GLfloat *values)</argsstring>
        <name>logGetPixelMapfv</name>
        <param>
          <type>GLenum</type>
          <declname>map</declname>
        </param>
        <param>
          <type>GLfloat *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="640" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="640" bodyend="644"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a10fafb381eae475fdd0337df2531a1a7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logGetPixelMapuiv</definition>
        <argsstring>(GLenum map, GLuint *values)</argsstring>
        <name>logGetPixelMapuiv</name>
        <param>
          <type>GLenum</type>
          <declname>map</declname>
        </param>
        <param>
          <type>GLuint *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="646" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="646" bodyend="650"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a567f4ddd4813e60720ef0f139f716b39" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logGetPixelMapusv</definition>
        <argsstring>(GLenum map, GLushort *values)</argsstring>
        <name>logGetPixelMapusv</name>
        <param>
          <type>GLenum</type>
          <declname>map</declname>
        </param>
        <param>
          <type>GLushort *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="652" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="652" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a251345490639068d9bc5f5910677f483" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logGetPointerv</definition>
        <argsstring>(GLenum pname, GLvoid **params)</argsstring>
        <name>logGetPointerv</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLvoid **</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="658" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="658" bodyend="662"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ae0532e457982ba9eb9cbcb1d4f47d6f8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logGetPolygonStipple</definition>
        <argsstring>(GLubyte *mask)</argsstring>
        <name>logGetPolygonStipple</name>
        <param>
          <type>GLubyte *</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="664" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="664" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a68ea333509f57c1d67e20042d987bd0b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const GLubyte *APIENTRY</type>
        <definition>static const GLubyte* APIENTRY logGetString</definition>
        <argsstring>(GLenum name)</argsstring>
        <name>logGetString</name>
        <param>
          <type>GLenum</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="670" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="670" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ac76fc0742c897c6cdf3cba461d9db0e1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logGetTexEnvfv</definition>
        <argsstring>(GLenum target, GLenum pname, GLfloat *params)</argsstring>
        <name>logGetTexEnvfv</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="675" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="675" bodyend="679"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a77bb6890376760d5ee3f171f29d9e59a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logGetTexEnviv</definition>
        <argsstring>(GLenum target, GLenum pname, GLint *params)</argsstring>
        <name>logGetTexEnviv</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="681" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="681" bodyend="685"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aec4818530734bc2fdece27bde6b50de7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logGetTexGendv</definition>
        <argsstring>(GLenum coord, GLenum pname, GLdouble *params)</argsstring>
        <name>logGetTexGendv</name>
        <param>
          <type>GLenum</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLdouble *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="687" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="687" bodyend="691"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1adfb39c9310d5bfc04a53fbd2b5819547" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logGetTexGenfv</definition>
        <argsstring>(GLenum coord, GLenum pname, GLfloat *params)</argsstring>
        <name>logGetTexGenfv</name>
        <param>
          <type>GLenum</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="693" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="693" bodyend="697"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a8e36b3f1c0ee5ad772bc2b5f2f5c86bc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logGetTexGeniv</definition>
        <argsstring>(GLenum coord, GLenum pname, GLint *params)</argsstring>
        <name>logGetTexGeniv</name>
        <param>
          <type>GLenum</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="699" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="699" bodyend="703"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a64088885fd9cc4b457e447944f5f7d70" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logGetTexImage</definition>
        <argsstring>(GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels)</argsstring>
        <name>logGetTexImage</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>level</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>format</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>GLvoid *</type>
          <declname>pixels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="705" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="705" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a60aa5014c41d43beeadb85f559c9a971" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logGetTexLevelParameterfv</definition>
        <argsstring>(GLenum target, GLint level, GLenum pname, GLfloat *params)</argsstring>
        <name>logGetTexLevelParameterfv</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>level</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="711" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="711" bodyend="715"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ad7d81a03b05d20fb3a6cbae0ad25da8f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logGetTexLevelParameteriv</definition>
        <argsstring>(GLenum target, GLint level, GLenum pname, GLint *params)</argsstring>
        <name>logGetTexLevelParameteriv</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>level</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="717" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="717" bodyend="721"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ae35528f23f5ec7e574fbf145c243f3c2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logGetTexParameterfv</definition>
        <argsstring>(GLenum target, GLenum pname, GLfloat *params)</argsstring>
        <name>logGetTexParameterfv</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="723" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="723" bodyend="727"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ac56c8385fca20ac4d1b394f115303a23" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logGetTexParameteriv</definition>
        <argsstring>(GLenum target, GLenum pname, GLint *params)</argsstring>
        <name>logGetTexParameteriv</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="729" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="729" bodyend="733"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ae5512f4fe885e7e71df1e3b1abc6e6ad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logHint</definition>
        <argsstring>(GLenum target, GLenum mode)</argsstring>
        <name>logHint</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="735" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="735" bodyend="738"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a79c54cff5f67c9f0b0fb66fabc87e89a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logIndexMask</definition>
        <argsstring>(GLuint mask)</argsstring>
        <name>logIndexMask</name>
        <param>
          <type>GLuint</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="740" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="740" bodyend="743"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a448189a54409149f0ee7123155be5eaa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logIndexPointer</definition>
        <argsstring>(GLenum type, GLsizei stride, const GLvoid *pointer)</argsstring>
        <name>logIndexPointer</name>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const GLvoid *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="745" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="745" bodyend="749"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a368c81d2151853c1d01ff180e69b3143" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logIndexd</definition>
        <argsstring>(GLdouble c)</argsstring>
        <name>logIndexd</name>
        <param>
          <type>GLdouble</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="751" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="751" bodyend="754"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a81944e45dc77dd57d1777e636f0f92ce" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logIndexdv</definition>
        <argsstring>(const GLdouble *c)</argsstring>
        <name>logIndexdv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="756" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="756" bodyend="760"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a3f366acc44d0896193fa27208045d553" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logIndexf</definition>
        <argsstring>(GLfloat c)</argsstring>
        <name>logIndexf</name>
        <param>
          <type>GLfloat</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="762" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="762" bodyend="765"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aeb5f6235a537b9eee60911c3dcb4b166" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logIndexfv</definition>
        <argsstring>(const GLfloat *c)</argsstring>
        <name>logIndexfv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="767" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="767" bodyend="771"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aeb41d60802188437f6c1c3394810dd62" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logIndexi</definition>
        <argsstring>(GLint c)</argsstring>
        <name>logIndexi</name>
        <param>
          <type>GLint</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="773" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="773" bodyend="776"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aa526956dc0826fa13be9b610e5a51b69" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logIndexiv</definition>
        <argsstring>(const GLint *c)</argsstring>
        <name>logIndexiv</name>
        <param>
          <type>const GLint *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="778" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="778" bodyend="782"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aa2090e21f868ad31335ace91ee25ebaf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logIndexs</definition>
        <argsstring>(GLshort c)</argsstring>
        <name>logIndexs</name>
        <param>
          <type>GLshort</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="784" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="784" bodyend="787"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1abdbb7412f1a5213186dbe056b2fdb710" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logIndexsv</definition>
        <argsstring>(const GLshort *c)</argsstring>
        <name>logIndexsv</name>
        <param>
          <type>const GLshort *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="789" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="789" bodyend="793"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aaf4c12b28c77d0f491b574622144e78f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logIndexub</definition>
        <argsstring>(GLubyte c)</argsstring>
        <name>logIndexub</name>
        <param>
          <type>GLubyte</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="795" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="795" bodyend="798"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a4f0db234a0c5ef90305e9709587eedab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logIndexubv</definition>
        <argsstring>(const GLubyte *c)</argsstring>
        <name>logIndexubv</name>
        <param>
          <type>const GLubyte *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="800" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="800" bodyend="804"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a061f5ebb19a69f7d4aada06e84df703d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logInitNames</definition>
        <argsstring>(void)</argsstring>
        <name>logInitNames</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="806" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="806" bodyend="809"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1acb2db125d5adddcc175be77dac050d93" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logInterleavedArrays</definition>
        <argsstring>(GLenum format, GLsizei stride, const GLvoid *pointer)</argsstring>
        <name>logInterleavedArrays</name>
        <param>
          <type>GLenum</type>
          <declname>format</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const GLvoid *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="811" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="811" bodyend="815"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a172bc72b867b36dc055d55f1c9de3feb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLboolean APIENTRY</type>
        <definition>static GLboolean APIENTRY logIsEnabled</definition>
        <argsstring>(GLenum cap)</argsstring>
        <name>logIsEnabled</name>
        <param>
          <type>GLenum</type>
          <declname>cap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="817" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="817" bodyend="820"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a20b78e4ab2c05e796741db406de551b4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLboolean APIENTRY</type>
        <definition>static GLboolean APIENTRY logIsList</definition>
        <argsstring>(GLuint list)</argsstring>
        <name>logIsList</name>
        <param>
          <type>GLuint</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="822" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="822" bodyend="825"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a997796917387ff024fe2c4ae20437c39" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLboolean APIENTRY</type>
        <definition>static GLboolean APIENTRY logIsTexture</definition>
        <argsstring>(GLuint texture)</argsstring>
        <name>logIsTexture</name>
        <param>
          <type>GLuint</type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="827" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="827" bodyend="830"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aeb6f08809b4de556e53c7a7a09b75779" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logLightModelf</definition>
        <argsstring>(GLenum pname, GLfloat param)</argsstring>
        <name>logLightModelf</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="832" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="832" bodyend="835"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ac5419c4e6711da59a8d9003389647934" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logLightModelfv</definition>
        <argsstring>(GLenum pname, const GLfloat *params)</argsstring>
        <name>logLightModelfv</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLfloat *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="837" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="837" bodyend="841"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a8aed2716cb44298a11bc75f3578aa222" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logLightModeli</definition>
        <argsstring>(GLenum pname, GLint param)</argsstring>
        <name>logLightModeli</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="843" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="843" bodyend="846"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a2657e5d9965a7b9731e2a1b0e4bf1985" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logLightModeliv</definition>
        <argsstring>(GLenum pname, const GLint *params)</argsstring>
        <name>logLightModeliv</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLint *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="848" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="848" bodyend="852"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aa80fa7a45416d7905be4f71343636ef2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logLightf</definition>
        <argsstring>(GLenum light, GLenum pname, GLfloat param)</argsstring>
        <name>logLightf</name>
        <param>
          <type>GLenum</type>
          <declname>light</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="854" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="854" bodyend="857"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a6c480c02c427f1189ea745ab1f2612c1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logLightfv</definition>
        <argsstring>(GLenum light, GLenum pname, const GLfloat *params)</argsstring>
        <name>logLightfv</name>
        <param>
          <type>GLenum</type>
          <declname>light</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLfloat *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="859" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="859" bodyend="863"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aa433eec39a937796fa393b03323be8e2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logLighti</definition>
        <argsstring>(GLenum light, GLenum pname, GLint param)</argsstring>
        <name>logLighti</name>
        <param>
          <type>GLenum</type>
          <declname>light</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="865" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="865" bodyend="868"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ad422cbdede5a4065459b7533c2db7749" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logLightiv</definition>
        <argsstring>(GLenum light, GLenum pname, const GLint *params)</argsstring>
        <name>logLightiv</name>
        <param>
          <type>GLenum</type>
          <declname>light</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLint *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="870" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="870" bodyend="874"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a5675926afa75611f85edc522c6942d30" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logLineStipple</definition>
        <argsstring>(GLint factor, GLushort pattern)</argsstring>
        <name>logLineStipple</name>
        <param>
          <type>GLint</type>
          <declname>factor</declname>
        </param>
        <param>
          <type>GLushort</type>
          <declname>pattern</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="876" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="876" bodyend="879"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a5c3e0cb25dc6f7fc44e649ddb1477791" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logLineWidth</definition>
        <argsstring>(GLfloat width)</argsstring>
        <name>logLineWidth</name>
        <param>
          <type>GLfloat</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="881" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="881" bodyend="884"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ac176cf4fff6d4feef4c45996b375f7a5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logListBase</definition>
        <argsstring>(GLuint base)</argsstring>
        <name>logListBase</name>
        <param>
          <type>GLuint</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="886" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="886" bodyend="889"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ad96e858287e0b1b40447f9e9e5c6ddbb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logLoadIdentity</definition>
        <argsstring>(void)</argsstring>
        <name>logLoadIdentity</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="891" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="891" bodyend="894"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a133df22930b5ab2b0f7088b4ecc49896" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logLoadMatrixd</definition>
        <argsstring>(const GLdouble *m)</argsstring>
        <name>logLoadMatrixd</name>
        <param>
          <type>const GLdouble *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="896" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="896" bodyend="900"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a65a7bffc618886af7b061c5cca41d177" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logLoadMatrixf</definition>
        <argsstring>(const GLfloat *m)</argsstring>
        <name>logLoadMatrixf</name>
        <param>
          <type>const GLfloat *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="902" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="902" bodyend="906"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1afac3673f445d981347aaceb8a942a1b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logLoadName</definition>
        <argsstring>(GLuint name)</argsstring>
        <name>logLoadName</name>
        <param>
          <type>GLuint</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="908" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="908" bodyend="911"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a85cfc88f5e7a69ad8f4ab37d4119e6e4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logLogicOp</definition>
        <argsstring>(GLenum opcode)</argsstring>
        <name>logLogicOp</name>
        <param>
          <type>GLenum</type>
          <declname>opcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="913" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="913" bodyend="916"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a6e6ac7d6938a13b5e54a343e9c544882" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logMap1d</definition>
        <argsstring>(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points)</argsstring>
        <name>logMap1d</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>u1</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>u2</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>order</declname>
        </param>
        <param>
          <type>const GLdouble *</type>
          <declname>points</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="918" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="918" bodyend="922"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ad70c1a171a6f56192ea068d00c7e041c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logMap1f</definition>
        <argsstring>(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points)</argsstring>
        <name>logMap1f</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>u1</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>u2</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>order</declname>
        </param>
        <param>
          <type>const GLfloat *</type>
          <declname>points</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="924" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="924" bodyend="928"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aed006911a0ebbd6c23d28e1e2b53473b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logMap2d</definition>
        <argsstring>(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points)</argsstring>
        <name>logMap2d</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>u1</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>u2</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>ustride</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>uorder</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>v2</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>vstride</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>vorder</declname>
        </param>
        <param>
          <type>const GLdouble *</type>
          <declname>points</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="930" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="930" bodyend="934"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a10d09007bfa353a065d7cfb21cbef3c8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logMap2f</definition>
        <argsstring>(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points)</argsstring>
        <name>logMap2f</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>u1</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>u2</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>ustride</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>uorder</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>v2</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>vstride</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>vorder</declname>
        </param>
        <param>
          <type>const GLfloat *</type>
          <declname>points</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="936" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="936" bodyend="940"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a6cbc0d986b9d663a2a579ce192ada1ec" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logMapGrid1d</definition>
        <argsstring>(GLint un, GLdouble u1, GLdouble u2)</argsstring>
        <name>logMapGrid1d</name>
        <param>
          <type>GLint</type>
          <declname>un</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>u1</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>u2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="942" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="942" bodyend="945"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a8aee8fd917f421f0b1db4026d77bb647" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logMapGrid1f</definition>
        <argsstring>(GLint un, GLfloat u1, GLfloat u2)</argsstring>
        <name>logMapGrid1f</name>
        <param>
          <type>GLint</type>
          <declname>un</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>u1</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>u2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="947" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="947" bodyend="950"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1add883114b29efb8a5a9dbecbbd614d07" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logMapGrid2d</definition>
        <argsstring>(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2)</argsstring>
        <name>logMapGrid2d</name>
        <param>
          <type>GLint</type>
          <declname>un</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>u1</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>u2</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>vn</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="952" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="952" bodyend="955"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ac6486d4fbc43406043827b8643f72a5e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logMapGrid2f</definition>
        <argsstring>(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2)</argsstring>
        <name>logMapGrid2f</name>
        <param>
          <type>GLint</type>
          <declname>un</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>u1</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>u2</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>vn</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="957" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="957" bodyend="960"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a18733389570e6fb1f521e78c098fa5b7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logMaterialf</definition>
        <argsstring>(GLenum face, GLenum pname, GLfloat param)</argsstring>
        <name>logMaterialf</name>
        <param>
          <type>GLenum</type>
          <declname>face</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="962" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="962" bodyend="965"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1afcd176123b87e04a33ac49fc4fd9f1bf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logMaterialfv</definition>
        <argsstring>(GLenum face, GLenum pname, const GLfloat *params)</argsstring>
        <name>logMaterialfv</name>
        <param>
          <type>GLenum</type>
          <declname>face</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLfloat *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="967" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="967" bodyend="971"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a900cabf486213c8aea62613f4f32f3bc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logMateriali</definition>
        <argsstring>(GLenum face, GLenum pname, GLint param)</argsstring>
        <name>logMateriali</name>
        <param>
          <type>GLenum</type>
          <declname>face</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="973" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="973" bodyend="976"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a7f35090b96d39f1c1e616774617ba378" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logMaterialiv</definition>
        <argsstring>(GLenum face, GLenum pname, const GLint *params)</argsstring>
        <name>logMaterialiv</name>
        <param>
          <type>GLenum</type>
          <declname>face</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLint *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="978" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="978" bodyend="982"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ae389720220fc84380752f97b48587990" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logMatrixMode</definition>
        <argsstring>(GLenum mode)</argsstring>
        <name>logMatrixMode</name>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="984" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="984" bodyend="987"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a58bab4c5e54716f62b474da59058dd38" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logMultMatrixd</definition>
        <argsstring>(const GLdouble *m)</argsstring>
        <name>logMultMatrixd</name>
        <param>
          <type>const GLdouble *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="989" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="989" bodyend="993"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ae455fcc82b1344baf60ca7159b9a0473" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logMultMatrixf</definition>
        <argsstring>(const GLfloat *m)</argsstring>
        <name>logMultMatrixf</name>
        <param>
          <type>const GLfloat *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="995" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="995" bodyend="999"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ab1e4661199900e37c5258040edb4bf9a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logNewList</definition>
        <argsstring>(GLuint list, GLenum mode)</argsstring>
        <name>logNewList</name>
        <param>
          <type>GLuint</type>
          <declname>list</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1001" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1001" bodyend="1004"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a1ca6535a53996201a084103d269fdac6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logNormal3b</definition>
        <argsstring>(GLbyte nx, GLbyte ny, GLbyte nz)</argsstring>
        <name>logNormal3b</name>
        <param>
          <type>GLbyte</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>GLbyte</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>GLbyte</type>
          <declname>nz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1006" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1006" bodyend="1009"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a423ac1f141c0cd3d81b9f12a5116234b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logNormal3bv</definition>
        <argsstring>(const GLbyte *v)</argsstring>
        <name>logNormal3bv</name>
        <param>
          <type>const GLbyte *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1011" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1011" bodyend="1015"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a08238644fd9f9d3934c109bb1caf22da" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logNormal3d</definition>
        <argsstring>(GLdouble nx, GLdouble ny, GLdouble nz)</argsstring>
        <name>logNormal3d</name>
        <param>
          <type>GLdouble</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>nz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1017" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1017" bodyend="1020"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ab3ae049b3c2583ece4199f53a916ba5d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logNormal3dv</definition>
        <argsstring>(const GLdouble *v)</argsstring>
        <name>logNormal3dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1022" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1022" bodyend="1026"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aee7c0f647b0b8e10957bb535520c1967" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logNormal3f</definition>
        <argsstring>(GLfloat nx, GLfloat ny, GLfloat nz)</argsstring>
        <name>logNormal3f</name>
        <param>
          <type>GLfloat</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>nz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1028" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1028" bodyend="1031"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1adb9ce1491f07deba2ae8f3d4752c7e89" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logNormal3fv</definition>
        <argsstring>(const GLfloat *v)</argsstring>
        <name>logNormal3fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1033" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1033" bodyend="1037"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aaacb1a1c83e54ec57466659176566c7f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logNormal3i</definition>
        <argsstring>(GLint nx, GLint ny, GLint nz)</argsstring>
        <name>logNormal3i</name>
        <param>
          <type>GLint</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>nz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1039" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1039" bodyend="1042"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ac2afba8860b3468b70cb2092349e92db" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logNormal3iv</definition>
        <argsstring>(const GLint *v)</argsstring>
        <name>logNormal3iv</name>
        <param>
          <type>const GLint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1044" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1044" bodyend="1048"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ae22071b8a4eab89cd37683d45da5301f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logNormal3s</definition>
        <argsstring>(GLshort nx, GLshort ny, GLshort nz)</argsstring>
        <name>logNormal3s</name>
        <param>
          <type>GLshort</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>nz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1050" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1050" bodyend="1053"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1acfc54dcb3247686759877eed82c5bb5b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logNormal3sv</definition>
        <argsstring>(const GLshort *v)</argsstring>
        <name>logNormal3sv</name>
        <param>
          <type>const GLshort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1055" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1055" bodyend="1059"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1afb4a68a9fda7b9be32a91bf3ae7dadf5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logNormalPointer</definition>
        <argsstring>(GLenum type, GLsizei stride, const GLvoid *pointer)</argsstring>
        <name>logNormalPointer</name>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const GLvoid *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1061" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1061" bodyend="1065"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a434d77e42bd83734051d7ca340446ffd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logOrtho</definition>
        <argsstring>(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)</argsstring>
        <name>logOrtho</name>
        <param>
          <type>GLdouble</type>
          <declname>left</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>right</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>top</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>zNear</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>zFar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1067" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1067" bodyend="1070"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a8c297012f1e9721f74e87ac79fcfc9b3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logPassThrough</definition>
        <argsstring>(GLfloat token)</argsstring>
        <name>logPassThrough</name>
        <param>
          <type>GLfloat</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1072" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1072" bodyend="1075"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a800b728ddb176d33a9cd00577914feca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logPixelMapfv</definition>
        <argsstring>(GLenum map, GLsizei mapsize, const GLfloat *values)</argsstring>
        <name>logPixelMapfv</name>
        <param>
          <type>GLenum</type>
          <declname>map</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>mapsize</declname>
        </param>
        <param>
          <type>const GLfloat *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1077" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1077" bodyend="1081"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aa083929ddba40309d3f7441cfd94fe11" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logPixelMapuiv</definition>
        <argsstring>(GLenum map, GLsizei mapsize, const GLuint *values)</argsstring>
        <name>logPixelMapuiv</name>
        <param>
          <type>GLenum</type>
          <declname>map</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>mapsize</declname>
        </param>
        <param>
          <type>const GLuint *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1083" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1083" bodyend="1087"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a26e32f86d2c320a1e293a6b429cee2a9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logPixelMapusv</definition>
        <argsstring>(GLenum map, GLsizei mapsize, const GLushort *values)</argsstring>
        <name>logPixelMapusv</name>
        <param>
          <type>GLenum</type>
          <declname>map</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>mapsize</declname>
        </param>
        <param>
          <type>const GLushort *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1089" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1089" bodyend="1093"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a5207671c74e78b1858016eef68cbe91f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logPixelStoref</definition>
        <argsstring>(GLenum pname, GLfloat param)</argsstring>
        <name>logPixelStoref</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1095" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1095" bodyend="1098"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aa5b52f4d04492467abaf5201b2722e8a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logPixelStorei</definition>
        <argsstring>(GLenum pname, GLint param)</argsstring>
        <name>logPixelStorei</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1100" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1100" bodyend="1103"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ac87c8bf366980d76997b53006398a45a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logPixelTransferf</definition>
        <argsstring>(GLenum pname, GLfloat param)</argsstring>
        <name>logPixelTransferf</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1105" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1105" bodyend="1108"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ac1905e25e399c4b9c5ec3bd05456aa91" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logPixelTransferi</definition>
        <argsstring>(GLenum pname, GLint param)</argsstring>
        <name>logPixelTransferi</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1110" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1110" bodyend="1113"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a36558fb7e7258def6a769cd232ba1227" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logPixelZoom</definition>
        <argsstring>(GLfloat xfactor, GLfloat yfactor)</argsstring>
        <name>logPixelZoom</name>
        <param>
          <type>GLfloat</type>
          <declname>xfactor</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>yfactor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1115" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1115" bodyend="1118"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1afd2be5bcd40bb163759292b3535e2dc7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logPointSize</definition>
        <argsstring>(GLfloat size)</argsstring>
        <name>logPointSize</name>
        <param>
          <type>GLfloat</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1120" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1120" bodyend="1123"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a19c05489a195d07f767163be345798a0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logPolygonMode</definition>
        <argsstring>(GLenum face, GLenum mode)</argsstring>
        <name>logPolygonMode</name>
        <param>
          <type>GLenum</type>
          <declname>face</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1125" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1125" bodyend="1128"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aa4801578fe9832ad205ed17f0ab00714" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logPolygonOffset</definition>
        <argsstring>(GLfloat factor, GLfloat units)</argsstring>
        <name>logPolygonOffset</name>
        <param>
          <type>GLfloat</type>
          <declname>factor</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>units</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1130" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1130" bodyend="1133"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a6f7b2c5b196d640a9a8398a80b3c55e3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logPolygonStipple</definition>
        <argsstring>(const GLubyte *mask)</argsstring>
        <name>logPolygonStipple</name>
        <param>
          <type>const GLubyte *</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1135" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1135" bodyend="1139"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a8383a000302cfd84421f3058fbd73131" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logPopAttrib</definition>
        <argsstring>(void)</argsstring>
        <name>logPopAttrib</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1141" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1141" bodyend="1144"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a42daee3d1ddf9c78846a2b1e7caef733" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logPopClientAttrib</definition>
        <argsstring>(void)</argsstring>
        <name>logPopClientAttrib</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1146" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1146" bodyend="1149"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1adb84beb254ba4937788406f9c3c01222" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logPopMatrix</definition>
        <argsstring>(void)</argsstring>
        <name>logPopMatrix</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1151" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1151" bodyend="1154"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a393fbfab23b186c9a16fc42bf974b41b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logPopName</definition>
        <argsstring>(void)</argsstring>
        <name>logPopName</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1156" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1156" bodyend="1159"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a0796342df213d35c3f49befef9f17be6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logPrioritizeTextures</definition>
        <argsstring>(GLsizei n, const GLuint *textures, const GLclampf *priorities)</argsstring>
        <name>logPrioritizeTextures</name>
        <param>
          <type>GLsizei</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const GLuint *</type>
          <declname>textures</declname>
        </param>
        <param>
          <type>const GLclampf *</type>
          <declname>priorities</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1161" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1161" bodyend="1166"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a9f4326276bee46d8a9fde01008b9f0bd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logPushAttrib</definition>
        <argsstring>(GLbitfield mask)</argsstring>
        <name>logPushAttrib</name>
        <param>
          <type>GLbitfield</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1168" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1168" bodyend="1172"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a84e4082ae33a9442308c0f476f18b22a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logPushClientAttrib</definition>
        <argsstring>(GLbitfield mask)</argsstring>
        <name>logPushClientAttrib</name>
        <param>
          <type>GLbitfield</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1174" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1174" bodyend="1178"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a064ed53e3d55a97cbb9cf6e788b7d8d8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logPushMatrix</definition>
        <argsstring>(void)</argsstring>
        <name>logPushMatrix</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1180" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1180" bodyend="1183"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aaf23438a779a01b0f87d9a78fc162372" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logPushName</definition>
        <argsstring>(GLuint name)</argsstring>
        <name>logPushName</name>
        <param>
          <type>GLuint</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1185" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1185" bodyend="1188"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ad58064c9c7364ebfa15a0d0969aa1ea8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRasterPos2d</definition>
        <argsstring>(GLdouble x, GLdouble y)</argsstring>
        <name>logRasterPos2d</name>
        <param>
          <type>GLdouble</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1190" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1190" bodyend="1193"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ab388b6300cabcebb8b56e5e4e43780a9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRasterPos2dv</definition>
        <argsstring>(const GLdouble *v)</argsstring>
        <name>logRasterPos2dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1195" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1195" bodyend="1199"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a3272043cfc3a2b7d8b9159224126d07c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRasterPos2f</definition>
        <argsstring>(GLfloat x, GLfloat y)</argsstring>
        <name>logRasterPos2f</name>
        <param>
          <type>GLfloat</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1201" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1201" bodyend="1204"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ae0174ee7cb5d23170433f86aa035509e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRasterPos2fv</definition>
        <argsstring>(const GLfloat *v)</argsstring>
        <name>logRasterPos2fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1206" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1206" bodyend="1210"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a85350e672d0fcf2262b049d42b6173ed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRasterPos2i</definition>
        <argsstring>(GLint x, GLint y)</argsstring>
        <name>logRasterPos2i</name>
        <param>
          <type>GLint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1212" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1212" bodyend="1215"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1abb751f2b267dfc48688a039ccb88f64b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRasterPos2iv</definition>
        <argsstring>(const GLint *v)</argsstring>
        <name>logRasterPos2iv</name>
        <param>
          <type>const GLint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1217" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1217" bodyend="1221"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a341cb3b88a2bc02929dcc4fe62bf6f46" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRasterPos2s</definition>
        <argsstring>(GLshort x, GLshort y)</argsstring>
        <name>logRasterPos2s</name>
        <param>
          <type>GLshort</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1223" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1223" bodyend="1226"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aad9cabb0b3f64553c6602602e26a3c47" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRasterPos2sv</definition>
        <argsstring>(const GLshort *v)</argsstring>
        <name>logRasterPos2sv</name>
        <param>
          <type>const GLshort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1228" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1228" bodyend="1232"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aea2ddcd4abdc48124a94c6405ee8bc70" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRasterPos3d</definition>
        <argsstring>(GLdouble x, GLdouble y, GLdouble z)</argsstring>
        <name>logRasterPos3d</name>
        <param>
          <type>GLdouble</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1234" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1234" bodyend="1237"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1afa62efbeb2abf352ab3f96a3992f1e91" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRasterPos3dv</definition>
        <argsstring>(const GLdouble *v)</argsstring>
        <name>logRasterPos3dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1239" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1239" bodyend="1243"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ad9f0663da7015279f63145039a6538c8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRasterPos3f</definition>
        <argsstring>(GLfloat x, GLfloat y, GLfloat z)</argsstring>
        <name>logRasterPos3f</name>
        <param>
          <type>GLfloat</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1245" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1245" bodyend="1248"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1acce2c1a6402548434f12b182eba895c4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRasterPos3fv</definition>
        <argsstring>(const GLfloat *v)</argsstring>
        <name>logRasterPos3fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1250" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1250" bodyend="1254"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a2286bda87c79e3b96f35cbedf9c49ba2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRasterPos3i</definition>
        <argsstring>(GLint x, GLint y, GLint z)</argsstring>
        <name>logRasterPos3i</name>
        <param>
          <type>GLint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1256" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1256" bodyend="1259"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a005a5c2edaa8ea7b8e42096d2877c9a2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRasterPos3iv</definition>
        <argsstring>(const GLint *v)</argsstring>
        <name>logRasterPos3iv</name>
        <param>
          <type>const GLint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1261" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1261" bodyend="1265"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ad3d7c1764e94624bba1e9b5a0344f1d1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRasterPos3s</definition>
        <argsstring>(GLshort x, GLshort y, GLshort z)</argsstring>
        <name>logRasterPos3s</name>
        <param>
          <type>GLshort</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1267" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1267" bodyend="1270"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ac958d44f3704f79d7e41cb81be776121" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRasterPos3sv</definition>
        <argsstring>(const GLshort *v)</argsstring>
        <name>logRasterPos3sv</name>
        <param>
          <type>const GLshort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1272" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1272" bodyend="1276"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a1cf82da44b1b841fa1c544222f9131ad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRasterPos4d</definition>
        <argsstring>(GLdouble x, GLdouble y, GLdouble z, GLdouble w)</argsstring>
        <name>logRasterPos4d</name>
        <param>
          <type>GLdouble</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>z</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1278" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1278" bodyend="1281"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a63b3c58dd6ae89af04113d50d01940b0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRasterPos4dv</definition>
        <argsstring>(const GLdouble *v)</argsstring>
        <name>logRasterPos4dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1283" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1283" bodyend="1287"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ac77ba0a554c7121e50918f7124200238" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRasterPos4f</definition>
        <argsstring>(GLfloat x, GLfloat y, GLfloat z, GLfloat w)</argsstring>
        <name>logRasterPos4f</name>
        <param>
          <type>GLfloat</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>z</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1289" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1289" bodyend="1292"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a94945c099063ba5e77e10762271af101" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRasterPos4fv</definition>
        <argsstring>(const GLfloat *v)</argsstring>
        <name>logRasterPos4fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1294" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1294" bodyend="1298"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a3b9c70eef93ea2a7313f86875dd5447e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRasterPos4i</definition>
        <argsstring>(GLint x, GLint y, GLint z, GLint w)</argsstring>
        <name>logRasterPos4i</name>
        <param>
          <type>GLint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>z</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1300" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1300" bodyend="1303"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a8fed7a76a100912173f2e9b0f53e6362" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRasterPos4iv</definition>
        <argsstring>(const GLint *v)</argsstring>
        <name>logRasterPos4iv</name>
        <param>
          <type>const GLint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1305" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1305" bodyend="1309"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ae8d2aa63904e2cc29c8e3aa86e081ed2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRasterPos4s</definition>
        <argsstring>(GLshort x, GLshort y, GLshort z, GLshort w)</argsstring>
        <name>logRasterPos4s</name>
        <param>
          <type>GLshort</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>z</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1311" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1311" bodyend="1314"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a3eca6c7e4ff31861d7fe50787edc2805" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRasterPos4sv</definition>
        <argsstring>(const GLshort *v)</argsstring>
        <name>logRasterPos4sv</name>
        <param>
          <type>const GLshort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1316" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1316" bodyend="1320"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a39bb8f6f97602f5d478f1bb23602f769" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logReadBuffer</definition>
        <argsstring>(GLenum mode)</argsstring>
        <name>logReadBuffer</name>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1322" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1322" bodyend="1325"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a95061370dbde73fe544c7762cd50c3b0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logReadPixels</definition>
        <argsstring>(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels)</argsstring>
        <name>logReadPixels</name>
        <param>
          <type>GLint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>width</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>height</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>format</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>GLvoid *</type>
          <declname>pixels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1327" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1327" bodyend="1331"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a4116fb7a7439ec9f054b975b08f02563" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRectd</definition>
        <argsstring>(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2)</argsstring>
        <name>logRectd</name>
        <param>
          <type>GLdouble</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>y2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1333" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1333" bodyend="1336"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a6cdb8508825a6b8f53736d10bc9265fa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRectdv</definition>
        <argsstring>(const GLdouble *v1, const GLdouble *v2)</argsstring>
        <name>logRectdv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const GLdouble *</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1338" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1338" bodyend="1343"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a62c91abd3e802a425ec96d601a6ac1eb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRectf</definition>
        <argsstring>(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2)</argsstring>
        <name>logRectf</name>
        <param>
          <type>GLfloat</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>y2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1345" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1345" bodyend="1348"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a151376c547dea16b1b792a72e458bbbe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRectfv</definition>
        <argsstring>(const GLfloat *v1, const GLfloat *v2)</argsstring>
        <name>logRectfv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const GLfloat *</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1350" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1350" bodyend="1355"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a63f5b93c5410019d8f0c2c57206f5187" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRecti</definition>
        <argsstring>(GLint x1, GLint y1, GLint x2, GLint y2)</argsstring>
        <name>logRecti</name>
        <param>
          <type>GLint</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1357" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1357" bodyend="1360"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a5cf084ba1eb49cdc3a3f76a52dbd0fa3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRectiv</definition>
        <argsstring>(const GLint *v1, const GLint *v2)</argsstring>
        <name>logRectiv</name>
        <param>
          <type>const GLint *</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const GLint *</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1362" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1362" bodyend="1367"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a2e0fcb762c1839aab8b03d35f726d89e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRects</definition>
        <argsstring>(GLshort x1, GLshort y1, GLshort x2, GLshort y2)</argsstring>
        <name>logRects</name>
        <param>
          <type>GLshort</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>y2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1369" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1369" bodyend="1372"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a7789bb4ace4a036349093aef7de4287c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRectsv</definition>
        <argsstring>(const GLshort *v1, const GLshort *v2)</argsstring>
        <name>logRectsv</name>
        <param>
          <type>const GLshort *</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const GLshort *</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1374" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1374" bodyend="1379"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1abaeb8295a08b568b151364cc4213ff4a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLint APIENTRY</type>
        <definition>static GLint APIENTRY logRenderMode</definition>
        <argsstring>(GLenum mode)</argsstring>
        <name>logRenderMode</name>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1381" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1381" bodyend="1384"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a087a332c608190514cc4db8a10e7f269" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRotated</definition>
        <argsstring>(GLdouble angle, GLdouble x, GLdouble y, GLdouble z)</argsstring>
        <name>logRotated</name>
        <param>
          <type>GLdouble</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1386" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1386" bodyend="1389"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a2a17853476454ca85f8ee8c1ca6722a8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logRotatef</definition>
        <argsstring>(GLfloat angle, GLfloat x, GLfloat y, GLfloat z)</argsstring>
        <name>logRotatef</name>
        <param>
          <type>GLfloat</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1391" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1391" bodyend="1394"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a29c7a32f1774d30d82e2e4693e064f92" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logScaled</definition>
        <argsstring>(GLdouble x, GLdouble y, GLdouble z)</argsstring>
        <name>logScaled</name>
        <param>
          <type>GLdouble</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1396" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1396" bodyend="1399"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a235b5dd14ed0937a824742d40d3eb873" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logScalef</definition>
        <argsstring>(GLfloat x, GLfloat y, GLfloat z)</argsstring>
        <name>logScalef</name>
        <param>
          <type>GLfloat</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1401" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1401" bodyend="1404"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a62f6451c5d562a26d83a9467a7fe212c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logScissor</definition>
        <argsstring>(GLint x, GLint y, GLsizei width, GLsizei height)</argsstring>
        <name>logScissor</name>
        <param>
          <type>GLint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>width</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1406" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1406" bodyend="1409"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ae8cad84ad454d778b9d49f3b9b0d0313" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logSelectBuffer</definition>
        <argsstring>(GLsizei size, GLuint *buffer)</argsstring>
        <name>logSelectBuffer</name>
        <param>
          <type>GLsizei</type>
          <declname>size</declname>
        </param>
        <param>
          <type>GLuint *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1411" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1411" bodyend="1415"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a4cc13106eef16b13a991e988456d29ff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logShadeModel</definition>
        <argsstring>(GLenum mode)</argsstring>
        <name>logShadeModel</name>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1417" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1417" bodyend="1420"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a5255fc00ee07539fb92dc915d53c13ca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logStencilFunc</definition>
        <argsstring>(GLenum func, GLint ref, GLuint mask)</argsstring>
        <name>logStencilFunc</name>
        <param>
          <type>GLenum</type>
          <declname>func</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>ref</declname>
        </param>
        <param>
          <type>GLuint</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1422" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1422" bodyend="1425"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a11cd6dfd90f835c0eb29cb729f14dc6d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logStencilMask</definition>
        <argsstring>(GLuint mask)</argsstring>
        <name>logStencilMask</name>
        <param>
          <type>GLuint</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1427" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1427" bodyend="1430"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a107675c16e18679cdf21965341f175a7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logStencilOp</definition>
        <argsstring>(GLenum fail, GLenum zfail, GLenum zpass)</argsstring>
        <name>logStencilOp</name>
        <param>
          <type>GLenum</type>
          <declname>fail</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>zfail</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>zpass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1432" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1432" bodyend="1435"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1af40c3b5354369312dc50704152a916dc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord1d</definition>
        <argsstring>(GLdouble s)</argsstring>
        <name>logTexCoord1d</name>
        <param>
          <type>GLdouble</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1437" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1437" bodyend="1440"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1af5d73b7da42fd4d43f16d5cab9ad9559" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord1dv</definition>
        <argsstring>(const GLdouble *v)</argsstring>
        <name>logTexCoord1dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1442" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1442" bodyend="1446"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a17f59a4e8e3fa56798c0d82f041ba015" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord1f</definition>
        <argsstring>(GLfloat s)</argsstring>
        <name>logTexCoord1f</name>
        <param>
          <type>GLfloat</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1448" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1448" bodyend="1451"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a4b16869d88d68668f11b86c5e3989a3d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord1fv</definition>
        <argsstring>(const GLfloat *v)</argsstring>
        <name>logTexCoord1fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1453" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1453" bodyend="1457"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a765c71d0ff61f0d54849257669194aa6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord1i</definition>
        <argsstring>(GLint s)</argsstring>
        <name>logTexCoord1i</name>
        <param>
          <type>GLint</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1459" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1459" bodyend="1462"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a1d965397fde4c9812be9c9470a28177e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord1iv</definition>
        <argsstring>(const GLint *v)</argsstring>
        <name>logTexCoord1iv</name>
        <param>
          <type>const GLint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1464" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1464" bodyend="1468"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a6eb2913d2e75ba410c20650c32ef5db7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord1s</definition>
        <argsstring>(GLshort s)</argsstring>
        <name>logTexCoord1s</name>
        <param>
          <type>GLshort</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1470" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1470" bodyend="1473"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ae0044e4b49f34735e885e4a067449b93" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord1sv</definition>
        <argsstring>(const GLshort *v)</argsstring>
        <name>logTexCoord1sv</name>
        <param>
          <type>const GLshort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1475" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1475" bodyend="1479"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a0af0f062cfbdddf4a07141a1755fd771" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord2d</definition>
        <argsstring>(GLdouble s, GLdouble t)</argsstring>
        <name>logTexCoord2d</name>
        <param>
          <type>GLdouble</type>
          <declname>s</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1481" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1481" bodyend="1484"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a8116487e4f28d79789e70c0f425ff9c4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord2dv</definition>
        <argsstring>(const GLdouble *v)</argsstring>
        <name>logTexCoord2dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1486" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1486" bodyend="1490"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a407888b72584a610264ac68dc65d0197" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord2f</definition>
        <argsstring>(GLfloat s, GLfloat t)</argsstring>
        <name>logTexCoord2f</name>
        <param>
          <type>GLfloat</type>
          <declname>s</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1492" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1492" bodyend="1495"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a081560a078d98327460a5553071dc928" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord2fv</definition>
        <argsstring>(const GLfloat *v)</argsstring>
        <name>logTexCoord2fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1497" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1497" bodyend="1501"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a727254c35f5472d02b99d72745eb43ce" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord2i</definition>
        <argsstring>(GLint s, GLint t)</argsstring>
        <name>logTexCoord2i</name>
        <param>
          <type>GLint</type>
          <declname>s</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1503" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1503" bodyend="1506"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a782c6fe6e7963e79555727406c53fda9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord2iv</definition>
        <argsstring>(const GLint *v)</argsstring>
        <name>logTexCoord2iv</name>
        <param>
          <type>const GLint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1508" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1508" bodyend="1512"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1af0c6a8a5a04c9cb08f031b1c12a3cc7c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord2s</definition>
        <argsstring>(GLshort s, GLshort t)</argsstring>
        <name>logTexCoord2s</name>
        <param>
          <type>GLshort</type>
          <declname>s</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1514" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1514" bodyend="1517"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a9fcc7343cab76c6df9882a8c74d3bd48" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord2sv</definition>
        <argsstring>(const GLshort *v)</argsstring>
        <name>logTexCoord2sv</name>
        <param>
          <type>const GLshort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1519" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1519" bodyend="1523"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aacc5f84e310941948a32a5c120efd8bc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord3d</definition>
        <argsstring>(GLdouble s, GLdouble t, GLdouble r)</argsstring>
        <name>logTexCoord3d</name>
        <param>
          <type>GLdouble</type>
          <declname>s</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>t</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1525" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1525" bodyend="1528"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a0a506c49630d465372406aef215d6cb9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord3dv</definition>
        <argsstring>(const GLdouble *v)</argsstring>
        <name>logTexCoord3dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1530" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1530" bodyend="1534"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1af812f87bd3c7e39759e82438b3b6dd3a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord3f</definition>
        <argsstring>(GLfloat s, GLfloat t, GLfloat r)</argsstring>
        <name>logTexCoord3f</name>
        <param>
          <type>GLfloat</type>
          <declname>s</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>t</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1536" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1536" bodyend="1539"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ac34fd57bedd122f9e2e1e6c5b2061e55" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord3fv</definition>
        <argsstring>(const GLfloat *v)</argsstring>
        <name>logTexCoord3fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1541" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1541" bodyend="1545"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a7a714936a97f99c84e7ee4a97a380a15" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord3i</definition>
        <argsstring>(GLint s, GLint t, GLint r)</argsstring>
        <name>logTexCoord3i</name>
        <param>
          <type>GLint</type>
          <declname>s</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>t</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1547" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1547" bodyend="1550"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a673fbba889446942c2bbc5677f04ab4e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord3iv</definition>
        <argsstring>(const GLint *v)</argsstring>
        <name>logTexCoord3iv</name>
        <param>
          <type>const GLint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1552" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1552" bodyend="1556"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a5a31c429151903d9955ff6ff1f3c1900" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord3s</definition>
        <argsstring>(GLshort s, GLshort t, GLshort r)</argsstring>
        <name>logTexCoord3s</name>
        <param>
          <type>GLshort</type>
          <declname>s</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>t</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1558" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1558" bodyend="1561"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1abd9e9ab25152f93462df845496159781" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord3sv</definition>
        <argsstring>(const GLshort *v)</argsstring>
        <name>logTexCoord3sv</name>
        <param>
          <type>const GLshort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1563" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1563" bodyend="1567"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ac5db409377f845706ce41624d5c4a39e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord4d</definition>
        <argsstring>(GLdouble s, GLdouble t, GLdouble r, GLdouble q)</argsstring>
        <name>logTexCoord4d</name>
        <param>
          <type>GLdouble</type>
          <declname>s</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>t</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>r</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1569" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1569" bodyend="1572"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ab86fae9b7c318231db11a40add5af329" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord4dv</definition>
        <argsstring>(const GLdouble *v)</argsstring>
        <name>logTexCoord4dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1574" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1574" bodyend="1578"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aa4485d915256e497632f50a03795d413" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord4f</definition>
        <argsstring>(GLfloat s, GLfloat t, GLfloat r, GLfloat q)</argsstring>
        <name>logTexCoord4f</name>
        <param>
          <type>GLfloat</type>
          <declname>s</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>t</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>r</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1580" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1580" bodyend="1583"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a9dff7d5e7e9935844cf6570fd3df7eda" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord4fv</definition>
        <argsstring>(const GLfloat *v)</argsstring>
        <name>logTexCoord4fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1585" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1585" bodyend="1589"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ad8c2f4d3e9710704f263c68f2d3d524c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord4i</definition>
        <argsstring>(GLint s, GLint t, GLint r, GLint q)</argsstring>
        <name>logTexCoord4i</name>
        <param>
          <type>GLint</type>
          <declname>s</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>t</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>r</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1591" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1591" bodyend="1594"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1abc22bd4017dc9fa5480b307bada8962a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord4iv</definition>
        <argsstring>(const GLint *v)</argsstring>
        <name>logTexCoord4iv</name>
        <param>
          <type>const GLint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1596" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1596" bodyend="1600"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ab2de6f99fdc084cfd2927d6cdd3eb891" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord4s</definition>
        <argsstring>(GLshort s, GLshort t, GLshort r, GLshort q)</argsstring>
        <name>logTexCoord4s</name>
        <param>
          <type>GLshort</type>
          <declname>s</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>t</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>r</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1602" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1602" bodyend="1605"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a0d04c17f1613913d446d093102a47c53" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoord4sv</definition>
        <argsstring>(const GLshort *v)</argsstring>
        <name>logTexCoord4sv</name>
        <param>
          <type>const GLshort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1607" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1607" bodyend="1611"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ae9554a1751106ba6de0acd55b1dd5e8d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexCoordPointer</definition>
        <argsstring>(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)</argsstring>
        <name>logTexCoordPointer</name>
        <param>
          <type>GLint</type>
          <declname>size</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const GLvoid *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1613" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1613" bodyend="1617"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a99df554a030d1d45c90de538209a5fe3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexEnvf</definition>
        <argsstring>(GLenum target, GLenum pname, GLfloat param)</argsstring>
        <name>logTexEnvf</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1619" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1619" bodyend="1622"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a9f207c642a406b77691a5b3c3d3bcdb6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexEnvfv</definition>
        <argsstring>(GLenum target, GLenum pname, const GLfloat *params)</argsstring>
        <name>logTexEnvfv</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLfloat *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1624" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1624" bodyend="1628"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ad23650268ff5b413e8560131b80c81df" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexEnvi</definition>
        <argsstring>(GLenum target, GLenum pname, GLint param)</argsstring>
        <name>logTexEnvi</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1630" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1630" bodyend="1633"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aac782a99000482c42b906b4a8313c486" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexEnviv</definition>
        <argsstring>(GLenum target, GLenum pname, const GLint *params)</argsstring>
        <name>logTexEnviv</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLint *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1635" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1635" bodyend="1639"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a5affea068c1395f709c24ee5ba276e7c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexGend</definition>
        <argsstring>(GLenum coord, GLenum pname, GLdouble param)</argsstring>
        <name>logTexGend</name>
        <param>
          <type>GLenum</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1641" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1641" bodyend="1644"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a461de7d9c2d6cf89772faddeee63da1a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexGendv</definition>
        <argsstring>(GLenum coord, GLenum pname, const GLdouble *params)</argsstring>
        <name>logTexGendv</name>
        <param>
          <type>GLenum</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLdouble *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1646" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1646" bodyend="1650"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a579984d8a489e8cf1a8cce32a430db83" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexGenf</definition>
        <argsstring>(GLenum coord, GLenum pname, GLfloat param)</argsstring>
        <name>logTexGenf</name>
        <param>
          <type>GLenum</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1652" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1652" bodyend="1655"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ae5162e0c8398965ac41f41099a4e3797" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexGenfv</definition>
        <argsstring>(GLenum coord, GLenum pname, const GLfloat *params)</argsstring>
        <name>logTexGenfv</name>
        <param>
          <type>GLenum</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLfloat *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1657" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1657" bodyend="1661"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a0fa27358cca95cd31b1cb98cb2a65055" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexGeni</definition>
        <argsstring>(GLenum coord, GLenum pname, GLint param)</argsstring>
        <name>logTexGeni</name>
        <param>
          <type>GLenum</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1663" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1663" bodyend="1666"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aa9012880c3ec2416ec16622d7c8132b9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexGeniv</definition>
        <argsstring>(GLenum coord, GLenum pname, const GLint *params)</argsstring>
        <name>logTexGeniv</name>
        <param>
          <type>GLenum</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLint *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1668" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1668" bodyend="1672"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a0a80758ff0380657b063c5f2a1e83050" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexImage1D</definition>
        <argsstring>(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels)</argsstring>
        <name>logTexImage1D</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>level</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>internalformat</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>width</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>border</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>format</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const GLvoid *</type>
          <declname>pixels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1674" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1674" bodyend="1678"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a01b281cfaf5d1a0c92ad513572c3aba8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexImage2D</definition>
        <argsstring>(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)</argsstring>
        <name>logTexImage2D</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>level</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>internalformat</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>width</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>height</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>border</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>format</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const GLvoid *</type>
          <declname>pixels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1680" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1680" bodyend="1684"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aac11bc6f672e42a6e921dfefe2efb456" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexParameterf</definition>
        <argsstring>(GLenum target, GLenum pname, GLfloat param)</argsstring>
        <name>logTexParameterf</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1686" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1686" bodyend="1689"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aa58cece4de20d2194b2c12b82b533529" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexParameterfv</definition>
        <argsstring>(GLenum target, GLenum pname, const GLfloat *params)</argsstring>
        <name>logTexParameterfv</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLfloat *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1691" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1691" bodyend="1695"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a29cf6a5b532a6f2f5f1268fe7f704c00" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexParameteri</definition>
        <argsstring>(GLenum target, GLenum pname, GLint param)</argsstring>
        <name>logTexParameteri</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1697" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1697" bodyend="1700"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aec8d0eab276df66d6bab2ea394baa07b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexParameteriv</definition>
        <argsstring>(GLenum target, GLenum pname, const GLint *params)</argsstring>
        <name>logTexParameteriv</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLint *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1702" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1702" bodyend="1706"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a65bfb76b462fdc064a4edc765b88f1e3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexSubImage1D</definition>
        <argsstring>(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels)</argsstring>
        <name>logTexSubImage1D</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>level</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>xoffset</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>width</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>format</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const GLvoid *</type>
          <declname>pixels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1708" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1708" bodyend="1712"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a699aa60756c724ec59a4c72229b0525b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTexSubImage2D</definition>
        <argsstring>(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)</argsstring>
        <name>logTexSubImage2D</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>level</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>xoffset</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>yoffset</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>width</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>height</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>format</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const GLvoid *</type>
          <declname>pixels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1714" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1714" bodyend="1718"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1afa3539d4610e9c7beaa743621791d0b1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTranslated</definition>
        <argsstring>(GLdouble x, GLdouble y, GLdouble z)</argsstring>
        <name>logTranslated</name>
        <param>
          <type>GLdouble</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1720" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1720" bodyend="1723"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a82b2cc74250936c84a617666ac2ae843" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logTranslatef</definition>
        <argsstring>(GLfloat x, GLfloat y, GLfloat z)</argsstring>
        <name>logTranslatef</name>
        <param>
          <type>GLfloat</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1725" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1725" bodyend="1728"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a5d55890afef72b865ed7272139c0f28b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logVertex2d</definition>
        <argsstring>(GLdouble x, GLdouble y)</argsstring>
        <name>logVertex2d</name>
        <param>
          <type>GLdouble</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1730" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1730" bodyend="1733"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a20e59ba396ef1abc49f81f4b0c9a4a04" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logVertex2dv</definition>
        <argsstring>(const GLdouble *v)</argsstring>
        <name>logVertex2dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1735" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1735" bodyend="1739"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1abadaf6d1a9d0527fcc2c84f504d47e94" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logVertex2f</definition>
        <argsstring>(GLfloat x, GLfloat y)</argsstring>
        <name>logVertex2f</name>
        <param>
          <type>GLfloat</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1741" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1741" bodyend="1744"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a391e78cded4ede50854f55d99d42c74f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logVertex2fv</definition>
        <argsstring>(const GLfloat *v)</argsstring>
        <name>logVertex2fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1746" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1746" bodyend="1750"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a5c7949137d666197f50367c019d6eeb6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logVertex2i</definition>
        <argsstring>(GLint x, GLint y)</argsstring>
        <name>logVertex2i</name>
        <param>
          <type>GLint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1752" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1752" bodyend="1755"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a68eb23a349532b5c55ec9cf5d8184a00" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logVertex2iv</definition>
        <argsstring>(const GLint *v)</argsstring>
        <name>logVertex2iv</name>
        <param>
          <type>const GLint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1757" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1757" bodyend="1761"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a8a4ebce36f5dd10255e073583b4ee081" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logVertex2s</definition>
        <argsstring>(GLshort x, GLshort y)</argsstring>
        <name>logVertex2s</name>
        <param>
          <type>GLshort</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1763" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1763" bodyend="1766"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1af2d0e8e5235d0c329ae89b0d0ab2ca5c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logVertex2sv</definition>
        <argsstring>(const GLshort *v)</argsstring>
        <name>logVertex2sv</name>
        <param>
          <type>const GLshort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1768" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1768" bodyend="1772"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a1f208f781da93f254878e285bcfc3c77" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logVertex3d</definition>
        <argsstring>(GLdouble x, GLdouble y, GLdouble z)</argsstring>
        <name>logVertex3d</name>
        <param>
          <type>GLdouble</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1774" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1774" bodyend="1777"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a74701b9704dd64b4bfa21e3847cf4d8a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logVertex3dv</definition>
        <argsstring>(const GLdouble *v)</argsstring>
        <name>logVertex3dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1779" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1779" bodyend="1783"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a86e8716c1541a9d460dd2812770d3fdf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logVertex3f</definition>
        <argsstring>(GLfloat x, GLfloat y, GLfloat z)</argsstring>
        <name>logVertex3f</name>
        <param>
          <type>GLfloat</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1785" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1785" bodyend="1788"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ae6221d11ef75d7eb0740244203a868f3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logVertex3fv</definition>
        <argsstring>(const GLfloat *v)</argsstring>
        <name>logVertex3fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1790" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1790" bodyend="1794"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aab7ac0584a23a29e57524b8c2bad2550" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logVertex3i</definition>
        <argsstring>(GLint x, GLint y, GLint z)</argsstring>
        <name>logVertex3i</name>
        <param>
          <type>GLint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1796" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1796" bodyend="1799"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a1c1c3d5896685962ffc7978440380255" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logVertex3iv</definition>
        <argsstring>(const GLint *v)</argsstring>
        <name>logVertex3iv</name>
        <param>
          <type>const GLint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1801" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1801" bodyend="1805"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1aae48fcc74df7374837c7afba4f696b4a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logVertex3s</definition>
        <argsstring>(GLshort x, GLshort y, GLshort z)</argsstring>
        <name>logVertex3s</name>
        <param>
          <type>GLshort</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1807" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1807" bodyend="1810"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1adea38cdc06ae09724c40cfe6eb96b1f3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logVertex3sv</definition>
        <argsstring>(const GLshort *v)</argsstring>
        <name>logVertex3sv</name>
        <param>
          <type>const GLshort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1812" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1812" bodyend="1816"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a360bcb8d4959f8dd4cf50d61d5e923ce" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logVertex4d</definition>
        <argsstring>(GLdouble x, GLdouble y, GLdouble z, GLdouble w)</argsstring>
        <name>logVertex4d</name>
        <param>
          <type>GLdouble</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>z</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1818" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1818" bodyend="1821"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a949b086c7590deb219fc83a822a5bc6f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logVertex4dv</definition>
        <argsstring>(const GLdouble *v)</argsstring>
        <name>logVertex4dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1823" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1823" bodyend="1827"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a00896c8dd340e4176448dbc1151acae8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logVertex4f</definition>
        <argsstring>(GLfloat x, GLfloat y, GLfloat z, GLfloat w)</argsstring>
        <name>logVertex4f</name>
        <param>
          <type>GLfloat</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>z</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1829" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1829" bodyend="1832"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ae54634597f8f0a4c9947f5c64eebdf56" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logVertex4fv</definition>
        <argsstring>(const GLfloat *v)</argsstring>
        <name>logVertex4fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1834" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1834" bodyend="1838"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1afcf8aea31d989c4c6e5e7f093ea58fd8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logVertex4i</definition>
        <argsstring>(GLint x, GLint y, GLint z, GLint w)</argsstring>
        <name>logVertex4i</name>
        <param>
          <type>GLint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>z</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1840" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1840" bodyend="1843"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a366abbaaeebd8bf61b39b22a9f4fe4be" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logVertex4iv</definition>
        <argsstring>(const GLint *v)</argsstring>
        <name>logVertex4iv</name>
        <param>
          <type>const GLint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1845" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1845" bodyend="1849"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1ad6b3e2c72112b26b0ff3a9ee63652f3c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logVertex4s</definition>
        <argsstring>(GLshort x, GLshort y, GLshort z, GLshort w)</argsstring>
        <name>logVertex4s</name>
        <param>
          <type>GLshort</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>z</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1851" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1851" bodyend="1854"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a0fd9ccd42aace1bad93d4f59e45b4304" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logVertex4sv</definition>
        <argsstring>(const GLshort *v)</argsstring>
        <name>logVertex4sv</name>
        <param>
          <type>const GLshort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1856" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1856" bodyend="1860"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a1c2f58f31f5143bee12234bac521b352" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logVertexPointer</definition>
        <argsstring>(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)</argsstring>
        <name>logVertexPointer</name>
        <param>
          <type>GLint</type>
          <declname>size</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const GLvoid *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1862" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1862" bodyend="1866"/>
      </memberdef>
      <memberdef kind="function" id="gl__logfuncs_8cpp_1a70d2e9361171d9d52a6585aff7409f13" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void APIENTRY</type>
        <definition>static void APIENTRY logViewport</definition>
        <argsstring>(GLint x, GLint y, GLsizei width, GLsizei height)</argsstring>
        <name>logViewport</name>
        <param>
          <type>GLint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>width</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" line="1868" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp" bodystart="1868" bodyend="1871"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logAccum(GLenum<sp/>op,<sp/>GLfloat<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glAccum<sp/>%s<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(op),<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>dllAccum(op,<sp/>value);</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logAlphaFunc(GLenum<sp/>func,<sp/>GLclampf<sp/>ref)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glAlphaFunc<sp/>%s<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(func),<sp/>ref<sp/>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>dllAlphaFunc(func,<sp/>ref);</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GLboolean<sp/>APIENTRY<sp/>logAreTexturesResident(GLsizei<sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLuint<sp/>*textures,<sp/>GLboolean<sp/>*residences)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLuint<sp/>*&quot;<sp/>name:<sp/>&quot;textures&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLboolean<sp/>*&quot;<sp/>name:<sp/>&quot;residences&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glAreTexturesResident<sp/>%d<sp/>&apos;const<sp/>GLuint<sp/>*<sp/>textures&apos;<sp/>&apos;GLboolean<sp/>*<sp/>residences&apos;\n&quot;</highlight><highlight class="normal">,<sp/>n<sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dllAreTexturesResident(n,<sp/>textures,<sp/>residences);</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logArrayElement(GLint<sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glArrayElement<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>dllArrayElement(i);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logBegin(GLenum<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glBegin<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(mode)<sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>dllBegin(mode);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logBindTexture(GLenum<sp/>target,<sp/>GLuint<sp/>texture)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glBindTexture<sp/>%s<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>texture<sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>dllBindTexture(target,<sp/>texture);</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logBitmap(GLsizei<sp/>width,<sp/>GLsizei<sp/>height,<sp/>GLfloat<sp/>xorig,<sp/>GLfloat<sp/>yorig,<sp/>GLfloat<sp/>xmove,<sp/>GLfloat<sp/>ymove,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLubyte<sp/>*bitmap)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLubyte<sp/>*&quot;<sp/>name:<sp/>&quot;bitmap&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glBitmap<sp/>%d<sp/>%d<sp/>%g<sp/>%g<sp/>%g<sp/>%g<sp/>&apos;const<sp/>GLubyte<sp/>*<sp/>bitmap&apos;\n&quot;</highlight><highlight class="normal">,<sp/>width,<sp/>height,<sp/>xorig,<sp/>yorig,<sp/>xmove,<sp/>ymove<sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>dllBitmap(width,<sp/>height,<sp/>xorig,<sp/>yorig,<sp/>xmove,<sp/>ymove,<sp/>bitmap);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logBlendFunc(GLenum<sp/>sfactor,<sp/>GLenum<sp/>dfactor)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glBlendFunc<sp/>%s<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(sfactor),<sp/>EnumString(dfactor)<sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>dllBlendFunc(sfactor,<sp/>dfactor);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logCallList(GLuint<sp/>list)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glCallList<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>list<sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>dllCallList(list);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logCallLists(GLsizei<sp/>n,<sp/>GLenum<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*lists)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLvoid<sp/>*&quot;<sp/>name:<sp/>&quot;lists&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glCallLists<sp/>%d<sp/>%s<sp/>&apos;const<sp/>GLvoid<sp/>*<sp/>lists&apos;\n&quot;</highlight><highlight class="normal">,<sp/>n,<sp/>EnumString(type)<sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>dllCallLists(n,<sp/>type,<sp/>lists);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logClear(GLbitfield<sp/>mask)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLbitfield&quot;<sp/>name:<sp/>&quot;mask&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glClear<sp/>&apos;GLbitfield<sp/>mask&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>dllClear(mask);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logClearAccum(GLfloat<sp/>red,<sp/>GLfloat<sp/>green,<sp/>GLfloat<sp/>blue,<sp/>GLfloat<sp/>alpha)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glClearAccum<sp/>%g<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>red,<sp/>green,<sp/>blue,<sp/>alpha<sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>dllClearAccum(red,<sp/>green,<sp/>blue,<sp/>alpha);</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logClearColor(GLclampf<sp/>red,<sp/>GLclampf<sp/>green,<sp/>GLclampf<sp/>blue,<sp/>GLclampf<sp/>alpha)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glClearColor<sp/>%g<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>red,<sp/>green,<sp/>blue,<sp/>alpha<sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>dllClearColor(red,<sp/>green,<sp/>blue,<sp/>alpha);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logClearDepth(GLclampd<sp/>depth)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLclampd&quot;<sp/>name:<sp/>&quot;depth&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glClearDepth<sp/>&apos;GLclampd<sp/>depth&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>dllClearDepth(depth);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logClearIndex(GLfloat<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glClearIndex<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>c<sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>dllClearIndex(c);</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logClearStencil(GLint<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glClearStencil<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>dllClearStencil(s);</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logClipPlane(GLenum<sp/>plane,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*equation)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLdouble<sp/>*&quot;<sp/>name:<sp/>&quot;equation&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glClipPlane<sp/>%s<sp/>&apos;const<sp/>GLdouble<sp/>*<sp/>equation&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(plane)<sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>dllClipPlane(plane,<sp/>equation);</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor3b(GLbyte<sp/>red,<sp/>GLbyte<sp/>green,<sp/>GLbyte<sp/>blue)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor3b<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>red,<sp/>green,<sp/>blue<sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor3b(red,<sp/>green,<sp/>blue);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor3bv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLbyte<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLbyte<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor3bv<sp/>&apos;const<sp/>GLbyte<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor3bv(v);</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor3d(GLdouble<sp/>red,<sp/>GLdouble<sp/>green,<sp/>GLdouble<sp/>blue)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor3d<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>red,<sp/>green,<sp/>blue<sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor3d(red,<sp/>green,<sp/>blue);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor3dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLdouble<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor3dv<sp/>&apos;const<sp/>GLdouble<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor3dv(v);</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor3f(GLfloat<sp/>red,<sp/>GLfloat<sp/>green,<sp/>GLfloat<sp/>blue)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor3f<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>red,<sp/>green,<sp/>blue<sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor3f(red,<sp/>green,<sp/>blue);</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor3fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor3fv<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor3fv(v);</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor3i(GLint<sp/>red,<sp/>GLint<sp/>green,<sp/>GLint<sp/>blue)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor3i<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>red,<sp/>green,<sp/>blue<sp/>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor3i(red,<sp/>green,<sp/>blue);</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor3iv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLint<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor3iv<sp/>&apos;const<sp/>GLint<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor3iv(v);</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor3s(GLshort<sp/>red,<sp/>GLshort<sp/>green,<sp/>GLshort<sp/>blue)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor3s<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>red,<sp/>green,<sp/>blue<sp/>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor3s(red,<sp/>green,<sp/>blue);</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor3sv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLshort<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor3sv<sp/>&apos;const<sp/>GLshort<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor3sv(v);</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor3ub(GLubyte<sp/>red,<sp/>GLubyte<sp/>green,<sp/>GLubyte<sp/>blue)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor3ub<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>red,<sp/>green,<sp/>blue<sp/>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor3ub(red,<sp/>green,<sp/>blue);</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor3ubv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLubyte<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLubyte<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor3ubv<sp/>&apos;const<sp/>GLubyte<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor3ubv(v);</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor3ui(GLuint<sp/>red,<sp/>GLuint<sp/>green,<sp/>GLuint<sp/>blue)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor3ui<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>red,<sp/>green,<sp/>blue<sp/>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor3ui(red,<sp/>green,<sp/>blue);</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor3uiv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLuint<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLuint<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor3uiv<sp/>&apos;const<sp/>GLuint<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor3uiv(v);</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor3us(GLushort<sp/>red,<sp/>GLushort<sp/>green,<sp/>GLushort<sp/>blue)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor3us<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>red,<sp/>green,<sp/>blue<sp/>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor3us(red,<sp/>green,<sp/>blue);</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor3usv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLushort<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLushort<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor3usv<sp/>&apos;const<sp/>GLushort<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor3usv(v);</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor4b(GLbyte<sp/>red,<sp/>GLbyte<sp/>green,<sp/>GLbyte<sp/>blue,<sp/>GLbyte<sp/>alpha)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor4b<sp/>%d<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>red,<sp/>green,<sp/>blue,<sp/>alpha<sp/>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor4b(red,<sp/>green,<sp/>blue,<sp/>alpha);</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor4bv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLbyte<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLbyte<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor4bv<sp/>&apos;const<sp/>GLbyte<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor4bv(v);</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor4d(GLdouble<sp/>red,<sp/>GLdouble<sp/>green,<sp/>GLdouble<sp/>blue,<sp/>GLdouble<sp/>alpha)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor4d<sp/>%g<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>red,<sp/>green,<sp/>blue,<sp/>alpha<sp/>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor4d(red,<sp/>green,<sp/>blue,<sp/>alpha);</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor4dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLdouble<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor4dv<sp/>&apos;const<sp/>GLdouble<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor4dv(v);</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor4f(GLfloat<sp/>red,<sp/>GLfloat<sp/>green,<sp/>GLfloat<sp/>blue,<sp/>GLfloat<sp/>alpha)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor4f<sp/>%g<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>red,<sp/>green,<sp/>blue,<sp/>alpha<sp/>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor4f(red,<sp/>green,<sp/>blue,<sp/>alpha);</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor4fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor4fv<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor4fv(v);</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor4i(GLint<sp/>red,<sp/>GLint<sp/>green,<sp/>GLint<sp/>blue,<sp/>GLint<sp/>alpha)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor4i<sp/>%d<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>red,<sp/>green,<sp/>blue,<sp/>alpha<sp/>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor4i(red,<sp/>green,<sp/>blue,<sp/>alpha);</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor4iv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLint<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor4iv<sp/>&apos;const<sp/>GLint<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor4iv(v);</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor4s(GLshort<sp/>red,<sp/>GLshort<sp/>green,<sp/>GLshort<sp/>blue,<sp/>GLshort<sp/>alpha)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor4s<sp/>%d<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>red,<sp/>green,<sp/>blue,<sp/>alpha<sp/>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor4s(red,<sp/>green,<sp/>blue,<sp/>alpha);</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor4sv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLshort<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor4sv<sp/>&apos;const<sp/>GLshort<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor4sv(v);</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor4ub(GLubyte<sp/>red,<sp/>GLubyte<sp/>green,<sp/>GLubyte<sp/>blue,<sp/>GLubyte<sp/>alpha)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor4ub<sp/>%d<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>red,<sp/>green,<sp/>blue,<sp/>alpha<sp/>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor4ub(red,<sp/>green,<sp/>blue,<sp/>alpha);</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor4ubv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLubyte<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLubyte<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor4ubv<sp/>&apos;const<sp/>GLubyte<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor4ubv(v);</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor4ui(GLuint<sp/>red,<sp/>GLuint<sp/>green,<sp/>GLuint<sp/>blue,<sp/>GLuint<sp/>alpha)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor4ui<sp/>%d<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>red,<sp/>green,<sp/>blue,<sp/>alpha<sp/>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor4ui(red,<sp/>green,<sp/>blue,<sp/>alpha);</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor4uiv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLuint<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLuint<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor4uiv<sp/>&apos;const<sp/>GLuint<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor4uiv(v);</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor4us(GLushort<sp/>red,<sp/>GLushort<sp/>green,<sp/>GLushort<sp/>blue,<sp/>GLushort<sp/>alpha)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor4us<sp/>%d<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>red,<sp/>green,<sp/>blue,<sp/>alpha<sp/>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor4us(red,<sp/>green,<sp/>blue,<sp/>alpha);</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColor4usv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLushort<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLushort<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColor4usv<sp/>&apos;const<sp/>GLushort<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColor4usv(v);</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColorMask(GLboolean<sp/>red,<sp/>GLboolean<sp/>green,<sp/>GLboolean<sp/>blue,<sp/>GLboolean<sp/>alpha)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColorMask<sp/>%s<sp/>%s<sp/>%s<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>red<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;N&quot;</highlight><highlight class="normal">,<sp/>green<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;N&quot;</highlight><highlight class="normal">,<sp/>blue<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;N&quot;</highlight><highlight class="normal">,<sp/>alpha<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;N&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColorMask(red,<sp/>green,<sp/>blue,<sp/>alpha);</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColorMaterial(GLenum<sp/>face,<sp/>GLenum<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColorMaterial<sp/>%s<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(face),<sp/>EnumString(mode)<sp/>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColorMaterial(face,<sp/>mode);</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logColorPointer(GLint<sp/>size,<sp/>GLenum<sp/>type,<sp/>GLsizei<sp/>stride,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pointer)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLvoid<sp/>*&quot;<sp/>name:<sp/>&quot;pointer&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glColorPointer<sp/>%d<sp/>%s<sp/>%d<sp/>&apos;const<sp/>GLvoid<sp/>*<sp/>pointer&apos;\n&quot;</highlight><highlight class="normal">,<sp/>size,<sp/>EnumString(type),<sp/>stride<sp/>);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>dllColorPointer(size,<sp/>type,<sp/>stride,<sp/>pointer);</highlight></codeline>
<codeline lineno="311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logCopyPixels(GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLsizei<sp/>width,<sp/>GLsizei<sp/>height,<sp/>GLenum<sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glCopyPixels<sp/>%d<sp/>%d<sp/>%d<sp/>%d<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>width,<sp/>height,<sp/>EnumString(type)<sp/>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>dllCopyPixels(x,<sp/>y,<sp/>width,<sp/>height,<sp/>type);</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logCopyTexImage1D(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLenum<sp/>internalFormat,<sp/>GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLsizei<sp/>width,<sp/>GLint<sp/>border)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glCopyTexImage1D<sp/>%s<sp/>%d<sp/>%s<sp/>%d<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>level,<sp/>EnumString(internalFormat),<sp/>x,<sp/>y,<sp/>width,<sp/>border<sp/>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>dllCopyTexImage1D(target,<sp/>level,<sp/>internalFormat,<sp/>x,<sp/>y,<sp/>width,<sp/>border);</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logCopyTexImage2D(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLenum<sp/>internalFormat,<sp/>GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLsizei<sp/>width,<sp/>GLsizei<sp/>height,<sp/>GLint<sp/>border)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glCopyTexImage2D<sp/>%s<sp/>%d<sp/>%s<sp/>%d<sp/>%d<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>level,<sp/>EnumString(internalFormat),<sp/>x,<sp/>y,<sp/>width,<sp/>height,<sp/>border<sp/>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>dllCopyTexImage2D(target,<sp/>level,<sp/>internalFormat,<sp/>x,<sp/>y,<sp/>width,<sp/>height,<sp/>border);</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logCopyTexSubImage1D(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLint<sp/>xoffset,<sp/>GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLsizei<sp/>width)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glCopyTexSubImage1D<sp/>%s<sp/>%d<sp/>%d<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>level,<sp/>xoffset,<sp/>x,<sp/>y,<sp/>width<sp/>);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>dllCopyTexSubImage1D(target,<sp/>level,<sp/>xoffset,<sp/>x,<sp/>y,<sp/>width);</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logCopyTexSubImage2D(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLint<sp/>xoffset,<sp/>GLint<sp/>yoffset,<sp/>GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLsizei<sp/>width,<sp/>GLsizei<sp/>height)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glCopyTexSubImage2D<sp/>%s<sp/>%d<sp/>%d<sp/>%d<sp/>%d<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>level,<sp/>xoffset,<sp/>yoffset,<sp/>x,<sp/>y,<sp/>width,<sp/>height<sp/>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>dllCopyTexSubImage2D(target,<sp/>level,<sp/>xoffset,<sp/>yoffset,<sp/>x,<sp/>y,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logCullFace(GLenum<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glCullFace<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(mode)<sp/>);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>dllCullFace(mode);</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logDeleteLists(GLuint<sp/>list,<sp/>GLsizei<sp/>range)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glDeleteLists<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>list,<sp/>range<sp/>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>dllDeleteLists(list,<sp/>range);</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logDeleteTextures(GLsizei<sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLuint<sp/>*textures)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLuint<sp/>*&quot;<sp/>name:<sp/>&quot;textures&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glDeleteTextures<sp/>%d<sp/>&apos;const<sp/>GLuint<sp/>*<sp/>textures&apos;\n&quot;</highlight><highlight class="normal">,<sp/>n<sp/>);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>dllDeleteTextures(n,<sp/>textures);</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logDepthFunc(GLenum<sp/>func)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glDepthFunc<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(func)<sp/>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>dllDepthFunc(func);</highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logDepthMask(GLboolean<sp/>flag)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glDepthMask<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>flag<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;N&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>dllDepthMask(flag);</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logDepthRange(GLclampd<sp/>zNear,<sp/>GLclampd<sp/>zFar)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLclampd&quot;<sp/>name:<sp/>&quot;zNear&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLclampd&quot;<sp/>name:<sp/>&quot;zFar&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glDepthRange<sp/>&apos;GLclampd<sp/>zNear&apos;<sp/>&apos;GLclampd<sp/>zFar&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>dllDepthRange(zNear,<sp/>zFar);</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logDisable(GLenum<sp/>cap)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glDisable<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(cap)<sp/>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>dllDisable(cap);</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logDisableClientState(GLenum<sp/>array)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glDisableClientState<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(array)<sp/>);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>dllDisableClientState(array);</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logDrawArrays(GLenum<sp/>mode,<sp/>GLint<sp/>first,<sp/>GLsizei<sp/>count)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glDrawArrays<sp/>%s<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(mode),<sp/>first,<sp/>count<sp/>);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>dllDrawArrays(mode,<sp/>first,<sp/>count);</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logDrawBuffer(GLenum<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glDrawBuffer<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(mode)<sp/>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>dllDrawBuffer(mode);</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logDrawElements(GLenum<sp/>mode,<sp/>GLsizei<sp/>count,<sp/>GLenum<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*indices)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLvoid<sp/>*&quot;<sp/>name:<sp/>&quot;indices&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glDrawElements<sp/>%s<sp/>%d<sp/>%s<sp/>&apos;const<sp/>GLvoid<sp/>*<sp/>indices&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(mode),<sp/>count,<sp/>EnumString(type)<sp/>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>dllDrawElements(mode,<sp/>count,<sp/>type,<sp/>indices);</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logDrawPixels(GLsizei<sp/>width,<sp/>GLsizei<sp/>height,<sp/>GLenum<sp/>format,<sp/>GLenum<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pixels)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLvoid<sp/>*&quot;<sp/>name:<sp/>&quot;pixels&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glDrawPixels<sp/>%d<sp/>%d<sp/>%s<sp/>%s<sp/>&apos;const<sp/>GLvoid<sp/>*<sp/>pixels&apos;\n&quot;</highlight><highlight class="normal">,<sp/>width,<sp/>height,<sp/>EnumString(format),<sp/>EnumString(type)<sp/>);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>dllDrawPixels(width,<sp/>height,<sp/>format,<sp/>type,<sp/>pixels);</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logEdgeFlag(GLboolean<sp/>flag)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glEdgeFlag<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>flag<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;N&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>dllEdgeFlag(flag);</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logEdgeFlagPointer(GLsizei<sp/>stride,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pointer)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLvoid<sp/>*&quot;<sp/>name:<sp/>&quot;pointer&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glEdgeFlagPointer<sp/>%d<sp/>&apos;const<sp/>GLvoid<sp/>*<sp/>pointer&apos;\n&quot;</highlight><highlight class="normal">,<sp/>stride<sp/>);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>dllEdgeFlagPointer(stride,<sp/>pointer);</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logEdgeFlagv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLboolean<sp/>*flag)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLboolean<sp/>*&quot;<sp/>name:<sp/>&quot;flag&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glEdgeFlagv<sp/>&apos;const<sp/>GLboolean<sp/>*<sp/>flag&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>dllEdgeFlagv(flag);</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logEnable(GLenum<sp/>cap)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glEnable<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(cap)<sp/>);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>dllEnable(cap);</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logEnableClientState(GLenum<sp/>array)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glEnableClientState<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(array)<sp/>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>dllEnableClientState(array);</highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logEnd(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glEnd\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>dllEnd();</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logEndList(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glEndList\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>dllEndList();</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logEvalCoord1d(GLdouble<sp/>u)<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glEvalCoord1d<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>u<sp/>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>dllEvalCoord1d(u);</highlight></codeline>
<codeline lineno="443"><highlight class="normal">}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logEvalCoord1dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*u)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLdouble<sp/>*&quot;<sp/>name:<sp/>&quot;u&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glEvalCoord1dv<sp/>&apos;const<sp/>GLdouble<sp/>*<sp/>u&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>dllEvalCoord1dv(u);</highlight></codeline>
<codeline lineno="449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logEvalCoord1f(GLfloat<sp/>u)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glEvalCoord1f<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>u<sp/>);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>dllEvalCoord1f(u);</highlight></codeline>
<codeline lineno="454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logEvalCoord1fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*u)<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;u&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glEvalCoord1fv<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>u&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>dllEvalCoord1fv(u);</highlight></codeline>
<codeline lineno="460"><highlight class="normal">}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logEvalCoord2d(GLdouble<sp/>u,<sp/>GLdouble<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glEvalCoord2d<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>u,<sp/>v<sp/>);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>dllEvalCoord2d(u,<sp/>v);</highlight></codeline>
<codeline lineno="465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logEvalCoord2dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*u)<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLdouble<sp/>*&quot;<sp/>name:<sp/>&quot;u&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glEvalCoord2dv<sp/>&apos;const<sp/>GLdouble<sp/>*<sp/>u&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>dllEvalCoord2dv(u);</highlight></codeline>
<codeline lineno="471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logEvalCoord2f(GLfloat<sp/>u,<sp/>GLfloat<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glEvalCoord2f<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>u,<sp/>v<sp/>);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>dllEvalCoord2f(u,<sp/>v);</highlight></codeline>
<codeline lineno="476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logEvalCoord2fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*u)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;u&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glEvalCoord2fv<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>u&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>dllEvalCoord2fv(u);</highlight></codeline>
<codeline lineno="482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logEvalMesh1(GLenum<sp/>mode,<sp/>GLint<sp/>i1,<sp/>GLint<sp/>i2)<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glEvalMesh1<sp/>%s<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(mode),<sp/>i1,<sp/>i2<sp/>);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>dllEvalMesh1(mode,<sp/>i1,<sp/>i2);</highlight></codeline>
<codeline lineno="487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logEvalMesh2(GLenum<sp/>mode,<sp/>GLint<sp/>i1,<sp/>GLint<sp/>i2,<sp/>GLint<sp/>j1,<sp/>GLint<sp/>j2)<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glEvalMesh2<sp/>%s<sp/>%d<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(mode),<sp/>i1,<sp/>i2,<sp/>j1,<sp/>j2<sp/>);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>dllEvalMesh2(mode,<sp/>i1,<sp/>i2,<sp/>j1,<sp/>j2);</highlight></codeline>
<codeline lineno="492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logEvalPoint1(GLint<sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glEvalPoint1<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>dllEvalPoint1(i);</highlight></codeline>
<codeline lineno="497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logEvalPoint2(GLint<sp/>i,<sp/>GLint<sp/>j)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glEvalPoint2<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>j<sp/>);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>dllEvalPoint2(i,<sp/>j);</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logFeedbackBuffer(GLsizei<sp/>size,<sp/>GLenum<sp/>type,<sp/>GLfloat<sp/>*buffer)<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;buffer&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glFeedbackBuffer<sp/>%d<sp/>%s<sp/>&apos;GLfloat<sp/>*<sp/>buffer&apos;\n&quot;</highlight><highlight class="normal">,<sp/>size,<sp/>EnumString(type)<sp/>);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>dllFeedbackBuffer(size,<sp/>type,<sp/>buffer);</highlight></codeline>
<codeline lineno="508"><highlight class="normal">}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logFinish(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glFinish\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>dllFinish();</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logFlush(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glFlush\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>dllFlush();</highlight></codeline>
<codeline lineno="518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logFogf(GLenum<sp/>pname,<sp/>GLfloat<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glFogf<sp/>%s<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(pname),<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>dllFogf(pname,<sp/>param);</highlight></codeline>
<codeline lineno="523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logFogfv(GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glFogfv<sp/>%s<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>dllFogfv(pname,<sp/>params);</highlight></codeline>
<codeline lineno="529"><highlight class="normal">}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logFogi(GLenum<sp/>pname,<sp/>GLint<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glFogi<sp/>%s<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(pname),<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>dllFogi(pname,<sp/>param);</highlight></codeline>
<codeline lineno="534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logFogiv(GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLint<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glFogiv<sp/>%s<sp/>&apos;const<sp/>GLint<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>dllFogiv(pname,<sp/>params);</highlight></codeline>
<codeline lineno="540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logFrontFace(GLenum<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glFrontFace<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(mode)<sp/>);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>dllFrontFace(mode);</highlight></codeline>
<codeline lineno="545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logFrustum(GLdouble<sp/>left,<sp/>GLdouble<sp/>right,<sp/>GLdouble<sp/>bottom,<sp/>GLdouble<sp/>top,<sp/>GLdouble<sp/>zNear,<sp/>GLdouble<sp/>zFar)<sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glFrustum<sp/>%g<sp/>%g<sp/>%g<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>left,<sp/>right,<sp/>bottom,<sp/>top,<sp/>zNear,<sp/>zFar<sp/>);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>dllFrustum(left,<sp/>right,<sp/>bottom,<sp/>top,<sp/>zNear,<sp/>zFar);</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GLuint<sp/>APIENTRY<sp/>logGenLists(GLsizei<sp/>range)<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGenLists<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>range<sp/>);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dllGenLists(range);</highlight></codeline>
<codeline lineno="555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logGenTextures(GLsizei<sp/>n,<sp/>GLuint<sp/>*textures)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLuint<sp/>*&quot;<sp/>name:<sp/>&quot;textures&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGenTextures<sp/>%d<sp/>&apos;GLuint<sp/>*<sp/>textures&apos;\n&quot;</highlight><highlight class="normal">,<sp/>n<sp/>);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>dllGenTextures(n,<sp/>textures);</highlight></codeline>
<codeline lineno="561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logGetBooleanv(GLenum<sp/>pname,<sp/>GLboolean<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLboolean<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGetBooleanv<sp/>%s<sp/>&apos;GLboolean<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>dllGetBooleanv(pname,<sp/>params);</highlight></codeline>
<codeline lineno="567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logGetClipPlane(GLenum<sp/>plane,<sp/>GLdouble<sp/>*equation)<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLdouble<sp/>*&quot;<sp/>name:<sp/>&quot;equation&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGetClipPlane<sp/>%s<sp/>&apos;GLdouble<sp/>*<sp/>equation&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(plane)<sp/>);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>dllGetClipPlane(plane,<sp/>equation);</highlight></codeline>
<codeline lineno="573"><highlight class="normal">}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logGetDoublev(GLenum<sp/>pname,<sp/>GLdouble<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLdouble<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGetDoublev<sp/>%s<sp/>&apos;GLdouble<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>dllGetDoublev(pname,<sp/>params);</highlight></codeline>
<codeline lineno="579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GLenum<sp/>APIENTRY<sp/>logGetError(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGetError\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dllGetError();</highlight></codeline>
<codeline lineno="584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logGetFloatv(GLenum<sp/>pname,<sp/>GLfloat<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGetFloatv<sp/>%s<sp/>&apos;GLfloat<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>dllGetFloatv(pname,<sp/>params);</highlight></codeline>
<codeline lineno="590"><highlight class="normal">}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logGetIntegerv(GLenum<sp/>pname,<sp/>GLint<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLint<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGetIntegerv<sp/>%s<sp/>&apos;GLint<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>dllGetIntegerv(pname,<sp/>params);</highlight></codeline>
<codeline lineno="596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logGetLightfv(GLenum<sp/>light,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGetLightfv<sp/>%s<sp/>%s<sp/>&apos;GLfloat<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(light),<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>dllGetLightfv(light,<sp/>pname,<sp/>params);</highlight></codeline>
<codeline lineno="602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logGetLightiv(GLenum<sp/>light,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLint<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGetLightiv<sp/>%s<sp/>%s<sp/>&apos;GLint<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(light),<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>dllGetLightiv(light,<sp/>pname,<sp/>params);</highlight></codeline>
<codeline lineno="608"><highlight class="normal">}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logGetMapdv(GLenum<sp/>target,<sp/>GLenum<sp/>query,<sp/>GLdouble<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLdouble<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGetMapdv<sp/>%s<sp/>%s<sp/>&apos;GLdouble<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>EnumString(query)<sp/>);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>dllGetMapdv(target,<sp/>query,<sp/>v);</highlight></codeline>
<codeline lineno="614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logGetMapfv(GLenum<sp/>target,<sp/>GLenum<sp/>query,<sp/>GLfloat<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGetMapfv<sp/>%s<sp/>%s<sp/>&apos;GLfloat<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>EnumString(query)<sp/>);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>dllGetMapfv(target,<sp/>query,<sp/>v);</highlight></codeline>
<codeline lineno="620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logGetMapiv(GLenum<sp/>target,<sp/>GLenum<sp/>query,<sp/>GLint<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLint<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGetMapiv<sp/>%s<sp/>%s<sp/>&apos;GLint<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>EnumString(query)<sp/>);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>dllGetMapiv(target,<sp/>query,<sp/>v);</highlight></codeline>
<codeline lineno="626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logGetMaterialfv(GLenum<sp/>face,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGetMaterialfv<sp/>%s<sp/>%s<sp/>&apos;GLfloat<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(face),<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>dllGetMaterialfv(face,<sp/>pname,<sp/>params);</highlight></codeline>
<codeline lineno="632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logGetMaterialiv(GLenum<sp/>face,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLint<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGetMaterialiv<sp/>%s<sp/>%s<sp/>&apos;GLint<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(face),<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>dllGetMaterialiv(face,<sp/>pname,<sp/>params);</highlight></codeline>
<codeline lineno="638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logGetPixelMapfv(GLenum<sp/>map,<sp/>GLfloat<sp/>*values)<sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;values&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGetPixelMapfv<sp/>%s<sp/>&apos;GLfloat<sp/>*<sp/>values&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(map)<sp/>);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>dllGetPixelMapfv(map,<sp/>values);</highlight></codeline>
<codeline lineno="644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logGetPixelMapuiv(GLenum<sp/>map,<sp/>GLuint<sp/>*values)<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLuint<sp/>*&quot;<sp/>name:<sp/>&quot;values&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGetPixelMapuiv<sp/>%s<sp/>&apos;GLuint<sp/>*<sp/>values&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(map)<sp/>);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>dllGetPixelMapuiv(map,<sp/>values);</highlight></codeline>
<codeline lineno="650"><highlight class="normal">}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logGetPixelMapusv(GLenum<sp/>map,<sp/>GLushort<sp/>*values)<sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLushort<sp/>*&quot;<sp/>name:<sp/>&quot;values&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGetPixelMapusv<sp/>%s<sp/>&apos;GLushort<sp/>*<sp/>values&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(map)<sp/>);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>dllGetPixelMapusv(map,<sp/>values);</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logGetPointerv(GLenum<sp/>pname,<sp/>GLvoid*<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLvoid*<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGetPointerv<sp/>%s<sp/>&apos;GLvoid*<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>dllGetPointerv(pname,<sp/>params);</highlight></codeline>
<codeline lineno="662"><highlight class="normal">}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logGetPolygonStipple(GLubyte<sp/>*mask)<sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLubyte<sp/>*&quot;<sp/>name:<sp/>&quot;mask&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGetPolygonStipple<sp/>&apos;GLubyte<sp/>*<sp/>mask&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>dllGetPolygonStipple(mask);</highlight></codeline>
<codeline lineno="668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLubyte<sp/>*<sp/>APIENTRY<sp/>logGetString(GLenum<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGetString<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(name)<sp/>);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dllGetString(name);</highlight></codeline>
<codeline lineno="673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logGetTexEnvfv(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGetTexEnvfv<sp/>%s<sp/>%s<sp/>&apos;GLfloat<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>dllGetTexEnvfv(target,<sp/>pname,<sp/>params);</highlight></codeline>
<codeline lineno="679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logGetTexEnviv(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLint<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGetTexEnviv<sp/>%s<sp/>%s<sp/>&apos;GLint<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>dllGetTexEnviv(target,<sp/>pname,<sp/>params);</highlight></codeline>
<codeline lineno="685"><highlight class="normal">}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logGetTexGendv(GLenum<sp/>coord,<sp/>GLenum<sp/>pname,<sp/>GLdouble<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLdouble<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGetTexGendv<sp/>%s<sp/>%s<sp/>&apos;GLdouble<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(coord),<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>dllGetTexGendv(coord,<sp/>pname,<sp/>params);</highlight></codeline>
<codeline lineno="691"><highlight class="normal">}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logGetTexGenfv(GLenum<sp/>coord,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGetTexGenfv<sp/>%s<sp/>%s<sp/>&apos;GLfloat<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(coord),<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>dllGetTexGenfv(coord,<sp/>pname,<sp/>params);</highlight></codeline>
<codeline lineno="697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logGetTexGeniv(GLenum<sp/>coord,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLint<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGetTexGeniv<sp/>%s<sp/>%s<sp/>&apos;GLint<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(coord),<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>dllGetTexGeniv(coord,<sp/>pname,<sp/>params);</highlight></codeline>
<codeline lineno="703"><highlight class="normal">}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logGetTexImage(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLenum<sp/>format,<sp/>GLenum<sp/>type,<sp/>GLvoid<sp/>*pixels)<sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLvoid<sp/>*&quot;<sp/>name:<sp/>&quot;pixels&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGetTexImage<sp/>%s<sp/>%d<sp/>%s<sp/>%s<sp/>&apos;GLvoid<sp/>*<sp/>pixels&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>level,<sp/>EnumString(format),<sp/>EnumString(type)<sp/>);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>dllGetTexImage(target,<sp/>level,<sp/>format,<sp/>type,<sp/>pixels);</highlight></codeline>
<codeline lineno="709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logGetTexLevelParameterfv(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGetTexLevelParameterfv<sp/>%s<sp/>%d<sp/>%s<sp/>&apos;GLfloat<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>level,<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>dllGetTexLevelParameterfv(target,<sp/>level,<sp/>pname,<sp/>params);</highlight></codeline>
<codeline lineno="715"><highlight class="normal">}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logGetTexLevelParameteriv(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLint<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGetTexLevelParameteriv<sp/>%s<sp/>%d<sp/>%s<sp/>&apos;GLint<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>level,<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>dllGetTexLevelParameteriv(target,<sp/>level,<sp/>pname,<sp/>params);</highlight></codeline>
<codeline lineno="721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logGetTexParameterfv(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGetTexParameterfv<sp/>%s<sp/>%s<sp/>&apos;GLfloat<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>dllGetTexParameterfv(target,<sp/>pname,<sp/>params);</highlight></codeline>
<codeline lineno="727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logGetTexParameteriv(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLint<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glGetTexParameteriv<sp/>%s<sp/>%s<sp/>&apos;GLint<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>dllGetTexParameteriv(target,<sp/>pname,<sp/>params);</highlight></codeline>
<codeline lineno="733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logHint(GLenum<sp/>target,<sp/>GLenum<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glHint<sp/>%s<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>EnumString(mode)<sp/>);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>dllHint(target,<sp/>mode);</highlight></codeline>
<codeline lineno="738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logIndexMask(GLuint<sp/>mask)<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glIndexMask<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>mask<sp/>);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>dllIndexMask(mask);</highlight></codeline>
<codeline lineno="743"><highlight class="normal">}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logIndexPointer(GLenum<sp/>type,<sp/>GLsizei<sp/>stride,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pointer)<sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLvoid<sp/>*&quot;<sp/>name:<sp/>&quot;pointer&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glIndexPointer<sp/>%s<sp/>%d<sp/>&apos;const<sp/>GLvoid<sp/>*<sp/>pointer&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(type),<sp/>stride<sp/>);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>dllIndexPointer(type,<sp/>stride,<sp/>pointer);</highlight></codeline>
<codeline lineno="749"><highlight class="normal">}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logIndexd(GLdouble<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glIndexd<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>c<sp/>);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>dllIndexd(c);</highlight></codeline>
<codeline lineno="754"><highlight class="normal">}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logIndexdv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*c)<sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLdouble<sp/>*&quot;<sp/>name:<sp/>&quot;c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glIndexdv<sp/>&apos;const<sp/>GLdouble<sp/>*<sp/>c&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>dllIndexdv(c);</highlight></codeline>
<codeline lineno="760"><highlight class="normal">}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logIndexf(GLfloat<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glIndexf<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>c<sp/>);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>dllIndexf(c);</highlight></codeline>
<codeline lineno="765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logIndexfv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*c)<sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glIndexfv<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>c&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>dllIndexfv(c);</highlight></codeline>
<codeline lineno="771"><highlight class="normal">}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logIndexi(GLint<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glIndexi<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>c<sp/>);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>dllIndexi(c);</highlight></codeline>
<codeline lineno="776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logIndexiv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*c)<sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLint<sp/>*&quot;<sp/>name:<sp/>&quot;c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glIndexiv<sp/>&apos;const<sp/>GLint<sp/>*<sp/>c&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>dllIndexiv(c);</highlight></codeline>
<codeline lineno="782"><highlight class="normal">}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logIndexs(GLshort<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glIndexs<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>c<sp/>);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>dllIndexs(c);</highlight></codeline>
<codeline lineno="787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logIndexsv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*c)<sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLshort<sp/>*&quot;<sp/>name:<sp/>&quot;c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glIndexsv<sp/>&apos;const<sp/>GLshort<sp/>*<sp/>c&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>dllIndexsv(c);</highlight></codeline>
<codeline lineno="793"><highlight class="normal">}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logIndexub(GLubyte<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glIndexub<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>c<sp/>);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>dllIndexub(c);</highlight></codeline>
<codeline lineno="798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logIndexubv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLubyte<sp/>*c)<sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLubyte<sp/>*&quot;<sp/>name:<sp/>&quot;c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glIndexubv<sp/>&apos;const<sp/>GLubyte<sp/>*<sp/>c&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>dllIndexubv(c);</highlight></codeline>
<codeline lineno="804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logInitNames(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glInitNames\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>dllInitNames();</highlight></codeline>
<codeline lineno="809"><highlight class="normal">}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logInterleavedArrays(GLenum<sp/>format,<sp/>GLsizei<sp/>stride,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pointer)<sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLvoid<sp/>*&quot;<sp/>name:<sp/>&quot;pointer&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glInterleavedArrays<sp/>%s<sp/>%d<sp/>&apos;const<sp/>GLvoid<sp/>*<sp/>pointer&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(format),<sp/>stride<sp/>);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>dllInterleavedArrays(format,<sp/>stride,<sp/>pointer);</highlight></codeline>
<codeline lineno="815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GLboolean<sp/>APIENTRY<sp/>logIsEnabled(GLenum<sp/>cap)<sp/>{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glIsEnabled<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(cap)<sp/>);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dllIsEnabled(cap);</highlight></codeline>
<codeline lineno="820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GLboolean<sp/>APIENTRY<sp/>logIsList(GLuint<sp/>list)<sp/>{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glIsList<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>list<sp/>);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dllIsList(list);</highlight></codeline>
<codeline lineno="825"><highlight class="normal">}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GLboolean<sp/>APIENTRY<sp/>logIsTexture(GLuint<sp/>texture)<sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glIsTexture<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>texture<sp/>);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dllIsTexture(texture);</highlight></codeline>
<codeline lineno="830"><highlight class="normal">}</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logLightModelf(GLenum<sp/>pname,<sp/>GLfloat<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glLightModelf<sp/>%s<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(pname),<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>dllLightModelf(pname,<sp/>param);</highlight></codeline>
<codeline lineno="835"><highlight class="normal">}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logLightModelfv(GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glLightModelfv<sp/>%s<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>dllLightModelfv(pname,<sp/>params);</highlight></codeline>
<codeline lineno="841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logLightModeli(GLenum<sp/>pname,<sp/>GLint<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glLightModeli<sp/>%s<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(pname),<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>dllLightModeli(pname,<sp/>param);</highlight></codeline>
<codeline lineno="846"><highlight class="normal">}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logLightModeliv(GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLint<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glLightModeliv<sp/>%s<sp/>&apos;const<sp/>GLint<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>dllLightModeliv(pname,<sp/>params);</highlight></codeline>
<codeline lineno="852"><highlight class="normal">}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logLightf(GLenum<sp/>light,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glLightf<sp/>%s<sp/>%s<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(light),<sp/>EnumString(pname),<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>dllLightf(light,<sp/>pname,<sp/>param);</highlight></codeline>
<codeline lineno="857"><highlight class="normal">}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logLightfv(GLenum<sp/>light,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glLightfv<sp/>%s<sp/>%s<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(light),<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>dllLightfv(light,<sp/>pname,<sp/>params);</highlight></codeline>
<codeline lineno="863"><highlight class="normal">}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logLighti(GLenum<sp/>light,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glLighti<sp/>%s<sp/>%s<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(light),<sp/>EnumString(pname),<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>dllLighti(light,<sp/>pname,<sp/>param);</highlight></codeline>
<codeline lineno="868"><highlight class="normal">}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logLightiv(GLenum<sp/>light,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLint<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glLightiv<sp/>%s<sp/>%s<sp/>&apos;const<sp/>GLint<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(light),<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>dllLightiv(light,<sp/>pname,<sp/>params);</highlight></codeline>
<codeline lineno="874"><highlight class="normal">}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logLineStipple(GLint<sp/>factor,<sp/>GLushort<sp/>pattern)<sp/>{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glLineStipple<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>factor,<sp/>pattern<sp/>);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>dllLineStipple(factor,<sp/>pattern);</highlight></codeline>
<codeline lineno="879"><highlight class="normal">}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logLineWidth(GLfloat<sp/>width)<sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glLineWidth<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>width<sp/>);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>dllLineWidth(width);</highlight></codeline>
<codeline lineno="884"><highlight class="normal">}</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logListBase(GLuint<sp/>base)<sp/>{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glListBase<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>base<sp/>);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>dllListBase(base);</highlight></codeline>
<codeline lineno="889"><highlight class="normal">}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logLoadIdentity(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glLoadIdentity\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>dllLoadIdentity();</highlight></codeline>
<codeline lineno="894"><highlight class="normal">}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logLoadMatrixd(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLdouble<sp/>*&quot;<sp/>name:<sp/>&quot;m&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glLoadMatrixd<sp/>&apos;const<sp/>GLdouble<sp/>*<sp/>m&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>dllLoadMatrixd(m);</highlight></codeline>
<codeline lineno="900"><highlight class="normal">}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logLoadMatrixf(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;m&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glLoadMatrixf<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>m&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>dllLoadMatrixf(m);</highlight></codeline>
<codeline lineno="906"><highlight class="normal">}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logLoadName(GLuint<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glLoadName<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>name<sp/>);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>dllLoadName(name);</highlight></codeline>
<codeline lineno="911"><highlight class="normal">}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logLogicOp(GLenum<sp/>opcode)<sp/>{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glLogicOp<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(opcode)<sp/>);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>dllLogicOp(opcode);</highlight></codeline>
<codeline lineno="916"><highlight class="normal">}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logMap1d(GLenum<sp/>target,<sp/>GLdouble<sp/>u1,<sp/>GLdouble<sp/>u2,<sp/>GLint<sp/>stride,<sp/>GLint<sp/>order,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*points)<sp/>{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLdouble<sp/>*&quot;<sp/>name:<sp/>&quot;points&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glMap1d<sp/>%s<sp/>%g<sp/>%g<sp/>%d<sp/>%d<sp/>&apos;const<sp/>GLdouble<sp/>*<sp/>points&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>u1,<sp/>u2,<sp/>stride,<sp/>order<sp/>);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>dllMap1d(target,<sp/>u1,<sp/>u2,<sp/>stride,<sp/>order,<sp/>points);</highlight></codeline>
<codeline lineno="922"><highlight class="normal">}</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logMap1f(GLenum<sp/>target,<sp/>GLfloat<sp/>u1,<sp/>GLfloat<sp/>u2,<sp/>GLint<sp/>stride,<sp/>GLint<sp/>order,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*points)<sp/>{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;points&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glMap1f<sp/>%s<sp/>%g<sp/>%g<sp/>%d<sp/>%d<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>points&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>u1,<sp/>u2,<sp/>stride,<sp/>order<sp/>);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>dllMap1f(target,<sp/>u1,<sp/>u2,<sp/>stride,<sp/>order,<sp/>points);</highlight></codeline>
<codeline lineno="928"><highlight class="normal">}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logMap2d(GLenum<sp/>target,<sp/>GLdouble<sp/>u1,<sp/>GLdouble<sp/>u2,<sp/>GLint<sp/>ustride,<sp/>GLint<sp/>uorder,<sp/>GLdouble<sp/>v1,<sp/>GLdouble<sp/>v2,<sp/>GLint<sp/>vstride,<sp/>GLint<sp/>vorder,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*points)<sp/>{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLdouble<sp/>*&quot;<sp/>name:<sp/>&quot;points&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glMap2d<sp/>%s<sp/>%g<sp/>%g<sp/>%d<sp/>%d<sp/>%g<sp/>%g<sp/>%d<sp/>%d<sp/>&apos;const<sp/>GLdouble<sp/>*<sp/>points&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>u1,<sp/>u2,<sp/>ustride,<sp/>uorder,<sp/>v1,<sp/>v2,<sp/>vstride,<sp/>vorder<sp/>);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>dllMap2d(target,<sp/>u1,<sp/>u2,<sp/>ustride,<sp/>uorder,<sp/>v1,<sp/>v2,<sp/>vstride,<sp/>vorder,<sp/>points);</highlight></codeline>
<codeline lineno="934"><highlight class="normal">}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logMap2f(GLenum<sp/>target,<sp/>GLfloat<sp/>u1,<sp/>GLfloat<sp/>u2,<sp/>GLint<sp/>ustride,<sp/>GLint<sp/>uorder,<sp/>GLfloat<sp/>v1,<sp/>GLfloat<sp/>v2,<sp/>GLint<sp/>vstride,<sp/>GLint<sp/>vorder,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*points)<sp/>{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;points&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glMap2f<sp/>%s<sp/>%g<sp/>%g<sp/>%d<sp/>%d<sp/>%g<sp/>%g<sp/>%d<sp/>%d<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>points&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>u1,<sp/>u2,<sp/>ustride,<sp/>uorder,<sp/>v1,<sp/>v2,<sp/>vstride,<sp/>vorder<sp/>);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>dllMap2f(target,<sp/>u1,<sp/>u2,<sp/>ustride,<sp/>uorder,<sp/>v1,<sp/>v2,<sp/>vstride,<sp/>vorder,<sp/>points);</highlight></codeline>
<codeline lineno="940"><highlight class="normal">}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logMapGrid1d(GLint<sp/>un,<sp/>GLdouble<sp/>u1,<sp/>GLdouble<sp/>u2)<sp/>{</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glMapGrid1d<sp/>%d<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>un,<sp/>u1,<sp/>u2<sp/>);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>dllMapGrid1d(un,<sp/>u1,<sp/>u2);</highlight></codeline>
<codeline lineno="945"><highlight class="normal">}</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logMapGrid1f(GLint<sp/>un,<sp/>GLfloat<sp/>u1,<sp/>GLfloat<sp/>u2)<sp/>{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glMapGrid1f<sp/>%d<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>un,<sp/>u1,<sp/>u2<sp/>);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/>dllMapGrid1f(un,<sp/>u1,<sp/>u2);</highlight></codeline>
<codeline lineno="950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logMapGrid2d(GLint<sp/>un,<sp/>GLdouble<sp/>u1,<sp/>GLdouble<sp/>u2,<sp/>GLint<sp/>vn,<sp/>GLdouble<sp/>v1,<sp/>GLdouble<sp/>v2)<sp/>{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glMapGrid2d<sp/>%d<sp/>%g<sp/>%g<sp/>%d<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>un,<sp/>u1,<sp/>u2,<sp/>vn,<sp/>v1,<sp/>v2<sp/>);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>dllMapGrid2d(un,<sp/>u1,<sp/>u2,<sp/>vn,<sp/>v1,<sp/>v2);</highlight></codeline>
<codeline lineno="955"><highlight class="normal">}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logMapGrid2f(GLint<sp/>un,<sp/>GLfloat<sp/>u1,<sp/>GLfloat<sp/>u2,<sp/>GLint<sp/>vn,<sp/>GLfloat<sp/>v1,<sp/>GLfloat<sp/>v2)<sp/>{</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glMapGrid2f<sp/>%d<sp/>%g<sp/>%g<sp/>%d<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>un,<sp/>u1,<sp/>u2,<sp/>vn,<sp/>v1,<sp/>v2<sp/>);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/>dllMapGrid2f(un,<sp/>u1,<sp/>u2,<sp/>vn,<sp/>v1,<sp/>v2);</highlight></codeline>
<codeline lineno="960"><highlight class="normal">}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logMaterialf(GLenum<sp/>face,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glMaterialf<sp/>%s<sp/>%s<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(face),<sp/>EnumString(pname),<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>dllMaterialf(face,<sp/>pname,<sp/>param);</highlight></codeline>
<codeline lineno="965"><highlight class="normal">}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logMaterialfv(GLenum<sp/>face,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glMaterialfv<sp/>%s<sp/>%s<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(face),<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>dllMaterialfv(face,<sp/>pname,<sp/>params);</highlight></codeline>
<codeline lineno="971"><highlight class="normal">}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logMateriali(GLenum<sp/>face,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glMateriali<sp/>%s<sp/>%s<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(face),<sp/>EnumString(pname),<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>dllMateriali(face,<sp/>pname,<sp/>param);</highlight></codeline>
<codeline lineno="976"><highlight class="normal">}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logMaterialiv(GLenum<sp/>face,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLint<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glMaterialiv<sp/>%s<sp/>%s<sp/>&apos;const<sp/>GLint<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(face),<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/>dllMaterialiv(face,<sp/>pname,<sp/>params);</highlight></codeline>
<codeline lineno="982"><highlight class="normal">}</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logMatrixMode(GLenum<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glMatrixMode<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(mode)<sp/>);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>dllMatrixMode(mode);</highlight></codeline>
<codeline lineno="987"><highlight class="normal">}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logMultMatrixd(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLdouble<sp/>*&quot;<sp/>name:<sp/>&quot;m&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glMultMatrixd<sp/>&apos;const<sp/>GLdouble<sp/>*<sp/>m&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>dllMultMatrixd(m);</highlight></codeline>
<codeline lineno="993"><highlight class="normal">}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logMultMatrixf(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;m&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glMultMatrixf<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>m&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>dllMultMatrixf(m);</highlight></codeline>
<codeline lineno="999"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logNewList(GLuint<sp/>list,<sp/>GLenum<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glNewList<sp/>%d<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>list,<sp/>EnumString(mode)<sp/>);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>dllNewList(list,<sp/>mode);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logNormal3b(GLbyte<sp/>nx,<sp/>GLbyte<sp/>ny,<sp/>GLbyte<sp/>nz)<sp/>{</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glNormal3b<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>nx,<sp/>ny,<sp/>nz<sp/>);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>dllNormal3b(nx,<sp/>ny,<sp/>nz);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logNormal3bv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLbyte<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLbyte<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glNormal3bv<sp/>&apos;const<sp/>GLbyte<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>dllNormal3bv(v);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logNormal3d(GLdouble<sp/>nx,<sp/>GLdouble<sp/>ny,<sp/>GLdouble<sp/>nz)<sp/>{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glNormal3d<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>nx,<sp/>ny,<sp/>nz<sp/>);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>dllNormal3d(nx,<sp/>ny,<sp/>nz);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logNormal3dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLdouble<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glNormal3dv<sp/>&apos;const<sp/>GLdouble<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>dllNormal3dv(v);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logNormal3f(GLfloat<sp/>nx,<sp/>GLfloat<sp/>ny,<sp/>GLfloat<sp/>nz)<sp/>{</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glNormal3f<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>nx,<sp/>ny,<sp/>nz<sp/>);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/>dllNormal3f(nx,<sp/>ny,<sp/>nz);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logNormal3fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glNormal3fv<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/>dllNormal3fv(v);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logNormal3i(GLint<sp/>nx,<sp/>GLint<sp/>ny,<sp/>GLint<sp/>nz)<sp/>{</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glNormal3i<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>nx,<sp/>ny,<sp/>nz<sp/>);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>dllNormal3i(nx,<sp/>ny,<sp/>nz);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logNormal3iv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLint<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glNormal3iv<sp/>&apos;const<sp/>GLint<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>dllNormal3iv(v);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logNormal3s(GLshort<sp/>nx,<sp/>GLshort<sp/>ny,<sp/>GLshort<sp/>nz)<sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glNormal3s<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>nx,<sp/>ny,<sp/>nz<sp/>);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>dllNormal3s(nx,<sp/>ny,<sp/>nz);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logNormal3sv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLshort<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glNormal3sv<sp/>&apos;const<sp/>GLshort<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>dllNormal3sv(v);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logNormalPointer(GLenum<sp/>type,<sp/>GLsizei<sp/>stride,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pointer)<sp/>{</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLvoid<sp/>*&quot;<sp/>name:<sp/>&quot;pointer&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glNormalPointer<sp/>%s<sp/>%d<sp/>&apos;const<sp/>GLvoid<sp/>*<sp/>pointer&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(type),<sp/>stride<sp/>);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>dllNormalPointer(type,<sp/>stride,<sp/>pointer);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logOrtho(GLdouble<sp/>left,<sp/>GLdouble<sp/>right,<sp/>GLdouble<sp/>bottom,<sp/>GLdouble<sp/>top,<sp/>GLdouble<sp/>zNear,<sp/>GLdouble<sp/>zFar)<sp/>{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glOrtho<sp/>%g<sp/>%g<sp/>%g<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>left,<sp/>right,<sp/>bottom,<sp/>top,<sp/>zNear,<sp/>zFar<sp/>);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>dllOrtho(left,<sp/>right,<sp/>bottom,<sp/>top,<sp/>zNear,<sp/>zFar);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logPassThrough(GLfloat<sp/>token)<sp/>{</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glPassThrough<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>token<sp/>);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>dllPassThrough(token);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logPixelMapfv(GLenum<sp/>map,<sp/>GLsizei<sp/>mapsize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*values)<sp/>{</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;values&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glPixelMapfv<sp/>%s<sp/>%d<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>values&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(map),<sp/>mapsize<sp/>);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/>dllPixelMapfv(map,<sp/>mapsize,<sp/>values);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logPixelMapuiv(GLenum<sp/>map,<sp/>GLsizei<sp/>mapsize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLuint<sp/>*values)<sp/>{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLuint<sp/>*&quot;<sp/>name:<sp/>&quot;values&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glPixelMapuiv<sp/>%s<sp/>%d<sp/>&apos;const<sp/>GLuint<sp/>*<sp/>values&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(map),<sp/>mapsize<sp/>);</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>dllPixelMapuiv(map,<sp/>mapsize,<sp/>values);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logPixelMapusv(GLenum<sp/>map,<sp/>GLsizei<sp/>mapsize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLushort<sp/>*values)<sp/>{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLushort<sp/>*&quot;<sp/>name:<sp/>&quot;values&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glPixelMapusv<sp/>%s<sp/>%d<sp/>&apos;const<sp/>GLushort<sp/>*<sp/>values&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(map),<sp/>mapsize<sp/>);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>dllPixelMapusv(map,<sp/>mapsize,<sp/>values);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logPixelStoref(GLenum<sp/>pname,<sp/>GLfloat<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glPixelStoref<sp/>%s<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(pname),<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>dllPixelStoref(pname,<sp/>param);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logPixelStorei(GLenum<sp/>pname,<sp/>GLint<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glPixelStorei<sp/>%s<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(pname),<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/>dllPixelStorei(pname,<sp/>param);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logPixelTransferf(GLenum<sp/>pname,<sp/>GLfloat<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glPixelTransferf<sp/>%s<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(pname),<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>dllPixelTransferf(pname,<sp/>param);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logPixelTransferi(GLenum<sp/>pname,<sp/>GLint<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glPixelTransferi<sp/>%s<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(pname),<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/>dllPixelTransferi(pname,<sp/>param);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logPixelZoom(GLfloat<sp/>xfactor,<sp/>GLfloat<sp/>yfactor)<sp/>{</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glPixelZoom<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>xfactor,<sp/>yfactor<sp/>);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>dllPixelZoom(xfactor,<sp/>yfactor);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logPointSize(GLfloat<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glPointSize<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>size<sp/>);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/>dllPointSize(size);</highlight></codeline>
<codeline lineno="1123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logPolygonMode(GLenum<sp/>face,<sp/>GLenum<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glPolygonMode<sp/>%s<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(face),<sp/>EnumString(mode)<sp/>);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/>dllPolygonMode(face,<sp/>mode);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logPolygonOffset(GLfloat<sp/>factor,<sp/>GLfloat<sp/>units)<sp/>{</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glPolygonOffset<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>factor,<sp/>units<sp/>);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>dllPolygonOffset(factor,<sp/>units);</highlight></codeline>
<codeline lineno="1133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logPolygonStipple(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLubyte<sp/>*mask)<sp/>{</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLubyte<sp/>*&quot;<sp/>name:<sp/>&quot;mask&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glPolygonStipple<sp/>&apos;const<sp/>GLubyte<sp/>*<sp/>mask&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/>dllPolygonStipple(mask);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logPopAttrib(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glPopAttrib\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>dllPopAttrib();</highlight></codeline>
<codeline lineno="1144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logPopClientAttrib(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glPopClientAttrib\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>dllPopClientAttrib();</highlight></codeline>
<codeline lineno="1149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logPopMatrix(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glPopMatrix\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/>dllPopMatrix();</highlight></codeline>
<codeline lineno="1154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logPopName(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glPopName\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/>dllPopName();</highlight></codeline>
<codeline lineno="1159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logPrioritizeTextures(GLsizei<sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLuint<sp/>*textures,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLclampf<sp/>*priorities)<sp/>{</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLuint<sp/>*&quot;<sp/>name:<sp/>&quot;textures&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLclampf<sp/>*&quot;<sp/>name:<sp/>&quot;priorities&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glPrioritizeTextures<sp/>%d<sp/>&apos;const<sp/>GLuint<sp/>*<sp/>textures&apos;<sp/>&apos;const<sp/>GLclampf<sp/>*<sp/>priorities&apos;\n&quot;</highlight><highlight class="normal">,<sp/>n<sp/>);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/>dllPrioritizeTextures(n,<sp/>textures,<sp/>priorities);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logPushAttrib(GLbitfield<sp/>mask)<sp/>{</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLbitfield&quot;<sp/>name:<sp/>&quot;mask&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glPushAttrib<sp/>&apos;GLbitfield<sp/>mask&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>dllPushAttrib(mask);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logPushClientAttrib(GLbitfield<sp/>mask)<sp/>{</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLbitfield&quot;<sp/>name:<sp/>&quot;mask&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glPushClientAttrib<sp/>&apos;GLbitfield<sp/>mask&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/>dllPushClientAttrib(mask);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logPushMatrix(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glPushMatrix\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>dllPushMatrix();</highlight></codeline>
<codeline lineno="1183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logPushName(GLuint<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glPushName<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>name<sp/>);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/>dllPushName(name);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRasterPos2d(GLdouble<sp/>x,<sp/>GLdouble<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRasterPos2d<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y<sp/>);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRasterPos2d(x,<sp/>y);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRasterPos2dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLdouble<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRasterPos2dv<sp/>&apos;const<sp/>GLdouble<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRasterPos2dv(v);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRasterPos2f(GLfloat<sp/>x,<sp/>GLfloat<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRasterPos2f<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y<sp/>);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRasterPos2f(x,<sp/>y);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRasterPos2fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRasterPos2fv<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRasterPos2fv(v);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRasterPos2i(GLint<sp/>x,<sp/>GLint<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRasterPos2i<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y<sp/>);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRasterPos2i(x,<sp/>y);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRasterPos2iv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLint<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRasterPos2iv<sp/>&apos;const<sp/>GLint<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRasterPos2iv(v);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRasterPos2s(GLshort<sp/>x,<sp/>GLshort<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRasterPos2s<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y<sp/>);</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRasterPos2s(x,<sp/>y);</highlight></codeline>
<codeline lineno="1226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRasterPos2sv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLshort<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRasterPos2sv<sp/>&apos;const<sp/>GLshort<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRasterPos2sv(v);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRasterPos3d(GLdouble<sp/>x,<sp/>GLdouble<sp/>y,<sp/>GLdouble<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRasterPos3d<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>z<sp/>);</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRasterPos3d(x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="1237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRasterPos3dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLdouble<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRasterPos3dv<sp/>&apos;const<sp/>GLdouble<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRasterPos3dv(v);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRasterPos3f(GLfloat<sp/>x,<sp/>GLfloat<sp/>y,<sp/>GLfloat<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRasterPos3f<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>z<sp/>);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRasterPos3f(x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRasterPos3fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRasterPos3fv<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRasterPos3fv(v);</highlight></codeline>
<codeline lineno="1254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRasterPos3i(GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLint<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRasterPos3i<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>z<sp/>);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRasterPos3i(x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRasterPos3iv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLint<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRasterPos3iv<sp/>&apos;const<sp/>GLint<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRasterPos3iv(v);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRasterPos3s(GLshort<sp/>x,<sp/>GLshort<sp/>y,<sp/>GLshort<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRasterPos3s<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>z<sp/>);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRasterPos3s(x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="1270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRasterPos3sv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLshort<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRasterPos3sv<sp/>&apos;const<sp/>GLshort<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRasterPos3sv(v);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRasterPos4d(GLdouble<sp/>x,<sp/>GLdouble<sp/>y,<sp/>GLdouble<sp/>z,<sp/>GLdouble<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRasterPos4d<sp/>%g<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>z,<sp/>w<sp/>);</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRasterPos4d(x,<sp/>y,<sp/>z,<sp/>w);</highlight></codeline>
<codeline lineno="1281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRasterPos4dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLdouble<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRasterPos4dv<sp/>&apos;const<sp/>GLdouble<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRasterPos4dv(v);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRasterPos4f(GLfloat<sp/>x,<sp/>GLfloat<sp/>y,<sp/>GLfloat<sp/>z,<sp/>GLfloat<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRasterPos4f<sp/>%g<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>z,<sp/>w<sp/>);</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRasterPos4f(x,<sp/>y,<sp/>z,<sp/>w);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRasterPos4fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRasterPos4fv<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRasterPos4fv(v);</highlight></codeline>
<codeline lineno="1298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRasterPos4i(GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLint<sp/>z,<sp/>GLint<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRasterPos4i<sp/>%d<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>z,<sp/>w<sp/>);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRasterPos4i(x,<sp/>y,<sp/>z,<sp/>w);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRasterPos4iv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLint<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRasterPos4iv<sp/>&apos;const<sp/>GLint<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRasterPos4iv(v);</highlight></codeline>
<codeline lineno="1309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRasterPos4s(GLshort<sp/>x,<sp/>GLshort<sp/>y,<sp/>GLshort<sp/>z,<sp/>GLshort<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRasterPos4s<sp/>%d<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>z,<sp/>w<sp/>);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRasterPos4s(x,<sp/>y,<sp/>z,<sp/>w);</highlight></codeline>
<codeline lineno="1314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRasterPos4sv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLshort<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRasterPos4sv<sp/>&apos;const<sp/>GLshort<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRasterPos4sv(v);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logReadBuffer(GLenum<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glReadBuffer<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(mode)<sp/>);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/>dllReadBuffer(mode);</highlight></codeline>
<codeline lineno="1325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logReadPixels(GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLsizei<sp/>width,<sp/>GLsizei<sp/>height,<sp/>GLenum<sp/>format,<sp/>GLenum<sp/>type,<sp/>GLvoid<sp/>*pixels)<sp/>{</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLvoid<sp/>*&quot;<sp/>name:<sp/>&quot;pixels&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glReadPixels<sp/>%d<sp/>%d<sp/>%d<sp/>%d<sp/>%s<sp/>%s<sp/>&apos;GLvoid<sp/>*<sp/>pixels&apos;\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>width,<sp/>height,<sp/>EnumString(format),<sp/>EnumString(type)<sp/>);</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/>dllReadPixels(x,<sp/>y,<sp/>width,<sp/>height,<sp/>format,<sp/>type,<sp/>pixels);</highlight></codeline>
<codeline lineno="1331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRectd(GLdouble<sp/>x1,<sp/>GLdouble<sp/>y1,<sp/>GLdouble<sp/>x2,<sp/>GLdouble<sp/>y2)<sp/>{</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRectd<sp/>%g<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>x1,<sp/>y1,<sp/>x2,<sp/>y2<sp/>);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRectd(x1,<sp/>y1,<sp/>x2,<sp/>y2);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRectdv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v2)<sp/>{</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLdouble<sp/>*&quot;<sp/>name:<sp/>&quot;v1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLdouble<sp/>*&quot;<sp/>name:<sp/>&quot;v2&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRectdv<sp/>&apos;const<sp/>GLdouble<sp/>*<sp/>v1&apos;<sp/>&apos;const<sp/>GLdouble<sp/>*<sp/>v2&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRectdv(v1,<sp/>v2);</highlight></codeline>
<codeline lineno="1343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRectf(GLfloat<sp/>x1,<sp/>GLfloat<sp/>y1,<sp/>GLfloat<sp/>x2,<sp/>GLfloat<sp/>y2)<sp/>{</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRectf<sp/>%g<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>x1,<sp/>y1,<sp/>x2,<sp/>y2<sp/>);</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRectf(x1,<sp/>y1,<sp/>x2,<sp/>y2);</highlight></codeline>
<codeline lineno="1348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRectfv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v2)<sp/>{</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;v1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;v2&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRectfv<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>v1&apos;<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>v2&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRectfv(v1,<sp/>v2);</highlight></codeline>
<codeline lineno="1355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRecti(GLint<sp/>x1,<sp/>GLint<sp/>y1,<sp/>GLint<sp/>x2,<sp/>GLint<sp/>y2)<sp/>{</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRecti<sp/>%d<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>x1,<sp/>y1,<sp/>x2,<sp/>y2<sp/>);</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRecti(x1,<sp/>y1,<sp/>x2,<sp/>y2);</highlight></codeline>
<codeline lineno="1360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRectiv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v2)<sp/>{</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLint<sp/>*&quot;<sp/>name:<sp/>&quot;v1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLint<sp/>*&quot;<sp/>name:<sp/>&quot;v2&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRectiv<sp/>&apos;const<sp/>GLint<sp/>*<sp/>v1&apos;<sp/>&apos;const<sp/>GLint<sp/>*<sp/>v2&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRectiv(v1,<sp/>v2);</highlight></codeline>
<codeline lineno="1367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRects(GLshort<sp/>x1,<sp/>GLshort<sp/>y1,<sp/>GLshort<sp/>x2,<sp/>GLshort<sp/>y2)<sp/>{</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRects<sp/>%d<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>x1,<sp/>y1,<sp/>x2,<sp/>y2<sp/>);</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRects(x1,<sp/>y1,<sp/>x2,<sp/>y2);</highlight></codeline>
<codeline lineno="1372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRectsv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v2)<sp/>{</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLshort<sp/>*&quot;<sp/>name:<sp/>&quot;v1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLshort<sp/>*&quot;<sp/>name:<sp/>&quot;v2&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRectsv<sp/>&apos;const<sp/>GLshort<sp/>*<sp/>v1&apos;<sp/>&apos;const<sp/>GLshort<sp/>*<sp/>v2&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRectsv(v1,<sp/>v2);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GLint<sp/>APIENTRY<sp/>logRenderMode(GLenum<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRenderMode<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(mode)<sp/>);</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dllRenderMode(mode);</highlight></codeline>
<codeline lineno="1384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRotated(GLdouble<sp/>angle,<sp/>GLdouble<sp/>x,<sp/>GLdouble<sp/>y,<sp/>GLdouble<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRotated<sp/>%g<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>angle,<sp/>x,<sp/>y,<sp/>z<sp/>);</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRotated(angle,<sp/>x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="1389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logRotatef(GLfloat<sp/>angle,<sp/>GLfloat<sp/>x,<sp/>GLfloat<sp/>y,<sp/>GLfloat<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glRotatef<sp/>%g<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>angle,<sp/>x,<sp/>y,<sp/>z<sp/>);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/>dllRotatef(angle,<sp/>x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="1394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logScaled(GLdouble<sp/>x,<sp/>GLdouble<sp/>y,<sp/>GLdouble<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glScaled<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>z<sp/>);</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/>dllScaled(x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="1399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logScalef(GLfloat<sp/>x,<sp/>GLfloat<sp/>y,<sp/>GLfloat<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glScalef<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>z<sp/>);</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/>dllScalef(x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="1404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logScissor(GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLsizei<sp/>width,<sp/>GLsizei<sp/>height)<sp/>{</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glScissor<sp/>%d<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>width,<sp/>height<sp/>);</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/>dllScissor(x,<sp/>y,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="1409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logSelectBuffer(GLsizei<sp/>size,<sp/>GLuint<sp/>*buffer)<sp/>{</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLuint<sp/>*&quot;<sp/>name:<sp/>&quot;buffer&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glSelectBuffer<sp/>%d<sp/>&apos;GLuint<sp/>*<sp/>buffer&apos;\n&quot;</highlight><highlight class="normal">,<sp/>size<sp/>);</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/>dllSelectBuffer(size,<sp/>buffer);</highlight></codeline>
<codeline lineno="1415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logShadeModel(GLenum<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glShadeModel<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(mode)<sp/>);</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/>dllShadeModel(mode);</highlight></codeline>
<codeline lineno="1420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logStencilFunc(GLenum<sp/>func,<sp/>GLint<sp/>ref,<sp/>GLuint<sp/>mask)<sp/>{</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glStencilFunc<sp/>%s<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(func),<sp/>ref,<sp/>mask<sp/>);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/>dllStencilFunc(func,<sp/>ref,<sp/>mask);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logStencilMask(GLuint<sp/>mask)<sp/>{</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glStencilMask<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>mask<sp/>);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/>dllStencilMask(mask);</highlight></codeline>
<codeline lineno="1430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logStencilOp(GLenum<sp/>fail,<sp/>GLenum<sp/>zfail,<sp/>GLenum<sp/>zpass)<sp/>{</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glStencilOp<sp/>%s<sp/>%s<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(fail),<sp/>EnumString(zfail),<sp/>EnumString(zpass)<sp/>);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/>dllStencilOp(fail,<sp/>zfail,<sp/>zpass);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord1d(GLdouble<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord1d<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord1d(s);</highlight></codeline>
<codeline lineno="1440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord1dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLdouble<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord1dv<sp/>&apos;const<sp/>GLdouble<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord1dv(v);</highlight></codeline>
<codeline lineno="1446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord1f(GLfloat<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord1f<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord1f(s);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord1fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord1fv<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord1fv(v);</highlight></codeline>
<codeline lineno="1457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord1i(GLint<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord1i<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord1i(s);</highlight></codeline>
<codeline lineno="1462"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord1iv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLint<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord1iv<sp/>&apos;const<sp/>GLint<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord1iv(v);</highlight></codeline>
<codeline lineno="1468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord1s(GLshort<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord1s<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord1s(s);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord1sv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLshort<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord1sv<sp/>&apos;const<sp/>GLshort<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord1sv(v);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord2d(GLdouble<sp/>s,<sp/>GLdouble<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord2d<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>s,<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord2d(s,<sp/>t);</highlight></codeline>
<codeline lineno="1484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord2dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLdouble<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord2dv<sp/>&apos;const<sp/>GLdouble<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord2dv(v);</highlight></codeline>
<codeline lineno="1490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord2f(GLfloat<sp/>s,<sp/>GLfloat<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord2f<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>s,<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord2f(s,<sp/>t);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord2fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord2fv<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord2fv(v);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord2i(GLint<sp/>s,<sp/>GLint<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord2i<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>s,<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord2i(s,<sp/>t);</highlight></codeline>
<codeline lineno="1506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord2iv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLint<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord2iv<sp/>&apos;const<sp/>GLint<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord2iv(v);</highlight></codeline>
<codeline lineno="1512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord2s(GLshort<sp/>s,<sp/>GLshort<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord2s<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>s,<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord2s(s,<sp/>t);</highlight></codeline>
<codeline lineno="1517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord2sv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLshort<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord2sv<sp/>&apos;const<sp/>GLshort<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord2sv(v);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord3d(GLdouble<sp/>s,<sp/>GLdouble<sp/>t,<sp/>GLdouble<sp/>r)<sp/>{</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord3d<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>s,<sp/>t,<sp/>r<sp/>);</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord3d(s,<sp/>t,<sp/>r);</highlight></codeline>
<codeline lineno="1528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord3dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLdouble<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord3dv<sp/>&apos;const<sp/>GLdouble<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord3dv(v);</highlight></codeline>
<codeline lineno="1534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord3f(GLfloat<sp/>s,<sp/>GLfloat<sp/>t,<sp/>GLfloat<sp/>r)<sp/>{</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord3f<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>s,<sp/>t,<sp/>r<sp/>);</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord3f(s,<sp/>t,<sp/>r);</highlight></codeline>
<codeline lineno="1539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord3fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord3fv<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord3fv(v);</highlight></codeline>
<codeline lineno="1545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord3i(GLint<sp/>s,<sp/>GLint<sp/>t,<sp/>GLint<sp/>r)<sp/>{</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord3i<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>s,<sp/>t,<sp/>r<sp/>);</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord3i(s,<sp/>t,<sp/>r);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord3iv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLint<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord3iv<sp/>&apos;const<sp/>GLint<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord3iv(v);</highlight></codeline>
<codeline lineno="1556"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord3s(GLshort<sp/>s,<sp/>GLshort<sp/>t,<sp/>GLshort<sp/>r)<sp/>{</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord3s<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>s,<sp/>t,<sp/>r<sp/>);</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord3s(s,<sp/>t,<sp/>r);</highlight></codeline>
<codeline lineno="1561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord3sv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLshort<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord3sv<sp/>&apos;const<sp/>GLshort<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord3sv(v);</highlight></codeline>
<codeline lineno="1567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord4d(GLdouble<sp/>s,<sp/>GLdouble<sp/>t,<sp/>GLdouble<sp/>r,<sp/>GLdouble<sp/>q)<sp/>{</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord4d<sp/>%g<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>s,<sp/>t,<sp/>r,<sp/>q<sp/>);</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord4d(s,<sp/>t,<sp/>r,<sp/>q);</highlight></codeline>
<codeline lineno="1572"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord4dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLdouble<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord4dv<sp/>&apos;const<sp/>GLdouble<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord4dv(v);</highlight></codeline>
<codeline lineno="1578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord4f(GLfloat<sp/>s,<sp/>GLfloat<sp/>t,<sp/>GLfloat<sp/>r,<sp/>GLfloat<sp/>q)<sp/>{</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord4f<sp/>%g<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>s,<sp/>t,<sp/>r,<sp/>q<sp/>);</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord4f(s,<sp/>t,<sp/>r,<sp/>q);</highlight></codeline>
<codeline lineno="1583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord4fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord4fv<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord4fv(v);</highlight></codeline>
<codeline lineno="1589"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord4i(GLint<sp/>s,<sp/>GLint<sp/>t,<sp/>GLint<sp/>r,<sp/>GLint<sp/>q)<sp/>{</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord4i<sp/>%d<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>s,<sp/>t,<sp/>r,<sp/>q<sp/>);</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord4i(s,<sp/>t,<sp/>r,<sp/>q);</highlight></codeline>
<codeline lineno="1594"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord4iv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLint<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord4iv<sp/>&apos;const<sp/>GLint<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord4iv(v);</highlight></codeline>
<codeline lineno="1600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord4s(GLshort<sp/>s,<sp/>GLshort<sp/>t,<sp/>GLshort<sp/>r,<sp/>GLshort<sp/>q)<sp/>{</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord4s<sp/>%d<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>s,<sp/>t,<sp/>r,<sp/>q<sp/>);</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord4s(s,<sp/>t,<sp/>r,<sp/>q);</highlight></codeline>
<codeline lineno="1605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoord4sv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLshort<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoord4sv<sp/>&apos;const<sp/>GLshort<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoord4sv(v);</highlight></codeline>
<codeline lineno="1611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexCoordPointer(GLint<sp/>size,<sp/>GLenum<sp/>type,<sp/>GLsizei<sp/>stride,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pointer)<sp/>{</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLvoid<sp/>*&quot;<sp/>name:<sp/>&quot;pointer&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexCoordPointer<sp/>%d<sp/>%s<sp/>%d<sp/>&apos;const<sp/>GLvoid<sp/>*<sp/>pointer&apos;\n&quot;</highlight><highlight class="normal">,<sp/>size,<sp/>EnumString(type),<sp/>stride<sp/>);</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexCoordPointer(size,<sp/>type,<sp/>stride,<sp/>pointer);</highlight></codeline>
<codeline lineno="1617"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexEnvf(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexEnvf<sp/>%s<sp/>%s<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>EnumString(pname),<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexEnvf(target,<sp/>pname,<sp/>param);</highlight></codeline>
<codeline lineno="1622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexEnvfv(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexEnvfv<sp/>%s<sp/>%s<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexEnvfv(target,<sp/>pname,<sp/>params);</highlight></codeline>
<codeline lineno="1628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexEnvi(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexEnvi<sp/>%s<sp/>%s<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>EnumString(pname),<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexEnvi(target,<sp/>pname,<sp/>param);</highlight></codeline>
<codeline lineno="1633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexEnviv(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLint<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexEnviv<sp/>%s<sp/>%s<sp/>&apos;const<sp/>GLint<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexEnviv(target,<sp/>pname,<sp/>params);</highlight></codeline>
<codeline lineno="1639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexGend(GLenum<sp/>coord,<sp/>GLenum<sp/>pname,<sp/>GLdouble<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexGend<sp/>%s<sp/>%s<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(coord),<sp/>EnumString(pname),<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexGend(coord,<sp/>pname,<sp/>param);</highlight></codeline>
<codeline lineno="1644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexGendv(GLenum<sp/>coord,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLdouble<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexGendv<sp/>%s<sp/>%s<sp/>&apos;const<sp/>GLdouble<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(coord),<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexGendv(coord,<sp/>pname,<sp/>params);</highlight></codeline>
<codeline lineno="1650"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexGenf(GLenum<sp/>coord,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexGenf<sp/>%s<sp/>%s<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(coord),<sp/>EnumString(pname),<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexGenf(coord,<sp/>pname,<sp/>param);</highlight></codeline>
<codeline lineno="1655"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexGenfv(GLenum<sp/>coord,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexGenfv<sp/>%s<sp/>%s<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(coord),<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexGenfv(coord,<sp/>pname,<sp/>params);</highlight></codeline>
<codeline lineno="1661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexGeni(GLenum<sp/>coord,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexGeni<sp/>%s<sp/>%s<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(coord),<sp/>EnumString(pname),<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexGeni(coord,<sp/>pname,<sp/>param);</highlight></codeline>
<codeline lineno="1666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexGeniv(GLenum<sp/>coord,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLint<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexGeniv<sp/>%s<sp/>%s<sp/>&apos;const<sp/>GLint<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(coord),<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexGeniv(coord,<sp/>pname,<sp/>params);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexImage1D(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLint<sp/>internalformat,<sp/>GLsizei<sp/>width,<sp/>GLint<sp/>border,<sp/>GLenum<sp/>format,<sp/>GLenum<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pixels)<sp/>{</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLvoid<sp/>*&quot;<sp/>name:<sp/>&quot;pixels&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexImage1D<sp/>%s<sp/>%d<sp/>%d<sp/>%d<sp/>%d<sp/>%s<sp/>%s<sp/>&apos;const<sp/>GLvoid<sp/>*<sp/>pixels&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>level,<sp/>internalformat,<sp/>width,<sp/>border,<sp/>EnumString(format),<sp/>EnumString(type)<sp/>);</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexImage1D(target,<sp/>level,<sp/>internalformat,<sp/>width,<sp/>border,<sp/>format,<sp/>type,<sp/>pixels);</highlight></codeline>
<codeline lineno="1678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexImage2D(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLint<sp/>internalformat,<sp/>GLsizei<sp/>width,<sp/>GLsizei<sp/>height,<sp/>GLint<sp/>border,<sp/>GLenum<sp/>format,<sp/>GLenum<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pixels)<sp/>{</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLvoid<sp/>*&quot;<sp/>name:<sp/>&quot;pixels&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexImage2D<sp/>%s<sp/>%d<sp/>%d<sp/>%d<sp/>%d<sp/>%d<sp/>%s<sp/>%s<sp/>&apos;const<sp/>GLvoid<sp/>*<sp/>pixels&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>level,<sp/>internalformat,<sp/>width,<sp/>height,<sp/>border,<sp/>EnumString(format),<sp/>EnumString(type)<sp/>);</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexImage2D(target,<sp/>level,<sp/>internalformat,<sp/>width,<sp/>height,<sp/>border,<sp/>format,<sp/>type,<sp/>pixels);</highlight></codeline>
<codeline lineno="1684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexParameterf(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexParameterf<sp/>%s<sp/>%s<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>EnumString(pname),<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexParameterf(target,<sp/>pname,<sp/>param);</highlight></codeline>
<codeline lineno="1689"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexParameterfv(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexParameterfv<sp/>%s<sp/>%s<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexParameterfv(target,<sp/>pname,<sp/>params);</highlight></codeline>
<codeline lineno="1695"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexParameteri(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>param)<sp/>{</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexParameteri<sp/>%s<sp/>%s<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>EnumString(pname),<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexParameteri(target,<sp/>pname,<sp/>param);</highlight></codeline>
<codeline lineno="1700"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexParameteriv(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*params)<sp/>{</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLint<sp/>*&quot;<sp/>name:<sp/>&quot;params&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexParameteriv<sp/>%s<sp/>%s<sp/>&apos;const<sp/>GLint<sp/>*<sp/>params&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>EnumString(pname)<sp/>);</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexParameteriv(target,<sp/>pname,<sp/>params);</highlight></codeline>
<codeline lineno="1706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexSubImage1D(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLint<sp/>xoffset,<sp/>GLsizei<sp/>width,<sp/>GLenum<sp/>format,<sp/>GLenum<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pixels)<sp/>{</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLvoid<sp/>*&quot;<sp/>name:<sp/>&quot;pixels&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexSubImage1D<sp/>%s<sp/>%d<sp/>%d<sp/>%d<sp/>%s<sp/>%s<sp/>&apos;const<sp/>GLvoid<sp/>*<sp/>pixels&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>level,<sp/>xoffset,<sp/>width,<sp/>EnumString(format),<sp/>EnumString(type)<sp/>);</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexSubImage1D(target,<sp/>level,<sp/>xoffset,<sp/>width,<sp/>format,<sp/>type,<sp/>pixels);</highlight></codeline>
<codeline lineno="1712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"></highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTexSubImage2D(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLint<sp/>xoffset,<sp/>GLint<sp/>yoffset,<sp/>GLsizei<sp/>width,<sp/>GLsizei<sp/>height,<sp/>GLenum<sp/>format,<sp/>GLenum<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pixels)<sp/>{</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLvoid<sp/>*&quot;<sp/>name:<sp/>&quot;pixels&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTexSubImage2D<sp/>%s<sp/>%d<sp/>%d<sp/>%d<sp/>%d<sp/>%d<sp/>%s<sp/>%s<sp/>&apos;const<sp/>GLvoid<sp/>*<sp/>pixels&apos;\n&quot;</highlight><highlight class="normal">,<sp/>EnumString(target),<sp/>level,<sp/>xoffset,<sp/>yoffset,<sp/>width,<sp/>height,<sp/>EnumString(format),<sp/>EnumString(type)<sp/>);</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTexSubImage2D(target,<sp/>level,<sp/>xoffset,<sp/>yoffset,<sp/>width,<sp/>height,<sp/>format,<sp/>type,<sp/>pixels);</highlight></codeline>
<codeline lineno="1718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTranslated(GLdouble<sp/>x,<sp/>GLdouble<sp/>y,<sp/>GLdouble<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTranslated<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>z<sp/>);</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTranslated(x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="1723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logTranslatef(GLfloat<sp/>x,<sp/>GLfloat<sp/>y,<sp/>GLfloat<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glTranslatef<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>z<sp/>);</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/>dllTranslatef(x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="1728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logVertex2d(GLdouble<sp/>x,<sp/>GLdouble<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glVertex2d<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y<sp/>);</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/>dllVertex2d(x,<sp/>y);</highlight></codeline>
<codeline lineno="1733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logVertex2dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLdouble<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glVertex2dv<sp/>&apos;const<sp/>GLdouble<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/>dllVertex2dv(v);</highlight></codeline>
<codeline lineno="1739"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logVertex2f(GLfloat<sp/>x,<sp/>GLfloat<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glVertex2f<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y<sp/>);</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/>dllVertex2f(x,<sp/>y);</highlight></codeline>
<codeline lineno="1744"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logVertex2fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glVertex2fv<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/>dllVertex2fv(v);</highlight></codeline>
<codeline lineno="1750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logVertex2i(GLint<sp/>x,<sp/>GLint<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glVertex2i<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y<sp/>);</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/>dllVertex2i(x,<sp/>y);</highlight></codeline>
<codeline lineno="1755"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logVertex2iv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLint<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glVertex2iv<sp/>&apos;const<sp/>GLint<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/>dllVertex2iv(v);</highlight></codeline>
<codeline lineno="1761"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logVertex2s(GLshort<sp/>x,<sp/>GLshort<sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glVertex2s<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y<sp/>);</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/>dllVertex2s(x,<sp/>y);</highlight></codeline>
<codeline lineno="1766"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logVertex2sv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLshort<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glVertex2sv<sp/>&apos;const<sp/>GLshort<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/>dllVertex2sv(v);</highlight></codeline>
<codeline lineno="1772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logVertex3d(GLdouble<sp/>x,<sp/>GLdouble<sp/>y,<sp/>GLdouble<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glVertex3d<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>z<sp/>);</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/>dllVertex3d(x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="1777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logVertex3dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLdouble<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glVertex3dv<sp/>&apos;const<sp/>GLdouble<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/>dllVertex3dv(v);</highlight></codeline>
<codeline lineno="1783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logVertex3f(GLfloat<sp/>x,<sp/>GLfloat<sp/>y,<sp/>GLfloat<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glVertex3f<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>z<sp/>);</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/>dllVertex3f(x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="1788"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logVertex3fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glVertex3fv<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/>dllVertex3fv(v);</highlight></codeline>
<codeline lineno="1794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logVertex3i(GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLint<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glVertex3i<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>z<sp/>);</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/>dllVertex3i(x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="1799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logVertex3iv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLint<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glVertex3iv<sp/>&apos;const<sp/>GLint<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/>dllVertex3iv(v);</highlight></codeline>
<codeline lineno="1805"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logVertex3s(GLshort<sp/>x,<sp/>GLshort<sp/>y,<sp/>GLshort<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glVertex3s<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>z<sp/>);</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/>dllVertex3s(x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="1810"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logVertex3sv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLshort<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glVertex3sv<sp/>&apos;const<sp/>GLshort<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/>dllVertex3sv(v);</highlight></codeline>
<codeline lineno="1816"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logVertex4d(GLdouble<sp/>x,<sp/>GLdouble<sp/>y,<sp/>GLdouble<sp/>z,<sp/>GLdouble<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glVertex4d<sp/>%g<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>z,<sp/>w<sp/>);</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/>dllVertex4d(x,<sp/>y,<sp/>z,<sp/>w);</highlight></codeline>
<codeline lineno="1821"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logVertex4dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLdouble<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glVertex4dv<sp/>&apos;const<sp/>GLdouble<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/>dllVertex4dv(v);</highlight></codeline>
<codeline lineno="1827"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logVertex4f(GLfloat<sp/>x,<sp/>GLfloat<sp/>y,<sp/>GLfloat<sp/>z,<sp/>GLfloat<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glVertex4f<sp/>%g<sp/>%g<sp/>%g<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>z,<sp/>w<sp/>);</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/>dllVertex4f(x,<sp/>y,<sp/>z,<sp/>w);</highlight></codeline>
<codeline lineno="1832"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logVertex4fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLfloat<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glVertex4fv<sp/>&apos;const<sp/>GLfloat<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/>dllVertex4fv(v);</highlight></codeline>
<codeline lineno="1838"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logVertex4i(GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLint<sp/>z,<sp/>GLint<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glVertex4i<sp/>%d<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>z,<sp/>w<sp/>);</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/>dllVertex4i(x,<sp/>y,<sp/>z,<sp/>w);</highlight></codeline>
<codeline lineno="1843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logVertex4iv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLint<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glVertex4iv<sp/>&apos;const<sp/>GLint<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/>dllVertex4iv(v);</highlight></codeline>
<codeline lineno="1849"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"></highlight></codeline>
<codeline lineno="1851"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logVertex4s(GLshort<sp/>x,<sp/>GLshort<sp/>y,<sp/>GLshort<sp/>z,<sp/>GLshort<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glVertex4s<sp/>%d<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>z,<sp/>w<sp/>);</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/>dllVertex4s(x,<sp/>y,<sp/>z,<sp/>w);</highlight></codeline>
<codeline lineno="1854"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logVertex4sv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLshort<sp/>*&quot;<sp/>name:<sp/>&quot;v&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glVertex4sv<sp/>&apos;const<sp/>GLshort<sp/>*<sp/>v&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/>dllVertex4sv(v);</highlight></codeline>
<codeline lineno="1860"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logVertexPointer(GLint<sp/>size,<sp/>GLenum<sp/>type,<sp/>GLsizei<sp/>stride,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pointer)<sp/>{</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;const<sp/>GLvoid<sp/>*&quot;<sp/>name:<sp/>&quot;pointer&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glVertexPointer<sp/>%d<sp/>%s<sp/>%d<sp/>&apos;const<sp/>GLvoid<sp/>*<sp/>pointer&apos;\n&quot;</highlight><highlight class="normal">,<sp/>size,<sp/>EnumString(type),<sp/>stride<sp/>);</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/>dllVertexPointer(size,<sp/>type,<sp/>stride,<sp/>pointer);</highlight></codeline>
<codeline lineno="1866"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logViewport(GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLsizei<sp/>width,<sp/>GLsizei<sp/>height)<sp/>{</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glViewport<sp/>%d<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>width,<sp/>height<sp/>);</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/>dllViewport(x,<sp/>y,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="1871"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"></highlight></codeline>
<codeline lineno="1873"><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__linux__</highlight></codeline>
<codeline lineno="1875"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>XVisualInfo<sp/>*<sp/>APIENTRY<sp/>logChooseVisual(Display<sp/>*dpy,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>screen,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*attribList)<sp/>{</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;Display<sp/>*&quot;<sp/>name:<sp/>&quot;dpy&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;int&quot;<sp/>name:<sp/>&quot;screen&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;int<sp/>*&quot;<sp/>name:<sp/>&quot;attribList&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glXChooseVisual<sp/>&apos;Display<sp/>*<sp/>dpy&apos;<sp/>&apos;int<sp/>screen&apos;<sp/>&apos;int<sp/>*<sp/>attribList&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dllChooseVisual(dpy,<sp/>screen,<sp/>attribList);</highlight></codeline>
<codeline lineno="1882"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GLXContext<sp/>APIENTRY<sp/>logCreateContext(Display<sp/>*dpy,<sp/>XVisualInfo<sp/>*vis,<sp/>GLXContext<sp/>shareList,<sp/>Bool<sp/>direct)<sp/>{</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;Display<sp/>*&quot;<sp/>name:<sp/>&quot;dpy&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;XVisualInfo<sp/>*&quot;<sp/>name:<sp/>&quot;vis&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLXContext&quot;<sp/>name:<sp/>&quot;shareList&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;Bool&quot;<sp/>name:<sp/>&quot;direct&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glXCreateContext<sp/>&apos;Display<sp/>*<sp/>dpy&apos;<sp/>&apos;XVisualInfo<sp/>*<sp/>vis&apos;<sp/>&apos;GLXContext<sp/>shareList&apos;<sp/>&apos;Bool<sp/>direct&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dllCreateContext(dpy,<sp/>vis,<sp/>shareList,<sp/>direct);</highlight></codeline>
<codeline lineno="1891"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logDestroyContext(Display<sp/>*dpy,<sp/>GLXContext<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;Display<sp/>*&quot;<sp/>name:<sp/>&quot;dpy&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLXContext&quot;<sp/>name:<sp/>&quot;ctx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glXDestroyContext<sp/>&apos;Display<sp/>*<sp/>dpy&apos;<sp/>&apos;GLXContext<sp/>ctx&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/>dllDestroyContext(dpy,<sp/>ctx);</highlight></codeline>
<codeline lineno="1898"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Bool<sp/>APIENTRY<sp/>logMakeCurrent(Display<sp/>*dpy,<sp/>GLXDrawable<sp/>drawable,<sp/>GLXContext<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;Display<sp/>*&quot;<sp/>name:<sp/>&quot;dpy&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLXDrawable&quot;<sp/>name:<sp/>&quot;drawable&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLXContext&quot;<sp/>name:<sp/>&quot;ctx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glXMakeCurrent<sp/>&apos;Display<sp/>*<sp/>dpy&apos;<sp/>&apos;GLXDrawable<sp/>drawable&apos;<sp/>&apos;GLXContext<sp/>ctx&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dllMakeCurrent(dpy,<sp/>drawable,<sp/>ctx);</highlight></codeline>
<codeline lineno="1906"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"></highlight></codeline>
<codeline lineno="1908"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APIENTRY<sp/>logSwapBuffers(Display<sp/>*dpy,<sp/>GLXDrawable<sp/>drawable)<sp/>{</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;Display<sp/>*&quot;<sp/>name:<sp/>&quot;dpy&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unknown<sp/>type:<sp/>&quot;GLXDrawable&quot;<sp/>name:<sp/>&quot;drawable&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>tr.logFile,<sp/></highlight><highlight class="stringliteral">&quot;glXSwapBuffers<sp/>&apos;Display<sp/>*<sp/>dpy&apos;<sp/>&apos;GLXDrawable<sp/>drawable&apos;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/>dllSwapBuffers(dpy,<sp/>drawable);</highlight></codeline>
<codeline lineno="1913"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1917"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight></codeline>
<codeline lineno="1920"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1923"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/gl_logfuncs.cpp"/>
  </compounddef>
</doxygen>
