<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="include_2al_8h" kind="file">
    <compoundname>al.h</compoundname>
    <includes refid="include_2altypes_8h" local="yes">altypes.h</includes>
      <sectiondef kind="define">
      <memberdef kind="define" id="include_2al_8h_1a12337ad04c52ef2164947429a9487e8b" prot="public" static="no">
        <name>ALAPI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OpenAL cross platform audio library Copyright (C) 1999-2000 by authors. This library is free software; you can redistribute it and/or modify it under the terms of the GNU Library General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.</para><para>This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public License for more details.</para><para>You should have received a copy of the GNU Library General Public License along with this library; if not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. Or go to <ulink url="http://www.gnu.org/copyleft/lgpl.html">http://www.gnu.org/copyleft/lgpl.html</ulink> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="43" column="13" bodyfile="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="include_2al_8h_1ad6512425790f710e9d6f0ff431d31cc2" prot="public" static="no">
        <name>ALAPIENTRY</name>
        <initializer>__cdecl</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="44" column="10" bodyfile="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="include_2al_8h_1ac3a940f05882636d86b93334edf4568f" prot="public" static="no">
        <name>AL_CALLBACK</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="45" column="10" bodyfile="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="include_2al_8h_1ab25a954568adcd5b8166d3c2a5de6d1b" prot="public" static="no">
        <name>OPENAL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="48" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="include_2al_8h_1a343fe5c687bb7349b4486214fff67ad8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alEnable</definition>
        <argsstring>(ALenum capability)</argsstring>
        <name>alEnable</name>
        <param>
          <type>ALenum</type>
          <declname>capability</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OpenAL Maintenance Functions Initialization and exiting. State Management and Query. Error Handling. Extension Support.State management. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a328e0dcf9210a3a3c65b1064be4bdd38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alDisable</definition>
        <argsstring>(ALenum capability)</argsstring>
        <name>alDisable</name>
        <param>
          <type>ALenum</type>
          <declname>capability</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a16de2181b32ebbd10414ad65706e7d3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALboolean __cdecl</type>
        <definition>ALboolean __cdecl alIsEnabled</definition>
        <argsstring>(ALenum capability)</argsstring>
        <name>alIsEnabled</name>
        <param>
          <type>ALenum</type>
          <declname>capability</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a7ee6118dd3d7a58beb12c168a9bb381b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alHint</definition>
        <argsstring>(ALenum target, ALenum mode)</argsstring>
        <name>alHint</name>
        <param>
          <type>ALenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>ALenum</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Application preferences for driver performance choices. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a710703b386734db9975d420d419c2ca4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALboolean __cdecl</type>
        <definition>ALboolean __cdecl alGetBoolean</definition>
        <argsstring>(ALenum param)</argsstring>
        <name>alGetBoolean</name>
        <param>
          <type>ALenum</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>State retrieval. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a67f7c767d4789b15edbde60ac8c57129" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALint __cdecl</type>
        <definition>ALint __cdecl alGetInteger</definition>
        <argsstring>(ALenum param)</argsstring>
        <name>alGetInteger</name>
        <param>
          <type>ALenum</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="70" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/openal/stubs.cpp" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1aa94d8840af2b6198cfd3fc0906eec62b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALfloat __cdecl</type>
        <definition>ALfloat __cdecl alGetFloat</definition>
        <argsstring>(ALenum param)</argsstring>
        <name>alGetFloat</name>
        <param>
          <type>ALenum</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a959574f9dfe5a316865225c3f3d7c951" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALdouble __cdecl</type>
        <definition>ALdouble __cdecl alGetDouble</definition>
        <argsstring>(ALenum param)</argsstring>
        <name>alGetDouble</name>
        <param>
          <type>ALenum</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a33346bbf07130c8b6d78a87ce8bd8bf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alGetBooleanv</definition>
        <argsstring>(ALenum param, ALboolean *data)</argsstring>
        <name>alGetBooleanv</name>
        <param>
          <type>ALenum</type>
          <declname>param</declname>
        </param>
        <param>
          <type>ALboolean *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a2fa2c25fcebeb1358705f98221019271" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alGetIntegerv</definition>
        <argsstring>(ALenum param, ALint *data)</argsstring>
        <name>alGetIntegerv</name>
        <param>
          <type>ALenum</type>
          <declname>param</declname>
        </param>
        <param>
          <type>ALint *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1ae3e3ed6edc09f10abd7204837ee108c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alGetFloatv</definition>
        <argsstring>(ALenum param, ALfloat *data)</argsstring>
        <name>alGetFloatv</name>
        <param>
          <type>ALenum</type>
          <declname>param</declname>
        </param>
        <param>
          <type>ALfloat *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1af26d474505d2e4b2b7f9187cb94c3014" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alGetDoublev</definition>
        <argsstring>(ALenum param, ALdouble *data)</argsstring>
        <name>alGetDoublev</name>
        <param>
          <type>ALenum</type>
          <declname>param</declname>
        </param>
        <param>
          <type>ALdouble *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a0778ab20e5015eaa690fee52bcc2b27f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALubyte *__cdecl</type>
        <definition>ALubyte* __cdecl alGetString</definition>
        <argsstring>(ALenum param)</argsstring>
        <name>alGetString</name>
        <param>
          <type>ALenum</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a2af5b2ef05fe3c6bf6b985dafc8b0ab6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALenum __cdecl</type>
        <definition>ALenum __cdecl alGetError</definition>
        <argsstring>(ALvoid)</argsstring>
        <name>alGetError</name>
        <param>
          <type>ALvoid</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Error support. Obtain the most recent error generated in the AL state machine. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a5caa3aede9a538725b54225b6a734850" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALboolean __cdecl</type>
        <definition>ALboolean __cdecl alIsExtensionPresent</definition>
        <argsstring>(ALubyte *fname)</argsstring>
        <name>alIsExtensionPresent</name>
        <param>
          <type>ALubyte *</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extension support. Obtain the address of a function (usually an extension) with the name fname. All addresses are context-independent. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="91" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/openal/stubs.cpp" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1ae4f935f45ce9a78a10586a971cfdac43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid *__cdecl</type>
        <definition>ALvoid* __cdecl alGetProcAddress</definition>
        <argsstring>(ALubyte *fname)</argsstring>
        <name>alGetProcAddress</name>
        <param>
          <type>ALubyte *</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extension support. Obtain the address of a function (usually an extension) with the name fname. All addresses are context-independent. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a01741f3ae611cf2119681931bd9b65f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALenum __cdecl</type>
        <definition>ALenum __cdecl alGetEnumValue</definition>
        <argsstring>(ALubyte *ename)</argsstring>
        <name>alGetEnumValue</name>
        <param>
          <type>ALubyte *</type>
          <declname>ename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extension support. Obtain the integer value of an enumeration (usually an extension) with the name ename. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a10e742f50d8c5c340e5d9c3a58aa0a11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alListeneri</definition>
        <argsstring>(ALenum param, ALint value)</argsstring>
        <name>alListeneri</name>
        <param>
          <type>ALenum</type>
          <declname>param</declname>
        </param>
        <param>
          <type>ALint</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LISTENER Listener is the sample position for a given context. The multi-channel (usually stereo) output stream generated by the mixer is parametrized by this Listener object: its position and velocity relative to Sources, within occluder and reflector geometry.</para><para>Listener Environment: default 0. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1ac28d84a1d0b51319d1333f068c2d26ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alListenerf</definition>
        <argsstring>(ALenum param, ALfloat value)</argsstring>
        <name>alListenerf</name>
        <param>
          <type>ALenum</type>
          <declname>param</declname>
        </param>
        <param>
          <type>ALfloat</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Listener Gain: default 1.0f. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="133" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/openal/stubs.cpp" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a3813e9e35bf579c68d60f55b4b8804ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alListener3f</definition>
        <argsstring>(ALenum param, ALfloat v1, ALfloat v2, ALfloat v3)</argsstring>
        <name>alListener3f</name>
        <param>
          <type>ALenum</type>
          <declname>param</declname>
        </param>
        <param>
          <type>ALfloat</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>ALfloat</type>
          <declname>v2</declname>
        </param>
        <param>
          <type>ALfloat</type>
          <declname>v3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Listener Position. Listener Velocity. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1adca37a7e76c7452a39a6cf75b8402060" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alListenerfv</definition>
        <argsstring>(ALenum param, ALfloat *values)</argsstring>
        <name>alListenerfv</name>
        <param>
          <type>ALenum</type>
          <declname>param</declname>
        </param>
        <param>
          <type>ALfloat *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Listener Position: ALfloat[3] Listener Velocity: ALfloat[3] Listener Orientation: ALfloat[6] (forward and up vector). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a1efcb35205cdfc35dc7a091bade8d582" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alGetListeneri</definition>
        <argsstring>(ALenum param, ALint *value)</argsstring>
        <name>alGetListeneri</name>
        <param>
          <type>ALenum</type>
          <declname>param</declname>
        </param>
        <param>
          <type>ALint *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a5c6a638b8fe5081621f8ac21d472bf95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alGetListenerf</definition>
        <argsstring>(ALenum param, ALfloat *value)</argsstring>
        <name>alGetListenerf</name>
        <param>
          <type>ALenum</type>
          <declname>param</declname>
        </param>
        <param>
          <type>ALfloat *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a434182dbab258aa89a8d51cab2e35147" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alGetListener3f</definition>
        <argsstring>(ALenum param, ALfloat *v1, ALfloat *v2, ALfloat *v3)</argsstring>
        <name>alGetListener3f</name>
        <param>
          <type>ALenum</type>
          <declname>param</declname>
        </param>
        <param>
          <type>ALfloat *</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>ALfloat *</type>
          <declname>v2</declname>
        </param>
        <param>
          <type>ALfloat *</type>
          <declname>v3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a03aaa08675e4a08e4d19cf14b4d1ab79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alGetListenerfv</definition>
        <argsstring>(ALenum param, ALfloat *values)</argsstring>
        <name>alGetListenerfv</name>
        <param>
          <type>ALenum</type>
          <declname>param</declname>
        </param>
        <param>
          <type>ALfloat *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a71f8da8beffabf2a223e6f8efd922705" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alGenSources</definition>
        <argsstring>(ALsizei n, ALuint *sources)</argsstring>
        <name>alGenSources</name>
        <param>
          <type>ALsizei</type>
          <declname>n</declname>
        </param>
        <param>
          <type>ALuint *</type>
          <declname>sources</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SOURCE Source objects are by default localized. Sources take the PCM data provided in the specified Buffer, apply Source-specific modifications, and then submit them to be mixed according to spatial arrangement etc.Create Source objects. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="170" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/openal/stubs.cpp" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1afd7b31a98e5f02cb17b6f2640feac7fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alDeleteSources</definition>
        <argsstring>(ALsizei n, ALuint *sources)</argsstring>
        <name>alDeleteSources</name>
        <param>
          <type>ALsizei</type>
          <declname>n</declname>
        </param>
        <param>
          <type>ALuint *</type>
          <declname>sources</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete Source objects. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1af87c0f289c72448c559e0f7225ba9e3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALboolean __cdecl</type>
        <definition>ALboolean __cdecl alIsSource</definition>
        <argsstring>(ALuint id)</argsstring>
        <name>alIsSource</name>
        <param>
          <type>ALuint</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Verify a handle is a valid Source. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="176" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/openal/stubs.cpp" bodystart="35" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1aebd31c483bcc0a8aaa0ebaec4ef5619e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alSourcei</definition>
        <argsstring>(ALuint source, ALenum param, ALint value)</argsstring>
        <name>alSourcei</name>
        <param>
          <type>ALuint</type>
          <declname>source</declname>
        </param>
        <param>
          <type>ALenum</type>
          <declname>param</declname>
        </param>
        <param>
          <type>ALint</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set an integer parameter for a Source object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="179" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/openal/stubs.cpp" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1aa20a7263aadcb8dcbe74fc808d6caac7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alSourcef</definition>
        <argsstring>(ALuint source, ALenum param, ALfloat value)</argsstring>
        <name>alSourcef</name>
        <param>
          <type>ALuint</type>
          <declname>source</declname>
        </param>
        <param>
          <type>ALenum</type>
          <declname>param</declname>
        </param>
        <param>
          <type>ALfloat</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="180" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/openal/stubs.cpp" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a23f28cc5e03ee1642944103d3506ee1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alSource3f</definition>
        <argsstring>(ALuint source, ALenum param, ALfloat v1, ALfloat v2, ALfloat v3)</argsstring>
        <name>alSource3f</name>
        <param>
          <type>ALuint</type>
          <declname>source</declname>
        </param>
        <param>
          <type>ALenum</type>
          <declname>param</declname>
        </param>
        <param>
          <type>ALfloat</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>ALfloat</type>
          <declname>v2</declname>
        </param>
        <param>
          <type>ALfloat</type>
          <declname>v3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="181" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/openal/stubs.cpp" bodystart="126" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a54b28cb1745860c9fbc59447e88e28e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alSourcefv</definition>
        <argsstring>(ALuint source, ALenum param, ALfloat *values)</argsstring>
        <name>alSourcefv</name>
        <param>
          <type>ALuint</type>
          <declname>source</declname>
        </param>
        <param>
          <type>ALenum</type>
          <declname>param</declname>
        </param>
        <param>
          <type>ALfloat *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="182" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1aea634ad6d86d912556cc2580bc5eea0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alGetSourcei</definition>
        <argsstring>(ALuint source, ALenum param, ALint *value)</argsstring>
        <name>alGetSourcei</name>
        <param>
          <type>ALuint</type>
          <declname>source</declname>
        </param>
        <param>
          <type>ALenum</type>
          <declname>param</declname>
        </param>
        <param>
          <type>ALint *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get an integer parameter for a Source object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="185" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/openal/stubs.cpp" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a5c22f3c7ab8ed08783944a2a64863e3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alGetSourcef</definition>
        <argsstring>(ALuint source, ALenum param, ALfloat *value)</argsstring>
        <name>alGetSourcef</name>
        <param>
          <type>ALuint</type>
          <declname>source</declname>
        </param>
        <param>
          <type>ALenum</type>
          <declname>param</declname>
        </param>
        <param>
          <type>ALfloat *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="186" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1aad05a11066d23b98c8b30afe05dab684" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alGetSource3f</definition>
        <argsstring>(ALuint source, ALenum param, ALfloat *v1, ALfloat *v2, ALfloat *v3)</argsstring>
        <name>alGetSource3f</name>
        <param>
          <type>ALuint</type>
          <declname>source</declname>
        </param>
        <param>
          <type>ALenum</type>
          <declname>param</declname>
        </param>
        <param>
          <type>ALfloat *</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>ALfloat *</type>
          <declname>v2</declname>
        </param>
        <param>
          <type>ALfloat *</type>
          <declname>v3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1aa60f08ef8ec65a81153ce9d7e57bb3b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alGetSourcefv</definition>
        <argsstring>(ALuint source, ALenum param, ALfloat *values)</argsstring>
        <name>alGetSourcefv</name>
        <param>
          <type>ALuint</type>
          <declname>source</declname>
        </param>
        <param>
          <type>ALenum</type>
          <declname>param</declname>
        </param>
        <param>
          <type>ALfloat *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="188" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a60d23de476d2c8666470e8048c829011" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alSourcePlayv</definition>
        <argsstring>(ALsizei n, ALuint *sources)</argsstring>
        <name>alSourcePlayv</name>
        <param>
          <type>ALsizei</type>
          <declname>n</declname>
        </param>
        <param>
          <type>ALuint *</type>
          <declname>sources</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1ab1bd2ed2c996bb896ac8a9268b9f547e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alSourcePausev</definition>
        <argsstring>(ALsizei n, ALuint *sources)</argsstring>
        <name>alSourcePausev</name>
        <param>
          <type>ALsizei</type>
          <declname>n</declname>
        </param>
        <param>
          <type>ALuint *</type>
          <declname>sources</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a4e5770abd3db2463811c9db5ffc47aa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alSourceStopv</definition>
        <argsstring>(ALsizei n, ALuint *sources)</argsstring>
        <name>alSourceStopv</name>
        <param>
          <type>ALsizei</type>
          <declname>n</declname>
        </param>
        <param>
          <type>ALuint *</type>
          <declname>sources</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a69823ca58b19cdef2334d617911492e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alSourceRewindv</definition>
        <argsstring>(ALsizei n, ALuint *sources)</argsstring>
        <name>alSourceRewindv</name>
        <param>
          <type>ALsizei</type>
          <declname>n</declname>
        </param>
        <param>
          <type>ALuint *</type>
          <declname>sources</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="193" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a6762a5b7f8e22b51083c0889417b1ea6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alSourcePlay</definition>
        <argsstring>(ALuint source)</argsstring>
        <name>alSourcePlay</name>
        <param>
          <type>ALuint</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Activate a source, start replay. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="196" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/openal/stubs.cpp" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a9e75949916aba6c114d3741ec6f62d9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alSourcePause</definition>
        <argsstring>(ALuint source)</argsstring>
        <name>alSourcePause</name>
        <param>
          <type>ALuint</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pause a source, temporarily remove it from the mixer list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="202" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a2a08795d1899319d3ccf06790d12b225" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alSourceStop</definition>
        <argsstring>(ALuint source)</argsstring>
        <name>alSourceStop</name>
        <param>
          <type>ALuint</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stop a source, temporarily remove it from the mixer list, and reset its internal state to pre-Play. To remove a Source completely, it has to be deleted following Stop, or before Play. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="211" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/openal/stubs.cpp" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1aa34f505401875bc0b3aa48c06420df5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alSourceRewind</definition>
        <argsstring>(ALuint source)</argsstring>
        <name>alSourceRewind</name>
        <param>
          <type>ALuint</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rewinds a source, temporarily remove it from the mixer list, and reset its internal state to pre-Play. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="218" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a68a69d267380d921153bc086bc8106d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alGenBuffers</definition>
        <argsstring>(ALsizei n, ALuint *buffers)</argsstring>
        <name>alGenBuffers</name>
        <param>
          <type>ALsizei</type>
          <declname>n</declname>
        </param>
        <param>
          <type>ALuint *</type>
          <declname>buffers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>BUFFER Buffer objects are storage space for sample data. Buffers are referred to by Sources. There can be more than one Source using the same Buffer data. If Buffers have to be duplicated on a per-Source basis, the driver has to take care of allocation, copying, and deallocation as well as propagating buffer data changes.Buffer object generation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="236" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/openal/stubs.cpp" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a72eb1fb47dddf17ee410385f0ecaa10e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alDeleteBuffers</definition>
        <argsstring>(ALsizei n, ALuint *buffers)</argsstring>
        <name>alDeleteBuffers</name>
        <param>
          <type>ALsizei</type>
          <declname>n</declname>
        </param>
        <param>
          <type>ALuint *</type>
          <declname>buffers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="237" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/openal/stubs.cpp" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a20cd771fc4ac8405a82e901bf8caa6f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALboolean __cdecl</type>
        <definition>ALboolean __cdecl alIsBuffer</definition>
        <argsstring>(ALuint buffer)</argsstring>
        <name>alIsBuffer</name>
        <param>
          <type>ALuint</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="238" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/openal/stubs.cpp" bodystart="122" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a1a1a8a8f281b360c12e604eda0b2f5f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alBufferData</definition>
        <argsstring>(ALuint buffer, ALenum format, ALvoid *data, ALsizei size, ALsizei freq)</argsstring>
        <name>alBufferData</name>
        <param>
          <type>ALuint</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>ALenum</type>
          <declname>format</declname>
        </param>
        <param>
          <type>ALvoid *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>ALsizei</type>
          <declname>size</declname>
        </param>
        <param>
          <type>ALsizei</type>
          <declname>freq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Specify the data to be filled into a buffer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="243" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/openal/stubs.cpp" bodystart="81" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a21bd1711137ace8e47e5b08bcafd3500" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alGetBufferi</definition>
        <argsstring>(ALuint buffer, ALenum param, ALint *value)</argsstring>
        <name>alGetBufferi</name>
        <param>
          <type>ALuint</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>ALenum</type>
          <declname>param</declname>
        </param>
        <param>
          <type>ALint *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="250" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1abdea0685a493a8a9b4828160624af0e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alGetBufferf</definition>
        <argsstring>(ALuint buffer, ALenum param, ALfloat *value)</argsstring>
        <name>alGetBufferf</name>
        <param>
          <type>ALuint</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>ALenum</type>
          <declname>param</declname>
        </param>
        <param>
          <type>ALfloat *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="251" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1ae4dd08e815d7dbc8aca0aa02e83d6c92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alSourceQueueBuffers</definition>
        <argsstring>(ALuint source, ALsizei n, ALuint *buffers)</argsstring>
        <name>alSourceQueueBuffers</name>
        <param>
          <type>ALuint</type>
          <declname>source</declname>
        </param>
        <param>
          <type>ALsizei</type>
          <declname>n</declname>
        </param>
        <param>
          <type>ALuint *</type>
          <declname>buffers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Queue stuff </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="260" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a898a3448dfd85de9840655753ab84226" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alSourceUnqueueBuffers</definition>
        <argsstring>(ALuint source, ALsizei n, ALuint *buffers)</argsstring>
        <name>alSourceUnqueueBuffers</name>
        <param>
          <type>ALuint</type>
          <declname>source</declname>
        </param>
        <param>
          <type>ALsizei</type>
          <declname>n</declname>
        </param>
        <param>
          <type>ALuint *</type>
          <declname>buffers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="261" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/openal/stubs.cpp" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a20c9a8778b278749f9306e9ae6929199" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alDistanceModel</definition>
        <argsstring>(ALenum value)</argsstring>
        <name>alDistanceModel</name>
        <param>
          <type>ALenum</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Knobs and dials </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a23c0d989903c53e5f0419bde87ccc744" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alDopplerFactor</definition>
        <argsstring>(ALfloat value)</argsstring>
        <name>alDopplerFactor</name>
        <param>
          <type>ALfloat</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="267" column="1"/>
      </memberdef>
      <memberdef kind="function" id="include_2al_8h_1a7ceb7fcfb46f45bc4a2b5a87bd2e5a55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ALvoid __cdecl</type>
        <definition>ALvoid __cdecl alDopplerVelocity</definition>
        <argsstring>(ALfloat value)</argsstring>
        <name>alDopplerVelocity</name>
        <param>
          <type>ALfloat</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h" line="268" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_AL_H_</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_AL_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>OpenAL<sp/>cross<sp/>platform<sp/>audio<sp/>library</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1999-2000<sp/>by<sp/>authors.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>Library<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/>Boston,<sp/>MA<sp/><sp/>02111-1307,<sp/>USA.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>Or<sp/>go<sp/>to<sp/>http://www.gnu.org/copyleft/lgpl.html</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;altypes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/>#ifdef<sp/>_OPENAL32LIB</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>ALAPI<sp/>__declspec(dllexport)</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/>#else</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>ALAPI<sp/>__declspec(dllimport)</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/>#endif</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/>#define<sp/>ALAPIENTRY<sp/>__cdecl</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/>#define<sp/>AL_CALLBACK</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/>#ifdef<sp/>TARGET_OS_MAC</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>TARGET_OS_MAC</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#pragma<sp/>export<sp/>on</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/>#endif</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/>#define<sp/>ALAPI</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/>#define<sp/>ALAPIENTRY<sp/>__cdecl</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/>#define<sp/>AL_CALLBACK</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OPENAL</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>AL_NO_PROTOTYPES</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="52"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>OpenAL<sp/>Maintenance<sp/>Functions</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>Initialization<sp/>and<sp/>exiting.</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>State<sp/>Management<sp/>and<sp/>Query.</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>Error<sp/>Handling.</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>Extension<sp/>Support.</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="60"><highlight class="comment">/**<sp/>State<sp/>management.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alEnable(<sp/>ALenum<sp/>capability<sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alDisable(<sp/>ALenum<sp/>capability<sp/>);<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal">ALAPI<sp/>ALboolean<sp/>ALAPIENTRY<sp/>alIsEnabled(<sp/>ALenum<sp/>capability<sp/>);<sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="65"><highlight class="comment">/**<sp/>Application<sp/>preferences<sp/>for<sp/>driver<sp/>performance<sp/>choices.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alHint(<sp/>ALenum<sp/>target,<sp/>ALenum<sp/>mode<sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="68"><highlight class="comment">/**<sp/>State<sp/>retrieval.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">ALAPI<sp/>ALboolean<sp/>ALAPIENTRY<sp/>alGetBoolean(<sp/>ALenum<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">ALAPI<sp/>ALint<sp/><sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alGetInteger(<sp/>ALenum<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">ALAPI<sp/>ALfloat<sp/><sp/><sp/>ALAPIENTRY<sp/>alGetFloat(<sp/>ALenum<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal">ALAPI<sp/>ALdouble<sp/><sp/>ALAPIENTRY<sp/>alGetDouble(<sp/>ALenum<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alGetBooleanv(<sp/>ALenum<sp/>param,<sp/>ALboolean*<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alGetIntegerv(<sp/>ALenum<sp/>param,<sp/>ALint*<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alGetFloatv(<sp/>ALenum<sp/>param,<sp/>ALfloat*<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alGetDoublev(<sp/>ALenum<sp/>param,<sp/>ALdouble*<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">ALAPI<sp/>ALubyte*<sp/><sp/>ALAPIENTRY<sp/>alGetString(<sp/>ALenum<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="79"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>Error<sp/>support.</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/>Obtain<sp/>the<sp/>most<sp/>recent<sp/>error<sp/>generated<sp/>in<sp/>the<sp/>AL<sp/>state<sp/>machine.</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">ALAPI<sp/>ALenum<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alGetError(<sp/>ALvoid<sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="86"><highlight class="comment">/**<sp/></highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/>Extension<sp/>support.</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/>Obtain<sp/>the<sp/>address<sp/>of<sp/>a<sp/>function<sp/>(usually<sp/>an<sp/>extension)</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/><sp/>with<sp/>the<sp/>name<sp/>fname.<sp/>All<sp/>addresses<sp/>are<sp/>context-independent.<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">ALAPI<sp/>ALboolean<sp/>ALAPIENTRY<sp/>alIsExtensionPresent(<sp/>ALubyte*<sp/>fname<sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="94"><highlight class="comment">/**<sp/></highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/>Extension<sp/>support.</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/>Obtain<sp/>the<sp/>address<sp/>of<sp/>a<sp/>function<sp/>(usually<sp/>an<sp/>extension)</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/><sp/>with<sp/>the<sp/>name<sp/>fname.<sp/>All<sp/>addresses<sp/>are<sp/>context-independent.<sp/></highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">ALAPI<sp/>ALvoid*<sp/><sp/><sp/>ALAPIENTRY<sp/>alGetProcAddress(<sp/>ALubyte*<sp/>fname<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="102"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/>Extension<sp/>support.</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>Obtain<sp/>the<sp/>integer<sp/>value<sp/>of<sp/>an<sp/>enumeration<sp/>(usually<sp/>an<sp/>extension)<sp/>with<sp/>the<sp/>name<sp/>ename.<sp/></highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">ALAPI<sp/>ALenum<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alGetEnumValue(<sp/>ALubyte*<sp/>ename<sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="111"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/>LISTENER</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/>Listener<sp/>is<sp/>the<sp/>sample<sp/>position<sp/>for<sp/>a<sp/>given<sp/>context.</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/>The<sp/>multi-channel<sp/>(usually<sp/>stereo)<sp/>output<sp/>stream<sp/>generated</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/><sp/>by<sp/>the<sp/>mixer<sp/>is<sp/>parametrized<sp/>by<sp/>this<sp/>Listener<sp/>object:</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/><sp/>its<sp/>position<sp/>and<sp/>velocity<sp/>relative<sp/>to<sp/>Sources,<sp/>within</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/><sp/>occluder<sp/>and<sp/>reflector<sp/>geometry.</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="122"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/>Listener<sp/>Environment:<sp/><sp/>default<sp/>0.</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alListeneri(<sp/>ALenum<sp/>param,<sp/>ALint<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="129"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/>Listener<sp/>Gain:<sp/><sp/>default<sp/>1.0f.</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alListenerf(<sp/>ALenum<sp/>param,<sp/>ALfloat<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="136"><highlight class="comment">/**<sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/>Listener<sp/>Position.</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*<sp/>Listener<sp/>Velocity.</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alListener3f(<sp/>ALenum<sp/>param,<sp/>ALfloat<sp/>v1,<sp/>ALfloat<sp/>v2,<sp/>ALfloat<sp/>v3<sp/>);<sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="144"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*<sp/>Listener<sp/>Position:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALfloat[3]</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*<sp/>Listener<sp/>Velocity:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALfloat[3]</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>*<sp/>Listener<sp/>Orientation:<sp/><sp/><sp/><sp/><sp/>ALfloat[6]<sp/><sp/>(forward<sp/>and<sp/>up<sp/>vector).</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alListenerfv(<sp/>ALenum<sp/>param,<sp/>ALfloat*<sp/>values<sp/>);<sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alGetListeneri(<sp/>ALenum<sp/>param,<sp/>ALint*<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alGetListenerf(<sp/>ALenum<sp/>param,<sp/>ALfloat*<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alGetListener3f(<sp/>ALenum<sp/>param,<sp/>ALfloat*<sp/>v1,<sp/>ALfloat*<sp/>v2,<sp/>ALfloat*<sp/>v3<sp/>);<sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alGetListenerfv(<sp/>ALenum<sp/>param,<sp/>ALfloat*<sp/>values<sp/>);<sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="158"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*<sp/>SOURCE</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*<sp/>Source<sp/>objects<sp/>are<sp/>by<sp/>default<sp/>localized.<sp/>Sources</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/><sp/>take<sp/>the<sp/>PCM<sp/>data<sp/>provided<sp/>in<sp/>the<sp/>specified<sp/>Buffer,</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*<sp/><sp/>apply<sp/>Source-specific<sp/>modifications,<sp/>and<sp/>then</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*<sp/><sp/>submit<sp/>them<sp/>to<sp/>be<sp/>mixed<sp/>according<sp/>to<sp/>spatial<sp/></highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*<sp/><sp/>arrangement<sp/>etc.</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="169"><highlight class="comment">/**<sp/>Create<sp/>Source<sp/>objects.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alGenSources(<sp/>ALsizei<sp/>n,<sp/>ALuint*<sp/>sources<sp/>);<sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="172"><highlight class="comment">/**<sp/>Delete<sp/>Source<sp/>objects.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alDeleteSources(<sp/>ALsizei<sp/>n,<sp/>ALuint*<sp/>sources<sp/>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="175"><highlight class="comment">/**<sp/>Verify<sp/>a<sp/>handle<sp/>is<sp/>a<sp/>valid<sp/>Source.<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal">ALAPI<sp/>ALboolean<sp/>ALAPIENTRY<sp/>alIsSource(<sp/>ALuint<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>);<sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="178"><highlight class="comment">/**<sp/>Set<sp/>an<sp/>integer<sp/>parameter<sp/>for<sp/>a<sp/>Source<sp/>object.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alSourcei(<sp/>ALuint<sp/>source,<sp/>ALenum<sp/>param,<sp/>ALint<sp/>value<sp/>);<sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alSourcef(<sp/>ALuint<sp/>source,<sp/>ALenum<sp/>param,<sp/>ALfloat<sp/>value<sp/>);<sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alSource3f(<sp/>ALuint<sp/>source,<sp/>ALenum<sp/>param,<sp/>ALfloat<sp/>v1,<sp/>ALfloat<sp/>v2,<sp/>ALfloat<sp/>v3<sp/>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alSourcefv(<sp/>ALuint<sp/>source,<sp/>ALenum<sp/>param,<sp/>ALfloat*<sp/>values<sp/>);<sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="184"><highlight class="comment">/**<sp/>Get<sp/>an<sp/>integer<sp/>parameter<sp/>for<sp/>a<sp/>Source<sp/>object.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alGetSourcei(<sp/>ALuint<sp/>source,<sp/><sp/>ALenum<sp/>param,<sp/>ALint*<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alGetSourcef(<sp/>ALuint<sp/>source,<sp/><sp/>ALenum<sp/>param,<sp/>ALfloat*<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alGetSource3f(<sp/>ALuint<sp/>source,<sp/><sp/>ALenum<sp/>param,<sp/>ALfloat*<sp/>v1,<sp/>ALfloat*<sp/>v2,<sp/>ALfloat*<sp/>v3<sp/>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alGetSourcefv(<sp/>ALuint<sp/>source,<sp/>ALenum<sp/>param,<sp/>ALfloat*<sp/>values<sp/>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alSourcePlayv(<sp/>ALsizei<sp/>n,<sp/>ALuint<sp/>*sources<sp/>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alSourcePausev(<sp/>ALsizei<sp/>n,<sp/>ALuint<sp/>*sources<sp/>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alSourceStopv(<sp/>ALsizei<sp/>n,<sp/>ALuint<sp/>*sources<sp/>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alSourceRewindv(ALsizei<sp/>n,ALuint<sp/>*sources);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="195"><highlight class="comment">/**<sp/>Activate<sp/>a<sp/>source,<sp/>start<sp/>replay.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alSourcePlay(<sp/>ALuint<sp/>source<sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="198"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*<sp/>Pause<sp/>a<sp/>source,<sp/></highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*<sp/><sp/>temporarily<sp/>remove<sp/>it<sp/>from<sp/>the<sp/>mixer<sp/>list.</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alSourcePause(<sp/>ALuint<sp/>source<sp/>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="204"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*<sp/>Stop<sp/>a<sp/>source,</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/><sp/>temporarily<sp/>remove<sp/>it<sp/>from<sp/>the<sp/>mixer<sp/>list,</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*<sp/><sp/>and<sp/>reset<sp/>its<sp/>internal<sp/>state<sp/>to<sp/>pre-Play.</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*<sp/>To<sp/>remove<sp/>a<sp/>Source<sp/>completely,<sp/>it<sp/>has<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*<sp/><sp/>deleted<sp/>following<sp/>Stop,<sp/>or<sp/>before<sp/>Play.</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alSourceStop(<sp/>ALuint<sp/>source<sp/>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="213"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*<sp/>Rewinds<sp/>a<sp/>source,<sp/></highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*<sp/><sp/>temporarily<sp/>remove<sp/>it<sp/>from<sp/>the<sp/>mixer<sp/>list,</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*<sp/><sp/>and<sp/>reset<sp/>its<sp/>internal<sp/>state<sp/>to<sp/>pre-Play.</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alSourceRewind(<sp/>ALuint<sp/>source<sp/>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="222"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*<sp/>BUFFER</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*<sp/>Buffer<sp/>objects<sp/>are<sp/>storage<sp/>space<sp/>for<sp/>sample<sp/>data.</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>*<sp/>Buffers<sp/>are<sp/>referred<sp/>to<sp/>by<sp/>Sources.<sp/>There<sp/>can<sp/>be<sp/>more<sp/>than</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*<sp/><sp/>one<sp/>Source<sp/>using<sp/>the<sp/>same<sp/>Buffer<sp/>data.<sp/>If<sp/>Buffers<sp/>have</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>be<sp/>duplicated<sp/>on<sp/>a<sp/>per-Source<sp/>basis,<sp/>the<sp/>driver<sp/>has<sp/>to</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*<sp/><sp/>take<sp/>care<sp/>of<sp/>allocation,<sp/>copying,<sp/>and<sp/>deallocation<sp/>as<sp/>well</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*<sp/><sp/>as<sp/>propagating<sp/>buffer<sp/>data<sp/>changes.</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="235"><highlight class="comment">/**<sp/>Buffer<sp/>object<sp/>generation.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alGenBuffers(<sp/>ALsizei<sp/>n,<sp/>ALuint*<sp/>buffers<sp/>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alDeleteBuffers(<sp/>ALsizei<sp/>n,<sp/>ALuint*<sp/>buffers<sp/>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal">ALAPI<sp/>ALboolean<sp/>ALAPIENTRY<sp/>alIsBuffer(<sp/>ALuint<sp/>buffer<sp/>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="240"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*<sp/>Specify<sp/>the<sp/>data<sp/>to<sp/>be<sp/>filled<sp/>into<sp/>a<sp/>buffer.</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alBufferData(<sp/>ALuint<sp/><sp/><sp/>buffer,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALenum<sp/><sp/><sp/>format,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALvoid*<sp/><sp/>data,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALsizei<sp/><sp/>size,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALsizei<sp/><sp/>freq<sp/>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alGetBufferi(<sp/>ALuint<sp/>buffer,<sp/>ALenum<sp/>param,<sp/>ALint*<sp/><sp/><sp/>value<sp/>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alGetBufferf(<sp/>ALuint<sp/>buffer,<sp/>ALenum<sp/>param,<sp/>ALfloat*<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="256"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/>*<sp/>Queue<sp/>stuff</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alSourceQueueBuffers(<sp/>ALuint<sp/>source,<sp/>ALsizei<sp/>n,<sp/>ALuint*<sp/>buffers<sp/>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alSourceUnqueueBuffers(<sp/>ALuint<sp/>source,<sp/>ALsizei<sp/>n,<sp/>ALuint*<sp/>buffers<sp/>);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="263"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*<sp/>Knobs<sp/>and<sp/>dials</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alDistanceModel(<sp/>ALenum<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alDopplerFactor(<sp/>ALfloat<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>alDopplerVelocity(<sp/>ALfloat<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>AL_NO_PROTOTYPES<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="271"><highlight class="preprocessor"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="272"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*<sp/>OpenAL<sp/>Maintenance<sp/>Functions</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/>*<sp/>Initialization<sp/>and<sp/>exiting.</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/>*<sp/>State<sp/>Management<sp/>and<sp/>Query.</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/>*<sp/>Error<sp/>Handling.</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/>*<sp/>Extension<sp/>Support.</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="280"><highlight class="comment">/**<sp/>State<sp/>management.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alEnable)(<sp/>ALenum<sp/>capability<sp/>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alDisable)(<sp/>ALenum<sp/>capability<sp/>);<sp/></highlight></codeline>
<codeline lineno="283"><highlight class="normal">ALAPI<sp/>ALboolean<sp/>ALAPIENTRY<sp/>(*alIsEnabled)(<sp/>ALenum<sp/>capability<sp/>);<sp/></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="285"><highlight class="comment">/**<sp/>Application<sp/>preferences<sp/>for<sp/>driver<sp/>performance<sp/>choices.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alHint)(<sp/>ALenum<sp/>target,<sp/>ALenum<sp/>mode<sp/>);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="288"><highlight class="comment">/**<sp/>State<sp/>retrieval.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal">ALAPI<sp/>ALboolean<sp/>ALAPIENTRY<sp/>(*alGetBoolean)(<sp/>ALenum<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="290"><highlight class="normal">ALAPI<sp/>ALint<sp/><sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alGetInteger)(<sp/>ALenum<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal">ALAPI<sp/>ALfloat<sp/><sp/><sp/>ALAPIENTRY<sp/>(*alGetFloat)(<sp/>ALenum<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal">ALAPI<sp/>ALdouble<sp/><sp/>ALAPIENTRY<sp/>(*alGetDouble)(<sp/>ALenum<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alGetBooleanv)(<sp/>ALenum<sp/>param,<sp/>ALboolean*<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alGetIntegerv)(<sp/>ALenum<sp/>param,<sp/>ALint*<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alGetFloatv)(<sp/>ALenum<sp/>param,<sp/>ALfloat*<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alGetDoublev)(<sp/>ALenum<sp/>param,<sp/>ALdouble*<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal">ALAPI<sp/>ALubyte*<sp/><sp/>ALAPIENTRY<sp/>(*alGetString)(<sp/>ALenum<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="299"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>*<sp/>Error<sp/>support.</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*<sp/>Obtain<sp/>the<sp/>most<sp/>recent<sp/>error<sp/>generated<sp/>in<sp/>the<sp/>AL<sp/>state<sp/>machine.</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal">ALAPI<sp/>ALenum<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alGetError)(<sp/>ALvoid<sp/>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="306"><highlight class="comment">/**<sp/></highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/>*<sp/>Extension<sp/>support.</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/>*<sp/>Obtain<sp/>the<sp/>address<sp/>of<sp/>a<sp/>function<sp/>(usually<sp/>an<sp/>extension)</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/>*<sp/><sp/>with<sp/>the<sp/>name<sp/>fname.<sp/>All<sp/>addresses<sp/>are<sp/>context-independent.<sp/></highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal">ALAPI<sp/>ALboolean<sp/>ALAPIENTRY<sp/>(*alIsExtensionPresent)(<sp/>ALubyte*<sp/>fname<sp/>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="314"><highlight class="comment">/**<sp/></highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/>*<sp/>Extension<sp/>support.</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/>*<sp/>Obtain<sp/>the<sp/>address<sp/>of<sp/>a<sp/>function<sp/>(usually<sp/>an<sp/>extension)</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*<sp/><sp/>with<sp/>the<sp/>name<sp/>fname.<sp/>All<sp/>addresses<sp/>are<sp/>context-independent.<sp/></highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal">ALAPI<sp/>ALvoid*<sp/><sp/><sp/>ALAPIENTRY<sp/>(*alGetProcAddress)(<sp/>ALubyte*<sp/>fname<sp/>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="322"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/>*<sp/>Extension<sp/>support.</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/>*<sp/>Obtain<sp/>the<sp/>integer<sp/>value<sp/>of<sp/>an<sp/>enumeration<sp/>(usually<sp/>an<sp/>extension)<sp/>with<sp/>the<sp/>name<sp/>ename.<sp/></highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal">ALAPI<sp/>ALenum<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alGetEnumValue)(<sp/>ALubyte*<sp/>ename<sp/>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="331"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/>*<sp/>LISTENER</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/>*<sp/>Listener<sp/>is<sp/>the<sp/>sample<sp/>position<sp/>for<sp/>a<sp/>given<sp/>context.</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/>*<sp/>The<sp/>multi-channel<sp/>(usually<sp/>stereo)<sp/>output<sp/>stream<sp/>generated</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/>*<sp/><sp/>by<sp/>the<sp/>mixer<sp/>is<sp/>parametrized<sp/>by<sp/>this<sp/>Listener<sp/>object:</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/>*<sp/><sp/>its<sp/>position<sp/>and<sp/>velocity<sp/>relative<sp/>to<sp/>Sources,<sp/>within</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/>*<sp/><sp/>occluder<sp/>and<sp/>reflector<sp/>geometry.</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="342"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/>*<sp/>Listener<sp/>Environment:<sp/><sp/>default<sp/>0.</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alListeneri)(<sp/>ALenum<sp/>param,<sp/>ALint<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="349"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>*<sp/>Listener<sp/>Gain:<sp/><sp/>default<sp/>1.0f.</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alListenerf)(<sp/>ALenum<sp/>param,<sp/>ALfloat<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="356"><highlight class="comment">/**<sp/><sp/></highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/>*<sp/>Listener<sp/>Position.</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/>*<sp/>Listener<sp/>Velocity.</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alListener3f)(<sp/>ALenum<sp/>param,<sp/>ALfloat<sp/>v1,<sp/>ALfloat<sp/>v2,<sp/>ALfloat<sp/>v3<sp/>);<sp/></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="364"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>*<sp/>Listener<sp/>Position:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALfloat[3]</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/>*<sp/>Listener<sp/>Velocity:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALfloat[3]</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/>*<sp/>Listener<sp/>Orientation:<sp/><sp/><sp/><sp/><sp/>ALfloat[6]<sp/><sp/>(forward<sp/>and<sp/>up<sp/>vector).</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alListenerfv)(<sp/>ALenum<sp/>param,<sp/>ALfloat*<sp/>values<sp/>);<sp/></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alGetListeneri)(<sp/>ALenum<sp/>param,<sp/>ALint*<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alGetListenerf)(<sp/>ALenum<sp/>param,<sp/>ALfloat*<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="374"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alGetListener3f)(<sp/>ALenum<sp/>param,<sp/>ALfloat*<sp/>v1,<sp/>ALfloat*<sp/>v2,<sp/>ALfloat*<sp/>v3<sp/>);<sp/></highlight></codeline>
<codeline lineno="375"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alGetListenerfv)(<sp/>ALenum<sp/>param,<sp/>ALfloat*<sp/>values<sp/>);<sp/></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="378"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/>*<sp/>SOURCE</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>*<sp/>Source<sp/>objects<sp/>are<sp/>by<sp/>default<sp/>localized.<sp/>Sources</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>*<sp/><sp/>take<sp/>the<sp/>PCM<sp/>data<sp/>provided<sp/>in<sp/>the<sp/>specified<sp/>Buffer,</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>*<sp/><sp/>apply<sp/>Source-specific<sp/>modifications,<sp/>and<sp/>then</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/>*<sp/><sp/>submit<sp/>them<sp/>to<sp/>be<sp/>mixed<sp/>according<sp/>to<sp/>spatial<sp/></highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/>*<sp/><sp/>arrangement<sp/>etc.</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="389"><highlight class="comment">/**<sp/>Create<sp/>Source<sp/>objects.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alGenSources)(<sp/>ALsizei<sp/>n,<sp/>ALuint*<sp/>sources<sp/>);<sp/></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="392"><highlight class="comment">/**<sp/>Delete<sp/>Source<sp/>objects.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alDeleteSources)(<sp/>ALsizei<sp/>n,<sp/>ALuint*<sp/>sources<sp/>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="395"><highlight class="comment">/**<sp/>Verify<sp/>a<sp/>handle<sp/>is<sp/>a<sp/>valid<sp/>Source.<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="396"><highlight class="normal">ALAPI<sp/>ALboolean<sp/>ALAPIENTRY<sp/>(*alIsSource)(<sp/>ALuint<sp/>id<sp/>);<sp/></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="398"><highlight class="comment">/**<sp/>Set<sp/>an<sp/>integer<sp/>parameter<sp/>for<sp/>a<sp/>Source<sp/>object.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alSourcei)(<sp/>ALuint<sp/>source,<sp/>ALenum<sp/>param,<sp/>ALint<sp/>value<sp/>);<sp/></highlight></codeline>
<codeline lineno="400"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alSourcef)(<sp/>ALuint<sp/>source,<sp/>ALenum<sp/>param,<sp/>ALfloat<sp/>value<sp/>);<sp/></highlight></codeline>
<codeline lineno="401"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alSource3f)(<sp/>ALuint<sp/>source,<sp/>ALenum<sp/>param,<sp/>ALfloat<sp/>v1,<sp/>ALfloat<sp/>v2,<sp/>ALfloat<sp/>v3<sp/>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alSourcefv)(<sp/>ALuint<sp/>source,<sp/>ALenum<sp/>param,<sp/>ALfloat*<sp/>values<sp/>);<sp/></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="404"><highlight class="comment">/**<sp/>Get<sp/>an<sp/>integer<sp/>parameter<sp/>for<sp/>a<sp/>Source<sp/>object.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alGetSourcei)(<sp/>ALuint<sp/>source,<sp/><sp/>ALenum<sp/>param,<sp/>ALint*<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alGetSourcef)(<sp/>ALuint<sp/>source,<sp/><sp/>ALenum<sp/>param,<sp/>ALfloat*<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="407"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alGetSourcefv)(<sp/>ALuint<sp/>source,<sp/>ALenum<sp/>param,<sp/>ALfloat*<sp/>values<sp/>);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alSourcePlayv)(<sp/>ALsizei<sp/>n,<sp/>ALuint<sp/>*sources<sp/>);</highlight></codeline>
<codeline lineno="410"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alSourceStopv)(<sp/>ALsizei<sp/>n,<sp/>ALuint<sp/>*sources<sp/>);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="412"><highlight class="comment">/**<sp/>Activate<sp/>a<sp/>source,<sp/>start<sp/>replay.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alSourcePlay)(<sp/>ALuint<sp/>source<sp/>);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="415"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/>*<sp/>Pause<sp/>a<sp/>source,<sp/></highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/>*<sp/><sp/>temporarily<sp/>remove<sp/>it<sp/>from<sp/>the<sp/>mixer<sp/>list.</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alSourcePause)(<sp/>ALuint<sp/>source<sp/>);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="421"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/>*<sp/>Stop<sp/>a<sp/>source,</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/>*<sp/><sp/>temporarily<sp/>remove<sp/>it<sp/>from<sp/>the<sp/>mixer<sp/>list,</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/>*<sp/><sp/>and<sp/>reset<sp/>its<sp/>internal<sp/>state<sp/>to<sp/>pre-Play.</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/>*<sp/>To<sp/>remove<sp/>a<sp/>Source<sp/>completely,<sp/>it<sp/>has<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/>*<sp/><sp/>deleted<sp/>following<sp/>Stop,<sp/>or<sp/>before<sp/>Play.</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alSourceStop)(<sp/>ALuint<sp/>source<sp/>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="432"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/>*<sp/>BUFFER</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/>*<sp/>Buffer<sp/>objects<sp/>are<sp/>storage<sp/>space<sp/>for<sp/>sample<sp/>data.</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/>*<sp/>Buffers<sp/>are<sp/>referred<sp/>to<sp/>by<sp/>Sources.<sp/>There<sp/>can<sp/>be<sp/>more<sp/>than</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/>*<sp/><sp/>one<sp/>Source<sp/>using<sp/>the<sp/>same<sp/>Buffer<sp/>data.<sp/>If<sp/>Buffers<sp/>have</highlight></codeline>
<codeline lineno="437"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>be<sp/>duplicated<sp/>on<sp/>a<sp/>per-Source<sp/>basis,<sp/>the<sp/>driver<sp/>has<sp/>to</highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/>*<sp/><sp/>take<sp/>care<sp/>of<sp/>allocation,<sp/>copying,<sp/>and<sp/>deallocation<sp/>as<sp/>well</highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/>*<sp/><sp/>as<sp/>propagating<sp/>buffer<sp/>data<sp/>changes.</highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="445"><highlight class="comment">/**<sp/>Buffer<sp/>object<sp/>generation.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alGenBuffers)(<sp/>ALsizei<sp/>n,<sp/>ALuint*<sp/>buffers<sp/>);</highlight></codeline>
<codeline lineno="447"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alDeleteBuffers)(<sp/>ALsizei<sp/>n,<sp/>ALuint*<sp/>buffers<sp/>);</highlight></codeline>
<codeline lineno="448"><highlight class="normal">ALAPI<sp/>ALboolean<sp/>ALAPIENTRY<sp/>(*alIsBuffer)(<sp/>ALuint<sp/>buffer<sp/>);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="450"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/>*<sp/>Specify<sp/>the<sp/>data<sp/>to<sp/>be<sp/>filled<sp/>into<sp/>a<sp/>buffer.</highlight></codeline>
<codeline lineno="452"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alBufferData)(<sp/>ALuint<sp/><sp/><sp/>buffer,</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALenum<sp/><sp/><sp/>format,</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALvoid*<sp/><sp/>data,</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALsizei<sp/><sp/>size,</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALsizei<sp/><sp/>freq<sp/>);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alGetBufferi)(<sp/>ALuint<sp/>buffer,<sp/>ALenum<sp/>param,<sp/>ALint*<sp/><sp/><sp/>value<sp/>);</highlight></codeline>
<codeline lineno="460"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alGetBufferf)(<sp/>ALuint<sp/>buffer,<sp/>ALenum<sp/>param,<sp/>ALfloat*<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="465"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/>*<sp/>Queue<sp/>stuff</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alSourceQueueBuffers)(<sp/>ALuint<sp/>source,<sp/>ALsizei<sp/>n,<sp/>ALuint*<sp/>buffers<sp/>);</highlight></codeline>
<codeline lineno="469"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alSourceUnqueueBuffers)(<sp/>ALuint<sp/>source,<sp/>ALsizei<sp/>n,<sp/>ALuint*<sp/>buffers<sp/>);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="471"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/>*<sp/>Knobs<sp/>and<sp/>dials</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alDistanceModel)(<sp/>ALenum<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="475"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alDopplerFactor)(<sp/>ALfloat<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="476"><highlight class="normal">ALAPI<sp/>ALvoid<sp/><sp/><sp/><sp/>ALAPIENTRY<sp/>(*alDopplerVelocity)(<sp/>ALfloat<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>AL_NO_PROTOTYPES<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="479"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TARGET_OS_MAC</highlight></codeline>
<codeline lineno="481"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/>#if<sp/>TARGET_OS_MAC</highlight></codeline>
<codeline lineno="482"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>export<sp/>off</highlight></codeline>
<codeline lineno="483"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/>#endif</highlight></codeline>
<codeline lineno="484"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="485"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="487"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="489"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="491"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/openal/include/al.h"/>
  </compounddef>
</doxygen>
