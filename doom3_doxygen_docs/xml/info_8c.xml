<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="info_8c" kind="file">
    <compoundname>info.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">ctype.h</includes>
    <includes refid="ogg_8h" local="yes">../ogg/ogg.h</includes>
    <includes refid="sound_2_ogg_vorbis_2vorbis_2codec_8h" local="yes">../vorbis/codec.h</includes>
    <includes refid="codec__internal_8h" local="yes">codec_internal.h</includes>
    <includes refid="codebook_8h" local="yes">codebook.h</includes>
    <includes refid="registry_8h" local="yes">registry.h</includes>
    <includes refid="sound_2_ogg_vorbis_2vorbissrc_2window_8h" local="yes">window.h</includes>
    <includes refid="psy_8h" local="yes">psy.h</includes>
    <includes refid="sound_2_ogg_vorbis_2vorbissrc_2_misc_8h" local="yes">misc.h</includes>
    <includes refid="os_8h" local="yes">os.h</includes>
    <incdepgraph>
      <node id="2050">
        <label>stdlib.h</label>
      </node>
      <node id="2049">
        <label>E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c</label>
        <link refid="info.c"/>
        <childnode refid="2050" relation="include">
        </childnode>
        <childnode refid="2051" relation="include">
        </childnode>
        <childnode refid="2052" relation="include">
        </childnode>
      </node>
      <node id="2051">
        <label>string.h</label>
      </node>
      <node id="2052">
        <label>ctype.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="info_8c_1a2905056776588600725679ad1791e700" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ilog2</definition>
        <argsstring>(unsigned int v)</argsstring>
        <name>ilog2</name>
        <param>
          <type>unsigned int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" line="35" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" bodystart="35" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="info_8c_1acc638ce8d5290f6d48568b504539fded" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _v_writestring</definition>
        <argsstring>(oggpack_buffer *o, char *s, int bytes)</argsstring>
        <name>_v_writestring</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>o</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" line="45" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" bodystart="45" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="info_8c_1a294e03cb7b64b84a00a560e90ec93697" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _v_readstring</definition>
        <argsstring>(oggpack_buffer *o, char *buf, int bytes)</argsstring>
        <name>_v_readstring</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>o</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" line="52" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" bodystart="52" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="info_8c_1a0bab2093941e2bb89651d62ca5997676" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vorbis_comment_init</definition>
        <argsstring>(vorbis_comment *vc)</argsstring>
        <name>vorbis_comment_init</name>
        <param>
          <type><ref refid="structvorbis__comment" kindref="compound">vorbis_comment</ref> *</type>
          <declname>vc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" line="58" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="info_8c_1a708c25f6900183f62e2a3bbffc722559" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vorbis_comment_add</definition>
        <argsstring>(vorbis_comment *vc, char *comment)</argsstring>
        <name>vorbis_comment_add</name>
        <param>
          <type><ref refid="structvorbis__comment" kindref="compound">vorbis_comment</ref> *</type>
          <declname>vc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>comment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" line="62" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" bodystart="62" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="info_8c_1a505b63284ec3096eaacaf20c9c020b83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vorbis_comment_add_tag</definition>
        <argsstring>(vorbis_comment *vc, char *tag, char *contents)</argsstring>
        <name>vorbis_comment_add_tag</name>
        <param>
          <type><ref refid="structvorbis__comment" kindref="compound">vorbis_comment</ref> *</type>
          <declname>vc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>contents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" line="74" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" bodystart="74" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="info_8c_1a8c503cc21d98b557766312f552576b12" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tagcompare</definition>
        <argsstring>(const char *s1, const char *s2, int n)</argsstring>
        <name>tagcompare</name>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" line="84" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" bodystart="84" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="info_8c_1ad57835e8125a6d47a0ad9de2c37e8887" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* vorbis_comment_query</definition>
        <argsstring>(vorbis_comment *vc, char *tag, int count)</argsstring>
        <name>vorbis_comment_query</name>
        <param>
          <type><ref refid="structvorbis__comment" kindref="compound">vorbis_comment</ref> *</type>
          <declname>vc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" line="94" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" bodystart="94" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="info_8c_1ac943570efb6801e44bfc82ce02748c78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vorbis_comment_query_count</definition>
        <argsstring>(vorbis_comment *vc, char *tag)</argsstring>
        <name>vorbis_comment_query_count</name>
        <param>
          <type><ref refid="structvorbis__comment" kindref="compound">vorbis_comment</ref> *</type>
          <declname>vc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" line="115" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" bodystart="115" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="info_8c_1a2fd38dcf146b850e88f281978b580d3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vorbis_comment_clear</definition>
        <argsstring>(vorbis_comment *vc)</argsstring>
        <name>vorbis_comment_clear</name>
        <param>
          <type><ref refid="structvorbis__comment" kindref="compound">vorbis_comment</ref> *</type>
          <declname>vc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" line="130" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" bodystart="130" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="info_8c_1acb7d9b60b9c9f057e1bed14c76810ae5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vorbis_info_blocksize</definition>
        <argsstring>(vorbis_info *vi, int zo)</argsstring>
        <name>vorbis_info_blocksize</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>zo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" line="144" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="info_8c_1af0ed4e74fe68802c7d337a2645e759d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vorbis_info_init</definition>
        <argsstring>(vorbis_info *vi)</argsstring>
        <name>vorbis_info_init</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" line="150" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" bodystart="150" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="info_8c_1abaf171c1341b23e1c2eed7dab00d9f4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vorbis_info_clear</definition>
        <argsstring>(vorbis_info *vi)</argsstring>
        <name>vorbis_info_clear</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" line="155" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" bodystart="155" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="info_8c_1ab0ee5b88f5e58567922e51e5ce103274" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int _vorbis_unpack_info</definition>
        <argsstring>(vorbis_info *vi, oggpack_buffer *opb)</argsstring>
        <name>_vorbis_unpack_info</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>opb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" line="195" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" bodystart="195" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="info_8c_1a1112dab5419bfca53875de2934a7eb0d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int _vorbis_unpack_comment</definition>
        <argsstring>(vorbis_comment *vc, oggpack_buffer *opb)</argsstring>
        <name>_vorbis_unpack_comment</name>
        <param>
          <type><ref refid="structvorbis__comment" kindref="compound">vorbis_comment</ref> *</type>
          <declname>vc</declname>
        </param>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>opb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" line="225" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" bodystart="225" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="info_8c_1a1b75c1db06707b7c26f097e7c5dfafeb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int _vorbis_unpack_books</definition>
        <argsstring>(vorbis_info *vi, oggpack_buffer *opb)</argsstring>
        <name>_vorbis_unpack_books</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>opb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" line="253" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" bodystart="253" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="info_8c_1af1192fabbd28f89d048de1b381463219" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vorbis_synthesis_headerin</definition>
        <argsstring>(vorbis_info *vi, vorbis_comment *vc, ogg_packet *op)</argsstring>
        <name>vorbis_synthesis_headerin</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type><ref refid="structvorbis__comment" kindref="compound">vorbis_comment</ref> *</type>
          <declname>vc</declname>
        </param>
        <param>
          <type><ref refid="structogg__packet" kindref="compound">ogg_packet</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" line="336" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" bodystart="336" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="info_8c_1a8fc76689ee07d83717d0cb2533e8a5bb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int _vorbis_pack_info</definition>
        <argsstring>(oggpack_buffer *opb, vorbis_info *vi)</argsstring>
        <name>_vorbis_pack_info</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>opb</declname>
        </param>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" line="394" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" bodystart="394" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="info_8c_1add54fab7c094d5f98560b177e6185118" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int _vorbis_pack_comment</definition>
        <argsstring>(oggpack_buffer *opb, vorbis_comment *vc)</argsstring>
        <name>_vorbis_pack_comment</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>opb</declname>
        </param>
        <param>
          <type><ref refid="structvorbis__comment" kindref="compound">vorbis_comment</ref> *</type>
          <declname>vc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" line="418" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" bodystart="418" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="info_8c_1aa980d3dfa865f20e59b4edaab34a3f05" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int _vorbis_pack_books</definition>
        <argsstring>(oggpack_buffer *opb, vorbis_info *vi)</argsstring>
        <name>_vorbis_pack_books</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>opb</declname>
        </param>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" line="449" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" bodystart="449" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="info_8c_1ac031289d0c9856508b5bff3ffb992246" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vorbis_commentheader_out</definition>
        <argsstring>(vorbis_comment *vc, ogg_packet *op)</argsstring>
        <name>vorbis_commentheader_out</name>
        <param>
          <type><ref refid="structvorbis__comment" kindref="compound">vorbis_comment</ref> *</type>
          <declname>vc</declname>
        </param>
        <param>
          <type><ref refid="structogg__packet" kindref="compound">ogg_packet</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" line="505" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" bodystart="505" bodyend="522"/>
      </memberdef>
      <memberdef kind="function" id="info_8c_1a76b877e3ab680d7537ec58ebd7fa990a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vorbis_analysis_headerout</definition>
        <argsstring>(vorbis_dsp_state *v, vorbis_comment *vc, ogg_packet *op, ogg_packet *op_comm, ogg_packet *op_code)</argsstring>
        <name>vorbis_analysis_headerout</name>
        <param>
          <type><ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="structvorbis__comment" kindref="compound">vorbis_comment</ref> *</type>
          <declname>vc</declname>
        </param>
        <param>
          <type><ref refid="structogg__packet" kindref="compound">ogg_packet</ref> *</type>
          <declname>op</declname>
        </param>
        <param>
          <type><ref refid="structogg__packet" kindref="compound">ogg_packet</ref> *</type>
          <declname>op_comm</declname>
        </param>
        <param>
          <type><ref refid="structogg__packet" kindref="compound">ogg_packet</ref> *</type>
          <declname>op_code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" line="524" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" bodystart="524" bodyend="597"/>
      </memberdef>
      <memberdef kind="function" id="info_8c_1a33bdf9020eff4b7aebf05f206312b6d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double vorbis_granule_time</definition>
        <argsstring>(vorbis_dsp_state *v, ogg_int64_t granulepos)</argsstring>
        <name>vorbis_granule_time</name>
        <param>
          <type><ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>ogg_int64_t</type>
          <declname>granulepos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" line="599" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c" bodystart="599" bodyend="603"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>THIS<sp/>FILE<sp/>IS<sp/>PART<sp/>OF<sp/>THE<sp/>OggVorbis<sp/>SOFTWARE<sp/>CODEC<sp/>SOURCE<sp/>CODE.<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>USE,<sp/>DISTRIBUTION<sp/>AND<sp/>REPRODUCTION<sp/>OF<sp/>THIS<sp/>LIBRARY<sp/>SOURCE<sp/>IS<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>GOVERNED<sp/>BY<sp/>A<sp/>BSD-STYLE<sp/>SOURCE<sp/>LICENSE<sp/>INCLUDED<sp/>WITH<sp/>THIS<sp/>SOURCE<sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>IN<sp/>&apos;COPYING&apos;.<sp/>PLEASE<sp/>READ<sp/>THESE<sp/>TERMS<sp/>BEFORE<sp/>DISTRIBUTING.<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>THE<sp/>OggVorbis<sp/>SOURCE<sp/>CODE<sp/>IS<sp/>(C)<sp/>COPYRIGHT<sp/>1994-2003<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>by<sp/>the<sp/>XIPHOPHORUS<sp/>Company<sp/>http://www.xiph.org/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>********************************************************************</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>function:<sp/>maintain<sp/>the<sp/>info<sp/>structure,<sp/>info<sp/>&lt;-&gt;<sp/>header<sp/>packets</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>last<sp/>mod:<sp/>$Id:<sp/>info.c,v<sp/>1.62<sp/>2003/09/10<sp/>01:10:18<sp/>xiphmont<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>general<sp/>handling<sp/>of<sp/>the<sp/>header<sp/>and<sp/>the<sp/>vorbis_info<sp/>structure<sp/>(and</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/>substructures)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../ogg/ogg.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../vorbis/codec.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;codec_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;codebook.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;registry.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;window.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;psy.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;misc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;os.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>helpers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ilog2(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v){</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=0;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v)--v;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(v){</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>ret++;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>v&gt;&gt;=1;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret);</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_v_writestring(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*o,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes){</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(bytes--){</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>oggpack_write(o,*s++,8);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_v_readstring(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*o,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes){</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(bytes--){</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>*buf++=oggpack_read(o,8);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vorbis_comment_init(<ref refid="structvorbis__comment" kindref="compound">vorbis_comment</ref><sp/>*vc){</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>memset(vc,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*vc));</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vorbis_comment_add(<ref refid="structvorbis__comment" kindref="compound">vorbis_comment</ref><sp/>*vc,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*comment){</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>vc-&gt;user_comments=_ogg_realloc(vc-&gt;user_comments,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(vc-&gt;comments+2)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*vc-&gt;user_comments));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>vc-&gt;comment_lengths=_ogg_realloc(vc-&gt;comment_lengths,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(vc-&gt;comments+2)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*vc-&gt;comment_lengths));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>vc-&gt;comment_lengths[vc-&gt;comments]=strlen(comment);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>vc-&gt;user_comments[vc-&gt;comments]=_ogg_malloc(vc-&gt;comment_lengths[vc-&gt;comments]+1);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>strcpy(vc-&gt;user_comments[vc-&gt;comments],<sp/>comment);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>vc-&gt;comments++;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>vc-&gt;user_comments[vc-&gt;comments]=NULL;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vorbis_comment_add_tag(<ref refid="structvorbis__comment" kindref="compound">vorbis_comment</ref><sp/>*vc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tag,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*contents){</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*comment=alloca(strlen(tag)+strlen(contents)+2);<sp/></highlight><highlight class="comment">/*<sp/>+2<sp/>for<sp/>=<sp/>and<sp/>\0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>strcpy(comment,<sp/>tag);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>strcat(comment,<sp/></highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>strcat(comment,<sp/>contents);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>vorbis_comment_add(vc,<sp/>comment);</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>more<sp/>or<sp/>less<sp/>the<sp/>same<sp/>as<sp/>strncasecmp<sp/>-<sp/>but<sp/>that<sp/>doesn&apos;t<sp/>exist</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/>everywhere,<sp/>and<sp/>this<sp/>is<sp/>a<sp/>fairly<sp/>trivial<sp/>function,<sp/>so<sp/>we<sp/>include<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tagcompare(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n){</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c=0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(c<sp/>&lt;<sp/>n){</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(toupper(s1[c])<sp/>!=<sp/>toupper(s2[c]))</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>c++;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*vorbis_comment_query(<ref refid="structvorbis__comment" kindref="compound">vorbis_comment</ref><sp/>*vc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tag,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count){</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>found<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>taglen<sp/>=<sp/>strlen(tag)+1;<sp/></highlight><highlight class="comment">/*<sp/>+1<sp/>for<sp/>the<sp/>=<sp/>we<sp/>append<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fulltag<sp/>=<sp/>alloca(taglen+<sp/>1);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>strcpy(fulltag,<sp/>tag);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>strcat(fulltag,<sp/></highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vc-&gt;comments;i++){</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!tagcompare(vc-&gt;user_comments[i],<sp/>fulltag,<sp/>taglen)){</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(count<sp/>==<sp/>found)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>return<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>data,<sp/>not<sp/>a<sp/>copy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vc-&gt;user_comments[i]<sp/>+<sp/>taglen;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>found++;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/></highlight><highlight class="comment">/*<sp/>didn&apos;t<sp/>find<sp/>anything<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vorbis_comment_query_count(<ref refid="structvorbis__comment" kindref="compound">vorbis_comment</ref><sp/>*vc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tag){</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,count=0;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>taglen<sp/>=<sp/>strlen(tag)+1;<sp/></highlight><highlight class="comment">/*<sp/>+1<sp/>for<sp/>the<sp/>=<sp/>we<sp/>append<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fulltag<sp/>=<sp/>alloca(taglen+1);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>strcpy(fulltag,tag);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>strcat(fulltag,<sp/></highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vc-&gt;comments;i++){</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!tagcompare(vc-&gt;user_comments[i],<sp/>fulltag,<sp/>taglen))</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vorbis_comment_clear(<ref refid="structvorbis__comment" kindref="compound">vorbis_comment</ref><sp/>*vc){</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vc){</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vc-&gt;comments;i++)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vc-&gt;user_comments[i])_ogg_free(vc-&gt;user_comments[i]);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vc-&gt;user_comments)_ogg_free(vc-&gt;user_comments);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vc-&gt;comment_lengths)_ogg_free(vc-&gt;comment_lengths);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vc-&gt;vendor)_ogg_free(vc-&gt;vendor);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>memset(vc,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*vc));</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>blocksize<sp/>0<sp/>is<sp/>guaranteed<sp/>to<sp/>be<sp/>short,<sp/>1<sp/>is<sp/>guarantted<sp/>to<sp/>be<sp/>long.</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/>They<sp/>may<sp/>be<sp/>equal,<sp/>but<sp/>short<sp/>will<sp/>never<sp/>ge<sp/>greater<sp/>than<sp/>long<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vorbis_info_blocksize(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zo){</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci<sp/>=<sp/>vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ci<sp/>?<sp/>ci-&gt;blocksizes[zo]<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>used<sp/>by<sp/>synthesis,<sp/>which<sp/>has<sp/>a<sp/>full,<sp/>alloced<sp/>vi<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vorbis_info_init(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi){</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>memset(vi,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*vi));</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>vi-&gt;codec_setup=_ogg_calloc(1,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref>));</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vorbis_info_clear(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi){</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/><sp/><sp/><sp/><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ci){</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ci-&gt;modes;i++)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ci-&gt;mode_param[i])_ogg_free(ci-&gt;mode_param[i]);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ci-&gt;maps;i++)<sp/></highlight><highlight class="comment">/*<sp/>unpack<sp/>does<sp/>the<sp/>range<sp/>checking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_mapping_P[ci-&gt;map_type[i]]-&gt;free_info(ci-&gt;map_param[i]);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ci-&gt;floors;i++)<sp/></highlight><highlight class="comment">/*<sp/>unpack<sp/>does<sp/>the<sp/>range<sp/>checking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_floor_P[ci-&gt;floor_type[i]]-&gt;free_info(ci-&gt;floor_param[i]);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ci-&gt;residues;i++)<sp/></highlight><highlight class="comment">/*<sp/>unpack<sp/>does<sp/>the<sp/>range<sp/>checking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_residue_P[ci-&gt;residue_type[i]]-&gt;free_info(ci-&gt;residue_param[i]);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ci-&gt;books;i++){</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ci-&gt;book_param[i]){</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>knows<sp/>if<sp/>the<sp/>book<sp/>was<sp/>not<sp/>alloced<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_staticbook_destroy(ci-&gt;book_param[i]);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ci-&gt;fullbooks)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_book_clear(ci-&gt;fullbooks+i);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ci-&gt;fullbooks)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>_ogg_free(ci-&gt;fullbooks);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ci-&gt;psys;i++)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_vi_psy_free(ci-&gt;psy_param[i]);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>_ogg_free(ci);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>memset(vi,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*vi));</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Header<sp/>packing/unpacking<sp/>********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_vorbis_unpack_info(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi,<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*opb){</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/><sp/><sp/><sp/><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ci)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EFAULT);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>vi-&gt;version=oggpack_read(opb,32);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vi-&gt;version!=0)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EVERSION);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>vi-&gt;channels=oggpack_read(opb,8);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>vi-&gt;rate=oggpack_read(opb,32);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>vi-&gt;bitrate_upper=oggpack_read(opb,32);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>vi-&gt;bitrate_nominal=oggpack_read(opb,32);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>vi-&gt;bitrate_lower=oggpack_read(opb,32);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>ci-&gt;blocksizes[0]=1&lt;&lt;oggpack_read(opb,4);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>ci-&gt;blocksizes[1]=1&lt;&lt;oggpack_read(opb,4);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vi-&gt;rate&lt;1)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vi-&gt;channels&lt;1)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ci-&gt;blocksizes[0]&lt;8)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;<sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ci-&gt;blocksizes[1]&lt;ci-&gt;blocksizes[0])</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(oggpack_read(opb,1)!=1)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;<sp/></highlight><highlight class="comment">/*<sp/>EOP<sp/>check<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/>err_out:</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>vorbis_info_clear(vi);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EBADHEADER);</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_vorbis_unpack_comment(<ref refid="structvorbis__comment" kindref="compound">vorbis_comment</ref><sp/>*vc,<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*opb){</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vendorlen=oggpack_read(opb,32);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vendorlen&lt;0)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>vc-&gt;vendor=_ogg_calloc(vendorlen+1,1);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>_v_readstring(opb,vc-&gt;vendor,vendorlen);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>vc-&gt;comments=oggpack_read(opb,32);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vc-&gt;comments&lt;0)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>vc-&gt;user_comments=_ogg_calloc(vc-&gt;comments+1,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*vc-&gt;user_comments));</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>vc-&gt;comment_lengths=_ogg_calloc(vc-&gt;comments+1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*vc-&gt;comment_lengths));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vc-&gt;comments;i++){</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len=oggpack_read(opb,32);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(len&lt;0)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>vc-&gt;comment_lengths[i]=len;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>vc-&gt;user_comments[i]=_ogg_calloc(len+1,1);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>_v_readstring(opb,vc-&gt;user_comments[i],len);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(oggpack_read(opb,1)!=1)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;<sp/></highlight><highlight class="comment">/*<sp/>EOP<sp/>check<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/>err_out:</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>vorbis_comment_clear(vc);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EBADHEADER);</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>all<sp/>of<sp/>the<sp/>real<sp/>encoding<sp/>details<sp/>are<sp/>here.<sp/><sp/>The<sp/>modes,<sp/>books,</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/><sp/><sp/>everything<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_vorbis_unpack_books(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi,<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*opb){</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/><sp/><sp/><sp/><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ci)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EFAULT);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>codebooks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>ci-&gt;books=oggpack_read(opb,8)+1;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*ci-&gt;book_param=_ogg_calloc(ci-&gt;books,sizeof(*ci-&gt;book_param));*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ci-&gt;books;i++){</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>ci-&gt;book_param[i]=_ogg_calloc(1,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ci-&gt;book_param[i]));</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vorbis_staticbook_unpack(opb,ci-&gt;book_param[i]))</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>time<sp/>backend<sp/>settings;<sp/>hooks<sp/>are<sp/>unused<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>times=oggpack_read(opb,6)+1;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;times;i++){</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test=oggpack_read(opb,16);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(test&lt;0<sp/>||<sp/>test&gt;=VI_TIMEB)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>floor<sp/>backend<sp/>settings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>ci-&gt;floors=oggpack_read(opb,6)+1;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*ci-&gt;floor_type=_ogg_malloc(ci-&gt;floors*sizeof(*ci-&gt;floor_type));*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*ci-&gt;floor_param=_ogg_calloc(ci-&gt;floors,sizeof(void<sp/>*));*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ci-&gt;floors;i++){</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>ci-&gt;floor_type[i]=oggpack_read(opb,16);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ci-&gt;floor_type[i]&lt;0<sp/>||<sp/>ci-&gt;floor_type[i]&gt;=VI_FLOORB)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>ci-&gt;floor_param[i]=_floor_P[ci-&gt;floor_type[i]]-&gt;unpack(vi,opb);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ci-&gt;floor_param[i])</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>residue<sp/>backend<sp/>settings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>ci-&gt;residues=oggpack_read(opb,6)+1;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*ci-&gt;residue_type=_ogg_malloc(ci-&gt;residues*sizeof(*ci-&gt;residue_type));*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*ci-&gt;residue_param=_ogg_calloc(ci-&gt;residues,sizeof(void<sp/>*));*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ci-&gt;residues;i++){</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>ci-&gt;residue_type[i]=oggpack_read(opb,16);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ci-&gt;residue_type[i]&lt;0<sp/>||<sp/>ci-&gt;residue_type[i]&gt;=VI_RESB)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>ci-&gt;residue_param[i]=_residue_P[ci-&gt;residue_type[i]]-&gt;unpack(vi,opb);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ci-&gt;residue_param[i])</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>map<sp/>backend<sp/>settings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>ci-&gt;maps=oggpack_read(opb,6)+1;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*ci-&gt;map_type=_ogg_malloc(ci-&gt;maps*sizeof(*ci-&gt;map_type));*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*ci-&gt;map_param=_ogg_calloc(ci-&gt;maps,sizeof(void<sp/>*));*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ci-&gt;maps;i++){</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>ci-&gt;map_type[i]=oggpack_read(opb,16);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ci-&gt;map_type[i]&lt;0<sp/>||<sp/>ci-&gt;map_type[i]&gt;=VI_MAPB)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>ci-&gt;map_param[i]=_mapping_P[ci-&gt;map_type[i]]-&gt;unpack(vi,opb);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ci-&gt;map_param[i])</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>mode<sp/>settings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>ci-&gt;modes=oggpack_read(opb,6)+1;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*vi-&gt;mode_param=_ogg_calloc(vi-&gt;modes,sizeof(void<sp/>*));*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ci-&gt;modes;i++){</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>ci-&gt;mode_param[i]=_ogg_calloc(1,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ci-&gt;mode_param[i]));</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>ci-&gt;mode_param[i]-&gt;blockflag=oggpack_read(opb,1);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>ci-&gt;mode_param[i]-&gt;windowtype=oggpack_read(opb,16);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>ci-&gt;mode_param[i]-&gt;transformtype=oggpack_read(opb,16);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>ci-&gt;mode_param[i]-&gt;mapping=oggpack_read(opb,8);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ci-&gt;mode_param[i]-&gt;windowtype&gt;=VI_WINDOWB)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ci-&gt;mode_param[i]-&gt;transformtype&gt;=VI_WINDOWB)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ci-&gt;mode_param[i]-&gt;mapping&gt;=ci-&gt;maps)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(oggpack_read(opb,1)!=1)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;<sp/></highlight><highlight class="comment">/*<sp/>top<sp/>level<sp/>EOP<sp/>check<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/>err_out:</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>vorbis_info_clear(vi);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EBADHEADER);</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>Vorbis<sp/>header<sp/>is<sp/>in<sp/>three<sp/>packets;<sp/>the<sp/>initial<sp/>small<sp/>packet<sp/>in</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/><sp/><sp/>the<sp/>first<sp/>page<sp/>that<sp/>identifies<sp/>basic<sp/>parameters,<sp/>a<sp/>second<sp/>packet</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/><sp/><sp/>with<sp/>bitstream<sp/>comments<sp/>and<sp/>a<sp/>third<sp/>packet<sp/>that<sp/>holds<sp/>the</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/><sp/><sp/>codebook.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vorbis_synthesis_headerin(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi,<ref refid="structvorbis__comment" kindref="compound">vorbis_comment</ref><sp/>*vc,<ref refid="structogg__packet" kindref="compound">ogg_packet</ref><sp/>*op){</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>opb;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(op){</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>oggpack_readinit(&amp;opb,op-&gt;packet,op-&gt;bytes);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Which<sp/>of<sp/>the<sp/>three<sp/>types<sp/>of<sp/>header<sp/>is<sp/>this?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Also<sp/>verify<sp/>header-ness,<sp/>vorbis<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[6];</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>packtype=oggpack_read(&amp;opb,8);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(buffer,0,6);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_v_readstring(&amp;opb,buffer,6);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(memcmp(buffer,</highlight><highlight class="stringliteral">&quot;vorbis&quot;</highlight><highlight class="normal">,6)){</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>a<sp/>vorbis<sp/>header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_ENOTVORBIS);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(packtype){</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x01:<sp/></highlight><highlight class="comment">/*<sp/>least<sp/>significant<sp/>*bit*<sp/>is<sp/>read<sp/>first<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!op-&gt;b_o_s){</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>the<sp/>initial<sp/>packet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EBADHEADER);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vi-&gt;rate!=0){</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>previously<sp/>initialized<sp/>info<sp/>header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EBADHEADER);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(_vorbis_unpack_info(vi,&amp;opb));</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x03:<sp/></highlight><highlight class="comment">/*<sp/>least<sp/>significant<sp/>*bit*<sp/>is<sp/>read<sp/>first<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vi-&gt;rate==0){</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>um...<sp/>we<sp/>didn&apos;t<sp/>get<sp/>the<sp/>initial<sp/>header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EBADHEADER);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(_vorbis_unpack_comment(vc,&amp;opb));</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x05:<sp/></highlight><highlight class="comment">/*<sp/>least<sp/>significant<sp/>*bit*<sp/>is<sp/>read<sp/>first<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vi-&gt;rate==0<sp/>||<sp/>vc-&gt;vendor==NULL){</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>um...<sp/>we<sp/>didn;t<sp/>get<sp/>the<sp/>initial<sp/>header<sp/>or<sp/>comments<sp/>yet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EBADHEADER);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(_vorbis_unpack_books(vi,&amp;opb));</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>a<sp/>valid<sp/>vorbis<sp/>header<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EBADHEADER);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EBADHEADER);</highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>pack<sp/>side<sp/>**********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_vorbis_pack_info(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*opb,<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi){</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/><sp/><sp/><sp/><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ci)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EFAULT);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>preamble<sp/>*/</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>oggpack_write(opb,0x01,8);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>_v_writestring(opb,</highlight><highlight class="stringliteral">&quot;vorbis&quot;</highlight><highlight class="normal">,<sp/>6);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>basic<sp/>information<sp/>about<sp/>the<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>oggpack_write(opb,0x00,32);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>oggpack_write(opb,vi-&gt;channels,8);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>oggpack_write(opb,vi-&gt;rate,32);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>oggpack_write(opb,vi-&gt;bitrate_upper,32);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>oggpack_write(opb,vi-&gt;bitrate_nominal,32);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>oggpack_write(opb,vi-&gt;bitrate_lower,32);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>oggpack_write(opb,ilog2(ci-&gt;blocksizes[0]),4);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>oggpack_write(opb,ilog2(ci-&gt;blocksizes[1]),4);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>oggpack_write(opb,1,1);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_vorbis_pack_comment(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*opb,<ref refid="structvorbis__comment" kindref="compound">vorbis_comment</ref><sp/>*vc){</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>temp[]=</highlight><highlight class="stringliteral">&quot;Xiph.Org<sp/>libVorbis<sp/>I<sp/>20030909&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes<sp/>=<sp/>strlen(temp);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>preamble<sp/>*/</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>oggpack_write(opb,0x03,8);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>_v_writestring(opb,</highlight><highlight class="stringliteral">&quot;vorbis&quot;</highlight><highlight class="normal">,<sp/>6);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>vendor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>oggpack_write(opb,bytes,32);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>_v_writestring(opb,temp,<sp/>bytes);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>comments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>oggpack_write(opb,vc-&gt;comments,32);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vc-&gt;comments){</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vc-&gt;comments;i++){</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vc-&gt;user_comments[i]){</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>oggpack_write(opb,vc-&gt;comment_lengths[i],32);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>_v_writestring(opb,vc-&gt;user_comments[i],<sp/>vc-&gt;comment_lengths[i]);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>oggpack_write(opb,0,32);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>oggpack_write(opb,1,1);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_vorbis_pack_books(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*opb,<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi){</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/><sp/><sp/><sp/><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ci)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EFAULT);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>oggpack_write(opb,0x05,8);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>_v_writestring(opb,</highlight><highlight class="stringliteral">&quot;vorbis&quot;</highlight><highlight class="normal">,<sp/>6);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>books<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>oggpack_write(opb,ci-&gt;books-1,8);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ci-&gt;books;i++)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vorbis_staticbook_pack(ci-&gt;book_param[i],opb))</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>times;<sp/>hook<sp/>placeholders<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>oggpack_write(opb,0,6);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>oggpack_write(opb,0,16);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>floors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>oggpack_write(opb,ci-&gt;floors-1,6);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ci-&gt;floors;i++){</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>oggpack_write(opb,ci-&gt;floor_type[i],16);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_floor_P[ci-&gt;floor_type[i]]-&gt;pack)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_floor_P[ci-&gt;floor_type[i]]-&gt;pack(ci-&gt;floor_param[i],opb);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>residues<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>oggpack_write(opb,ci-&gt;residues-1,6);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ci-&gt;residues;i++){</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>oggpack_write(opb,ci-&gt;residue_type[i],16);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>_residue_P[ci-&gt;residue_type[i]]-&gt;pack(ci-&gt;residue_param[i],opb);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>maps<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>oggpack_write(opb,ci-&gt;maps-1,6);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ci-&gt;maps;i++){</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>oggpack_write(opb,ci-&gt;map_type[i],16);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>_mapping_P[ci-&gt;map_type[i]]-&gt;pack(vi,ci-&gt;map_param[i],opb);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>modes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>oggpack_write(opb,ci-&gt;modes-1,6);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ci-&gt;modes;i++){</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>oggpack_write(opb,ci-&gt;mode_param[i]-&gt;blockflag,1);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>oggpack_write(opb,ci-&gt;mode_param[i]-&gt;windowtype,16);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>oggpack_write(opb,ci-&gt;mode_param[i]-&gt;transformtype,16);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>oggpack_write(opb,ci-&gt;mode_param[i]-&gt;mapping,8);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>oggpack_write(opb,1,1);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="501"><highlight class="normal">err_out:</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="503"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vorbis_commentheader_out(<ref refid="structvorbis__comment" kindref="compound">vorbis_comment</ref><sp/>*vc,</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structogg__packet" kindref="compound">ogg_packet</ref><sp/>*op){</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>opb;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/>oggpack_writeinit(&amp;opb);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_vorbis_pack_comment(&amp;opb,vc))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OV_EIMPL;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>op-&gt;packet<sp/>=<sp/>_ogg_malloc(oggpack_bytes(&amp;opb));</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>memcpy(op-&gt;packet,<sp/>opb.buffer,<sp/>oggpack_bytes(&amp;opb));</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>op-&gt;bytes=oggpack_bytes(&amp;opb);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>op-&gt;b_o_s=0;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>op-&gt;e_o_s=0;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>op-&gt;granulepos=0;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vorbis_analysis_headerout(<ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref><sp/>*v,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvorbis__comment" kindref="compound">vorbis_comment</ref><sp/>*vc,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structogg__packet" kindref="compound">ogg_packet</ref><sp/>*op,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structogg__packet" kindref="compound">ogg_packet</ref><sp/>*op_comm,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structogg__packet" kindref="compound">ogg_packet</ref><sp/>*op_code){</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=OV_EIMPL;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi=v-&gt;vi;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>opb;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><ref refid="structprivate__state" kindref="compound">private_state</ref><sp/>*b=v-&gt;backend_state;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!b){</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>ret=OV_EFAULT;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>header<sp/>packet<sp/>**********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>oggpack_writeinit(&amp;opb);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_vorbis_pack_info(&amp;opb,vi))</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>build<sp/>the<sp/>packet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;header)_ogg_free(b-&gt;header);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>b-&gt;header=_ogg_malloc(oggpack_bytes(&amp;opb));</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/>memcpy(b-&gt;header,opb.buffer,oggpack_bytes(&amp;opb));</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>op-&gt;packet=b-&gt;header;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>op-&gt;bytes=oggpack_bytes(&amp;opb);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>op-&gt;b_o_s=1;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>op-&gt;e_o_s=0;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>op-&gt;granulepos=0;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>second<sp/>header<sp/>packet<sp/>(comments)<sp/>**********************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>oggpack_reset(&amp;opb);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_vorbis_pack_comment(&amp;opb,vc))</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;header1)_ogg_free(b-&gt;header1);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/>b-&gt;header1=_ogg_malloc(oggpack_bytes(&amp;opb));</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>memcpy(b-&gt;header1,opb.buffer,oggpack_bytes(&amp;opb));</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>op_comm-&gt;packet=b-&gt;header1;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>op_comm-&gt;bytes=oggpack_bytes(&amp;opb);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>op_comm-&gt;b_o_s=0;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>op_comm-&gt;e_o_s=0;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>op_comm-&gt;granulepos=0;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>third<sp/>header<sp/>packet<sp/>(modes/codebooks)<sp/>****************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>oggpack_reset(&amp;opb);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_vorbis_pack_books(&amp;opb,vi))</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;header2)_ogg_free(b-&gt;header2);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>b-&gt;header2=_ogg_malloc(oggpack_bytes(&amp;opb));</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>memcpy(b-&gt;header2,opb.buffer,oggpack_bytes(&amp;opb));</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>op_code-&gt;packet=b-&gt;header2;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/>op_code-&gt;bytes=oggpack_bytes(&amp;opb);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>op_code-&gt;b_o_s=0;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>op_code-&gt;e_o_s=0;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>op_code-&gt;granulepos=0;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>oggpack_writeclear(&amp;opb);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/>err_out:</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/>oggpack_writeclear(&amp;opb);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/>memset(op,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*op));</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>memset(op_comm,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*op_comm));</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>memset(op_code,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*op_code));</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;header)_ogg_free(b-&gt;header);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;header1)_ogg_free(b-&gt;header1);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;header2)_ogg_free(b-&gt;header2);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>b-&gt;header=NULL;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/>b-&gt;header1=NULL;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>b-&gt;header2=NULL;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret);</highlight></codeline>
<codeline lineno="597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vorbis_granule_time(<ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref><sp/>*v,ogg_int64_t<sp/>granulepos){</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(granulepos&gt;=0)</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)granulepos/v-&gt;vi-&gt;rate);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="603"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/info.c"/>
  </compounddef>
</doxygen>
