<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="jcmaster_8c" kind="file">
    <compoundname>jcmaster.c</compoundname>
    <includes refid="jinclude_8h" local="yes">jinclude.h</includes>
    <includes refid="jpeglib_8h" local="yes">jpeglib.h</includes>
    <innerclass refid="structmy__comp__master" prot="public">my_comp_master</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="jcmaster_8c_1ad5c3cdfae3019b8223973041a2a1304b" prot="public" static="no">
        <name>JPEG_INTERNALS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcmaster.c" line="14" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcmaster.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="jcmaster_8c_1af81b2e4b6a71dd23a30397fe937b84d5" prot="public" static="no">
        <name>c_pass_type</name>
        <enumvalue id="jcmaster_8c_1af81b2e4b6a71dd23a30397fe937b84d5aa6c2aa8f57542669ee896b560461833f" prot="public">
          <name>main_pass</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="jcmaster_8c_1af81b2e4b6a71dd23a30397fe937b84d5a3c06a1513b4034772a21c933a5ea81b7" prot="public">
          <name>huff_opt_pass</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="jcmaster_8c_1af81b2e4b6a71dd23a30397fe937b84d5a0c1dc47dea339bf26c9a97bdfd103451" prot="public">
          <name>output_pass</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcmaster.c" line="21" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcmaster.c" bodystart="21" bodyend="25"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="jcmaster_8c_1a28fa61319994feba0a71a1210e46b42a" prot="public" static="no">
        <type><ref refid="structmy__comp__master" kindref="compound">my_comp_master</ref> *</type>
        <definition>typedef my_comp_master* my_master_ptr</definition>
        <argsstring></argsstring>
        <name>my_master_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcmaster.c" line="38" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcmaster.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="jcmaster_8c_1a9ed94d8032a6ed4f3b39d4c2b6d12840" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void initial_setup</definition>
        <argsstring>(j_compress_ptr cinfo)</argsstring>
        <name>initial_setup</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcmaster.c" line="46" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcmaster.c" bodystart="46" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="jcmaster_8c_1af1975f59920173ff1e489c3cad80119a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void validate_script</definition>
        <argsstring>(j_compress_ptr cinfo)</argsstring>
        <name>validate_script</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcmaster.c" line="130" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcmaster.c" bodystart="130" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="jcmaster_8c_1ad5b25daa504b92ed113adf971dec67b9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void select_scan_parameters</definition>
        <argsstring>(j_compress_ptr cinfo)</argsstring>
        <name>select_scan_parameters</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcmaster.c" line="255" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcmaster.c" bodystart="255" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="jcmaster_8c_1a90f16d439ce748e91a107daa4b9135c2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void per_scan_setup</definition>
        <argsstring>(j_compress_ptr cinfo)</argsstring>
        <name>per_scan_setup</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcmaster.c" line="296" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcmaster.c" bodystart="296" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="jcmaster_8c_1a7cbd434a022e3940ff00d91ce30b39c1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void prepare_for_pass</definition>
        <argsstring>(j_compress_ptr cinfo)</argsstring>
        <name>prepare_for_pass</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcmaster.c" line="389" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcmaster.c" bodystart="389" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="jcmaster_8c_1a0deb4b0dda31c1f8bf3e5bac09756b19" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pass_startup</definition>
        <argsstring>(j_compress_ptr cinfo)</argsstring>
        <name>pass_startup</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcmaster.c" line="477" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcmaster.c" bodystart="477" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="jcmaster_8c_1a1af05c8fbbf142eae2f1898a6a82aead" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void finish_pass_master</definition>
        <argsstring>(j_compress_ptr cinfo)</argsstring>
        <name>finish_pass_master</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcmaster.c" line="491" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcmaster.c" bodystart="491" bodyend="523"/>
      </memberdef>
      <memberdef kind="function" id="jcmaster_8c_1a5b22d9144ffba9ad52d3e9c8ce1ada86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jinit_c_master_control</definition>
        <argsstring>(j_compress_ptr cinfo, boolean transcode_only)</argsstring>
        <name>jinit_c_master_control</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>transcode_only</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcmaster.c" line="531" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcmaster.c" bodystart="531" bodyend="578"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>jcmaster.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1991-1995,<sp/>Thomas<sp/>G.<sp/>Lane.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Independent<sp/>JPEG<sp/>Group&apos;s<sp/>software.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>conditions<sp/>of<sp/>distribution<sp/>and<sp/>use,<sp/>see<sp/>the<sp/>accompanying<sp/>README<sp/>file.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>master<sp/>control<sp/>logic<sp/>for<sp/>the<sp/>JPEG<sp/>compressor.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>These<sp/>routines<sp/>are<sp/>concerned<sp/>with<sp/>parameter<sp/>validation,<sp/>initial<sp/>setup,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>and<sp/>inter-pass<sp/>control<sp/>(determining<sp/>the<sp/>number<sp/>of<sp/>passes<sp/>and<sp/>the<sp/>work<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>to<sp/>be<sp/>done<sp/>in<sp/>each<sp/>pass).</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>JPEG_INTERNALS</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;jinclude.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jpeglib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>main_pass,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>input<sp/>data,<sp/>also<sp/>do<sp/>first<sp/>output<sp/>step<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>huff_opt_pass,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Huffman<sp/>code<sp/>optimization<sp/>pass<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>output_pass<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>data<sp/>output<sp/>pass<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">}<sp/>c_pass_type;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="structmy__comp__master" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__comp__master" kindref="compound">jpeg_comp_master</ref><sp/>pub;<sp/><sp/></highlight><highlight class="comment">/*<sp/>public<sp/>fields<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>c_pass_type<sp/>pass_type;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>type<sp/>of<sp/>the<sp/>current<sp/>pass<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pass_number;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>#<sp/>of<sp/>passes<sp/>completed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_passes;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>total<sp/>#<sp/>of<sp/>passes<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scan_number;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>current<sp/>index<sp/>in<sp/>scan_info[]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">}<sp/><ref refid="structmy__comp__master" kindref="compound">my_comp_master</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structmy__comp__master" kindref="compound">my_comp_master</ref><sp/>*<sp/><ref refid="structmy__comp__master" kindref="compound">my_master_ptr</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>Support<sp/>routines<sp/>that<sp/>do<sp/>various<sp/>essential<sp/>calculations.</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">LOCAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">initial_setup<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Do<sp/>computations<sp/>that<sp/>are<sp/>needed<sp/>before<sp/>master<sp/>selection<sp/>phase<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*compptr;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>samplesperrow;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>jd_samplesperrow;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sanity<sp/>check<sp/>on<sp/>image<sp/>dimensions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;image_height<sp/>&lt;=<sp/>0<sp/>||<sp/>cinfo-&gt;image_width<sp/>&lt;=<sp/>0</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>cinfo-&gt;num_components<sp/>&lt;=<sp/>0<sp/>||<sp/>cinfo-&gt;input_components<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_EMPTY_IMAGE);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>image<sp/>isn&apos;t<sp/>bigger<sp/>than<sp/>I<sp/>can<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;image_height<sp/>&gt;<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>JPEG_MAX_DIMENSION<sp/>||</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;image_width<sp/>&gt;<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>JPEG_MAX_DIMENSION)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT1(cinfo,<sp/>JERR_IMAGE_TOO_BIG,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>JPEG_MAX_DIMENSION);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Width<sp/>of<sp/>an<sp/>input<sp/>scanline<sp/>must<sp/>be<sp/>representable<sp/>as<sp/>JDIMENSION.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>samplesperrow<sp/>=<sp/>(long)<sp/>cinfo-&gt;image_width<sp/>*<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;input_components;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>jd_samplesperrow<sp/>=<sp/>(JDIMENSION)<sp/>samplesperrow;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>jd_samplesperrow<sp/>!=<sp/>samplesperrow)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_WIDTH_OVERFLOW);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>now,<sp/>precision<sp/>must<sp/>match<sp/>compiled-in<sp/>value...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;data_precision<sp/>!=<sp/>BITS_IN_JSAMPLE)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT1(cinfo,<sp/>JERR_BAD_PRECISION,<sp/>cinfo-&gt;data_precision);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>number<sp/>of<sp/>components<sp/>won&apos;t<sp/>exceed<sp/>internal<sp/>array<sp/>sizes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;num_components<sp/>&gt;<sp/>MAX_COMPONENTS)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT2(cinfo,<sp/>JERR_COMPONENT_COUNT,<sp/>cinfo-&gt;num_components,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAX_COMPONENTS);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>maximum<sp/>sampling<sp/>factors;<sp/>check<sp/>factor<sp/>validity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>cinfo-&gt;max_h_samp_factor<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>cinfo-&gt;max_v_samp_factor<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0,<sp/>compptr<sp/>=<sp/>cinfo-&gt;comp_info;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;num_components;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci++,<sp/>compptr++)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compptr-&gt;h_samp_factor&lt;=0<sp/>||<sp/>compptr-&gt;h_samp_factor&gt;MAX_SAMP_FACTOR<sp/>||</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;v_samp_factor&lt;=0<sp/>||<sp/>compptr-&gt;v_samp_factor&gt;MAX_SAMP_FACTOR)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_BAD_SAMPLING);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;max_h_samp_factor<sp/>=<sp/>MAX(cinfo-&gt;max_h_samp_factor,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compptr-&gt;h_samp_factor);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;max_v_samp_factor<sp/>=<sp/>MAX(cinfo-&gt;max_v_samp_factor,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compptr-&gt;v_samp_factor);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>dimensions<sp/>of<sp/>components<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0,<sp/>compptr<sp/>=<sp/>cinfo-&gt;comp_info;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;num_components;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci++,<sp/>compptr++)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fill<sp/>in<sp/>the<sp/>correct<sp/>component_index<sp/>value;<sp/>don&apos;t<sp/>rely<sp/>on<sp/>application<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;component_index<sp/>=<sp/>ci;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>compression,<sp/>we<sp/>never<sp/>do<sp/>DCT<sp/>scaling.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;DCT_scaled_size<sp/>=<sp/>DCTSIZE;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Size<sp/>in<sp/>DCT<sp/>blocks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;width_in_blocks<sp/>=<sp/>(JDIMENSION)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jdiv_round_up((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;image_width<sp/>*<sp/>(long)<sp/>compptr-&gt;h_samp_factor,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>(cinfo-&gt;max_h_samp_factor<sp/>*<sp/>DCTSIZE));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;height_in_blocks<sp/>=<sp/>(JDIMENSION)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jdiv_round_up((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;image_height<sp/>*<sp/>(long)<sp/>compptr-&gt;v_samp_factor,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>(cinfo-&gt;max_v_samp_factor<sp/>*<sp/>DCTSIZE));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Size<sp/>in<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;downsampled_width<sp/>=<sp/>(JDIMENSION)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jdiv_round_up((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;image_width<sp/>*<sp/>(long)<sp/>compptr-&gt;h_samp_factor,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;max_h_samp_factor);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;downsampled_height<sp/>=<sp/>(JDIMENSION)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jdiv_round_up((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;image_height<sp/>*<sp/>(long)<sp/>compptr-&gt;v_samp_factor,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;max_v_samp_factor);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Mark<sp/>component<sp/>needed<sp/>(this<sp/>flag<sp/>isn&apos;t<sp/>actually<sp/>used<sp/>for<sp/>compression)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;component_needed<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>number<sp/>of<sp/>fully<sp/>interleaved<sp/>MCU<sp/>rows<sp/>(number<sp/>of<sp/>times<sp/>that</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/>*<sp/>main<sp/>controller<sp/>will<sp/>call<sp/>coefficient<sp/>controller).</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>cinfo-&gt;total_iMCU_rows<sp/>=<sp/>(JDIMENSION)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>jdiv_round_up((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;image_height,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(long)<sp/>(cinfo-&gt;max_v_samp_factor*DCTSIZE));</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>C_MULTISCAN_FILES_SUPPORTED</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">LOCAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">validate_script<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Verify<sp/>that<sp/>the<sp/>scan<sp/>script<sp/>in<sp/>cinfo-&gt;scan_info[]<sp/>is<sp/>valid;<sp/>also</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/>determine<sp/>whether<sp/>it<sp/>uses<sp/>progressive<sp/>JPEG,<sp/>and<sp/>set<sp/>cinfo-&gt;progressive_mode.</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structjpeg__scan__info" kindref="compound">jpeg_scan_info</ref><sp/>*<sp/>scanptr;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scanno,<sp/>ncomps,<sp/>ci,<sp/>coefi,<sp/>thisi;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ss,<sp/>Se,<sp/>Ah,<sp/>Al;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>component_sent[MAX_COMPONENTS];</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>C_PROGRESSIVE_SUPPORTED</highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>last_bitpos_ptr;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last_bitpos[MAX_COMPONENTS][DCTSIZE2];</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>-1<sp/>until<sp/>that<sp/>coefficient<sp/>has<sp/>been<sp/>seen;<sp/>then<sp/>last<sp/>Al<sp/>for<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;num_scans<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT1(cinfo,<sp/>JERR_BAD_SCAN_SCRIPT,<sp/>0);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>sequential<sp/>JPEG,<sp/>all<sp/>scans<sp/>must<sp/>have<sp/>Ss=0,<sp/>Se=DCTSIZE2-1;</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/>*<sp/>for<sp/>progressive<sp/>JPEG,<sp/>no<sp/>scan<sp/>can<sp/>have<sp/>this.</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>scanptr<sp/>=<sp/>cinfo-&gt;scan_info;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scanptr-&gt;Ss<sp/>!=<sp/>0<sp/>||<sp/>scanptr-&gt;Se<sp/>!=<sp/>DCTSIZE2-1)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>C_PROGRESSIVE_SUPPORTED</highlight></codeline>
<codeline lineno="154"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;progressive_mode<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>last_bitpos_ptr<sp/>=<sp/>&amp;<sp/>last_bitpos[0][0];</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;num_components;<sp/>ci++)<sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(coefi<sp/>=<sp/>0;<sp/>coefi<sp/>&lt;<sp/>DCTSIZE2;<sp/>coefi++)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>*last_bitpos_ptr++<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_NOT_COMPILED);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;progressive_mode<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;num_components;<sp/>ci++)<sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>component_sent[ci]<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(scanno<sp/>=<sp/>1;<sp/>scanno<sp/>&lt;=<sp/>cinfo-&gt;num_scans;<sp/>scanptr++,<sp/>scanno++)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Validate<sp/>component<sp/>indexes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>ncomps<sp/>=<sp/>scanptr-&gt;comps_in_scan;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ncomps<sp/>&lt;=<sp/>0<sp/>||<sp/>ncomps<sp/>&gt;<sp/>MAX_COMPS_IN_SCAN)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT2(cinfo,<sp/>JERR_COMPONENT_COUNT,<sp/>ncomps,<sp/>MAX_COMPS_IN_SCAN);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0;<sp/>ci<sp/>&lt;<sp/>ncomps;<sp/>ci++)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thisi<sp/>=<sp/>scanptr-&gt;component_index[ci];</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(thisi<sp/>&lt;<sp/>0<sp/>||<sp/>thisi<sp/>&gt;=<sp/>cinfo-&gt;num_components)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT1(cinfo,<sp/>JERR_BAD_SCAN_SCRIPT,<sp/>scanno);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Components<sp/>must<sp/>appear<sp/>in<sp/>SOF<sp/>order<sp/>within<sp/>each<sp/>scan<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ci<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>thisi<sp/>&lt;=<sp/>scanptr-&gt;component_index[ci-1])</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT1(cinfo,<sp/>JERR_BAD_SCAN_SCRIPT,<sp/>scanno);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Validate<sp/>progression<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>Ss<sp/>=<sp/>scanptr-&gt;Ss;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>Se<sp/>=<sp/>scanptr-&gt;Se;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>Ah<sp/>=<sp/>scanptr-&gt;Ah;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>Al<sp/>=<sp/>scanptr-&gt;Al;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;progressive_mode)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>C_PROGRESSIVE_SUPPORTED</highlight></codeline>
<codeline lineno="188"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Ss<sp/>&lt;<sp/>0<sp/>||<sp/>Ss<sp/>&gt;=<sp/>DCTSIZE2<sp/>||<sp/>Se<sp/>&lt;<sp/>Ss<sp/>||<sp/>Se<sp/>&gt;=<sp/>DCTSIZE2<sp/>||</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Ah<sp/>&lt;<sp/>0<sp/>||<sp/>Ah<sp/>&gt;<sp/>13<sp/>||<sp/>Al<sp/>&lt;<sp/>0<sp/>||<sp/>Al<sp/>&gt;<sp/>13)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT1(cinfo,<sp/>JERR_BAD_PROG_SCRIPT,<sp/>scanno);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Ss<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Se<sp/>!=<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DC<sp/>and<sp/>AC<sp/>together<sp/>not<sp/>OK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT1(cinfo,<sp/>JERR_BAD_PROG_SCRIPT,<sp/>scanno);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ncomps<sp/>!=<sp/>1)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>AC<sp/>scans<sp/>must<sp/>be<sp/>for<sp/>only<sp/>one<sp/>component<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT1(cinfo,<sp/>JERR_BAD_PROG_SCRIPT,<sp/>scanno);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0;<sp/>ci<sp/>&lt;<sp/>ncomps;<sp/>ci++)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>last_bitpos_ptr<sp/>=<sp/>&amp;<sp/>last_bitpos[scanptr-&gt;component_index[ci]][0];</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Ss<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>last_bitpos_ptr[0]<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>AC<sp/>without<sp/>prior<sp/>DC<sp/>scan<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT1(cinfo,<sp/>JERR_BAD_PROG_SCRIPT,<sp/>scanno);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(coefi<sp/>=<sp/>Ss;<sp/>coefi<sp/>&lt;=<sp/>Se;<sp/>coefi++)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last_bitpos_ptr[coefi]<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>scan<sp/>of<sp/>this<sp/>coefficient<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Ah<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT1(cinfo,<sp/>JERR_BAD_PROG_SCRIPT,<sp/>scanno);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>first<sp/>scan<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Ah<sp/>!=<sp/>last_bitpos_ptr[coefi]<sp/>||<sp/>Al<sp/>!=<sp/>Ah-1)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT1(cinfo,<sp/>JERR_BAD_PROG_SCRIPT,<sp/>scanno);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_bitpos_ptr[coefi]<sp/>=<sp/>Al;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="216"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>sequential<sp/>JPEG,<sp/>all<sp/>progression<sp/>parameters<sp/>must<sp/>be<sp/>these:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Ss<sp/>!=<sp/>0<sp/>||<sp/>Se<sp/>!=<sp/>DCTSIZE2-1<sp/>||<sp/>Ah<sp/>!=<sp/>0<sp/>||<sp/>Al<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT1(cinfo,<sp/>JERR_BAD_PROG_SCRIPT,<sp/>scanno);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>components<sp/>are<sp/>not<sp/>sent<sp/>twice<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0;<sp/>ci<sp/>&lt;<sp/>ncomps;<sp/>ci++)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>thisi<sp/>=<sp/>scanptr-&gt;component_index[ci];</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(component_sent[thisi])</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT1(cinfo,<sp/>JERR_BAD_SCAN_SCRIPT,<sp/>scanno);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>component_sent[thisi]<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>verify<sp/>that<sp/>everything<sp/>got<sp/>sent.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;progressive_mode)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>C_PROGRESSIVE_SUPPORTED</highlight></codeline>
<codeline lineno="233"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>progressive<sp/>mode,<sp/>we<sp/>only<sp/>check<sp/>that<sp/>at<sp/>least<sp/>some<sp/>DC<sp/>data</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>got<sp/>sent<sp/>for<sp/>each<sp/>component;<sp/>the<sp/>spec<sp/>does<sp/>not<sp/>require<sp/>that<sp/>all<sp/>bits</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>of<sp/>all<sp/>coefficients<sp/>be<sp/>transmitted.<sp/><sp/>Would<sp/>it<sp/>be<sp/>wiser<sp/>to<sp/>enforce</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>transmission<sp/>of<sp/>all<sp/>coefficient<sp/>bits??</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;num_components;<sp/>ci++)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last_bitpos[ci][0]<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_MISSING_DATA);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="243"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;num_components;<sp/>ci++)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>component_sent[ci])</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_MISSING_DATA);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>C_MULTISCAN_FILES_SUPPORTED<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="252"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal">LOCAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal">select_scan_parameters<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>the<sp/>scan<sp/>parameters<sp/>for<sp/>the<sp/>current<sp/>scan<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>C_MULTISCAN_FILES_SUPPORTED</highlight></codeline>
<codeline lineno="261"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;scan_info<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prepare<sp/>for<sp/>current<sp/>scan<sp/>---<sp/>the<sp/>script<sp/>is<sp/>already<sp/>validated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmy__comp__master" kindref="compound">my_master_ptr</ref><sp/>master<sp/>=<sp/>(<ref refid="structmy__comp__master" kindref="compound">my_master_ptr</ref>)<sp/>cinfo-&gt;master;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structjpeg__scan__info" kindref="compound">jpeg_scan_info</ref><sp/>*<sp/>scanptr<sp/>=<sp/>cinfo-&gt;scan_info<sp/>+<sp/>master-&gt;scan_number;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;comps_in_scan<sp/>=<sp/>scanptr-&gt;comps_in_scan;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(ci<sp/>=<sp/>0;<sp/>ci<sp/>&lt;<sp/>scanptr-&gt;comps_in_scan;<sp/>ci++)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;cur_comp_info[ci]<sp/>=</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;cinfo-&gt;comp_info[scanptr-&gt;component_index[ci]];</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;Ss<sp/>=<sp/>scanptr-&gt;Ss;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;Se<sp/>=<sp/>scanptr-&gt;Se;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;Ah<sp/>=<sp/>scanptr-&gt;Ah;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;Al<sp/>=<sp/>scanptr-&gt;Al;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="278"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prepare<sp/>for<sp/>single<sp/>sequential-JPEG<sp/>scan<sp/>containing<sp/>all<sp/>components<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;num_components<sp/>&gt;<sp/>MAX_COMPS_IN_SCAN)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT2(cinfo,<sp/>JERR_COMPONENT_COUNT,<sp/>cinfo-&gt;num_components,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAX_COMPS_IN_SCAN);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;comps_in_scan<sp/>=<sp/>cinfo-&gt;num_components;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;num_components;<sp/>ci++)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;cur_comp_info[ci]<sp/>=<sp/>&amp;cinfo-&gt;comp_info[ci];</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;Ss<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;Se<sp/>=<sp/>DCTSIZE2-1;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;Ah<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;Al<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal">LOCAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal">per_scan_setup<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Do<sp/>computations<sp/>that<sp/>are<sp/>needed<sp/>before<sp/>processing<sp/>a<sp/>JPEG<sp/>scan<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>cinfo-&gt;comps_in_scan<sp/>and<sp/>cinfo-&gt;cur_comp_info[]<sp/>are<sp/>already<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci,<sp/>mcublks,<sp/>tmp;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*compptr;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;comps_in_scan<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Noninterleaved<sp/>(single-component)<sp/>scan<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr<sp/>=<sp/>cinfo-&gt;cur_comp_info[0];</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Overall<sp/>image<sp/>size<sp/>in<sp/>MCUs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;MCUs_per_row<sp/>=<sp/>compptr-&gt;width_in_blocks;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;MCU_rows_in_scan<sp/>=<sp/>compptr-&gt;height_in_blocks;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>noninterleaved<sp/>scan,<sp/>always<sp/>one<sp/>block<sp/>per<sp/>MCU<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;MCU_width<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;MCU_height<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;MCU_blocks<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;MCU_sample_width<sp/>=<sp/>DCTSIZE;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;last_col_width<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>noninterleaved<sp/>scans,<sp/>it<sp/>is<sp/>convenient<sp/>to<sp/>define<sp/>last_row_height</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>as<sp/>the<sp/>number<sp/>of<sp/>block<sp/>rows<sp/>present<sp/>in<sp/>the<sp/>last<sp/>iMCU<sp/>row.</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>(int)<sp/>(compptr-&gt;height_in_blocks<sp/>%<sp/>compptr-&gt;v_samp_factor);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>==<sp/>0)<sp/>tmp<sp/>=<sp/>compptr-&gt;v_samp_factor;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;last_row_height<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prepare<sp/>array<sp/>describing<sp/>MCU<sp/>composition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;blocks_in_MCU<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;MCU_membership[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Interleaved<sp/>(multi-component)<sp/>scan<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;comps_in_scan<sp/>&lt;=<sp/>0<sp/>||<sp/>cinfo-&gt;comps_in_scan<sp/>&gt;<sp/>MAX_COMPS_IN_SCAN)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT2(cinfo,<sp/>JERR_COMPONENT_COUNT,<sp/>cinfo-&gt;comps_in_scan,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAX_COMPS_IN_SCAN);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Overall<sp/>image<sp/>size<sp/>in<sp/>MCUs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;MCUs_per_row<sp/>=<sp/>(JDIMENSION)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jdiv_round_up((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;image_width,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(long)<sp/>(cinfo-&gt;max_h_samp_factor*DCTSIZE));</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;MCU_rows_in_scan<sp/>=<sp/>(JDIMENSION)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jdiv_round_up((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;image_height,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(long)<sp/>(cinfo-&gt;max_v_samp_factor*DCTSIZE));</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;blocks_in_MCU<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;comps_in_scan;<sp/>ci++)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compptr<sp/>=<sp/>cinfo-&gt;cur_comp_info[ci];</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sampling<sp/>factors<sp/>give<sp/>#<sp/>of<sp/>blocks<sp/>of<sp/>component<sp/>in<sp/>each<sp/>MCU<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compptr-&gt;MCU_width<sp/>=<sp/>compptr-&gt;h_samp_factor;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compptr-&gt;MCU_height<sp/>=<sp/>compptr-&gt;v_samp_factor;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compptr-&gt;MCU_blocks<sp/>=<sp/>compptr-&gt;MCU_width<sp/>*<sp/>compptr-&gt;MCU_height;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compptr-&gt;MCU_sample_width<sp/>=<sp/>compptr-&gt;MCU_width<sp/>*<sp/>DCTSIZE;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Figure<sp/>number<sp/>of<sp/>non-dummy<sp/>blocks<sp/>in<sp/>last<sp/>MCU<sp/>column<sp/>&amp;<sp/>row<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>(int)<sp/>(compptr-&gt;width_in_blocks<sp/>%<sp/>compptr-&gt;MCU_width);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>==<sp/>0)<sp/>tmp<sp/>=<sp/>compptr-&gt;MCU_width;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compptr-&gt;last_col_width<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>(int)<sp/>(compptr-&gt;height_in_blocks<sp/>%<sp/>compptr-&gt;MCU_height);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>==<sp/>0)<sp/>tmp<sp/>=<sp/>compptr-&gt;MCU_height;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compptr-&gt;last_row_height<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prepare<sp/>array<sp/>describing<sp/>MCU<sp/>composition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mcublks<sp/>=<sp/>compptr-&gt;MCU_blocks;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;blocks_in_MCU<sp/>+<sp/>mcublks<sp/>&gt;<sp/>C_MAX_BLOCKS_IN_MCU)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_BAD_MCU_SIZE);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(mcublks--<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;MCU_membership[cinfo-&gt;blocks_in_MCU++]<sp/>=<sp/>ci;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>restart<sp/>specified<sp/>in<sp/>rows<sp/>to<sp/>actual<sp/>MCU<sp/>count.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note<sp/>that<sp/>count<sp/>must<sp/>fit<sp/>in<sp/>16<sp/>bits,<sp/>so<sp/>we<sp/>provide<sp/>limiting.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;restart_in_rows<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nominal<sp/>=<sp/>(long)<sp/>cinfo-&gt;restart_in_rows<sp/>*<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;MCUs_per_row;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;restart_interval<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)<sp/>MIN(nominal,<sp/>65535L);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>*<sp/>Per-pass<sp/>setup.</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>called<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>each<sp/>pass.<sp/><sp/>We<sp/>determine<sp/>which<sp/>modules</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/>*<sp/>will<sp/>be<sp/>active<sp/>during<sp/>this<sp/>pass<sp/>and<sp/>give<sp/>them<sp/>appropriate<sp/>start_pass<sp/>calls.</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/>*<sp/>We<sp/>also<sp/>set<sp/>is_last_pass<sp/>to<sp/>indicate<sp/>whether<sp/>any<sp/>more<sp/>passes<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/>*<sp/>required.</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal">prepare_for_pass<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="390"><highlight class="normal">{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><ref refid="structmy__comp__master" kindref="compound">my_master_ptr</ref><sp/>master<sp/>=<sp/>(<ref refid="structmy__comp__master" kindref="compound">my_master_ptr</ref>)<sp/>cinfo-&gt;master;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>switch<sp/>(master-&gt;pass_type)<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>main_pass:</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initial<sp/>pass:<sp/>will<sp/>collect<sp/>input<sp/>data,<sp/>and<sp/>do<sp/>either<sp/>Huffman</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>optimization<sp/>or<sp/>data<sp/>output<sp/>for<sp/>the<sp/>first<sp/>scan.</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>select_scan_parameters(cinfo);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>per_scan_setup(cinfo);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>cinfo-&gt;raw_data_in)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*cinfo-&gt;cconvert-&gt;start_pass)<sp/>(cinfo);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*cinfo-&gt;downsample-&gt;start_pass)<sp/>(cinfo);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*cinfo-&gt;prep-&gt;start_pass)<sp/>(cinfo,<sp/>JBUF_PASS_THRU);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;fdct-&gt;start_pass)<sp/>(cinfo);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;entropy-&gt;start_pass)<sp/>(cinfo,<sp/>cinfo-&gt;optimize_coding);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;coef-&gt;start_pass)<sp/>(cinfo,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(master-&gt;total_passes<sp/>&gt;<sp/>1<sp/>?</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JBUF_SAVE_AND_PASS<sp/>:<sp/>JBUF_PASS_THRU));</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;main-&gt;start_pass)<sp/>(cinfo,<sp/>JBUF_PASS_THRU);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;optimize_coding)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>immediate<sp/>data<sp/>output;<sp/>postpone<sp/>writing<sp/>frame/scan<sp/>headers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>master-&gt;pub.call_pass_startup<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Will<sp/>write<sp/>frame/scan<sp/>headers<sp/>at<sp/>first<sp/>jpeg_write_scanlines<sp/>call<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>master-&gt;pub.call_pass_startup<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENTROPY_OPT_SUPPORTED</highlight></codeline>
<codeline lineno="420"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>huff_opt_pass:</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>Huffman<sp/>optimization<sp/>for<sp/>a<sp/>scan<sp/>after<sp/>the<sp/>first<sp/>one.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>select_scan_parameters(cinfo);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>per_scan_setup(cinfo);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;Ss<sp/>!=<sp/>0<sp/>||<sp/>cinfo-&gt;Ah<sp/>==<sp/>0<sp/>||<sp/>cinfo-&gt;arith_code)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*cinfo-&gt;entropy-&gt;start_pass)<sp/>(cinfo,<sp/>TRUE);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*cinfo-&gt;coef-&gt;start_pass)<sp/>(cinfo,<sp/>JBUF_CRANK_DEST);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>master-&gt;pub.call_pass_startup<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Special<sp/>case:<sp/>Huffman<sp/>DC<sp/>refinement<sp/>scans<sp/>need<sp/>no<sp/>Huffman<sp/>table</highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>therefore<sp/>we<sp/>can<sp/>skip<sp/>the<sp/>optimization<sp/>pass<sp/>for<sp/>them.</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>master-&gt;pass_type<sp/>=<sp/>output_pass;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>master-&gt;pass_number++;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*FALLTHROUGH*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="437"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>output_pass:</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>a<sp/>data-output<sp/>pass.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>need<sp/>not<sp/>repeat<sp/>per-scan<sp/>setup<sp/>if<sp/>prior<sp/>optimization<sp/>pass<sp/>did<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>cinfo-&gt;optimize_coding)<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>select_scan_parameters(cinfo);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>per_scan_setup(cinfo);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;entropy-&gt;start_pass)<sp/>(cinfo,<sp/>FALSE);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;coef-&gt;start_pass)<sp/>(cinfo,<sp/>JBUF_CRANK_DEST);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>emit<sp/>frame/scan<sp/>headers<sp/>now<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(master-&gt;scan_number<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*cinfo-&gt;marker-&gt;write_frame_header)<sp/>(cinfo);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;marker-&gt;write_scan_header)<sp/>(cinfo);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>master-&gt;pub.call_pass_startup<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_NOT_COMPILED);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>master-&gt;pub.is_last_pass<sp/>=<sp/>(master-&gt;pass_number<sp/>==<sp/>master-&gt;total_passes-1);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>progress<sp/>monitor&apos;s<sp/>pass<sp/>info<sp/>if<sp/>present<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;progress<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;progress-&gt;completed_passes<sp/>=<sp/>master-&gt;pass_number;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;progress-&gt;total_passes<sp/>=<sp/>master-&gt;total_passes;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/>*<sp/>Special<sp/>start-of-pass<sp/>hook.</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>called<sp/>by<sp/>jpeg_write_scanlines<sp/>if<sp/>call_pass_startup<sp/>is<sp/>TRUE.</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/>*<sp/>In<sp/>single-pass<sp/>processing,<sp/>we<sp/>need<sp/>this<sp/>hook<sp/>because<sp/>we<sp/>don&apos;t<sp/>want<sp/>to</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/>*<sp/>write<sp/>frame/scan<sp/>headers<sp/>during<sp/>jpeg_start_compress;<sp/>we<sp/>want<sp/>to<sp/>let<sp/>the</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/>*<sp/>application<sp/>write<sp/>COM<sp/>markers<sp/>etc.<sp/>between<sp/>jpeg_start_compress<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/>*<sp/>jpeg_write_scanlines<sp/>loop.</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/>*<sp/>In<sp/>multi-pass<sp/>processing,<sp/>this<sp/>routine<sp/>is<sp/>not<sp/>used.</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal">pass_startup<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="478"><highlight class="normal">{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>cinfo-&gt;master-&gt;call_pass_startup<sp/>=<sp/>FALSE;<sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>flag<sp/>so<sp/>call<sp/>only<sp/>once<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>(*cinfo-&gt;marker-&gt;write_frame_header)<sp/>(cinfo);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>(*cinfo-&gt;marker-&gt;write_scan_header)<sp/>(cinfo);</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/>*<sp/>Finish<sp/>up<sp/>at<sp/>end<sp/>of<sp/>pass.</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal">finish_pass_master<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><ref refid="structmy__comp__master" kindref="compound">my_master_ptr</ref><sp/>master<sp/>=<sp/>(<ref refid="structmy__comp__master" kindref="compound">my_master_ptr</ref>)<sp/>cinfo-&gt;master;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>entropy<sp/>coder<sp/>always<sp/>needs<sp/>an<sp/>end-of-pass<sp/>call,</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/><sp/><sp/>*<sp/>either<sp/>to<sp/>analyze<sp/>statistics<sp/>or<sp/>to<sp/>flush<sp/>its<sp/>output<sp/>buffer.</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>(*cinfo-&gt;entropy-&gt;finish_pass)<sp/>(cinfo);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>state<sp/>for<sp/>next<sp/>pass<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(master-&gt;pass_type)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>main_pass:</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>next<sp/>pass<sp/>is<sp/>either<sp/>output<sp/>of<sp/>scan<sp/>0<sp/>(after<sp/>optimization)</highlight></codeline>
<codeline lineno="504"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>or<sp/>output<sp/>of<sp/>scan<sp/>1<sp/>(if<sp/>no<sp/>optimization).</highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>master-&gt;pass_type<sp/>=<sp/>output_pass;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>cinfo-&gt;optimize_coding)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>master-&gt;scan_number++;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>huff_opt_pass:</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>next<sp/>pass<sp/>is<sp/>always<sp/>output<sp/>of<sp/>current<sp/>scan<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>master-&gt;pass_type<sp/>=<sp/>output_pass;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>output_pass:</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>next<sp/>pass<sp/>is<sp/>either<sp/>optimization<sp/>or<sp/>output<sp/>of<sp/>next<sp/>scan<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;optimize_coding)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>master-&gt;pass_type<sp/>=<sp/>huff_opt_pass;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>master-&gt;scan_number++;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>master-&gt;pass_number++;</highlight></codeline>
<codeline lineno="523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/>*<sp/>Initialize<sp/>master<sp/>compression<sp/>control.</highlight></codeline>
<codeline lineno="528"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal">GLOBAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal">jinit_c_master_control<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>transcode_only)</highlight></codeline>
<codeline lineno="532"><highlight class="normal">{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><ref refid="structmy__comp__master" kindref="compound">my_master_ptr</ref><sp/>master;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>master<sp/>=<sp/>(<ref refid="structmy__comp__master" kindref="compound">my_master_ptr</ref>)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SIZEOF(<ref refid="structmy__comp__master" kindref="compound">my_comp_master</ref>));</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>cinfo-&gt;master<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__comp__master" kindref="compound">jpeg_comp_master</ref><sp/>*)<sp/>master;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>master-&gt;pub.prepare_for_pass<sp/>=<sp/>prepare_for_pass;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>master-&gt;pub.pass_startup<sp/>=<sp/>pass_startup;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>master-&gt;pub.finish_pass<sp/>=<sp/>finish_pass_master;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>master-&gt;pub.is_last_pass<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Validate<sp/>parameters,<sp/>determine<sp/>derived<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>initial_setup(cinfo);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;scan_info<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>C_MULTISCAN_FILES_SUPPORTED</highlight></codeline>
<codeline lineno="549"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>validate_script(cinfo);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="551"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_NOT_COMPILED);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="553"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;progressive_mode<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;num_scans<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;progressive_mode)<sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>TEMPORARY<sp/>HACK<sp/>???<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;optimize_coding<sp/>=<sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>assume<sp/>default<sp/>tables<sp/>no<sp/>good<sp/>for<sp/>progressive<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>my<sp/>private<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transcode_only)<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>main<sp/>pass<sp/>in<sp/>transcoding<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;optimize_coding)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>master-&gt;pass_type<sp/>=<sp/>huff_opt_pass;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>master-&gt;pass_type<sp/>=<sp/>output_pass;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>normal<sp/>compression,<sp/>first<sp/>pass<sp/>is<sp/>always<sp/>this<sp/>type:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>master-&gt;pass_type<sp/>=<sp/>main_pass;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>master-&gt;scan_number<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>master-&gt;pass_number<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;optimize_coding)</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>master-&gt;total_passes<sp/>=<sp/>cinfo-&gt;num_scans<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>master-&gt;total_passes<sp/>=<sp/>cinfo-&gt;num_scans;</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcmaster.c"/>
  </compounddef>
</doxygen>
