<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="jcomapi_8c" kind="file">
    <compoundname>jcomapi.c</compoundname>
    <includes refid="jinclude_8h" local="yes">jinclude.h</includes>
    <includes refid="jpeglib_8h" local="yes">jpeglib.h</includes>
      <sectiondef kind="define">
      <memberdef kind="define" id="jcomapi_8c_1ad5c3cdfae3019b8223973041a2a1304b" prot="public" static="no">
        <name>JPEG_INTERNALS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcomapi.c" line="12" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcomapi.c" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="jcomapi_8c_1a521d73690ad93ebe60a96d66fb8de9cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jpeg_abort</definition>
        <argsstring>(j_common_ptr cinfo)</argsstring>
        <name>jpeg_abort</name>
        <param>
          <type><ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcomapi.c" line="29" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcomapi.c" bodystart="29" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="jcomapi_8c_1a1e6638417ae07a4933ed92d9f38acd2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jpeg_destroy</definition>
        <argsstring>(j_common_ptr cinfo)</argsstring>
        <name>jpeg_destroy</name>
        <param>
          <type><ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcomapi.c" line="57" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcomapi.c" bodystart="57" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="jcomapi_8c_1a1208e65102e7fe6375c3a9b71ee72a1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_j_q_u_a_n_t___t_b_l" kindref="compound">JQUANT_TBL</ref> *</type>
        <definition>JQUANT_TBL* jpeg_alloc_quant_table</definition>
        <argsstring>(j_common_ptr cinfo)</argsstring>
        <name>jpeg_alloc_quant_table</name>
        <param>
          <type><ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcomapi.c" line="74" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcomapi.c" bodystart="74" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="jcomapi_8c_1aa89b0b617c5d3e545bb3c05bc2be354a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_j_h_u_f_f___t_b_l" kindref="compound">JHUFF_TBL</ref> *</type>
        <definition>JHUFF_TBL* jpeg_alloc_huff_table</definition>
        <argsstring>(j_common_ptr cinfo)</argsstring>
        <name>jpeg_alloc_huff_table</name>
        <param>
          <type><ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcomapi.c" line="86" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcomapi.c" bodystart="86" bodyend="94"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>jcomapi.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1994,<sp/>Thomas<sp/>G.<sp/>Lane.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Independent<sp/>JPEG<sp/>Group&apos;s<sp/>software.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>conditions<sp/>of<sp/>distribution<sp/>and<sp/>use,<sp/>see<sp/>the<sp/>accompanying<sp/>README<sp/>file.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>application<sp/>interface<sp/>routines<sp/>that<sp/>are<sp/>used<sp/>for<sp/>both</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>compression<sp/>and<sp/>decompression.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>JPEG_INTERNALS</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;jinclude.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jpeglib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>Abort<sp/>processing<sp/>of<sp/>a<sp/>JPEG<sp/>compression<sp/>or<sp/>decompression<sp/>operation,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>but<sp/>don&apos;t<sp/>destroy<sp/>the<sp/>object<sp/>itself.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>For<sp/>this,<sp/>we<sp/>merely<sp/>clean<sp/>up<sp/>all<sp/>the<sp/>nonpermanent<sp/>memory<sp/>pools.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>Note<sp/>that<sp/>temp<sp/>files<sp/>(virtual<sp/>arrays)<sp/>are<sp/>not<sp/>allowed<sp/>to<sp/>belong<sp/>to</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>the<sp/>permanent<sp/>pool,<sp/>so<sp/>we<sp/>will<sp/>be<sp/>able<sp/>to<sp/>close<sp/>all<sp/>temp<sp/>files<sp/>here.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>Closing<sp/>a<sp/>data<sp/>source<sp/>or<sp/>destination,<sp/>if<sp/>necessary,<sp/>is<sp/>the<sp/>application&apos;s</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>responsibility.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">GLOBAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">jpeg_abort<sp/>(<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pool;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Releasing<sp/>pools<sp/>in<sp/>reverse<sp/>order<sp/>might<sp/>help<sp/>avoid<sp/>fragmentation</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/>*<sp/>with<sp/>some<sp/>(brain-damaged)<sp/>malloc<sp/>libraries.</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pool<sp/>=<sp/>JPOOL_NUMPOOLS-1;<sp/>pool<sp/>&gt;<sp/>JPOOL_PERMANENT;<sp/>pool--)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;free_pool)<sp/>(cinfo,<sp/>pool);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>overall<sp/>state<sp/>for<sp/>possible<sp/>reuse<sp/>of<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>cinfo-&gt;global_state<sp/>=<sp/>(cinfo-&gt;is_decompressor<sp/>?<sp/>DSTATE_START<sp/>:<sp/>CSTATE_START);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>Destruction<sp/>of<sp/>a<sp/>JPEG<sp/>object.</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>Everything<sp/>gets<sp/>deallocated<sp/>except<sp/>the<sp/>master<sp/>jpeg_compress_struct<sp/>itself</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>and<sp/>the<sp/>error<sp/>manager<sp/>struct.<sp/><sp/>Both<sp/>of<sp/>these<sp/>are<sp/>supplied<sp/>by<sp/>the<sp/>application</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>and<sp/>must<sp/>be<sp/>freed,<sp/>if<sp/>necessary,<sp/>by<sp/>the<sp/>application.<sp/><sp/>(Often<sp/>they<sp/>are<sp/>on</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>the<sp/>stack<sp/>and<sp/>so<sp/>don&apos;t<sp/>need<sp/>to<sp/>be<sp/>freed<sp/>anyway.)</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>Closing<sp/>a<sp/>data<sp/>source<sp/>or<sp/>destination,<sp/>if<sp/>necessary,<sp/>is<sp/>the<sp/>application&apos;s</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>responsibility.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">GLOBAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">jpeg_destroy<sp/>(<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>need<sp/>only<sp/>tell<sp/>the<sp/>memory<sp/>manager<sp/>to<sp/>release<sp/>everything.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>NB:<sp/>mem<sp/>pointer<sp/>is<sp/>NULL<sp/>if<sp/>memory<sp/>mgr<sp/>failed<sp/>to<sp/>initialize.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;mem<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;self_destruct)<sp/>(cinfo);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>cinfo-&gt;mem<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>be<sp/>safe<sp/>if<sp/>jpeg_destroy<sp/>is<sp/>called<sp/>twice<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>cinfo-&gt;global_state<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>mark<sp/>it<sp/>destroyed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>Convenience<sp/>routines<sp/>for<sp/>allocating<sp/>quantization<sp/>and<sp/>Huffman<sp/>tables.</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>(Would<sp/>jutils.c<sp/>be<sp/>a<sp/>more<sp/>reasonable<sp/>place<sp/>to<sp/>put<sp/>these?)</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">GLOBAL<sp/><ref refid="struct_j_q_u_a_n_t___t_b_l" kindref="compound">JQUANT_TBL</ref><sp/>*</highlight></codeline>
<codeline lineno="74"><highlight class="normal">jpeg_alloc_quant_table<sp/>(<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="struct_j_q_u_a_n_t___t_b_l" kindref="compound">JQUANT_TBL</ref><sp/>*tbl;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>tbl<sp/>=<sp/>(<ref refid="struct_j_q_u_a_n_t___t_b_l" kindref="compound">JQUANT_TBL</ref><sp/>*)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>(cinfo,<sp/>JPOOL_PERMANENT,<sp/>SIZEOF(<ref refid="struct_j_q_u_a_n_t___t_b_l" kindref="compound">JQUANT_TBL</ref>));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>tbl-&gt;sent_table<sp/>=<sp/>FALSE;<sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>this<sp/>is<sp/>false<sp/>in<sp/>any<sp/>new<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tbl;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal">GLOBAL<sp/><ref refid="struct_j_h_u_f_f___t_b_l" kindref="compound">JHUFF_TBL</ref><sp/>*</highlight></codeline>
<codeline lineno="86"><highlight class="normal">jpeg_alloc_huff_table<sp/>(<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="struct_j_h_u_f_f___t_b_l" kindref="compound">JHUFF_TBL</ref><sp/>*tbl;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>tbl<sp/>=<sp/>(<ref refid="struct_j_h_u_f_f___t_b_l" kindref="compound">JHUFF_TBL</ref><sp/>*)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>(cinfo,<sp/>JPOOL_PERMANENT,<sp/>SIZEOF(<ref refid="struct_j_h_u_f_f___t_b_l" kindref="compound">JHUFF_TBL</ref>));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>tbl-&gt;sent_table<sp/>=<sp/>FALSE;<sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>this<sp/>is<sp/>false<sp/>in<sp/>any<sp/>new<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tbl;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcomapi.c"/>
  </compounddef>
</doxygen>
