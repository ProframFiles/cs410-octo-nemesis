<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="jcparam_8c" kind="file">
    <compoundname>jcparam.c</compoundname>
    <includes refid="jinclude_8h" local="yes">jinclude.h</includes>
    <includes refid="jpeglib_8h" local="yes">jpeglib.h</includes>
      <sectiondef kind="define">
      <memberdef kind="define" id="jcparam_8c_1ad5c3cdfae3019b8223973041a2a1304b" prot="public" static="no">
        <name>JPEG_INTERNALS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c" line="13" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jcparam_8c_1a48b2049e8ae7c91c83a513367155d818" prot="public" static="no">
        <name>SET_COMP</name>
        <param><defname>index</defname></param>
        <param><defname>id</defname></param>
        <param><defname>hsamp</defname></param>
        <param><defname>vsamp</defname></param>
        <param><defname>quant</defname></param>
        <param><defname>dctbl</defname></param>
        <param><defname>actbl</defname></param>
        <initializer>(compptr = &amp;cinfo-&gt;comp_info[index], \
   compptr-&gt;component_id = (id), \
   compptr-&gt;h_samp_factor = (hsamp), \
   compptr-&gt;v_samp_factor = (vsamp), \
   compptr-&gt;quant_tbl_no = (quant), \
   compptr-&gt;dc_tbl_no = (dctbl), \
   compptr-&gt;ac_tbl_no = (actbl) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c" line="370" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="jcparam_8c_1a6bb0ac65ec305e4d24299c7ebff01649" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jpeg_add_quant_table</definition>
        <argsstring>(j_compress_ptr cinfo, int which_tbl, const unsigned int *basic_table, int scale_factor, boolean force_baseline)</argsstring>
        <name>jpeg_add_quant_table</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>which_tbl</declname>
        </param>
        <param>
          <type>const unsigned int *</type>
          <declname>basic_table</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scale_factor</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>force_baseline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c" line="23" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c" bodystart="23" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="jcparam_8c_1a7174f2f8c06aea1d543fe5cb36052558" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jpeg_set_linear_quality</definition>
        <argsstring>(j_compress_ptr cinfo, int scale_factor, boolean force_baseline)</argsstring>
        <name>jpeg_set_linear_quality</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scale_factor</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>force_baseline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c" line="59" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c" bodystart="59" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="jcparam_8c_1aae2952b761d3ebfe39f8ec31877d6e02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jpeg_quality_scaling</definition>
        <argsstring>(int quality)</argsstring>
        <name>jpeg_quality_scaling</name>
        <param>
          <type>int</type>
          <declname>quality</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c" line="102" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c" bodystart="102" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="jcparam_8c_1a993d9eebe625af5e876e7c702c7367e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jpeg_set_quality</definition>
        <argsstring>(j_compress_ptr cinfo, int quality, boolean force_baseline)</argsstring>
        <name>jpeg_set_quality</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>quality</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>force_baseline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c" line="128" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c" bodystart="128" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="jcparam_8c_1a1e4ae710edcd87ad28f441c2f61dadd7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void add_huff_table</definition>
        <argsstring>(j_compress_ptr cinfo, JHUFF_TBL **htblptr, const UINT8 *bits, const UINT8 *val)</argsstring>
        <name>add_huff_table</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type><ref refid="struct_j_h_u_f_f___t_b_l" kindref="compound">JHUFF_TBL</ref> **</type>
          <declname>htblptr</declname>
        </param>
        <param>
          <type>const UINT8 *</type>
          <declname>bits</declname>
        </param>
        <param>
          <type>const UINT8 *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c" line="148" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c" bodystart="148" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="jcparam_8c_1a4b0e1544a66428603c567da05c2ae556" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void std_huff_tables</definition>
        <argsstring>(j_compress_ptr cinfo)</argsstring>
        <name>std_huff_tables</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c" line="164" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c" bodystart="164" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="jcparam_8c_1a45fdac06138f4354f00319e045c7bd3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jpeg_set_defaults</definition>
        <argsstring>(j_compress_ptr cinfo)</argsstring>
        <name>jpeg_set_defaults</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c" line="250" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c" bodystart="250" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="jcparam_8c_1a81e94da8c11491a4a682863e351f3bd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jpeg_default_colorspace</definition>
        <argsstring>(j_compress_ptr cinfo)</argsstring>
        <name>jpeg_default_colorspace</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c" line="333" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c" bodystart="333" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="jcparam_8c_1a928b4903a460ba641b2878eed5953502" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jpeg_set_colorspace</definition>
        <argsstring>(j_compress_ptr cinfo, J_COLOR_SPACE colorspace)</argsstring>
        <name>jpeg_set_colorspace</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type>J_COLOR_SPACE</type>
          <declname>colorspace</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c" line="365" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c" bodystart="365" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="jcparam_8c_1a572f2ced994d3df77cd807d7f1ab7759" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structjpeg__scan__info" kindref="compound">jpeg_scan_info</ref> *</type>
        <definition>static jpeg_scan_info* fill_a_scan</definition>
        <argsstring>(jpeg_scan_info *scanptr, int ci, int Ss, int Se, int Ah, int Al)</argsstring>
        <name>fill_a_scan</name>
        <param>
          <type><ref refid="structjpeg__scan__info" kindref="compound">jpeg_scan_info</ref> *</type>
          <declname>scanptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ci</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Ss</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Se</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Ah</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Al</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c" line="449" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c" bodystart="449" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="jcparam_8c_1ad14654783de4bca9899735392cf92945" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structjpeg__scan__info" kindref="compound">jpeg_scan_info</ref> *</type>
        <definition>static jpeg_scan_info* fill_scans</definition>
        <argsstring>(jpeg_scan_info *scanptr, int ncomps, int Ss, int Se, int Ah, int Al)</argsstring>
        <name>fill_scans</name>
        <param>
          <type><ref refid="structjpeg__scan__info" kindref="compound">jpeg_scan_info</ref> *</type>
          <declname>scanptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncomps</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Ss</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Se</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Ah</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Al</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c" line="464" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c" bodystart="464" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="jcparam_8c_1a4e2a73c9473e474b780f3cebcf644d09" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structjpeg__scan__info" kindref="compound">jpeg_scan_info</ref> *</type>
        <definition>static jpeg_scan_info* fill_dc_scans</definition>
        <argsstring>(jpeg_scan_info *scanptr, int ncomps, int Ah, int Al)</argsstring>
        <name>fill_dc_scans</name>
        <param>
          <type><ref refid="structjpeg__scan__info" kindref="compound">jpeg_scan_info</ref> *</type>
          <declname>scanptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncomps</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Ah</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Al</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c" line="483" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c" bodystart="483" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="jcparam_8c_1aacef29dc62649c48ad89f12a84b20b44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jpeg_simple_progression</definition>
        <argsstring>(j_compress_ptr cinfo)</argsstring>
        <name>jpeg_simple_progression</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c" line="511" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c" bodystart="511" bodyend="573"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>jcparam.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1991-1995,<sp/>Thomas<sp/>G.<sp/>Lane.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Independent<sp/>JPEG<sp/>Group&apos;s<sp/>software.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>conditions<sp/>of<sp/>distribution<sp/>and<sp/>use,<sp/>see<sp/>the<sp/>accompanying<sp/>README<sp/>file.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>optional<sp/>default-setting<sp/>code<sp/>for<sp/>the<sp/>JPEG<sp/>compressor.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Applications<sp/>do<sp/>not<sp/>have<sp/>to<sp/>use<sp/>this<sp/>file,<sp/>but<sp/>those<sp/>that<sp/>don&apos;t<sp/>use<sp/>it</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>must<sp/>know<sp/>a<sp/>lot<sp/>more<sp/>about<sp/>the<sp/>innards<sp/>of<sp/>the<sp/>JPEG<sp/>code.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>JPEG_INTERNALS</highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;jinclude.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jpeglib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Quantization<sp/>table<sp/>setup<sp/>routines</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">GLOBAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">jpeg_add_quant_table<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which_tbl,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*basic_table,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scale_factor,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>force_baseline)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Define<sp/>a<sp/>quantization<sp/>table<sp/>equal<sp/>to<sp/>the<sp/>basic_table<sp/>times</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>a<sp/>scale<sp/>factor<sp/>(given<sp/>as<sp/>a<sp/>percentage).</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>If<sp/>force_baseline<sp/>is<sp/>TRUE,<sp/>the<sp/>computed<sp/>quantization<sp/>table<sp/>entries</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>are<sp/>limited<sp/>to<sp/>1..255<sp/>for<sp/>JPEG<sp/>baseline<sp/>compatibility.</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><ref refid="struct_j_q_u_a_n_t___t_b_l" kindref="compound">JQUANT_TBL</ref><sp/>**<sp/>qtblptr<sp/>=<sp/>&amp;<sp/>cinfo-&gt;quant_tbl_ptrs[which_tbl];</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Safety<sp/>check<sp/>to<sp/>ensure<sp/>start_compress<sp/>not<sp/>called<sp/>yet.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;global_state<sp/>!=<sp/>CSTATE_START)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT1(cinfo,<sp/>JERR_BAD_STATE,<sp/>cinfo-&gt;global_state);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*qtblptr<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>*qtblptr<sp/>=<sp/>jpeg_alloc_quant_table((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>DCTSIZE2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>((long)<sp/>basic_table[i]<sp/>*<sp/>scale_factor<sp/>+<sp/>50L)<sp/>/<sp/>100L;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>limit<sp/>the<sp/>values<sp/>to<sp/>the<sp/>valid<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp<sp/>&lt;=<sp/>0L)<sp/>temp<sp/>=<sp/>1L;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp<sp/>&gt;<sp/>32767L)<sp/>temp<sp/>=<sp/>32767L;<sp/></highlight><highlight class="comment">/*<sp/>max<sp/>quantizer<sp/>needed<sp/>for<sp/>12<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(force_baseline<sp/>&amp;&amp;<sp/>temp<sp/>&gt;<sp/>255L)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>255L;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>limit<sp/>to<sp/>baseline<sp/>range<sp/>if<sp/>requested<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>(*qtblptr)-&gt;quantval[i]<sp/>=<sp/>(UINT16)<sp/>temp;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>sent_table<sp/>FALSE<sp/>so<sp/>table<sp/>will<sp/>be<sp/>written<sp/>to<sp/>JPEG<sp/>file.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>(*qtblptr)-&gt;sent_table<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">GLOBAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">jpeg_set_linear_quality<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scale_factor,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>force_baseline)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>or<sp/>change<sp/>the<sp/>&apos;quality&apos;<sp/>(quantization)<sp/>setting,<sp/>using<sp/>default<sp/>tables</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>and<sp/>a<sp/>straight<sp/>percentage-scaling<sp/>quality<sp/>scale.<sp/><sp/>In<sp/>most<sp/>cases<sp/>it&apos;s<sp/>better</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>to<sp/>use<sp/>jpeg_set_quality<sp/>(below);<sp/>this<sp/>entry<sp/>point<sp/>is<sp/>provided<sp/>for</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>applications<sp/>that<sp/>insist<sp/>on<sp/>a<sp/>linear<sp/>percentage<sp/>scaling.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>the<sp/>sample<sp/>quantization<sp/>table<sp/>given<sp/>in<sp/>the<sp/>JPEG<sp/>spec<sp/>section<sp/>K.1,</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/>*<sp/>but<sp/>expressed<sp/>in<sp/>zigzag<sp/>order<sp/>(as<sp/>are<sp/>all<sp/>of<sp/>our<sp/>quant.<sp/>tables).</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/>*<sp/>The<sp/>spec<sp/>says<sp/>that<sp/>the<sp/>values<sp/>given<sp/>produce<sp/>&quot;good&quot;<sp/>quality,<sp/>and</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/>*<sp/>when<sp/>divided<sp/>by<sp/>2,<sp/>&quot;very<sp/>good&quot;<sp/>quality.</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>std_luminance_quant_tbl[DCTSIZE2]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>16,<sp/><sp/>11,<sp/><sp/>12,<sp/><sp/>14,<sp/><sp/>12,<sp/><sp/>10,<sp/><sp/>16,<sp/><sp/>14,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>13,<sp/><sp/>14,<sp/><sp/>18,<sp/><sp/>17,<sp/><sp/>16,<sp/><sp/>19,<sp/><sp/>24,<sp/><sp/>40,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>26,<sp/><sp/>24,<sp/><sp/>22,<sp/><sp/>22,<sp/><sp/>24,<sp/><sp/>49,<sp/><sp/>35,<sp/><sp/>37,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>29,<sp/><sp/>40,<sp/><sp/>58,<sp/><sp/>51,<sp/><sp/>61,<sp/><sp/>60,<sp/><sp/>57,<sp/><sp/>51,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>56,<sp/><sp/>55,<sp/><sp/>64,<sp/><sp/>72,<sp/><sp/>92,<sp/><sp/>78,<sp/><sp/>64,<sp/><sp/>68,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>87,<sp/><sp/>69,<sp/><sp/>55,<sp/><sp/>56,<sp/><sp/>80,<sp/>109,<sp/><sp/>81,<sp/><sp/>87,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>95,<sp/><sp/>98,<sp/>103,<sp/>104,<sp/>103,<sp/><sp/>62,<sp/><sp/>77,<sp/>113,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>121,<sp/>112,<sp/>100,<sp/>120,<sp/><sp/>92,<sp/>101,<sp/>103,<sp/><sp/>99</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>std_chrominance_quant_tbl[DCTSIZE2]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>17,<sp/><sp/>18,<sp/><sp/>18,<sp/><sp/>24,<sp/><sp/>21,<sp/><sp/>24,<sp/><sp/>47,<sp/><sp/>26,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>26,<sp/><sp/>47,<sp/><sp/>99,<sp/><sp/>66,<sp/><sp/>56,<sp/><sp/>66,<sp/><sp/>99,<sp/><sp/>99,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99,<sp/><sp/>99</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>two<sp/>quantization<sp/>tables<sp/>using<sp/>the<sp/>specified<sp/>scaling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>jpeg_add_quant_table(cinfo,<sp/>0,<sp/>std_luminance_quant_tbl,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale_factor,<sp/>force_baseline);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>jpeg_add_quant_table(cinfo,<sp/>1,<sp/>std_chrominance_quant_tbl,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale_factor,<sp/>force_baseline);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">GLOBAL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">jpeg_quality_scaling<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quality)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Convert<sp/>a<sp/>user-specified<sp/>quality<sp/>rating<sp/>to<sp/>a<sp/>percentage<sp/>scaling<sp/>factor</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>for<sp/>an<sp/>underlying<sp/>quantization<sp/>table,<sp/>using<sp/>our<sp/>recommended<sp/>scaling<sp/>curve.</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/>The<sp/>input<sp/>&apos;quality&apos;<sp/>factor<sp/>should<sp/>be<sp/>0<sp/>(terrible)<sp/>to<sp/>100<sp/>(very<sp/>good).</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Safety<sp/>limit<sp/>on<sp/>quality<sp/>factor.<sp/><sp/>Convert<sp/>0<sp/>to<sp/>1<sp/>to<sp/>avoid<sp/>zero<sp/>divide.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(quality<sp/>&lt;=<sp/>0)<sp/>quality<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(quality<sp/>&gt;<sp/>100)<sp/>quality<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>basic<sp/>table<sp/>is<sp/>used<sp/>as-is<sp/>(scaling<sp/>100)<sp/>for<sp/>a<sp/>quality<sp/>of<sp/>50.</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Qualities<sp/>50..100<sp/>are<sp/>converted<sp/>to<sp/>scaling<sp/>percentage<sp/>200<sp/>-<sp/>2*Q;</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/>*<sp/>note<sp/>that<sp/>at<sp/>Q=100<sp/>the<sp/>scaling<sp/>is<sp/>0,<sp/>which<sp/>will<sp/>cause<sp/>j_add_quant_table</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/>*<sp/>to<sp/>make<sp/>all<sp/>the<sp/>table<sp/>entries<sp/>1<sp/>(hence,<sp/>no<sp/>quantization<sp/>loss).</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Qualities<sp/>1..50<sp/>are<sp/>converted<sp/>to<sp/>scaling<sp/>percentage<sp/>5000/Q.</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(quality<sp/>&lt;<sp/>50)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>quality<sp/>=<sp/>5000<sp/>/<sp/>quality;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>quality<sp/>=<sp/>200<sp/>-<sp/>quality*2;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>quality;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal">GLOBAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">jpeg_set_quality<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quality,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>force_baseline)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>or<sp/>change<sp/>the<sp/>&apos;quality&apos;<sp/>(quantization)<sp/>setting,<sp/>using<sp/>default<sp/>tables.</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>the<sp/>standard<sp/>quality-adjusting<sp/>entry<sp/>point<sp/>for<sp/>typical<sp/>user</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/>interfaces;<sp/>only<sp/>those<sp/>who<sp/>want<sp/>detailed<sp/>control<sp/>over<sp/>quantization<sp/>tables</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/>would<sp/>use<sp/>the<sp/>preceding<sp/>three<sp/>routines<sp/>directly.</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>user<sp/>0-100<sp/>rating<sp/>to<sp/>percentage<sp/>scaling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>quality<sp/>=<sp/>jpeg_quality_scaling(quality);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>standard<sp/>quality<sp/>tables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>jpeg_set_linear_quality(cinfo,<sp/>quality,<sp/>force_baseline);</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/>Huffman<sp/>table<sp/>setup<sp/>routines</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">LOCAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">add_huff_table<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_j_h_u_f_f___t_b_l" kindref="compound">JHUFF_TBL</ref><sp/>**htblptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UINT8<sp/>*bits,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UINT8<sp/>*val)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Define<sp/>a<sp/>Huffman<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*htblptr<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>*htblptr<sp/>=<sp/>jpeg_alloc_huff_table((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>MEMCOPY((*htblptr)-&gt;bits,<sp/>bits,<sp/>SIZEOF((*htblptr)-&gt;bits));</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>MEMCOPY((*htblptr)-&gt;huffval,<sp/>val,<sp/>SIZEOF((*htblptr)-&gt;huffval));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>sent_table<sp/>FALSE<sp/>so<sp/>table<sp/>will<sp/>be<sp/>written<sp/>to<sp/>JPEG<sp/>file.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>(*htblptr)-&gt;sent_table<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">LOCAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal">std_huff_tables<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>the<sp/>standard<sp/>Huffman<sp/>tables<sp/>(cf.<sp/>JPEG<sp/>standard<sp/>section<sp/>K.3)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>IMPORTANT:<sp/>these<sp/>are<sp/>only<sp/>valid<sp/>for<sp/>8-bit<sp/>data<sp/>precision!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UINT8<sp/>bits_dc_luminance[17]<sp/>=</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>0-base<sp/>*/</highlight><highlight class="normal"><sp/>0,<sp/>0,<sp/>1,<sp/>5,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UINT8<sp/>val_dc_luminance[]<sp/>=</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>0,<sp/>1,<sp/>2,<sp/>3,<sp/>4,<sp/>5,<sp/>6,<sp/>7,<sp/>8,<sp/>9,<sp/>10,<sp/>11<sp/>};</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UINT8<sp/>bits_dc_chrominance[17]<sp/>=</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>0-base<sp/>*/</highlight><highlight class="normal"><sp/>0,<sp/>0,<sp/>3,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UINT8<sp/>val_dc_chrominance[]<sp/>=</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>0,<sp/>1,<sp/>2,<sp/>3,<sp/>4,<sp/>5,<sp/>6,<sp/>7,<sp/>8,<sp/>9,<sp/>10,<sp/>11<sp/>};</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UINT8<sp/>bits_ac_luminance[17]<sp/>=</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>0-base<sp/>*/</highlight><highlight class="normal"><sp/>0,<sp/>0,<sp/>2,<sp/>1,<sp/>3,<sp/>3,<sp/>2,<sp/>4,<sp/>3,<sp/>5,<sp/>5,<sp/>4,<sp/>4,<sp/>0,<sp/>0,<sp/>1,<sp/>0x7d<sp/>};</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UINT8<sp/>val_ac_luminance[]<sp/>=</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>0x01,<sp/>0x02,<sp/>0x03,<sp/>0x00,<sp/>0x04,<sp/>0x11,<sp/>0x05,<sp/>0x12,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x21,<sp/>0x31,<sp/>0x41,<sp/>0x06,<sp/>0x13,<sp/>0x51,<sp/>0x61,<sp/>0x07,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x22,<sp/>0x71,<sp/>0x14,<sp/>0x32,<sp/>0x81,<sp/>0x91,<sp/>0xa1,<sp/>0x08,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x23,<sp/>0x42,<sp/>0xb1,<sp/>0xc1,<sp/>0x15,<sp/>0x52,<sp/>0xd1,<sp/>0xf0,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x24,<sp/>0x33,<sp/>0x62,<sp/>0x72,<sp/>0x82,<sp/>0x09,<sp/>0x0a,<sp/>0x16,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x17,<sp/>0x18,<sp/>0x19,<sp/>0x1a,<sp/>0x25,<sp/>0x26,<sp/>0x27,<sp/>0x28,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x29,<sp/>0x2a,<sp/>0x34,<sp/>0x35,<sp/>0x36,<sp/>0x37,<sp/>0x38,<sp/>0x39,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x3a,<sp/>0x43,<sp/>0x44,<sp/>0x45,<sp/>0x46,<sp/>0x47,<sp/>0x48,<sp/>0x49,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x4a,<sp/>0x53,<sp/>0x54,<sp/>0x55,<sp/>0x56,<sp/>0x57,<sp/>0x58,<sp/>0x59,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x5a,<sp/>0x63,<sp/>0x64,<sp/>0x65,<sp/>0x66,<sp/>0x67,<sp/>0x68,<sp/>0x69,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x6a,<sp/>0x73,<sp/>0x74,<sp/>0x75,<sp/>0x76,<sp/>0x77,<sp/>0x78,<sp/>0x79,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x7a,<sp/>0x83,<sp/>0x84,<sp/>0x85,<sp/>0x86,<sp/>0x87,<sp/>0x88,<sp/>0x89,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x8a,<sp/>0x92,<sp/>0x93,<sp/>0x94,<sp/>0x95,<sp/>0x96,<sp/>0x97,<sp/>0x98,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x99,<sp/>0x9a,<sp/>0xa2,<sp/>0xa3,<sp/>0xa4,<sp/>0xa5,<sp/>0xa6,<sp/>0xa7,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0xa8,<sp/>0xa9,<sp/>0xaa,<sp/>0xb2,<sp/>0xb3,<sp/>0xb4,<sp/>0xb5,<sp/>0xb6,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0xb7,<sp/>0xb8,<sp/>0xb9,<sp/>0xba,<sp/>0xc2,<sp/>0xc3,<sp/>0xc4,<sp/>0xc5,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0xc6,<sp/>0xc7,<sp/>0xc8,<sp/>0xc9,<sp/>0xca,<sp/>0xd2,<sp/>0xd3,<sp/>0xd4,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0xd5,<sp/>0xd6,<sp/>0xd7,<sp/>0xd8,<sp/>0xd9,<sp/>0xda,<sp/>0xe1,<sp/>0xe2,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0xe3,<sp/>0xe4,<sp/>0xe5,<sp/>0xe6,<sp/>0xe7,<sp/>0xe8,<sp/>0xe9,<sp/>0xea,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0xf1,<sp/>0xf2,<sp/>0xf3,<sp/>0xf4,<sp/>0xf5,<sp/>0xf6,<sp/>0xf7,<sp/>0xf8,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0xf9,<sp/>0xfa<sp/>};</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UINT8<sp/>bits_ac_chrominance[17]<sp/>=</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>0-base<sp/>*/</highlight><highlight class="normal"><sp/>0,<sp/>0,<sp/>2,<sp/>1,<sp/>2,<sp/>4,<sp/>4,<sp/>3,<sp/>4,<sp/>7,<sp/>5,<sp/>4,<sp/>4,<sp/>0,<sp/>1,<sp/>2,<sp/>0x77<sp/>};</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UINT8<sp/>val_ac_chrominance[]<sp/>=</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>0x00,<sp/>0x01,<sp/>0x02,<sp/>0x03,<sp/>0x11,<sp/>0x04,<sp/>0x05,<sp/>0x21,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x31,<sp/>0x06,<sp/>0x12,<sp/>0x41,<sp/>0x51,<sp/>0x07,<sp/>0x61,<sp/>0x71,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x13,<sp/>0x22,<sp/>0x32,<sp/>0x81,<sp/>0x08,<sp/>0x14,<sp/>0x42,<sp/>0x91,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0xa1,<sp/>0xb1,<sp/>0xc1,<sp/>0x09,<sp/>0x23,<sp/>0x33,<sp/>0x52,<sp/>0xf0,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x15,<sp/>0x62,<sp/>0x72,<sp/>0xd1,<sp/>0x0a,<sp/>0x16,<sp/>0x24,<sp/>0x34,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0xe1,<sp/>0x25,<sp/>0xf1,<sp/>0x17,<sp/>0x18,<sp/>0x19,<sp/>0x1a,<sp/>0x26,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x27,<sp/>0x28,<sp/>0x29,<sp/>0x2a,<sp/>0x35,<sp/>0x36,<sp/>0x37,<sp/>0x38,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x39,<sp/>0x3a,<sp/>0x43,<sp/>0x44,<sp/>0x45,<sp/>0x46,<sp/>0x47,<sp/>0x48,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x49,<sp/>0x4a,<sp/>0x53,<sp/>0x54,<sp/>0x55,<sp/>0x56,<sp/>0x57,<sp/>0x58,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x59,<sp/>0x5a,<sp/>0x63,<sp/>0x64,<sp/>0x65,<sp/>0x66,<sp/>0x67,<sp/>0x68,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x69,<sp/>0x6a,<sp/>0x73,<sp/>0x74,<sp/>0x75,<sp/>0x76,<sp/>0x77,<sp/>0x78,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x79,<sp/>0x7a,<sp/>0x82,<sp/>0x83,<sp/>0x84,<sp/>0x85,<sp/>0x86,<sp/>0x87,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x88,<sp/>0x89,<sp/>0x8a,<sp/>0x92,<sp/>0x93,<sp/>0x94,<sp/>0x95,<sp/>0x96,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0x97,<sp/>0x98,<sp/>0x99,<sp/>0x9a,<sp/>0xa2,<sp/>0xa3,<sp/>0xa4,<sp/>0xa5,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0xa6,<sp/>0xa7,<sp/>0xa8,<sp/>0xa9,<sp/>0xaa,<sp/>0xb2,<sp/>0xb3,<sp/>0xb4,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0xb5,<sp/>0xb6,<sp/>0xb7,<sp/>0xb8,<sp/>0xb9,<sp/>0xba,<sp/>0xc2,<sp/>0xc3,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0xc4,<sp/>0xc5,<sp/>0xc6,<sp/>0xc7,<sp/>0xc8,<sp/>0xc9,<sp/>0xca,<sp/>0xd2,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0xd3,<sp/>0xd4,<sp/>0xd5,<sp/>0xd6,<sp/>0xd7,<sp/>0xd8,<sp/>0xd9,<sp/>0xda,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0xe2,<sp/>0xe3,<sp/>0xe4,<sp/>0xe5,<sp/>0xe6,<sp/>0xe7,<sp/>0xe8,<sp/>0xe9,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0xea,<sp/>0xf2,<sp/>0xf3,<sp/>0xf4,<sp/>0xf5,<sp/>0xf6,<sp/>0xf7,<sp/>0xf8,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0xf9,<sp/>0xfa<sp/>};</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>add_huff_table(cinfo,<sp/>&amp;cinfo-&gt;dc_huff_tbl_ptrs[0],</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits_dc_luminance,<sp/>val_dc_luminance);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>add_huff_table(cinfo,<sp/>&amp;cinfo-&gt;ac_huff_tbl_ptrs[0],</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits_ac_luminance,<sp/>val_ac_luminance);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>add_huff_table(cinfo,<sp/>&amp;cinfo-&gt;dc_huff_tbl_ptrs[1],</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits_dc_chrominance,<sp/>val_dc_chrominance);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>add_huff_table(cinfo,<sp/>&amp;cinfo-&gt;ac_huff_tbl_ptrs[1],</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits_ac_chrominance,<sp/>val_ac_chrominance);</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*<sp/>Default<sp/>parameter<sp/>setup<sp/>for<sp/>compression.</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*<sp/>Applications<sp/>that<sp/>don&apos;t<sp/>choose<sp/>to<sp/>use<sp/>this<sp/>routine<sp/>must<sp/>do<sp/>their</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*<sp/>own<sp/>setup<sp/>of<sp/>all<sp/>these<sp/>parameters.<sp/><sp/>Alternately,<sp/>you<sp/>can<sp/>call<sp/>this</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*<sp/>to<sp/>establish<sp/>defaults<sp/>and<sp/>then<sp/>alter<sp/>parameters<sp/>selectively.<sp/><sp/>This</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*<sp/>is<sp/>the<sp/>recommended<sp/>approach<sp/>since,<sp/>if<sp/>we<sp/>add<sp/>any<sp/>new<sp/>parameters,</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*<sp/>your<sp/>code<sp/>will<sp/>still<sp/>work<sp/>(they&apos;ll<sp/>be<sp/>set<sp/>to<sp/>reasonable<sp/>defaults).</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal">GLOBAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal">jpeg_set_defaults<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Safety<sp/>check<sp/>to<sp/>ensure<sp/>start_compress<sp/>not<sp/>called<sp/>yet.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;global_state<sp/>!=<sp/>CSTATE_START)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT1(cinfo,<sp/>JERR_BAD_STATE,<sp/>cinfo-&gt;global_state);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>comp_info<sp/>array<sp/>large<sp/>enough<sp/>for<sp/>maximum<sp/>component<sp/>count.</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Array<sp/>is<sp/>made<sp/>permanent<sp/>in<sp/>case<sp/>application<sp/>wants<sp/>to<sp/>compress</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/><sp/>*<sp/>multiple<sp/>images<sp/>at<sp/>same<sp/>param<sp/>settings.</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;comp_info<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;comp_info<sp/>=<sp/>(<ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_PERMANENT,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAX_COMPONENTS<sp/>*<sp/>SIZEOF(<ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref>));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>everything<sp/>not<sp/>dependent<sp/>on<sp/>the<sp/>color<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>cinfo-&gt;data_precision<sp/>=<sp/>BITS_IN_JSAMPLE;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>two<sp/>quantization<sp/>tables<sp/>using<sp/>default<sp/>quality<sp/>of<sp/>75<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>jpeg_set_quality(cinfo,<sp/>75,<sp/>TRUE);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>two<sp/>Huffman<sp/>tables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>std_huff_tables(cinfo);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>default<sp/>arithmetic<sp/>coding<sp/>conditioning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NUM_ARITH_TBLS;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;arith_dc_L[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;arith_dc_U[i]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;arith_ac_K[i]<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Default<sp/>is<sp/>no<sp/>multiple-scan<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>cinfo-&gt;scan_info<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>cinfo-&gt;num_scans<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Expect<sp/>normal<sp/>source<sp/>image,<sp/>not<sp/>raw<sp/>downsampled<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>cinfo-&gt;raw_data_in<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Use<sp/>Huffman<sp/>coding,<sp/>not<sp/>arithmetic<sp/>coding,<sp/>by<sp/>default<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>cinfo-&gt;arith_code<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>By<sp/>default,<sp/>don&apos;t<sp/>do<sp/>extra<sp/>passes<sp/>to<sp/>optimize<sp/>entropy<sp/>coding<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>cinfo-&gt;optimize_coding<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>standard<sp/>Huffman<sp/>tables<sp/>are<sp/>only<sp/>valid<sp/>for<sp/>8-bit<sp/>data<sp/>precision.</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/><sp/><sp/>*<sp/>If<sp/>the<sp/>precision<sp/>is<sp/>higher,<sp/>force<sp/>optimization<sp/>on<sp/>so<sp/>that<sp/>usable</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/><sp/><sp/>*<sp/>tables<sp/>will<sp/>be<sp/>computed.<sp/><sp/>This<sp/>test<sp/>can<sp/>be<sp/>removed<sp/>if<sp/>default<sp/>tables</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/><sp/><sp/>*<sp/>are<sp/>supplied<sp/>that<sp/>are<sp/>valid<sp/>for<sp/>the<sp/>desired<sp/>precision.</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;data_precision<sp/>&gt;<sp/>8)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;optimize_coding<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>By<sp/>default,<sp/>use<sp/>the<sp/>simpler<sp/>non-cosited<sp/>sampling<sp/>alignment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>cinfo-&gt;CCIR601_sampling<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>input<sp/>smoothing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>cinfo-&gt;smoothing_factor<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>DCT<sp/>algorithm<sp/>preference<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>cinfo-&gt;dct_method<sp/>=<sp/>JDCT_DEFAULT;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>restart<sp/>markers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>cinfo-&gt;restart_interval<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>cinfo-&gt;restart_in_rows<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fill<sp/>in<sp/>default<sp/>JFIF<sp/>marker<sp/>parameters.<sp/><sp/>Note<sp/>that<sp/>whether<sp/>the<sp/>marker</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/><sp/><sp/>*<sp/>will<sp/>actually<sp/>be<sp/>written<sp/>is<sp/>determined<sp/>by<sp/>jpeg_set_colorspace.</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>cinfo-&gt;density_unit<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Pixel<sp/>size<sp/>is<sp/>unknown<sp/>by<sp/>default<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>cinfo-&gt;X_density<sp/>=<sp/>1;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pixel<sp/>aspect<sp/>ratio<sp/>is<sp/>square<sp/>by<sp/>default<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>cinfo-&gt;Y_density<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Choose<sp/>JPEG<sp/>colorspace<sp/>based<sp/>on<sp/>input<sp/>space,<sp/>set<sp/>defaults<sp/>accordingly<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>jpeg_default_colorspace(cinfo);</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>*<sp/>Select<sp/>an<sp/>appropriate<sp/>JPEG<sp/>colorspace<sp/>for<sp/>in_color_space.</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal">GLOBAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal">jpeg_default_colorspace<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="334"><highlight class="normal">{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(cinfo-&gt;in_color_space)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JCS_GRAYSCALE:</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_set_colorspace(cinfo,<sp/>JCS_GRAYSCALE);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JCS_RGB:</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_set_colorspace(cinfo,<sp/>JCS_YCbCr);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JCS_YCbCr:</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_set_colorspace(cinfo,<sp/>JCS_YCbCr);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JCS_CMYK:</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_set_colorspace(cinfo,<sp/>JCS_CMYK);<sp/></highlight><highlight class="comment">/*<sp/>By<sp/>default,<sp/>no<sp/>translation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JCS_YCCK:</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_set_colorspace(cinfo,<sp/>JCS_YCCK);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JCS_UNKNOWN:</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_set_colorspace(cinfo,<sp/>JCS_UNKNOWN);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_BAD_IN_COLORSPACE);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/>*<sp/>Set<sp/>the<sp/>JPEG<sp/>colorspace,<sp/>and<sp/>choose<sp/>colorspace-dependent<sp/>default<sp/>values.</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal">GLOBAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal">jpeg_set_colorspace<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,<sp/>J_COLOR_SPACE<sp/>colorspace)</highlight></codeline>
<codeline lineno="366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*<sp/>compptr;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SET_COMP(index,id,hsamp,vsamp,quant,dctbl,actbl)<sp/><sp/>\</highlight></codeline>
<codeline lineno="371"><highlight class="preprocessor"><sp/><sp/>(compptr<sp/>=<sp/>&amp;cinfo-&gt;comp_info[index],<sp/>\</highlight></codeline>
<codeline lineno="372"><highlight class="preprocessor"><sp/><sp/><sp/>compptr-&gt;component_id<sp/>=<sp/>(id),<sp/>\</highlight></codeline>
<codeline lineno="373"><highlight class="preprocessor"><sp/><sp/><sp/>compptr-&gt;h_samp_factor<sp/>=<sp/>(hsamp),<sp/>\</highlight></codeline>
<codeline lineno="374"><highlight class="preprocessor"><sp/><sp/><sp/>compptr-&gt;v_samp_factor<sp/>=<sp/>(vsamp),<sp/>\</highlight></codeline>
<codeline lineno="375"><highlight class="preprocessor"><sp/><sp/><sp/>compptr-&gt;quant_tbl_no<sp/>=<sp/>(quant),<sp/>\</highlight></codeline>
<codeline lineno="376"><highlight class="preprocessor"><sp/><sp/><sp/>compptr-&gt;dc_tbl_no<sp/>=<sp/>(dctbl),<sp/>\</highlight></codeline>
<codeline lineno="377"><highlight class="preprocessor"><sp/><sp/><sp/>compptr-&gt;ac_tbl_no<sp/>=<sp/>(actbl)<sp/>)</highlight></codeline>
<codeline lineno="378"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Safety<sp/>check<sp/>to<sp/>ensure<sp/>start_compress<sp/>not<sp/>called<sp/>yet.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;global_state<sp/>!=<sp/>CSTATE_START)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT1(cinfo,<sp/>JERR_BAD_STATE,<sp/>cinfo-&gt;global_state);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>all<sp/>colorspaces,<sp/>we<sp/>use<sp/>Q<sp/>and<sp/>Huff<sp/>tables<sp/>0<sp/>for<sp/>luminance<sp/>components,</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/><sp/><sp/>*<sp/>tables<sp/>1<sp/>for<sp/>chrominance<sp/>components.</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>cinfo-&gt;jpeg_color_space<sp/>=<sp/>colorspace;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>cinfo-&gt;write_JFIF_header<sp/>=<sp/>FALSE;<sp/></highlight><highlight class="comment">/*<sp/>No<sp/>marker<sp/>for<sp/>non-JFIF<sp/>colorspaces<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>cinfo-&gt;write_Adobe_marker<sp/>=<sp/>FALSE;<sp/></highlight><highlight class="comment">/*<sp/>write<sp/>no<sp/>Adobe<sp/>marker<sp/>by<sp/>default<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(colorspace)<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JCS_GRAYSCALE:</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;write_JFIF_header<sp/>=<sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>a<sp/>JFIF<sp/>marker<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;num_components<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>JFIF<sp/>specifies<sp/>component<sp/>ID<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_COMP(0,<sp/>1,<sp/>1,1,<sp/>0,<sp/>0,0);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JCS_RGB:</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;write_Adobe_marker<sp/>=<sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>write<sp/>Adobe<sp/>marker<sp/>to<sp/>flag<sp/>RGB<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;num_components<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_COMP(0,<sp/>0x52<sp/></highlight><highlight class="comment">/*<sp/>&apos;R&apos;<sp/>*/</highlight><highlight class="normal">,<sp/>1,1,<sp/>0,<sp/>0,0);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_COMP(1,<sp/>0x47<sp/></highlight><highlight class="comment">/*<sp/>&apos;G&apos;<sp/>*/</highlight><highlight class="normal">,<sp/>1,1,<sp/>0,<sp/>0,0);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_COMP(2,<sp/>0x42<sp/></highlight><highlight class="comment">/*<sp/>&apos;B&apos;<sp/>*/</highlight><highlight class="normal">,<sp/>1,1,<sp/>0,<sp/>0,0);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JCS_YCbCr:</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;write_JFIF_header<sp/>=<sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>a<sp/>JFIF<sp/>marker<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;num_components<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>JFIF<sp/>specifies<sp/>component<sp/>IDs<sp/>1,2,3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>default<sp/>to<sp/>2x2<sp/>subsamples<sp/>of<sp/>chrominance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_COMP(0,<sp/>1,<sp/>2,2,<sp/>0,<sp/>0,0);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_COMP(1,<sp/>2,<sp/>1,1,<sp/>1,<sp/>1,1);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_COMP(2,<sp/>3,<sp/>1,1,<sp/>1,<sp/>1,1);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JCS_CMYK:</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;write_Adobe_marker<sp/>=<sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>write<sp/>Adobe<sp/>marker<sp/>to<sp/>flag<sp/>CMYK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;num_components<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_COMP(0,<sp/>0x43<sp/></highlight><highlight class="comment">/*<sp/>&apos;C&apos;<sp/>*/</highlight><highlight class="normal">,<sp/>1,1,<sp/>0,<sp/>0,0);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_COMP(1,<sp/>0x4D<sp/></highlight><highlight class="comment">/*<sp/>&apos;M&apos;<sp/>*/</highlight><highlight class="normal">,<sp/>1,1,<sp/>0,<sp/>0,0);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_COMP(2,<sp/>0x59<sp/></highlight><highlight class="comment">/*<sp/>&apos;Y&apos;<sp/>*/</highlight><highlight class="normal">,<sp/>1,1,<sp/>0,<sp/>0,0);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_COMP(3,<sp/>0x4B<sp/></highlight><highlight class="comment">/*<sp/>&apos;K&apos;<sp/>*/</highlight><highlight class="normal">,<sp/>1,1,<sp/>0,<sp/>0,0);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JCS_YCCK:</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;write_Adobe_marker<sp/>=<sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>write<sp/>Adobe<sp/>marker<sp/>to<sp/>flag<sp/>YCCK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;num_components<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_COMP(0,<sp/>1,<sp/>2,2,<sp/>0,<sp/>0,0);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_COMP(1,<sp/>2,<sp/>1,1,<sp/>1,<sp/>1,1);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_COMP(2,<sp/>3,<sp/>1,1,<sp/>1,<sp/>1,1);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_COMP(3,<sp/>4,<sp/>2,2,<sp/>0,<sp/>0,0);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JCS_UNKNOWN:</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;num_components<sp/>=<sp/>cinfo-&gt;input_components;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;num_components<sp/>&lt;<sp/>1<sp/>||<sp/>cinfo-&gt;num_components<sp/>&gt;<sp/>MAX_COMPONENTS)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT2(cinfo,<sp/>JERR_COMPONENT_COUNT,<sp/>cinfo-&gt;num_components,</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAX_COMPONENTS);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;num_components;<sp/>ci++)<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SET_COMP(ci,<sp/>ci,<sp/>1,1,<sp/>0,<sp/>0,0);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_BAD_J_COLORSPACE);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal">}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>C_PROGRESSIVE_SUPPORTED</highlight></codeline>
<codeline lineno="447"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal">LOCAL<sp/><ref refid="structjpeg__scan__info" kindref="compound">jpeg_scan_info</ref><sp/>*</highlight></codeline>
<codeline lineno="449"><highlight class="normal">fill_a_scan<sp/>(<ref refid="structjpeg__scan__info" kindref="compound">jpeg_scan_info</ref><sp/>*<sp/>scanptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ss,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Se,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ah,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Al)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Support<sp/>routine:<sp/>generate<sp/>one<sp/>scan<sp/>for<sp/>specified<sp/>component<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>scanptr-&gt;comps_in_scan<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>scanptr-&gt;component_index[0]<sp/>=<sp/>ci;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>scanptr-&gt;Ss<sp/>=<sp/>Ss;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>scanptr-&gt;Se<sp/>=<sp/>Se;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>scanptr-&gt;Ah<sp/>=<sp/>Ah;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>scanptr-&gt;Al<sp/>=<sp/>Al;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>scanptr++;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scanptr;</highlight></codeline>
<codeline lineno="461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal">LOCAL<sp/><ref refid="structjpeg__scan__info" kindref="compound">jpeg_scan_info</ref><sp/>*</highlight></codeline>
<codeline lineno="464"><highlight class="normal">fill_scans<sp/>(<ref refid="structjpeg__scan__info" kindref="compound">jpeg_scan_info</ref><sp/>*<sp/>scanptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomps,</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ss,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Se,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ah,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Al)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Support<sp/>routine:<sp/>generate<sp/>one<sp/>scan<sp/>for<sp/>each<sp/>component<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal">{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0;<sp/>ci<sp/>&lt;<sp/>ncomps;<sp/>ci++)<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>scanptr-&gt;comps_in_scan<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>scanptr-&gt;component_index[0]<sp/>=<sp/>ci;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>scanptr-&gt;Ss<sp/>=<sp/>Ss;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>scanptr-&gt;Se<sp/>=<sp/>Se;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>scanptr-&gt;Ah<sp/>=<sp/>Ah;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>scanptr-&gt;Al<sp/>=<sp/>Al;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>scanptr++;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scanptr;</highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal">LOCAL<sp/><ref refid="structjpeg__scan__info" kindref="compound">jpeg_scan_info</ref><sp/>*</highlight></codeline>
<codeline lineno="483"><highlight class="normal">fill_dc_scans<sp/>(<ref refid="structjpeg__scan__info" kindref="compound">jpeg_scan_info</ref><sp/>*<sp/>scanptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomps,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ah,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Al)</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Support<sp/>routine:<sp/>generate<sp/>interleaved<sp/>DC<sp/>scan<sp/>if<sp/>possible,<sp/>else<sp/>N<sp/>scans<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ncomps<sp/>&lt;=<sp/>MAX_COMPS_IN_SCAN)<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Single<sp/>interleaved<sp/>DC<sp/>scan<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>scanptr-&gt;comps_in_scan<sp/>=<sp/>ncomps;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0;<sp/>ci<sp/>&lt;<sp/>ncomps;<sp/>ci++)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scanptr-&gt;component_index[ci]<sp/>=<sp/>ci;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>scanptr-&gt;Ss<sp/>=<sp/>scanptr-&gt;Se<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>scanptr-&gt;Ah<sp/>=<sp/>Ah;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>scanptr-&gt;Al<sp/>=<sp/>Al;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>scanptr++;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Noninterleaved<sp/>DC<sp/>scan<sp/>for<sp/>each<sp/>component<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>scanptr<sp/>=<sp/>fill_scans(scanptr,<sp/>ncomps,<sp/>0,<sp/>0,<sp/>Ah,<sp/>Al);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scanptr;</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/>*<sp/>Create<sp/>a<sp/>recommended<sp/>progressive-JPEG<sp/>script.</highlight></codeline>
<codeline lineno="507"><highlight class="comment"><sp/>*<sp/>cinfo-&gt;num_components<sp/>and<sp/>cinfo-&gt;jpeg_color_space<sp/>must<sp/>be<sp/>correct.</highlight></codeline>
<codeline lineno="508"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal">GLOBAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal">jpeg_simple_progression<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="512"><highlight class="normal">{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomps<sp/>=<sp/>cinfo-&gt;num_components;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nscans;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><ref refid="structjpeg__scan__info" kindref="compound">jpeg_scan_info</ref><sp/>*<sp/>scanptr;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Safety<sp/>check<sp/>to<sp/>ensure<sp/>start_compress<sp/>not<sp/>called<sp/>yet.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;global_state<sp/>!=<sp/>CSTATE_START)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT1(cinfo,<sp/>JERR_BAD_STATE,<sp/>cinfo-&gt;global_state);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Figure<sp/>space<sp/>needed<sp/>for<sp/>script.<sp/><sp/>Calculation<sp/>must<sp/>match<sp/>code<sp/>below!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ncomps<sp/>==<sp/>3<sp/>&amp;&amp;<sp/>cinfo-&gt;jpeg_color_space<sp/>==<sp/>JCS_YCbCr)<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Custom<sp/>script<sp/>for<sp/>YCbCr<sp/>color<sp/>images.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>nscans<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All-purpose<sp/>script<sp/>for<sp/>other<sp/>color<sp/>spaces.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ncomps<sp/>&gt;<sp/>MAX_COMPS_IN_SCAN)</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nscans<sp/>=<sp/>6<sp/>*<sp/>ncomps;<sp/><sp/></highlight><highlight class="comment">/*<sp/>2<sp/>DC<sp/>+<sp/>4<sp/>AC<sp/>scans<sp/>per<sp/>component<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nscans<sp/>=<sp/>2<sp/>+<sp/>4<sp/>*<sp/>ncomps;<sp/><sp/></highlight><highlight class="comment">/*<sp/>2<sp/>DC<sp/>scans;<sp/>4<sp/>AC<sp/>scans<sp/>per<sp/>component<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>space<sp/>for<sp/>script.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>use<sp/>permanent<sp/>pool<sp/>just<sp/>in<sp/>case<sp/>application<sp/>re-uses<sp/>script.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>scanptr<sp/>=<sp/>(<ref refid="structjpeg__scan__info" kindref="compound">jpeg_scan_info</ref><sp/>*)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_PERMANENT,</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nscans<sp/>*<sp/>SIZEOF(<ref refid="structjpeg__scan__info" kindref="compound">jpeg_scan_info</ref>));</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>cinfo-&gt;scan_info<sp/>=<sp/>scanptr;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>cinfo-&gt;num_scans<sp/>=<sp/>nscans;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ncomps<sp/>==<sp/>3<sp/>&amp;&amp;<sp/>cinfo-&gt;jpeg_color_space<sp/>==<sp/>JCS_YCbCr)<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Custom<sp/>script<sp/>for<sp/>YCbCr<sp/>color<sp/>images.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initial<sp/>DC<sp/>scan<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>scanptr<sp/>=<sp/>fill_dc_scans(scanptr,<sp/>ncomps,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initial<sp/>AC<sp/>scan:<sp/>get<sp/>some<sp/>luma<sp/>data<sp/>out<sp/>in<sp/>a<sp/>hurry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>scanptr<sp/>=<sp/>fill_a_scan(scanptr,<sp/>0,<sp/>1,<sp/>5,<sp/>0,<sp/>2);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Chroma<sp/>data<sp/>is<sp/>too<sp/>small<sp/>to<sp/>be<sp/>worth<sp/>expending<sp/>many<sp/>scans<sp/>on<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>scanptr<sp/>=<sp/>fill_a_scan(scanptr,<sp/>2,<sp/>1,<sp/>63,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>scanptr<sp/>=<sp/>fill_a_scan(scanptr,<sp/>1,<sp/>1,<sp/>63,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Complete<sp/>spectral<sp/>selection<sp/>for<sp/>luma<sp/>AC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>scanptr<sp/>=<sp/>fill_a_scan(scanptr,<sp/>0,<sp/>6,<sp/>63,<sp/>0,<sp/>2);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Refine<sp/>next<sp/>bit<sp/>of<sp/>luma<sp/>AC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>scanptr<sp/>=<sp/>fill_a_scan(scanptr,<sp/>0,<sp/>1,<sp/>63,<sp/>2,<sp/>1);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Finish<sp/>DC<sp/>successive<sp/>approximation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>scanptr<sp/>=<sp/>fill_dc_scans(scanptr,<sp/>ncomps,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Finish<sp/>AC<sp/>successive<sp/>approximation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>scanptr<sp/>=<sp/>fill_a_scan(scanptr,<sp/>2,<sp/>1,<sp/>63,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>scanptr<sp/>=<sp/>fill_a_scan(scanptr,<sp/>1,<sp/>1,<sp/>63,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Luma<sp/>bottom<sp/>bit<sp/>comes<sp/>last<sp/>since<sp/>it&apos;s<sp/>usually<sp/>largest<sp/>scan<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>scanptr<sp/>=<sp/>fill_a_scan(scanptr,<sp/>0,<sp/>1,<sp/>63,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All-purpose<sp/>script<sp/>for<sp/>other<sp/>color<sp/>spaces.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Successive<sp/>approximation<sp/>first<sp/>pass<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>scanptr<sp/>=<sp/>fill_dc_scans(scanptr,<sp/>ncomps,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>scanptr<sp/>=<sp/>fill_scans(scanptr,<sp/>ncomps,<sp/>1,<sp/>5,<sp/>0,<sp/>2);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>scanptr<sp/>=<sp/>fill_scans(scanptr,<sp/>ncomps,<sp/>6,<sp/>63,<sp/>0,<sp/>2);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Successive<sp/>approximation<sp/>second<sp/>pass<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>scanptr<sp/>=<sp/>fill_scans(scanptr,<sp/>ncomps,<sp/>1,<sp/>63,<sp/>2,<sp/>1);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Successive<sp/>approximation<sp/>final<sp/>pass<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>scanptr<sp/>=<sp/>fill_dc_scans(scanptr,<sp/>ncomps,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>scanptr<sp/>=<sp/>fill_scans(scanptr,<sp/>ncomps,<sp/>1,<sp/>63,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal">}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>C_PROGRESSIVE_SUPPORTED<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcparam.c"/>
  </compounddef>
</doxygen>
