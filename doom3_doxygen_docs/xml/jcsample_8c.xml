<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="jcsample_8c" kind="file">
    <compoundname>jcsample.c</compoundname>
    <includes refid="jinclude_8h" local="yes">jinclude.h</includes>
    <includes refid="jpeglib_8h" local="yes">jpeglib.h</includes>
    <innerclass refid="structmy__downsampler" prot="public">my_downsampler</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="jcsample_8c_1ad5c3cdfae3019b8223973041a2a1304b" prot="public" static="no">
        <name>JPEG_INTERNALS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcsample.c" line="48" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcsample.c" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="jcsample_8c_1afe2b131d74eedb44c04503a9bc3a143c" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(*  downsample1_ptr)(j_compress_ptr cinfo, jpeg_component_info *compptr, JSAMPARRAY input_data, JSAMPARRAY output_data)</definition>
        <argsstring>)(j_compress_ptr cinfo, jpeg_component_info *compptr, JSAMPARRAY input_data, JSAMPARRAY output_data)</argsstring>
        <name>downsample1_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcsample.c" line="56" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcsample.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="jcsample_8c_1add3b66ecd01f3a81a38458f6eb4e3d64" prot="public" static="no">
        <type><ref refid="structmy__downsampler" kindref="compound">my_downsampler</ref> *</type>
        <definition>typedef my_downsampler* my_downsample_ptr</definition>
        <argsstring></argsstring>
        <name>my_downsample_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcsample.c" line="67" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcsample.c" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="jcsample_8c_1aa3496e0645d09280e3697cb3d24b648c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void start_pass_downsample</definition>
        <argsstring>(j_compress_ptr cinfo)</argsstring>
        <name>start_pass_downsample</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcsample.c" line="75" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcsample.c" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="jcsample_8c_1a635a39931fb8e857954d2931a165feb0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void expand_right_edge</definition>
        <argsstring>(JSAMPARRAY image_data, int num_rows, JDIMENSION input_cols, JDIMENSION output_cols)</argsstring>
        <name>expand_right_edge</name>
        <param>
          <type>JSAMPARRAY</type>
          <declname>image_data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_rows</declname>
        </param>
        <param>
          <type>JDIMENSION</type>
          <declname>input_cols</declname>
        </param>
        <param>
          <type>JDIMENSION</type>
          <declname>output_cols</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcsample.c" line="87" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcsample.c" bodystart="87" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="jcsample_8c_1af559b3bb50b86942af3a669ce2dde0f4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void sep_downsample</definition>
        <argsstring>(j_compress_ptr cinfo, JSAMPIMAGE input_buf, JDIMENSION in_row_index, JSAMPIMAGE output_buf, JDIMENSION out_row_group_index)</argsstring>
        <name>sep_downsample</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type>JSAMPIMAGE</type>
          <declname>input_buf</declname>
        </param>
        <param>
          <type>JDIMENSION</type>
          <declname>in_row_index</declname>
        </param>
        <param>
          <type>JSAMPIMAGE</type>
          <declname>output_buf</declname>
        </param>
        <param>
          <type>JDIMENSION</type>
          <declname>out_row_group_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcsample.c" line="114" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcsample.c" bodystart="114" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="jcsample_8c_1a10f9d6391bdaba70c082cdc9ebf70b4b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void int_downsample</definition>
        <argsstring>(j_compress_ptr cinfo, jpeg_component_info *compptr, JSAMPARRAY input_data, JSAMPARRAY output_data)</argsstring>
        <name>int_downsample</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref> *</type>
          <declname>compptr</declname>
        </param>
        <param>
          <type>JSAMPARRAY</type>
          <declname>input_data</declname>
        </param>
        <param>
          <type>JSAMPARRAY</type>
          <declname>output_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcsample.c" line="140" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcsample.c" bodystart="140" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="jcsample_8c_1a17edac275d553b9b54e1e97ba00c63f7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fullsize_downsample</definition>
        <argsstring>(j_compress_ptr cinfo, jpeg_component_info *compptr, JSAMPARRAY input_data, JSAMPARRAY output_data)</argsstring>
        <name>fullsize_downsample</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref> *</type>
          <declname>compptr</declname>
        </param>
        <param>
          <type>JSAMPARRAY</type>
          <declname>input_data</declname>
        </param>
        <param>
          <type>JSAMPARRAY</type>
          <declname>output_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcsample.c" line="187" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcsample.c" bodystart="187" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="jcsample_8c_1a0b3373f8eea07fd147ba127221e19235" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void h2v1_downsample</definition>
        <argsstring>(j_compress_ptr cinfo, jpeg_component_info *compptr, JSAMPARRAY input_data, JSAMPARRAY output_data)</argsstring>
        <name>h2v1_downsample</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref> *</type>
          <declname>compptr</declname>
        </param>
        <param>
          <type>JSAMPARRAY</type>
          <declname>input_data</declname>
        </param>
        <param>
          <type>JSAMPARRAY</type>
          <declname>output_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcsample.c" line="212" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcsample.c" bodystart="212" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="jcsample_8c_1a1a3a0c6cbc2263af3c3cc2427dc247ac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void h2v2_downsample</definition>
        <argsstring>(j_compress_ptr cinfo, jpeg_component_info *compptr, JSAMPARRAY input_data, JSAMPARRAY output_data)</argsstring>
        <name>h2v2_downsample</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref> *</type>
          <declname>compptr</declname>
        </param>
        <param>
          <type>JSAMPARRAY</type>
          <declname>input_data</declname>
        </param>
        <param>
          <type>JSAMPARRAY</type>
          <declname>output_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcsample.c" line="249" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcsample.c" bodystart="249" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="jcsample_8c_1a679e1f626436018431ad752b36e1d551" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void h2v2_smooth_downsample</definition>
        <argsstring>(j_compress_ptr cinfo, jpeg_component_info *compptr, JSAMPARRAY input_data, JSAMPARRAY output_data)</argsstring>
        <name>h2v2_smooth_downsample</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref> *</type>
          <declname>compptr</declname>
        </param>
        <param>
          <type>JSAMPARRAY</type>
          <declname>input_data</declname>
        </param>
        <param>
          <type>JSAMPARRAY</type>
          <declname>output_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcsample.c" line="292" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcsample.c" bodystart="292" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="jcsample_8c_1aaca22a9f27a19c4ea4dc7d45c2eb8a46" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fullsize_smooth_downsample</definition>
        <argsstring>(j_compress_ptr cinfo, jpeg_component_info *compptr, JSAMPARRAY input_data, JSAMPARRAY output_data)</argsstring>
        <name>fullsize_smooth_downsample</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref> *</type>
          <declname>compptr</declname>
        </param>
        <param>
          <type>JSAMPARRAY</type>
          <declname>input_data</declname>
        </param>
        <param>
          <type>JSAMPARRAY</type>
          <declname>output_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcsample.c" line="392" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcsample.c" bodystart="392" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="jcsample_8c_1a39b88ae5812a1065626797ed88770cd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jinit_downsampler</definition>
        <argsstring>(j_compress_ptr cinfo)</argsstring>
        <name>jinit_downsampler</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcsample.c" line="464" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcsample.c" bodystart="464" bodyend="519"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>jcsample.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1991-1994,<sp/>Thomas<sp/>G.<sp/>Lane.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Independent<sp/>JPEG<sp/>Group&apos;s<sp/>software.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>conditions<sp/>of<sp/>distribution<sp/>and<sp/>use,<sp/>see<sp/>the<sp/>accompanying<sp/>README<sp/>file.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>downsampling<sp/>routines.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Downsampling<sp/>input<sp/>data<sp/>is<sp/>counted<sp/>in<sp/>&quot;row<sp/>groups&quot;.<sp/><sp/>A<sp/>row<sp/>group</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>is<sp/>defined<sp/>to<sp/>be<sp/>max_v_samp_factor<sp/>pixel<sp/>rows<sp/>of<sp/>each<sp/>component,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>from<sp/>which<sp/>the<sp/>downsampler<sp/>produces<sp/>v_samp_factor<sp/>sample<sp/>rows.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>A<sp/>single<sp/>row<sp/>group<sp/>is<sp/>processed<sp/>in<sp/>each<sp/>call<sp/>to<sp/>the<sp/>downsampler<sp/>module.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>The<sp/>downsampler<sp/>is<sp/>responsible<sp/>for<sp/>edge-expansion<sp/>of<sp/>its<sp/>output<sp/>data</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>to<sp/>fill<sp/>an<sp/>integral<sp/>number<sp/>of<sp/>DCT<sp/>blocks<sp/>horizontally.<sp/><sp/>The<sp/>source<sp/>buffer</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>may<sp/>be<sp/>modified<sp/>if<sp/>it<sp/>is<sp/>helpful<sp/>for<sp/>this<sp/>purpose<sp/>(the<sp/>source<sp/>buffer<sp/>is</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>allocated<sp/>wide<sp/>enough<sp/>to<sp/>correspond<sp/>to<sp/>the<sp/>desired<sp/>output<sp/>width).</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>The<sp/>caller<sp/>(the<sp/>prep<sp/>controller)<sp/>is<sp/>responsible<sp/>for<sp/>vertical<sp/>padding.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>The<sp/>downsampler<sp/>may<sp/>request<sp/>&quot;context<sp/>rows&quot;<sp/>by<sp/>setting<sp/>need_context_rows</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>during<sp/>startup.<sp/><sp/>In<sp/>this<sp/>case,<sp/>the<sp/>input<sp/>arrays<sp/>will<sp/>contain<sp/>at<sp/>least</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>one<sp/>row<sp/>group&apos;s<sp/>worth<sp/>of<sp/>pixels<sp/>above<sp/>and<sp/>below<sp/>the<sp/>passed-in<sp/>data;</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>the<sp/>caller<sp/>will<sp/>create<sp/>dummy<sp/>rows<sp/>at<sp/>image<sp/>top<sp/>and<sp/>bottom<sp/>by<sp/>replicating</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>the<sp/>first<sp/>or<sp/>last<sp/>real<sp/>pixel<sp/>row.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>An<sp/>excellent<sp/>reference<sp/>for<sp/>image<sp/>resampling<sp/>is</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Digital<sp/>Image<sp/>Warping,<sp/>George<sp/>Wolberg,<sp/>1990.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Pub.<sp/>by<sp/>IEEE<sp/>Computer<sp/>Society<sp/>Press,<sp/>Los<sp/>Alamitos,<sp/>CA.<sp/>ISBN<sp/>0-8186-8944-7.</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>The<sp/>downsampling<sp/>algorithm<sp/>used<sp/>here<sp/>is<sp/>a<sp/>simple<sp/>average<sp/>of<sp/>the<sp/>source</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>pixels<sp/>covered<sp/>by<sp/>the<sp/>output<sp/>pixel.<sp/><sp/>The<sp/>hi-falutin<sp/>sampling<sp/>literature</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>refers<sp/>to<sp/>this<sp/>as<sp/>a<sp/>&quot;box<sp/>filter&quot;.<sp/><sp/>In<sp/>general<sp/>the<sp/>characteristics<sp/>of<sp/>a<sp/>box</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>filter<sp/>are<sp/>not<sp/>very<sp/>good,<sp/>but<sp/>for<sp/>the<sp/>specific<sp/>cases<sp/>we<sp/>normally<sp/>use<sp/>(1:1</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>and<sp/>2:1<sp/>ratios)<sp/>the<sp/>box<sp/>is<sp/>equivalent<sp/>to<sp/>a<sp/>&quot;triangle<sp/>filter&quot;<sp/>which<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>nearly<sp/>so<sp/>bad.<sp/><sp/>If<sp/>you<sp/>intend<sp/>to<sp/>use<sp/>other<sp/>sampling<sp/>ratios,<sp/>you&apos;d<sp/>be<sp/>well</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>advised<sp/>to<sp/>improve<sp/>this<sp/>code.</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>A<sp/>simple<sp/>input-smoothing<sp/>capability<sp/>is<sp/>provided.<sp/><sp/>This<sp/>is<sp/>mainly<sp/>intended</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>for<sp/>cleaning<sp/>up<sp/>color-dithered<sp/>GIF<sp/>input<sp/>files<sp/>(if<sp/>you<sp/>find<sp/>it<sp/>inadequate,</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>we<sp/>suggest<sp/>using<sp/>an<sp/>external<sp/>filtering<sp/>program<sp/>such<sp/>as<sp/>pnmconvol).<sp/><sp/>When</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>enabled,<sp/>each<sp/>input<sp/>pixel<sp/>P<sp/>is<sp/>replaced<sp/>by<sp/>a<sp/>weighted<sp/>sum<sp/>of<sp/>itself<sp/>and<sp/>its</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>eight<sp/>neighbors.<sp/><sp/>P&apos;s<sp/>weight<sp/>is<sp/>1-8*SF<sp/>and<sp/>each<sp/>neighbor&apos;s<sp/>weight<sp/>is<sp/>SF,</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>where<sp/>SF<sp/>=<sp/>(smoothing_factor<sp/>/<sp/>1024).</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>Currently,<sp/>smoothing<sp/>is<sp/>only<sp/>supported<sp/>for<sp/>2h2v<sp/>sampling<sp/>factors.</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>JPEG_INTERNALS</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;jinclude.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jpeglib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Pointer<sp/>to<sp/>routine<sp/>to<sp/>downsample<sp/>a<sp/>single<sp/>component<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>downsample1_ptr,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,<sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*<sp/>compptr,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>input_data,<sp/>JSAMPARRAY<sp/>output_data));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>subobject<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="structmy__downsampler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__downsampler" kindref="compound">jpeg_downsampler</ref><sp/>pub;<sp/><sp/></highlight><highlight class="comment">/*<sp/>public<sp/>fields<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Downsampling<sp/>method<sp/>pointers,<sp/>one<sp/>per<sp/>component<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>downsample1_ptr<sp/>methods[MAX_COMPONENTS];</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}<sp/><ref refid="structmy__downsampler" kindref="compound">my_downsampler</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structmy__downsampler" kindref="compound">my_downsampler</ref><sp/>*<sp/><ref refid="structmy__downsampler" kindref="compound">my_downsample_ptr</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>Initialize<sp/>for<sp/>a<sp/>downsampling<sp/>pass.</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">start_pass_downsample<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>work<sp/>for<sp/>now<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/>Expand<sp/>a<sp/>component<sp/>horizontally<sp/>from<sp/>width<sp/>input_cols<sp/>to<sp/>width<sp/>output_cols,</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/>by<sp/>duplicating<sp/>the<sp/>rightmost<sp/>samples.</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">LOCAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">expand_right_edge<sp/>(JSAMPARRAY<sp/>image_data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_rows,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JDIMENSION<sp/>input_cols,<sp/>JDIMENSION<sp/>output_cols)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>JSAMPROW<sp/>ptr;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>JSAMPLE<sp/>pixval;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcols<sp/>=<sp/>(int)<sp/>(output_cols<sp/>-<sp/>input_cols);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numcols<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>num_rows;<sp/>row++)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>image_data[row]<sp/>+<sp/>input_cols;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pixval<sp/>=<sp/>ptr[-1];<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>need<sp/>GETJSAMPLE()<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(count<sp/>=<sp/>numcols;<sp/>count<sp/>&gt;<sp/>0;<sp/>count--)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>*ptr++<sp/>=<sp/>pixval;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*<sp/>Do<sp/>downsampling<sp/>for<sp/>a<sp/>whole<sp/>row<sp/>group<sp/>(all<sp/>components).</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/>In<sp/>this<sp/>version<sp/>we<sp/>simply<sp/>downsample<sp/>each<sp/>component<sp/>independently.</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">sep_downsample<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPIMAGE<sp/>input_buf,<sp/>JDIMENSION<sp/>in_row_index,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPIMAGE<sp/>output_buf,<sp/>JDIMENSION<sp/>out_row_group_index)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>my_downsample_ptr<sp/>downsample<sp/>=<sp/>(my_downsample_ptr)<sp/>cinfo-&gt;downsample;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*<sp/>compptr;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>JSAMPARRAY<sp/>in_ptr,<sp/>out_ptr;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>for<sp/>(ci<sp/>=<sp/>0,<sp/>compptr<sp/>=<sp/>cinfo-&gt;comp_info;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;num_components;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci++,<sp/>compptr++)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>in_ptr<sp/>=<sp/>input_buf[ci]<sp/>+<sp/>in_row_index;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>out_ptr<sp/>=<sp/>output_buf[ci]<sp/>+<sp/>(out_row_group_index<sp/>*<sp/>compptr-&gt;v_samp_factor);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>(*downsample-&gt;methods[ci])<sp/>(cinfo,<sp/>compptr,<sp/>in_ptr,<sp/>out_ptr);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*<sp/>Downsample<sp/>pixel<sp/>values<sp/>of<sp/>a<sp/>single<sp/>component.</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/>One<sp/>row<sp/>group<sp/>is<sp/>processed<sp/>per<sp/>call.</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*<sp/>This<sp/>version<sp/>handles<sp/>arbitrary<sp/>integral<sp/>sampling<sp/>ratios,<sp/>without<sp/>smoothing.</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*<sp/>Note<sp/>that<sp/>this<sp/>version<sp/>is<sp/>not<sp/>actually<sp/>used<sp/>for<sp/>customary<sp/>sampling<sp/>ratios.</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal">int_downsample<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,<sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*<sp/>compptr,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>input_data,<sp/>JSAMPARRAY<sp/>output_data)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inrow,<sp/>outrow,<sp/>h_expand,<sp/>v_expand,<sp/>numpix,<sp/>numpix2,<sp/>h,<sp/>v;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>outcol,<sp/>outcol_h;<sp/><sp/></highlight><highlight class="comment">/*<sp/>outcol_h<sp/>==<sp/>outcol*h_expand<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>output_cols<sp/>=<sp/>compptr-&gt;width_in_blocks<sp/>*<sp/>DCTSIZE;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>JSAMPROW<sp/>inptr,<sp/>outptr;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>INT32<sp/>outvalue;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>h_expand<sp/>=<sp/>cinfo-&gt;max_h_samp_factor<sp/>/<sp/>compptr-&gt;h_samp_factor;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>v_expand<sp/>=<sp/>cinfo-&gt;max_v_samp_factor<sp/>/<sp/>compptr-&gt;v_samp_factor;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>numpix<sp/>=<sp/>h_expand<sp/>*<sp/>v_expand;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>numpix2<sp/>=<sp/>numpix/2;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Expand<sp/>input<sp/>data<sp/>enough<sp/>to<sp/>let<sp/>all<sp/>the<sp/>output<sp/>samples<sp/>be<sp/>generated</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/>*<sp/>by<sp/>the<sp/>standard<sp/>loop.<sp/><sp/>Special-casing<sp/>padded<sp/>output<sp/>would<sp/>be<sp/>more</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/>*<sp/>efficient.</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>expand_right_edge(input_data,<sp/>cinfo-&gt;max_v_samp_factor,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;image_width,<sp/>output_cols<sp/>*<sp/>h_expand);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>inrow<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(outrow<sp/>=<sp/>0;<sp/>outrow<sp/>&lt;<sp/>compptr-&gt;v_samp_factor;<sp/>outrow++)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>outptr<sp/>=<sp/>output_data[outrow];</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(outcol<sp/>=<sp/>0,<sp/>outcol_h<sp/>=<sp/>0;<sp/>outcol<sp/>&lt;<sp/>output_cols;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>outcol++,<sp/>outcol_h<sp/>+=<sp/>h_expand)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outvalue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(v<sp/>=<sp/>0;<sp/>v<sp/>&lt;<sp/>v_expand;<sp/>v++)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>inptr<sp/>=<sp/>input_data[inrow+v]<sp/>+<sp/>outcol_h;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(h<sp/>=<sp/>0;<sp/>h<sp/>&lt;<sp/>h_expand;<sp/>h++)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outvalue<sp/>+=<sp/>(INT32)<sp/>GETJSAMPLE(*inptr++);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*outptr++<sp/>=<sp/>(JSAMPLE)<sp/>((outvalue<sp/>+<sp/>numpix2)<sp/>/<sp/>numpix);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>inrow<sp/>+=<sp/>v_expand;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/>Downsample<sp/>pixel<sp/>values<sp/>of<sp/>a<sp/>single<sp/>component.</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*<sp/>This<sp/>version<sp/>handles<sp/>the<sp/>special<sp/>case<sp/>of<sp/>a<sp/>full-size<sp/>component,</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*<sp/>without<sp/>smoothing.</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">fullsize_downsample<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,<sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*<sp/>compptr,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>input_data,<sp/>JSAMPARRAY<sp/>output_data)</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>the<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>jcopy_sample_rows(input_data,<sp/>0,<sp/>output_data,<sp/>0,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;max_v_samp_factor,<sp/>cinfo-&gt;image_width);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Edge-expand<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>expand_right_edge(output_data,<sp/>cinfo-&gt;max_v_samp_factor,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;image_width,<sp/>compptr-&gt;width_in_blocks<sp/>*<sp/>DCTSIZE);</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*<sp/>Downsample<sp/>pixel<sp/>values<sp/>of<sp/>a<sp/>single<sp/>component.</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*<sp/>This<sp/>version<sp/>handles<sp/>the<sp/>common<sp/>case<sp/>of<sp/>2:1<sp/>horizontal<sp/>and<sp/>1:1<sp/>vertical,</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*<sp/>without<sp/>smoothing.</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/>A<sp/>note<sp/>about<sp/>the<sp/>&quot;bias&quot;<sp/>calculations:<sp/>when<sp/>rounding<sp/>fractional<sp/>values<sp/>to</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*<sp/>integer,<sp/>we<sp/>do<sp/>not<sp/>want<sp/>to<sp/>always<sp/>round<sp/>0.5<sp/>up<sp/>to<sp/>the<sp/>next<sp/>integer.</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/>If<sp/>we<sp/>did<sp/>that,<sp/>we&apos;d<sp/>introduce<sp/>a<sp/>noticeable<sp/>bias<sp/>towards<sp/>larger<sp/>values.</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*<sp/>Instead,<sp/>this<sp/>code<sp/>is<sp/>arranged<sp/>so<sp/>that<sp/>0.5<sp/>will<sp/>be<sp/>rounded<sp/>up<sp/>or<sp/>down<sp/>at</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*<sp/>alternate<sp/>pixel<sp/>locations<sp/>(a<sp/>simple<sp/>ordered<sp/>dither<sp/>pattern).</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal">h2v1_downsample<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,<sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*<sp/>compptr,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>input_data,<sp/>JSAMPARRAY<sp/>output_data)</highlight></codeline>
<codeline lineno="214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outrow;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>outcol;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>output_cols<sp/>=<sp/>compptr-&gt;width_in_blocks<sp/>*<sp/>DCTSIZE;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>JSAMPROW<sp/>inptr,<sp/>outptr;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bias;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Expand<sp/>input<sp/>data<sp/>enough<sp/>to<sp/>let<sp/>all<sp/>the<sp/>output<sp/>samples<sp/>be<sp/>generated</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/>*<sp/>by<sp/>the<sp/>standard<sp/>loop.<sp/><sp/>Special-casing<sp/>padded<sp/>output<sp/>would<sp/>be<sp/>more</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/>*<sp/>efficient.</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>expand_right_edge(input_data,<sp/>cinfo-&gt;max_v_samp_factor,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;image_width,<sp/>output_cols<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(outrow<sp/>=<sp/>0;<sp/>outrow<sp/>&lt;<sp/>compptr-&gt;v_samp_factor;<sp/>outrow++)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>outptr<sp/>=<sp/>output_data[outrow];</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>inptr<sp/>=<sp/>input_data[outrow];</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>bias<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>bias<sp/>=<sp/>0,1,0,1,...<sp/>for<sp/>successive<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(outcol<sp/>=<sp/>0;<sp/>outcol<sp/>&lt;<sp/>output_cols;<sp/>outcol++)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*outptr++<sp/>=<sp/>(JSAMPLE)<sp/>((GETJSAMPLE(*inptr)<sp/>+<sp/>GETJSAMPLE(inptr[1])</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>bias)<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bias<sp/>^=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0=&gt;1,<sp/>1=&gt;0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inptr<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*<sp/>Downsample<sp/>pixel<sp/>values<sp/>of<sp/>a<sp/>single<sp/>component.</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*<sp/>This<sp/>version<sp/>handles<sp/>the<sp/>standard<sp/>case<sp/>of<sp/>2:1<sp/>horizontal<sp/>and<sp/>2:1<sp/>vertical,</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*<sp/>without<sp/>smoothing.</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal">h2v2_downsample<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,<sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*<sp/>compptr,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>input_data,<sp/>JSAMPARRAY<sp/>output_data)</highlight></codeline>
<codeline lineno="251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inrow,<sp/>outrow;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>outcol;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>output_cols<sp/>=<sp/>compptr-&gt;width_in_blocks<sp/>*<sp/>DCTSIZE;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>JSAMPROW<sp/>inptr0,<sp/>inptr1,<sp/>outptr;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bias;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Expand<sp/>input<sp/>data<sp/>enough<sp/>to<sp/>let<sp/>all<sp/>the<sp/>output<sp/>samples<sp/>be<sp/>generated</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/>*<sp/>by<sp/>the<sp/>standard<sp/>loop.<sp/><sp/>Special-casing<sp/>padded<sp/>output<sp/>would<sp/>be<sp/>more</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/><sp/>*<sp/>efficient.</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>expand_right_edge(input_data,<sp/>cinfo-&gt;max_v_samp_factor,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;image_width,<sp/>output_cols<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>inrow<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(outrow<sp/>=<sp/>0;<sp/>outrow<sp/>&lt;<sp/>compptr-&gt;v_samp_factor;<sp/>outrow++)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>outptr<sp/>=<sp/>output_data[outrow];</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>inptr0<sp/>=<sp/>input_data[inrow];</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>inptr1<sp/>=<sp/>input_data[inrow+1];</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>bias<sp/>=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>bias<sp/>=<sp/>1,2,1,2,...<sp/>for<sp/>successive<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(outcol<sp/>=<sp/>0;<sp/>outcol<sp/>&lt;<sp/>output_cols;<sp/>outcol++)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*outptr++<sp/>=<sp/>(JSAMPLE)<sp/>((GETJSAMPLE(*inptr0)<sp/>+<sp/>GETJSAMPLE(inptr0[1])<sp/>+</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETJSAMPLE(*inptr1)<sp/>+<sp/>GETJSAMPLE(inptr1[1])</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>bias)<sp/>&gt;&gt;<sp/>2);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bias<sp/>^=<sp/>3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1=&gt;2,<sp/>2=&gt;1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inptr0<sp/>+=<sp/>2;<sp/>inptr1<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>inrow<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>INPUT_SMOOTHING_SUPPORTED</highlight></codeline>
<codeline lineno="284"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/>*<sp/>Downsample<sp/>pixel<sp/>values<sp/>of<sp/>a<sp/>single<sp/>component.</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/>*<sp/>This<sp/>version<sp/>handles<sp/>the<sp/>standard<sp/>case<sp/>of<sp/>2:1<sp/>horizontal<sp/>and<sp/>2:1<sp/>vertical,</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/>*<sp/>with<sp/>smoothing.<sp/><sp/>One<sp/>row<sp/>of<sp/>context<sp/>is<sp/>required.</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal">h2v2_smooth_downsample<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,<sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*<sp/>compptr,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>input_data,<sp/>JSAMPARRAY<sp/>output_data)</highlight></codeline>
<codeline lineno="294"><highlight class="normal">{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inrow,<sp/>outrow;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>colctr;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>output_cols<sp/>=<sp/>compptr-&gt;width_in_blocks<sp/>*<sp/>DCTSIZE;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>JSAMPROW<sp/>inptr0,<sp/>inptr1,<sp/>above_ptr,<sp/>below_ptr,<sp/>outptr;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>INT32<sp/>membersum,<sp/>neighsum,<sp/>memberscale,<sp/>neighscale;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Expand<sp/>input<sp/>data<sp/>enough<sp/>to<sp/>let<sp/>all<sp/>the<sp/>output<sp/>samples<sp/>be<sp/>generated</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/>*<sp/>by<sp/>the<sp/>standard<sp/>loop.<sp/><sp/>Special-casing<sp/>padded<sp/>output<sp/>would<sp/>be<sp/>more</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/><sp/><sp/>*<sp/>efficient.</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>expand_right_edge(input_data<sp/>-<sp/>1,<sp/>cinfo-&gt;max_v_samp_factor<sp/>+<sp/>2,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;image_width,<sp/>output_cols<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>don&apos;t<sp/>bother<sp/>to<sp/>form<sp/>the<sp/>individual<sp/>&quot;smoothed&quot;<sp/>input<sp/>pixel<sp/>values;</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/>*<sp/>we<sp/>can<sp/>directly<sp/>compute<sp/>the<sp/>output<sp/>which<sp/>is<sp/>the<sp/>average<sp/>of<sp/>the<sp/>four</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/><sp/><sp/>*<sp/>smoothed<sp/>values.<sp/><sp/>Each<sp/>of<sp/>the<sp/>four<sp/>member<sp/>pixels<sp/>contributes<sp/>a<sp/>fraction</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/><sp/><sp/>*<sp/>(1-8*SF)<sp/>to<sp/>its<sp/>own<sp/>smoothed<sp/>image<sp/>and<sp/>a<sp/>fraction<sp/>SF<sp/>to<sp/>each<sp/>of<sp/>the<sp/>three</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/><sp/>*<sp/>other<sp/>smoothed<sp/>pixels,<sp/>therefore<sp/>a<sp/>total<sp/>fraction<sp/>(1-5*SF)/4<sp/>to<sp/>the<sp/>final</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/><sp/><sp/>*<sp/>output.<sp/><sp/>The<sp/>four<sp/>corner-adjacent<sp/>neighbor<sp/>pixels<sp/>contribute<sp/>a<sp/>fraction</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/><sp/><sp/>*<sp/>SF<sp/>to<sp/>just<sp/>one<sp/>smoothed<sp/>pixel,<sp/>or<sp/>SF/4<sp/>to<sp/>the<sp/>final<sp/>output;<sp/>while<sp/>the</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/><sp/><sp/>*<sp/>eight<sp/>edge-adjacent<sp/>neighbors<sp/>contribute<sp/>SF<sp/>to<sp/>each<sp/>of<sp/>two<sp/>smoothed</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/><sp/><sp/>*<sp/>pixels,<sp/>or<sp/>SF/2<sp/>overall.<sp/><sp/>In<sp/>order<sp/>to<sp/>use<sp/>integer<sp/>arithmetic,<sp/>these</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/><sp/><sp/>*<sp/>factors<sp/>are<sp/>scaled<sp/>by<sp/>2^16<sp/>=<sp/>65536.</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Also<sp/>recall<sp/>that<sp/>SF<sp/>=<sp/>smoothing_factor<sp/>/<sp/>1024.</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>memberscale<sp/>=<sp/>16384<sp/>-<sp/>cinfo-&gt;smoothing_factor<sp/>*<sp/>80;<sp/></highlight><highlight class="comment">/*<sp/>scaled<sp/>(1-5*SF)/4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>neighscale<sp/>=<sp/>cinfo-&gt;smoothing_factor<sp/>*<sp/>16;<sp/></highlight><highlight class="comment">/*<sp/>scaled<sp/>SF/4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>inrow<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(outrow<sp/>=<sp/>0;<sp/>outrow<sp/>&lt;<sp/>compptr-&gt;v_samp_factor;<sp/>outrow++)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>outptr<sp/>=<sp/>output_data[outrow];</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>inptr0<sp/>=<sp/>input_data[inrow];</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>inptr1<sp/>=<sp/>input_data[inrow+1];</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>above_ptr<sp/>=<sp/>input_data[inrow-1];</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>below_ptr<sp/>=<sp/>input_data[inrow+2];</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Special<sp/>case<sp/>for<sp/>first<sp/>column:<sp/>pretend<sp/>column<sp/>-1<sp/>is<sp/>same<sp/>as<sp/>column<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>membersum<sp/>=<sp/>GETJSAMPLE(*inptr0)<sp/>+<sp/>GETJSAMPLE(inptr0[1])<sp/>+</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETJSAMPLE(*inptr1)<sp/>+<sp/>GETJSAMPLE(inptr1[1]);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>neighsum<sp/>=<sp/>GETJSAMPLE(*above_ptr)<sp/>+<sp/>GETJSAMPLE(above_ptr[1])<sp/>+</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETJSAMPLE(*below_ptr)<sp/>+<sp/>GETJSAMPLE(below_ptr[1])<sp/>+</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETJSAMPLE(*inptr0)<sp/>+<sp/>GETJSAMPLE(inptr0[2])<sp/>+</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETJSAMPLE(*inptr1)<sp/>+<sp/>GETJSAMPLE(inptr1[2]);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>neighsum<sp/>+=<sp/>neighsum;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>neighsum<sp/>+=<sp/>GETJSAMPLE(*above_ptr)<sp/>+<sp/>GETJSAMPLE(above_ptr[2])<sp/>+</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETJSAMPLE(*below_ptr)<sp/>+<sp/>GETJSAMPLE(below_ptr[2]);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>membersum<sp/>=<sp/>membersum<sp/>*<sp/>memberscale<sp/>+<sp/>neighsum<sp/>*<sp/>neighscale;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>*outptr++<sp/>=<sp/>(JSAMPLE)<sp/>((membersum<sp/>+<sp/>32768)<sp/>&gt;&gt;<sp/>16);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>inptr0<sp/>+=<sp/>2;<sp/>inptr1<sp/>+=<sp/>2;<sp/>above_ptr<sp/>+=<sp/>2;<sp/>below_ptr<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(colctr<sp/>=<sp/>output_cols<sp/>-<sp/>2;<sp/>colctr<sp/>&gt;<sp/>0;<sp/>colctr--)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sum<sp/>of<sp/>pixels<sp/>directly<sp/>mapped<sp/>to<sp/>this<sp/>output<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>membersum<sp/>=<sp/>GETJSAMPLE(*inptr0)<sp/>+<sp/>GETJSAMPLE(inptr0[1])<sp/>+</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETJSAMPLE(*inptr1)<sp/>+<sp/>GETJSAMPLE(inptr1[1]);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sum<sp/>of<sp/>edge-neighbor<sp/>pixels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>neighsum<sp/>=<sp/>GETJSAMPLE(*above_ptr)<sp/>+<sp/>GETJSAMPLE(above_ptr[1])<sp/>+</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETJSAMPLE(*below_ptr)<sp/>+<sp/>GETJSAMPLE(below_ptr[1])<sp/>+</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETJSAMPLE(inptr0[-1])<sp/>+<sp/>GETJSAMPLE(inptr0[2])<sp/>+</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETJSAMPLE(inptr1[-1])<sp/>+<sp/>GETJSAMPLE(inptr1[2]);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>edge-neighbors<sp/>count<sp/>twice<sp/>as<sp/>much<sp/>as<sp/>corner-neighbors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>neighsum<sp/>+=<sp/>neighsum;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>in<sp/>the<sp/>corner-neighbors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>neighsum<sp/>+=<sp/>GETJSAMPLE(above_ptr[-1])<sp/>+<sp/>GETJSAMPLE(above_ptr[2])<sp/>+</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETJSAMPLE(below_ptr[-1])<sp/>+<sp/>GETJSAMPLE(below_ptr[2]);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>form<sp/>final<sp/>output<sp/>scaled<sp/>up<sp/>by<sp/>2^16<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>membersum<sp/>=<sp/>membersum<sp/>*<sp/>memberscale<sp/>+<sp/>neighsum<sp/>*<sp/>neighscale;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>round,<sp/>descale<sp/>and<sp/>output<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*outptr++<sp/>=<sp/>(JSAMPLE)<sp/>((membersum<sp/>+<sp/>32768)<sp/>&gt;&gt;<sp/>16);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inptr0<sp/>+=<sp/>2;<sp/>inptr1<sp/>+=<sp/>2;<sp/>above_ptr<sp/>+=<sp/>2;<sp/>below_ptr<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Special<sp/>case<sp/>for<sp/>last<sp/>column<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>membersum<sp/>=<sp/>GETJSAMPLE(*inptr0)<sp/>+<sp/>GETJSAMPLE(inptr0[1])<sp/>+</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETJSAMPLE(*inptr1)<sp/>+<sp/>GETJSAMPLE(inptr1[1]);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>neighsum<sp/>=<sp/>GETJSAMPLE(*above_ptr)<sp/>+<sp/>GETJSAMPLE(above_ptr[1])<sp/>+</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETJSAMPLE(*below_ptr)<sp/>+<sp/>GETJSAMPLE(below_ptr[1])<sp/>+</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETJSAMPLE(inptr0[-1])<sp/>+<sp/>GETJSAMPLE(inptr0[1])<sp/>+</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETJSAMPLE(inptr1[-1])<sp/>+<sp/>GETJSAMPLE(inptr1[1]);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>neighsum<sp/>+=<sp/>neighsum;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>neighsum<sp/>+=<sp/>GETJSAMPLE(above_ptr[-1])<sp/>+<sp/>GETJSAMPLE(above_ptr[1])<sp/>+</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETJSAMPLE(below_ptr[-1])<sp/>+<sp/>GETJSAMPLE(below_ptr[1]);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>membersum<sp/>=<sp/>membersum<sp/>*<sp/>memberscale<sp/>+<sp/>neighsum<sp/>*<sp/>neighscale;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>*outptr<sp/>=<sp/>(JSAMPLE)<sp/>((membersum<sp/>+<sp/>32768)<sp/>&gt;&gt;<sp/>16);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>inrow<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/>*<sp/>Downsample<sp/>pixel<sp/>values<sp/>of<sp/>a<sp/>single<sp/>component.</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/>*<sp/>This<sp/>version<sp/>handles<sp/>the<sp/>special<sp/>case<sp/>of<sp/>a<sp/>full-size<sp/>component,</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/>*<sp/>with<sp/>smoothing.<sp/><sp/>One<sp/>row<sp/>of<sp/>context<sp/>is<sp/>required.</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal">fullsize_smooth_downsample<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,<sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*compptr,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>input_data,<sp/>JSAMPARRAY<sp/>output_data)</highlight></codeline>
<codeline lineno="394"><highlight class="normal">{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outrow;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>colctr;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>output_cols<sp/>=<sp/>compptr-&gt;width_in_blocks<sp/>*<sp/>DCTSIZE;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>JSAMPROW<sp/>inptr,<sp/>above_ptr,<sp/>below_ptr,<sp/>outptr;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>INT32<sp/>membersum,<sp/>neighsum,<sp/>memberscale,<sp/>neighscale;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colsum,<sp/>lastcolsum,<sp/>nextcolsum;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Expand<sp/>input<sp/>data<sp/>enough<sp/>to<sp/>let<sp/>all<sp/>the<sp/>output<sp/>samples<sp/>be<sp/>generated</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/><sp/><sp/>*<sp/>by<sp/>the<sp/>standard<sp/>loop.<sp/><sp/>Special-casing<sp/>padded<sp/>output<sp/>would<sp/>be<sp/>more</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/><sp/><sp/>*<sp/>efficient.</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>expand_right_edge(input_data<sp/>-<sp/>1,<sp/>cinfo-&gt;max_v_samp_factor<sp/>+<sp/>2,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;image_width,<sp/>output_cols);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Each<sp/>of<sp/>the<sp/>eight<sp/>neighbor<sp/>pixels<sp/>contributes<sp/>a<sp/>fraction<sp/>SF<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/><sp/><sp/>*<sp/>smoothed<sp/>pixel,<sp/>while<sp/>the<sp/>main<sp/>pixel<sp/>contributes<sp/>(1-8*SF).<sp/><sp/>In<sp/>order</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/><sp/><sp/>*<sp/>to<sp/>use<sp/>integer<sp/>arithmetic,<sp/>these<sp/>factors<sp/>are<sp/>multiplied<sp/>by<sp/>2^16<sp/>=<sp/>65536.</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Also<sp/>recall<sp/>that<sp/>SF<sp/>=<sp/>smoothing_factor<sp/>/<sp/>1024.</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>memberscale<sp/>=<sp/>65536L<sp/>-<sp/>cinfo-&gt;smoothing_factor<sp/>*<sp/>512L;<sp/></highlight><highlight class="comment">/*<sp/>scaled<sp/>1-8*SF<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>neighscale<sp/>=<sp/>cinfo-&gt;smoothing_factor<sp/>*<sp/>64;<sp/></highlight><highlight class="comment">/*<sp/>scaled<sp/>SF<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(outrow<sp/>=<sp/>0;<sp/>outrow<sp/>&lt;<sp/>compptr-&gt;v_samp_factor;<sp/>outrow++)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>outptr<sp/>=<sp/>output_data[outrow];</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>inptr<sp/>=<sp/>input_data[outrow];</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>above_ptr<sp/>=<sp/>input_data[outrow-1];</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>below_ptr<sp/>=<sp/>input_data[outrow+1];</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Special<sp/>case<sp/>for<sp/>first<sp/>column<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>colsum<sp/>=<sp/>GETJSAMPLE(*above_ptr++)<sp/>+<sp/>GETJSAMPLE(*below_ptr++)<sp/>+</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETJSAMPLE(*inptr);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>membersum<sp/>=<sp/>GETJSAMPLE(*inptr++);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>nextcolsum<sp/>=<sp/>GETJSAMPLE(*above_ptr)<sp/>+<sp/>GETJSAMPLE(*below_ptr)<sp/>+</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETJSAMPLE(*inptr);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>neighsum<sp/>=<sp/>colsum<sp/>+<sp/>(colsum<sp/>-<sp/>membersum)<sp/>+<sp/>nextcolsum;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>membersum<sp/>=<sp/>membersum<sp/>*<sp/>memberscale<sp/>+<sp/>neighsum<sp/>*<sp/>neighscale;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>*outptr++<sp/>=<sp/>(JSAMPLE)<sp/>((membersum<sp/>+<sp/>32768)<sp/>&gt;&gt;<sp/>16);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>lastcolsum<sp/>=<sp/>colsum;<sp/>colsum<sp/>=<sp/>nextcolsum;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(colctr<sp/>=<sp/>output_cols<sp/>-<sp/>2;<sp/>colctr<sp/>&gt;<sp/>0;<sp/>colctr--)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>membersum<sp/>=<sp/>GETJSAMPLE(*inptr++);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>above_ptr++;<sp/>below_ptr++;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nextcolsum<sp/>=<sp/>GETJSAMPLE(*above_ptr)<sp/>+<sp/>GETJSAMPLE(*below_ptr)<sp/>+</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETJSAMPLE(*inptr);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>neighsum<sp/>=<sp/>lastcolsum<sp/>+<sp/>(colsum<sp/>-<sp/>membersum)<sp/>+<sp/>nextcolsum;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>membersum<sp/>=<sp/>membersum<sp/>*<sp/>memberscale<sp/>+<sp/>neighsum<sp/>*<sp/>neighscale;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*outptr++<sp/>=<sp/>(JSAMPLE)<sp/>((membersum<sp/>+<sp/>32768)<sp/>&gt;&gt;<sp/>16);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lastcolsum<sp/>=<sp/>colsum;<sp/>colsum<sp/>=<sp/>nextcolsum;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Special<sp/>case<sp/>for<sp/>last<sp/>column<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>membersum<sp/>=<sp/>GETJSAMPLE(*inptr);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>neighsum<sp/>=<sp/>lastcolsum<sp/>+<sp/>(colsum<sp/>-<sp/>membersum)<sp/>+<sp/>colsum;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>membersum<sp/>=<sp/>membersum<sp/>*<sp/>memberscale<sp/>+<sp/>neighsum<sp/>*<sp/>neighscale;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>*outptr<sp/>=<sp/>(JSAMPLE)<sp/>((membersum<sp/>+<sp/>32768)<sp/>&gt;&gt;<sp/>16);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>INPUT_SMOOTHING_SUPPORTED<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="456"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/>*<sp/>Module<sp/>initialization<sp/>routine<sp/>for<sp/>downsampling.</highlight></codeline>
<codeline lineno="460"><highlight class="comment"><sp/>*<sp/>Note<sp/>that<sp/>we<sp/>must<sp/>select<sp/>a<sp/>routine<sp/>for<sp/>each<sp/>component.</highlight></codeline>
<codeline lineno="461"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal">GLOBAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal">jinit_downsampler<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="465"><highlight class="normal">{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>my_downsample_ptr<sp/>downsample;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*<sp/>compptr;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>smoothok<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>downsample<sp/>=<sp/>(my_downsample_ptr)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SIZEOF(<ref refid="structmy__downsampler" kindref="compound">my_downsampler</ref>));</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>cinfo-&gt;downsample<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__downsampler" kindref="compound">jpeg_downsampler</ref><sp/>*)<sp/>downsample;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>downsample-&gt;pub.start_pass<sp/>=<sp/>start_pass_downsample;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>downsample-&gt;pub.downsample<sp/>=<sp/>sep_downsample;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>downsample-&gt;pub.need_context_rows<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;CCIR601_sampling)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_CCIR601_NOTIMPL);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Verify<sp/>we<sp/>can<sp/>handle<sp/>the<sp/>sampling<sp/>factors,<sp/>and<sp/>set<sp/>up<sp/>method<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0,<sp/>compptr<sp/>=<sp/>cinfo-&gt;comp_info;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;num_components;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci++,<sp/>compptr++)<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compptr-&gt;h_samp_factor<sp/>==<sp/>cinfo-&gt;max_h_samp_factor<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;v_samp_factor<sp/>==<sp/>cinfo-&gt;max_v_samp_factor)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>INPUT_SMOOTHING_SUPPORTED</highlight></codeline>
<codeline lineno="488"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;smoothing_factor)<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>downsample-&gt;methods[ci]<sp/>=<sp/>fullsize_smooth_downsample;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>downsample-&gt;pub.need_context_rows<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="493"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>downsample-&gt;methods[ci]<sp/>=<sp/>fullsize_downsample;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compptr-&gt;h_samp_factor<sp/>*<sp/>2<sp/>==<sp/>cinfo-&gt;max_h_samp_factor<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compptr-&gt;v_samp_factor<sp/>==<sp/>cinfo-&gt;max_v_samp_factor)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>smoothok<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>downsample-&gt;methods[ci]<sp/>=<sp/>h2v1_downsample;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compptr-&gt;h_samp_factor<sp/>*<sp/>2<sp/>==<sp/>cinfo-&gt;max_h_samp_factor<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compptr-&gt;v_samp_factor<sp/>*<sp/>2<sp/>==<sp/>cinfo-&gt;max_v_samp_factor)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>INPUT_SMOOTHING_SUPPORTED</highlight></codeline>
<codeline lineno="501"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;smoothing_factor)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>downsample-&gt;methods[ci]<sp/>=<sp/>h2v2_smooth_downsample;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>downsample-&gt;pub.need_context_rows<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="506"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>downsample-&gt;methods[ci]<sp/>=<sp/>h2v2_downsample;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((cinfo-&gt;max_h_samp_factor<sp/>%<sp/>compptr-&gt;h_samp_factor)<sp/>==<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(cinfo-&gt;max_v_samp_factor<sp/>%<sp/>compptr-&gt;v_samp_factor)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>smoothok<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>downsample-&gt;methods[ci]<sp/>=<sp/>int_downsample;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_FRACT_SAMPLE_NOTIMPL);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>INPUT_SMOOTHING_SUPPORTED</highlight></codeline>
<codeline lineno="516"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;smoothing_factor<sp/>&amp;&amp;<sp/>!smoothok)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>TRACEMS(cinfo,<sp/>0,<sp/>JTRC_SMOOTH_NOTIMPL);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="519"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jcsample.c"/>
  </compounddef>
</doxygen>
