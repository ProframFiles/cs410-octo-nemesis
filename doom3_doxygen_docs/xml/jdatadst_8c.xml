<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="jdatadst_8c" kind="file">
    <compoundname>jdatadst.c</compoundname>
    <includes refid="jinclude_8h" local="yes">jinclude.h</includes>
    <includes refid="jpeglib_8h" local="yes">jpeglib.h</includes>
    <includes refid="jerror_8h" local="yes">jerror.h</includes>
    <innerclass refid="structmy__destination__mgr" prot="public">my_destination_mgr</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="jdatadst_8c_1a8acf94def2dcba72a4fce097981e0aa7" prot="public" static="no">
        <name>OUTPUT_BUF_SIZE</name>
        <initializer>4096	/* choose an efficiently fwrite&apos;able size */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdatadst.c" line="34" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdatadst.c" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="jdatadst_8c_1aaa572679b68ce44ebdaf8e21772ce9a7" prot="public" static="no">
        <type><ref refid="structmy__destination__mgr" kindref="compound">my_destination_mgr</ref> *</type>
        <definition>typedef my_destination_mgr* my_dest_ptr</definition>
        <argsstring></argsstring>
        <name>my_dest_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdatadst.c" line="32" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdatadst.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="jdatadst_8c_1a20876c889315607c7df01cf02be7e92f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void init_destination</definition>
        <argsstring>(j_compress_ptr cinfo)</argsstring>
        <name>init_destination</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdatadst.c" line="43" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdatadst.c" bodystart="43" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="jdatadst_8c_1a2ed231f39951d127c94e9772d97e1baf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boolean</type>
        <definition>static boolean empty_output_buffer</definition>
        <argsstring>(j_compress_ptr cinfo)</argsstring>
        <name>empty_output_buffer</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdatadst.c" line="81" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdatadst.c" bodystart="81" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="jdatadst_8c_1af2b6542c737f18a83b7c7718ae8e7143" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void term_destination</definition>
        <argsstring>(j_compress_ptr cinfo)</argsstring>
        <name>term_destination</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdatadst.c" line="106" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdatadst.c" bodystart="106" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="jdatadst_8c_1a0eb39d4916c15d1f228ad15eb70fcaf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jpeg_stdio_dest</definition>
        <argsstring>(j_compress_ptr cinfo, FILE *outfile)</argsstring>
        <name>jpeg_stdio_dest</name>
        <param>
          <type><ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>outfile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdatadst.c" line="130" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdatadst.c" bodystart="130" bodyend="151"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>jdatadst.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1994,<sp/>Thomas<sp/>G.<sp/>Lane.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Independent<sp/>JPEG<sp/>Group&apos;s<sp/>software.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>conditions<sp/>of<sp/>distribution<sp/>and<sp/>use,<sp/>see<sp/>the<sp/>accompanying<sp/>README<sp/>file.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>compression<sp/>data<sp/>destination<sp/>routines<sp/>for<sp/>the<sp/>case<sp/>of</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>emitting<sp/>JPEG<sp/>data<sp/>to<sp/>a<sp/>file<sp/>(or<sp/>any<sp/>stdio<sp/>stream).<sp/><sp/>While<sp/>these<sp/>routines</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>are<sp/>sufficient<sp/>for<sp/>most<sp/>applications,<sp/>some<sp/>will<sp/>want<sp/>to<sp/>use<sp/>a<sp/>different</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>destination<sp/>manager.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>IMPORTANT:<sp/>we<sp/>assume<sp/>that<sp/>fwrite()<sp/>will<sp/>correctly<sp/>transcribe<sp/>an<sp/>array<sp/>of</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>JOCTETs<sp/>into<sp/>8-bit-wide<sp/>elements<sp/>on<sp/>external<sp/>storage.<sp/><sp/>If<sp/>char<sp/>is<sp/>wider</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>than<sp/>8<sp/>bits<sp/>on<sp/>your<sp/>machine,<sp/>you<sp/>may<sp/>need<sp/>to<sp/>do<sp/>some<sp/>tweaking.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>not<sp/>a<sp/>core<sp/>library<sp/>module,<sp/>so<sp/>it<sp/>doesn&apos;t<sp/>define<sp/>JPEG_INTERNALS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jinclude.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jpeglib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jerror.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Expanded<sp/>data<sp/>destination<sp/>object<sp/>for<sp/>stdio<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="structmy__destination__mgr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__destination__mgr" kindref="compound">jpeg_destination_mgr</ref><sp/>pub;<sp/></highlight><highlight class="comment">/*<sp/>public<sp/>fields<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>FILE<sp/>*<sp/>outfile;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>target<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>JOCTET<sp/>*<sp/>buffer;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>start<sp/>of<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">}<sp/><ref refid="structmy__destination__mgr" kindref="compound">my_destination_mgr</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structmy__destination__mgr" kindref="compound">my_destination_mgr</ref><sp/>*<sp/><ref refid="structmy__destination__mgr" kindref="compound">my_dest_ptr</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OUTPUT_BUF_SIZE<sp/><sp/>4096<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>choose<sp/>an<sp/>efficiently<sp/>fwrite&apos;able<sp/>size<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>Initialize<sp/>destination<sp/>---<sp/>called<sp/>by<sp/>jpeg_start_compress</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>before<sp/>any<sp/>data<sp/>is<sp/>actually<sp/>written.</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">init_destination<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="structmy__destination__mgr" kindref="compound">my_dest_ptr</ref><sp/>dest<sp/>=<sp/>(<ref refid="structmy__destination__mgr" kindref="compound">my_dest_ptr</ref>)<sp/>cinfo-&gt;dest;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>the<sp/>output<sp/>buffer<sp/>---<sp/>it<sp/>will<sp/>be<sp/>released<sp/>when<sp/>done<sp/>with<sp/>image<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>dest-&gt;buffer<sp/>=<sp/>(JOCTET<sp/>*)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OUTPUT_BUF_SIZE<sp/>*<sp/>SIZEOF(JOCTET));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>dest-&gt;pub.next_output_byte<sp/>=<sp/>dest-&gt;buffer;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>dest-&gt;pub.free_in_buffer<sp/>=<sp/>OUTPUT_BUF_SIZE;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>Empty<sp/>the<sp/>output<sp/>buffer<sp/>---<sp/>called<sp/>whenever<sp/>buffer<sp/>fills<sp/>up.</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>In<sp/>typical<sp/>applications,<sp/>this<sp/>should<sp/>write<sp/>the<sp/>entire<sp/>output<sp/>buffer</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>(ignoring<sp/>the<sp/>current<sp/>state<sp/>of<sp/>next_output_byte<sp/>&amp;<sp/>free_in_buffer),</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>reset<sp/>the<sp/>pointer<sp/>&amp;<sp/>count<sp/>to<sp/>the<sp/>start<sp/>of<sp/>the<sp/>buffer,<sp/>and<sp/>return<sp/>TRUE</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>indicating<sp/>that<sp/>the<sp/>buffer<sp/>has<sp/>been<sp/>dumped.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>In<sp/>applications<sp/>that<sp/>need<sp/>to<sp/>be<sp/>able<sp/>to<sp/>suspend<sp/>compression<sp/>due<sp/>to<sp/>output</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>overrun,<sp/>a<sp/>FALSE<sp/>return<sp/>indicates<sp/>that<sp/>the<sp/>buffer<sp/>cannot<sp/>be<sp/>emptied<sp/>now.</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>In<sp/>this<sp/>situation,<sp/>the<sp/>compressor<sp/>will<sp/>return<sp/>to<sp/>its<sp/>caller<sp/>(possibly<sp/>with</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>an<sp/>indication<sp/>that<sp/>it<sp/>has<sp/>not<sp/>accepted<sp/>all<sp/>the<sp/>supplied<sp/>scanlines).<sp/><sp/>The</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>application<sp/>should<sp/>resume<sp/>compression<sp/>after<sp/>it<sp/>has<sp/>made<sp/>more<sp/>room<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>output<sp/>buffer.<sp/><sp/>Note<sp/>that<sp/>there<sp/>are<sp/>substantial<sp/>restrictions<sp/>on<sp/>the<sp/>use<sp/>of</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>suspension<sp/>---<sp/>see<sp/>the<sp/>documentation.</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>When<sp/>suspending,<sp/>the<sp/>compressor<sp/>will<sp/>back<sp/>up<sp/>to<sp/>a<sp/>convenient<sp/>restart<sp/>point</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>(typically<sp/>the<sp/>start<sp/>of<sp/>the<sp/>current<sp/>MCU).<sp/>next_output_byte<sp/>&amp;<sp/>free_in_buffer</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>indicate<sp/>where<sp/>the<sp/>restart<sp/>point<sp/>will<sp/>be<sp/>if<sp/>the<sp/>current<sp/>call<sp/>returns<sp/>FALSE.</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/>Data<sp/>beyond<sp/>this<sp/>point<sp/>will<sp/>be<sp/>regenerated<sp/>after<sp/>resumption,<sp/>so<sp/>do<sp/>not</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/>write<sp/>it<sp/>out<sp/>when<sp/>emptying<sp/>the<sp/>buffer<sp/>externally.</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">empty_output_buffer<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="structmy__destination__mgr" kindref="compound">my_dest_ptr</ref><sp/>dest<sp/>=<sp/>(<ref refid="structmy__destination__mgr" kindref="compound">my_dest_ptr</ref>)<sp/>cinfo-&gt;dest;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>if<sp/>(JFWRITE(dest-&gt;outfile,<sp/>dest-&gt;buffer,<sp/>OUTPUT_BUF_SIZE)<sp/>!=</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(size_t)<sp/>OUTPUT_BUF_SIZE)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_FILE_WRITE);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>dest-&gt;pub.next_output_byte<sp/>=<sp/>dest-&gt;buffer;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>dest-&gt;pub.free_in_buffer<sp/>=<sp/>OUTPUT_BUF_SIZE;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/>Terminate<sp/>destination<sp/>---<sp/>called<sp/>by<sp/>jpeg_finish_compress</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/>after<sp/>all<sp/>data<sp/>has<sp/>been<sp/>written.<sp/><sp/>Usually<sp/>needs<sp/>to<sp/>flush<sp/>buffer.</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/>NB:<sp/>*not*<sp/>called<sp/>by<sp/>jpeg_abort<sp/>or<sp/>jpeg_destroy;<sp/>surrounding</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/>application<sp/>must<sp/>deal<sp/>with<sp/>any<sp/>cleanup<sp/>that<sp/>should<sp/>happen<sp/>even</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/>for<sp/>error<sp/>exit.</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">term_destination<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="structmy__destination__mgr" kindref="compound">my_dest_ptr</ref><sp/>dest<sp/>=<sp/>(<ref refid="structmy__destination__mgr" kindref="compound">my_dest_ptr</ref>)<sp/>cinfo-&gt;dest;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>datacount<sp/>=<sp/>OUTPUT_BUF_SIZE<sp/>-<sp/>dest-&gt;pub.free_in_buffer;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>any<sp/>data<sp/>remaining<sp/>in<sp/>the<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>if<sp/>(datacount<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(JFWRITE(dest-&gt;outfile,<sp/>dest-&gt;buffer,<sp/>datacount)<sp/>!=<sp/>datacount)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_FILE_WRITE);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>fflush(dest-&gt;outfile);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>we<sp/>wrote<sp/>the<sp/>output<sp/>file<sp/>OK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ferror(dest-&gt;outfile))</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_FILE_WRITE);</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/>Prepare<sp/>for<sp/>output<sp/>to<sp/>a<sp/>stdio<sp/>stream.</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/>The<sp/>caller<sp/>must<sp/>have<sp/>already<sp/>opened<sp/>the<sp/>stream,<sp/>and<sp/>is<sp/>responsible</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/>for<sp/>closing<sp/>it<sp/>after<sp/>finishing<sp/>compression.</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">GLOBAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">jpeg_stdio_dest<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,<sp/>FILE<sp/>*<sp/>outfile)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><ref refid="structmy__destination__mgr" kindref="compound">my_dest_ptr</ref><sp/>dest;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>destination<sp/>object<sp/>is<sp/>made<sp/>permanent<sp/>so<sp/>that<sp/>multiple<sp/>JPEG<sp/>images</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/>*<sp/>can<sp/>be<sp/>written<sp/>to<sp/>the<sp/>same<sp/>file<sp/>without<sp/>re-executing<sp/>jpeg_stdio_dest.</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/>*<sp/>This<sp/>makes<sp/>it<sp/>dangerous<sp/>to<sp/>use<sp/>this<sp/>manager<sp/>and<sp/>a<sp/>different<sp/>destination</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/>*<sp/>manager<sp/>serially<sp/>with<sp/>the<sp/>same<sp/>JPEG<sp/>object,<sp/>because<sp/>their<sp/>private<sp/>object</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/>*<sp/>sizes<sp/>may<sp/>be<sp/>different.<sp/><sp/>Caveat<sp/>programmer.</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;dest<sp/>==<sp/>NULL)<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>time<sp/>for<sp/>this<sp/>JPEG<sp/>object?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;dest<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__destination__mgr" kindref="compound">jpeg_destination_mgr</ref><sp/>*)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_PERMANENT,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SIZEOF(<ref refid="structmy__destination__mgr" kindref="compound">my_destination_mgr</ref>));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>dest<sp/>=<sp/>(<ref refid="structmy__destination__mgr" kindref="compound">my_dest_ptr</ref>)<sp/>cinfo-&gt;dest;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>dest-&gt;pub.init_destination<sp/>=<sp/>init_destination;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>dest-&gt;pub.empty_output_buffer<sp/>=<sp/>empty_output_buffer;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>dest-&gt;pub.term_destination<sp/>=<sp/>term_destination;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>dest-&gt;outfile<sp/>=<sp/>outfile;</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdatadst.c"/>
  </compounddef>
</doxygen>
