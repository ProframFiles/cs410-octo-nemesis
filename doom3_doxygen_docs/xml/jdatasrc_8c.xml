<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="jdatasrc_8c" kind="file">
    <compoundname>jdatasrc.c</compoundname>
    <includes refid="jinclude_8h" local="yes">jinclude.h</includes>
    <includes refid="jpeglib_8h" local="yes">jpeglib.h</includes>
    <includes refid="jerror_8h" local="yes">jerror.h</includes>
    <innerclass refid="structmy__source__mgr" prot="public">my_source_mgr</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="jdatasrc_8c_1a8f53190540130db759820c0d9ab78f60" prot="public" static="no">
        <name>INPUT_BUF_SIZE</name>
        <initializer>4096	/* choose an efficiently fread&apos;able size */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdatasrc.c" line="36" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdatasrc.c" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="jdatasrc_8c_1a49288434c1d7bc0883779c6489426881" prot="public" static="no">
        <type><ref refid="structmy__source__mgr" kindref="compound">my_source_mgr</ref> *</type>
        <definition>typedef my_source_mgr* my_src_ptr</definition>
        <argsstring></argsstring>
        <name>my_src_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdatasrc.c" line="34" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdatasrc.c" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="jdatasrc_8c_1acad16ec325c7f0da2c4f1c275bfb140e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void init_source</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>init_source</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdatasrc.c" line="45" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdatasrc.c" bodystart="45" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="jdatasrc_8c_1ad8837beb9a73638ed25ee680b7022541" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boolean</type>
        <definition>static boolean fill_input_buffer</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>fill_input_buffer</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdatasrc.c" line="91" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdatasrc.c" bodystart="91" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="jdatasrc_8c_1abfda68eeaf5dd42f3c3e536d3e7e9ac4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void skip_input_data</definition>
        <argsstring>(j_decompress_ptr cinfo, long num_bytes)</argsstring>
        <name>skip_input_data</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type>long</type>
          <declname>num_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdatasrc.c" line="120" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdatasrc.c" bodystart="120" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="jdatasrc_8c_1a88ff96ce0715859d252807775c34c8b3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void term_source</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>term_source</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdatasrc.c" line="161" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdatasrc.c" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="jdatasrc_8c_1a81d9d81a4b59c130c6501dc8db0619a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jpeg_stdio_src</definition>
        <argsstring>(j_decompress_ptr cinfo, unsigned char *infile)</argsstring>
        <name>jpeg_stdio_src</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>infile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdatasrc.c" line="174" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdatasrc.c" bodystart="174" bodyend="204"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>jdatasrc.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1994,<sp/>Thomas<sp/>G.<sp/>Lane.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Independent<sp/>JPEG<sp/>Group&apos;s<sp/>software.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>conditions<sp/>of<sp/>distribution<sp/>and<sp/>use,<sp/>see<sp/>the<sp/>accompanying<sp/>README<sp/>file.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>decompression<sp/>data<sp/>source<sp/>routines<sp/>for<sp/>the<sp/>case<sp/>of</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>reading<sp/>JPEG<sp/>data<sp/>from<sp/>a<sp/>file<sp/>(or<sp/>any<sp/>stdio<sp/>stream).<sp/><sp/>While<sp/>these<sp/>routines</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>are<sp/>sufficient<sp/>for<sp/>most<sp/>applications,<sp/>some<sp/>will<sp/>want<sp/>to<sp/>use<sp/>a<sp/>different</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>source<sp/>manager.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>IMPORTANT:<sp/>we<sp/>assume<sp/>that<sp/>fread()<sp/>will<sp/>correctly<sp/>transcribe<sp/>an<sp/>array<sp/>of</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>JOCTETs<sp/>from<sp/>8-bit-wide<sp/>elements<sp/>on<sp/>external<sp/>storage.<sp/><sp/>If<sp/>char<sp/>is<sp/>wider</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>than<sp/>8<sp/>bits<sp/>on<sp/>your<sp/>machine,<sp/>you<sp/>may<sp/>need<sp/>to<sp/>do<sp/>some<sp/>tweaking.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>not<sp/>a<sp/>core<sp/>library<sp/>module,<sp/>so<sp/>it<sp/>doesn&apos;t<sp/>define<sp/>JPEG_INTERNALS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jinclude.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jpeglib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jerror.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Expanded<sp/>data<sp/>source<sp/>object<sp/>for<sp/>stdio<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__source__mgr" kindref="compound">jpeg_source_mgr</ref><sp/>pub;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>public<sp/>fields<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*infile;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>source<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>JOCTET<sp/>*<sp/>buffer;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>start<sp/>of<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>start_of_file;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>have<sp/>we<sp/>gotten<sp/>any<sp/>data<sp/>yet?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">}<sp/><ref refid="structmy__source__mgr" kindref="compound">my_source_mgr</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structmy__source__mgr" kindref="compound">my_source_mgr</ref><sp/>*<sp/><ref refid="structmy__source__mgr" kindref="compound">my_src_ptr</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INPUT_BUF_SIZE<sp/><sp/>4096<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>choose<sp/>an<sp/>efficiently<sp/>fread&apos;able<sp/>size<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>Initialize<sp/>source<sp/>---<sp/>called<sp/>by<sp/>jpeg_read_header</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>before<sp/>any<sp/>data<sp/>is<sp/>actually<sp/>read.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">init_source<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><ref refid="structmy__source__mgr" kindref="compound">my_src_ptr</ref><sp/>src<sp/>=<sp/>(<ref refid="structmy__source__mgr" kindref="compound">my_src_ptr</ref>)<sp/>cinfo-&gt;src;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>reset<sp/>the<sp/>empty-input-file<sp/>flag<sp/>for<sp/>each<sp/>image,</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/>*<sp/>but<sp/>we<sp/>don&apos;t<sp/>clear<sp/>the<sp/>input<sp/>buffer.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/>*<sp/>This<sp/>is<sp/>correct<sp/>behavior<sp/>for<sp/>reading<sp/>a<sp/>series<sp/>of<sp/>images<sp/>from<sp/>one<sp/>source.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>src-&gt;start_of_file<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>Fill<sp/>the<sp/>input<sp/>buffer<sp/>---<sp/>called<sp/>whenever<sp/>buffer<sp/>is<sp/>emptied.</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>In<sp/>typical<sp/>applications,<sp/>this<sp/>should<sp/>read<sp/>fresh<sp/>data<sp/>into<sp/>the<sp/>buffer</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>(ignoring<sp/>the<sp/>current<sp/>state<sp/>of<sp/>next_input_byte<sp/>&amp;<sp/>bytes_in_buffer),</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>reset<sp/>the<sp/>pointer<sp/>&amp;<sp/>count<sp/>to<sp/>the<sp/>start<sp/>of<sp/>the<sp/>buffer,<sp/>and<sp/>return<sp/>TRUE</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>indicating<sp/>that<sp/>the<sp/>buffer<sp/>has<sp/>been<sp/>reloaded.<sp/><sp/>It<sp/>is<sp/>not<sp/>necessary<sp/>to</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>fill<sp/>the<sp/>buffer<sp/>entirely,<sp/>only<sp/>to<sp/>obtain<sp/>at<sp/>least<sp/>one<sp/>more<sp/>byte.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>There<sp/>is<sp/>no<sp/>such<sp/>thing<sp/>as<sp/>an<sp/>EOF<sp/>return.<sp/><sp/>If<sp/>the<sp/>end<sp/>of<sp/>the<sp/>file<sp/>has<sp/>been</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>reached,<sp/>the<sp/>routine<sp/>has<sp/>a<sp/>choice<sp/>of<sp/>ERREXIT()<sp/>or<sp/>inserting<sp/>fake<sp/>data<sp/>into</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>the<sp/>buffer.<sp/><sp/>In<sp/>most<sp/>cases,<sp/>generating<sp/>a<sp/>warning<sp/>message<sp/>and<sp/>inserting<sp/>a</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>fake<sp/>EOI<sp/>marker<sp/>is<sp/>the<sp/>best<sp/>course<sp/>of<sp/>action<sp/>---<sp/>this<sp/>will<sp/>allow<sp/>the</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>decompressor<sp/>to<sp/>output<sp/>however<sp/>much<sp/>of<sp/>the<sp/>image<sp/>is<sp/>there.<sp/><sp/>However,</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>the<sp/>resulting<sp/>error<sp/>message<sp/>is<sp/>misleading<sp/>if<sp/>the<sp/>real<sp/>problem<sp/>is<sp/>an<sp/>empty</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>input<sp/>file,<sp/>so<sp/>we<sp/>handle<sp/>that<sp/>case<sp/>specially.</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>In<sp/>applications<sp/>that<sp/>need<sp/>to<sp/>be<sp/>able<sp/>to<sp/>suspend<sp/>compression<sp/>due<sp/>to<sp/>input</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>not<sp/>being<sp/>available<sp/>yet,<sp/>a<sp/>FALSE<sp/>return<sp/>indicates<sp/>that<sp/>no<sp/>more<sp/>data<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/>obtained<sp/>right<sp/>now,<sp/>but<sp/>more<sp/>may<sp/>be<sp/>forthcoming<sp/>later.<sp/><sp/>In<sp/>this<sp/>situation,</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/>the<sp/>decompressor<sp/>will<sp/>return<sp/>to<sp/>its<sp/>caller<sp/>(with<sp/>an<sp/>indication<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>number<sp/>of<sp/>scanlines<sp/>it<sp/>has<sp/>read,<sp/>if<sp/>any).<sp/><sp/>The<sp/>application<sp/>should<sp/>resume</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/>decompression<sp/>after<sp/>it<sp/>has<sp/>loaded<sp/>more<sp/>data<sp/>into<sp/>the<sp/>input<sp/>buffer.<sp/><sp/>Note</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>that<sp/>there<sp/>are<sp/>substantial<sp/>restrictions<sp/>on<sp/>the<sp/>use<sp/>of<sp/>suspension<sp/>---<sp/>see</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/>the<sp/>documentation.</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/>When<sp/>suspending,<sp/>the<sp/>decompressor<sp/>will<sp/>back<sp/>up<sp/>to<sp/>a<sp/>convenient<sp/>restart<sp/>point</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/>(typically<sp/>the<sp/>start<sp/>of<sp/>the<sp/>current<sp/>MCU).<sp/>next_input_byte<sp/>&amp;<sp/>bytes_in_buffer</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/>indicate<sp/>where<sp/>the<sp/>restart<sp/>point<sp/>will<sp/>be<sp/>if<sp/>the<sp/>current<sp/>call<sp/>returns<sp/>FALSE.</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/>Data<sp/>beyond<sp/>this<sp/>point<sp/>must<sp/>be<sp/>rescanned<sp/>after<sp/>resumption,<sp/>so<sp/>move<sp/>it<sp/>to</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/>the<sp/>front<sp/>of<sp/>the<sp/>buffer<sp/>rather<sp/>than<sp/>discarding<sp/>it.</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">fill_input_buffer<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="structmy__source__mgr" kindref="compound">my_src_ptr</ref><sp/>src<sp/>=<sp/>(<ref refid="structmy__source__mgr" kindref="compound">my_src_ptr</ref>)<sp/>cinfo-&gt;src;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>memcpy(<sp/>src-&gt;buffer,<sp/>src-&gt;infile,<sp/>INPUT_BUF_SIZE<sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>src-&gt;infile<sp/>+=<sp/>INPUT_BUF_SIZE;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>src-&gt;pub.next_input_byte<sp/>=<sp/>src-&gt;buffer;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>src-&gt;pub.bytes_in_buffer<sp/>=<sp/>INPUT_BUF_SIZE;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>src-&gt;start_of_file<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*<sp/>Skip<sp/>data<sp/>---<sp/>used<sp/>to<sp/>skip<sp/>over<sp/>a<sp/>potentially<sp/>large<sp/>amount<sp/>of</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*<sp/>uninteresting<sp/>data<sp/>(such<sp/>as<sp/>an<sp/>APPn<sp/>marker).</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/>Writers<sp/>of<sp/>suspendable-input<sp/>applications<sp/>must<sp/>note<sp/>that<sp/>skip_input_data</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/>is<sp/>not<sp/>granted<sp/>the<sp/>right<sp/>to<sp/>give<sp/>a<sp/>suspension<sp/>return.<sp/><sp/>If<sp/>the<sp/>skip<sp/>extends</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/>beyond<sp/>the<sp/>data<sp/>currently<sp/>in<sp/>the<sp/>buffer,<sp/>the<sp/>buffer<sp/>can<sp/>be<sp/>marked<sp/>empty<sp/>so</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/>that<sp/>the<sp/>next<sp/>read<sp/>will<sp/>cause<sp/>a<sp/>fill_input_buffer<sp/>call<sp/>that<sp/>can<sp/>suspend.</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/>Arranging<sp/>for<sp/>additional<sp/>bytes<sp/>to<sp/>be<sp/>discarded<sp/>before<sp/>reloading<sp/>the<sp/>input</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/>buffer<sp/>is<sp/>the<sp/>application<sp/>writer&apos;s<sp/>problem.</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">skip_input_data<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>num_bytes)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><ref refid="structmy__source__mgr" kindref="compound">my_src_ptr</ref><sp/>src<sp/>=<sp/>(<ref refid="structmy__source__mgr" kindref="compound">my_src_ptr</ref>)<sp/>cinfo-&gt;src;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Just<sp/>a<sp/>dumb<sp/>implementation<sp/>for<sp/>now.<sp/><sp/>Could<sp/>use<sp/>fseek()<sp/>except</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/>*<sp/>it<sp/>doesn&apos;t<sp/>work<sp/>on<sp/>pipes.<sp/><sp/>Not<sp/>clear<sp/>that<sp/>being<sp/>smart<sp/>is<sp/>worth</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/>*<sp/>any<sp/>trouble<sp/>anyway<sp/>---<sp/>large<sp/>skips<sp/>are<sp/>infrequent.</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>if<sp/>(num_bytes<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(num_bytes<sp/>&gt;<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>src-&gt;pub.bytes_in_buffer)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_bytes<sp/>-=<sp/>(long)<sp/>src-&gt;pub.bytes_in_buffer;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>fill_input_buffer(cinfo);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>note<sp/>we<sp/>assume<sp/>that<sp/>fill_input_buffer<sp/>will<sp/>never<sp/>return<sp/>FALSE,</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>so<sp/>suspension<sp/>need<sp/>not<sp/>be<sp/>handled.</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>src-&gt;pub.next_input_byte<sp/>+=<sp/>(size_t)<sp/>num_bytes;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>src-&gt;pub.bytes_in_buffer<sp/>-=<sp/>(size_t)<sp/>num_bytes;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*<sp/>An<sp/>additional<sp/>method<sp/>that<sp/>can<sp/>be<sp/>provided<sp/>by<sp/>data<sp/>source<sp/>modules<sp/>is<sp/>the</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/>resync_to_restart<sp/>method<sp/>for<sp/>error<sp/>recovery<sp/>in<sp/>the<sp/>presence<sp/>of<sp/>RST<sp/>markers.</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*<sp/>For<sp/>the<sp/>moment,<sp/>this<sp/>source<sp/>module<sp/>just<sp/>uses<sp/>the<sp/>default<sp/>resync<sp/>method</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*<sp/>provided<sp/>by<sp/>the<sp/>JPEG<sp/>library.<sp/><sp/>That<sp/>method<sp/>assumes<sp/>that<sp/>no<sp/>backtracking</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*<sp/>is<sp/>possible.</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*<sp/>Terminate<sp/>source<sp/>---<sp/>called<sp/>by<sp/>jpeg_finish_decompress</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*<sp/>after<sp/>all<sp/>data<sp/>has<sp/>been<sp/>read.<sp/><sp/>Often<sp/>a<sp/>no-op.</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*<sp/>NB:<sp/>*not*<sp/>called<sp/>by<sp/>jpeg_abort<sp/>or<sp/>jpeg_destroy;<sp/>surrounding</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*<sp/>application<sp/>must<sp/>deal<sp/>with<sp/>any<sp/>cleanup<sp/>that<sp/>should<sp/>happen<sp/>even</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*<sp/>for<sp/>error<sp/>exit.</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal">term_source<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>work<sp/>necessary<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*<sp/>Prepare<sp/>for<sp/>input<sp/>from<sp/>a<sp/>stdio<sp/>stream.</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*<sp/>The<sp/>caller<sp/>must<sp/>have<sp/>already<sp/>opened<sp/>the<sp/>stream,<sp/>and<sp/>is<sp/>responsible</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*<sp/>for<sp/>closing<sp/>it<sp/>after<sp/>finishing<sp/>decompression.</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">GLOBAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal">jpeg_stdio_src<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*infile)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><ref refid="structmy__source__mgr" kindref="compound">my_src_ptr</ref><sp/>src;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>source<sp/>object<sp/>and<sp/>input<sp/>buffer<sp/>are<sp/>made<sp/>permanent<sp/>so<sp/>that<sp/>a<sp/>series</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/>*<sp/>of<sp/>JPEG<sp/>images<sp/>can<sp/>be<sp/>read<sp/>from<sp/>the<sp/>same<sp/>file<sp/>by<sp/>calling<sp/>jpeg_stdio_src</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/>*<sp/>only<sp/>before<sp/>the<sp/>first<sp/>one.<sp/><sp/>(If<sp/>we<sp/>discarded<sp/>the<sp/>buffer<sp/>at<sp/>the<sp/>end<sp/>of</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/>*<sp/>one<sp/>image,<sp/>we&apos;d<sp/>likely<sp/>lose<sp/>the<sp/>start<sp/>of<sp/>the<sp/>next<sp/>one.)</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/>*<sp/>This<sp/>makes<sp/>it<sp/>unsafe<sp/>to<sp/>use<sp/>this<sp/>manager<sp/>and<sp/>a<sp/>different<sp/>source</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/>*<sp/>manager<sp/>serially<sp/>with<sp/>the<sp/>same<sp/>JPEG<sp/>object.<sp/><sp/>Caveat<sp/>programmer.</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;src<sp/>==<sp/>NULL)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>first<sp/>time<sp/>for<sp/>this<sp/>JPEG<sp/>object?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;src<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__source__mgr" kindref="compound">jpeg_source_mgr</ref><sp/>*)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_PERMANENT,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SIZEOF(<ref refid="structmy__source__mgr" kindref="compound">my_source_mgr</ref>));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>src<sp/>=<sp/>(<ref refid="structmy__source__mgr" kindref="compound">my_src_ptr</ref>)<sp/>cinfo-&gt;src;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>src-&gt;buffer<sp/>=<sp/>(JOCTET<sp/>*)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_PERMANENT,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INPUT_BUF_SIZE<sp/>*<sp/>SIZEOF(JOCTET));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>src<sp/>=<sp/>(<ref refid="structmy__source__mgr" kindref="compound">my_src_ptr</ref>)<sp/>cinfo-&gt;src;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>src-&gt;pub.init_source<sp/>=<sp/>init_source;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>src-&gt;pub.fill_input_buffer<sp/>=<sp/>fill_input_buffer;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>src-&gt;pub.skip_input_data<sp/>=<sp/>skip_input_data;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>src-&gt;pub.resync_to_restart<sp/>=<sp/>jpeg_resync_to_restart;<sp/></highlight><highlight class="comment">/*<sp/>use<sp/>default<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>src-&gt;pub.term_source<sp/>=<sp/>term_source;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>src-&gt;infile<sp/>=<sp/>infile;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>src-&gt;pub.bytes_in_buffer<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>forces<sp/>fill_input_buffer<sp/>on<sp/>first<sp/>read<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>src-&gt;pub.next_input_byte<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">/*<sp/>until<sp/>buffer<sp/>loaded<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdatasrc.c"/>
  </compounddef>
</doxygen>
